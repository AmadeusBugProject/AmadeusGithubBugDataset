{"projectName": "redisson/redisson", "bugLabels": ["bug", "redis vendor bug"], "captureTime": "Fri Jul  3 23:13:35 2020", "issues": [{"title": "Don't handle empty sentinels list", "body": "", "url": "https://github.com/redisson/redisson/issues/2885", "user": "mrniko", "labels": ["bug"], "created": "2020-07-02 06:45:37", "closed": "2020-07-02 06:46:21", "commits": {"97bf4922d385a73a86db543cce2288b6cdbb0809": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "97bf4922d385a73a86db543cce2288b6cdbb0809", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["86abbb03260e584cbad78faa2cfaab7b2c56034c"], "nameRev": "97bf4922d385a73a86db543cce2288b6cdbb0809 tags/redisson-3.13.2~1", "commitMessage": "Fixed - Don't handle empty sentinels list #2885\n", "commitDateTime": "2020-07-02 09:49:30", "authoredDateTime": "2020-07-02 09:49:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.connection.SentinelServersConfig,org.redisson.connection.RedisConnection,java.util.Iterator)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["97bf4922d385a73a86db543cce2288b6cdbb0809"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.connection.SentinelServersConfig,org.redisson.connection.RedisConnection,java.util.Iterator)"]}, {"title": "RMapCache.clear() method shouldn't clear maxSize option", "body": "", "url": "https://github.com/redisson/redisson/issues/2884", "user": "mrniko", "labels": ["bug"], "created": "2020-07-02 06:38:37", "closed": "2020-07-02 06:41:46", "commits": {"86abbb03260e584cbad78faa2cfaab7b2c56034c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "86abbb03260e584cbad78faa2cfaab7b2c56034c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["dd119d369c73bff0bb79dc27fe606f9b6edc5e5f"], "nameRev": "86abbb03260e584cbad78faa2cfaab7b2c56034c tags/redisson-3.13.2~2", "commitMessage": "Fixed - RMapCache.clear() method shouldn't clear maxSize option #2884\n", "commitDateTime": "2020-07-02 09:44:48", "authoredDateTime": "2020-07-02 09:44:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.clear()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["86abbb03260e584cbad78faa2cfaab7b2c56034c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.clear()"]}, {"title": "Sentinel hostname isn't used for ssl connection during Redisson startup", "body": "", "url": "https://github.com/redisson/redisson/issues/2879", "user": "mrniko", "labels": ["bug"], "created": "2020-06-30 06:41:01", "closed": "2020-06-30 06:41:58", "commits": {"80507cecfad1f6f27787f7c7af3831a0c641b7c1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "80507cecfad1f6f27787f7c7af3831a0c641b7c1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6d905590009f81c4eb02e73638e8cd1c4df9fddf"], "nameRev": "80507cecfad1f6f27787f7c7af3831a0c641b7c1 tags/redisson-3.13.2~5", "commitMessage": "Fixed - Sentinel hostname isn't used for ssl connection during Redisson startup #2879\n", "commitDateTime": "2020-06-30 09:44:53", "authoredDateTime": "2020-06-30 09:44:53", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["80507cecfad1f6f27787f7c7af3831a0c641b7c1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager"]}, {"title": "RedissonAtomicDouble#getAndSet() method throws NPE", "body": "", "url": "https://github.com/redisson/redisson/issues/2875", "user": "mrniko", "labels": ["bug"], "created": "2020-06-29 06:04:51", "closed": "2020-06-29 06:05:20", "commits": {"fdcd543ae0cff820ba4f8207f59a4ecb1770deef": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fdcd543ae0cff820ba4f8207f59a4ecb1770deef", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5dcfdfd8fcc4cc82b9c3c2a7313bf7b065e88d8c"], "nameRev": "fdcd543ae0cff820ba4f8207f59a4ecb1770deef tags/redisson-3.13.2~7", "commitMessage": "Fixed - RedissonAtomicDouble#getAndSet() method throws NPE. #2875\n", "commitDateTime": "2020-06-29 09:08:31", "authoredDateTime": "2020-06-29 09:08:31", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonAtomicDouble.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/convertor/DoubleReplayConvertor.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "redisson/src/test/java/org/redisson/RedissonAtomicDoubleTest.java", "insertions": 9, "deletions": 3, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonAtomicDouble.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonAtomicDouble.getAndSetAsync(double)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DoubleReplayConvertor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.convertor.DoubleReplayConvertor.convert(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.protocol.convertor.DoubleReplayConvertor", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonAtomicDoubleTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonAtomicDoubleTest.testGetAndSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fdcd543ae0cff820ba4f8207f59a4ecb1770deef"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 2, "lines": 14, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 7, "UPD": 1, "INS": 5, "MOV": 0, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/client/protocol/convertor"], "changesInPackagesSPOON": ["org.redisson.client.protocol.convertor.DoubleReplayConvertor.convert(java.lang.Object)", "org.redisson.client.protocol.convertor.DoubleReplayConvertor", "org.redisson.client.protocol", "org.redisson.RedissonAtomicDouble.getAndSetAsync(double)"]}, {"title": "RedissonAtomicLong#getAndSet throws NullPointerException when value does not exist yet", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n\r\n\r\n**Expected behavior**\r\nEither no Exception (just create the value, getAndSet shoudl be able to create the value as well) or documented behaviour \r\n\r\n**Actual behavior**\r\nNull Pointer Exception, but only during first execution. Reproducible if I manually delete the value in Redis again\r\n\r\n**Steps to reproduce or test case**\r\nMy code looked like that:\r\n```java\r\n        RAtomicLong counterInDb = redissonClient.getAtomicLong(COUNTER);\r\n        if (counterInDb != null)\r\n            return counterInDb.getAndSet(0);\r\n        else {\r\n            return 0;\r\n        }\r\n```\r\nWhen the value does not exist yet, counterInDb is not null but calling getAndSet on it without checking isExists as well in the if gives me a NullPointerException at RedissonAtomicLong.java:122. This is quite confusing as \r\n1) The Null Pointer Exception is from the implicit cast from Long to long, which makes it really hard to spot\r\n2) There is no JavaDoc warning that this might happen\r\n\r\n**Redis version**\r\ndocker.io/bitnami/redis:6.0.5-debian-10-r10\r\n\r\n**Redisson version**\r\n3.13.1\r\n\r\n**Redisson configuration**\r\n```java\r\n        Config config = new Config();\r\n        config.useSingleServer()\r\n                .setAddress(\"redis://redis-kube-master.default.svc.cluster.local:6379\")\r\n                .setPassword(getRedisPassword());\r\n```", "url": "https://github.com/redisson/redisson/issues/2874", "user": "StefanLobbenmeier", "labels": ["bug"], "created": "2020-06-28 23:45:56", "closed": "2020-06-29 06:01:21", "commits": {"5dcfdfd8fcc4cc82b9c3c2a7313bf7b065e88d8c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5dcfdfd8fcc4cc82b9c3c2a7313bf7b065e88d8c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ca1753a045ab8fc354055891f754c3a9dad6ea4b"], "nameRev": "5dcfdfd8fcc4cc82b9c3c2a7313bf7b065e88d8c tags/redisson-3.13.2~8", "commitMessage": "Fixed - RedissonAtomicLong#getAndSet() method throws NPE. #2874\n", "commitDateTime": "2020-06-29 09:04:09", "authoredDateTime": "2020-06-29 09:04:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonAtomicLong.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/test/java/org/redisson/RedissonAtomicLongTest.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonAtomicLong.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonAtomicLong.getAndSetAsync(long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonAtomicLongTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonAtomicLongTest.testGetAndSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5dcfdfd8fcc4cc82b9c3c2a7313bf7b065e88d8c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonAtomicLong.getAndSetAsync(long)", "org.redisson.client.protocol"]}, {"title": "RedissonBloomFilter NullPointerException", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\nprint error message\r\n**Actual behavior**\r\njava.lang.NullPointerException\r\n**Steps to reproduce or test case**\r\n/org/redisson/RedissonBloomFilter.java:185\r\n            try {\r\n                List<Boolean> result = (List<Boolean>) executorService.execute();\r\n\r\n                for (Boolean val : result.subList(1, result.size()-1)) {\r\n                    if (!val) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            } catch (RedisException e) {\r\n                if (!e.getMessage().contains(\"Bloom filter config has been changed\")) {\r\n                    throw e;\r\n                }\r\n            }\r\nex:\r\norg.redisson.client.RedisMovedException AND message is null\r\n\r\n**Redis version**\r\n3.0.7\r\n**Redisson version**\r\n3.11.3\r\n**Redisson configuration**\r\n ClusterServersConfig clusterServersConfig = config.useClusterServers();", "url": "https://github.com/redisson/redisson/issues/2871", "user": "Pushuai", "labels": ["bug"], "created": "2020-06-28 03:14:28", "closed": "2020-06-29 06:07:33", "commits": {"6d905590009f81c4eb02e73638e8cd1c4df9fddf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "6d905590009f81c4eb02e73638e8cd1c4df9fddf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fdcd543ae0cff820ba4f8207f59a4ecb1770deef"], "nameRev": "6d905590009f81c4eb02e73638e8cd1c4df9fddf tags/redisson-3.13.2~6", "commitMessage": "Fixed - RBloomFilter methods throw NPE in case of error. #2871\n", "commitDateTime": "2020-06-29 09:10:44", "authoredDateTime": "2020-06-29 09:10:44", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBloomFilter.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBloomFilter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBloomFilter.tryInit(long,double)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.add(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.contains(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6d905590009f81c4eb02e73638e8cd1c4df9fddf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBloomFilter.contains(java.lang.Object)", "org.redisson.RedissonBloomFilter.tryInit(long,double)", "org.redisson.RedissonBloomFilter.add(java.lang.Object)"]}, {"title": "RedissonSetMultimap and RedissonListMultimap  has a bug here.  get(\"key\").delete() will throw exception", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\norg.redisson.client.RedisException: ERR Error running script (call to f_e26640977179bbd6382a41b36c8190a8dbccc7d1): @user_script:1: WRONGTYPE Operation against a key holding the wrong kind of value . channel: [id: 0x08807cdc, L:/172.31.23.38:40618 - R:/172.31.10.223:17005] command: (EVAL), params: [local res = redis.call('hdel', KEYS[1], unpack(ARGV)); if res > 0 then redis.call('del', unpack(KEYS..., 1, {bcgame:crash:user-bet-logs}:o76cyhOJyzKx+WqXE/JGLg, PooledUnsafeDirectByteBuf(ridx: 0, widx: 6, cap: 256)]\r\n\r\n**Expected behavior**\r\n```java\r\nList<Object> listKeys = Arrays.<Object>asList( BugfixRedissonSetMultimap.this.getName(), setName );\r\nByteBuf keyState = encodeMapKey(key);\r\nreturn BugfixRedissonSetMultimap.this.fastRemoveAsync(Arrays.<Object>asList(keyState), listKeys, RedisCommands.EVAL_BOOLEAN_AMOUNT);\r\n```\r\n**Actual behavior**\r\n```java\r\nByteBuf keyState = encodeMapKey(key);\r\nreturn RedissonSetMultimap.this.fastRemoveAsync(Arrays.<Object>asList(keyState), Arrays.<Object>asList(setName), RedisCommands.EVAL_BOOLEAN_AMOUNT);\r\n```\r\n**Steps to reproduce or test case**\r\n```java\r\nRSetMultimap<String, Long> testMap = redisson.getSetMultimap( \"test-2\" );\r\nRListMultimap<String, Long> testList = redisson.getListMultimap( \"test-3\" );\r\ntry {\r\n\ttestList.clear();\r\n\ttestList.put( \"t1\", 1L );\r\n\ttestList.put( \"t1\", 2L );\r\n\ttestList.put( \"t1\", 3L );\r\n\tRList<Long> list = testList.get( \"t1\" );\r\n\t\r\n\tlist.delete();\r\n\tAssert.isTrue( testList.size() == 0 && testList.get( \"t1\" ).size() == 0, \"List fail\" );\r\n\t\t\t\r\n\ttestMap.clear();\r\n\ttestMap.put( \"t1\", 1L );\r\n\ttestMap.put( \"t1\", 2L );\r\n\ttestMap.put( \"t1\", 3L );\r\n\tRSet<Long> set = testMap.get( \"t1\" );\r\n\t\t\t\r\n\tset.delete();\r\n\tAssert.isTrue( testMap.size() == 0 && testMap.get( \"t1\" ).size() == 0, \"Map fail\" );\r\n\t\t\t\r\n\tSystem.out.println( \"success\" );\r\n} finally {\r\n\ttestList.clear();\r\n\ttestMap.clear();\r\n\tredisson.shutdown();\r\n}\r\n```\r\n**Redis version**\r\n\r\n**Redisson version**\r\n3.13.1\r\n**Redisson configuration**\r\n", "url": "https://github.com/redisson/redisson/issues/2857", "user": "541595308", "labels": ["bug"], "created": "2020-06-19 06:51:06", "closed": "2020-06-19 09:15:12", "commits": {"08ff345f079c28a06a750f4f6053d37689c6fc0f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "08ff345f079c28a06a750f4f6053d37689c6fc0f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f56f8fc92121bd75d9244c6fcfa2cf66c8c4f7db"], "nameRev": "08ff345f079c28a06a750f4f6053d37689c6fc0f tags/redisson-3.13.2~16", "commitMessage": "Fixed - RSetMultimap.get().delete() and RListMultimap.get().delete() methods throw exception. #2857\n", "commitDateTime": "2020-06-19 12:18:03", "authoredDateTime": "2020-06-19 12:18:03", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonListMultimap.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimap.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/RedissonListMultimapTest.java", "insertions": 19, "deletions": 15, "lines": 34}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetMultimapTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonListMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimap.get(java.lang.Object).1.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonListMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimapTest.testDelete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testDelete()", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["08ff345f079c28a06a750f4f6053d37689c6fc0f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonListMultimap.get(java.lang.Object).1.deleteAsync()", "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.deleteAsync()"]}, {"title": "Connection leak if SSL connection got reconnected", "body": "", "url": "https://github.com/redisson/redisson/issues/2845", "user": "mrniko", "labels": ["bug"], "created": "2020-06-17 04:58:19", "closed": "2020-06-17 05:00:03", "commits": {"b707fe8e297bcc9dbf36e83684e667ecc387769b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b707fe8e297bcc9dbf36e83684e667ecc387769b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["75e320663f0d5dbcac1691f29344d20cc9046820"], "nameRev": "b707fe8e297bcc9dbf36e83684e667ecc387769b tags/redisson-3.13.2~22", "commitMessage": "Fixed - Connection leak if SSL connection got reconnected. #2845\n", "commitDateTime": "2020-06-17 08:02:11", "authoredDateTime": "2020-06-17 08:02:11", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/RedisChannelInitializer.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.close()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisChannelInitializer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.RedisChannelInitializer.initSsl(org.redisson.client.RedisClientConfig,org.redisson.client.handler.Channel).1.userEventTriggered(org.redisson.client.handler.ChannelHandlerContext,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b707fe8e297bcc9dbf36e83684e667ecc387769b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler", "redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisConnection.close()", "org.redisson.client.handler.RedisChannelInitializer.initSsl(org.redisson.client.RedisClientConfig,org.redisson.client.handler.Channel).1.userEventTriggered(org.redisson.client.handler.ChannelHandlerContext,java.lang.Object)"]}, {"title": "Blocking commands connected to Redis Cluster aren't resubscribed after Master node failover", "body": "", "url": "https://github.com/redisson/redisson/issues/2832", "user": "mrniko", "labels": ["bug"], "created": "2020-06-12 08:11:08", "closed": "2020-06-12 08:12:30", "commits": {"82fbf7694b6b389b3cf2eee87d38b7811bce834a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "82fbf7694b6b389b3cf2eee87d38b7811bce834a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e58f84fa9365114ab1c921e2daddaa07592b3d0f"], "nameRev": "82fbf7694b6b389b3cf2eee87d38b7811bce834a tags/redisson-3.13.2~24", "commitMessage": "Fixed - Blocking commands connected to Redis Cluster aren't resubscribed after Master node failover. #2832\n", "commitDateTime": "2020-06-12 11:14:40", "authoredDateTime": "2020-06-12 11:14:40", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 30, "deletions": 11, "lines": 41}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 95, "deletions": 42, "lines": 137}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection)", "TOT": 15, "UPD": 10, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.protocol.CommandData)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.nodeDown(org.redisson.connection.ClientConnectionsEntry)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testFailoverInSentinel()", "TOT": 39, "UPD": 20, "INS": 0, "MOV": 11, "DEL": 8}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollFromAnyInCluster()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollFromAny()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTake()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTakeLastAndOfferFirstTo()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollLastAndOfferFirstTo()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTakeReattachCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTakeReattachSentinel()", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["82fbf7694b6b389b3cf2eee87d38b7811bce834a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 30, "deletions": 11, "lines": 41, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 24, "UPD": 10, "INS": 8, "MOV": 3, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection)", "org.redisson.connection.MasterSlaveEntry.nodeDown(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.protocol.CommandData)"]}, {"title": "Topic channels connected to master node aren't resubscribed", "body": "", "url": "https://github.com/redisson/redisson/issues/2825", "user": "mrniko", "labels": ["bug"], "created": "2020-06-09 06:51:57", "closed": "2020-06-09 07:31:04", "commits": {"3ed64caf111bd48de071723c7a0f035a4f6dd800": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3ed64caf111bd48de071723c7a0f035a4f6dd800", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["80728363f5a3357096ca78057a80b5fc7fecd0e6"], "nameRev": "3ed64caf111bd48de071723c7a0f035a4f6dd800 tags/redisson-3.13.1~4", "commitMessage": "Fixed - Topic channels connected to master node aren't resubscribed. #2825\n", "commitDateTime": "2020-06-09 10:33:48", "authoredDateTime": "2020-06-09 10:33:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdownEntry(org.redisson.connection.MasterSlaveEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.addEntry(java.lang.Integer,org.redisson.connection.MasterSlaveEntry)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.masterDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.nodeDown(org.redisson.connection.ClientConnectionsEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry)", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 9, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3ed64caf111bd48de071723c7a0f035a4f6dd800"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 5, "lines": 20, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 16, "UPD": 0, "INS": 6, "MOV": 10, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.masterDown()", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.MasterSlaveEntry.nodeDown(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.MasterSlaveConnectionManager.addEntry(java.lang.Integer,org.redisson.connection.MasterSlaveEntry)", "org.redisson.connection.MasterSlaveConnectionManager.shutdownEntry(org.redisson.connection.MasterSlaveEntry)"]}, {"title": "RedissonCacheStatisticsAutoConfiguration conditions not matched", "body": "**Expected behavior**\r\nI expect to get metrics of `RedissonSpringCacheManager`\r\n\r\n**Actual behavior**\r\nBut `RedissonCacheStatisticsAutoConfiguration` not matched to condition `@ConditionalOnBean({CacheManager.class, RedissonCache.class})`\r\nThe reason is that there isn't `RedissonCache` bean registered in context.\r\nIf you dive deep into `RedissonSpringCacheManager` you can see RedissonCache instance created, but not registered in ApplicationContext and it should not.\r\n\r\n`RedissonCacheStatisticsAutoConfiguration\":{\"notMatched\":[{\"condition\":\"OnBeanCondition\",\"message\":\"@ConditionalOnBean (types: org.springframework.cache.CacheManager,org.redisson.spring.cache.RedissonCache; SearchStrategy: all) did not find any beans of type org.redisson.spring.cache.RedissonCache\"}]`\r\n\r\n**Steps to reproduce or test case**\r\nFail case:\r\n1. Configure spring boot cache (see below)\r\n2. Configure spring-boot-starter-data-redis (ip, port, db)\r\n3. Use spring cache annotations on objects an methods\r\n4. check /actuator/metrics\r\nYou won't see any cache metrics\r\n Success case:\r\n1. Repeat all from Fail case (steps 1-3)\r\n2. Register `RedissonCacheMeterBinderProvider` on your own\r\n3. check /actuator/metrics\r\nYou will see cache.puts, cache.gets, cache.size metrics\r\n\r\n**Redisson version**\r\nredisson-spring-boot-starter - 3.13.0\r\nredisson - 3.13.0\r\n\r\n**Redisson configuration**\r\n```\r\n@Configuration\r\n@EnableCaching\r\npublic class CacheConfiguration {\r\n    @Bean\r\n    public CacheManager cacheManager(RedissonClient redissonClient, AbacCacheProperties properties) {\r\n        CacheConfig cacheConfig = new CacheConfig(properties.getTtl().toMillis(),\r\n                properties.getMaxIdleTime().toMillis());\r\n        cacheConfig.setMaxSize(properties.getMaxSize());\r\n\r\n        Map<String, CacheConfig> configMap = Arrays.stream(CacheName.ALL)\r\n                .collect(Collectors.toMap(Function.identity(), s -> cacheConfig));\r\n\r\n        return new RedissonSpringCacheManager(redissonClient, configMap);\r\n    }\r\n}\r\n```\r\n**Solution**\r\nChange conditions from\r\n```\r\n@Configuration\r\n@AutoConfigureAfter(CacheAutoConfiguration.class)\r\n@ConditionalOnBean({ CacheManager.class, RedissonCache.class })\r\n@ConditionalOnClass(CacheMeterBinderProvider.class)\r\n```\r\nto\r\n```\r\n@Configuration\r\n@AutoConfigureAfter(CacheAutoConfiguration.class)\r\n@ConditionalOnBean(CacheManager.class)\r\n@ConditionalOnClass({ CacheMeterBinderProvider.class, RedissonCache.class })\r\n```", "url": "https://github.com/redisson/redisson/issues/2823", "user": "paul-ovchinnikov", "labels": ["bug"], "created": "2020-06-09 05:09:08", "closed": "2020-06-09 05:12:47", "commits": {"80728363f5a3357096ca78057a80b5fc7fecd0e6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "80728363f5a3357096ca78057a80b5fc7fecd0e6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9afd311e1a69a2f37aa5c8f90f693fd1e3b0db6e"], "nameRev": "80728363f5a3357096ca78057a80b5fc7fecd0e6 tags/redisson-3.13.1~5", "commitMessage": "Fixed - RedissonCacheStatisticsAutoConfiguration conditions aren't match. #2823\n", "commitDateTime": "2020-06-09 08:15:27", "authoredDateTime": "2020-06-09 08:15:27", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/RedissonCacheStatisticsAutoConfiguration.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCacheStatisticsAutoConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["80728363f5a3357096ca78057a80b5fc7fecd0e6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/cache"], "changesInPackagesSPOON": ["org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration"]}, {"title": "[Cluster] scanning nodes stops if `ClusterConnectionManager#addMasterEntry` fails", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\nPeriodic scan of cluster nodes runs forever (every `scanInterval` milliseconds)\r\n\r\n**Actual behavior**\r\nPeriodic scan of cluster nodes stops when a single master is added to the cluster and Redisson cannot perform `CLUSTER INFO`\r\n\r\n**Steps to reproduce or test case**\r\nFailure to perform `CLUSTER INFO` is probably a side effect from another problem but I expect that Redisson can recover.\r\n \r\nI'm using a 6 nodes cluster in a VM (libvirt) environment on 3 virtual machines. Each VM hosts one master and one slave in way that master and slave happens to be on different VMs (master1 is on VM1, but slave1 is on VM2; master2 is on VM2, while slave2 is on VM3 and master3 is on VM3 while slave3 is on VM1). Hard stop VM2 which effectively disconnects master2 and slave1. Then I bring back VM2. Former master2 is no longer master so I promote it to be master again by executing `CLUSTER FAILOVER` on it. After I do so, Redisson attempts to reconnect to master2 but for unknown reason fails with:\r\n```\r\n201471 [redisson-timer-4-1] ERROR o.r.c.ClusterConnectionManager - Can't execute CLUSTER_INFO for /10.1.1.12:6379\r\norg.redisson.client.RedisTimeoutException: Command execution timeout for command: (CLUSTER INFO), params: [], Redis client: [addr=redis://10.1.1.12:6379]\r\n\tat org.redisson.client.RedisConnection.lambda$async$1(RedisConnection.java:207)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:672)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:747)\r\n\tat io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:472)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\n**Redis version**\r\nRedis 6.0.4\r\n\r\n**Redisson version**\r\n3.13.0\r\n\r\n**Redisson configuration**\r\nAll defaults, except `useClusterServer` and one node address.\r\n\r\n\r\n**Notes** \r\n\r\nI traced back the issue to `org.redisson.cluster.ClusterConnectionManager#checkMasterNodesChange`:\r\n```java\r\nfor (ClusterPartition newPart : addedPartitions.values()) {\r\n    RFuture<Collection<RFuture<Void>>> future = addMasterEntry(newPart, cfg);\r\n    future.onComplete((res, e) -> {\r\n        if (e == null) {\r\n            futures.addAll(res);\r\n        }\r\n        \r\n        if (masters.decrementAndGet() == 0) {\r\n            AtomicInteger nodes = new AtomicInteger(futures.size());\r\n            for (RFuture<Void> nodeFuture : futures) {\r\n                nodeFuture.onComplete((r, ex) -> {\r\n                    if (nodes.decrementAndGet() == 0) {\r\n                        result.trySuccess(null);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n}\r\n```\r\n\r\n`addMasterEntry` returns failed future (`e` is not `null`) and ` futures.addAll(res);` is never executed. As a result `result` future is never resolved and the next round of scanning is not performed", "url": "https://github.com/redisson/redisson/issues/2822", "user": "svilenivanovsmule", "labels": ["bug", "redis-cluster"], "created": "2020-06-08 14:33:48", "closed": "2020-06-09 04:44:46", "commits": {"fd097a640c29d3e7776255deae09c7c227cb038f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fd097a640c29d3e7776255deae09c7c227cb038f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cbffaf33faea847641d920fc6ef7caf5e8353ef4"], "nameRev": "fd097a640c29d3e7776255deae09c7c227cb038f tags/redisson-3.13.1~7", "commitMessage": "Fixed - Cluster topology scanning stopped if error occured while adding new master. #2822\n", "commitDateTime": "2020-06-09 07:47:13", "authoredDateTime": "2020-06-09 07:47:13", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fd097a640c29d3e7776255deae09c7c227cb038f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)"]}, {"title": "StreamInfoDecoder relies on field order of XINFO response", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\nWhen using redis streams with redisson, the expected behaviour is, that redisson is able to identify the fields of the xinfo response for streams and fill the StreamInfo type accordingly.\r\n\r\n**Actual behavior**\r\nWhile switching from redis 5.0.6 to redis 6.0.4 I experienced, that the fields \"groups\" and \"last-generated-id\" have switched their positions. The result is, that I get an ClassCastException because redisson tries to cast the String \"last-generated-id\" to Long \"groups\".\r\n\r\n```\r\nJun 05 11:12:10 my-linux java[13004]: at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_181]\r\nJun 05 11:12:10 my-linux java[13004]: at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_181]\r\nJun 05 11:12:10 my-linux java[13004]: at java.lang.Thread.run(Thread.java:748) [?:1.8.0_181]\r\nJun 05 11:12:10 my-linux java[13004]: Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Long\r\nJun 05 11:12:10 my-linux java[13004]: at org.redisson.client.protocol.decoder.StreamInfoDecoder.decode(StreamInfoDecoder.java:45) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at org.redisson.client.protocol.decoder.StreamInfoDecoder.decode(StreamInfoDecoder.java:32) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at org.redisson.client.protocol.decoder.ListMultiDecoder2.decode(ListMultiDecoder2.java:46) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:421) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:377) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:196) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:134) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:501) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[LIB.jar!/:?]\r\nJun 05 11:12:10 my-linux java[13004]: ... 1 more\r\n```\r\n\r\n**Steps to reproduce or test case**\r\n- Use redis Version 6.0.4.\r\n- Connect redisson client to this database.\r\n- Get stream info with redisson RStream:\r\n```java\r\nRStream<String, StreamEntry> tmp = client.getStream(\"existing:redis:stream\");\r\ntmp.getInfo().getLastGeneratedId();\r\n```\r\n\r\n**Redis version**\r\n== 6.0.4\r\n\r\n**Redisson version**\r\n<= 3.13.0\r\n\r\n**Redisson configuration**\r\nsingleServerConfig:\r\n  address: 192.168.1.5", "url": "https://github.com/redisson/redisson/issues/2818", "user": "fawitte", "labels": ["bug"], "created": "2020-06-05 10:29:32", "closed": "2020-06-07 08:27:25", "commits": {"8ca291b0af8b7fa91eff4181776e7f5ee6305fdd": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "dd445b4370804086445ec74ca0e853767a8266a7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8ca291b0af8b7fa91eff4181776e7f5ee6305fdd", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["215582b726dafcd88f60f4f26109fe667b8f0031", "5fa162c3f8997e0ba7bacb97ce81eb808a61b65b"], "nameRev": "8ca291b0af8b7fa91eff4181776e7f5ee6305fdd tags/redisson-3.13.1~10", "commitMessage": "Merge pull request #2819 from fawitte/master\n\nFixed StreamInfoDecoder to adapt to layout of XINFO response. Possible solution for #2818", "commitDateTime": "2020-06-07 11:26:44", "authoredDateTime": "2020-06-07 11:26:44", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/StreamInfoDecoder.java", "insertions": 29, "deletions": 15, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StreamInfoDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.StreamInfoDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 61, "UPD": 17, "INS": 8, "MOV": 28, "DEL": 8}, {"spoonMethodName": "org.redisson.client.protocol.decoder.StreamInfoDecoder", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.StreamInfoDecoder.createStreamInfoEntry(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "dd445b4370804086445ec74ca0e853767a8266a7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8ca291b0af8b7fa91eff4181776e7f5ee6305fdd"], "nameRev": "dd445b4370804086445ec74ca0e853767a8266a7 tags/redisson-3.13.1~9", "commitMessage": "Fixed - StreamInfoDecoder relies on field order of XINFO response. #2818\n", "commitDateTime": "2020-06-08 08:19:05", "authoredDateTime": "2020-06-08 08:19:05", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/StreamInfoDecoder.java", "insertions": 5, "deletions": 3, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StreamInfoDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.StreamInfoDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 21, "UPD": 10, "INS": 2, "MOV": 7, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dd445b4370804086445ec74ca0e853767a8266a7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 3, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 21, "UPD": 10, "INS": 2, "MOV": 7, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol/decoder"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.StreamInfoDecoder.decode(java.util.List,org.redisson.client.handler.State)"]}, {"title": "The  poll(limit) in ReactiveQueue returns a MonoLift instead of Flux", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\nWhen call \r\n\r\n> RBlockingQueueReactive.poll(limit), \r\n\r\nI expect it returns \r\n\r\n> Flux<T>\r\n\r\n**Actual behavior**\r\nBut it returns below error, and the non-reactive lib is OK, is the reactive function provided in redisson PRO only?\r\n\r\n> java.lang.ClassCastException: class reactor.core.publisher.MonoLift cannot be cast to class reactor.core.publisher.Flux (reactor.core.publisher.MonoLift and reactor.core.publisher.Flux are in unnamed module of loader 'app')\r\n\tat com.sun.proxy.$Proxy199.poll(Unknown Source)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\n\r\n\r\n**Steps to reproduce or test case**\r\n\r\n`    \r\n\r\n> \r\n\r\n@GetMapping(value = \"/redis/pop\")\r\npublic Flux<String> pop() {\r\n        RBlockingQueueReactive<String> rbq = redissonClient.getBlockingQueue(\"RRedis-BQ\");\r\n        return rbq.poll(3);\r\n }\r\n`\r\n\r\n**Redisson version**\r\n3.12.* , 3.13.0\r\n", "url": "https://github.com/redisson/redisson/issues/2815", "user": "bradfordChiang", "labels": ["bug"], "created": "2020-06-03 08:22:05", "closed": "2020-06-04 07:40:52", "commits": {"3cac432efe89ddb58a13e77e964c913477838cff": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3cac432efe89ddb58a13e77e964c913477838cff", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["aaec5481239f7a323407e49659d7f73851050258"], "nameRev": "3cac432efe89ddb58a13e77e964c913477838cff tags/redisson-3.13.1~16", "commitMessage": "Fixed - RQueueReactive.poll(int limit) should return Mono<List<V>> and RQueueRx.poll(int limit) should return Single<List<V>>. #2815\n", "commitDateTime": "2020-06-04 10:43:35", "authoredDateTime": "2020-06-04 10:43:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/api/RQueueReactive.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/api/RQueueRx.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RQueueReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.api.poll(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RQueueRx.java", "spoonMethods": [{"spoonMethodName": "org.redisson.api.poll(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3cac432efe89ddb58a13e77e964c913477838cff"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/api"], "changesInPackagesSPOON": ["org.redisson.api.poll(int)"]}, {"title": "RedissonSetMultimap has a bug here redisson.getSetMultimap( \"\" ).removeAll( collection )", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\nYou need judge the size of set when executing hdel\r\n```java\r\nreturn commandExecutor.evalWriteAsync(BugfixRedissonSetMultimap.this.getName(), codec, RedisCommands.EVAL_BOOLEAN_AMOUNT,\r\n        \"local count = redis.call('srem', KEYS[2], unpack(ARGV, 2, #ARGV));\" + \r\n        \"if count > 0 then \" + \r\n            \"if redis.call('scard', KEYS[2]) == 0 then \" +\r\n                \"redis.call('hdel', KEYS[1], ARGV[1]); \" +\r\n            \"end;\" +\r\n            \"return 1;\" +\r\n        \"end;\" +\r\n         \"return 0; \",\r\n    Arrays.<Object>asList(BugfixRedissonSetMultimap.this.getName(), setName), \r\n    args.toArray());\r\n```\r\n\r\n**Actual behavior**\r\nRedissonSetMultimap Line 192\r\n```java\r\nreturn commandExecutor.evalWriteAsync(RedissonSetMultimap.this.getName(), codec, RedisCommands.EVAL_BOOLEAN_AMOUNT,\r\n        \"local count = redis.call('srem', KEYS[2], unpack(ARGV, 2, #ARGV));\" + \r\n        \"redis.call('hdel', KEYS[1], ARGV[1]); \" +\r\n        \"if count > 0 then \"\r\n          + \"return 1;\"\r\n    + \"end;\" +\r\n       \"return 0; \",\r\n    Arrays.<Object>asList(RedissonSetMultimap.this.getName(), setName), \r\n    args.toArray());\r\n```\r\n\r\n**Steps to reproduce or test case**\r\n```java\r\nRSetMultimap<String, Long> testMap = redisson.getSetMultimap( \"test-2\" );\r\ntestMap.clear();\r\ntestMap.put( \"t1\", 1L );\r\ntestMap.put( \"t1\", 2L );\r\ntestMap.put( \"t1\", 3L );\r\nRSet<Long> set = testMap.get( \"t1\" );\r\nset.removeAll( Arrays.asList( 1L, 2L ) );\r\nfor( long l : set ) {\r\n\tSystem.out.println( l );\r\n}\r\nSystem.out.println( testMap.size() + \" \" + testMap.get( \"t1\" ).size() );\r\ntestMap.clear();\r\nSystem.out.println( testMap.size() + \" \" + testMap.get( \"t1\" ).size() );\r\n```\r\nResult is \r\n3\r\n0 1\r\n0 1\r\n\r\n**Redis version**\r\n\r\n**Redisson version**\r\n3.13.0\r\n**Redisson configuration**\r\n", "url": "https://github.com/redisson/redisson/issues/2814", "user": "541595308", "labels": ["bug"], "created": "2020-06-03 06:54:28", "closed": "2020-06-04 07:37:28", "commits": {"aaec5481239f7a323407e49659d7f73851050258": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "aaec5481239f7a323407e49659d7f73851050258", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["725448a14391388aefd837ecefa0618bf5a1a139"], "nameRev": "aaec5481239f7a323407e49659d7f73851050258 tags/redisson-3.13.1~17", "commitMessage": "Fixed - RedissonSetMultimap.removeAll removes reference to nested set. #2814\n", "commitDateTime": "2020-06-04 10:40:04", "authoredDateTime": "2020-06-04 10:40:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimap.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetMultimapTest.java", "insertions": 21, "deletions": 12, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSetMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testRemoveAll2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aaec5481239f7a323407e49659d7f73851050258"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 5, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSetMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)"]}, {"title": "The first online Sentinel hostname in Redisson config isn't resolved at startup", "body": "", "url": "https://github.com/redisson/redisson/issues/2813", "user": "mrniko", "labels": ["bug"], "created": "2020-06-03 05:40:25", "closed": "2020-06-03 05:45:25", "commits": {"91051af3dedd5e39c9351ac9519e2972ffe32ca9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "91051af3dedd5e39c9351ac9519e2972ffe32ca9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e8ced7c679b1e39727146caf2c2fcd7546c18497"], "nameRev": "91051af3dedd5e39c9351ac9519e2972ffe32ca9 tags/redisson-3.13.1~21", "commitMessage": "Fixed - the first online Sentinel hostname in Redisson config isn't resolved at startup. #2813\n", "commitDateTime": "2020-06-03 08:43:32", "authoredDateTime": "2020-06-03 08:43:32", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 9, "deletions": 1, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["91051af3dedd5e39c9351ac9519e2972ffe32ca9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 1, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager"]}, {"title": "Concurrent invoke still may be get null", "body": "behavior like #2217 \r\nRedission version\r\n3.12.0\r\n\r\nredission-spring-data-22 version\r\n3.12.0", "url": "https://github.com/redisson/redisson/issues/2811", "user": "believe1499", "labels": ["bug"], "created": "2020-06-02 07:59:40", "closed": "2020-06-04 07:50:02", "commits": {"c8769a4cc0f01e300e94463af3a73ba590a5efc7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "c8769a4cc0f01e300e94463af3a73ba590a5efc7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3cac432efe89ddb58a13e77e964c913477838cff"], "nameRev": "c8769a4cc0f01e300e94463af3a73ba590a5efc7 tags/redisson-3.13.1~15", "commitMessage": "Fixed - RedisConnection.set() returns null #2811\n", "commitDateTime": "2020-06-04 10:52:46", "authoredDateTime": "2020-06-04 10:52:46", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/test/java/org/redisson/spring/data/connection/RedissonConnectionTest.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "redisson-spring-data/redisson-spring-data-23/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonConnectionTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnectionTest.testSetExpiration2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c8769a4cc0f01e300e94463af3a73ba590a5efc7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 4, "lines": 12, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-23/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonConnection"]}, {"title": "SSL connection can't be established if Redis Sentinel discovered by DNSMonitor", "body": "", "url": "https://github.com/redisson/redisson/issues/2809", "user": "mrniko", "labels": ["bug"], "created": "2020-06-01 05:46:21", "closed": "2020-06-01 06:55:07", "commits": {"b60b731303af434f4cdc63cda0e6b1b17c6ee75b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b60b731303af434f4cdc63cda0e6b1b17c6ee75b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0491a20bcd4f18a5828efd9ea5dba9120e54545b"], "nameRev": "b60b731303af434f4cdc63cda0e6b1b17c6ee75b tags/redisson-3.13.1~24", "commitMessage": "Fixed - ssl connection can't be established if Redis Sentinel discovered by DNSMonitor. #2809\n", "commitDateTime": "2020-06-01 09:57:46", "authoredDateTime": "2020-06-01 09:57:46", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 7, "deletions": 7, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.connection.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.connection.MasterSlaveServersConfig,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateSentinels(java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.performSentinelDNSCheck(io.netty.util.concurrent.FutureListener).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b60b731303af434f4cdc63cda0e6b1b17c6ee75b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 7, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.performSentinelDNSCheck(io.netty.util.concurrent.FutureListener).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.SentinelConnectionManager.updateSentinels(java.util.Set)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.connection.MasterSlaveServersConfig,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.connection.MasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager"]}, {"title": "NatMapper is not applied to the first online Sentinel in list.", "body": "", "url": "https://github.com/redisson/redisson/issues/2806", "user": "mrniko", "labels": ["bug"], "created": "2020-05-30 11:56:37", "closed": "2020-05-30 12:00:27", "commits": {"0491a20bcd4f18a5828efd9ea5dba9120e54545b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0491a20bcd4f18a5828efd9ea5dba9120e54545b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b3d0ea51272ee1c06cee56906a6e401a4c1831e5"], "nameRev": "0491a20bcd4f18a5828efd9ea5dba9120e54545b tags/redisson-3.13.1~25", "commitMessage": "Fixed - NatMapper is not applied to the first online Sentinel in list. #2806\n", "commitDateTime": "2020-05-30 14:59:54", "authoredDateTime": "2020-05-30 14:59:54", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.checkAuth(org.redisson.connection.SentinelServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0491a20bcd4f18a5828efd9ea5dba9120e54545b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.SentinelConnectionManager.checkAuth(org.redisson.connection.SentinelServersConfig)"]}, {"title": "spring-integration unlock error when use redisson", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n use redisson and spring-integration \r\n```\r\n  @Bean\r\n    public RedisLockRegistry redisLockRegistry(RedisConnectionFactory redisConnectionFactory){\r\n        return new RedisLockRegistry(redisConnectionFactory,\"spring-cloud\");\r\n    }\r\n\r\n    @Component\r\n    public class Run implements CommandLineRunner {\r\n\r\n        @Autowired\r\n        private RedisLockHelper redisLockHelper;\r\n\r\n\r\n\r\n        @Autowired\r\n        private RedisLockRegistry springRedisLock;\r\n\r\n        @Override\r\n        public void run(String... args) throws Exception {\r\n            String uuid = UUID.randomUUID().toString();\r\n\r\n\r\n            springRedisLock.obtain(\"lock\").lock();\r\n\r\n            springRedisLock.obtain(\"lock\").unlock();\r\n\r\n\r\n            for (;;){}\r\n        }\r\n    }\r\n\r\n```\r\n```xml\r\n <dependency>\r\n            <groupId>org.redisson</groupId>\r\n            <artifactId>redisson-spring-boot-starter</artifactId>\r\n            <version>3.12.5</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-integration</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.integration</groupId>\r\n            <artifactId>spring-integration-redis</artifactId>\r\n        </dependency>\r\n```\r\nspring-boot version 2.2.5\r\n\r\n\r\n**Expected behavior**\r\n\r\nunlock success\r\n\r\n\r\n**Actual behavior**\r\n\r\nunlock error \r\n\r\n```\r\njava.lang.StackOverflowError: null\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.unlink(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]\r\n\r\n```\r\n\r\n\r\n\r\n**Steps to reproduce or test case**\r\n\r\n\r\n```\r\ndefault Long unlink(byte[]... keys) {\r\n\t\treturn keyCommands().unlink(keys);\r\n\t}\r\n\r\n```\r\nthis ```keyCommands() ``` retuen this OBJECT  occur  recursion.\r\nMaybe,we need override method unlink in ```RedissonConnection```\r\n**Redis version**\r\n\r\n**Redisson version**\r\n <dependency>\r\n            <groupId>org.redisson</groupId>\r\n            <artifactId>redisson-spring-boot-starter</artifactId>\r\n            <version>3.12.5</version>\r\n        </dependency>\r\n**Redisson configuration**\r\n", "url": "https://github.com/redisson/redisson/issues/2803", "user": "wangwei-ying", "labels": ["bug"], "created": "2020-05-28 07:18:15", "closed": "2020-06-03 05:55:49", "commits": {"51243a59082fbae0ff7e78cb10964525944343a4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "51243a59082fbae0ff7e78cb10964525944343a4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["56ca2bfad21457471251d4ccfc6d7096affd06c9"], "nameRev": "51243a59082fbae0ff7e78cb10964525944343a4 tags/redisson-3.13.1~19", "commitMessage": "Fixed - Spring Data Redis unlink command causes StackOverflowError. #2803\n", "commitDateTime": "2020-06-03 08:58:25", "authoredDateTime": "2020-06-03 08:58:25", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson-spring-data/redisson-spring-data-23/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.unlink(byte[][])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["51243a59082fbae0ff7e78cb10964525944343a4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 3, "lines": 21, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-23/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonConnection.unlink(byte[][])"]}, {"title": "cluster throw WriteRedisConnectionException while slave become new master after master shutdown", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\n\r\nuse new master and everything is OK\r\n\r\n**Actual behavior**\r\n\r\nuse connection of the shutdown master\r\n\r\n**Steps to reproduce or test case**\r\n\r\ncluster three master and three slave\r\nmaster A, slave B\r\nkill A, then B as master\r\nstart A, then A as slave of B\r\nkill B, then A as master\r\nstart B, then B as slave of A\r\nkill A, then B as master\r\nnow cluster status is OK, \r\nbut throw WriteRedisConnectionException because try to use connect of A\r\n\r\n**Redis version**\r\n\r\n5.0.8\r\n\r\n**Redisson version**\r\n\r\n3.12.5\r\n\r\n**Redisson configuration**\r\n```java\r\nClusterServersConfig clusterServersConfig = config.useClusterServers()\r\n                .addNodeAddress(hosts.split(\",\"))\r\n                .setScanInterval(3000)\r\n                .setTimeout(6000)\r\n                .setRetryAttempts(5)\r\n                .setRetryInterval(2000)\r\n                .setMasterConnectionPoolSize(4096)\r\n                .setSlaveConnectionPoolSize(4096)\r\n                .setFailedSlaveCheckInterval(60000)\r\n                .setFailedSlaveReconnectionInterval(2000);\r\n```\r\n\r\n**ClusterConnectionManager log**\r\n```\r\n2020-05-28 11:18:56.940  INFO 26538 --- [redisson-netty-2-32] o.r.c.pool.MasterPubSubConnectionPool    : 1 connections initialized for /127.0.0.1:6302\r\n2020-05-28 11:18:56.943  INFO 26538 --- [redisson-netty-2-48] o.r.cluster.ClusterConnectionManager     : slave redis://127.0.0.1:6302 removed for slot ranges: [[10923-16383]]\r\n2020-05-28 11:18:56.944  INFO 26538 --- [redisson-netty-2-48] o.r.cluster.ClusterConnectionManager     : 5461 slots removed from redis://127.0.0.1:6302\r\n2020-05-28 11:18:56.961  INFO 26538 --- [redisson-netty-2-48] o.r.cluster.ClusterConnectionManager     : 5461 slots found to add\r\n2020-05-28 11:18:56.971  INFO 26538 --- [redisson-netty-2-17] o.r.c.pool.PubSubConnectionPool          : 1 connections initialized for localhost/127.0.0.1:6302\r\n2020-05-28 11:18:56.971  INFO 26538 --- [redisson-netty-2-20] o.r.connection.pool.SlaveConnectionPool  : 24 connections initialized for localhost/127.0.0.1:6302\r\n2020-05-28 11:18:56.970  INFO 26538 --- [redisson-netty-2-34] o.redisson.connection.MasterSlaveEntry   : master localhost/127.0.0.1:6302 used as slave\r\n2020-05-28 11:18:56.971  INFO 26538 --- [redisson-netty-2-34] o.redisson.connection.MasterSlaveEntry   : master localhost/127.0.0.1:6303 has changed to localhost/127.0.0.1:6302\r\n2020-05-28 11:18:56.972  INFO 26538 --- [redisson-netty-2-34] o.r.c.pool.MasterConnectionPool          : 24 connections initialized for localhost/127.0.0.1:6302\r\n2020-05-28 11:18:59.966 DEBUG 26538 --- [redisson-netty-2-3] o.r.cluster.ClusterConnectionManager     : cluster nodes state got from /127.0.0.1:6302:\r\n5ec50797bf8d7a08a20897c4526cf5c79ae3141a 127.0.0.1:6301@16301 master - 0 1590635939847 1401 connected 5461-10922\r\n836876ef2f59d27763ac6d544646ba7e09a0a14b 127.0.0.1:6300@16300 slave a193501df69576dad18211c0a1a83b7fc3b420bf 0 1590635939000 1397 connected\r\n9248c2d8804c57a69caf7609cb366fafc41079c5 127.0.0.1:6303@16303 master,fail - 1590635928512 1590635927000 1404 disconnected\r\na27f76d092ec9962d6cdd82a688c3ba1ac15be2d 127.0.0.1:6302@16302 myself,master - 0 1590635937000 1405 connected 10923-16383\r\n86a07d1c4dd106159160330bf77fa58c325269ca 127.0.0.1:6305@16305 slave 5ec50797bf8d7a08a20897c4526cf5c79ae3141a 0 1590635939344 1401 connected\r\na193501df69576dad18211c0a1a83b7fc3b420bf 127.0.0.1:6304@16304 master - 0 1590635939545 1397 connected 0-5460\r\n```\r\n\r\n**WriteRedisConnectionException**\r\n```\r\n2020-05-28 11:19:35.162 ERROR 26538 --- [http-nio-9009-exec-8] h.g.d.r.e.GlobalExceptionHandler         : [GET /api/account/profile] WriteRedisConnectionException, Unable to write command into connection! Node source: NodeSource [slot=16115, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=23, freeConnectionsCounter=value:4096:queue:0, freezed=false, freezeReason=null, client=[addr=redis://127.0.0.1:6303], nodeType=MASTER, firstFail=0]]], connection: RedisConnection@1887531326 [redisClient=[addr=redis://127.0.0.1:6303], channel=[id: 0x901eed94, L:0.0.0.0/0.0.0.0:45234], currentCommand=null], command: (EVAL), params: [local value = redis.call('hget', KEYS[1], ARGV[2]); if value == false then return nil; end; local t,..., 5, CN:realme_useragent_record, redisson__timeout__set:{CN:realme_useragent_record}, redisson__idle__set:{CN:realme_useragent_record}, redisson__map_cache__last_access__set:{CN:realme_useragent_record}, {CN:realme_useragent_record}:redisson_options, 1590635964663, PooledUnsafeDirectByteBuf(ridx: 0, widx: 122, cap: 256)] after 5 retry attempts, WriteRedisConnectionException\r\n\r\norg.redisson.client.WriteRedisConnectionException: Unable to write command into connection! Node source: NodeSource [slot=16115, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=23, freeConnectionsCounter=value:4096:queue:0, freezed=false, freezeReason=null, client=[addr=redis://127.0.0.1:6303], nodeType=MASTER, firstFail=0]]], connection: RedisConnection@1887531326 [redisClient=[addr=redis://127.0.0.1:6303], channel=[id: 0x901eed94, L:0.0.0.0/0.0.0.0:45234], currentCommand=null], command: (EVAL), params: [local value = redis.call('hget', KEYS[1], ARGV[2]); if value == false then return nil; end; local t,..., 5, CN:realme_useragent_record, redisson__timeout__set:{CN:realme_useragent_record}, redisson__idle__set:{CN:realme_useragent_record}, redisson__map_cache__last_access__set:{CN:realme_useragent_record}, {CN:realme_useragent_record}:redisson_options, 1590635964663, PooledUnsafeDirectByteBuf(ridx: 0, widx: 122, cap: 256)] after 5 retry attempts\r\n\tat org.redisson.command.RedisExecutor.checkWriteFuture(RedisExecutor.java:270) ~[redisson-3.12.5.jar!/:3.12.5]\r\n\tat org.redisson.command.RedisExecutor.access$100(RedisExecutor.java:58) ~[redisson-3.12.5.jar!/:3.12.5]\r\n\tat org.redisson.command.RedisExecutor$1.operationComplete(RedisExecutor.java:155) ~[redisson-3.12.5.jar!/:3.12.5]\r\n\tat org.redisson.command.RedisExecutor$1.operationComplete(RedisExecutor.java:152) ~[redisson-3.12.5.jar!/:3.12.5]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:551) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:608) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetFailure(AbstractChannel.java:993) ~[netty-transport-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.write(AbstractChannel.java:865) ~[netty-transport-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.write(DefaultChannelPipeline.java:1367) ~[netty-transport-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:717) ~[netty-transport-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:764) ~[netty-transport-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteTask.run(AbstractChannelHandlerContext.java:1104) ~[netty-transport-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500) ~[netty-transport-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.48.Final.jar!/:4.1.48.Final]\r\n\tat java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_191]\r\nCaused by: java.nio.channels.ClosedChannelException: null\r\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.newClosedChannelException(AbstractChannel.java:957) ~[netty-transport-4.1.48.Final.jar!/:4.1.48.Final]\r\n\t... 12 common frames omitted\r\n```\r\n\r\nEverything is OK after restart java application.", "url": "https://github.com/redisson/redisson/issues/2802", "user": "xuyu", "labels": ["bug", "redis-cluster"], "created": "2020-05-28 03:48:00", "closed": "2020-06-01 07:04:10", "commits": {"cf3721931d1fb42d639a68a6fd37cab4b729e612": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "cf3721931d1fb42d639a68a6fd37cab4b729e612", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b60b731303af434f4cdc63cda0e6b1b17c6ee75b"], "nameRev": "cf3721931d1fb42d639a68a6fd37cab4b729e612 tags/redisson-3.13.1~23", "commitMessage": "Fixed - WriteRedisConnectionException is thrown after Redis Cluster failover. #2802\n", "commitDateTime": "2020-06-01 10:06:37", "authoredDateTime": "2020-06-01 10:06:37", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/connection/NodeSource.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.getNodeSource(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.getNodeSource(byte[])", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "NodeSource.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.NodeSource", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.returnConnection(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cf3721931d1fb42d639a68a6fd37cab4b729e612"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 6, "lines": 13, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 7, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 4, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/connection/pool", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.pool.ConnectionPool.returnConnection(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "org.redisson.command.CommandAsyncService.getNodeSource(java.lang.String)", "org.redisson.command.CommandAsyncService.getNodeSource(byte[])", "org.redisson.connection.NodeSource"]}, {"title": "Thread that called tryLock stops in standby state", "body": "Hello,\r\nspring-application using redisson-spring-boot-starter:3.12.5, kill the redisServer, and send a request to call the tryLock, the thread will fall into waiting state.\r\nRunning the redisServer again does not resolve the issue.\r\nIn particular, Scheduler threads cause serious problems.\r\nIs there a solution?\r\n\r\nBelow is the test code.\r\n\r\n```\r\npublic class RedisRockTest {\r\n\r\n    @Test\r\n    public void test() throws InterruptedException, ExecutionException {\r\n        RedissonClient redisson = Redisson.create();\r\n\r\n        RLock lock = redisson.getLock(\"myLock\");\r\n        // kill RedisServer while main thread is sleeping.\r\n        Thread.sleep(5000);\r\n        boolean res = lock.tryLock(5, 10, TimeUnit.SECONDS);\r\n        if (res) {\r\n            System.out.println(\"Somethings to do. but not work.\");\r\n            lock.unlock();\r\n        }\r\n\r\n        System.out.println(\"No printing...\");\r\n    }\r\n\r\n}\r\n```\r\n\r\nThis result is Thread dump.\r\n```\r\n\"main\" #1 prio=5 os_prio=31 cpu=1036.24ms elapsed=42.82s tid=0x00007faeb300e000 nid=0x1803 in Object.wait()  [0x000070000363c000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@11.0.2/Native Method)\r\n\t- waiting on <0x000000061f2a24a0> (a io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise)\r\n\tat java.lang.Object.wait(java.base@11.0.2/Object.java:328)\r\n\tat io.netty.util.concurrent.DefaultPromise.await(DefaultPromise.java:252)\r\n\t- waiting to re-lock in wait() <0x000000061f2a24a0> (a io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise)\r\n\tat org.redisson.misc.RedissonPromise.await(RedissonPromise.java:110)\r\n\tat org.redisson.misc.RedissonPromise.await(RedissonPromise.java:35)\r\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:139)\r\n\tat org.redisson.RedissonObject.get(RedissonObject.java:90)\r\n\tat org.redisson.RedissonLock.tryAcquire(RedissonLock.java:221)\r\n\tat org.redisson.RedissonLock.tryLock(RedissonLock.java:394)\r\n```", "url": "https://github.com/redisson/redisson/issues/2790", "user": "angelzard83", "labels": ["bug"], "created": "2020-05-22 00:41:14", "closed": "2020-05-22 06:55:21", "commits": {"1abb29e27167662bfb0b64e79f4364db1f06149a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1abb29e27167662bfb0b64e79f4364db1f06149a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b510ce0147a084843640b3326291865cb4aa279b"], "nameRev": "1abb29e27167662bfb0b64e79f4364db1f06149a tags/redisson-3.13.0~2", "commitMessage": "Fixed - Lock acquisition hangs if Redis failed. #2790\n", "commitDateTime": "2020-05-22 09:57:12", "authoredDateTime": "2020-05-22 09:57:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLockTest.java", "insertions": 22, "deletions": 1, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockTest.testRedisFailed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1abb29e27167662bfb0b64e79f4364db1f06149a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandBatchService.executeAsync()"]}, {"title": "RLiveObjectService.merge() method doesn't override collection state", "body": "", "url": "https://github.com/redisson/redisson/issues/2778", "user": "mrniko", "labels": ["bug"], "created": "2020-05-18 05:26:30", "closed": "2020-05-18 05:33:30", "commits": {"781410061837dc949478c18f433a02a0350a63bf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "781410061837dc949478c18f433a02a0350a63bf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["52c0d46c832013502e167585d9528aa303403c75"], "nameRev": "781410061837dc949478c18f433a02a0350a63bf tags/redisson-3.13.0~8", "commitMessage": "Fixed - RLiveObjectService.merge() method doesn't override collection state #2778\n", "commitDateTime": "2020-05-18 08:34:36", "authoredDateTime": "2020-05-18 08:34:36", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 16, "deletions": 7, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/api/RLiveObjectService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 94, "deletions": 48, "lines": 142}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.persist(java.lang.Object,java.util.Map,org.redisson.RCascadeType)", "TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RLiveObjectService.java", "spoonMethods": []}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestIndexed1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testMergeList2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["781410061837dc949478c18f433a02a0350a63bf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 8, "lines": 25, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/api"], "changesInPackagesSPOON": ["org.redisson.RedissonLiveObjectService.persist(java.lang.Object,java.util.Map,org.redisson.RCascadeType)"]}, {"title": "RedissonKeys.unlink uses del instead of unlink", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\nRedissonKeys.unlink(...) should execute unlink command\r\n**Actual behavior**\r\nRedissonKeys.unlink(...) should execute del command\r\n**Steps to reproduce or test case**\r\nUse method RedissonKeys.unlink(...)\r\n**Redis version**\r\n5.0.5\r\n**Redisson version**\r\n3.12.5\r\n**Redisson configuration**\r\nDefault single server configuration", "url": "https://github.com/redisson/redisson/issues/2777", "user": "AayushyaVajpayee", "labels": ["bug"], "created": "2020-05-15 17:18:16", "closed": "2020-05-16 06:52:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Nullpointer exception after logout Tomcat application", "body": "**Expected behavior**\r\n\r\nLogout without nullpointer exception\r\n\r\n**Actual behavior**\r\n\r\nLogout throws this exception\r\n\r\njava.lang.NullPointerException: map value can't be null\r\n        at org.redisson.RedissonMap.checkValue(RedissonMap.java:605)\r\n        at org.redisson.RedissonMap.fastPutAsync(RedissonMap.java:920)\r\n        at org.redisson.RedissonMap.fastPut(RedissonMap.java:936)\r\n        at org.redisson.tomcat.RedissonSession.fastPut(RedissonSession.java:239)\r\n        at org.redisson.tomcat.RedissonSession.setAuthType(RedissonSession.java:263)\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.register(AuthenticatorBase.java:1165)\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.register(AuthenticatorBase.java:1100)\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.logout(AuthenticatorBase.java:1306)\r\n        at org.apache.catalina.connector.Request.logout(Request.java:2765)\r\n        at org.apache.catalina.connector.RequestFacade.logout(RequestFacade.java:1092)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.jboss.resteasy.core.ContextParameterInjector$GenericDelegatingProxy.invoke(ContextParameterInjector.java:79)\r\n        at com.sun.proxy.$Proxy60.logout(Unknown Source)\r\n        at nl.intus.rest.ESSService.logoutInner(ESSService.java:247)\r\n        at nl.intus.rest.ESSService.logout(ESSService.java:234)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:138)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.internalInvokeOnTarget(ResourceMethodInvoker.java:517)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invokeOnTargetAfterFilter(ResourceMethodInvoker.java:406)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.lambda$invokeOnTarget$0(ResourceMethodInvoker.java:370)\r\n        at org.jboss.resteasy.core.interception.PreMatchContainerRequestContext.filter(PreMatchContainerRequestContext.java:356)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invokeOnTarget(ResourceMethodInvoker.java:372)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:344)\r\n        at org.jboss.resteasy.core.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:317)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:440)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.lambda$invoke$4(SynchronousDispatcher.java:229)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.lambda$preprocess$0(SynchronousDispatcher.java:135)\r\n        at org.jboss.resteasy.core.interception.PreMatchContainerRequestContext.filter(PreMatchContainerRequestContext.java:356)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.preprocess(SynchronousDispatcher.java:138)\r\n        at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:215)\r\n        at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:227)\r\n        at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:56)\r\n        at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:51)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at nl.intus.main.CorsFilter.handleNonCORS(CorsFilter.java:449)\r\n        at nl.intus.main.CorsFilter.doFilter(CorsFilter.java:190)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n        at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)\r\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n        at org.apache.coyote.ajp.AjpProcessor.service(AjpProcessor.java:432)\r\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)\r\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)\r\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n**Steps to reproduce or test case**\r\n\r\nLogin using Tomcat realm and start session, logout\r\n\r\n**Redis version**\r\n\r\nkeydb-5.3.3-1.el7.x86_64\r\n\r\n**Redisson version**\r\n\r\nredisson-tomcat-9-3.12.5-SNAPSHOT.jar.zip \r\n\r\nfrom : https://github.com/redisson/redisson/issues/2589\r\n\r\n**Redisson configuration**\r\n\r\nredisson.conf: \r\n\r\nsingleServerConfig:\r\n  idleConnectionTimeout: 10000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  password: null\r\n  subscriptionsPerConnection: 5\r\n  clientName: null\r\n  address: \"redis://10.2.2.71:6379\"\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  connectionMinimumIdleSize: 24\r\n  connectionPoolSize: 64\r\n  database: 0\r\n  dnsMonitoringInterval: 5000\r\nthreads: 16\r\nnettyThreads: 32\r\ncodec: !<org.redisson.codec.FstCodec> {}\r\ntransportMode: \"NIO\"\r\n\r\ncontext.xml:\r\n\r\n<Context>\r\n        <WatchedResource>WEB-INF/web.xml</WatchedResource>\r\n\r\n        <Manager        className=\"org.redisson.tomcat.RedissonSessionManager\" \r\n                        configPath=\"${catalina.base}/conf/redisson.conf\" \r\n                        readMode=\"REDIS\" \r\n                        updateMode=\"DEFAULT\" \r\n                        broadcastSessionEvents=\"false\" \r\n                        keyPrefix=\"pzdproductie\"\r\n        />\r\n</Context>\r\n\r\nTested with updateMode=\"AFTER_REQUEST\" at first, changed to DEFAULT later, exception is still thrown. \r\n\r\nIt doesn't really affect the application as it happens after destroying the session but it does fill up application logfiles. \r\n", "url": "https://github.com/redisson/redisson/issues/2774", "user": "wernerreuser", "labels": ["bug"], "created": "2020-05-15 11:26:49", "closed": "2020-05-15 11:52:05", "commits": {"21973e0408194ae6c6cb8374d4532311e9aeba5b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "21973e0408194ae6c6cb8374d4532311e9aeba5b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["32b1cadc1f6b7998e4bdfab6dd9c4c23b5645cf0"], "nameRev": "21973e0408194ae6c6cb8374d4532311e9aeba5b tags/redisson-3.13.0~11", "commitMessage": "Fixed - NPE thrown after logout Tomcat application. #2774\n", "commitDateTime": "2020-05-15 14:54:04", "authoredDateTime": "2020-05-15 14:54:04", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.setAuthType(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["21973e0408194ae6c6cb8374d4532311e9aeba5b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.setAuthType(java.lang.String)"]}, {"title": "Connectivity issue while using Redis", "body": "We have a Redis cluster(running in Sentinel mode) with 3 nodes and we are using Redisson (version 3.10.7) to interact with Redis.\r\nSince last one week, we are facing an issue in our Development environment wherein the client application is not able to connect to the cluster. Continuously older connections are being dropped and new connections are being created. Below is the snapshot for the logger.\r\n\r\n\r\n    12:01:00.832 [redisson-netty-2-6] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@483495011 [redisClient=[addr=redis://10.79.9.163:6379], channel=[id: 0x767f3c87, L:/192.168.7.24:60173 - R:10.79.9.163/10.79.9.163:6379], command=null]\r\n    12:01:00.832 [redisson-netty-2-6] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@1510307492 [redisClient=[addr=redis://10.79.9.163:6379], channel=[id: 0xa8c01128, L:/192.168.7.24:60183 - R:10.79.9.163/10.79.9.163:6379], command=null]\r\n    12:01:00.832 [redisson-netty-2-6] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@425141862 [redisClient=[addr=redis://10.79.9.164:6379], channel=[id: 0x19afdfb8, L:/192.168.7.24:60199 - R:10.79.9.164/10.79.9.164:6379], command=null]\r\n    12:01:00.832 [redisson-netty-2-6] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@457747719 [redisClient=[addr=redis://10.79.9.164:6379], channel=[id: 0xf2431dfb, L:/192.168.7.24:60211 - R:10.79.9.164/10.79.9.164:6379], command=null]\r\n    12:01:00.832 [redisson-netty-2-6] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@1595469651 [redisClient=[addr=redis://10.79.9.164:6379], channel=[id: 0x3226faec, L:/192.168.7.24:60204 - R:10.79.9.164/10.79.9.164:6379], command=null]\r\n    12:01:00.922 [pool-2-thread-1] DEBUG org.redisson.client.handler.ConnectionWatchdog - reconnecting RedisConnection@541871189 [redisClient=[addr=redis://10.79.9.164:6379], channel=[id: 0x5396b42d, L:/192.168.7.24:59969 ! R:10.79.9.164/10.79.9.164:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@3ecd3a79(failure: java.util.concurrent.CancellationException)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]] to 10.79.9.164/10.79.9.164:6379 \r\n    12:01:00.929 [pool-2-thread-1] DEBUG org.redisson.client.handler.ConnectionWatchdog - reconnecting RedisConnection@495642036 [redisClient=[addr=redis://10.79.9.164:6379], channel=[id: 0xfa2f4f52, L:/192.168.7.24:59973 ! R:10.79.9.164/10.79.9.164:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@28c788eb(failure: java.util.concurrent.CancellationException)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]] to 10.79.9.164/10.79.9.164:6379 \r\n    12:01:00.931 [pool-2-thread-1] DEBUG org.redisson.client.handler.ConnectionWatchdog - reconnecting RedisConnection@169281839 [redisClient=[addr=redis://10.79.9.164:6379], channel=[id: 0xf365bc68, L:/192.168.7.24:59976 ! R:10.79.9.164/10.79.9.164:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@6bd0d406(failure: java.util.concurrent.CancellationException)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]] to 10.79.9.164/10.79.9.164:6379 \r\n    12:01:00.931 [pool-2-thread-1] DEBUG org.redisson.client.handler.ConnectionWatchdog - reconnecting RedisConnection@65640722 [redisClient=[addr=redis://10.79.9.165:6379], channel=[id: 0x03c68dcf, L:/192.168.7.24:59226 ! R:10.79.9.165/10.79.9.165:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@520c88b3(failure: java.util.concurrent.CancellationException)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]] to 10.79.9.165/10.79.9.165:6379 \r\n    12:01:00.932 [pool-2-thread-1] DEBUG org.redisson.client.handler.ConnectionWatchdog - reconnecting RedisConnection@1365249560 [redisClient=[addr=redis://10.79.9.165:6379], channel=[id: 0x0722fcc6, L:/192.168.7.24:59262 ! R:10.79.9.165/10.79.9.165:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@50c8b29f(failure: java.util.concurrent.CancellationException)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]] to 10.79.9.165/10.79.9.165:6379 \r\n    12:01:01.080 [redisson-netty-2-8] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@1230181180 [redisClient=[addr=redis://10.79.9.163:6379], channel=[id: 0x148352d3, L:/192.168.7.24:60224 - R:10.79.9.163/10.79.9.163:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@19cb007f(incomplete)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]]\r\n    12:01:01.082 [redisson-netty-2-5] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@1221343292 [redisClient=[addr=redis://10.79.9.163:6379], channel=[id: 0xc4ff65cd, L:/192.168.7.24:60229 - R:10.79.9.163/10.79.9.163:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@1891a694(incomplete)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]]\r\n    12:01:01.082 [redisson-netty-2-7] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@2036916006 [redisClient=[addr=redis://10.79.9.163:6379], channel=[id: 0xff04b8ab, L:/192.168.7.24:60223 - R:10.79.9.163/10.79.9.163:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@1618e7eb(incomplete)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]]\r\n    12:01:01.082 [redisson-netty-2-9] DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection@1460667823 [redisClient=[addr=redis://10.79.9.163:6379], channel=[id: 0xbdc0d69e, L:/192.168.7.24:60222 - R:10.79.9.163/10.79.9.163:6379], command=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@139695d9(incomplete)], command=(PING), params=[], codec=org.redisson.client.codec.StringCodec]]\r\n\r\nWe tried below points to investigate the issue:\r\n\r\n - Restart the client application.\r\n - Restart Redis cluster nodes.\r\n\r\nPost these restarts as well, the same issue persisted. We were able to resolve the issue by changing the ***\"timeout\"*** property from 0 to 10 seconds in server.conf of Redis. On reverting *timeout* back to 0 also is not causing the issue again.", "url": "https://github.com/redisson/redisson/issues/2770", "user": "ammar-ahmad", "labels": ["bug"], "created": "2020-05-14 17:13:55", "closed": "2020-05-16 07:26:03", "commits": {"1ed0802404df57f35d046bb1c033e0a57deb3af5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "1ed0802404df57f35d046bb1c033e0a57deb3af5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["21973e0408194ae6c6cb8374d4532311e9aeba5b"], "nameRev": "1ed0802404df57f35d046bb1c033e0a57deb3af5 tags/redisson-3.13.0~10", "commitMessage": "Fixed - PingConnectionHandler doesn't report errors if PING command can't be sent. #2770\n", "commitDateTime": "2020-05-16 10:28:11", "authoredDateTime": "2020-05-16 10:28:11", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/PingConnectionHandler.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PingConnectionHandler.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1.run(io.netty.util.Timeout)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ed0802404df57f35d046bb1c033e0a57deb3af5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1.run(io.netty.util.Timeout)"]}, {"title": "RedissonTransactionalMapCache.put() creates entries with incorrect TTLs", "body": "When calling RedissonTransactionalMapCache.put(K key, V value, long ttl, TimeUnit ttlUnit, long maxIdleTime, TimeUnit maxIdleUnit), the TTL for cache entries is not set correctly.  The problem is that *putAsync* is passing the expiration *timestamp* into *putOperationAsync*.  However, the code in expect it to be a passed the actual TTL value.\r\n\r\nWhat happens is that when we get here (in BaseTransactionalMapCache)\r\n```\r\n public RFuture<V> putOperationAsync(K key, V value, long ttlTimeout, long maxIdleTimeout, long maxIdleDelta) {\r\n        long threadId = Thread.currentThread().getId();\r\n        return putOperationAsync(key, value, new MapCachePutOperation(map, key, value, \r\n                ttlTimeout, TimeUnit.MILLISECONDS, maxIdleTimeout, TimeUnit.MILLISECONDS, transactionId, threadId));\r\n    }\r\n```\r\nThe ttlTimeout is a timestamp (number of ms since the epoch) rather than the timeout.  This results in the entries being created with what is effectively an infinite TTL.\r\n\r\n\r\n\r\n**Expected behavior**\r\nEntries are created with the provided TTL\r\n\r\n**Actual behavior**\r\nEntries are created with a TTL of ~50 years\r\n\r\n**Steps to reproduce or test case**\r\n```\r\nRTransaction trans = getClient().createTransaction(TransactionOptions.defaults());\r\nRMapCache<String, RedissonCachedValue> map = trans.getMapCache(...)\r\nlong ttl = 10;\r\nString key = \"key\";\r\nObject valueToAdd = createNewValue();\r\nObject oldValue = map.put(key, valueToAdd, ttl, TimeUnit.SECONDS, ttl, TimeUnit.SECONDS);\r\ntrans.commit();\r\n```\r\nIf you check the TTL, using `map.remainTimeToLive(key)`, you will see that it is well over 600.  The value you get back is approximately `System.currentTimeMillis() + 10000`\r\n\r\n**Redisson version**\r\n3.12.4\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2758", "user": "jnhagelberg", "labels": ["bug"], "created": "2020-05-07 17:19:03", "closed": "2020-05-11 12:10:06", "commits": {"a4a0487d3aab6f88aea5baa78a434b9ca9dbefdc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "a4a0487d3aab6f88aea5baa78a434b9ca9dbefdc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["36b15709f6e663368493985798d1d9bb8b246e5e"], "nameRev": "a4a0487d3aab6f88aea5baa78a434b9ca9dbefdc tags/redisson-3.13.0~19", "commitMessage": "Fixed - RedissonTransactionalMapCache.put() inserts entries with incorrect TTLs. #2758\n", "commitDateTime": "2020-05-11 15:12:10", "authoredDateTime": "2020-05-11 15:12:10", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/BaseTransactionalMapCache.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalMapCache.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseTransactionalMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.BaseTransactionalMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.BaseTransactionalMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTransactionalMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.RedissonTransactionalMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a4a0487d3aab6f88aea5baa78a434b9ca9dbefdc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 8, "lines": 18, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 11, "UPD": 2, "INS": 8, "MOV": 1, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/transaction", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long,long)", "org.redisson.transaction.BaseTransactionalMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long)", "org.redisson.transaction.BaseTransactionalMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long,long)", "org.redisson.RedissonMapCache.putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "org.redisson.transaction.RedissonTransactionalMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long,long)"]}, {"title": "Tomcat valves need to check getNext() if it is not null first", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\nin UpdateValve,java there is following code (all tomcat valves needs to be checked for such code):\r\n```\r\ngetNext().invoke(request, response);\r\n```\r\nand getNext() could return null if there are no additional valves to invoke\r\n\r\n**Expected behavior**\r\nNo NullPointerException to occur\r\n\r\n**Actual behavior**\r\n\r\nNullPointerException would occur in Valves that uses getNext().invoke(...), if getNext() return null. \r\n**Steps to reproduce or test case**\r\n\r\n**Redis version**\r\n\r\n**Redisson version**\r\n\r\n**Redisson configuration**\r\n", "url": "https://github.com/redisson/redisson/issues/2751", "user": "jchobantonov", "labels": ["bug"], "created": "2020-05-05 15:08:05", "closed": "2020-05-12 06:52:06", "commits": {"69034c3bd542d1119d2d600d311154cb33ae24e1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "69034c3bd542d1119d2d600d311154cb33ae24e1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d8391d1a5715fb346705fffeba939ec531e1ed71"], "nameRev": "69034c3bd542d1119d2d600d311154cb33ae24e1 tags/redisson-3.13.0~15", "commitMessage": "Fixed - UpdateValue throws NPE if getNext() returns null. #2751\n", "commitDateTime": "2020-05-12 09:54:13", "authoredDateTime": "2020-05-12 09:54:13", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UpdateValve.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.UpdateValve.invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["69034c3bd542d1119d2d600d311154cb33ae24e1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 2, "lines": 16, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.UpdateValve.invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"]}, {"title": "Node for slot: 14296 hasn't been discovered yet. Check cluster slots coverage using CLUSTER NODES command", "body": "org.redisson.client.RedisNodeNotFoundException: Node for slot: 14296 hasn't been discovered yet. Check cluster slots coverage using CLUSTER NODES command", "url": "https://github.com/redisson/redisson/issues/2750", "user": "pqcoder", "labels": ["bug", "redis-cluster"], "created": "2020-05-05 13:54:12", "closed": "2020-06-11 08:17:10", "commits": {"d6c3f64ced346c3833d68b6a6ebf21d38201b27a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "d6c3f64ced346c3833d68b6a6ebf21d38201b27a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5002f250323850874dcd3eaa9033092f6bb82d55"], "nameRev": "d6c3f64ced346c3833d68b6a6ebf21d38201b27a tags/redisson-3.13.1~13", "commitMessage": "Fixed - Redis Cluster manager throws error Slot hasn't been discovered yet. #2750\n", "commitDateTime": "2020-06-04 12:24:08", "authoredDateTime": "2020-06-04 12:24:08", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 36, "deletions": 53, "lines": 89}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 8, "deletions": 4, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.config.ClusterServersConfig)", "TOT": 30, "UPD": 5, "INS": 1, "MOV": 17, "DEL": 7}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(org.redisson.client.RedisClient)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d6c3f64ced346c3833d68b6a6ebf21d38201b27a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 44, "deletions": 57, "lines": 101, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 33, "UPD": 6, "INS": 2, "MOV": 18, "DEL": 7, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.config.ClusterServersConfig)", "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(org.redisson.client.RedisClient)"]}, {"title": "Bucket cast exception\uff1ajava.lang.Long cannot be cast to org.redisson.client.protocol.decoder.ListScanResult", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n**description\uff1a**\r\nWhen using Redisson's Bucket function, the type conversion error is reported from time to time\r\nsuch as \uff1ajava.lang.Long cannot be cast to org.redisson.client.protocol.decoder.ListScanResult\r\n\r\n**Expected behavior**\r\n\r\n**Actual behavior**\r\n**First error**\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.xiaoyun.show.cache.CacheObject\r\n\tat com.xiaoyun.show.cache.ActivityCacheHelper.computeIfAbsentCacheObject(ActivityCacheHelper.java:122)\r\n\tat com.xiaoyun.show.cache.ActivityCacheHelper.getCacheObject(ActivityCacheHelper.java:103)\r\n\tat com.xiaoyun.show.interceptors.SecurityWebFilter.doFilter(SecurityWebFilter.java:135)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\r\n**Second error**\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to org.redisson.client.protocol.decoder.ListScanResult\r\n\tat org.redisson.RedissonKeys$2.iterator(RedissonKeys.java:131)\r\n\tat org.redisson.RedissonKeys$2.iterator(RedissonKeys.java:126)\r\n\tat org.redisson.BaseIterator.hasNext(BaseIterator.java:54)\r\n\tat org.redisson.misc.CompositeIterator.hasNext(CompositeIterator.java:39)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:115)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:545)\r\n\tat java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)\r\n\tat java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:438)\r\n\tat com.xiaoyun.show.cache.ActivityCacheHelper.getCacheObjects(ActivityCacheHelper.java:153)\r\n\r\n**Steps to reproduce or test case**\r\n![\u56fe\u7247](https://user-images.githubusercontent.com/31775136/80553451-78d1ca00-89fc-11ea-8ced-47e49f8df50c.png)\r\n\r\nThe code is called as follows(odd and even will appear)\uff1a\r\n`ActivityBasic activityBasic = cacheHelper.getCacheObject(ActivityBasic.class, activityId);`\r\n`Map<String, ActivityCoupon> activityCouponMap = cacheHelper.getCacheObjects(ActivityCoupon.class, activityId);`\r\n\r\n**Redis version** \r\nRedis server v=5.0.4\r\n\r\n**Redisson version**\r\n 3.12.4\r\n\r\n**Redisson configuration**\r\n`String address = \"redis://\" + getIp() + \":\" + getPort();`\r\n`SingleServerConfig singleServerConfig = config.useSingleServer()`\r\n `       .setAddress(address)`\r\n `       .setConnectionPoolSize(getPoolSize())`\r\n`        .setConnectionMinimumIdleSize(getMinimumIdleSize());`\r\n`if (!StringUtils.isEmpty(getPassword())) {`\r\n`    singleServerConfig.setPassword(getPassword());`\r\n`}`\r\n`config.setCodec(new FstCodec());`\r\n`config.setLockWatchdogTimeout(1000 * 30);`\r\n", "url": "https://github.com/redisson/redisson/issues/2733", "user": "1985815103", "labels": ["bug"], "created": "2020-04-29 01:26:55", "closed": "2020-05-27 06:14:48", "commits": {"a3061e8c4e7826e6c62c2b4cb53e0b626b567388": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 28.00027777777778, "commitsDetails": [{"commitHash": "a3061e8c4e7826e6c62c2b4cb53e0b626b567388", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3ec0fc5c71d5cdba2977c8c77cbc9eb3dbb858d7"], "nameRev": "a3061e8c4e7826e6c62c2b4cb53e0b626b567388 tags/redisson-3.13.1~30", "commitMessage": "Fixed - RBatch object doesn't wait ending of sync slaves process #2733\n", "commitDateTime": "2020-05-27 09:17:10", "authoredDateTime": "2020-05-27 09:17:10", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/CommandsData.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/command/RedisCommonBatchExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/command/RedisExecutor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/command/RedisQueuedBatchExecutor.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "redisson/src/test/java/org/redisson/RedisClientTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.handler.QueueCommand,org.redisson.client.handler.CommandsData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandsData.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.CommandsData", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.CommandsData.isSyncSlaves()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedisCommonBatchExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisCommonBatchExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.command.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisQueuedBatchExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisQueuedBatchExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisClientTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedisClientTest.testPipeline()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedisClientTest.testPipelineBigResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testSyncSlavesWait()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a3061e8c4e7826e6c62c2b4cb53e0b626b567388"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 33, "deletions": 15, "lines": 48, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 20, "UPD": 0, "INS": 18, "MOV": 2, "DEL": 0, "spoonFilesChanged": 6, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/client/handler", "redisson/src/main/java/org/redisson/client/protocol"], "changesInPackagesSPOON": ["org.redisson.client.protocol.CommandsData", "org.redisson.command.RedisCommonBatchExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.handler.QueueCommand,org.redisson.client.handler.CommandsData)", "org.redisson.client.protocol.CommandsData.isSyncSlaves()", "org.redisson.command.CommandBatchService.executeAsync()", "org.redisson.command.RedisQueuedBatchExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "org.redisson.command.RedisExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.command.RedisConnection)"]}, {"title": "JbossMarshallingRiver Codec implementation corrupts objects serialized in the thread which had a serialization exception before", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\nFor JbossMarshallingRiver Codec\r\nIf I encounter notSerializableException for an object, then any other object afterwards sent for serialization should not be incorrectly serialized i.e there should not be any cascading effects\r\n**Actual behavior**\r\nOn encountering notSerializableException , some objects serialized  in the same thread afterwards throw unsupported protocol version exception during deserialization.\r\n**Root Cause**\r\nWhen an encoding exception (like notSerializable) occurs during encoding, Marshaller methods finish() and close() are not called and since the Marhsaller encoder is stored in FastThreadLocal variable,further serialization by same marshaller create a problem. We have fixed same by simply applying try{..} finally clause in our implementation and it works.\r\n\r\n**Redis version**\r\n5.0.5\r\n**Redisson version**\r\n3.11.5\r\n**Redisson configuration**\r\nMostly default configuration but with MarshallingCodec", "url": "https://github.com/redisson/redisson/issues/2725", "user": "AayushyaVajpayee", "labels": ["bug"], "created": "2020-04-23 17:57:14", "closed": "2020-04-24 05:46:30", "commits": {"d2b7b2d37cd3b3a0fc1b45a1bc9494779fb6ac62": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d2b7b2d37cd3b3a0fc1b45a1bc9494779fb6ac62", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ddff03ddd3535cc87d8314c27b91033c5820b400"], "nameRev": "d2b7b2d37cd3b3a0fc1b45a1bc9494779fb6ac62 tags/redisson-3.13.0~29", "commitMessage": "Fixed - MarshallingCodec encoder stops to work correctly if non-serialized object was serialized. #2725\n", "commitDateTime": "2020-04-24 08:48:06", "authoredDateTime": "2020-04-24 08:48:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/MarshallingCodec.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "redisson/src/test/java/org/redisson/codec/MarshallingCodecTest.java", "insertions": 51, "deletions": 0, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MarshallingCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.MarshallingCodec.4.encode(java.lang.Object)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "MarshallingCodecTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.MarshallingCodecTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d2b7b2d37cd3b3a0fc1b45a1bc9494779fb6ac62"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 4, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.MarshallingCodec.4.encode(java.lang.Object)"]}, {"title": "Cache not working for hibernate collection, that is joined by non primary key field", "body": "When it's like this:\r\n```\r\n@Cache(usage = CacheConcurrencyStrategy.READ_ONLY)\r\nclass A {\r\n  @Id Long id;\r\n\r\n  @Column(unique = true) String uniqueField;\r\n  \r\n  @ManyToMany\r\n  @JoinTable(\r\n      name = \"a_b\",\r\n      joinColumns = @JoinColumn(\r\n          name = \"unique_field\", referenced_column_name = \"unique_field\"),\r\n      inverseJoinColumns = @JoinColumn(\r\n          name = \"b_id\", referencedColumnName = \"id\"))\r\n  @Cache(usage = CacheConcurrencyStrategy.READ_ONLY)\r\n  private List<B> bs = new ArrayList<>();\r\n}\r\n\r\n@Cache(usage = CacheConcurrencyStrategy.READ_ONLY)\r\nclass B {\r\n  @Id Long id;\r\n}\r\n```\r\n\r\nEvery time I getting `bs` it calls database.\r\nBut when we change joining field to `A` primary key:\r\n```\r\n@JoinTable(\r\n      name = \"a_b\",\r\n      joinColumns = @JoinColumn(\r\n          name = \"a_id\", referenced_column_name = \"id\"),\r\n      inverseJoinColumns = @JoinColumn(\r\n          name = \"b_id\", referencedColumnName = \"id\"))\r\n```\r\nIt gets `bs` from cache.\r\n", "url": "https://github.com/redisson/redisson/issues/2708", "user": "AndLvovSky", "labels": ["bug", "hibernate"], "created": "2020-04-19 22:02:20", "closed": "2020-04-23 07:22:51", "commits": {"c7036d9339c5b28f0ba31d0574a8f212fa629aaf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "c7036d9339c5b28f0ba31d0574a8f212fa629aaf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e197c431076300794373a4393d6232786793696d"], "nameRev": "c7036d9339c5b28f0ba31d0574a8f212fa629aaf tags/redisson-3.13.0~34", "commitMessage": "Fixed - Cache isn't applied to hibernate collection, that is joined by non primary key field #2708\n", "commitDateTime": "2020-04-23 10:24:25", "authoredDateTime": "2020-04-23 10:24:25", "commitGitStats": [{"filePath": "redisson-hibernate/redisson-hibernate-4/src/test/resources/org/redisson/hibernate/redisson.json", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "redisson-hibernate/redisson-hibernate-4/src/test/resources/redisson.json", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "redisson-hibernate/redisson-hibernate-4/src/test/resources/redisson.yaml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/RedissonCacheKeysFactory.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java", "insertions": 19, "deletions": 21, "lines": 40}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/RedissonCollectionRegion.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/RedissonEntityRegion.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region/RedissonNaturalIdRegion.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteCollectionRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteEntityRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/NonStrictReadWriteNaturalIdRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadOnlyCollectionRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadOnlyEntityRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadOnlyNaturalIdRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadWriteCollectionRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadWriteEntityRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/ReadWriteNaturalIdRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/TransactionalCollectionRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/TransactionalEntityRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy/TransactionalNaturalIdRegionAccessStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/test/java/org/redisson/hibernate/CollectionTest.java", "insertions": 123, "deletions": 0, "lines": 123}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/test/java/org/redisson/hibernate/ReadWriteTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/test/java/org/redisson/hibernate/TransactionalTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/test/resources/org/redisson/hibernate/redisson.json", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/test/resources/redisson.json", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/RedissonCacheKeysFactory.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java", "insertions": 9, "deletions": 21, "lines": 30}, {"filePath": "redisson-hibernate/redisson-hibernate-52/src/test/java/org/redisson/hibernate/CollectionTest.java", "insertions": 123, "deletions": 0, "lines": 123}, {"filePath": "redisson-hibernate/redisson-hibernate-52/src/test/java/org/redisson/hibernate/ReadWriteTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-hibernate/redisson-hibernate-52/src/test/java/org/redisson/hibernate/TransactionalTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-hibernate/redisson-hibernate-52/src/test/resources/org/redisson/hibernate/redisson.json", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "redisson-hibernate/redisson-hibernate-52/src/test/resources/redisson.json", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate/RedissonCacheKeysFactory.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "redisson-hibernate/redisson-hibernate-53/src/test/java/org/redisson/hibernate/CollectionTest.java", "insertions": 123, "deletions": 0, "lines": 123}, {"filePath": "redisson-hibernate/redisson-hibernate-53/src/test/java/org/redisson/hibernate/ReadWriteTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-hibernate/redisson-hibernate-53/src/test/java/org/redisson/hibernate/TransactionalTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["c7036d9339c5b28f0ba31d0574a8f212fa629aaf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 286, "deletions": 75, "lines": 361, "gitFilesChange": 21}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/strategy", "redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate", "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate", "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/region", "redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate"]}, {"title": "ReactiveValueOperations#set result calls onComplete directly without offering Boolean value", "body": "The `Mono<Boolean> set(K key, V value, Duration timeout)` in `ReactiveValueOperations`  from Spring Data Redis Reactive implies the `Mono` will return an `Boolean` to indicate success or fail. \r\n\r\nHowever when using Redisson's `Spring Data Redis Integration`, the response is either `onComplete` or `onError`. It's not revealed in documents that this method should not rely on the `Boolean` value. It would be easier to use the integration if documents offers these important information.\r\n\r\n-----\r\n\r\nBesides, the `Spring Boot Starter` includes `spring-boot-starter-web` module which conflicts with newer `spring-boots-starter-webflux` module, which is necessary for `Spring Webflux` applications. \r\n\r\nAfter exclude the `spring-boot-starter-web` module from `Gradle`, Redisson Starter works well. So, can the `web` module be removed from starter dependencies officially, or, change it to other dependencies?\r\n", "url": "https://github.com/redisson/redisson/issues/2702", "user": "xJoeWoo", "labels": ["bug"], "created": "2020-04-16 16:30:17", "closed": "2020-04-21 07:43:02", "commits": {"9f04fd16173e6ef275992ab30483bf3c95b50c61": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "9f04fd16173e6ef275992ab30483bf3c95b50c61", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c2fde5b0fa4f8b0581595d36d8d7103a4f47c1fd", "1d337e933633df2e290196cf69b5eabc45a71ace"], "nameRev": "9f04fd16173e6ef275992ab30483bf3c95b50c61 tags/redisson-3.13.0~33^2", "commitMessage": "Merge pull request #2709 from xJoeWoo/fix-wrong-set-command\n\n#2702 Fix RedissonReactiveStringCommands.set using wrong SET RedisCommand", "commitDateTime": "2020-04-21 10:42:33", "authoredDateTime": "2020-04-21 10:42:33", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveStringCommands.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveStringCommands.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonReactiveStringCommands.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonReactiveStringCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveStringCommands.set(org.reactivestreams.Publisher)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RedissonSession retains reference to wrong map after changeSessionId", "body": "When `RedissonSession#changeSessionId` is called, state is copied to the new key in Redis, but the field remains a reference to the old `RMap`. Any subsequent session updates in that request will get persisted to the wrong key.", "url": "https://github.com/redisson/redisson/issues/2693", "user": "eager", "labels": ["bug"], "created": "2020-04-13 20:46:03", "closed": "2020-04-15 06:33:57", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "RedissonSession#changeSessionId expiredKey race condition", "body": "We have a number of instances of our app in production, and we\u2019ve encountered a race condition where the same session might have `changeSessionId` invoked on the same session separate servers. This means one server might receive [`-2` from `PTTL`](https://redis.io/commands/pttl), which isn\u2019t currently handled.\r\n\r\n<details>\r\n<summary>Stacktrace</summary>\r\n<pre>\r\norg.redisson.client.RedisException: ERR invalid expire time in psetex. channel: [id: 0xf8f93a9c, L:/[redacted]:53574 - R:[redacted]:6379] command: (PSETEX), params: [spring:session:sessions:expires:[session id], -2, PooledUnsafeDirectByteBuf(ridx: 0, widx: 2, cap: 256)]\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:355)\r\n        at org.redisson.client.handler.CommandDecoder.decodeCommandBatch(CommandDecoder.java:266)\r\n        at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:207)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:134)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:498)\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n        at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1486)\r\n        at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1235)\r\n        at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1282)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:498)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:437)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n</pre>\r\n</details>", "url": "https://github.com/redisson/redisson/issues/2692", "user": "eager", "labels": ["bug"], "created": "2020-04-13 20:45:53", "closed": "2020-04-15 05:27:09", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "RedissonSessionRepository topic listeners initialization has race condition", "body": "We\u2019ve successfully migrated to using `RedissonSessionRepository` for our Spring sessions, but we get intermittent NPEs right after startup. It looks like the issue is that the [first listener is added before all of the topics are initialized](https://github.com/redisson/redisson/blob/15c464013d295aaae83bb3fd6daaa273cded3188/redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java#L251), and [the conditional matching in `onMessage` doesn\u2019t go in the same order as initialization](https://github.com/redisson/redisson/blob/15c464013d295aaae83bb3fd6daaa273cded3188/redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java#L285).\r\n\r\n```\r\njava.lang.NullPointerException\r\n        at org.redisson.spring.session.RedissonSessionRepository.onMessage(RedissonSessionRepository.java:303)\r\n        at org.redisson.spring.session.RedissonSessionRepository.onMessage(RedissonSessionRepository.java:58)\r\n        at org.redisson.PubSubPatternMessageListener.onPatternMessage(PubSubPatternMessageListener.java:83)\r\n        at org.redisson.client.RedisPubSubConnection.onMessage(RedisPubSubConnection.java:84)\r\n        at org.redisson.client.handler.CommandPubSubDecoder.lambda$enqueueMessage$0(CommandPubSubDecoder.java:181)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n```", "url": "https://github.com/redisson/redisson/issues/2690", "user": "eager", "labels": ["bug"], "created": "2020-04-13 19:59:06", "closed": "2020-04-14 05:42:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "RedissonConnection#del() doesn\u2019t participate in pipeline ", "body": "We\u2019ve been experiencing intermittent `NullPointerException`s (stacktrace at end) that appeared to be race condition. The root seems to be that `del(byte[] keys...)` doesn\u2019t properly participate when a connection is pipelined.\r\n\r\nI believe the simplest reproduction is:\r\n\r\n```java\r\nRedisConnection conn = new RedissonConnectionFactory(/* clustered config */).getConnection();\r\nbyte[] key = \"my_key\".getBytes();\r\nconn.set(key, \"my_value\".getByte());\r\n\r\nconn.openPipeline();\r\nconn.get(key);\r\nconn.del(key);\r\n\r\nresults = conn.closePipeline();\r\nbyte[] value = (byte[])results.get(0);\r\n\r\n// value is sometimes `null`\r\n// additionally, results.size() == 1\r\n```\r\n\r\n[Here\u2019s the full code in spring-security-oauth2](https://github.com/spring-projects/spring-security-oauth/blob/bff72a9bf8f12b73f945e4e77f4dd206b3636e83/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/redis/RedisTokenStore.java#L279) that is triggering this.\r\n\r\n**Redis version**\r\n\r\n4\r\n\r\n**Redisson version**\r\n\r\nRedisson 3.12.4\r\n\r\n**Redisson configuration**\r\n\r\nCluster\r\n\r\n<details>\r\n<summary>Stacktrace</summary>\r\n<pre>\r\nWrapped by: org.springframework.data.redis.connection.RedisPipelineException: Pipeline contained one or more invalid commands; nested exception is org.redisson.client.WriteRedisConnectionException: Unable to write command into connection! Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=23, freeConnectionsCounter=value:63:queue:0, freezed=false, freezeReason=null, client=[addr=rediss://\u2026:6379], nodeType=MASTER, firstFail=0]]], connection: RedisConnection@968537160 [redisClient=[addr=rediss://<redacted>:6379], channel=[id: 0x6a0eb23a, L:/<redacted>:49244 - R:<redacted>/<redacted>:6379], currentCommand=null], command: null, params: null after 3 retry attempts\r\n\tat org.redisson.spring.data.connection.RedissonConnection.closePipeline(RedissonConnection.java:145)\r\n\tat org.springframework.security.oauth2.provider.token.store.redis.RedisTokenStore.removeAccessToken(RedisTokenStore.java:295)\r\n\tat org.springframework.security.oauth2.provider.token.store.redis.RedisTokenStore.removeAccessTokenUsingRefreshToken(RedisTokenStore.java:397)\r\n\tat org.springframework.security.oauth2.provider.token.store.redis.RedisTokenStore.removeAccessTokenUsingRefreshToken(RedisTokenStore.java:376)\r\n\tat org.springframework.security.oauth2.provider.token.DefaultTokenServices.refreshAccessToken(DefaultTokenServices.java:162)\r\n\tat org.springframework.security.oauth2.provider.refresh.RefreshTokenGranter.getAccessToken(RefreshTokenGranter.java:47)\r\n\tat org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)\r\n\tat org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)\r\n\tat org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)\r\n\tat org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)\r\n\tat org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)\r\n\t\u2026\r\n</pre>\r\n<details>", "url": "https://github.com/redisson/redisson/issues/2680", "user": "eager", "labels": ["bug"], "created": "2020-04-09 05:32:03", "closed": "2020-04-09 11:49:32", "commits": {"8be90089a36e9aab31121bb0771d25f82d8a65a7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8be90089a36e9aab31121bb0771d25f82d8a65a7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["faebedbeabd9261aa35faba0b1e32008235d3c24"], "nameRev": "8be90089a36e9aab31121bb0771d25f82d8a65a7 tags/redisson-3.12.5~14", "commitMessage": "Fixed - Spring Data RedissonConnection#del() doesn\u2019t participate in pipeline. #2680\n", "commitDateTime": "2020-04-09 14:46:07", "authoredDateTime": "2020-04-09 14:46:07", "commitGitStats": [{"filePath": "pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 70, "lines": 71}, {"filePath": "redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 70, "lines": 71}, {"filePath": "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 70, "lines": 71}, {"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 70, "lines": 71}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 70, "lines": 71}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 70, "lines": 71}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/test/java/org/redisson/spring/data/connection/RedissonPipelineConnectionTest.java", "insertions": 18, "deletions": 0, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.sScan(byte[],org.springframework.data.redis.core.ScanOptions)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.del(byte[][])", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scan(org.springframework.data.redis.core.ScanOptions).2", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions).5", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.dbSize().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scriptExists(java.lang.String[]).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions).4.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions).5.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "TOT": 14, "UPD": 1, "INS": 0, "MOV": 8, "DEL": 5}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.dbSize().6.onSlotResult(java.lang.Long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scan(org.springframework.data.redis.core.ScanOptions).2.doScan(long,org.springframework.data.redis.core.ScanOptions)", "TOT": 17, "UPD": 6, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.dbSize().6.onFinish()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scriptExists(java.lang.String[]).8.onSlotResult(java.util.List)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.checkExecution(org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.executeAsync(org.redisson.client.protocol.RedisStrictCommand,byte[][])", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.sScan(byte[],org.springframework.data.redis.core.ScanOptions).3.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scriptExists(java.lang.String[]).8.onFinish()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions).3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scan(org.springframework.data.redis.core.ScanOptions).1.doScan(long,org.springframework.data.redis.core.ScanOptions)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).6.onFinish()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions).3.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions).4.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).6.onSlotResult(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.executeAsync(org.redisson.client.protocol.RedisStrictCommand,byte[][]).1.accept(org.redisson.api.BatchResult,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.sScan(byte[],org.springframework.data.redis.core.ScanOptions).3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).7.onFinish()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).7.onSlotResult(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonPipelineConnectionTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonPipelineConnectionTest.testDel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8be90089a36e9aab31121bb0771d25f82d8a65a7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 420, "lines": 426, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 82, "UPD": 23, "INS": 10, "MOV": 35, "DEL": 14, "spoonFilesChanged": 1, "spoonMethodsChanged": 29}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonConnection.del(byte[][])", "org.redisson.spring.data.connection.RedissonConnection.dbSize().6", "org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions).3", "org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.scriptExists(java.lang.String[]).8", "org.redisson.spring.data.connection.RedissonConnection.scan(org.springframework.data.redis.core.ScanOptions).2.doScan(long,org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).7.onFinish()", "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).7", "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).7.onSlotResult(java.lang.String)", "org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions).4.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.scriptExists(java.lang.String[]).8.onSlotResult(java.util.List)", "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).6.onSlotResult(java.lang.String)", "org.redisson.spring.data.connection.RedissonConnection.sScan(byte[],org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.sScan(byte[],org.springframework.data.redis.core.ScanOptions).3", "org.redisson.spring.data.connection.RedissonConnection.scan(org.springframework.data.redis.core.ScanOptions).2", "org.redisson.spring.data.connection.RedissonConnection.dbSize().6.onFinish()", "org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions).4.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions).5", "org.redisson.spring.data.connection.RedissonConnection.executeAsync(org.redisson.client.protocol.RedisStrictCommand,byte[][]).1.accept(org.redisson.api.BatchResult,java.lang.Throwable)", "org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.hScan(byte[],org.springframework.data.redis.core.ScanOptions).5.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.sScan(byte[],org.springframework.data.redis.core.ScanOptions).3.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.scan(org.springframework.data.redis.core.ScanOptions).1.doScan(long,org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.executeAsync(org.redisson.client.protocol.RedisStrictCommand,byte[][])", "org.redisson.spring.data.connection.RedissonConnection.scriptLoad(byte[]).6.onFinish()", "org.redisson.spring.data.connection.RedissonConnection.zScan(byte[],org.springframework.data.redis.core.ScanOptions).3.doScan(byte[],long,org.springframework.data.redis.core.ScanOptions)", "org.redisson.spring.data.connection.RedissonConnection.checkExecution(org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong)", "org.redisson.spring.data.connection.RedissonConnection.scriptExists(java.lang.String[]).8.onFinish()", "org.redisson.spring.data.connection.RedissonConnection.dbSize().6.onSlotResult(java.lang.Long)"]}, {"title": "Redisson is unable to start if first sentinel node in list is down", "body": "", "url": "https://github.com/redisson/redisson/issues/2679", "user": "mrniko", "labels": ["bug"], "created": "2020-04-08 06:44:59", "closed": "2020-04-10 05:54:45", "commits": {"c84b183b556eab0ec9e2298d9b9d94b99fed4db1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "c84b183b556eab0ec9e2298d9b9d94b99fed4db1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ba9b023229825e2502e1b32edfdc0844f3b3e466"], "nameRev": "c84b183b556eab0ec9e2298d9b9d94b99fed4db1 tags/redisson-3.12.5~12", "commitMessage": "Fixed - Redisson is unable to start if first sentinel node in list is down #2679\n", "commitDateTime": "2020-04-10 08:56:13", "authoredDateTime": "2020-04-10 08:56:13", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 13, "deletions": 6, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 8, "UPD": 3, "INS": 3, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c84b183b556eab0ec9e2298d9b9d94b99fed4db1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 6, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 3, "INS": 3, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager"]}, {"title": "RTopic.countListeners() unexpected result", "body": "Consider the following code:\r\n```\r\nfinal RTopic topic1 = redisson.getTopic(\"topic1\");  \r\ntopic1.addListener(String.class, new MessageListener<String>() { @Override public void onMessage(final CharSequence channel, final String msg) { System.out.println(\"topic1: \" + msg); }});\r\nSystem.out.println(\"Listeners: \" + topic1.countListeners()); // Prints 1\r\n\r\nfinal RTopic topic2 = redisson.getTopic(\"topic2\");\r\ntopic2.addListener(String.class, new MessageListener<String>() { @Override public void onMessage(final CharSequence channel, final String msg) { System.out.println(\"topic2: \" + msg); }});\r\nSystem.out.println(\"Listeners: \" + topic2.countListeners()); // Prints 2 (should be 1)\r\n```\r\n\r\n**Expected behavior**\r\nThe `countListeners` should return 1 per topic.\r\n\r\n**Actual behavior**\r\nIt looks like the `countListeners` returns the total of listeners registred for all topics (2 in this case).\r\n\r\n**Redisson version**\r\n3.12.4\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2677", "user": "teunhoogendoorn", "labels": ["bug"], "created": "2020-04-07 08:40:10", "closed": "2020-04-07 12:10:49", "commits": {"faebedbeabd9261aa35faba0b1e32008235d3c24": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "faebedbeabd9261aa35faba0b1e32008235d3c24", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a3618ac9424d5ced93edf9aacb3d945a04666bac"], "nameRev": "faebedbeabd9261aa35faba0b1e32008235d3c24 tags/redisson-3.12.5~15", "commitMessage": "Fixed - RTopic.countListeners() returns wrong result. #2677\n", "commitDateTime": "2020-04-07 15:11:48", "authoredDateTime": "2020-04-07 15:11:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonTopic.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/PubSubConnectionEntry.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.countListeners()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry.countListeners(org.redisson.client.ChannelName)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry.countListeners()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testResubscriptionAfterFailover()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testCountListeners()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["faebedbeabd9261aa35faba0b1e32008235d3c24"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 7, "lines": 13, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/pubsub", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.pubsub.PubSubConnectionEntry.countListeners()", "org.redisson.pubsub.PubSubConnectionEntry", "org.redisson.RedissonTopic.countListeners()", "org.redisson.pubsub.PubSubConnectionEntry.countListeners(org.redisson.client.ChannelName)"]}, {"title": "RLiveObjectService  search conditions not working as expected", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\nLiveobjectService find method not working as expected, I am trying to search an object based on its  properties values, something like this \r\n\r\n>  find all objects where attribute = value1 and value = value2 and someId = value3\r\n\r\n\r\n```\r\nCollection<AccountNetIDCache> dc = liveObjectService.find(\r\n         AccountNetIDCache.class,Conditions.and(\r\n                Conditions.eq(\"attribute\", value1), \r\n                Conditions.eq(\"value\", value2),\r\n                Conditions.eq(\"someId\", value3))\r\n);\r\n```\r\n\r\n**Expected behavior**\r\n\r\n- It should not return any values is condition is not satisfied\r\n\r\n**Actual behavior**\r\n\r\n- It's returning all the values \r\n\r\n**Steps to reproduce or test case**\r\n\r\n-  Create an object with at least 3 properties \r\n\r\n- Populate it with random values and store it as live objects\r\n\r\n- Use something line below-mentioned code to replicate.\r\n\r\n```\r\nliveObjectService.find(\r\n         SomeClass.class,Conditions.and(\r\n                Conditions.eq(\"key1\", value3), \r\n                Conditions.eq(\"key2\", value3),\r\n                Conditions.eq(\"key3\", value3))\r\n```\r\n\r\nHere if \r\nLets say we have following entries\r\n\r\n{uid:1, key1:A1 ,key2:common,key3:1 } \r\n{uid:2, key1:B1 ,key2:common,key3:1 } \r\n{uid:3, key1:C1 ,key2:common,key3:1 } \r\n{uid:4, key1:D1 ,key2:common,key3:1 } \r\n{uid:5, key1:E1 ,key2:common,key3:1 } \r\n\r\n**For Conditions:** \r\n1. **key1=A1 && key2=common && key3=1** \r\n\r\n**Response** \r\n```\r\n{uid:1, key1:A1 ,key2:common,key3:1 }  (Which is expected)\r\n```\r\n\r\n1. **key1=X1 && key2=common && key3=1** \r\n\r\n**Response** \r\n```\r\n{uid:1, key1:A1 ,key2:common,key3:1 } \r\n{uid:2, key1:B1 ,key2:common,key3:1 } \r\n{uid:3, key1:C1 ,key2:common,key3:1 } \r\n{uid:4, key1:D1 ,key2:common,key3:1 } \r\n{uid:5, key1:E1 ,key2:common,key3:1 } \r\n```\r\n\r\n1. **key1=A1 && key2=common && key3=2** \r\n\r\n**Response** \r\n```\r\nNo Result (Which is expected) \r\n```\r\n\r\n**Redis version**\r\n\r\n`redis_version:3.2.12`\r\n\r\n**Redisson version**\r\n\r\n`redission:3.12.3`\r\n\r\n**Redisson configuration**\r\n\r\n```\r\npublic RedissonClient redissonClient() {\r\n  Config config = new Config();\r\n  switch (redisProperties.getMode()) {\r\n  case \"sentinal\":\r\n  \tSentinelServersConfig sconfig = config.useSentinelServers().setMasterName(\"mymaster\");\r\n  \tfor(int i = 0;i<redisProperties.getSentinalUrl().length;i++) {\r\n  \t\tsconfig.addSentinelAddress(redisProperties.getSentinalUrl()[i].toString());\r\n  \t}\r\n  \tbreak;\r\n  }\r\n  return Redisson.create(config);\r\n}\r\n```", "url": "https://github.com/redisson/redisson/issues/2676", "user": "ketankvishwakarma", "labels": ["bug"], "created": "2020-04-07 08:29:08", "closed": "2020-04-13 08:29:04", "commits": {"bce0b830c7bffeaa0d600268cffece9441a07145": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "bce0b830c7bffeaa0d600268cffece9441a07145", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["167045c890609e1a245e21a901f2b044c6090f41"], "nameRev": "bce0b830c7bffeaa0d600268cffece9441a07145 tags/redisson-3.12.5~10", "commitMessage": "Fixed - RLiveObjectService search Conditions.and returns wrong result. #2676\n", "commitDateTime": "2020-04-13 11:29:51", "authoredDateTime": "2020-04-13 11:29:51", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/liveobject/LiveObjectSearch.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 45, "deletions": 2, "lines": 47}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LiveObjectSearch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.LiveObjectSearch.traverseAnd(org.redisson.liveobject.ANDCondition,org.redisson.liveobject.resolver.NamingScheme,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testFindEq2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestIndexed", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestIndexed.getName2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestIndexed.setName2(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bce0b830c7bffeaa0d600268cffece9441a07145"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/liveobject"], "changesInPackagesSPOON": ["org.redisson.liveobject.LiveObjectSearch.traverseAnd(org.redisson.liveobject.ANDCondition,org.redisson.liveobject.resolver.NamingScheme,java.lang.Class)"]}, {"title": "The idle connection does not be released after redis cluster failover.", "body": "In cluster mode, when I called `cluster failover` in redis-cli, the `redis-cli client list` showed that connection number increased than `masterConnectionMinimumIdleSize/ slaveConnectionMinimumIdleSize ` while those connections idle time is larger than `idleConnectionTimeout`. I have tried both redisson verion 3.7.2 and 3.12.4, redis verion 3.2.9 and 5.0.8. **So i wander why the idle connection does not be released after redis cluster failover? It's a feature or the problem of setting or just a bug?** Thanks for reply.\r\n\r\nHere is my setting of redisson:\r\n![image](https://user-images.githubusercontent.com/3824661/78524967-3a375e00-7808-11ea-852a-1c1e9f693c3b.png)\r\n\r\nHere is my redisson connection count and details, and you can see there are many connection idle time is larger than 10s, cmd is NULL, and connection number is larger than masterConnectionMinimumIdleSize, but is does not release the idle connection.\r\n![image](https://user-images.githubusercontent.com/3824661/78525132-d3667480-7808-11ea-9114-d3764f1d182c.png)\r\n![image](https://user-images.githubusercontent.com/3824661/78525166-f09b4300-7808-11ea-9916-5c31971c0b67.png)", "url": "https://github.com/redisson/redisson/issues/2672", "user": "ChePeatio", "labels": ["bug"], "created": "2020-04-06 05:20:28", "closed": "2020-05-06 07:12:52", "commits": {"53fbbf7d1fed02fdf9b44e2be9231c4eb461007b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "f4ad9382e12e4178c794d0fa5d3ab6fa78d9afcb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "53fbbf7d1fed02fdf9b44e2be9231c4eb461007b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5e16a5bf92459a4115296493ff72a740cc41699c"], "nameRev": "53fbbf7d1fed02fdf9b44e2be9231c4eb461007b tags/redisson-3.13.0~23", "commitMessage": "Fixed - connections to master are doubled after redis cluster failover. #2672\n", "commitDateTime": "2020-05-06 10:14:31", "authoredDateTime": "2020-05-06 10:14:31", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 4, "deletions": 12, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "TOT": 17, "UPD": 7, "INS": 5, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).1.run().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testFailoverInCluster()", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f4ad9382e12e4178c794d0fa5d3ab6fa78d9afcb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["53fbbf7d1fed02fdf9b44e2be9231c4eb461007b"], "nameRev": "f4ad9382e12e4178c794d0fa5d3ab6fa78d9afcb tags/redisson-3.13.0~22", "commitMessage": "Fixed - connections to slave are doubled after redis cluster failover. #2672\n", "commitDateTime": "2020-05-07 09:53:43", "authoredDateTime": "2020-05-07 09:53:43", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ClusterNodesDecoder.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterNodeInfo.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 13, "deletions": 3, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterNodesDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ClusterNodesDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "ClusterNodeInfo.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterNodeInfo.Flag", "TOT": 17, "UPD": 0, "INS": 11, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterNodeInfo.Flag.getValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.removeEntry(java.lang.Integer)", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.addEntry(java.lang.Integer,org.redisson.connection.MasterSlaveEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdownEntry(org.redisson.connection.MasterSlaveEntry)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["53fbbf7d1fed02fdf9b44e2be9231c4eb461007b", "f4ad9382e12e4178c794d0fa5d3ab6fa78d9afcb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 44, "deletions": 26, "lines": 70, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 57, "UPD": 15, "INS": 23, "MOV": 15, "DEL": 4, "spoonFilesChanged": 4, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster", "redisson/src/main/java/org/redisson/client/protocol/decoder", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).1.run()", "org.redisson.client.protocol.decoder.ClusterNodesDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "org.redisson.cluster.ClusterNodeInfo.Flag", "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).1.run().1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.removeEntry(java.lang.Integer)", "org.redisson.cluster.ClusterNodeInfo.Flag.getValue()", "org.redisson.connection.MasterSlaveConnectionManager.shutdownEntry(org.redisson.connection.MasterSlaveEntry)", "org.redisson.connection.MasterSlaveConnectionManager.addEntry(java.lang.Integer,org.redisson.connection.MasterSlaveEntry)", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.config.ClusterServersConfig,java.util.Collection)"]}, {"title": "RRateLimiter delete", "body": "Redisson version:3.11.6\r\n\r\n```java\r\nRRateLimiter rateLimiter = redissonClient.getRateLimiter(\"key\");\r\nrateLimiter.trySetRate(RateType.OVERALL, 3, 10, RateIntervalUnit.MINUTES);\r\n//Delete the invalid\r\nrateLimiter.delete();\r\n```\r\n\r\nDelete the invalid", "url": "https://github.com/redisson/redisson/issues/2670", "user": "DingQianWen", "labels": ["bug"], "created": "2020-04-03 15:26:00", "closed": "2020-04-07 05:41:47", "commits": {"e4315b8cd7dffc1ea06b4ccb79e68298a7ab4d30": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "e4315b8cd7dffc1ea06b4ccb79e68298a7ab4d30", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["65e4d2c7af2cbd35147ae111ea5a8007e6c028fe"], "nameRev": "e4315b8cd7dffc1ea06b4ccb79e68298a7ab4d30 tags/redisson-3.12.5~17", "commitMessage": "Fixed - RRateLimiter.delete() method doesn't delete all allocated Redis objects. #2670\n", "commitDateTime": "2020-04-07 08:42:36", "authoredDateTime": "2020-04-07 08:42:36", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRateLimiter.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRateLimiter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiter.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e4315b8cd7dffc1ea06b4ccb79e68298a7ab4d30"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRateLimiter.deleteAsync()"]}, {"title": "Redisson considers XREADGROUP and XCLAIM commands as read only but redis considers them read-write commands not allowing these commands to be executed on read-only replica", "body": "\r\n**Expected behavior**\r\n In a sentinel environment with 1 master(write only), 2 slaves (Read only), Redisson Stream's readGroup and Claim method should execute commands on redis master node.\r\n**Actual behavior**\r\nThe XREADGROUP and XCLAIM redis commands are actually write commands in redis but Redisson consider these as read only commands and executes on slave nodes resulting in the following error \r\nfrom redis:\r\n`org.redisson.client.RedisException: READONLY You can't write against a read only replica.. channel: [id: 0x6de344ad, L:/10.1.60.141:59425 - R:10.1.60.147/10.1.60.147:8223] command: (XREADGROUP), params: [GROUP, TASK_CONSUMER_GROUP, lms_node, COUNT, 10, BLOCK, 15000, STREAMS, TASK_STORE_STREAM, >]`\r\n**Steps to reproduce or test case**\r\n Use readGroups and claim  method in a  master-slave redis environment with master being write only and slaves being read only\r\n**Redis version**\r\n5.0.5\r\n *Redisson version**\r\n3.11.5\r\n**Redisson configuration**\r\n", "url": "https://github.com/redisson/redisson/issues/2663", "user": "AayushyaVajpayee", "labels": ["bug"], "created": "2020-03-30 05:31:21", "closed": "2020-03-30 06:28:02", "commits": {"9d1ac28cf898fd43e855117faaf5e32ffaa74aed": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "0e891a0c1faa12ede65f965e848104ecdea31250": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9d1ac28cf898fd43e855117faaf5e32ffaa74aed", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6cd9b28d9cf17a5d951b28b096634f2d7171fa3b"], "nameRev": "9d1ac28cf898fd43e855117faaf5e32ffaa74aed tags/redisson-3.12.4~18", "commitMessage": "Fixed - XREADGROUP and XCLAIM commands should be executed on Redis master. #2663\n", "commitDateTime": "2020-03-30 09:28:24", "authoredDateTime": "2020-03-30 09:28:24", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonStream.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonStream.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonStream.fastClaimAsync(java.lang.String,java.lang.String,long,java.util.concurrent.TimeUnit,org.redisson.api.StreamMessageId[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonStream.claimAsync(java.lang.String,java.lang.String,long,java.util.concurrent.TimeUnit,org.redisson.api.StreamMessageId[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonStream.readGroupAsync(java.lang.String,java.lang.String,int,long,java.util.concurrent.TimeUnit,org.redisson.api.StreamMessageId,java.util.Map)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0e891a0c1faa12ede65f965e848104ecdea31250", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fcb2206696ed7b7b92342ccc23442cf994e20023"], "nameRev": "0e891a0c1faa12ede65f965e848104ecdea31250 tags/redisson-3.12.4~15", "commitMessage": "Fixed - XREADGROUP and XCLAIM commands should be executed on Redis master. #2663\n", "commitDateTime": "2020-03-30 10:03:17", "authoredDateTime": "2020-03-30 10:03:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonStream.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonStream.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonStream.readGroupAsync(java.lang.String,java.lang.String,int,long,java.util.concurrent.TimeUnit,org.redisson.api.StreamMessageId[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9d1ac28cf898fd43e855117faaf5e32ffaa74aed"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonStream.fastClaimAsync(java.lang.String,java.lang.String,long,java.util.concurrent.TimeUnit,org.redisson.api.StreamMessageId[])", "org.redisson.RedissonStream.readGroupAsync(java.lang.String,java.lang.String,int,long,java.util.concurrent.TimeUnit,org.redisson.api.StreamMessageId,java.util.Map)", "org.redisson.RedissonStream.claimAsync(java.lang.String,java.lang.String,long,java.util.concurrent.TimeUnit,org.redisson.api.StreamMessageId[])"]}, {"title": "FstCodec exception when copying session map in changeSessionId", "body": "We\u2019re currently switching from Lettuce to Redisson to handle our Spring Sessions. We\u2019re using `FstCodec`, because `JacksonJsonCodec` doesn\u2019t support all of the objects we need to serialize.\r\n\r\nWe\u2019re getting an exception processing the [response from Redis when reading the old map](https://github.com/redisson/redisson/blob/6cd9b28d9cf17a5d951b28b096634f2d7171fa3b/redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java#L208) (stack trace at end).\r\n\r\nIt looks like the issue is that the map\u2019s codec isn\u2019t being passed to the batch command, so `FstCodec` is being used for both keys and values, rather than the [map\u2019s `CompositeCodec(StringCodec, FstCodec)`](https://github.com/redisson/redisson/blob/f88365f22969eb4329981d72caff7b6ef7d20330/redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java#L71).\r\n\r\n```\r\norg.redisson.client.RedisException: Unexpected exception while processing command\r\n        at org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:353)\r\n        at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:150)\r\n        at org.redisson.command.CommandBatchService.execute(CommandBatchService.java:160)\r\n        at org.redisson.RedissonBatch.execute(RedissonBatch.java:209)\r\n        at org.redisson.spring.session.RedissonSessionRepository$RedissonSession.changeSessionId(RedissonSessionRepository.java:211)\r\n        at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.changeSessionId(SessionRepositoryFilter.java:274)\r\n        at javax.servlet.http.HttpServletRequestWrapper.changeSessionId(HttpServletRequestWrapper.java:262)\r\n\u2026\r\nCaused by: java.io.IOException: java.lang.NullPointerException\r\n        at org.nustaq.serialization.FSTObjectInput.readObject(FSTObjectInput.java:247)\r\n        at org.redisson.codec.FstCodec$1.decode(FstCodec.java:250)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:368)\r\n        at org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:412)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:377)\r\n\u2026\r\nCaused by: java.lang.NullPointerException\r\n        at org.nustaq.serialization.FSTObjectInput.readObjectWithHeader(FSTObjectInput.java:357)\r\n        at org.nustaq.serialization.FSTObjectInput.readObjectInternal(FSTObjectInput.java:331)\r\n        at org.nustaq.serialization.FSTObjectInput.readObject(FSTObjectInput.java:311)\r\n        at org.nustaq.serialization.FSTObjectInput.readObject(FSTObjectInput.java:245)\r\n        at org.redisson.codec.FstCodec$1.decode(FstCodec.java:250)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:368)\r\n        at org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:412)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:377)\r\n        at org.redisson.client.handler.CommandDecoder.decodeCommandBatch(CommandDecoder.java:266)\r\n        at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:207)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:134)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:498)\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\n```", "url": "https://github.com/redisson/redisson/issues/2660", "user": "eager", "labels": ["bug"], "created": "2020-03-27 20:53:10", "closed": "2020-03-30 06:39:24", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "FstCodec copy constructor doesn\u2019t preserve ConfType of FSTConfiguration", "body": "We have the following code:\r\n```java\r\nfinal Config config = new Config();\r\nconfig.setCodec(new FstCodec(FSTConfiguration.createJsonConfiguration()));\r\nfinal RedissonClient client = Redisson.create(config);\r\n```\r\nWhen [a copy of the codec is created by `RedisExecutor`](https://github.com/redisson/redisson/blob/6cd9b28d9cf17a5d951b28b096634f2d7171fa3b/redisson/src/main/java/org/redisson/command/RedisExecutor.java#L687), the [`ConfType` of the `FstConfiguration`](https://github.com/RuedigerMoeller/fast-serialization/blob/59f8f800b79479d0b9c80901cf55903d9b027f26/src/main/java/org/nustaq/serialization/FSTConfiguration.java#L63) is always `DEFAULT`.\r\n\r\nThis can be fixed by using [`FSTConfiguration#deriveConfiguration`](https://github.com/RuedigerMoeller/fast-serialization/blob/59f8f800b79479d0b9c80901cf55903d9b027f26/src/main/java/org/nustaq/serialization/FSTConfiguration.java#L1302).", "url": "https://github.com/redisson/redisson/issues/2658", "user": "eager", "labels": ["bug"], "created": "2020-03-27 20:32:04", "closed": "2020-03-29 05:21:58", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Spring Data connector sends multiGet (MGET) commands to master instead of slave", "body": "\r\n**Expected behavior**\r\nWhen using a master/slave configuration using Sentinel and ReadMode of SLAVE, all Redis reads should go to the slave nodes. \r\n\r\n**Actual behavior**\r\nReads of type multiGet (MGET) get sent to the master node.\r\n\r\n**Steps to reproduce or test case**\r\nNOTE: To reproduce, use the Spring Data Redisson connector.\r\n1. Set up a master/slave Redis configuration using Sentinel and run the Redis MONITOR command on master and slave nodes.  \r\n2. Do a SET on a key. You should see the command on the master node first. The master will send the command to its slaves.\r\n3. Do a GET on the key. You should see the command on the slave node\r\n4. Do an MGET on an array of keys including the key you just set. You will see the command on the master node instead of the slave node.\r\n\r\n**Redis version**\r\n5.0.7\r\n\r\n**Redisson version**\r\n3.12.3\r\n\r\n**Redisson configuration**\r\nMaster/Slave using a Sentinel. Connect to Redis using Spring Data Redisson connector.", "url": "https://github.com/redisson/redisson/issues/2656", "user": "milowg", "labels": ["bug"], "created": "2020-03-27 18:15:59", "closed": "2020-03-28 05:37:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": " Unable to decode data...InvalidDefinitionException..Collections$SetFromMap..no Creators", "body": "- tomcat8\r\n- codec: org.redisson.codec.JsonJacksonCodec\r\n- readMode: MEMORY\r\n- updateMode: AFTER_REQUEST\r\n- redisson-tomcat-8-3.12.2.jar\r\n- redisson-all-3.12.2.jar\r\n\r\n\r\n\r\n\r\nerror stack :\r\n\r\n``` \r\n[redisson-netty-2-28] ERROR org.redisson.client.handler.CommandPubSubDecoder - Unable to decode data. channel: [id: 0x3c021770, L:/10.0.0.85:52584 - R:r-8vbjwkx5e2lpm7j5ws.redis.zhangbei.rds.aliyuncs.com/10.0.0.126:6379], reply: ReplayingDecoderByteBuf(ridx=271, widx=271)\r\ncom.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `java.util.Collections$SetFromMap` (no Creators, like default construct, exist): no default no-arguments constructor found\r\n at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 100] (through reference chain: org.redisson.tomcat.AttributeRemoveMessage[\"names\"])\r\n\tat com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)\r\n\t...\r\n\r\n\t... \r\n\tat org.redisson.codec.JsonJacksonCodec$2.decode(JsonJacksonCodec.java:95)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:368)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:412)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:377)\r\n\tat org.redisson.client.handler.CommandPubSubDecoder.decodeCommand(CommandPubSubDecoder.java:76)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:134)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:91)\r\n```\r\n\r\nSo i saw the source of \r\n\r\n> RedissonSession.java\r\n\r\n :\r\n\r\n![image](https://user-images.githubusercontent.com/813633/77735780-1a54ad00-7046-11ea-9518-9de7f4f51ba2.png)\r\n\r\n![image](https://user-images.githubusercontent.com/813633/77735796-1fb1f780-7046-11ea-9307-893d421308ff.png)\r\n\r\n\r\nThe class SetFromMap of Collections don't have no args construct method....\r\nhow can i fixed this .\r\nThx\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2654", "user": "cloudswindow", "labels": ["bug"], "created": "2020-03-27 08:15:19", "closed": "2020-03-27 08:27:09", "commits": {"6cd9b28d9cf17a5d951b28b096634f2d7171fa3b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6cd9b28d9cf17a5d951b28b096634f2d7171fa3b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["02befca6de2381dbd7a5e8a843616a7858de5c33"], "nameRev": "6cd9b28d9cf17a5d951b28b096634f2d7171fa3b tags/redisson-3.12.4~19", "commitMessage": "Fixed - JsonJacksonCodec unable to serialize removed attributes of Tomcat Session. #2654\n", "commitDateTime": "2020-03-27 11:28:27", "authoredDateTime": "2020-03-27 11:28:27", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6cd9b28d9cf17a5d951b28b096634f2d7171fa3b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.save()"]}, {"title": "RedisPipelineException-WriteRedisConnectionException-invalid commands", "body": "\u62a5\u9519\u4fe1\u606f\uff1a\r\nServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.data.redis.connection.RedisPipelineException: Pipeline contained one or more invalid commands; nested exception is org.redisson.client.WriteRedisConnectionException: Unable to write command into connection! Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=0, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=31, freeConnectionsCounter=value:63:queue:0, freezed=false, freezeReason=null, client=[addr=redis://redis-m.xxx.com:6379], nodeType=MASTER, firstFail=0]]], connection: RedisConnection@1628911 [redisClient=[addr=redis://redis-m.xxx.com:6379], channel=[id: 0xed6e09bd, L:/1xx.sss.xxx.xxx:sss - R:redis-m.xxx.com/xxx.xx.x6.2s02:sss], currentCommand=null], command: null, params: null after 3 retry attempts] with root cause \r\njava.lang.NullPointerException: null\r\n\r\n\u914d\u7f6e\uff1a\r\nmasterSlaveServersConfig:\r\n  idleConnectionTimeout: 10000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  failedSlaveReconnectionInterval: 3000\r\n  failedSlaveCheckInterval: 60000\r\n  password: null\r\n  subscriptionsPerConnection: 5\r\n  clientName: null\r\n  loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  slaveConnectionMinimumIdleSize: 32\r\n  slaveConnectionPoolSize: 64\r\n  masterConnectionMinimumIdleSize: 32\r\n  masterConnectionPoolSize: 64\r\n  readMode: \"SLAVE\"\r\n  subscriptionMode: \"SLAVE\"\r\n  slaveAddresses:\r\n#    - \"redis://127.0.0.1:6381\"\r\n    - \"redis://redis-s.xxxx.com:6379\"\r\n  masterAddress: \"redis://redis-m.xxxx.com:6379\"\r\n  database: 0\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.FstCodec> {}\r\ntransportMode: \"NIO\"\r\n\r\n\u8c03\u7528\u573a\u666f\uff1a\r\n\u7528\u6237\u9000\u51fa\u767b\u5f55\u65f6\uff0c\u5220\u9664\u7f13\u5b58\u4e2d\u7684token\u548c\u7528\u6237\u4fe1\u606f\r\nconsumerTokenServices.revokeToken(logoutDto.getToken());\r\ntokenCacheService.removeCellphoneTokenKey();\r\ntokenCacheService.removeCellphoneToken(tokenCacheKey);\r\n\r\n\u62a5\u9519\u4fe1\u606f\u91cc\u9762\u63d0\u793a\u4e86currentCommand=null\uff0c\u4f46\u662f\u6ca1\u6709\u4e86\u66f4\u7ec6\u7684\u65e5\u5fd7\u4e86\r\n\u4e0d\u77e5\u662f\u4ec0\u4e48\u539f\u56e0\u5bfc\u81f4command=null\u5462\r\n\r\n\u8c22\u8c22\uff01", "url": "https://github.com/redisson/redisson/issues/2649", "user": "syschen", "labels": ["bug"], "created": "2020-03-23 02:41:00", "closed": "2020-04-09 11:49:41", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "Question about PingConnectionInterval and KeepAlive", "body": "Redisson: 3.12.1\r\nJava: 1.8\r\n\r\nIn production we saw below error few times. As per some closed issues if we set `pingConnectionInterval`, will the excess idle connections be closed after `idleConnectionTimeout` ? \r\nAnd also enabling `KeepAlive` solved the issue for any? \r\n\r\n```\r\norg.redisson.client.WriteRedisConnectionException: Unable to write command into connection! Node source: NodeSource [slot=0, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=0, freeConnectionsCounter=value:230:queue:0, freezed=false, freezeReason=null, client=[addr=redis://<removed>:6379], nodeType=MASTER, firstFail=0]]], connection: RedisConnection@1929783894 [redisClient=[addr=redis://<removed>:6379], channel=[id: 0x3a9bcda0, L:/<<removed>>:6379], currentCommand=CommandData [promise=RedissonPromise [promise=ImmediateEventExecutor$ImmediatePromise@63c1de5f(success)], command=(BLPOP), params=[userqueue2, 60], codec=org.redisson.client.codec.StringCodec]], command: (BLPOP), params: [userqueue2, 60] after 3 retry attempts\r\n    at org.redisson.command.RedisExecutor.checkWriteFuture(RedisExecutor.java:280)\r\n    at org.redisson.command.RedisExecutor.access$100(RedisExecutor.java:60)\r\n    at org.redisson.command.RedisExecutor$1.operationComplete(RedisExecutor.java:162)\r\n    at org.redisson.command.RedisExecutor$1.operationComplete(RedisExecutor.java:159)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:551)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490)\r\n    at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615)\r\n    at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:608)\r\n    at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)\r\n    at org.redisson.client.handler.CommandsQueue.channelInactive(CommandsQueue.java:83)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:260)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:246)\r\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:239)\r\n```\r\n\r\n```\r\nConfig config = new Config();\r\n\t\tconfig.setCodec(StringCodec.INSTANCE);\r\n\t\t\r\n\t\tReplicatedServersConfig replicatedServersConfig = config.useReplicatedServers()\r\n\t\t\t\t.setScanInterval(2000) \r\n\t\t\t\t.setReadMode(READ_MODE) \r\n\t\t\t\t.setTimeout(CacheConstants.TIMEOUT) \r\n\t\t\t\t.setMasterConnectionPoolSize(CacheConstants.MAX_TOTAL_CONNECTIONS)\r\n\t\t\t\t.setSlaveConnectionPoolSize(CacheConstants.SLAVE_MAX_TOTAL_CONNECTIONS);\r\n```", "url": "https://github.com/redisson/redisson/issues/2647", "user": "rgampa", "labels": ["bug"], "created": "2020-03-22 22:24:23", "closed": "2020-03-26 11:18:43", "commits": {"9039e46747c1cbaace1c7329809c925b67ab8c11": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "9039e46747c1cbaace1c7329809c925b67ab8c11", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ed6d598a7e1422548d85627ae2643f0e62e92957"], "nameRev": "9039e46747c1cbaace1c7329809c925b67ab8c11 tags/redisson-3.12.4~22", "commitMessage": "Fixed - \"response has been skipped due to timeout\" error if pingConnectionInterval setting set and blocking command executed. #2647\n", "commitDateTime": "2020-03-26 14:17:11", "authoredDateTime": "2020-03-26 14:17:11", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/PingConnectionHandler.java", "insertions": 12, "deletions": 7, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PingConnectionHandler.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1.run(io.netty.util.Timeout)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9039e46747c1cbaace1c7329809c925b67ab8c11"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 7, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext)", "org.redisson.client.handler.PingConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext)", "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1.run(io.netty.util.Timeout)"]}, {"title": "RExecutorService - Some tasks won't get executed ", "body": "The setup:\r\nService A -> Producing tasks to executor service\r\nService B -> Consuming tasks (RedissonNode)\r\nServiceA static, ServiceB is autoscaled in N replicas\r\n\r\n**Expected behaviour**\r\nAll tasks put into executor service will get executed, tasks counter is reporting correct value.\r\n\r\n**Actual behaviour**\r\nSome tasks won't get executed, the task counter is reporting *negative* numbers.\r\n\r\n**Steps to reproduce or test case**\r\nI was trying hard to get a reproducer on this but I am unable to simulate it deterministically. But I tracked it down to shutdown of the redisson node.\r\nThe best that could be done for reproducing the issue is to run n replicas of RedissonNode(s) schedule hundreds of tasks to the executor service and then shut down and startup some of these RedissonNodes. If for example the task print some random id or stores it somewhere you will find out that some ids are missing even though the queue is empty (the tasks HASH is empty) and counter is having a negative value of exact number of missing tasks.\r\n\r\nMy hypothesis is that the issue is in org.redisson.executor.TasksRunnerService#executeCallable\r\nif the RedissonInstance is in shutdown state the finally clause will still decrement the counter but as the exception is not thrown the task is not re-queued. But it is a wild guess.\r\n\r\n**Redis version**\r\nSingle node non-clustered v5.0.7\r\n\r\n**Redisson version**\r\n3.12.3\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2645", "user": "coufalja", "labels": ["bug"], "created": "2020-03-20 16:00:07", "closed": "2020-05-27 13:23:30", "commits": {"7707cd531656557c79ed99ba8d91dc244d8190ac": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 67.00027777777778, "commitsDetails": [{"commitHash": "7707cd531656557c79ed99ba8d91dc244d8190ac", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a3061e8c4e7826e6c62c2b4cb53e0b626b567388"], "nameRev": "7707cd531656557c79ed99ba8d91dc244d8190ac tags/redisson-3.13.1~29", "commitMessage": "Fixed - some tasks are not executed if RedissonNode shutdown #2645\n", "commitDateTime": "2020-05-27 16:25:39", "authoredDateTime": "2020-05-27 16:25:39", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/executor/RedissonExecutorRemoteService.java", "insertions": 28, "deletions": 1, "lines": 29}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 20, "deletions": 19, "lines": 39}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonExecutorServiceTest.java", "insertions": 21, "deletions": 9, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.executeMethod(java.lang.Class,org.redisson.RBlockingQueue,java.util.concurrent.ExecutorService,org.redisson.RemoteServiceRequest,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdown(long,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonExecutorRemoteService.invokeMethod(org.redisson.executor.RemoteServiceRequest,org.redisson.executor.RemoteServiceMethod,org.redisson.api.RFuture,org.redisson.misc.RPromise)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorRemoteService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.renewRetryTime(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.scheduleRetryTimeRenewal(java.lang.String,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeCallable(org.redisson.executor.TaskParameters)", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.TaskParameters,boolean)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.scheduleRetryTimeRenewal(java.lang.String,java.lang.Long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testFailoverInSentinel()", "TOT": 15, "UPD": 15, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testNodeFailover()", "TOT": 14, "UPD": 3, "INS": 7, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.before()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testTaskFinishing()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testBatchExecute()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testNodeFailover().2.finish(mockit.Invocation,java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7707cd531656557c79ed99ba8d91dc244d8190ac"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 61, "deletions": 29, "lines": 90, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 30, "UPD": 4, "INS": 12, "MOV": 10, "DEL": 4, "spoonFilesChanged": 4, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.executor.TasksRunnerService.scheduleRetryTimeRenewal(java.lang.String,long)", "org.redisson.executor.TasksRunnerService.renewRetryTime(java.lang.String)", "org.redisson.executor.RedissonExecutorRemoteService", "org.redisson.executor.TasksRunnerService.executeCallable(org.redisson.executor.TaskParameters)", "org.redisson.executor.TasksRunnerService.scheduleRetryTimeRenewal(java.lang.String,java.lang.Long)", "org.redisson.executor.RedissonExecutorRemoteService.invokeMethod(org.redisson.executor.RemoteServiceRequest,org.redisson.executor.RemoteServiceMethod,org.redisson.api.RFuture,org.redisson.misc.RPromise)", "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.TaskParameters,boolean)", "org.redisson.connection.MasterSlaveConnectionManager.shutdown(long,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonRemoteService.executeMethod(java.lang.Class,org.redisson.RBlockingQueue,java.util.concurrent.ExecutorService,org.redisson.RemoteServiceRequest,java.lang.Object)"]}, {"title": "getPatternTopic not working", "body": "**Expected behavior**\r\n\r\nReceive published data\r\n\r\n**Actual behavior**\r\n\r\nListener never receives published data\r\n\r\n**Steps to reproduce or test case**\r\n\r\n```java\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RedissonRxClient;\r\nimport org.redisson.client.codec.StringCodec;\r\n\r\npublic class RedisTest {\r\n  public static void main(String[] args) {\r\n    RedissonRxClient redissonRx = Redisson.createRx();\r\n\r\n    redissonRx.getPatternTopic(\"test_*\", StringCodec.INSTANCE)\r\n      .addListener(String.class, (pattern, channel, message) -> {\r\n\r\n        System.out.println(pattern);\r\n        System.out.println(channel);\r\n        System.out.println(message);\r\n\r\n      }).flatMap(r -> {\r\n\r\n        System.out.println(r);\r\n        return redissonRx.getTopic(\"test_2\").publish(\"test\");\r\n\r\n      }).subscribe(\r\n        System.out::println,\r\n        Throwable::printStackTrace\r\n      );\r\n  }\r\n```\r\n\r\n**Redis version**\r\n5.0.7\r\n**Redisson version**\r\n3.12.3\r\n**Redisson configuration**\r\nDefault", "url": "https://github.com/redisson/redisson/issues/2623", "user": "wooque", "labels": ["bug"], "created": "2020-03-04 23:56:02", "closed": "2020-03-05 11:32:05", "commits": {"93544bad037f145f87a5d99e26a59ebece932416": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "93544bad037f145f87a5d99e26a59ebece932416", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["199109334b174596083092842bc91241e8bfe5b2"], "nameRev": "93544bad037f145f87a5d99e26a59ebece932416 tags/redisson-3.12.4~48", "commitMessage": "Fixed - RPatternTopicRx, RPatternTopicReactive  RPatternTopic.addListenerAsync methods don't work. #2623\n", "commitDateTime": "2020-03-05 14:33:00", "authoredDateTime": "2020-03-05 14:33:00", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonPatternTopic.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPatternTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPatternTopic.addListenerAsync(org.redisson.client.RedisPubSubListener)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["93544bad037f145f87a5d99e26a59ebece932416"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonPatternTopic.addListenerAsync(org.redisson.client.RedisPubSubListener)"]}, {"title": "Redisson entity invalidation with JCache CreatedExpiryPolicy", "body": "We are experimenting with Redisson through the JCache implementation. We don't understand completely the behaviour of Redisson using the JCache CreatedExpiryPolicy.\r\n\r\n**Test**\r\nThe test has been conducted using a cache with a TTL of 30 seconds and CreatedExpiryPolicy as expiry policy. An entry was created and put into the cache at the beginning of the tests, and checked using a loop. When the TTL expiration happens, we try to put again the entity in the cache.  To do this, we use another loop that performs retries until it succeeds.\r\n\r\n**Actual behavior**\r\nWhen the entity is invalidated, it is not possible to put again a new entity with the same key for a given amount of time (usually some seconds). We also tried to remove the entity with that given key just after the invalidation, but it is not possible to do that. It seems like the entity is 'freezed' for a given amount of seconds. The duration of this 'freezed' status is not clear to us. \r\n\r\nIn particular, during this 'freezed' status we noticed the following:\r\n- on Redis the entity exists (we checked with `redis-cli`) with the new value and the same key;\r\n- Redisson returns 'null' when we try to get the entity;\r\n- the `jcache_timeout_set:{cache-name}` dataset on Redis (that we think is the one used by Redisson in order to keep track of the timestamps) keeps the old timestamp.\r\n\r\n**Expected Behaviour**\r\nFor our point of view, the entity should also be removed from Redis when the TTL is expired (probably at the very first moment in which one tries to get it from redis).\r\n\r\nIs the actual behaviour by design? How is the duration of this 'freezed' status established?\r\n", "url": "https://github.com/redisson/redisson/issues/2622", "user": "gbarbon", "labels": ["bug"], "created": "2020-03-04 15:58:09", "closed": "2020-03-05 06:39:09", "commits": {"a19fefd8076b127c6750ac612bea03e0aa44ac7b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a19fefd8076b127c6750ac612bea03e0aa44ac7b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4496a80af679052ae466ef744150b2c43c79c0db"], "nameRev": "a19fefd8076b127c6750ac612bea03e0aa44ac7b tags/redisson-3.12.4~51", "commitMessage": "Fixed - cache entry can't be updated if JCache instance created with CreatedExpiryPolicy. #2622\n", "commitDateTime": "2020-03-05 09:39:47", "authoredDateTime": "2020-03-05 09:39:47", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 38, "deletions": 101, "lines": 139}, {"filePath": "redisson/src/test/java/org/redisson/jcache/JCacheTest.java", "insertions": 36, "deletions": 0, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.getValueLocked(java.lang.Object)", "TOT": 8, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getValue(java.lang.Object)", "TOT": 24, "UPD": 20, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.putValue(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putIfAbsentValue(java.lang.Object,java.lang.Object)", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.containsKeyAsync(java.lang.Object)", "TOT": 8, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValue(java.lang.Object)", "TOT": 15, "UPD": 13, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValueLocked(java.lang.Object,java.lang.Object)", "TOT": 15, "UPD": 13, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValue(java.lang.Object,java.lang.Object)", "TOT": 23, "UPD": 21, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemoveValues(java.util.Collection)", "TOT": 26, "UPD": 24, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "TOT": 14, "UPD": 12, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValueLocked(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 11, "UPD": 9, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 33, "UPD": 31, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object)", "TOT": 28, "UPD": 19, "INS": 0, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplaceValue(java.lang.Object,java.lang.Object)", "TOT": 15, "UPD": 6, "INS": 0, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAllAsync(java.util.Set)", "TOT": 29, "UPD": 25, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.putAllValues(java.util.Map)", "TOT": 49, "UPD": 47, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplaceValueLocked(java.lang.Object,java.lang.Object)", "TOT": 15, "UPD": 10, "INS": 0, "MOV": 5, "DEL": 0}]}, {"spoonFilePath": "JCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCacheTest.testCreatedExpiryPolicy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a19fefd8076b127c6750ac612bea03e0aa44ac7b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 38, "deletions": 101, "lines": 139, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 320, "UPD": 264, "INS": 4, "MOV": 37, "DEL": 15, "spoonFilesChanged": 1, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/jcache"], "changesInPackagesSPOON": ["org.redisson.jcache.JCache.containsKeyAsync(java.lang.Object)", "org.redisson.jcache.JCache.removeValueLocked(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.putAllValues(java.util.Map)", "org.redisson.jcache.JCache.putValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.replaceValueLocked(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndReplaceValueLocked(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAllAsync(java.util.Set)", "org.redisson.jcache.JCache.getAndReplaceValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getValue(java.lang.Object)", "org.redisson.jcache.JCache.putIfAbsentValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getValueLocked(java.lang.Object)", "org.redisson.jcache.JCache.getAndRemoveValues(java.util.Collection)", "org.redisson.jcache.JCache.removeValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.removeValue(java.lang.Object)"]}, {"title": "Memory leak or misconfigured", "body": "We are having an issue using Redisson with Hibernate 5.3.\r\n\r\nIt appears the items are getting removed correctly due to the TTL, but their is still a Sorted Set that grows without ever getting pruned.\r\n\r\nAny of the \"redisson__map_cache__last_access__set:{**}\" grow without ever having elements removed.\r\n\r\nCurrent properties:\r\nhibernate.cache.redisson.timestamps.expiration.time_to_live: 10\r\nhibernate.cache.redisson.naturalid.expiration.time_to_live: 10\r\nhibernate.cache.redisson.collection.expiration.time_to_live: 10\r\nhibernate.cache.redisson.entity.expiration.time_to_live: 10\r\nhibernate.cache.redisson.query.expiration.time_to_live: 10\r\n\r\nAdd sensible max. Otherwise they are unbounded.\r\nhibernate.cache.redisson.timestamps.eviction.max_entries: 10000\r\nhibernate.cache.redisson.naturalid.eviction.max_entries: 10000\r\nhibernate.cache.redisson.collection.eviction.max_entries: 10000\r\nhibernate.cache.redisson.entity.eviction.max_entries: 10000\r\nhibernate.cache.redisson.query.eviction.max_entries: 10000\r\n\r\nAlso tried adding:\r\nhibernate.cache.redisson.timestamps.expiration.max_idle_time: 0\r\nhibernate.cache.redisson.naturalid.expiration.max_idle_time: 0\r\nhibernate.cache.redisson.collection.expiration.max_idle_time: 0\r\nhibernate.cache.redisson.entity.expiration.max_idle_time: 0\r\nhibernate.cache.redisson.query.expiration.max_idle_time: 0\r\n\r\nI've traced the code and I don't see any locations where the redisson__map_cache__last_access__set has any elements removed.\r\n\r\nIn the MapCacheEvictionTask, it does pass in the key, but it is never used in the LUA.\r\n\r\nLet me know if I'm missing something in the config. Thanks!", "url": "https://github.com/redisson/redisson/issues/2597", "user": "mikemosseri", "labels": ["bug"], "created": "2020-02-19 17:12:00", "closed": "2020-02-20 06:31:22", "commits": {"5e57edad74af16351af4953dacb95be219cea63d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5e57edad74af16351af4953dacb95be219cea63d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3bd1663a3ae218da7dca990448f750004bf74a93"], "nameRev": "5e57edad74af16351af4953dacb95be219cea63d tags/redisson-3.12.3~41", "commitMessage": "Fixed - redisson__map_cache__last_access__set* objects continuously grow in size if maxSize defined for RMapCache object or max_entries defined for Hibernate factory. #2597\n", "commitDateTime": "2020-02-20 09:31:24", "authoredDateTime": "2020-02-20 09:31:24", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/eviction/MapCacheEvictionTask.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 26, "deletions": 0, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MapCacheEvictionTask.java", "spoonMethods": [{"spoonMethodName": "org.redisson.eviction.MapCacheEvictionTask.execute()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testExpirationWithMaxSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5e57edad74af16351af4953dacb95be219cea63d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/eviction"], "changesInPackagesSPOON": ["org.redisson.eviction.MapCacheEvictionTask.execute()"]}, {"title": "Redisson does not propogate security principal", "body": "see discourse here: http://tomcat.10.x6.nabble.com/Tomcat-doesn-t-propogate-Security-Credentials-during-session-failover-td5094871.html\r\n\r\nSo the bug comes down to the fact that Redisson uses StandardSession, which does not serialize the security credential _at all_. Redisson should either:\r\n\r\n1) Implement/Extend it's own Session object\r\n2) Intentionally replicate security credentials\r\n\r\n**Expected behavior**\r\n\r\nIf a failover event occurs, it should go un-noticed to an end user\r\n\r\n**Actual behavior**\r\n\r\nThe user is logged out during a failover event\r\n\r\n**Steps to reproduce or test case**\r\n\r\nSo you have two tomcat nodes: A & B, clustered in any fashion (forget I\r\nmentioned redisson) of your choosing; let's say they're clustered using the\r\nbuilt in tcp point-to-point replication. Have 5 people logged into an\r\napplication on the first server using standard JavaEE APIs\r\n(HttpServletrequest.login) Now turn off server A. Your load balancer starts\r\nsending traffic to server B. Their sessions will be there, BUT they will be\r\nlogged out; one has to call HttpServletRequest.login() again. Upon login,\r\nTomcat destroys the previous session (as it should), nullifying any benefit\r\nfor clustering the application in the first place.\r\n\r\n**Redisson version**\r\n<lib>org.redisson:redisson-all:3.12.0</lib>\r\n<lib>org.redisson:redisson-tomcat-8:3.12.0</lib>\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2589", "user": "exabrial", "labels": ["bug", "tomcat"], "created": "2020-02-13 14:16:39", "closed": "2020-04-14 06:41:57", "commits": {"167045c890609e1a245e21a901f2b044c6090f41": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "88172a2a24fa0b5e52c4a0721290cf5b10517b0c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 60.000277777777775, "commitsDetails": [{"commitHash": "167045c890609e1a245e21a901f2b044c6090f41", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c84b183b556eab0ec9e2298d9b9d94b99fed4db1"], "nameRev": "167045c890609e1a245e21a901f2b044c6090f41 tags/redisson-3.12.5~11", "commitMessage": "Fixed - Redisson Tomcat Manager doesn't store principal and authType session attributes. #2589\n", "commitDateTime": "2020-04-10 10:13:57", "authoredDateTime": "2020-04-10 10:13:57", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 36, "deletions": 1, "lines": 37}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 36, "deletions": 1, "lines": 37}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 49, "deletions": 20, "lines": 69}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.setPrincipal(java.security.Principal)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.setAuthType(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.load(java.util.Map)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "88172a2a24fa0b5e52c4a0721290cf5b10517b0c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["afc330f892858f5745c7ff7d4f0ab22207bf8eea"], "nameRev": "88172a2a24fa0b5e52c4a0721290cf5b10517b0c tags/redisson-3.12.5~8", "commitMessage": "Fixed - Redisson Tomcat Manager doesn't store principal and authType session attributes. #2589\n", "commitDateTime": "2020-04-13 11:36:57", "authoredDateTime": "2020-04-13 11:36:57", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["167045c890609e1a245e21a901f2b044c6090f41"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 121, "deletions": 22, "lines": 143, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 11, "UPD": 1, "INS": 10, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.setAuthType(java.lang.String)", "org.redisson.tomcat.RedissonSession", "org.redisson.tomcat.RedissonSession.load(java.util.Map)", "org.redisson.tomcat.RedissonSession.setPrincipal(java.security.Principal)", "org.redisson.tomcat.RedissonSession.save()"]}, {"title": "'java.lang.IndexOutOfBoundsException' exception in org.redisson.jcache.JCacheEventCodec", "body": "I'm using a Redis Cluster over JCache API with Redisson 3.12.0.\r\n\r\nThis is my codec:\r\n```\r\nConfig config = new Config();\r\nconfig.setCodec( \r\n   FSTConfiguration.createUnsafeBinaryConfiguration()\r\n                               .setCrossPlatform( false )\r\n                               .setForceSerializable( true ) \r\n);\r\n```\r\n\r\nAnd I'm using **javax.cache.event.CacheEntryListener** the following way:\r\n```\r\nclass MyEventListener implements CacheEntryRemovedListener<SomeCacheKey, SomeCacheValue>, Serializable {\r\n    private static final long serialVersionUID = ...;\r\n\r\n    @Override\r\n    public void onRemoved( Iterable<CacheEntryEvent<? extends SomeCacheKey,\r\n            ? extends SomeCacheValue>> events ) {\r\n        ...\r\n    }\r\n}\r\n\r\ncache.registerCacheEntryListener( new MutableCacheEntryListenerConfiguration<K, V>(\r\n                    new FactoryBuilder.SingletonFactory<>( new MyEventListener ()) ),\r\n                    new FactoryBuilder.SingletonFactory<>( event -> true ),\r\n                    false,\r\n                    true\r\n);\r\n```\r\n\r\nWhen the event occurs, it comes to **org.redisson.jcache.JCacheEventCodec** failing here:\r\n```\r\npublic Object decode(ByteBuf buf, State state) throws IOException {\r\n            List<Object> result = new ArrayList();\r\n            int keyLen;\r\n            if (PlatformDependent.isWindows()) {\r\n                keyLen = buf.readIntLE();\r\n            } else {\r\n                keyLen = (int)buf.readLongLE();\r\n            }\r\n\r\n            ByteBuf keyBuf = buf.readSlice(keyLen);\r\n```\r\nwith this:\r\n```\r\njava.lang.IndexOutOfBoundsException: \r\nreaderIndex(4) + length(1342177280) exceeds writerIndex(175): \r\nUnpooledSlicedByteBuf(ridx: 4, widx: 175, cap: 175/175, unwrapped: PooledUnsafeDirectByteBuf(ridx: 311, widx: 311, cap: 464))\r\n\r\nio.netty.buffer.AbstractByteBuf.checkReadableBytes0(AbstractByteBuf.java:1477)\r\nio.netty.buffer.AbstractByteBuf.checkReadableBytes(AbstractByteBuf.java:1463)\r\nio.netty.buffer.AbstractByteBuf.readSlice(AbstractByteBuf.java:880)\r\norg.redisson.jcache.JCacheEventCodec$1.decode(JCacheEventCodec.java:45)\r\norg.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:368)\r\norg.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:412)\r\norg.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:377)\r\norg.redisson.client.handler.CommandPubSubDecoder.decodeCommand(CommandPubSubDecoder.java:76)\r\norg.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:134)\r\norg.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:91)\r\nio.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:498)\r\nio.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\nio.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\nio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\r\nio.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\nio.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\nio.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\nio.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\nio.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\nio.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\nio.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\nio.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\nio.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\nio.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\njava.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nChanging **buf.readIntLE() / buf.readLongLE()** to **buf.readInt() / buf.readLong()** fixes the issue.\r\n\r\nCan anyone assist with any explanations?", "url": "https://github.com/redisson/redisson/issues/2588", "user": "micherr", "labels": ["bug"], "created": "2020-02-13 09:38:28", "closed": "2020-02-18 08:54:18", "commits": {"7ab373779d7bffff05b0a997e7b32d44401386f9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "7ab373779d7bffff05b0a997e7b32d44401386f9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["20023ad03b5f472eba06a093d2848b8523bb46b3"], "nameRev": "7ab373779d7bffff05b0a997e7b32d44401386f9 tags/redisson-3.12.2~2", "commitMessage": "Fixed - exception in org.redisson.jcache.JCacheEventCodec #2588\n", "commitDateTime": "2020-02-18 11:53:58", "authoredDateTime": "2020-02-18 11:53:58", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/codec/BaseEventCodec.java", "insertions": 88, "deletions": 0, "lines": 88}, {"filePath": "redisson/src/main/java/org/redisson/codec/MapCacheEventCodec.java", "insertions": 11, "deletions": 90, "lines": 101}, {"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 41, "deletions": 54, "lines": 95}, {"filePath": "redisson/src/main/java/org/redisson/jcache/JCacheEventCodec.java", "insertions": 12, "deletions": 59, "lines": 71}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.addListener(org.redisson.api.map.event.MapEntryListener)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.BaseEventCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapCacheEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.hashCode()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec", "TOT": 17, "UPD": 1, "INS": 3, "MOV": 6, "DEL": 7}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State,org.redisson.client.protocol.Decoder)", "TOT": 9, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.OSType", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.getMapValueDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.getMapValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.getMapKeyDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.getValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.newCodec(java.lang.ClassLoader,org.redisson.codec.MapCacheEventCodec)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.getValueDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache", "TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAsync(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getValue(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putAllValues(java.util.Map)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putValue(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putIfAbsentValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAllAsync(java.util.Set)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.containsKeyAsync(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getLockedLock(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putAsync(java.lang.Object,java.lang.Object)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValues(java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndPutValue(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndPutAsync(java.lang.Object,java.lang.Object)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putAllAsync(java.util.Map)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putIfAbsentAsync(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValue(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.removeAsync(java.lang.Object)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.removeAsync(java.lang.Object,java.lang.Object)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemoveValues(java.util.Collection)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemoveAsync(java.lang.Object)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceAsync(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplaceValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceAsync(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplaceAsync(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.removeAllAsync(java.util.Set)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.clearAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.get(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.write(java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.evalWrite(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.evalRead(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.waitSync(double,org.redisson.api.RFuture)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAll(java.util.Set)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.containsKey(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.loadAll(java.util.Set,boolean,javax.cache.integration.CompletionListener)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.put(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndPut(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putAll(java.util.Map)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.putIfAbsent(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.handleException(org.redisson.misc.RPromise,java.lang.Exception)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.remove(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.remove(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemove(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplace(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.removeAll(java.util.Set)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.scanIterator(java.lang.String,org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.clear()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.invoke(java.lang.Object,javax.cache.processor.EntryProcessor,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean)", "TOT": 23, "UPD": 10, "INS": 5, "MOV": 8, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.loadValue(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.waitSync(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.unwrap(java.lang.Class)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.sendSync(boolean,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.loadAll(java.util.Set,boolean,javax.cache.integration.CompletionListener).2.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean).7.onMessage(java.lang.CharSequence,java.util.List)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean).8.onMessage(java.lang.CharSequence,java.util.List)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean).9.onMessage(java.lang.CharSequence,java.util.List)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean).6.onMessage(java.lang.CharSequence,java.util.List)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.writeCache(java.lang.Object,java.lang.Object,org.redisson.misc.RPromise,long,java.util.List,java.lang.Long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JCacheEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCacheEventCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 15, "UPD": 1, "INS": 4, "MOV": 0, "DEL": 10}, {"spoonMethodName": "org.redisson.jcache.JCacheEventCodec", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCacheEventCodec.getMapValueDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCacheEventCodec.getMapValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCacheEventCodec.getMapKeyDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCacheEventCodec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCacheEventCodec.getValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCacheEventCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ab373779d7bffff05b0a997e7b32d44401386f9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 155, "deletions": 206, "lines": 361, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 231, "UPD": 148, "INS": 20, "MOV": 26, "DEL": 37, "spoonFilesChanged": 5, "spoonMethodsChanged": 89}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/jcache", "redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.jcache.JCache.write(java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.jcache.JCache.getAndReplaceAsync(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean).6.onMessage(java.lang.CharSequence,java.util.List)", "org.redisson.jcache.JCache.put(java.lang.Object,java.lang.Object)", "org.redisson.RedissonMapCache", "org.redisson.jcache.JCache.clear()", "org.redisson.RedissonMapCache.addListener(org.redisson.api.map.event.MapEntryListener)", "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean).9.onMessage(java.lang.CharSequence,java.util.List)", "org.redisson.jcache.JCache.containsKey(java.lang.Object)", "org.redisson.jcache.JCache.loadAll(java.util.Set,boolean,javax.cache.integration.CompletionListener).2.run()", "org.redisson.jcache.JCache.removeAsync(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.sendSync(boolean,java.util.List)", "org.redisson.codec.MapCacheEventCodec.getMapKeyEncoder()", "org.redisson.codec.MapCacheEventCodec.newCodec(java.lang.ClassLoader,org.redisson.codec.MapCacheEventCodec)", "org.redisson.jcache.JCache.putValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCacheEventCodec.getMapValueEncoder()", "org.redisson.jcache.JCache.remove(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.removeValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCacheEventCodec.getMapKeyDecoder()", "org.redisson.jcache.JCache.getAndPutValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.evalWrite(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.jcache.JCache.getAndPutAsync(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getLockedLock(java.lang.Object)", "org.redisson.codec.MapCacheEventCodec", "org.redisson.jcache.JCache.getValue(java.lang.Object)", "org.redisson.jcache.JCache.unwrap(java.lang.Class)", "org.redisson.codec.MapCacheEventCodec.getMapKeyDecoder()", "org.redisson.jcache.JCache.removeAll(java.util.Set)", "org.redisson.jcache.JCache.writeCache(java.lang.Object,java.lang.Object,org.redisson.misc.RPromise,long,java.util.List,java.lang.Long)", "org.redisson.jcache.JCache.getAllAsync(java.util.Set)", "org.redisson.jcache.JCache.getAndReplaceValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.invoke(java.lang.Object,javax.cache.processor.EntryProcessor,java.lang.Object[])", "org.redisson.jcache.JCache.waitSync(double,org.redisson.api.RFuture)", "org.redisson.jcache.JCacheEventCodec.getClassLoader()", "org.redisson.jcache.JCacheEventCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.codec.MapCacheEventCodec.hashCode()", "org.redisson.jcache.JCache.getAndRemoveValues(java.util.Collection)", "org.redisson.jcache.JCache.putIfAbsent(java.lang.Object,java.lang.Object)", "org.redisson.codec.MapCacheEventCodec.getValueEncoder()", "org.redisson.jcache.JCache", "org.redisson.jcache.JCache.getAll(java.util.Set)", "org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.putIfAbsentAsync(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.containsKeyAsync(java.lang.Object)", "org.redisson.codec.MapCacheEventCodec.equals(java.lang.Object)", "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean).7.onMessage(java.lang.CharSequence,java.util.List)", "org.redisson.jcache.JCache.putAll(java.util.Map)", "org.redisson.codec.BaseEventCodec", "org.redisson.jcache.JCache.getAndRemoveAsync(java.lang.Object)", "org.redisson.jcache.JCache.handleException(org.redisson.misc.RPromise,java.lang.Exception)", "org.redisson.jcache.JCache.putAllValues(java.util.Map)", "org.redisson.jcache.JCache.removeValues(java.lang.Object[])", "org.redisson.jcache.JCache.getAndReplace(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCacheEventCodec.getMapValueDecoder()", "org.redisson.codec.MapCacheEventCodec.getMapValueDecoder()", "org.redisson.jcache.JCache.replaceAsync(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCacheEventCodec.getValueEncoder()", "org.redisson.jcache.JCache.loadValue(java.lang.Object)", "org.redisson.jcache.JCache.putIfAbsentValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndPut(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean).8.onMessage(java.lang.CharSequence,java.util.List)", "org.redisson.codec.MapCacheEventCodec.getClassLoader()", "org.redisson.jcache.JCache.get(java.lang.Object)", "org.redisson.jcache.JCache.getAndRemove(java.lang.Object)", "org.redisson.codec.MapCacheEventCodec.getMapValueEncoder()", "org.redisson.jcache.JCache.removeAllAsync(java.util.Set)", "org.redisson.jcache.JCache.scanIterator(java.lang.String,org.redisson.client.RedisClient,long)", "org.redisson.codec.MapCacheEventCodec.getValueDecoder()", "org.redisson.jcache.JCache.putAsync(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.loadAll(java.util.Set,boolean,javax.cache.integration.CompletionListener)", "org.redisson.jcache.JCache.putAllAsync(java.util.Map)", "org.redisson.jcache.JCache.waitSync(java.util.List)", "org.redisson.jcache.JCache.replaceAsync(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.registerCacheEntryListener(javax.cache.configuration.CacheEntryListenerConfiguration,boolean)", "org.redisson.jcache.JCache.evalRead(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.jcache.JCacheEventCodec.getMapKeyEncoder()", "org.redisson.jcache.JCache.removeAsync(java.lang.Object)", "org.redisson.jcache.JCache.removeValue(java.lang.Object)", "org.redisson.jcache.JCache.getAsync(java.lang.Object)", "org.redisson.codec.MapCacheEventCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.clearAsync()", "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "org.redisson.codec.MapCacheEventCodec.OSType", "org.redisson.codec.MapCacheEventCodec.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State,org.redisson.client.protocol.Decoder)", "org.redisson.jcache.JCacheEventCodec", "org.redisson.jcache.JCache.remove(java.lang.Object)"]}, {"title": "broken connections on the pool", "body": "Relate to https://github.com/redisson/redisson/issues/2043\r\n## Expected behavior \r\nWhen using a fixed connection pool of min=64 and max=64 to every node (masters and slaves) on cluster config. Redisson is able to open a healthy connection pool of 64 to each of the nodes\r\n\r\n## Actual behavior\r\n Connection never recover\r\n## Redis version\r\n4.0.8 and use utils/create-cluster to create local cluster\r\n## Redission version\r\n3.11.5\r\n## Reproduce step\r\n\r\n\r\nRedisson configuration\r\n\r\n\r\n```\tclusterServersConfig = {\r\n\t\tconnectTimeout = 500\r\n\t\ttimeout = 100\r\n\t\tmasterConnectionMinimumIdleSize = 1 <== just to make it easier to reproduce.\r\n\t\tmasterConnectionPoolSize = 1\r\n\t\tslaveConnectionMinimumIdleSize = 1\r\n\t\tslaveConnectionPoolSize = 1\r\n\t\tretryAttempts = 3\r\n\t\tretryInterval = 25\r\n\t\tkeepAlive = true\r\n\t\ttcpNoDelay = true\r\n\t\treadMode = MASTER_SLAVE\r\n\t\tpingConnectionInterval = 2000\r\n\t\tnodeAddresses = [\r\n\t\t\t\t\t\t\t\"redis://127.0.0.1:30001\",\r\n\t\t\t\t\t\t\t\"redis://127.0.0.1:30002\",\r\n\t\t\t\t\t\t\t\"redis://127.0.0.1:30003\",\r\n\t\t\t\t\t\t\t\"redis://127.0.0.1:30004\",\r\n\t\t\t\t\t\t\t\"redis://127.0.0.1:30005\",\r\n\t\t\t\t\t\t\t\"redis://127.0.0.1:30006\"\r\n\t\t]\r\n\t\t\t\t\t}\r\n```\r\n\r\n\r\n\r\nand request controller, each HTTP GET request will fetch 100 keys from Redis cluster in batch mode.\r\n\r\n```\r\n\t@GetMapping(path = \"/get/{id}\", produces = MediaType.APPLICATION_JSON_VALUE)\r\n\tpublic CompletionStage<Map<String, String>> get(@PathVariable(\"id\") int id) {\r\n\r\n\t\tSet<String> req = new HashSet<>();\r\n\t\tfor (int i = 0; i< 100; i++) {\r\n\t\t\treq.add(\"test\"+ (id * 100  + i));\r\n\t\t}\r\n\t\tCompletionStage<Map<String, String>> test = myRedisClusterWithPrefix.getAllAsync(req);\r\n\t\ttest.thenAccept(mm -> {\r\n\t\t\t//System.out.println(\"return \"+ mm);\r\n\t\t});\r\n\t\treturn test;\r\n\t}\r\n```\r\n\r\nstress test 100 concurrency\r\n`ab -n 10000  -c 100 http://localhost:8080/rapid-samples-minimal-spring-boot/get/5 `\r\n\r\n\r\njust after running about 20 seconds and stop the stress test tool.\r\n\r\nthen I call curl http://localhost:8080/rapid-samples-minimal-spring-boot/get/5 again\r\nit will already return an error and never recover.\r\nerror log is\r\n```\r\n17:34:10.813 [DEBUG] r.s.o.r.c.ClusterConnectionManager - slot 3699 for api:rapid:test:test560\r\n17:34:10.813 [DEBUG] r.s.o.r.c.RedisExecutor - connection released for command null and params null from slot NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=1, freeConnectionsCounter=value:1:queue:0, freezed=false, freezeReason=null, client=[addr=redis://127.0.0.1:30004], nodeType=MASTER, firstFail=0]]] using connection RedisConnection@9214847 [redisClient=[addr=redis://127.0.0.1:30004], channel=[id: 0x25f4bc57, L:/127.0.0.1:53318 - R:127.0.0.1/127.0.0.1:30004], currentCommand=null]\r\n17:34:10.846 [DEBUG] r.s.o.r.c.RedisExecutor - attempt 1 for command null and params null\r\n17:34:10.846 [DEBUG] r.s.o.r.c.RedisExecutor - attempt 1 for command null and params null\r\n17:34:10.881 [DEBUG] r.s.o.r.c.RedisExecutor - attempt 2 for command null and params null\r\n17:34:10.881 [DEBUG] r.s.o.r.c.RedisExecutor - attempt 2 for command null and params null\r\n17:34:10.916 [DEBUG] r.s.o.r.c.RedisExecutor - attempt 3 for command null and params null\r\n17:34:10.917 [DEBUG] r.s.o.r.c.RedisExecutor - attempt 3 for command null and params null\r\n17:34:10.957 [ERROR] c.r.r.e.h.RapidSpringErrorHandler - Unable to process unhandled exception\r\nrapid.shaded.org.redisson.client.RedisTimeoutException: Unable to acquire connection! Increase connection pool size and/or retryIntervalNode source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=1, freeConnectionsCounter=value:1:queue:0, freezed=false, freezeReason=null, client=[addr=redis://127.0.0.1:30005], nodeType=MASTER, firstFail=0]]], command: null, params: null after 0 retry attempts\r\n\tat rapid.shaded.org.redisson.command.RedisExecutor$2.run(RedisExecutor.java:191)\r\n\tat rapid.shaded.io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:680)\r\n\tat rapid.shaded.io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:755)\r\n\tat rapid.shaded.io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:483)\r\n\tat rapid.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\n\r\nConnection status, still connected.\r\n```\r\n~ \u00bb lsof -P -p `jps |grep Application |awk '{print $1}'` |grep IPv     |grep 3000                                                         yinchin.chen@P49945\r\njava    14825 yinchin.chen  237u     IPv6 0x3dec6b4ca72da4d1        0t0      TCP localhost:53301->localhost:30001 (ESTABLISHED)\r\njava    14825 yinchin.chen  239u     IPv6 0x3dec6b4ca72dcd11        0t0      TCP localhost:53302->localhost:30006 (ESTABLISHED)\r\njava    14825 yinchin.chen  241u     IPv6 0x3dec6b4ca72db051        0t0      TCP localhost:53303->localhost:30004 (ESTABLISHED)\r\njava    14825 yinchin.chen  243u     IPv6 0x3dec6b4ca72dd2d1        0t0      TCP localhost:53304->localhost:30005 (ESTABLISHED)\r\njava    14825 yinchin.chen  245u     IPv6 0x3dec6b4ca8fb3611        0t0      TCP localhost:53305->localhost:30002 (ESTABLISHED)\r\njava    14825 yinchin.chen  246u     IPv6 0x3dec6b4ca8fb3051        0t0      TCP localhost:53306->localhost:30003 (ESTABLISHED)\r\njava    14825 yinchin.chen  247u     IPv6 0x3dec6b4ca8fb3bd1        0t0      TCP localhost:53309->localhost:30001 (ESTABLISHED)\r\njava    14825 yinchin.chen  248u     IPv6 0x3dec6b4ca8fb4191        0t0      TCP localhost:53311->localhost:30002 (ESTABLISHED)\r\njava    14825 yinchin.chen  249u     IPv6 0x3dec6b4ca8fb4751        0t0      TCP localhost:53307->localhost:30001 (ESTABLISHED)\r\njava    14825 yinchin.chen  250u     IPv6 0x3dec6b4ca8fb2a91        0t0      TCP localhost:53310->localhost:30003 (ESTABLISHED)\r\njava    14825 yinchin.chen  253u     IPv6 0x3dec6b4ca8fb24d1        0t0      TCP localhost:53314->localhost:30005 (ESTABLISHED)\r\njava    14825 yinchin.chen  254u     IPv6 0x3dec6b4ca8fb4d11        0t0      TCP localhost:53315->localhost:30006 (ESTABLISHED)\r\njava    14825 yinchin.chen  255u     IPv6 0x3dec6b4ca8fb1f11        0t0      TCP localhost:53308->localhost:30005 (ESTABLISHED)\r\njava    14825 yinchin.chen  256u     IPv6 0x3dec6b4ca8fb1951        0t0      TCP localhost:53313->localhost:30004 (ESTABLISHED)\r\njava    14825 yinchin.chen  260u     IPv6 0x3dec6b4ca8fb52d1        0t0      TCP localhost:53316->localhost:30006 (ESTABLISHED)\r\njava    14825 yinchin.chen  261u     IPv6 0x3dec6b4ca9512611        0t0      TCP localhost:53312->localhost:30004 (ESTABLISHED)\r\njava    14825 yinchin.chen  277u     IPv6 0x3dec6b4ca9513751        0t0      TCP localhost:53318->localhost:30004 (ESTABLISHED)\r\njava    14825 yinchin.chen  279u     IPv6 0x3dec6b4ca9513d11        0t0      TCP localhost:53319->localhost:30006 (ESTABLISHED)\r\njava    14825 yinchin.chen  380u     IPv6 0x3dec6b4cabc0da91        0t0      TCP localhost:53419->localhost:30005 (ESTABLISHED)\r\n```", "url": "https://github.com/redisson/redisson/issues/2587", "user": "semistone", "labels": ["bug"], "created": "2020-02-13 08:48:14", "closed": "2020-02-17 12:42:12", "commits": {"45b7438c7caf836c650ff2ac4ae767caf2dd011f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "45b7438c7caf836c650ff2ac4ae767caf2dd011f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["80141fc918734090a90e86933dd2df1d9f55519f"], "nameRev": "45b7438c7caf836c650ff2ac4ae767caf2dd011f tags/redisson-3.12.2~5", "commitMessage": "Fixed - connection leak #2587\n", "commitDateTime": "2020-02-17 15:42:24", "authoredDateTime": "2020-02-17 15:42:24", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 11, "deletions": 21, "lines": 32}, {"filePath": "redisson/src/main/java/org/redisson/command/RedisExecutor.java", "insertions": 6, "deletions": 15, "lines": 21}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 81, "deletions": 26, "lines": 107}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,boolean)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync(org.redisson.api.BatchOptions)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeRedisBasedQueue().1.run()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedisExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.RedisExecutor.scheduleRetryTimeout(org.redisson.api.RFuture,org.redisson.misc.RPromise)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.RedisExecutor.scheduleRetryTimeout(org.redisson.api.RFuture,org.redisson.misc.RPromise).1.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testDifferentCodecs()", "TOT": 17, "UPD": 4, "INS": 1, "MOV": 11, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testConvertor()", "TOT": 15, "UPD": 11, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testExceptionHandling()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchCancel()", "TOT": 14, "UPD": 12, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchRedirect()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testConnectionLeakAfterError()", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testPerformance()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testBigRequestAtomic()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testSyncSlaves()", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testWriteTimeout()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testSkipResult()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchNPE()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testAtomic()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testAtomicSyncSlaves()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchList()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testDifferentCodecsAtomic()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchBigRequest()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBatchTest.test()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testEmpty()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testTwice()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testOrdering()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.before()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.data()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testOrdering().1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testConnectionLeak()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.executeBatch(org.redisson.RedissonClient)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["45b7438c7caf836c650ff2ac4ae767caf2dd011f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 36, "lines": 53, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 14, "UPD": 6, "INS": 2, "MOV": 1, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandBatchService.executeRedisBasedQueue().1.run()", "org.redisson.command.CommandBatchService.executeAsync(org.redisson.api.BatchOptions)", "org.redisson.command.RedisExecutor.scheduleRetryTimeout(org.redisson.api.RFuture,org.redisson.misc.RPromise).1.run(io.netty.util.Timeout)", "org.redisson.command.CommandBatchService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,boolean)", "org.redisson.command.RedisExecutor.execute()", "org.redisson.command.RedisExecutor.scheduleRetryTimeout(org.redisson.api.RFuture,org.redisson.misc.RPromise)"]}, {"title": "Unable to decode data with NullPointer", "body": "**Expected behavior**\r\nNo exceptions\r\n\r\n**Actual behavior**\r\nError messages from `CommandPubSubDecoder` with messages saying:\r\n - `Unable to decode data in separate thread: null`\r\n - `Unable to decode data. channel: [id: 0xdf76efe4, L:/100.112.155.17:45107 - R:master.xxx.cache.amazonaws.com/xxx.xxx.xxx.xxx:6379], reply: PooledUnsafeDirectByteBuf(ridx: 170, widx: 170, cap: 170)`\r\n\r\n**Steps to reproduce or test case**\r\nUse `@EnableRedissonWebSession` or `tryLockAsync` (or potentially anything that uses pubsub). Then configure redisson to decode in executor via `isDecodeInExecutor`. Under decent load it easily throws these exceptions.\r\n\r\n**Redis version**\r\n5.0.5\r\n\r\n**Redisson version**\r\n3.11.6\r\n\r\n**Redisson configuration**\r\n(Done pragmatically but be equivalent to this:\r\n```\r\nsingleServerConfig:\r\n  idleConnectionTimeout: 30000\r\n  pingTimeout: 1000\r\n  connectTimeout: 1000\r\n  timeout: 1000\r\n  retryAttempts: 3\r\n  retryInterval: 1000\r\n  password: null\r\n  address: null\r\n  subscriptionsPerConnection: 5\r\n  clientName: MyService123\r\n  connectionMinimumIdleSize: 16\r\n  connectionPoolSize: 32\r\n  database: 0\r\n  keepAlive: true\r\n  dnsMonitoringInterval: 60000\r\n  isDecodeInExecutor: true\r\n```", "url": "https://github.com/redisson/redisson/issues/2582", "user": "x0a1b", "labels": ["bug"], "created": "2020-02-11 16:45:55", "closed": "2020-02-27 05:41:33", "commits": {"03ba0e73983dd018a0ace07fadefa9ee685c2fea": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "03ba0e73983dd018a0ace07fadefa9ee685c2fea", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0f483ef2e23c28f474f8e00ba651ae8b51f35b61"], "nameRev": "03ba0e73983dd018a0ace07fadefa9ee685c2fea tags/redisson-3.12.3~7", "commitMessage": "Fixed - CommandPubSubDecoder throws NPE. #2582\n", "commitDateTime": "2020-02-27 08:42:10", "authoredDateTime": "2020-02-27 08:42:10", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 8, "deletions": 13, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["03ba0e73983dd018a0ace07fadefa9ee685c2fea"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 13, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandPubSubDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)"]}, {"title": "Add TTL on Comparator", "body": "**Is your feature request related to a problem? Please describe.**\r\nWe works with a lot of priority queue associated with Comparator (method trySetComparator). Result : Redisson create object in database like {akey}:redisson_sortedset_comparator, but never remove them.\r\n\r\n**Describe the solution you'd like**\r\nCould you add a parameter to set a TTL on theses objects? perhaps in method trySetComparator?\r\n\r\n**Describe alternatives you've considered**\r\nWe have to delete these keys regularly, by hand\r\n", "url": "https://github.com/redisson/redisson/issues/2580", "user": "joeleclems", "labels": ["bug"], "created": "2020-02-10 08:54:04", "closed": "2020-02-11 11:06:30", "commits": {"814107791282716e77559ff6cbc77508af7d6f1f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "814107791282716e77559ff6cbc77508af7d6f1f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5ed2a4e8fd169c7cb1f56ad563585a22b9904d88"], "nameRev": "814107791282716e77559ff6cbc77508af7d6f1f tags/redisson-3.12.2~8", "commitMessage": "Fixed - comparator object is not deleted or expired after corresponding RObject methods invocation. #2580\n", "commitDateTime": "2020-02-11 14:05:57", "authoredDateTime": "2020-02-11 14:05:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonPriorityQueue.java", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPriorityQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPriorityQueue.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityQueue.expireAsync(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityQueue.expireAtAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityQueue.clearExpireAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["814107791282716e77559ff6cbc77508af7d6f1f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 0, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonPriorityQueue.expireAtAsync(long)", "org.redisson.RedissonPriorityQueue.deleteAsync()", "org.redisson.RedissonPriorityQueue.clearExpireAsync()", "org.redisson.RedissonPriorityQueue.expireAsync(long,java.util.concurrent.TimeUnit)"]}, {"title": "redisson.cache.ReferenceCacheMap causes OOM..", "body": "Recently I used redisson 3.11.6 to r/w online redis on our server serivce, however, after it runs few days correctly something bad happens. Yep, it is awful OOM. I dumped server memory file and found that the biggest object is ReferenceCacheMap from redission (see on the pic of jprofiler).. I am really confused about why this object increased all the time and can't be released by GC, I will post some pics, hope anyone can help me to fix this. Thanks a lot.\r\n![image](https://user-images.githubusercontent.com/7340650/73902972-84689580-48d2-11ea-8d35-aae58faec6cb.png)\r\n![image](https://user-images.githubusercontent.com/7340650/73903964-7b2cf800-48d5-11ea-8594-a7665be868f6.png)\r\n\r\nMy config file like this:\r\n\r\n{\r\n  \"masterSlaveServersConfig\":{\r\n    \"idleConnectionTimeout\":10000,\r\n    \"pingTimeout\":1000,\r\n    \"connectTimeout\":10000,\r\n    \"timeout\":3000,\r\n    \"retryAttempts\":3,\r\n    \"retryInterval\":1500,\r\n    \"reconnectionTimeout\":3000,\r\n    \"failedAttempts\":3,\r\n    \"password\":\"xxxxxxxxxxx\",\r\n    \"subscriptionsPerConnection\":5,\r\n    \"clientName\":null,\r\n    \"loadBalancer\":{\r\n      \"class\":\"org.redisson.connection.balancer.RoundRobinLoadBalancer\"\r\n    },\r\n    \"slaveSubscriptionConnectionMinimumIdleSize\":1,\r\n    \"slaveSubscriptionConnectionPoolSize\":50,\r\n    \"slaveConnectionMinimumIdleSize\":100,\r\n    \"slaveConnectionPoolSize\":200,\r\n    \"masterConnectionMinimumIdleSize\":32,\r\n    \"masterConnectionPoolSize\":64,\r\n    \"readMode\":\"SLAVE\",\r\n    \"slaveAddresses\":[\r\n      \"redis://xxxxxxxxxx\"\r\n    ],\r\n    \"masterAddress\": \"redis://xxxxxxx\",\r\n    \"database\":0\r\n  },\r\n  \"threads\":0,\r\n  \"nettyThreads\":0,\r\n  \"codec\":{\r\n    \"class\":\"org.redisson.codec.JsonJacksonCodec\"\r\n  },\r\n  \"transportMode\":\"NIO\"\r\n}", "url": "https://github.com/redisson/redisson/issues/2574", "user": "sanjikk", "labels": ["bug"], "created": "2020-02-06 03:43:07", "closed": "2020-02-06 06:35:42", "commits": {"7dc4cfe8341789973fec4e2af67760fa1292a3ca": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "9b64a7125f15459b64b86d0e5bf0185d73ded41e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7dc4cfe8341789973fec4e2af67760fa1292a3ca", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cbca172149fc166e7afc97fb90dc0471b3137e77"], "nameRev": "7dc4cfe8341789973fec4e2af67760fa1292a3ca tags/redisson-3.12.2~16", "commitMessage": "Fixed - maxIdleTimeout added to RedisExecutor.CODECS map. #2574\n", "commitDateTime": "2020-02-06 09:35:12", "authoredDateTime": "2020-02-06 09:35:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/RedisExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisExecutor", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9b64a7125f15459b64b86d0e5bf0185d73ded41e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0255e1161ad17410cb8fcf78bf4853f957e9eaeb"], "nameRev": "9b64a7125f15459b64b86d0e5bf0185d73ded41e tags/redisson-3.12.3~25", "commitMessage": "Improvement - type of RedisExecutor.CODECS field changed to LRUCacheMap. #2574\n", "commitDateTime": "2020-02-24 12:54:20", "authoredDateTime": "2020-02-24 12:54:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/RedisExecutor.java", "insertions": 3, "deletions": 4, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisExecutor.getCodec(org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.RedisExecutor", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7dc4cfe8341789973fec4e2af67760fa1292a3ca", "9b64a7125f15459b64b86d0e5bf0185d73ded41e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 4, "deletions": 5, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.RedisExecutor", "org.redisson.command.RedisExecutor.getCodec(org.redisson.client.codec.Codec)"]}, {"title": "zCount 0/-1 instead of -inf/+inf", "body": "RedissonReactiveZSetCommands.zCount behaves incorrectly if one of range bounds is unbounded.\r\n\r\nif lower bound is unbounded:\r\nactual value: 0\r\nexpected value: -inf\r\n\r\nif upper bound is unbounded:\r\nactual value: -1\r\nexpected value: +inf\r\n\r\nbtw this is how RedissonReactiveZSetCommands.zRangeByScore implemented.", "url": "https://github.com/redisson/redisson/issues/2561", "user": "OverDrone", "labels": ["bug"], "created": "2020-01-27 21:52:14", "closed": "2020-01-28 09:47:45", "commits": {"573199128d79531ba5edc54edbb074e183554c4a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "573199128d79531ba5edc54edbb074e183554c4a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b7fdb7cc7c5c06a71be21a398a3c3e64dc011c9e"], "nameRev": "573199128d79531ba5edc54edbb074e183554c4a tags/redisson-3.12.1~3", "commitMessage": "Fixed - zRemRangeByScore and zcount methods of ReactiveZSetCommands don't use -inf and +inf values. #2561\n", "commitDateTime": "2020-01-28 12:47:40", "authoredDateTime": "2020-01-28 12:47:40", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveZSetCommands.java", "insertions": 11, "deletions": 12, "lines": 23}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveZSetCommands.java", "insertions": 11, "deletions": 12, "lines": 23}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonReactiveZSetCommands.java", "insertions": 11, "deletions": 12, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonReactiveZSetCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.zRangeByScore(org.reactivestreams.Publisher)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.toLowerBound(org.springframework.data.domain.Range,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.toUpperBound(org.springframework.data.domain.Range,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.zCount(org.reactivestreams.Publisher)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.zRemRangeByScore(org.reactivestreams.Publisher)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.toLowerBound(org.springframework.data.domain.Range)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.toUpperBound(org.springframework.data.domain.Range)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["573199128d79531ba5edc54edbb074e183554c4a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 33, "deletions": 36, "lines": 69, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 16, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 10, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonReactiveZSetCommands.toUpperBound(org.springframework.data.domain.Range)", "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.toUpperBound(org.springframework.data.domain.Range,java.lang.Object)", "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.toLowerBound(org.springframework.data.domain.Range)", "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.zRangeByScore(org.reactivestreams.Publisher)", "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.zRemRangeByScore(org.reactivestreams.Publisher)", "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.toLowerBound(org.springframework.data.domain.Range,java.lang.Object)", "org.redisson.spring.data.connection.RedissonReactiveZSetCommands.zCount(org.reactivestreams.Publisher)"]}, {"title": "java.net.MalformedURLException: Invalid host", "body": "Redisson version: 3.12.0\r\n\r\nWhen using ipv6, we get the following error:\r\n\r\njava.lang.IllegalArgumentException: java.net.MalformedURLException: Invalid host: [[22be:ffee:0:f101::328]\r\n\tat org.redisson.misc.RedisURI.<init>(RedisURI.java:54)\r\n\tat org.redisson.connection.SentinelConnectionManager.convert(SentinelConnectionManager.java:595)\r\n\tat org.redisson.connection.SentinelConnectionManager.<init>(SentinelConnectionManager.java:167)\r\n\tat org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:197)\r\n\tat org.redisson.Redisson.<init>(Redisson.java:120)\r\n\tat org.redisson.Redisson.create(Redisson.java:160)\r\n\t...\r\nCaused by: java.net.MalformedURLException: Invalid host: [[22be:ffee:0:f101::328]\r\n\tat java.net.URL.<init>(URL.java:627)\r\n\tat java.net.URL.<init>(URL.java:490)\r\n\tat java.net.URL.<init>(URL.java:439)\r\n\tat org.redisson.misc.RedisURI.<init>(RedisURI.java:49)\r\n\t... 82 common frames omitted\r\nCaused by: java.lang.IllegalArgumentException: Invalid host: [[22be:ffee:0:f101::328]\r\n\tat java.net.URLStreamHandler.parseURL(URLStreamHandler.java:195)\r\n\tat java.net.URL.<init>(URL.java:622)\r\n\t... 85 common frames omitted\r\n\t\r\nIt seems that in org.redisson.connection.SentinelConnectionManager#createAddress, the square bracket is added to the address; then in new RedisURI(), the square bracket was added AGAIN.", "url": "https://github.com/redisson/redisson/issues/2548", "user": "xebex", "labels": ["bug"], "created": "2020-01-19 09:19:06", "closed": "2020-01-20 06:35:10", "commits": {"999bbcc6689b3d0449c37512c05556c45353d90d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "999bbcc6689b3d0449c37512c05556c45353d90d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5f0da0ad0988299b0769c29a1580306b2560e318"], "nameRev": "999bbcc6689b3d0449c37512c05556c45353d90d tags/redisson-3.12.1~14", "commitMessage": "Fixed - extra square bracket added during Redis host conversion. #2548\n", "commitDateTime": "2020-01-20 09:31:38", "authoredDateTime": "2020-01-20 09:31:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 28, "deletions": 52, "lines": 80}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.createRedisConfig(org.redisson.api.NodeType,org.redisson.misc.RedisURI,int,int,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 10, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.checkAuth(org.redisson.config.SentinelServersConfig)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.startDNSMonitoring(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.scheduleChangeCheck(org.redisson.config.SentinelServersConfig,java.util.Iterator)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.checkState(org.redisson.config.SentinelServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.createAddress(java.lang.String,java.lang.Object)", "TOT": 20, "UPD": 5, "INS": 0, "MOV": 12, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.createMasterSlaveEntry(org.redisson.config.MasterSlaveServersConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.config.MasterSlaveServersConfig)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateSentinels(java.util.Set)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.shutdown()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.applyNatMap(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.createAddress(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.applyNatMap(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.connection.SentinelServersConfig,org.redisson.connection.RedisConnection,java.util.Iterator).<unknown>.onSuccess(java.lang.Void)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).<unknown>.onSuccess(java.lang.Void)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["999bbcc6689b3d0449c37512c05556c45353d90d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 52, "lines": 80, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 62, "UPD": 37, "INS": 3, "MOV": 17, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 18}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.shutdown()", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.connection.SentinelServersConfig,org.redisson.connection.RedisConnection,java.util.Iterator).<unknown>.onSuccess(java.lang.Void)", "org.redisson.connection.SentinelConnectionManager.createMasterSlaveEntry(org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator)", "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).<unknown>.onSuccess(java.lang.Void)", "org.redisson.connection.SentinelConnectionManager.scheduleChangeCheck(org.redisson.config.SentinelServersConfig,java.util.Iterator)", "org.redisson.connection.SentinelConnectionManager.updateSentinels(java.util.Set)", "org.redisson.connection.SentinelConnectionManager.createRedisConfig(org.redisson.api.NodeType,org.redisson.misc.RedisURI,int,int,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.applyNatMap(java.lang.String,int)", "org.redisson.connection.SentinelConnectionManager.startDNSMonitoring(org.redisson.client.RedisClient)", "org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.SentinelConnectionManager.createAddress(java.lang.String,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.checkState(org.redisson.config.SentinelServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "org.redisson.connection.SentinelConnectionManager.checkAuth(org.redisson.config.SentinelServersConfig)", "org.redisson.connection.SentinelConnectionManager.applyNatMap(java.lang.String)", "org.redisson.connection.SentinelConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager.createAddress(java.lang.String,java.lang.Object)"]}, {"title": "Memory Leak in SentinelConnectionManager", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\nMight be connected to https://github.com/redisson/redisson/issues/2120, but I wasn't too sure about that, so I decided to create a new issue instead.\r\n\r\n**Expected behavior**\r\n\r\nNo memory leak?\r\n\r\n**Actual behavior**\r\n\r\nSentinelConnectionManager is leaking memory because it stores too many connections to the sentinels in the `nodeConnections` map.\r\n\r\nWe are using a singleton Redisson instance for connecting to our replicated Redis instance (3 nodes, 3 sentinels). After running for some days, we are experiencing high GC times and OOM errors. Upon investigating the heap dump, we noticed that the SentinelConnectionManager stores nearly 50,000 connection to the same 3 sentinels in its `nodeConnections` map. However, the `sentinels` map itself only contains the expected 3 entries.\r\n\r\n<img width=\"593\" alt=\"sentinelconnectionmanager_heap\" src=\"https://user-images.githubusercontent.com/19145587/72245770-9451ca00-35f1-11ea-8516-bb3aeca96700.png\">\r\n\r\nI tried analyzing and reproducing the leak myself, but I wasn't too successful since I am not familiar with your code. Would be great if you could have a look what could cause such a behavior :)\r\n\r\nUnfortunately can't provide the heap dump since it might contain sensitive data.\r\n\r\n\r\n**Steps to reproduce or test case**\r\n\r\nN/A\r\n\r\n**Redis version**\r\n\r\n4.0.2\r\n\r\n**Redisson version**\r\n\r\n3.11.3\r\n\r\n**Redisson configuration**\r\n\r\n```\r\nconfig.useSentinelServers().setMasterName(\"mymaster\")\r\n    .addSentinelAddress(redisSentinelAddress)\r\n    .setPassword(\"\")\r\n    .setReadMode(ReadMode.MASTER)\r\n    .setSubscriptionMode(SubscriptionMode.MASTER)\r\n    .setMasterConnectionPoolSize(64)\r\n    .setRetryInterval(2000)\r\n    .setRetryAttempts(3)\r\n    .setConnectTimeout(1000)\r\n    .setTimeout(5000);\r\n```", "url": "https://github.com/redisson/redisson/issues/2539", "user": "markusdlugi", "labels": ["bug"], "created": "2020-01-13 09:45:30", "closed": "2020-01-27 06:21:58", "commits": {"7d4ee01171204a33bc5f5ba62b30acc87f0808c5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "7d4ee01171204a33bc5f5ba62b30acc87f0808c5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["603552df559d7199524ce65d6db4cd2000c85c76"], "nameRev": "7d4ee01171204a33bc5f5ba62b30acc87f0808c5 tags/redisson-3.12.1~10", "commitMessage": "Fixed - connections to disconnected Redis nodes aren't removed in sentinel and cluster mode. #2539\n", "commitDateTime": "2020-01-21 18:04:22", "authoredDateTime": "2020-01-21 18:04:22", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 16, "deletions": 2, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.disconnectNode(org.redisson.misc.RedisURI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.disconnectNode(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectToNode(org.redisson.config.BaseMasterSlaveServersConfig,org.redisson.misc.RedisURI,org.redisson.client.RedisClient,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateSentinels(java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7d4ee01171204a33bc5f5ba62b30acc87f0808c5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 4, "lines": 26, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.disconnectNode(org.redisson.misc.RedisURI)", "org.redisson.connection.MasterSlaveConnectionManager.connectToNode(org.redisson.config.BaseMasterSlaveServersConfig,org.redisson.misc.RedisURI,org.redisson.client.RedisClient,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.updateSentinels(java.util.Set)", "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)", "org.redisson.connection.MasterSlaveConnectionManager.disconnectNode(org.redisson.client.RedisClient)"]}, {"title": "\"RedisConnectionException: SlaveConnectionPool no available Redis entries\" even when the slaves are reachable and connections established", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\nWe are using Redisson with AWS elasticache redisson cluster. Redisson client throws exception from some of the hosts. Only way to recover is to reboot the EC2 instances/restart the application. Slaves are reachable from the EC2. \r\n\r\n**Actual behavior**\r\nRedisson client fails with the following exception eventhough slaves are reachable from EC2.\r\n\r\n**Caused by: org.redisson.client.RedisConnectionException: SlaveConnectionPool no available Redis entries.  Disconnected hosts: [10.0.129.98/10.0.129.98:6379]**\r\n        at org.redisson.connection.pool.ConnectionPool.get(ConnectionPool.java:219) ~[Redisson-3.11.x.jar:?]\r\n        at org.redisson.connection.pool.SlaveConnectionPool.get(SlaveConnectionPool.java:30) ~[Redisson-3.11.x.jar:?]\r\n        at org.redisson.connection.balancer.LoadBalancerManager.nextConnection(LoadBalancerManager.java:248) ~[Redisson-3.11.x.jar:?]\r\n        at org.redisson.connection.MasterSlaveEntry.connectionReadOp(MasterSlaveEntry.java:464) ~[Redisson-3.11.x.jar:?]\r\n        at org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(MasterSlaveConnectionManager.java:607) ~[Redisson-3.11.x.jar:?]\r\n        at org.redisson.command.RedisExecutor.getConnection(RedisExecutor.java:645) ~[Redisson-3.11.x.jar:?]\r\n        at org.redisson.command.RedisExecutor.execute(RedisExecutor.java:116) ~[Redisson-3.11.x.jar:?]\r\n        at org.redisson.command.RedisExecutor$2.run(RedisExecutor.java:245) ~[Redisson-3.11.x.jar:?]\r\n        at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:663) ~[netty-common-4.1.21.Final.jar:?]\r\n        at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:738) ~[netty-common-4.1.21.Final.jar:?]\r\n        at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:466) ~[netty-common-4.1.21.Final.jar:?]\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.21.Final.jar:?]\r\n\r\n**Steps to reproduce or test case**\r\nException happens very randomly in production. \r\n\r\n**Redis version**\r\n5.0.6\r\n**Redisson version**\r\n3.11.6\r\n**Redisson configuration**\r\nconfig.setNettyThreads(256)\r\n                .useClusterServers()\r\n                .addNodeAddress(redisUrl)\r\n                .setTimeout(200)\r\n                .setRetryInterval(50)\r\n                .setMasterConnectionPoolSize(128)\r\n                .setMasterConnectionMinimumIdleSize(32)\r\n                .setSlaveConnectionPoolSize(128)\r\n                .setSlaveConnectionMinimumIdleSize(32)\r\n                .setPingConnectionInterval(5000)\r\n                .setKeepAlive(true);", "url": "https://github.com/redisson/redisson/issues/2535", "user": "mghegde", "labels": ["bug", "redis-cluster"], "created": "2020-01-10 22:54:58", "closed": "2020-06-04 09:23:10", "commits": {}, "ttf": 145.00027777777777, "commitsDetails": []}, {"title": "Connecting to a password protected Redis Sentinel fails, due to scheme not being forwarded", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\n\r\nGiven both redis sentinel and redis master/slave are protected by passwords, Redisson should be able to establish a connection through sentinel.\r\n\r\n**Actual behavior**\r\n\r\nScheme ( `redis` or `rediss`) is not being forwarding from the Redis Sentinel URI to the URI created in order to connect the Redis node.\r\n\r\nFollowing exception is returned:\r\n\r\n> Caused by: java.lang.IllegalArgumentException: Redis url should start with redis:// or rediss:// (for SSL connection)\r\n> \tat org.redisson.misc.RedisURI.<init>(RedisURI.java:36) ~[redisson-3.12.0.jar:3.12.0]\r\n> \tat org.redisson.connection.SentinelConnectionManager.convert(SentinelConnectionManager.java:595) ~[redisson-3.12.0.jar:3.12.0]\r\n> \tat org.redisson.connection.SentinelConnectionManager.<init>(SentinelConnectionManager.java:172) ~[redisson-3.12.0.jar:3.12.0]\r\n> \tat org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:197) ~[redisson-3.12.0.jar:3.12.0]\r\n> \tat org.redisson.Redisson.<init>(Redisson.java:120) ~[redisson-3.12.0.jar:3.12.0]\r\n> \tat org.redisson.Redisson.create(Redisson.java:160) ~[redisson-3.12.0.jar:3.12.0]\r\n> \tat com.phoenixnap.poc.redis.configuration.RedisConfiguration.redissonClient(RedisConfiguration.java:84) ~[classes/:na]\r\n> \tat com.phoenixnap.poc.redis.configuration.RedisConfiguration$$EnhancerBySpringCGLIB$$54482668.CGLIB$redissonClient$0(<generated>) ~[classes/:na]\r\n> \tat com.phoenixnap.poc.redis.configuration.RedisConfiguration$$EnhancerBySpringCGLIB$$54482668$$FastClassBySpringCGLIB$$d929cc1f.invoke(<generated>) ~[classes/:na]\r\n> \tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]\r\n> \tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]\r\n> \tat com.phoenixnap.poc.redis.configuration.RedisConfiguration$$EnhancerBySpringCGLIB$$54482668.redissonClient(<generated>) ~[classes/:na]\r\n> \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]\r\n> \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]\r\n> \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]\r\n> \tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\r\n> \tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE]\r\n> \t... 47 common frames omitted\r\n\r\n**Steps to reproduce or test case**\r\n\r\nSetup a password protected Redis Sentinel/Redis nodes and try to connect using `useSentinelServers` config.\r\n\r\nI replicated this using docker:\r\nDocker compose:\r\n\r\n> version: '2'\r\n> \r\n> networks:\r\n>   app-tier:\r\n>     driver: bridge\r\n> \r\n> services:\r\n>   redis:\r\n>     image: 'bitnami/redis:latest'\r\n>     environment:\r\n>       - REDIS_PASSWORD=some_pass\r\n>     networks:\r\n>       - app-tier\r\n>   redis-sentinel:\r\n>     image: 'bitnami/redis-sentinel:latest'\r\n>     environment:\r\n>       - REDIS_MASTER_HOST=redis\r\n>       - REDIS_SENTINEL_PASSWORD=some_pass\r\n>       - REDIS_SENTINEL_QUORUM=1\r\n>     ports:\r\n>       - '26379:26379'\r\n>     networks:\r\n>       - app-tier\r\n\r\nUsing the following configuration:\r\n\r\n>         final Config config = new Config();\r\n>         config.useSentinelServers()\r\n>                 .setTimeout(1000000)\r\n>                 .setPassword(\"some_pass\")\r\n>                 .addSentinelAddress(\"redis://127.0.0.1:26379\")\r\n>                 .setMasterName(\"mymaster\");\r\n>         final RedissonClient redissonClient = Redisson.create(config);\r\n\r\n**Redis version**\r\nUsing latest bitnami redis docker image as shown above.\r\n\r\n**Redisson version**\r\n3.12.0\r\n\r\n**Redisson configuration**\r\n>         final Config config = new Config();\r\n>         config.useSentinelServers()\r\n>                 .setTimeout(1000000)\r\n>                 .setPassword(\"some_pass\")\r\n>                 .addSentinelAddress(\"redis://127.0.0.1:26379\")\r\n>                 .setMasterName(\"mymaster\");\r\n>         final RedissonClient redissonClient = Redisson.create(config);", "url": "https://github.com/redisson/redisson/issues/2528", "user": "stikku", "labels": ["bug"], "created": "2020-01-08 11:18:36", "closed": "2020-01-09 13:36:20", "commits": {"bb8849650e92992e67993a605b7d9c302c3a3dcd": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "bb8849650e92992e67993a605b7d9c302c3a3dcd", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["97f9451ddb9a10b8cc034da5a89aeb5604dd0d2a", "9f7dff9c5673efba5ad2bd00912daf4dd6129b72"], "nameRev": "bb8849650e92992e67993a605b7d9c302c3a3dcd tags/redisson-3.12.1~43^2", "commitMessage": "Merge pull request #2534 from stikku/master\n\nFix for issue #2528 Now always extracting scheme from url for sentinel connections", "commitDateTime": "2020-01-09 16:35:58", "authoredDateTime": "2020-01-09 16:35:58", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.checkAuth(org.redisson.config.SentinelServersConfig)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Lock expiration renewal stops working after connection error/timeout", "body": "**Expected behavior**\r\n\r\nAfter a connection problem during expiration renewal, if a new lock is created (with the same key), the expiration renewal should be working.\r\n\r\n**Actual behavior**\r\n\r\nIf an error ocurred in the expiration renewal (ex: connection to redis timeout), it stops working for new locks.\r\n\r\n**Steps to reproduce or test case**\r\n\r\n- Create a Redisson lock\r\n- Force a expiration renewal timeout (ex: restarting redis-server)\r\n- unlock (it will throw a exception, as expected)\r\n- Create a new lock with the same key\r\n- wait for the expiration renewal time\r\n- unlock (it will throw a exception, because the expiration renewal is not working)\r\n\r\n```\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RLock;\r\nimport org.redisson.api.RedissonClient;\r\nimport org.redisson.config.Config;\r\n\r\npublic class App {\r\n    private static final String LOCK_KEY = \"LOCK_KEY\";\r\n\r\n    private static RedissonClient createClient() {\r\n        Config config = new Config();\r\n        config.useSingleServer().setAddress(\"redis://localhost:6379\");\r\n        config.setLockWatchdogTimeout(3_000L);\r\n        return Redisson.create(config);\r\n    }\r\n\r\n    public static void main(String[] args) throws InterruptedException {\r\n        RedissonClient client = createClient();\r\n\r\n        {\r\n            RLock lock = client.getLock(LOCK_KEY);\r\n            lock.lock();\r\n            System.out.println(\"restart redis here, to force error/timeout\");\r\n            Thread.sleep(30_000L);\r\n            try {\r\n                lock.unlock();\r\n            } catch (IllegalMonitorStateException ignored) {\r\n                System.out.println(\"unlock exception thrown, as expected (server reset)\");\r\n            }\r\n        }\r\n\r\n        {\r\n            // new lock, expiration renewal expected to be working\r\n            RLock lock = client.getLock(LOCK_KEY);\r\n            lock.lock();\r\n            Thread.sleep(30_000L);\r\n            lock.unlock();\r\n            // java.lang.IllegalMonitorStateException: attempt to unlock lock, not locked by current thread\r\n            System.out.println(\"unlocked\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Redis version**\r\n5.0.7\r\n**Redisson version**\r\n3.12.0\r\n**Redisson configuration**\r\nDefault, SingleServer, (LockWatchdogTimeout reduced just for testing)\r\n\r\nI believe the problem is in RedissonLock.unlockAsync method, when opStatus is null, the `cancelExpirationRenewal` method should be called.\r\n", "url": "https://github.com/redisson/redisson/issues/2515", "user": "edallagnol", "labels": ["bug"], "created": "2020-01-03 20:54:31", "closed": "2020-01-05 08:36:27", "commits": {"85c4eb75e1f8e2465d8cc38b31e6288281c7aad4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "85c4eb75e1f8e2465d8cc38b31e6288281c7aad4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2d31e52243e606746d192810f822cf9f27048654", "7048a860592678f79b9e41bcddcd6958e33c26e2"], "nameRev": "85c4eb75e1f8e2465d8cc38b31e6288281c7aad4 tags/redisson-3.12.1~50^2~2", "commitMessage": "Merge pull request #2518 from edallagnol/bug/2515-expiration-renewal-stops-after-timeout\n\nExpiration renewal stops working after connection timeout #2515", "commitDateTime": "2020-01-05 11:33:14", "authoredDateTime": "2020-01-05 11:33:14", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLockExpirationRenewalTest.java", "insertions": 78, "deletions": 0, "lines": 78}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.unlockAsync(long)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonLockExpirationRenewalTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockExpirationRenewalTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RedissonConnectionFactory does not shutdown RedissonClient on Spring destroy() call", "body": "Using Redisson PRO 3.11.6.\r\n\r\nThe destroy() method on RedissonConnectionFactory is empty. When the RedissonConnectionFactory creates its own RedissonClient using the default constructor or the constructor that takes a Config as an argument, it should be responsible for calling shutdown() on the created RedissonClient. The RedissonClient is internal to the class and cannot be shutdown otherwise.\r\n\r\nTo safely manage resources, we must use the constructor that takes a RedissonClient argument so that the client has an external reference that we can shutdown.", "url": "https://github.com/redisson/redisson/issues/2509", "user": "rlubbat", "labels": ["bug"], "created": "2020-01-01 01:38:53", "closed": "2020-01-02 05:19:55", "commits": {"2d31e52243e606746d192810f822cf9f27048654": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "2d31e52243e606746d192810f822cf9f27048654", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5748ca043238ec9f936f6e6b108fe33b22668ba1"], "nameRev": "2d31e52243e606746d192810f822cf9f27048654 tags/redisson-3.12.1~52", "commitMessage": "Fixed - Spring Data RedissonConnectionFactory should call shutdown method on destroy on created Redisson instance. #2509\n", "commitDateTime": "2020-01-02 08:19:07", "authoredDateTime": "2020-01-02 08:19:07", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnectionFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnectionFactory", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnectionFactory.destroy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2d31e52243e606746d192810f822cf9f27048654"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 32, "deletions": 19, "lines": 51, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonConnectionFactory", "org.redisson.spring.data.connection.RedissonConnectionFactory.destroy()"]}, {"title": "java.lang.IllegalStateException: Failed to introspect Class [org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration] from ClassLoader", "body": "Env: Tomcat/8.5.35\r\nDeploying spring boot as web application :\r\nSpring Boot v2.1.6.RELEASE\r\nSpring v5.1.8.RELEASE\r\nthe web app contains \r\n@EnableCaching spring annotation\r\n\r\nin tomcat lib I have following jars:\r\nredisson-all-3.11.1-SNAPSHOT.jar\r\nredisson-tomcat-8-3.11.1-SNAPSHOT.jar\r\n\r\nDuring web app boot from tomcat here is the exception:\r\n\r\n```\r\njava.lang.IllegalStateException: Error processing condition on org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration$AuditEventRepositoryConfiguration\r\n        at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:59)\r\n        at org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n        at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:447)\r\n        at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:128)\r\n        at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)\r\n        at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:327)\r\n        at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:232)\r\n        at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275)\r\n        at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95)\r\n        at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:705)\r\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:531)\r\n        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)\r\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:742)\r\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:389)\r\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)\r\n        at org.springframework.boot.web.servlet.support.SpringBootServletInitializer.run(SpringBootServletInitializer.java:151)\r\n        at org.springframework.boot.web.servlet.support.SpringBootServletInitializer.createRootApplicationContext(SpringBootServletInitializer.java:131)\r\n        at org.springframework.boot.web.servlet.support.SpringBootServletInitializer.onStartup(SpringBootServletInitializer.java:91)\r\n        at org.springframework.web.SpringServletContainerInitializer.onStartup(SpringServletContainerInitializer.java:171)\r\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5245)\r\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:754)\r\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:730)\r\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:734)\r\n        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:985)\r\n        at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1857)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:522)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:277)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n        at java.lang.Thread.run(Thread.java:811)\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration] from ClassLoader [java.net.URLClassLoader@ccf6af1b]\r\n        at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:507)\r\n        at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:404)\r\n        at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:389)\r\n        at org.springframework.util.ReflectionUtils.getUniqueDeclaredMethods(ReflectionUtils.java:447)\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$$Lambda$299.00000000147FF510.apply(Unknown Source)\r\n        at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1671)\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:738)\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:679)\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:647)\r\n        at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1518)\r\n        at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1023)\r\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:190)\r\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:157)\r\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanType(BeanTypeRegistry.java:150)\r\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.updateTypesIfNecessary(BeanTypeRegistry.java:138)\r\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry$$Lambda$297.0000000013A73830.accept(Unknown Source)\r\n        at java.util.Iterator.forEachRemaining(Iterator.java:127)\r\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.updateTypesIfNecessary(BeanTypeRegistry.java:133)\r\n        at org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getNamesForType(BeanTypeRegistry.java:97)\r\n        at org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:268)\r\n        at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:261)\r\n        at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:250)\r\n        at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:170)\r\n        at org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:145)\r\n        at org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:46)\r\n        ... 30 common frames omitted\r\nCaused by: java.lang.NoClassDefFoundError: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider\r\n        at java.lang.ClassLoader.defineClassImpl(Native Method)\r\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:377)\r\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:154)\r\n        at java.net.URLClassLoader.defineClass(URLClassLoader.java:729)\r\n        at java.net.URLClassLoader.access$400(URLClassLoader.java:95)\r\n        at java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java:1184)\r\n        at java.security.AccessController.doPrivileged(AccessController.java:730)\r\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:604)\r\n        at java.lang.ClassLoader.loadClassHelper(ClassLoader.java:924)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:869)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:852)\r\n        at java.lang.Class.getDeclaredMethodsImpl(Native Method)\r\n        at java.lang.Class.getDeclaredMethods(Class.java:929)\r\n        at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:489)\r\n        ... 54 common frames omitted\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider\r\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:609)\r\n        at java.lang.ClassLoader.loadClassHelper(ClassLoader.java:924)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:869)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:852)\r\n        ... 68 common frames omitted\r\n```\r\n\r\nThe missing class 'org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider' is in spring-boot-actuator-2.1.6.RELEASE.jar that is inside the web application inside WEB-INF/lib folder\r\n\r\nI guess the issue is because the redisson library is inside tomcat system lib and the introspection happens from the web application -  e.g. different classloaders - I guess redisson tomcat lib can't load classes from war file where the CacheMeterBinderProvider class is located - If I remove redisson lib from tomcat the web application deploys and functions as intended\r\n\r\nIf I put a break point into org.springframework.util.ReflectionUtils method's getDeclaredMethods\r\nwhere the exception occur here is the exception stack trace from this method and exception that occur:\r\nThe getDeclaredMethods is invoked with parameter \"org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration\" for bean redissonCacheMeterBinderProvider\r\nhere is the exception : \r\n\r\n```\r\njava.lang.NoClassDefFoundError: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider\r\n\tat java.lang.ClassLoader.defineClassImpl(Native Method)\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:377)\r\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:154)\r\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:729)\r\n\tat java.net.URLClassLoader.access$400(URLClassLoader.java:95)\r\n\tat java.net.URLClassLoader$ClassFinder.run(URLClassLoader.java:1184)\r\n\tat java.security.AccessController.doPrivileged(AccessController.java:730)\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:604)\r\n\tat java.lang.ClassLoader.loadClassHelper(ClassLoader.java:924)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:869)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:852)\r\n\tat java.lang.Class.getDeclaredMethodsImpl(Native Method)\r\n\tat java.lang.Class.getDeclaredMethods(Class.java:929)\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:489)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:404)\r\n\tat org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:389)\r\n\tat org.springframework.util.ReflectionUtils.getAllDeclaredMethods(ReflectionUtils.java:434)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getCandidateFactoryMethods(BeanTypeRegistry.java:257)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getFactoryMethod(BeanTypeRegistry.java:243)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getFactoryMethod(BeanTypeRegistry.java:238)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getFactoryMethodReturnType(BeanTypeRegistry.java:217)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:188)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanTypeForNonAliasDefinition(BeanTypeRegistry.java:157)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.addBeanType(BeanTypeRegistry.java:150)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.updateTypesIfNecessary(BeanTypeRegistry.java:138)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry$$Lambda$292.0000000018682530.accept(Unknown Source)\r\n\tat java.util.Iterator.forEachRemaining(Iterator.java:127)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.updateTypesIfNecessary(BeanTypeRegistry.java:133)\r\n\tat org.springframework.boot.autoconfigure.condition.BeanTypeRegistry.getNamesForType(BeanTypeRegistry.java:97)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.collectBeanNamesForType(OnBeanCondition.java:268)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:261)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getBeanNamesForType(OnBeanCondition.java:250)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchingBeans(OnBeanCondition.java:170)\r\n\tat org.springframework.boot.autoconfigure.condition.OnBeanCondition.getMatchOutcome(OnBeanCondition.java:145)\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:46)\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator.shouldSkip(ConfigurationClassBeanDefinitionReader.java:447)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:128)\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:327)\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:232)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275)\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95)\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:705)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:531)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:742)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:389)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:311)\r\n\tat org.springframework.boot.web.servlet.support.SpringBootServletInitializer.run(SpringBootServletInitializer.java:151)\r\n\tat org.springframework.boot.web.servlet.support.SpringBootServletInitializer.createRootApplicationContext(SpringBootServletInitializer.java:131)\r\n\tat org.springframework.boot.web.servlet.support.SpringBootServletInitializer.onStartup(SpringBootServletInitializer.java:91)\r\n\tat org.springframework.web.SpringServletContainerInitializer.onStartup(SpringServletContainerInitializer.java:171)\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5245)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:754)\r\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:730)\r\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:734)\r\n\tat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:985)\r\n\tat org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1857)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:522)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:277)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.lang.Thread.run(Thread.java:811)\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:609)\r\n\tat java.lang.ClassLoader.loadClassHelper(ClassLoader.java:924)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:869)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:852)\r\n\t... 65 more\r\n```\r\n\r\nNote there are no \"org.springframework\" libs in Tomcat lib directory (only inside war lib directory).\r\nThe class \"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider\" is defined only inside /WEB-INF/lib/spring-boot-actuator-2.1.6.RELEASE.jar of the war file (no such class inside tomcat lib or another jar file inside the war file)\r\n\r\nIf I define this inside spring boot web app in the @Configuration:\r\n```\r\n@EnableAutoConfiguration(excludeName = {\"org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration\"})\r\n```\r\nThen I get this exception:\r\n```\r\norg.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cachesEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfiguration.class]: Unsatisfied dependency expressed through method 'cachesEndpoint' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cacheManager' defined in class path resource [org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration.class]: Unsatisfied dependency expressed through method 'cacheManager' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jCacheCacheManager' defined in class path resource [org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.cache.CacheManager]: Factory method 'jCacheCacheManager' threw exception; nested exception is java.lang.IllegalStateException: Default configuration hasn't been specified!\r\n        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:155)\r\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)\r\n        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)\r\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:742)\r\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:389)\r\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)\r\n        at org.springframework.boot.web.servlet.support.SpringBootServletInitializer.run(SpringBootServletInitializer.java:151)\r\n        at org.springframework.boot.web.servlet.support.SpringBootServletInitializer.createRootApplicationContext(SpringBootServletInitializer.java:131)\r\n        at org.springframework.boot.web.servlet.support.SpringBootServletInitializer.onStartup(SpringBootServletInitializer.java:91)\r\n        at org.springframework.web.SpringServletContainerInitializer.onStartup(SpringServletContainerInitializer.java:171)\r\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5245)\r\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:754)\r\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:730)\r\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:734)\r\n        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:985)\r\n        at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1857)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:522)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:277)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n        at java.lang.Thread.run(Thread.java:811)\r\n```\r\nSo I can't exclude redisson auto configuration. The javax.cache package is only defined inside redisson;s lib redisson-all-3.11.1-SNAPSHOT.jar - there are no javax.cache packages bundled with the war file", "url": "https://github.com/redisson/redisson/issues/2508", "user": "jchobantonov", "labels": ["bug"], "created": "2019-12-30 17:03:03", "closed": "2020-01-09 06:45:36", "commits": {"97f9451ddb9a10b8cc034da5a89aeb5604dd0d2a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "97f9451ddb9a10b8cc034da5a89aeb5604dd0d2a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c2f3ee50fcdb0c9a5fd72e6ff082c033dc2bd450"], "nameRev": "97f9451ddb9a10b8cc034da5a89aeb5604dd0d2a tags/redisson-3.12.1~45", "commitMessage": "Fixed - java.lang.IllegalStateException: Failed to introspect Class org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration #2508\n", "commitDateTime": "2020-01-09 09:45:21", "authoredDateTime": "2020-01-09 09:45:21", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/RedissonCacheStatisticsAutoConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCacheStatisticsAutoConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["97f9451ddb9a10b8cc034da5a89aeb5604dd0d2a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/cache"], "changesInPackagesSPOON": ["org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration"]}, {"title": "Provide classloader incase of FST so that it doesnt get the class loader from current thread", "body": "Do we have a way to provide class loader when using FST codec. we are facing classNotfound exceptions as the FSTConfiguration is picking up the current thread class loader which is used by RedisExecutor as shown in the below stack trace.\r\n\r\n> 195, FstCodec (org.redisson.codec)\r\n> <init>:190, FstCodec (org.redisson.codec)\r\n> newInstance0:-1, NativeConstructorAccessorImpl (sun.reflect)\r\n> newInstance:62, NativeConstructorAccessorImpl (sun.reflect)\r\n> newInstance:45, DelegatingConstructorAccessorImpl (sun.reflect)\r\n> newInstance:423, Constructor (java.lang.reflect)\r\n> getCodec:705, RedisExecutor (org.redisson.command)\r\n> execute:132, RedisExecutor (org.redisson.command)\r\n> run:357, RedisExecutor$3 (org.redisson.command)\r\n> expire:663, HashedWheelTimer$HashedWheelTimeout (io.netty.util)\r\n> expireTimeouts:738, HashedWheelTimer$HashedWheelBucket (io.netty.util)\r\n> run:466, HashedWheelTimer$Worker (io.netty.util)\r\n> run:748, Thread (java.lang)__\r\n\r\nOur proprietary classes are loaded from our class loader. So wanted to understand if we can set the classloader which is used by FSTCodec.", "url": "https://github.com/redisson/redisson/issues/2503", "user": "ALSowjanya", "labels": ["bug"], "created": "2019-12-27 13:19:52", "closed": "2020-03-27 08:10:24", "commits": {"5f0da0ad0988299b0769c29a1580306b2560e318": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "02befca6de2381dbd7a5e8a843616a7858de5c33": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 90.00027777777778, "commitsDetails": [{"commitHash": "5f0da0ad0988299b0769c29a1580306b2560e318", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7f37ae46709a6382bb7bca53915bba81e05b2bb0"], "nameRev": "5f0da0ad0988299b0769c29a1580306b2560e318 tags/redisson-3.12.1~15", "commitMessage": "Fixed - defined codec classloader is overwritten with Thread.currentThread().getContextClassLoader(). #2503\n", "commitDateTime": "2020-01-17 10:36:42", "authoredDateTime": "2020-01-17 10:36:42", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/RedisExecutor.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisExecutor.getCodec(org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "02befca6de2381dbd7a5e8a843616a7858de5c33", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8930794113f9ceed7acccfdb594b573ed3e2c99a"], "nameRev": "02befca6de2381dbd7a5e8a843616a7858de5c33 tags/redisson-3.12.4~20", "commitMessage": "Feature - Config.useThreadClassLoader setting added #2503\n", "commitDateTime": "2020-03-27 11:11:44", "authoredDateTime": "2020-03-27 11:11:44", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/RedisExecutor.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/config/Config.java", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisExecutor.getCodec(org.redisson.client.codec.Codec)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.Config", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.Config.isUseThreadClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.Config.setUseThreadClassLoader(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5f0da0ad0988299b0769c29a1580306b2560e318", "02befca6de2381dbd7a5e8a843616a7858de5c33"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 29, "deletions": 0, "lines": 29, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 7, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/config"], "changesInPackagesSPOON": ["org.redisson.command.RedisExecutor.getCodec(org.redisson.client.codec.Codec)", "org.redisson.config.Config", "org.redisson.config.Config.isUseThreadClassLoader()", "org.redisson.config.Config.setUseThreadClassLoader(boolean)"]}, {"title": "RedissonPriorityQueue throws NPE when add() method is called", "body": "<!--\r\n\u0421onsider Redisson PRO https://redisson.pro version for advanced features and support by SLA.\r\n-->\r\n\r\n**Expected behavior**\r\n\r\n\r\n**Actual behavior**\r\n\r\nI'm getting NPE at line 180\r\n\r\n         if (res.getIndex() < 0) {\r\n\r\n\r\n**Steps to reproduce or test case**\r\n\r\nI think it is possible looking BinarySearchCode inside the class\r\n\r\nplease take a  look at the code:\r\n\r\n  V res = getValue(index);\r\n            if (res == null) {\r\n                return new BinarySearchResult<V>();\r\n            }\r\n\r\n**Redis version**\r\n\r\nAMAZON EC\r\n\r\n**Redisson version**\r\n3.11.6\r\n\r\n**Redisson configuration**\r\n", "url": "https://github.com/redisson/redisson/issues/2484", "user": "zsokolowski", "labels": ["bug"], "created": "2019-12-17 16:34:41", "closed": "2020-01-10 07:17:04", "commits": {"00e8921cba52df1c987073bcb43ee9f5e6d082cc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "00e8921cba52df1c987073bcb43ee9f5e6d082cc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["97f9451ddb9a10b8cc034da5a89aeb5604dd0d2a"], "nameRev": "00e8921cba52df1c987073bcb43ee9f5e6d082cc tags/redisson-3.12.1~44", "commitMessage": "Fixed - RedissonPriorityQueue.add() method throws NPE. #2484\n", "commitDateTime": "2020-01-10 10:16:15", "authoredDateTime": "2020-01-10 10:16:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonPriorityQueue.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPriorityQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPriorityQueue.BinarySearchResult", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityQueue.BinarySearchResult.getIndex()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityQueue.BinarySearchResult.setIndex(java.lang.Integer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00e8921cba52df1c987073bcb43ee9f5e6d082cc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonPriorityQueue.BinarySearchResult.setIndex(java.lang.Integer)", "org.redisson.RedissonPriorityQueue.BinarySearchResult", "org.redisson.RedissonPriorityQueue.BinarySearchResult.getIndex()"]}, {"title": "Reactive/Rxjava2 transaction doesn't unlock lock on rollback or commit", "body": "", "url": "https://github.com/redisson/redisson/issues/2483", "user": "mrniko", "labels": ["bug"], "created": "2019-12-17 12:09:57", "closed": "2019-12-17 12:13:36", "commits": {"e04daf57156330403ac69489851c9a337c3539e3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e04daf57156330403ac69489851c9a337c3539e3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9ee2fcc04e5f79d8e27fd885f0cb38ce2eca920b"], "nameRev": "e04daf57156330403ac69489851c9a337c3539e3 tags/redisson-3.12.0~28", "commitMessage": "Fixed - Reactive/Rxjava2 transaction doesn't unlock lock on rollback or commit #2483.\n", "commitDateTime": "2019-12-17 15:12:09", "authoredDateTime": "2019-12-17 15:12:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/transaction/BaseTransactionalMap.java", "insertions": 28, "deletions": 17, "lines": 45}, {"filePath": "redisson/src/main/java/org/redisson/transaction/BaseTransactionalMapCache.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/transaction/BaseTransactionalSet.java", "insertions": 16, "deletions": 24, "lines": 40}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalBucket.java", "insertions": 9, "deletions": 13, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalBuckets.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/transaction/TransactionalSet.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/TransactionalSetCache.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/DeleteOperation.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapAddAndGetOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapCacheFastPutIfAbsentOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapCacheFastPutOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapCachePutIfAbsentOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapCachePutOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapFastPutIfAbsentOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapFastPutOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapFastRemoveOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapOperation.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapPutIfAbsentOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapPutOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapRemoveOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapReplaceOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/AddCacheOperation.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/AddOperation.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/RemoveCacheOperation.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/RemoveOperation.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["e04daf57156330403ac69489851c9a337c3539e3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 150, "deletions": 133, "lines": 283, "gitFilesChange": 25}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/transaction/operation/map", "redisson/src/main/java/org/redisson/transaction/operation/set", "redisson/src/main/java/org/redisson/transaction", "redisson/src/main/java/org/redisson/transaction/operation"]}, {"title": "Spring Transaction Manager doesn't handle Redisson TransactionException", "body": "", "url": "https://github.com/redisson/redisson/issues/2480", "user": "mrniko", "labels": ["bug"], "created": "2019-12-16 08:18:45", "closed": "2019-12-16 08:24:34", "commits": {"6e494d0cd992a053d6ea8190667af9bea908641d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6e494d0cd992a053d6ea8190667af9bea908641d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["32855dc37e23fce8b9a52705251880be99455ee2"], "nameRev": "6e494d0cd992a053d6ea8190667af9bea908641d tags/redisson-3.12.0~31", "commitMessage": "Fixed - Spring Transaction Manager doesn't handle Redisson TransactionException #2480\n", "commitDateTime": "2019-12-16 11:19:56", "authoredDateTime": "2019-12-16 11:19:56", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/transaction/RedissonTransactionManager.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonTransactionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.transaction.RedissonTransactionManager.doCommit(org.springframework.transaction.support.DefaultTransactionStatus)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.transaction.RedissonTransactionManager.doRollback(org.springframework.transaction.support.DefaultTransactionStatus)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6e494d0cd992a053d6ea8190667af9bea908641d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/transaction"], "changesInPackagesSPOON": ["org.redisson.spring.transaction.RedissonTransactionManager.doRollback(org.springframework.transaction.support.DefaultTransactionStatus)", "org.redisson.spring.transaction.RedissonTransactionManager.doCommit(org.springframework.transaction.support.DefaultTransactionStatus)"]}, {"title": "Spring boot with redisson 3.11.5 fails without optional actuator dependency", "body": "It looks like the file `RedissonCacheMeterBinderProvider` needs a `ConditionalOnClass` annotation, otherwise it isn't working with Spring boot 2 without the optional actuator dependency.", "url": "https://github.com/redisson/redisson/issues/2449", "user": "ehontoria", "labels": ["bug"], "created": "2019-12-03 21:53:06", "closed": "2019-12-04 08:47:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Why ExpirableSemaphore does not expire?", "body": "@mrniko, could you take a look at this question: https://stackoverflow.com/questions/59073355/is-there-some-kind-of-lock-semaphore-with-idle-ttl?\r\n\r\n### Redis version\r\n**3.2**\r\n\r\n### Redisson version\r\n**3.11.6**\r\n\r\n### Redisson configuration\r\n\r\n    singleServerConfig:\r\n      address: redis://127.0.0.1:6379\r\n      timeout: 300\r\n      connectTimeout: 1000\r\n      keepAlive: true\r\n      pingConnectionInterval: 3000\r\n      pingTimeout: 300\r\n      connectionMinimumIdleSize: 8\r\n      connectionPoolSize: 16", "url": "https://github.com/redisson/redisson/issues/2444", "user": "aaabramov", "labels": ["bug"], "created": "2019-12-02 09:49:01", "closed": "2019-12-06 08:44:46", "commits": {"1954b8e6fbc262c0a75509ec75df98af73202fd4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "1954b8e6fbc262c0a75509ec75df98af73202fd4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["271e842dfe51f638f8117edc0a57f1f4e3ce06cd"], "nameRev": "1954b8e6fbc262c0a75509ec75df98af73202fd4 tags/redisson-3.12.0~57", "commitMessage": "Fixed - RPermitExpirableSemaphore does not expire. #2444\n", "commitDateTime": "2019-12-06 11:43:59", "authoredDateTime": "2019-12-06 11:43:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonPermitExpirableSemaphore.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/RedissonPermitExpirableSemaphoreTest.java", "insertions": 11, "deletions": 1, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPermitExpirableSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPermitExpirableSemaphore.tryAcquireAsync(int,long)", "TOT": 10, "UPD": 8, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonPermitExpirableSemaphoreTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPermitExpirableSemaphoreTest.testExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1954b8e6fbc262c0a75509ec75df98af73202fd4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 8, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonPermitExpirableSemaphore.tryAcquireAsync(int,long)"]}, {"title": "java.lang.IllegalArgumentException: java.net.MalformedURLException: Invalid host: ", "body": "`[redisson-netty-2-9] WARN  io.netty.util.concurrent.DefaultPromise  - An exception was thrown by org.redisson.misc.RedissonPromise$$Lambda$28/657736958.operationComplete()\r\njava.lang.IllegalArgumentException: java.net.MalformedURLException: Invalid host: [[2405:200:1413:10::8d:4]\r\n        at org.redisson.misc.RedisURI.<init>(RedisURI.java:51)\r\n        at org.redisson.connection.MasterSlaveEntry.initSlaveBalancer(MasterSlaveEntry.java:100)\r\n        at org.redisson.cluster.ClusterConnectionManager.lambda$null$2(ClusterConnectionManager.java:242)\r\n        at org.redisson.misc.RedissonPromise.lambda$onComplete$0(RedissonPromise.java:187)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:502)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:495)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:474)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:415)\r\n        at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:540)\r\n        at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:529)\r\n        at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:101)\r\n        at org.redisson.misc.RedissonPromise.trySuccess(RedissonPromise.java:82)\r\n        at org.redisson.client.handler.CommandDecoder.completeResponse(CommandDecoder.java:454)\r\n        at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:449)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:380)\r\n        at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:209)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:147)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:117)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:505)\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:283)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:337)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:337)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:337)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:337)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:677)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:612)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:529)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:491)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.MalformedURLException: Invalid host: [[2405:200:1413:100::8d:4]\r\n        at java.net.URL.<init>(URL.java:627)\r\n        at java.net.URL.<init>(URL.java:490)\r\n        at java.net.URL.<init>(URL.java:439)\r\n        at org.redisson.misc.RedisURI.<init>(RedisURI.java:46)\r\n        ... 47 more\r\nCaused by: java.lang.IllegalArgumentException: Invalid host: [[2405:200:1413:100::8d:4]\r\n        at java.net.URLStreamHandler.parseURL(URLStreamHandler.java:195)\r\n        at java.net.URL.<init>(URL.java:622)\r\n`\r\n\r\n\r\n\r\n\r\n**same exception for all the other nodes of cluster.**\r\njava.lang.IllegalArgumentException: java.net.MalformedURLException: Invalid host: [[2405:200:1413:10::8d:5]\r\n\r\njava.lang.IllegalArgumentException: java.net.MalformedURLException: Invalid host: [[2405:200:1413:10::8d:2]\r\n\r\njava.lang.IllegalArgumentException: java.net.MalformedURLException: Invalid host: [[2405:200:1413:10::8d:3]\r\n\r\n\r\n### Steps to reproduce or test case\r\n`redisConfig.useClusterServers().addNodeAddress(\"redis://2405:200:1413:10::8d:2:6379\");`\r\n\r\n\r\n### Redis version\r\n5.0.4\r\n### Redisson version\r\n3.11.14\r\n### Redisson configuration\r\ndefault", "url": "https://github.com/redisson/redisson/issues/2440", "user": "santoshJD", "labels": ["bug"], "created": "2019-11-28 10:30:35", "closed": "2020-01-20 06:44:04", "commits": {"a450b9ccc0144c20b197abae0eedc18903c572e3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 52.000277777777775, "commitsDetails": [{"commitHash": "a450b9ccc0144c20b197abae0eedc18903c572e3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["999bbcc6689b3d0449c37512c05556c45353d90d"], "nameRev": "a450b9ccc0144c20b197abae0eedc18903c572e3 tags/redisson-3.12.1~13", "commitMessage": "Fixed - MalformedURLException thrown during Redis host parsing in cluster mode. #2440\n", "commitDateTime": "2020-01-20 09:44:04", "authoredDateTime": "2020-01-20 09:44:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/RedisURI.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisURI.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.RedisURI.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a450b9ccc0144c20b197abae0eedc18903c572e3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.RedisURI.toString()"]}, {"title": "Channel subscription process in interrupted methods can't be interrupted", "body": "", "url": "https://github.com/redisson/redisson/issues/2428", "user": "mrniko", "labels": ["bug"], "created": "2019-11-25 08:40:38", "closed": "2019-11-25 08:41:32", "commits": {"e54f659038147c0bc95087101d94ac300abdd6cc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e54f659038147c0bc95087101d94ac300abdd6cc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b9829c0177762ee75b2785b5864510ed90cd9851"], "nameRev": "e54f659038147c0bc95087101d94ac300abdd6cc tags/redisson-parent-3.11.6~8", "commitMessage": "Fixed - channel subscription proccess in interrupted methods can't be interrupted #2428\n", "commitDateTime": "2019-11-25 11:42:15", "authoredDateTime": "2019-11-25 11:42:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonCountDownLatch.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonPermitExpirableSemaphore.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSemaphore.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncExecutor.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCountDownLatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCountDownLatch.await()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.lock(long,java.util.concurrent.TimeUnit,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonPermitExpirableSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPermitExpirableSemaphore.acquire(int,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSemaphore.acquire(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.syncSubscriptionInterrupted(org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.syncSubscriptionInterrupted(org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e54f659038147c0bc95087101d94ac300abdd6cc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 6, "lines": 27, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 6, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.syncSubscriptionInterrupted(org.redisson.api.RFuture)", "org.redisson.RedissonPermitExpirableSemaphore.acquire(int,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonCountDownLatch.await()", "org.redisson.RedissonLock.lock(long,java.util.concurrent.TimeUnit,boolean)", "org.redisson.RedissonSemaphore.acquire(int)", "org.redisson.command.syncSubscriptionInterrupted(org.redisson.api.RFuture)"]}, {"title": "Unable to decode data NPE", "body": "17:43:04.526 ERROR [redisson-3-6] org.redisson.client.handler.CommandDecoder - Unable to decode data. channel: [id: 0xaf08e3fd, L:/127.0.0.1:64741 ! R:127.0.0.1/127.0.0.1:6379], reply: PooledUnsafeDirectByteBuf(ridx: 5, widx: 5, cap: 5), command: (BLPOP), params: [task_queue7, 1]\r\njava.lang.NullPointerException: null\r\n\tat org.redisson.client.handler.CommandDecoder.sendNext(CommandDecoder.java:241)\r\n\tat org.redisson.client.handler.CommandDecoder.sendNext(CommandDecoder.java:154)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:210)\r\n\tat org.redisson.client.handler.CommandDecoder.lambda$decode$0(CommandDecoder.java:139)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\nRedis-x64-3.2.100\r\n### Redisson version\r\n3.11.4\r\n### Redisson configuration\r\n   baseConfig.useSingleServer()\r\n                .setConnectionPoolSize(64)\r\n                .setIdleConnectionTimeout(3 * 60 * 1000)\r\n                .setKeepAlive(true)\r\n                .setPingConnectionInterval(3000)\r\n                .setSubscriptionConnectionMinimumIdleSize(5)\r\n                .setAddress(\"redis://127.0.0.1:6379\")\r\n                .setTcpNoDelay(true)\r\n                .setRetryAttempts(3)\r\n                .setRetryInterval(1000)\r\n                .setConnectTimeout(6000);", "url": "https://github.com/redisson/redisson/issues/2419", "user": "lidengke", "labels": ["bug"], "created": "2019-11-21 11:42:33", "closed": "2019-12-19 08:34:24", "commits": {"e885daa2dd5423f68f4237179d8e17f2fc82f5f1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "e885daa2dd5423f68f4237179d8e17f2fc82f5f1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0d3579a2a822b5a8a460b7c8b0c79ee72e728944"], "nameRev": "e885daa2dd5423f68f4237179d8e17f2fc82f5f1 tags/redisson-3.12.0~23", "commitMessage": "Fixed - CommandDecoder NPE #2419\n", "commitDateTime": "2019-12-19 11:33:04", "authoredDateTime": "2019-12-19 11:33:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 16, "deletions": 26, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.Channel,org.redisson.client.protocol.QueueCommand)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean,java.util.List)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List,boolean,java.util.List)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean,io.netty.channel.Channel)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.completeResponse(org.redisson.client.protocol.CommandData,java.lang.Object,io.netty.channel.Channel)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.Channel)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e885daa2dd5423f68f4237179d8e17f2fc82f5f1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 26, "lines": 42, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 38, "UPD": 33, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean,java.util.List)", "org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List,boolean,java.util.List)", "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean,io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.Channel,org.redisson.client.protocol.QueueCommand)", "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.handler.CommandDecoder.completeResponse(org.redisson.client.protocol.CommandData,java.lang.Object,io.netty.channel.Channel)"]}, {"title": "RMap.get with trigger additional MapWriter.write when load value from external.", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nRMap.get only put data in Redis when load value from external.\r\n### Actual behavior\r\nRMap.get put data in both Redis and external.\r\n### Steps to reproduce or test case\r\nclear redis data and do get operation which triger MapLoader.load to load value from external.\r\n### Redis version\r\nany\r\n### Redisson version\r\n3.10.1\r\n### Redisson configuration\r\nany", "url": "https://github.com/redisson/redisson/issues/2411", "user": "empty117", "labels": ["bug"], "created": "2019-11-15 06:27:52", "closed": "2019-11-18 07:20:58", "commits": {"35204d0ccf003854c17bff18d9bb50b0cd92a4c3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "35204d0ccf003854c17bff18d9bb50b0cd92a4c3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["990595a5401f482527899d5fffe6c4f05f3fc4a3"], "nameRev": "35204d0ccf003854c17bff18d9bb50b0cd92a4c3 tags/redisson-parent-3.11.6~14", "commitMessage": "Fixed - RMap.get() method invokes MapWriter.write() method during value loading. #2411\n", "commitDateTime": "2019-11-18 10:19:13", "authoredDateTime": "2019-11-18 10:19:13", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMap.java", "insertions": 1, "deletions": 6, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.loadValue(java.lang.Object,org.redisson.misc.RPromise,org.redisson.api.RLock,long).4.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMap.externalPutAsync(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["35204d0ccf003854c17bff18d9bb50b0cd92a4c3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 6, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMap.loadValue(java.lang.Object,org.redisson.misc.RPromise,org.redisson.api.RLock,long).4.run()", "org.redisson.RedissonMap.externalPutAsync(java.lang.Object,java.lang.Object)"]}, {"title": "Interrupted blocking methods aren't canceled", "body": "", "url": "https://github.com/redisson/redisson/issues/2403", "user": "mrniko", "labels": ["bug"], "created": "2019-11-08 11:52:58", "closed": "2019-11-08 11:59:47", "commits": {"1694dd04ae4060ec7e3511eef4b765ff1b1163d7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1694dd04ae4060ec7e3511eef4b765ff1b1163d7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8e74c0e9f63709b0a47e6b62672dd9fb8860f703"], "nameRev": "1694dd04ae4060ec7e3511eef4b765ff1b1163d7 tags/redisson-parent-3.11.6~22", "commitMessage": "Fixed - Interrupted blocking methods aren't canceled #2403\n", "commitDateTime": "2019-11-08 14:59:45", "authoredDateTime": "2019-11-08 14:59:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/command/RedisExecutor.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 7, "deletions": 2, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.getInterrupted(org.redisson.api.RFuture)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisExecutor.handleBlockingOperations(org.redisson.misc.RPromise,org.redisson.command.RedisConnection,java.lang.Long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTakeInterrupted()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1694dd04ae4060ec7e3511eef4b765ff1b1163d7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 3, "lines": 13, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.RedisExecutor.handleBlockingOperations(org.redisson.misc.RPromise,org.redisson.command.RedisConnection,java.lang.Long)", "org.redisson.command.CommandAsyncService.getInterrupted(org.redisson.api.RFuture)"]}, {"title": "ClusterNodesDecoder throw an exception when getting an unknown flag", "body": "### Expected behavior\r\nWhen any node of a Redis Cluster has configure \"cluster-slave-no-failover yes\" which is enable after Redis 4.0\uff0cthe result of \"cluster nodes\" command will contains a \"nofailover\" flag like this\r\n`xxxxx xxx:6379@16379 slave,nofailover xxxx 0 1573107298000 3 connected`\r\nClusterNodesDecoder should ignore this flag and do nothing.\r\n### Actual behavior\r\nClusterNodesDecoder throw an exception\r\n`java.lang.IllegalArgumentException: No enum constant org.redisson.cluster.Cluster.ClusterNodeInfo.Flag.NOFAILOVER`\r\n\r\n### Steps to reproduce or test case\r\n1. set the config \"cluster-slave-no-failover yes\" to one slave instance of a Redis Cluster\r\n2. start a RedissonClient connecting to that Redis Cluster \r\n\r\n### Redis version\r\n4.0.10\r\n\r\n### Redisson version\r\nThe latest version\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2399", "user": "JokerQueue", "labels": ["bug"], "created": "2019-11-07 10:26:21", "closed": "2019-11-07 13:02:44", "commits": {"279cdd2e863c2022bfe4d848b49194d0ed6498a1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "279cdd2e863c2022bfe4d848b49194d0ed6498a1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8e74c0e9f63709b0a47e6b62672dd9fb8860f703", "91df94fcce4440a6028fad15bab6da210afe7d41"], "nameRev": "279cdd2e863c2022bfe4d848b49194d0ed6498a1 tags/redisson-parent-3.11.6~21^2", "commitMessage": "Merge pull request #2400 from JokerQueue/master\n\nClusterNodesDecoder ignore unknown flag and avoid throwing exception, fix bug #2399", "commitDateTime": "2019-11-07 16:02:18", "authoredDateTime": "2019-11-07 16:02:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ClusterNodesDecoder.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterNodesDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ClusterNodesDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 12, "UPD": 1, "INS": 4, "MOV": 6, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Improve thread visibility in AsyncSemaphore", "body": "`counter` variable in `AsyncSemaphore` is not volatile variable.\r\nbut `getCounter()` method is public, and not synchronized.\r\n\r\n`getCounter()` method is possible access by many thread. (not in now. but may be possible in the future.)\r\nso add `volatile` keyword to `counter` variable.\r\n\r\n### Redisson version\r\nredisson-3.11.5 (latest)\r\n", "url": "https://github.com/redisson/redisson/issues/2398", "user": "joongsoo", "labels": ["bug"], "created": "2019-11-07 00:40:13", "closed": "2019-11-07 09:20:23", "commits": {"8e74c0e9f63709b0a47e6b62672dd9fb8860f703": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8e74c0e9f63709b0a47e6b62672dd9fb8860f703", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7bb7e1066b4f3ac5ccd640b1d2a13d69f8b9d58e"], "nameRev": "8e74c0e9f63709b0a47e6b62672dd9fb8860f703 tags/redisson-parent-3.11.6~23", "commitMessage": "Fixed - AsyncSemaphore counter field should be volatile. #2398\n", "commitDateTime": "2019-11-07 12:19:51", "authoredDateTime": "2019-11-07 12:19:51", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/pubsub/AsyncSemaphore.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AsyncSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.AsyncSemaphore", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8e74c0e9f63709b0a47e6b62672dd9fb8860f703"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/pubsub"], "changesInPackagesSPOON": ["org.redisson.pubsub.AsyncSemaphore"]}, {"title": "java.lang.NumberFormatException when ZRangeByScore query with -Infinity Double value", "body": "<!--\r\nPlease consider taking commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nNo Exception must be thrown\r\n\r\n### Actual behavior\r\n2019-11-06 17:22:50:476*[ERROR]*scheduled-task-pool-2*o.s.s.s.TaskUtils$LoggingErrorHandler*handleError*Unexpected error occurred in scheduled task.\r\njava.lang.NumberFormatException: null\r\n\tat java.math.BigDecimal.<init>(BigDecimal.java:497)\r\n\tat java.math.BigDecimal.<init>(BigDecimal.java:383)\r\n\tat java.math.BigDecimal.<init>(BigDecimal.java:809)\r\n\tat java.math.BigDecimal.valueOf(BigDecimal.java:1277)\r\n\tat org.redisson.spring.data.connection.RedissonConnection.value(RedissonConnection.java:1089)\r\n\tat org.redisson.spring.data.connection.RedissonConnection.zRangeByScore(RedissonConnection.java:1370)\r\n\tat org.redisson.spring.data.connection.RedissonConnection.zRangeByScore(RedissonConnection.java:1098)\r\n\tat org.springframework.data.redis.core.DefaultZSetOperations.lambda$rangeByScore$10(DefaultZSetOperations.java:197)\r\n\tat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:225)\r\n\tat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:185)\r\n\tat org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96)\r\n\tat org.springframework.data.redis.core.DefaultZSetOperations.rangeByScore(DefaultZSetOperations.java:197)\r\n\r\n### Steps to reproduce or test case\r\nTry using RedissonConnectionFactory with RedisTemplate and call the method template.opsForZSet().rangeByScore(id, min, max); with min value as Double.NEGATIVE_INFINITY\r\n\r\n### Redis version\r\n4.0.9\r\n\r\n### Redisson version\r\n3.11.5\r\n\r\n### Redisson configuration\r\nDefault Configuration on localhost", "url": "https://github.com/redisson/redisson/issues/2396", "user": "ashish2350", "labels": ["bug"], "created": "2019-11-06 12:09:59", "closed": "2019-11-06 12:22:46", "commits": {"e97f78dd889bd02936616fa0a79b25ad75e09458": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e97f78dd889bd02936616fa0a79b25ad75e09458", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e8c268e5d403fabbc8728ffa613743d3015db9b2"], "nameRev": "e97f78dd889bd02936616fa0a79b25ad75e09458 tags/redisson-parent-3.11.6~26", "commitMessage": "Fixed - Spring Data ZRangeByScore method doesn't support Infinity Double value #2396\n", "commitDateTime": "2019-11-06 15:23:04", "authoredDateTime": "2019-11-06 15:23:04", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-spring-data/redisson-spring-data-22/src/test/java/org/redisson/spring/data/connection/RedissonConnectionTest.java", "insertions": 11, "deletions": 1, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.value(java.lang.Object,boolean,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonConnectionTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnectionTest.testZSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e97f78dd889bd02936616fa0a79b25ad75e09458"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 6, "lines": 18, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonConnection.value(java.lang.Object,boolean,java.lang.String)"]}, {"title": "It doesn't work with RXJava 2", "body": "\r\n### Expected behavior\r\n\r\nThat it will work at all\r\n\r\n### Actual behavior\r\n\r\nava.lang.ClassCastException: class org.redisson.misc.CompositeIterable cannot be cast to class io.reactivex.Flowable (org.redisson.misc.CompositeIterable and io.reactivex.Flowable are in unnamed module of loader 'app')\r\n\t\r\n\r\n### Steps to reproduce or test case\r\n\r\n redissonRxClient.getList(\"ListTest\").iterator().doOnNext(o -> logger.info(o)).subscribe();\r\n\r\n### Redis version\r\n5.0.6\r\n\r\n### Redisson version\r\n<dependency>\r\n\t<groupId>org.redisson</groupId>\r\n\t<artifactId>redisson</artifactId>\r\n\t<version>3.11.5</version>\r\n</dependency>\r\n\r\n<dependency>\r\n\t<groupId>io.reactivex.rxjava2</groupId>\r\n\t<artifactId>rxjava</artifactId>\r\n\t<version>2.2.13</version>\r\n</dependency>\r\n\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2381", "user": "zsokolowski", "labels": ["bug"], "created": "2019-10-29 16:46:17", "closed": "2019-10-30 15:23:04", "commits": {"94d350c7443e24252dee2cfb4f4fbce6bebad885": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "94d350c7443e24252dee2cfb4f4fbce6bebad885", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ef3e8913fe6ac67abf69fd1bc719f60b6bded866"], "nameRev": "94d350c7443e24252dee2cfb4f4fbce6bebad885 tags/redisson-parent-3.11.6~31", "commitMessage": "Fixed - RKeysRx.getKeys() and RKeysReactive.getKeys() methods aren't working. #2381\n", "commitDateTime": "2019-10-30 18:23:20", "authoredDateTime": "2019-10-30 18:23:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonKeysReactive.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/rx/RedissonKeysRx.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/RedissonKeysReactiveTest.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "redisson/src/test/java/org/redisson/rx/RedissonKeysRxTest.java", "insertions": 16, "deletions": 4, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonKeysReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonKeysReactive.getKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.RedissonKeysReactive.getKeys(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonKeysRx.java", "spoonMethods": [{"spoonMethodName": "org.redisson.rx.RedissonKeysRx.getKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.rx.RedissonKeysRx.getKeys(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonKeysReactiveTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeysReactiveTest.testGetKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonKeysRxTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.rx.RedissonKeysRxTest.testGetKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["94d350c7443e24252dee2cfb4f4fbce6bebad885"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 0, "lines": 16, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/reactive", "redisson/src/main/java/org/redisson/rx"], "changesInPackagesSPOON": ["org.redisson.reactive.RedissonKeysReactive.getKeys(int)", "org.redisson.rx.RedissonKeysRx.getKeys()", "org.redisson.rx.RedissonKeysRx.getKeys(int)", "org.redisson.reactive.RedissonKeysReactive.getKeys()"]}, {"title": "Connection issue with redisson 3.11.x and Amazon ElastiCache Redis cluster mode", "body": "Amazon ElastiCache Redis cluster mode, Redis version:  3.2.4\r\nRedisson version: 3.11.x Community version.\r\nJava version: Oracle 1.8\r\nApp: Spring boot 1.5.22 with spring-data-redis 1.8.23\r\n\r\nHi,\r\nWhen I deploy my app to Amazon dev server, after about 24 to 28 hours, I got the following log:\r\n2019-10-20 03:50:26.532  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 16384 slots added to redis://10.5.3.207:6379 --- MDC: {, , , , }\r\n2019-10-20 03:50:26.532  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 16384 slots removed from redis://10.5.3.207:6379 --- MDC: {, , , , }\r\n2019-10-20 03:50:26.533  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 18432 slots found to add --- MDC: {, , , , }\r\n2019-10-20 03:50:31.543  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 16384 slots added to redis://10.5.3.207:6379 --- MDC: {, , , , }\r\n2019-10-20 03:50:31.543  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 16384 slots removed from redis://10.5.3.207:6379 --- MDC: {, , , , }\r\n2019-10-20 03:50:31.547  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 28672 slots found to add --- MDC: {, , , , }\r\n2019-10-20 03:50:36.557  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 16384 slots added to redis://10.5.3.207:6379 --- MDC: {, , , , }\r\n2019-10-20 03:50:36.557  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 16384 slots removed from redis://10.5.3.207:6379 --- MDC: {, , , , }\r\n2019-10-20 03:50:36.558  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 28672 slots found to add --- MDC: {, , , , }\r\n2019-10-20 03:50:41.575  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 16384 slots added to redis://10.5.3.207:6379 --- MDC: {, , , , }\r\n2019-10-20 03:50:41.576  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 16384 slots removed from redis://10.5.3.207:6379 --- MDC: {, , , , }\r\n2019-10-20 03:50:41.581  INFO 10880 --- [redisson-netty-2-5] o.r.c.ClusterConnectionManager           : 28672 slots found to add --- MDC: {, , , , }\r\n\r\nAnd my app sometimes throws exception when it gets data from redis. \r\nI have such issue in redisson 3.11.0.to 3.11.4\r\nIf I switch back to redisson 3.10.7, then it is ok. Please help to fix it. Thank you very much.", "url": "https://github.com/redisson/redisson/issues/2371", "user": "ducnv82", "labels": ["bug"], "created": "2019-10-20 16:14:38", "closed": "2019-11-29 08:43:43", "commits": {"10bfcac10babe48cc0b7201cbf4909a11b703dcb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "10bfcac10babe48cc0b7201cbf4909a11b703dcb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["082c0dccf8d5800582e1b388980f24f739f1e01c"], "nameRev": "10bfcac10babe48cc0b7201cbf4909a11b703dcb tags/redisson-3.11.5~4", "commitMessage": "Fixed - cluster connection manager discoveries wrong slot changes. #2371\n", "commitDateTime": "2019-10-21 13:12:12", "authoredDateTime": "2019-10-21 13:12:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 39, "deletions": 45, "lines": 84}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterSlotRange.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "TOT": 20, "UPD": 4, "INS": 5, "MOV": 6, "DEL": 5}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.parsePartitions(java.util.List)", "TOT": 43, "UPD": 10, "INS": 5, "MOV": 20, "DEL": 8}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.find(java.util.Collection,java.lang.Integer)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsMigration(java.util.Collection)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.config.ClusterServersConfig)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.getPartition(java.util.Map,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClusterSlotRange.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterSlotRange.isOwn(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.misc.RedisURI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["10bfcac10babe48cc0b7201cbf4909a11b703dcb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 40, "deletions": 50, "lines": 90, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 83, "UPD": 19, "INS": 12, "MOV": 34, "DEL": 18, "spoonFilesChanged": 3, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.checkSlotsMigration(java.util.Collection)", "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "org.redisson.cluster.ClusterConnectionManager.parsePartitions(java.util.List)", "org.redisson.cluster.ClusterConnectionManager.find(java.util.Collection,java.lang.Integer)", "org.redisson.cluster.ClusterConnectionManager.getPartition(java.util.Map,java.lang.String)", "org.redisson.cluster.ClusterSlotRange.isOwn(int)", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.misc.RedisURI)", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.config.ClusterServersConfig)", "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.config.ClusterServersConfig,java.util.Collection)"]}, {"title": "Redis hostname gets a `]` at the end", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\nConnects to Redis on AWS\r\n\r\n### Actual behavior\r\n\r\nNetty throws an exception trying to resolve the hostname:\r\n\r\n```\r\nCaused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'ec2-54-234-206-155.compute-1.amazonaws.com]' failed to resolve 'ec2-54-234-206-155.compute-1.amazonaws.com].ec2.internal' after 3 queries\r\n```\r\n\r\nSomehow, there is a `]` added to the hostname (`ec2-54-234-206-155.compute-1.amazonaws.com]`), even though my `redisson.json` does not contain one.\r\n\r\n### Steps to reproduce or test case\r\n\r\nClick this button to deploy the repro example for free on Heroku:\r\n\r\n[![Deploy to Heroku](https://www.herokucdn.com/deploy/button.png)](https://dashboard.heroku.com/new?&template=https%3A%2F%2Fgithub.com%2Fjkutner%2Fwebapp-runner-redis-example)\r\n\r\nThen view the logs (you may need to restart the app if you want to view the logs in the browser because it crashes).\r\n\r\nOr you may run this [sample app](https://github.com/jkutner/webapp-runner-redis-example) with a command like: \r\n\r\n```\r\n$ java -jar webapp-runner.jar --session-store redis --session-store-pool-size 5 target/heroku-redisson-test.war\r\n```\r\n\r\n### Redis version\r\n\r\n5.0\r\n\r\n### Redisson version\r\n\r\n3.11.4 (appeared in 3.11.01 and possibly earlier but not before 3.10.0)\r\n\r\n### Redisson configuration\r\n\r\n```json\r\n{\"singleServerConfig\":{\"idleConnectionTimeout\":10000,\"pingTimeout\":1000,\"connectTimeout\":10000,\"timeout\":5000,\"retryAttempts\":3,\"retryInterval\":1500,\"password\":\"pb9e2626905755078bb5c0fa4d482a19e5871b66645aac0c8650794d3c6e742f2\",\"subscriptionsPerConnection\":5,\"sslEnableEndpointIdentification\":true,\"sslProvider\":\"JDK\",\"\r\npingConnectionInterval\":0,\"keepAlive\":false,\"tcpNoDelay\":false,\"address\":\"redis://<redacted>:<redacted>@ec2-54-234-206-155.compute-1.amazonaws.com:15319\",\"subscriptionConnectionMinimumIdleSize\":1,\"subscriptionConnectionPoolSize\":50,\"connectionMinimumIdleSize\":5,\"connectionPoolSize\":5,\"database\":0,\"dnsMonitoringInterval\r\n\":5000},\"threads\":16,\"nettyThreads\":32,\"codec\":{\"class\":\"org.redisson.codec.FstCodec\"},\"referenceEnabled\":true,\"transportMode\":\"NIO\",\"lockWatchdogTimeout\":30000,\"keepPubSubOrder\":true,\"decodeInExecutor\":false,\"useScriptCache\":false,\"minCleanUpDelay\":5,\"maxCleanUpDelay\":1800,\"addressResolverGroupFactory\":{\"class\":\"org.redisson.connection.DnsAddressResolverGroupFa\r\nctory\"}}\r\n```\r\n\r\n### Other information\r\n\r\nTomcat 8.5.47\r\n\r\nThe source code for the [webapp-runner code that sets up Redisson can be found on Github](https://github.com/jsimone/webapp-runner/blob/master/redis/src/main/java/webapp/runner/launch/RedisSessionStore.java).\r\n\r\nFull error:\r\n\r\n```\r\nSEVERE: The session manager failed to start\r\norg.apache.catalina.LifecycleException: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'ec2-34-226-17-251.compute-1.amazonaws.com]' failed to resolve 'ec2-34-226-17-251.compute-1.amazonaws.com].ec2.internal' after 3 queries\r\n\tat org.redisson.tomcat.RedissonSessionManager.buildClient(RedissonSessionManager.java:354)\r\n\tat org.redisson.tomcat.RedissonSessionManager.startInternal(RedissonSessionManager.java:237)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5182)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1412)\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1402)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: io.netty.resolver.dns.DnsResolveContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'ec2-34-226-17-251.compute-1.amazonaws.com]' failed to resolve 'ec2-34-226-17-251.compute-1.amazonaws.com].ec2.internal' after 3 queries\r\n\tat io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:925)\r\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:884)\r\n\tat io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:356)\r\n\tat io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:543)\r\n\tat io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:64)\r\n\tat io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:400)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490)\r\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615)\r\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:604)\r\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\r\n\tat io.netty.resolver.dns.DnsQueryContext.setSuccess(DnsQueryContext.java:204)\r\n\tat io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:196)\r\n\tat io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1320)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\r\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931)\r\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:93)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t... 1 more\r\n```", "url": "https://github.com/redisson/redisson/issues/2370", "user": "jkutner", "labels": ["bug"], "created": "2019-10-19 15:26:11", "closed": "2019-10-20 08:05:48", "commits": {"082c0dccf8d5800582e1b388980f24f739f1e01c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "082c0dccf8d5800582e1b388980f24f739f1e01c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2e6de2ee1f0589f002d3e38db18be283b0277d78"], "nameRev": "082c0dccf8d5800582e1b388980f24f739f1e01c tags/redisson-3.11.5~5", "commitMessage": "Fixed - host details in Redis url cause extra bracket at the end. #2370\n", "commitDateTime": "2019-10-20 11:05:45", "authoredDateTime": "2019-10-20 11:05:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/RedisURI.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisURI.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.RedisURI", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["082c0dccf8d5800582e1b388980f24f739f1e01c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.RedisURI"]}, {"title": "ClientConnectionsEntry\u4e2d\u7684\u6210\u5458\u53d8\u91cfallConnections\uff08Queue\uff09\u4e2d\u5b58\u5728\u975e\u5e38\u591a\u7684RedisConnection\u5bf9\u8c61\uff0c\u5185\u5b58\u5360\u7528\u975e\u5e38\u5927\uff0c\u65e0\u6cd5\u56de\u6536\uff0c\u5bfc\u81f4\u5e74\u8001\u4ee3\u88ab\u5360\u6ee1\uff0c\u75af\u72c2fullgc\uff0ccpu 300%", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\u4e0d\u4f1a\u5b58\u5728\u975e\u5e38\u591a\u7684RedisConnection\uff0c\u5806\u5185\u5b58\u3001cpu\u6b63\u5e38\r\n### Actual behavior\r\n\u5b58\u5728\u975e\u5e38\u591a\u7684RedisConnection\uff0c\u65b0\u751f\u4ee3\uff0c\u5e74\u8001\u4ee3\u90fd\u63a5\u8fd1100%\uff0ccpu\u8fbe\u5230300%\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n4.0.8\r\n### Redisson version\r\n3.10.1\r\n### Redisson configuration\r\nConfig config = new Config();\r\n        config.setNettyThreads(0).setThreads(0).setCodec(new JsonJacksonCodec()).setReferenceEnabled(true);\r\n        config.useSingleServer()\r\n                .setAddress(\"redis://\"+\"ip\".concat(\":\").concat(String.valueOf(port)))\r\n                .setDatabase(1)\r\n                .setPassword(\"password\")\r\n                .setIdleConnectionTimeout(10000)\r\n                .setPingConnectionInterval(30000)\r\n                .setPingTimeout(1000)\r\n                .setConnectTimeout(10000)\r\n                .setTimeout(3000)\r\n                .setRetryAttempts(3)\r\n                .setRetryInterval(1500)\r\n                .setSubscriptionsPerConnection(5)\r\n                .setClientName(\"none\")\r\n                .setSubscriptionConnectionMinimumIdleSize(1)\r\n                .setSubscriptionConnectionPoolSize(50)\r\n                .setConnectionPoolSize(64)\r\n                .setConnectionMinimumIdleSize(10)\r\n                .setDnsMonitoringInterval(5000);\r\n        RedissonClient redissonClient = Redisson.create(config);", "url": "https://github.com/redisson/redisson/issues/2362", "user": "xujunhua555", "labels": ["bug"], "created": "2019-10-15 06:19:03", "closed": "2020-02-04 09:58:09", "commits": {"e7cc298cc9f395b8d37a226132d93fbeccfbdc55": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 112.00027777777778, "commitsDetails": [{"commitHash": "e7cc298cc9f395b8d37a226132d93fbeccfbdc55", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8fe41cade7e1bb3a27dbc743518cc132ed413aca"], "nameRev": "e7cc298cc9f395b8d37a226132d93fbeccfbdc55 tags/redisson-3.12.2~18", "commitMessage": "Fixed - memory leak caused by ClientConnectionsEntry.allConnections field. #2362\n", "commitDateTime": "2020-02-04 12:57:48", "authoredDateTime": "2020-02-04 12:57:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 16, "deletions": 10, "lines": 26}, {"filePath": "redisson/src/main/java/org/redisson/connection/IdleConnectionWatcher.java", "insertions": 22, "deletions": 17, "lines": 39}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IdleConnectionWatcher.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.IdleConnectionWatcher.add(int,int,java.util.Collection,org.redisson.pubsub.AsyncSemaphore)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.IdleConnectionWatcher.1.run()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.IdleConnectionWatcher", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.IdleConnectionWatcher.Entry", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.IdleConnectionWatcher.add(int,int,java.util.Collection,org.redisson.pubsub.AsyncSemaphore,java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e7cc298cc9f395b8d37a226132d93fbeccfbdc55"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 38, "deletions": 27, "lines": 65, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 3, "INS": 6, "MOV": 0, "DEL": 4, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.IdleConnectionWatcher.1.run()", "org.redisson.connection.IdleConnectionWatcher", "org.redisson.connection.ClientConnectionsEntry", "org.redisson.connection.IdleConnectionWatcher.Entry", "org.redisson.connection.IdleConnectionWatcher.add(int,int,java.util.Collection,org.redisson.pubsub.AsyncSemaphore)", "org.redisson.connection.IdleConnectionWatcher.add(int,int,java.util.Collection,org.redisson.pubsub.AsyncSemaphore,java.util.function.Function)"]}, {"title": "Decoding Issue in RBuckets.get Function", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\ncan use a different codec rather than the codec defined in config to encode and decode the object.\r\n\r\n### Actual behavior\r\nit works when encoding, but doesn't work when decoding\r\n\r\n### Steps to reproduce or test case\r\n\r\n``` java\r\n        RBuckets buckets = client.getBuckets(StringCodec.INSTANCE);\r\n        Map<String, String> items = buckets.get(\"buckets:A\", \"buckets:B\", \"buckets:C\");\r\n\r\n        items.put(\"buckets:A\", \"XYZ\");\r\n        items.put(\"buckets:B\", \"OPM\");\r\n        items.put(\"buckets:C\", \"123\");\r\n\r\n        buckets.set(items);\r\n        items = buckets.get(\"buckets:A\", \"buckets:B\", \"buckets:C\");\r\n        Assert.assertEquals(3, items.size());\r\n        Assert.assertEquals(\"XYZ\", items.get(\"buckets:A\")); // this line will be fail. because the value of this key is a byte array.\r\n```\r\n\r\nthe issue should be in the CommandAsyncService.executeBatchedAsync function. when the Redis is not in cluster mode, the parameter codec is useless.\r\n\r\n``` java\r\n    private <T, R> RFuture<R> executeBatchedAsync(boolean readOnly, Codec codec, RedisCommand<T> command, SlotCallback<T, R> callback, String... keys) {\r\n        if (!this.connectionManager.isClusterMode()) {\r\n            return readOnly ? this.readAsync((String)null, command, keys) : this.writeAsync((String)null, command, keys); \r\n        } else {\r\n            Map<MasterSlaveEntry, List<String>> range2key = new HashMap();\r\n            String[] var7 = keys;\r\n            int var8 = keys.length;\r\n\r\n            ...\r\n```\r\n\r\n### Redis version\r\n5\r\n\r\n### Redisson version\r\n3.11.4\r\n\r\n### Redisson configuration\r\n``` java\r\n        config = new Config();\r\n        config.setCodec(ByteArrayCodec.INSTANCE)\r\n              .useMasterSlaveServers()\r\n              .setMasterAddress(\"redis://xxx.aws.com:6379\")\r\n              .addSlaveAddress(\"redis://xxx.aws.com:6379\")\r\n              .setConnectTimeout(5000)\r\n              .setTimeout(2000)\r\n              .setClientName(\"Tester\")\r\n              .setRetryInterval(500);\r\n\r\n\r\n        client = Redisson.create(config);\r\n```", "url": "https://github.com/redisson/redisson/issues/2361", "user": "fengyj", "labels": ["bug"], "created": "2019-10-15 04:33:12", "closed": "2019-10-15 08:59:38", "commits": {"710c384111d38c9a347b7047ad6b5aaccb2e8683": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "710c384111d38c9a347b7047ad6b5aaccb2e8683", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0b941a1b7c2a4b5e6319399737655aa1a2d0def8"], "nameRev": "710c384111d38c9a347b7047ad6b5aaccb2e8683 tags/redisson-3.11.5~13", "commitMessage": "Fixed - RBuckets.get() method doesn't work with custom codec. #2361\n", "commitDateTime": "2019-10-15 11:59:14", "authoredDateTime": "2019-10-15 11:59:14", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBucketsTest.java", "insertions": 18, "deletions": 1, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.executeBatchedAsync(boolean,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBucketsTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBucketsTest.testCodec()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["710c384111d38c9a347b7047ad6b5aaccb2e8683"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.executeBatchedAsync(boolean,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])"]}, {"title": "RedissonLock.unlock() hangs infinitely waiting for RedissonPromise", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nCalls to RedissonLock.unlock() are expected to finish after the lock has been deleted from Redis.\r\n\r\n### Actual behavior\r\nWe have experienced several threads locked forever waiting inside calls to RedissonLock.unlock() in our production system within a few hours after upgrading to Redisson 3.11.4 from Redisson 3.8.0.\r\n\r\n### Steps to reproduce or test case\r\nUnfortunately I am unable to reproduce the problem on my own computer. We have however experienced it on several of our production servers within just a few hours after starting our newer version of the application with updated Redisson version. We upgraded from 3.8.0 in order to receive fixes for bug #1966 - Deadlock after Redis timeout, which we also experienced a couple of times. However right after start we have found some (29) exceptions in our logs coming from internal redisson threads:\r\n\r\n````\r\n[redisson-netty-5-24] WARN  io.netty.util.concurrent.DefaultPromise - An exception was thrown by org.redisson.misc.RedissonPromise$$Lambda$50/265319658.operationComplete()\r\njava.lang.NullPointerException: null\r\n\tat org.redisson.RedissonLock.cancelExpirationRenewal(RedissonLock.java:330) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.RedissonLock.lambda$unlockAsync$3(RedissonLock.java:583) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.misc.RedissonPromise.lambda$onComplete$0(RedissonPromise.java:187) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577) ~[netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570) ~[netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549) ~[netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490) ~[netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615) ~[netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:604) ~[netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104) ~[netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat org.redisson.misc.RedissonPromise.trySuccess(RedissonPromise.java:82) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.command.RedisExecutor.handleReference(RedisExecutor.java:505) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.command.RedisExecutor.handleSuccess(RedisExecutor.java:498) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.command.RedisExecutor.handleResult(RedisExecutor.java:483) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.command.RedisExecutor.checkAttemptPromise(RedisExecutor.java:469) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.command.RedisExecutor.lambda$execute$3(RedisExecutor.java:187) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.misc.RedissonPromise.lambda$onComplete$0(RedissonPromise.java:187) ~[redisson-3.11.4.jar:3.11.4]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:604) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat org.redisson.misc.RedissonPromise.trySuccess(RedissonPromise.java:82) [redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.client.handler.CommandDecoder.completeResponse(CommandDecoder.java:454) [redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:449) [redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:372) [redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:209) [redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:147) [redisson-3.11.4.jar:3.11.4]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:117) [redisson-3.11.4.jar:3.11.4]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:505) [netty-codec-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366) [netty-codec-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:283) [netty-codec-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:352) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1422) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:374) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:360) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:931) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:700) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:635) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:552) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:514) [netty-transport-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$6.run(SingleThreadEventExecutor.java:1044) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.41.Final.jar:4.1.41.Final]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_151]\r\n````\r\n\r\nAfter that we were investigating issues with blocked threads by analyzing thread dumps. All stuck threads had exactly the same stack trace as below:\r\n\r\n````\r\n rabbitmq-thread-1awaiting notification on [ 0x00000005e298c400 ] , holding [ 0x00000005cad3ebd0 ]\r\nat java.lang.Object.wait(Native Method)\r\nat java.lang.Object.wait(Object.java:502)\r\nat io.netty.util.concurrent.DefaultPromise.await(DefaultPromise.java:252)\r\nat org.redisson.misc.RedissonPromise.await(RedissonPromise.java:110)\r\nat org.redisson.misc.RedissonPromise.await(RedissonPromise.java:35)\r\nat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:132)\r\nat org.redisson.RedissonObject.get(RedissonObject.java:90)\r\nat org.redisson.RedissonLock.unlock(RedissonLock.java:453)\r\nat ... (our code goes below)\r\n````\r\n\r\nAfter examining the source code of RedissonLock.java we have found that the NullPointerException occurs probably due to missing timeout object inside task:\r\n````java\r\n329:        if (threadId == null || task.hasNoThreads()) {\r\n330:            task.getTimeout().cancel();\r\n331:            EXPIRATION_RENEWAL_MAP.remove(getEntryName());\r\n332:        }\r\n````\r\n\r\nI'm not sure if it would solve the root cause why `task.getTimeout()` returns `null`, but calls to `cancelExpirationRenewal` method should not fail with an exception, otherwise, e.g. in `RedissonLock.unlockAsync` method the future will never receive a result (or a failure):\r\n\r\n````java\r\n    @Override\r\n    public RFuture<Void> unlockAsync(long threadId) {\r\n        RPromise<Void> result = new RedissonPromise<Void>();\r\n        RFuture<Boolean> future = unlockInnerAsync(threadId);\r\n\r\n        future.onComplete((opStatus, e) -> {\r\n            if (e != null) {\r\n                cancelExpirationRenewal(threadId);\r\n                result.tryFailure(e);\r\n                return;\r\n            }\r\n\r\n            if (opStatus == null) {\r\n                IllegalMonitorStateException cause = new IllegalMonitorStateException(\"attempt to unlock lock, not locked by current thread by node id: \"\r\n                        + id + \" thread-id: \" + threadId);\r\n                result.tryFailure(cause);\r\n                return;\r\n            }\r\n            \r\n            cancelExpirationRenewal(threadId);\r\n            result.trySuccess(null);\r\n        });\r\n\r\n        return result;\r\n    }\r\n````\r\n\r\nPlease add null check for timeout inside the ExpirationEntry object.\r\n\r\nWe had to return to 3.8.0 version because of this problem. I think it is quire severe.\r\n\r\n### Redis version\r\n4.0.2\r\n\r\n### Redisson version\r\n3.11.4\r\n\r\n### Redisson configuration\r\nDefault configuration with sentinel servers.", "url": "https://github.com/redisson/redisson/issues/2355", "user": "asharayev", "labels": ["bug"], "created": "2019-10-10 14:47:54", "closed": "2019-10-12 10:03:25", "commits": {"0d4ec96df6ed82e5662fdadbfa6b434702186105": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "0d4ec96df6ed82e5662fdadbfa6b434702186105", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3a509310c9591724745487228c6af3437a2c3a8a"], "nameRev": "0d4ec96df6ed82e5662fdadbfa6b434702186105 tags/redisson-3.11.5~15", "commitMessage": "Fixed - RLock.unlock() method hangs forever. #2355\n", "commitDateTime": "2019-10-12 13:03:01", "authoredDateTime": "2019-10-12 13:03:01", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.cancelExpirationRenewal(java.lang.Long)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0d4ec96df6ed82e5662fdadbfa6b434702186105"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.cancelExpirationRenewal(java.lang.Long)"]}, {"title": "RStream.trim throws exception", "body": "", "url": "https://github.com/redisson/redisson/issues/2352", "user": "mrniko", "labels": ["bug"], "created": "2019-10-03 14:17:31", "closed": "2019-10-03 14:19:12", "commits": {"794f5030a1b1abc983a7d442f9513b1433d77687": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "794f5030a1b1abc983a7d442f9513b1433d77687", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["96daf5dc9ccde475225b33bb20e1a81242b8db61"], "nameRev": "794f5030a1b1abc983a7d442f9513b1433d77687 tags/redisson-3.11.5~17", "commitMessage": "Fixed - RStream.trim method throws exception #2352\n", "commitDateTime": "2019-10-03 17:18:27", "authoredDateTime": "2019-10-03 17:18:27", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonStream.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonStreamTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonStream.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonStream.trimAsync(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonStream.trimNonStrictAsync(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonStreamTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonStreamTest.testTrim()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["794f5030a1b1abc983a7d442f9513b1433d77687"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonStream.trimNonStrictAsync(int)", "org.redisson.RedissonStream.trimAsync(int)"]}, {"title": "listener execute multi times when register multi topics", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n@Component\r\npublic class RedisMessageListenerConfig {\r\n\r\n    @Bean\r\n    RedisMessageListenerContainer container(RedisConnectionFactory connectionFactory,\r\n                                            @Autowired @Qualifier(\"cacheHandlerAdapter\") MessageListenerAdapter cacheHandlerAdapter,\r\n                                            @Autowired @Qualifier(\"cacheHandlerAdapter1\") MessageListenerAdapter cacheHandlerAdapter1) {\r\n        RedisMessageListenerContainer container = new RedisMessageListenerContainer();\r\n        container.setConnectionFactory(connectionFactory);\r\n        container.addMessageListener(cacheHandlerAdapter, topic());\r\n        container.addMessageListener(cacheHandlerAdapter1, topic1());\r\n\r\n        return container;\r\n    }\r\n\r\n    @Bean\r\n    MessageListenerAdapter cacheHandlerAdapter(CachePurgeHandler cachePurgeHandler) {\r\n        return new MessageListenerAdapter(cachePurgeHandler);\r\n    }\r\n\r\n    @Bean\r\n    MessageListenerAdapter cacheHandlerAdapter1(CachePurgeHandler1 cachePurgeHandler1) {\r\n        return new MessageListenerAdapter(cachePurgeHandler1);\r\n    }\r\n\r\n    @Bean\r\n    ChannelTopic topic() {\r\n        return new ChannelTopic(\"CACHE_PURGE\");\r\n    }\r\n\r\n    @Bean\r\n    ChannelTopic topic1() {\r\n        return new ChannelTopic(\"messageQueue\");\r\n    }\r\n}\r\n\r\n### Expected behavior\r\nthe listener execute multi times as the topics` size\r\n\r\n### Actual behavior\r\nexecute one time\r\n\r\n### Steps to reproduce or test case\r\nredis-cli> PUBLISH messageQueue \"{\\\"id\\\": 4, \\\"name\\\": \\\"xxoo\\\"}\"\r\n\r\n### Redis version\r\nnewest version\r\n\r\n### Redisson version\r\n3.11.4\r\n\r\n### Redisson configuration\r\nredis-spring-boot", "url": "https://github.com/redisson/redisson/issues/2345", "user": "Geek-S", "labels": ["bug"], "created": "2019-09-30 02:28:26", "closed": "2019-10-02 08:05:06", "commits": {"fc35fcd5b86638126d72259e4992150716d7e989": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "fc35fcd5b86638126d72259e4992150716d7e989", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["72afbe83d9a9658fc8675d1553a4707f25bfdfeb"], "nameRev": "fc35fcd5b86638126d72259e4992150716d7e989 tags/redisson-3.11.5~20", "commitMessage": "Fixed - Spring Data pubsub listeners executes multiple times. #2345\n", "commitDateTime": "2019-10-02 11:04:24", "authoredDateTime": "2019-10-02 11:04:24", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java", "insertions": 15, "deletions": 12, "lines": 27}, {"filePath": "redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java", "insertions": 15, "deletions": 12, "lines": 27}, {"filePath": "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java", "insertions": 15, "deletions": 12, "lines": 27}, {"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java", "insertions": 15, "deletions": 12, "lines": 27}, {"filePath": "redisson-spring-data/redisson-spring-data-20/src/test/java/org/redisson/spring/data/connection/RedissonSubscribeTest.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java", "insertions": 15, "deletions": 12, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSubscription.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscription.doSubscribe(byte[][])", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscription.doSubscribe(byte[][]).1.onMessage(java.lang.CharSequence,java.lang.Object)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscription.doSubscribe(byte[][]).1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonSubscribeTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscribeTest.testSubscribe().1", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscribeTest.testUnSubscribe().2", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscribeTest.testMultipleSubscribers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscribeTest.testSubscribe()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscribeTest.testUnSubscribe()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscribeTest.testSubscribe().4.onMessage(org.springframework.data.redis.connection.Message,byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fc35fcd5b86638126d72259e4992150716d7e989"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 75, "deletions": 60, "lines": 135, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 13, "UPD": 3, "INS": 2, "MOV": 6, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonSubscription.doSubscribe(byte[][]).1", "org.redisson.spring.data.connection.RedissonSubscription.doSubscribe(byte[][])", "org.redisson.spring.data.connection.RedissonSubscription.doSubscribe(byte[][]).1.onMessage(java.lang.CharSequence,java.lang.Object)"]}, {"title": "RBlockingQueue.take doesn't throw InterruptedException", "body": "", "url": "https://github.com/redisson/redisson/issues/2327", "user": "mrniko", "labels": ["bug"], "created": "2019-09-19 07:37:58", "closed": "2019-09-19 08:14:37", "commits": {"05920f51c649d65b223c867a7fa414edecb53395": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "05920f51c649d65b223c867a7fa414edecb53395", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["941ce121dc8d724c1aade63dc727457e73d73480"], "nameRev": "05920f51c649d65b223c867a7fa414edecb53395 tags/redisson-3.11.4~8", "commitMessage": "Fixed - queue blocking methods don't re-throw InterruptedException #2327\n", "commitDateTime": "2019-09-19 11:14:22", "authoredDateTime": "2019-09-19 11:14:22", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingDeque.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingQueue.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBoundedBlockingQueue.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/RedissonPriorityBlockingDeque.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/RedissonPriorityBlockingQueue.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncExecutor.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 14, "deletions": 21, "lines": 35}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 47, "deletions": 1, "lines": 48}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBlockingDeque.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingDeque.takeLastAndOfferFirstTo(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.takeFirst()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.takeLast()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollFirstFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollLastFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollFirst(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollLast(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueue.take()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.poll(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.pollFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.pollLastAndOfferFirstTo(java.lang.String,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBoundedBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.take()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.poll(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.pollFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.pollLastAndOfferFirstTo(java.lang.String,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonPriorityBlockingDeque.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPriorityBlockingDeque.takeLastAndOfferFirstTo(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingDeque.takeFirst()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingDeque.takeLast()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingDeque.pollFirstFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingDeque.pollLastFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingDeque.pollFirst(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingDeque.pollLast(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonPriorityBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPriorityBlockingQueue.take()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingQueue.poll(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingQueue.pollLastAndOfferFirstTo(java.lang.String,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPriorityBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.getInterrupted(org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.executeBatchedAsync(boolean,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.get(org.redisson.api.RFuture)", "TOT": 16, "UPD": 1, "INS": 1, "MOV": 13, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.getInterrupted(org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollReattach()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollFromAnyInCluster()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollFromAny()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTake()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTakeLastAndOfferFirstTo()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollLastAndOfferFirstTo()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testBlockingQueue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTakeInterrupted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollInterrupted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["05920f51c649d65b223c867a7fa414edecb53395"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 44, "deletions": 49, "lines": 93, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 47, "UPD": 30, "INS": 3, "MOV": 13, "DEL": 1, "spoonFilesChanged": 7, "spoonMethodsChanged": 32}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonPriorityBlockingDeque.pollLast(long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.executeBatchedAsync(boolean,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "org.redisson.RedissonPriorityBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "org.redisson.RedissonPriorityBlockingQueue.poll(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "org.redisson.RedissonPriorityBlockingDeque.takeLast()", "org.redisson.RedissonPriorityBlockingDeque.pollFirst(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonPriorityBlockingQueue.take()", "org.redisson.RedissonBoundedBlockingQueue.pollLastAndOfferFirstTo(java.lang.String,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingQueue.poll(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBoundedBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "org.redisson.command.CommandAsyncService.get(org.redisson.api.RFuture)", "org.redisson.command.getInterrupted(org.redisson.api.RFuture)", "org.redisson.RedissonBlockingQueue.pollFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonBlockingDeque.pollFirst(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBoundedBlockingQueue.pollFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.command.CommandAsyncService.getInterrupted(org.redisson.api.RFuture)", "org.redisson.RedissonPriorityBlockingDeque.pollFirstFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonBlockingDeque.pollLast(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingDeque.pollFirstFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonPriorityBlockingDeque.pollLastFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonPriorityBlockingDeque.takeFirst()", "org.redisson.RedissonPriorityBlockingDeque.takeLastAndOfferFirstTo(java.lang.String)", "org.redisson.RedissonPriorityBlockingQueue.pollLastAndOfferFirstTo(java.lang.String,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingDeque.takeLastAndOfferFirstTo(java.lang.String)", "org.redisson.RedissonBlockingQueue.take()", "org.redisson.RedissonBoundedBlockingQueue.take()", "org.redisson.RedissonBlockingDeque.pollLastFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonBlockingQueue.pollLastAndOfferFirstTo(java.lang.String,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingDeque.takeLast()", "org.redisson.RedissonBlockingDeque.takeFirst()", "org.redisson.RedissonBoundedBlockingQueue.poll(long,java.util.concurrent.TimeUnit)"]}, {"title": "cluster\u6a21\u5f0f\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u4f1a\u51fa\u73b0OutOfMemory", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\u957f\u65f6\u95f4\u8fd0\u884c\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\r\n\r\n### Actual behavior\r\n\u957f\u65f6\u95f4\u8fd0\u884c\uff0c\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\r\n\r\n### Steps to reproduce or test case\r\n1.\u4ecespring\u5b98\u7f51\u4e0a\u751f\u6210spring boot\u7684demo\u9879\u76ee\u3002\r\n2.\u5728pom.xml\u4e2d\u589e\u52a0\u5bf9redisson\u7684\u4f9d\u8d56\u3002\r\n```xml\r\n<dependency>\r\n\t<groupId>org.redisson</groupId>\r\n\t<artifactId>redisson</artifactId>\r\n\t<version>3.11.3</version>\r\n</dependency>\r\n```\r\n3.debug\u65b9\u5f0f\u542f\u52a8spring boot\u3002\r\n4.\u901a\u8fc7\u65ad\u70b9\u89c2\u5bdf\r\n![redisson-oom](https://user-images.githubusercontent.com/7113099/64514185-baeab600-d31c-11e9-94d4-47afc7818d4a.jpg)\r\n\r\n\u53ef\u4ee5\u770b\u5230redisson\u6240\u4f9d\u8d56\u7684netty\u91cc\uff0c\u8fd9\u4e2a\u6570\u7ec4\u7684\u7684\u5927\u5c0f\u4f1a\u4e0d\u65ad\u589e\u5927\uff0c\u6700\u7ec8\u5bfc\u81f4oom\u3002\r\n\r\n### Redis version\r\n```shell\r\nredis_version:5.0.4\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:913214bd6b0ee4ea\r\nredis_mode:cluster\r\nos:Linux 3.10.0-957.1.3.el7.x86_64 x86_64\r\narch_bits:64\r\nmultiplexing_api:epoll\r\natomicvar_api:atomic-builtin\r\n```\r\n\r\n### Redisson version\r\n3.11.3\r\n\r\n### Redisson configuration\r\n\u6211\u662f\u5728spring boot\u91cc\u901a\u8fc7\u4ee3\u7801\u7684\u65b9\u5f0f\u914d\u7f6e\u7684\u3002\r\n```java\r\n@SpringBootApplication\r\npublic class Test3Application {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Test3Application.class, args);\r\n    }\r\n\r\n    @Bean\r\n    public RedissonClient getRedisson() {\r\n        Config config = new Config();\r\n        config.useClusterServers()\r\n                .setScanInterval(2000) // cluster state scan interval in milliseconds\r\n                .addNodeAddress(\"redis://10.193.xxx.xxx:8303\");\r\n        RedissonClient redisson = Redisson.create(config);\r\n        return redisson;\r\n    }\r\n\r\n}\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/2309", "user": "songjiesdnu", "labels": ["bug"], "created": "2019-09-09 08:13:34", "closed": "2019-09-20 07:50:32", "commits": {"3a47ed40c0e088937c839111ee062861bc0d21ec": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "3a47ed40c0e088937c839111ee062861bc0d21ec", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cbfb32ee7b572eb9e300de0c4742e33c52b659c5"], "nameRev": "3a47ed40c0e088937c839111ee062861bc0d21ec tags/redisson-3.11.4~6", "commitMessage": "Fixed - memory leak caused by FastThreadLocal used in CodecDecoder. #2309\n", "commitDateTime": "2019-09-20 10:48:06", "authoredDateTime": "2019-09-20 10:48:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 12, "deletions": 18, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.Channel)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List,boolean,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean,java.util.List)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3a47ed40c0e088937c839111ee062861bc0d21ec"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 18, "lines": 30, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 15, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List,boolean,java.util.List)", "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean,java.util.List)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.client.handler.CommandDecoder", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)"]}, {"title": "ExecutorOptions.taskRetryInterval not working as expected", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nWhen submitting task with taskRetryInterval option set, the task should run on the next available Redisson executor node when the original executor node was killed. \r\n### Actual behavior\r\nThe task is not retried on the next available worker. Also when the worker node is started again it will run duplicate task on all the available worker nodes.\r\n### Steps to reproduce or test case\r\nSubmit JobA and then start 2 instance of the Worker lets say Worker1 and Worker2. When Worker1 is running JobA kill that worker, now the Worker2 should try to run the JobA after the taskRetryInterval, but it does not. Now start Worker1 again, Redisson will duplicate the task run on both Worker1 and Worker2.\r\n```\r\npublic class Schedule {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tRedissonClient client = Redisson.create();\r\n                ExecutorOptions option = ExecutorOptions.defaults();\r\n                option.taskRetryInterval(3000, TimeUnit.MILLISECONDS);\r\n\t\tRScheduledExecutorService executorService = client.getExecutorService(\"JobA\",option);\r\n                // submit JobA\r\n\t\tRExecutorFuture<?> future = executorService\r\n                .submit(new JobA());\r\n\t}\r\n\r\n}\r\n\r\n```\r\nJobA:\r\n```\r\npublic class JobA implements Runnable {\r\n\r\n\t@Override\r\n\tpublic void run() {\r\n                System.out.println(\"JOB A started!!!!!!!!!!\");\r\n\t\ttry {\r\n\t\t\tThread.sleep(10000);\r\n\t\t} catch (InterruptedException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tSystem.out.println(\"JOB A finished!!!!!!!!!!\");\r\n\t}\r\n\r\n}\r\n```\r\n\r\nWorker:\r\n```\r\npublic class Worker{\r\n\tpublic static void main(String[] args) {\r\n\t\tConfig config = new Config();\r\n\t\tconfig.useSingleServer().setAddress(\"redis://127.0.0.1:6379\");\r\n\t\tRedissonNodeConfig nodeConfig = new RedissonNodeConfig(config);\r\n\t\tnodeConfig.getExecutorServiceWorkers().put(\"JobA\", 1);\r\n\t\tRedissonNode node = RedissonNode.create(nodeConfig);\r\n\t\tnode.start();\r\n\t}\r\n\r\n}\r\n```\r\n\r\n\r\n### Redis version\r\nRedis 3.0.503\r\n### Redisson version\r\n3.9.1\r\n", "url": "https://github.com/redisson/redisson/issues/2308", "user": "miraj12", "labels": ["bug"], "created": "2019-09-06 23:49:12", "closed": "2019-09-12 09:33:28", "commits": {"7ac980b3f57dcba694938f11294cab6cb515fb05": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "7ac980b3f57dcba694938f11294cab6cb515fb05", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d4d66216ad1b6ce1e14b5a9c7824f68c954ddac6"], "nameRev": "7ac980b3f57dcba694938f11294cab6cb515fb05 tags/redisson-3.11.4~11", "commitMessage": "Fixed - ExecutorService tasks duplication after task retry event. #2308\n", "commitDateTime": "2019-09-12 12:35:07", "authoredDateTime": "2019-09-12 12:35:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 13, "deletions": 8, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.scheduleRetryTimeRenewal(java.lang.String)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.renewRetryTime(java.lang.String)", "TOT": 8, "UPD": 4, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.scheduleRetryTimeRenewal(java.lang.String,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ac980b3f57dcba694938f11294cab6cb515fb05"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 8, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 14, "UPD": 6, "INS": 4, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.executor.TasksRunnerService.scheduleRetryTimeRenewal(java.lang.String)", "org.redisson.executor.TasksRunnerService.scheduleRetryTimeRenewal(java.lang.String,long)", "org.redisson.executor.TasksRunnerService.renewRetryTime(java.lang.String)"]}, {"title": "thread blocked at closeNodeConnections", "body": "Hi,\r\n\r\nThe call to closeNodeConnection waits indefinitely on call to MasterSlaveConnectionManager.closeNodeConnections.\r\n\r\n**Section from thread dump:**\r\n```\r\n/service/soap\r\nTransaction type: Web\r\nTransaction name: /service/soap\r\nDuration: 818,433.1 milliseconds\r\nCPU time: 34.0 milliseconds\r\n\"qtp1957530885-64062\" #64062\r\n   java.lang.Thread.State: WAITING\r\n        at java.lang.Object.wait(Native Method)\r\n        - waiting on io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise@5dd96fe\r\n        at java.lang.Object.wait(Object.java:328)\r\n        at io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:254)\r\n        at io.netty.util.concurrent.DefaultPromise.syncUninterruptibly(DefaultPromise.java:340)\r\n        at org.redisson.misc.RedissonPromise.syncUninterruptibly(RedissonPromise.java:128)\r\n        at org.redisson.misc.RedissonPromise.syncUninterruptibly(RedissonPromise.java:35)\r\n        at org.redisson.connection.MasterSlaveConnectionManager.closeNodeConnections(MasterSlaveConnectionManager.java:234)\r\n        at org.redisson.cluster.ClusterConnectionManager.shutdown(ClusterConnectionManager.java:780)\r\n        at org.redisson.Redisson.shutdown(Redisson.java:670)\r\n        at com.zimbra.cs.mailbox.redis.RedissonRetryClient.restart(RedissonRetryClient.java:117)\r\n        - locked on com.zimbra.cs.mailbox.redis.RedissonRetryClient@58a8ea4c\r\n        at com.zimbra.cs.mailbox.redis.RedissonRetryDecorator.reconnect(RedissonRetryDecorator.java:64)\r\n        - locked on com.zimbra.cs.mailbox.redis.RedissonRetryScript@67d62c10\r\n        at com.zimbra.cs.mailbox.redis.RedissonRetryDecorator.access$000(RedissonRetryDecorator.java:15)\r\n        at com.zimbra.cs.mailbox.redis.RedissonRetryDecorator$1.run(RedissonRetryDecorator.java:35)\r\n        at com.zimbra.cs.util.RetryUtil$RequestWithRetry.execute(RetryUtil.java:26)\r\n        at com.zimbra.cs.mailbox.redis.RedissonRetryDecorator.runCommand(RedissonRetryDecorator.java:82)\r\n        at com.zimbra.cs.mailbox.redis.RedissonRetryScript.eval(RedissonRetryScript.java:171)\r\n        at com.zimbra.cs.mailbox.redis.RedisBackedLRUItemCache$LRUCacheTrimScript.trimCache(RedisBackedLRUItemCache.java:68)\r\n        at com.zimbra.cs.mailbox.TransactionAwareLRUItemCache$LRUCacheCachedObject.trimCache(TransactionAwareLRUItemCache.java:134)\r\n        at com.zimbra.cs.mailbox.TransactionAwareLRUItemCache.trimCache(TransactionAwareLRUItemCache.java:43)\r\n        at com.zimbra.cs.mailbox.cache.RedisItemCache.trim(RedisItemCache.java:132)\r\n        at com.zimbra.cs.mailbox.Mailbox.trimItemCache(Mailbox.java:9211)\r\n        at com.zimbra.cs.mailbox.Mailbox.commitCache(Mailbox.java:9095)\r\n        at com.zimbra.cs.mailbox.Mailbox.access$1900(Mailbox.java:295)\r\n        at com.zimbra.cs.mailbox.Mailbox$MailboxTransaction.close(Mailbox.java:10168)\r\n        at com.zimbra.cs.mailbox.MailboxIndex.search(MailboxIndex.java:604)\r\n        at com.zimbra.cs.index.DBQueryOperation.dbSearch(DBQueryOperation.java:669)\r\n        at com.zimbra.cs.index.DBQueryOperation.luceneFirstGetNextChunk(DBQueryOperation.java:798)\r\n        at com.zimbra.cs.index.DBQueryOperation.getNextChunk(DBQueryOperation.java:844)\r\n        at com.zimbra.cs.index.DBQueryOperation.peekNext(DBQueryOperation.java:526)\r\n        at com.zimbra.cs.index.QueryOperation.hasNext(QueryOperation.java:169)\r\n        at com.zimbra.cs.index.ItemPreloadingGrouper.bufferHits(ItemPreloadingGrouper.java:54)\r\n        at com.zimbra.cs.index.BufferingResultsGrouper.hasNext(BufferingResultsGrouper.java:68)\r\n        at com.zimbra.cs.index.ConvQueryResults.internalGetNextHit(ConvQueryResults.java:59)\r\n        at com.zimbra.cs.index.ConvQueryResults.bufferNextHit(ConvQueryResults.java:117)\r\n        at com.zimbra.cs.index.ConvQueryResults.peekNext(ConvQueryResults.java:124)\r\n        at com.zimbra.cs.index.ZimbraQueryResultsImpl.hasNext(ZimbraQueryResultsImpl.java:93)\r\n        at com.zimbra.cs.index.ItemPreloadingGrouper.bufferHits(ItemPreloadingGrouper.java:54)\r\n        at com.zimbra.cs.index.BufferingResultsGrouper.peekNext(BufferingResultsGrouper.java:73)\r\n        at com.zimbra.cs.index.FilteredQueryResults.peekNext(FilteredQueryResults.java:195)\r\n        at com.zimbra.cs.index.FilteredQueryResults.hasNext(FilteredQueryResults.java:145)\r\n        at com.zimbra.cs.index.ResultsPager.hasNext(ResultsPager.java:139)\r\n        at com.zimbra.cs.service.mail.Search.putHits(Search.java:202)\r\n        at com.zimbra.cs.service.mail.Search.handle(Search.java:127)\r\n        at com.zimbra.soap.SoapEngine.dispatchRequest(SoapEngine.java:664)\r\n        at com.zimbra.soap.SoapEngine.dispatch(SoapEngine.java:509)\r\n        at com.zimbra.soap.SoapEngine.dispatch(SoapEngine.java:296)\r\n        at com.zimbra.soap.SoapServlet.doWork(SoapServlet.java:308)\r\n        at com.zimbra.soap.SoapServlet.doPost(SoapServlet.java:217)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\r\n        at com.zimbra.cs.servlet.ZimbraServlet.service(ZimbraServlet.java:214)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)\r\n        at org.eclipse.jetty.websocket.server.WebSocketUpgradeFilter.doFilter(WebSocketUpgradeFilter.java:214)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at com.zimbra.cs.servlet.CsrfFilter.doFilter(CsrfFilter.java:175)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at com.zimbra.cs.servlet.RequestStringFilter.doFilter(RequestStringFilter.java:54)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at com.zimbra.cs.servlet.SetHeaderFilter.doFilter(SetHeaderFilter.java:59)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at com.zimbra.cs.servlet.ETagHeaderFilter.doFilter(ETagHeaderFilter.java:47)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at com.zimbra.cs.servlet.ContextPathBasedThreadPoolBalancerFilter.doFilter(ContextPathBasedThreadPoolBalancerFilter.java:107)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at com.zimbra.cs.servlet.ZimbraQoSFilter.doFilter(ZimbraQoSFilter.java:116)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at com.zimbra.cs.servlet.ZimbraInvalidLoginFilter.doFilter(ZimbraInvalidLoginFilter.java:117)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.eclipse.jetty.servlets.DoSFilter.doFilterChain(DoSFilter.java:482)\r\n        at org.eclipse.jetty.servlets.DoSFilter.doFilter(DoSFilter.java:327)\r\n        at org.eclipse.jetty.servlets.DoSFilter.doFilter(DoSFilter.java:297)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\r\n        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\r\n        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n        at org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:335)\r\n        at org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(GzipHandler.java:753)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:505)\r\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)\r\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)\r\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\r\n        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\r\n        at org.eclipse.jetty.io.ssl.SslConnection$DecryptedEndPoint.onFillable(SslConnection.java:427)\r\n        at org.eclipse.jetty.io.ssl.SslConnection.onFillable(SslConnection.java:321)\r\n        at org.eclipse.jetty.io.ssl.SslConnection$2.succeeded(SslConnection.java:159)\r\n        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\r\n        at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)\r\n        at java.lang.Thread.run(Thread.java:834)\r\n```\r\n**Expected behavior**\r\nMasterSlaveConnectionManager.closeNodeConnections should throw an timeout exception if the same is not able to complete within a configured timeout.\r\n\r\n**Actual behavior**\r\nThread hangs indefinitely at the request.\r\n\r\n**Redis version**\r\n5.0.5\r\n\r\n**Redisson version**\r\n3.10.7\r\n\r\n**Redisson configuration**\r\nnettyThreads=16\r\nmasterConnectionPoolSize=200\r\nmasterConnectionMinimumIdleSize=100\r\nsubscriptionConnectionPoolSize=200\r\nsubscriptionConnectionMinimumIdleSize=100\r\nsubscriptionsPerConnection=10\r\nconnectionTimeout=10000\r\nretryInterval=3000\r\nretryAttempts=10\r\nkeepAlive=true\r\ntcpNoDelay=true\r\nclusterScanInterval=2000\r\npingConnectionInterval=10000\r\n", "url": "https://github.com/redisson/redisson/issues/2306", "user": "thefoolwhocodes", "labels": ["bug"], "created": "2019-09-06 07:35:29", "closed": "2019-09-06 08:34:30", "commits": {"0487fd9c40976194680a1208eaaae45ddc9d657e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "941ce121dc8d724c1aade63dc727457e73d73480": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0487fd9c40976194680a1208eaaae45ddc9d657e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9e9fdfe8844f850098a66bc5200952c44f6410a9"], "nameRev": "0487fd9c40976194680a1208eaaae45ddc9d657e tags/redisson-3.11.4~19", "commitMessage": "Fixed - Redisson.shutdown blocks calling thread. #2306\n", "commitDateTime": "2019-09-06 11:36:07", "authoredDateTime": "2019-09-06 11:36:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisConnection.java", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient.shutdownAsync()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.close()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "941ce121dc8d724c1aade63dc727457e73d73480", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2f7b089a14cf83fedcc46171b82c8641e663aca7"], "nameRev": "941ce121dc8d724c1aade63dc727457e73d73480 tags/redisson-3.11.4~9", "commitMessage": "Fixed - Redisson.shutdown blocks calling thread. #2306\n", "commitDateTime": "2019-09-16 13:51:15", "authoredDateTime": "2019-09-16 13:51:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 47, "deletions": 35, "lines": 82}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient.shutdownAsync().2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 10, "UPD": 2, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisClient.shutdownAsync().2.operationComplete(io.netty.util.concurrent.Future).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.shutdownAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisClient.getTimer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.shutdown(org.redisson.misc.RPromise)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0487fd9c40976194680a1208eaaae45ddc9d657e"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 11, "lines": 20, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisConnection.close()", "org.redisson.client.RedisClient.shutdownAsync()"]}, {"title": "threads blocked waiting on CountDownLatch", "body": "Hello,\r\n\r\nWe are facing an an issue where some threads get blocked indefinitely waiting on the CountDownLatch in `CommandAsyncService.get()`. Relevant section of the thread dump:\r\n```\r\n- waiting on java.util.concurrent.CountDownLatch$Sync@1f2311a9\r\nat java.util.concurrent.locks.LockSupport.park(LockSupport.java: at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:\r\nat java.util.concurrent.CountDownLatch.await(CountDownLatch.java:232)\r\nat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:186)\r\n...\r\n```\r\nThe reason for why the requests aren't able to complete isn't relevant here (we are deploying redis in kubernetes, and are working through various upgrade/failure scenarios that currently can result in severed connections). However, it's strange to me that the `CommandAsyncService.get()` method doesn't respect timeout configuration, and simply calls `l.await()`.\r\nIs there any way around this? Please let me know if I am misunderstanding the situation.\r\n\r\n### Expected behavior\r\n`CommandAsyncService.get()` should throw an exception if the future is unable to complete within a timeout.\r\n\r\n### Actual behavior\r\nMany threads are hanging indefinitely in the `CommandAsyncService.get()` method.\r\n\r\n### Redis version\r\n5.0.5\r\n\r\n### Redisson version\r\n3.10.7\r\n\r\n### Redisson configuration\r\nnettyThreads=16\r\nmasterConnectionPoolSize=200\r\nmasterConnectionMinimumIdleSize=100\r\nsubscriptionConnectionPoolSize=200\r\nsubscriptionConnectionMinimumIdleSize=100\r\nsubscriptionsPerConnection=10\r\nconnectionTimeout=10000\r\nretryInterval=3000\r\nretryAttempts=10\r\nkeepAlive=true\r\ntcpNoDelay=true\r\nclusterScanInterval=2000\r\npingConnectionInterval=10000", "url": "https://github.com/redisson/redisson/issues/2304", "user": "ilyusha", "labels": ["bug"], "created": "2019-09-05 18:23:18", "closed": "2019-09-23 10:41:24", "commits": {"d9793a669aaf9a5a97f9ab8c6b362882fa9e75b1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "d9793a669aaf9a5a97f9ab8c6b362882fa9e75b1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["dc5b372c91ec84a39d1911a7c14917e8da841652"], "nameRev": "d9793a669aaf9a5a97f9ab8c6b362882fa9e75b1 tags/redisson-3.11.4~3", "commitMessage": "Fixed - threads blocked waiting on CountDownLatch #2304\n", "commitDateTime": "2019-09-23 13:40:08", "authoredDateTime": "2019-09-23 13:40:08", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisConnection.java", "insertions": 7, "deletions": 11, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1.run()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d9793a669aaf9a5a97f9ab8c6b362882fa9e75b1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 11, "lines": 18, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).2", "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1.run()"]}, {"title": "Redisson netty thread consumes ~100% CPU with RedisTimeoutException", "body": "Hi, \r\n\r\n**The issue being faced is that redisson netty thread consumes ~100% CPU and when a redis operation is performed we get RedisTimeoutException.**\r\n\r\nIn the current set up, \r\n3 redis sentinels and 3 redis servers\r\n2 pods with our application that uses redisson client.\r\n\r\nOut of the 2 pods only one pod seems to have this issue.\r\nThe pattern of the issue is that it runs with .1% CPU utilisation for few days and,\r\nsuddenly there is increase in CPU usage which hits 100%. Once it reached 100% all redis operation fail with RedisTimeoutException.\r\nThe CPU utilisation drops down back to .1% if the pod is restarted and the issue doesnt appear for few days.\r\nIf the pod is not restarted CPU utilisation continues to be at 100% throughout.\r\n\r\n**This is happening irrespective of the load even for as low as 1 request per minute.**\r\n\r\nThe exception being faced post high CPU usage is \r\n**org.redisson.client.RedisTimeoutException:** Unable to send command! Try to increase 'nettyThreads' and/or connection pool size settings Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=31, freeConnectionsCounter=value:63:queue:0, freezed=false, freezeReason=null, client=[addr=redis://X.X.X.X:6379], nodeType=MASTER, firstFail=0]]], connection: RedisConnection@391497724 [redisClient=[addr=redis://X.X.X.X:6379], channel=[id: 0x9a7e9a0c, L:/X.X.X.X:52226 - R:X.X.X.X/X.X.X.X:6379], command=null], current command in queue: null, command: (GET), params: [YYYYYY] after 3 retry attempts\r\n\tat org.redisson.command.CommandAsyncService$6.run(CommandAsyncService.java:715)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:682)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:757)\r\n\tat io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:485)\r\n\tat java.lang.Thread.run(Thread.java:745) \r\n\r\nOn analysing the top threads for CPU utilisation for pid \r\n\r\n> **top -H -p <pid>** \r\n\r\nPID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND\r\n**78 root 20 0 26.439g 1.730g 28888 R 99.3 2.8 11392:52 java**\r\n102 root 20 0 26.439g 1.730g 28888 S 0.7 2.8 74:22.42 java\r\n509 root 20 0 26.439g 1.730g 28888 S 0.7 2.8 116:44.13 java\r\n7 root 20 0 26.439g 1.730g 28888 S 0.0 2.8 0:00.00 java\r\n8 root 20 0 26.439g 1.730g 28888 S 0.0 2.8 0:07.37 java\r\n\r\npid 78 corresponds to hex 4E\r\nAnalysing thread dump for the process we have : \r\n\r\nThe thread 78 with high CPU usage corresponds to one of redisson-netty threads.\r\n**\"redisson-netty-2-26\" #59 prio=5 os_prio=0 tid=0x00007fe515245000 nid=0x4e runnable [0x00007fe4c19f6000]\r\njava.lang.Thread.State: RUNNABLE**\r\nat io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue.peek(BaseMpscLinkedArrayQueue.java:381)\r\nat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:104)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\nat io.netty.channel.AbstractChannelHandlerContext.access$1700(AbstractChannelHandlerContext.java:38)\r\nat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1127)\r\nat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1174)\r\nat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1098)\r\nat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\r\n### Expected behavior\r\nRedisson netty threads should not consumer 100% CPU, even if it does should release it eventually.\r\nAnd we should not be having RedisTimeoutException.\r\n\r\n### Actual behavior\r\n100% CPU utilisation followed by  RedisTimeoutException\r\n\r\n### Steps to reproduce or test case\r\nRandom\r\n\r\n### Redis version\r\n4.0.8\r\n\r\n### Redisson version\r\n3.10.7\r\n\r\n### Redisson configuration\r\n\r\nconfig.setNettyThreads(0) //16 core machine so 32 netty threads\r\n        .setDecodeInExecutor(true)\r\n        .useSentinelServers()\r\n        .setMasterName(\"master\")\r\n        .addSentinelAddress(<Address>)\r\n        .setReadMode(\"MASTER\")\r\n        .setMasterConnectionMinimumIdleSize(32)\r\n        .setMasterConnectionPoolSize(128)\r\n        .setIdleConnectionTimeout(10000)\r\n        .setConnectTimeout(20000)\r\n        .setTimeout(10000)\r\n        .setRetryAttempts(3)\r\n        .setRetryInterval(1500)\r\n", "url": "https://github.com/redisson/redisson/issues/2299", "user": "suhaspb", "labels": ["bug"], "created": "2019-09-04 13:54:12", "closed": "2019-09-29 18:04:45", "commits": {"3dcb6369c7febb8e49189a32e20acd19edba2317": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "3dcb6369c7febb8e49189a32e20acd19edba2317", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["16b28b7a7fdbb5067c1941a3c7c4f6f6ae4d1b95"], "nameRev": "3dcb6369c7febb8e49189a32e20acd19edba2317 tags/redisson-3.11.5~23", "commitMessage": "Fixed - CommandsQueue handler consumes 100% of CPU resources. #2299\n", "commitDateTime": "2019-09-29 21:03:59", "authoredDateTime": "2019-09-29 21:03:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandsQueue.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandsQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandsQueue", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3dcb6369c7febb8e49189a32e20acd19edba2317"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandsQueue"]}, {"title": "Spring boot 2.1.7 failed to startup with redisson-spring-boot-starter 3.11.3", "body": "# Expected behavior\r\nSpring boot starts successfully and works normally\r\n### Actual behavior\r\nD:\\jdk8\\bin\\java.exe -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:63319,suspend=y,server=n -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true -javaagent:D:\\ij\\plugins\\java\\lib\\rt\\debugger-agent.jar -Dfile.encoding=UTF-8 -classpath D:\\jdk8\\jre\\lib\\charsets.jar;D:\\jdk8\\jre\\lib\\deploy.jar;D:\\jdk8\\jre\\lib\\ext\\access-bridge-64.jar;D:\\jdk8\\jre\\lib\\ext\\cldrdata.jar;D:\\jdk8\\jre\\lib\\ext\\dnsns.jar;D:\\jdk8\\jre\\lib\\ext\\jaccess.jar;D:\\jdk8\\jre\\lib\\ext\\jfxrt.jar;D:\\jdk8\\jre\\lib\\ext\\localedata.jar;D:\\jdk8\\jre\\lib\\ext\\nashorn.jar;D:\\jdk8\\jre\\lib\\ext\\sunec.jar;D:\\jdk8\\jre\\lib\\ext\\sunjce_provider.jar;D:\\jdk8\\jre\\lib\\ext\\sunmscapi.jar;D:\\jdk8\\jre\\lib\\ext\\sunpkcs11.jar;D:\\jdk8\\jre\\lib\\ext\\zipfs.jar;D:\\jdk8\\jre\\lib\\javaws.jar;D:\\jdk8\\jre\\lib\\jce.jar;D:\\jdk8\\jre\\lib\\jfr.jar;D:\\jdk8\\jre\\lib\\jfxswt.jar;D:\\jdk8\\jre\\lib\\jsse.jar;D:\\jdk8\\jre\\lib\\management-agent.jar;D:\\jdk8\\jre\\lib\\plugin.jar;D:\\jdk8\\jre\\lib\\resources.jar;D:\\jdk8\\jre\\lib\\rt.jar;E:\\ij\\demo\\target\\classes;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-starter\\2.1.7.RELEASE\\spring-boot-starter-2.1.7.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot\\2.1.7.RELEASE\\spring-boot-2.1.7.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-context\\5.1.9.RELEASE\\spring-context-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.1.7.RELEASE\\spring-boot-autoconfigure-2.1.7.RELEASE.jar;D:\\mvnrepo\\javax\\annotation\\javax.annotation-api\\1.3.2\\javax.annotation-api-1.3.2.jar;D:\\mvnrepo\\org\\springframework\\spring-core\\5.1.9.RELEASE\\spring-core-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-jcl\\5.1.9.RELEASE\\spring-jcl-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\yaml\\snakeyaml\\1.23\\snakeyaml-1.23.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-starter-log4j2\\2.1.7.RELEASE\\spring-boot-starter-log4j2-2.1.7.RELEASE.jar;D:\\mvnrepo\\org\\apache\\logging\\log4j\\log4j-slf4j-impl\\2.11.2\\log4j-slf4j-impl-2.11.2.jar;D:\\mvnrepo\\org\\apache\\logging\\log4j\\log4j-api\\2.11.2\\log4j-api-2.11.2.jar;D:\\mvnrepo\\org\\apache\\logging\\log4j\\log4j-core\\2.11.2\\log4j-core-2.11.2.jar;D:\\mvnrepo\\org\\apache\\logging\\log4j\\log4j-jul\\2.11.2\\log4j-jul-2.11.2.jar;D:\\mvnrepo\\org\\slf4j\\jul-to-slf4j\\1.7.26\\jul-to-slf4j-1.7.26.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-starter-web\\2.1.7.RELEASE\\spring-boot-starter-web-2.1.7.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-starter-json\\2.1.7.RELEASE\\spring-boot-starter-json-2.1.7.RELEASE.jar;D:\\mvnrepo\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.9.9\\jackson-databind-2.9.9.jar;D:\\mvnrepo\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jdk8\\2.9.9\\jackson-datatype-jdk8-2.9.9.jar;D:\\mvnrepo\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jsr310\\2.9.9\\jackson-datatype-jsr310-2.9.9.jar;D:\\mvnrepo\\com\\fasterxml\\jackson\\module\\jackson-module-parameter-names\\2.9.9\\jackson-module-parameter-names-2.9.9.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-starter-tomcat\\2.1.7.RELEASE\\spring-boot-starter-tomcat-2.1.7.RELEASE.jar;D:\\mvnrepo\\org\\apache\\tomcat\\embed\\tomcat-embed-core\\9.0.22\\tomcat-embed-core-9.0.22.jar;D:\\mvnrepo\\org\\apache\\tomcat\\embed\\tomcat-embed-el\\9.0.22\\tomcat-embed-el-9.0.22.jar;D:\\mvnrepo\\org\\apache\\tomcat\\embed\\tomcat-embed-websocket\\9.0.22\\tomcat-embed-websocket-9.0.22.jar;D:\\mvnrepo\\org\\hibernate\\validator\\hibernate-validator\\6.0.17.Final\\hibernate-validator-6.0.17.Final.jar;D:\\mvnrepo\\javax\\validation\\validation-api\\2.0.1.Final\\validation-api-2.0.1.Final.jar;D:\\mvnrepo\\org\\jboss\\logging\\jboss-logging\\3.3.2.Final\\jboss-logging-3.3.2.Final.jar;D:\\mvnrepo\\org\\springframework\\spring-web\\5.1.9.RELEASE\\spring-web-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-beans\\5.1.9.RELEASE\\spring-beans-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-webmvc\\5.1.9.RELEASE\\spring-webmvc-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-aop\\5.1.9.RELEASE\\spring-aop-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-expression\\5.1.9.RELEASE\\spring-expression-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-starter-data-redis\\2.1.7.RELEASE\\spring-boot-starter-data-redis-2.1.7.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\data\\spring-data-redis\\2.1.10.RELEASE\\spring-data-redis-2.1.10.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\data\\spring-data-keyvalue\\2.1.10.RELEASE\\spring-data-keyvalue-2.1.10.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\data\\spring-data-commons\\2.1.10.RELEASE\\spring-data-commons-2.1.10.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-tx\\5.1.9.RELEASE\\spring-tx-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-oxm\\5.1.9.RELEASE\\spring-oxm-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\spring-context-support\\5.1.9.RELEASE\\spring-context-support-5.1.9.RELEASE.jar;D:\\mvnrepo\\io\\lettuce\\lettuce-core\\5.1.8.RELEASE\\lettuce-core-5.1.8.RELEASE.jar;D:\\mvnrepo\\io\\netty\\netty-common\\4.1.38.Final\\netty-common-4.1.38.Final.jar;D:\\mvnrepo\\io\\netty\\netty-handler\\4.1.38.Final\\netty-handler-4.1.38.Final.jar;D:\\mvnrepo\\io\\netty\\netty-transport\\4.1.38.Final\\netty-transport-4.1.38.Final.jar;D:\\mvnrepo\\io\\netty\\netty-resolver\\4.1.38.Final\\netty-resolver-4.1.38.Final.jar;D:\\mvnrepo\\io\\projectreactor\\reactor-core\\3.2.11.RELEASE\\reactor-core-3.2.11.RELEASE.jar;D:\\mvnrepo\\org\\reactivestreams\\reactive-streams\\1.0.2\\reactive-streams-1.0.2.jar;D:\\mvnrepo\\org\\redisson\\redisson-spring-boot-starter\\3.11.3\\redisson-spring-boot-starter-3.11.3.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-starter-actuator\\2.1.7.RELEASE\\spring-boot-starter-actuator-2.1.7.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-actuator-autoconfigure\\2.1.7.RELEASE\\spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-actuator\\2.1.7.RELEASE\\spring-boot-actuator-2.1.7.RELEASE.jar;D:\\mvnrepo\\io\\micrometer\\micrometer-core\\1.1.5\\micrometer-core-1.1.5.jar;D:\\mvnrepo\\org\\hdrhistogram\\HdrHistogram\\2.1.9\\HdrHistogram-2.1.9.jar;D:\\mvnrepo\\org\\latencyutils\\LatencyUtils\\2.0.3\\LatencyUtils-2.0.3.jar;D:\\mvnrepo\\org\\redisson\\redisson\\3.11.3\\redisson-3.11.3.jar;D:\\mvnrepo\\io\\netty\\netty-codec\\4.1.38.Final\\netty-codec-4.1.38.Final.jar;D:\\mvnrepo\\io\\netty\\netty-buffer\\4.1.38.Final\\netty-buffer-4.1.38.Final.jar;D:\\mvnrepo\\io\\netty\\netty-resolver-dns\\4.1.38.Final\\netty-resolver-dns-4.1.38.Final.jar;D:\\mvnrepo\\io\\netty\\netty-codec-dns\\4.1.38.Final\\netty-codec-dns-4.1.38.Final.jar;D:\\mvnrepo\\javax\\cache\\cache-api\\1.1.1\\cache-api-1.1.1.jar;D:\\mvnrepo\\io\\reactivex\\rxjava2\\rxjava\\2.2.11\\rxjava-2.2.11.jar;D:\\mvnrepo\\de\\ruedigermoeller\\fst\\2.57\\fst-2.57.jar;D:\\mvnrepo\\org\\javassist\\javassist\\3.21.0-GA\\javassist-3.21.0-GA.jar;D:\\mvnrepo\\com\\fasterxml\\jackson\\dataformat\\jackson-dataformat-yaml\\2.9.9\\jackson-dataformat-yaml-2.9.9.jar;D:\\mvnrepo\\com\\fasterxml\\jackson\\core\\jackson-core\\2.9.9\\jackson-core-2.9.9.jar;D:\\mvnrepo\\net\\bytebuddy\\byte-buddy\\1.9.16\\byte-buddy-1.9.16.jar;D:\\mvnrepo\\org\\jodd\\jodd-bean\\5.0.13\\jodd-bean-5.0.13.jar;D:\\mvnrepo\\org\\jodd\\jodd-core\\5.0.13\\jodd-core-5.0.13.jar;D:\\mvnrepo\\org\\redisson\\redisson-spring-data-21\\3.11.3\\redisson-spring-data-21-3.11.3.jar;D:\\mvnrepo\\mysql\\mysql-connector-java\\8.0.17\\mysql-connector-java-8.0.17.jar;D:\\mvnrepo\\org\\projectlombok\\lombok\\1.18.8\\lombok-1.18.8.jar;D:\\mvnrepo\\org\\objenesis\\objenesis\\2.6\\objenesis-2.6.jar;D:\\mvnrepo\\org\\hamcrest\\hamcrest-core\\1.3\\hamcrest-core-1.3.jar;D:\\mvnrepo\\junit\\junit\\4.12\\junit-4.12.jar;D:\\mvnrepo\\org\\mybatis\\spring\\boot\\mybatis-spring-boot-starter\\2.0.0\\mybatis-spring-boot-starter-2.0.0.jar;D:\\mvnrepo\\org\\springframework\\boot\\spring-boot-starter-jdbc\\2.1.7.RELEASE\\spring-boot-starter-jdbc-2.1.7.RELEASE.jar;D:\\mvnrepo\\com\\zaxxer\\HikariCP\\3.2.0\\HikariCP-3.2.0.jar;D:\\mvnrepo\\org\\springframework\\spring-jdbc\\5.1.9.RELEASE\\spring-jdbc-5.1.9.RELEASE.jar;D:\\mvnrepo\\org\\mybatis\\spring\\boot\\mybatis-spring-boot-autoconfigure\\2.0.0\\mybatis-spring-boot-autoconfigure-2.0.0.jar;D:\\mvnrepo\\org\\mybatis\\mybatis\\3.5.0\\mybatis-3.5.0.jar;D:\\mvnrepo\\org\\mybatis\\mybatis-spring\\2.0.0\\mybatis-spring-2.0.0.jar;D:\\mvnrepo\\com\\github\\pagehelper\\pagehelper-spring-boot-starter\\1.2.10\\pagehelper-spring-boot-starter-1.2.10.jar;D:\\mvnrepo\\com\\github\\pagehelper\\pagehelper-spring-boot-autoconfigure\\1.2.10\\pagehelper-spring-boot-autoconfigure-1.2.10.jar;D:\\mvnrepo\\com\\github\\pagehelper\\pagehelper\\5.1.8\\pagehelper-5.1.8.jar;D:\\mvnrepo\\com\\github\\jsqlparser\\jsqlparser\\1.2\\jsqlparser-1.2.jar;D:\\mvnrepo\\io\\swagger\\swagger-models\\1.5.22\\swagger-models-1.5.22.jar;D:\\mvnrepo\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.9.0\\jackson-annotations-2.9.0.jar;D:\\mvnrepo\\org\\slf4j\\slf4j-api\\1.7.26\\slf4j-api-1.7.26.jar;D:\\mvnrepo\\io\\swagger\\swagger-annotations\\1.5.22\\swagger-annotations-1.5.22.jar;D:\\mvnrepo\\io\\springfox\\springfox-swagger2\\2.9.2\\springfox-swagger2-2.9.2.jar;D:\\mvnrepo\\io\\springfox\\springfox-spi\\2.9.2\\springfox-spi-2.9.2.jar;D:\\mvnrepo\\io\\springfox\\springfox-core\\2.9.2\\springfox-core-2.9.2.jar;D:\\mvnrepo\\io\\springfox\\springfox-schema\\2.9.2\\springfox-schema-2.9.2.jar;D:\\mvnrepo\\io\\springfox\\springfox-swagger-common\\2.9.2\\springfox-swagger-common-2.9.2.jar;D:\\mvnrepo\\io\\springfox\\springfox-spring-web\\2.9.2\\springfox-spring-web-2.9.2.jar;D:\\mvnrepo\\com\\google\\guava\\guava\\20.0\\guava-20.0.jar;D:\\mvnrepo\\com\\fasterxml\\classmate\\1.4.0\\classmate-1.4.0.jar;D:\\mvnrepo\\org\\springframework\\plugin\\spring-plugin-core\\1.2.0.RELEASE\\spring-plugin-core-1.2.0.RELEASE.jar;D:\\mvnrepo\\org\\springframework\\plugin\\spring-plugin-metadata\\1.2.0.RELEASE\\spring-plugin-metadata-1.2.0.RELEASE.jar;D:\\mvnrepo\\org\\mapstruct\\mapstruct\\1.2.0.Final\\mapstruct-1.2.0.Final.jar;D:\\mvnrepo\\io\\springfox\\springfox-swagger-ui\\2.9.2\\springfox-swagger-ui-2.9.2.jar;D:\\mvnrepo\\io\\springfox\\springfox-bean-validators\\2.9.2\\springfox-bean-validators-2.9.2.jar;D:\\ij\\lib\\idea_rt.jar org.exam.demo.DemoApplication\r\nConnected to the target VM, address: '127.0.0.1:63319', transport: 'socket'\r\n\r\n  .   ____          _            __ _ _\r\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\r\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\r\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\r\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\r\n =========|_|==============|___/=/_/_/_/\r\n :: Spring Boot ::        (v2.1.7.RELEASE)\r\n\r\n[19-09-01 08:01:55:945][INFO]-org.exam.demo.DemoApplication:50 - Starting DemoApplication on DESKTOP-TRFDKBG with PID 18344 (E:\\ij\\demo\\target\\classes started by xin in E:\\ij\\demo)\r\n[19-09-01 08:01:55:950][INFO]-org.exam.demo.DemoApplication:647 - No active profile set, falling back to default profiles: default\r\n[19-09-01 08:01:56:806][INFO]-org.springframework.data.repository.config.RepositoryConfigurationDelegate:244 - Multiple Spring Data modules found, entering strict repository configuration mode!\r\n[19-09-01 08:01:56:809][INFO]-org.springframework.data.repository.config.RepositoryConfigurationDelegate:126 - Bootstrapping Spring Data repositories in DEFAULT mode.\r\n[19-09-01 08:01:56:833][INFO]-org.springframework.data.repository.config.RepositoryConfigurationDelegate:182 - Finished Spring Data repository scanning in 13ms. Found 0 repository interfaces.\r\n[19-09-01 08:01:57:136][INFO]-org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$da5db3bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\r\n[19-09-01 08:01:57:526][INFO]-org.springframework.boot.web.embedded.tomcat.TomcatWebServer:90 - Tomcat initialized with port(s): 8080 (http)\r\n[19-09-01 08:01:57:545][INFO]-org.apache.coyote.http11.Http11NioProtocol:173 - Initializing ProtocolHandler [\"http-nio-8080\"]\r\n[19-09-01 08:01:57:559][INFO]-org.apache.catalina.core.StandardService:173 - Starting service [Tomcat]\r\n[19-09-01 08:01:57:560][INFO]-org.apache.catalina.core.StandardEngine:173 - Starting Servlet engine: [Apache Tomcat/9.0.22]\r\n[19-09-01 08:01:57:658][INFO]-org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:173 - Initializing Spring embedded WebApplicationContext\r\n[19-09-01 08:01:57:658][INFO]-org.springframework.web.context.ContextLoader:284 - Root WebApplicationContext: initialization completed in 1675 ms\r\n[19-09-01 08:01:58:075][INFO]-org.redisson.Version:41 - Redisson 3.11.3\r\n[19-09-01 08:01:58:936][INFO]-org.redisson.connection.SentinelConnectionManager:158 - master: redis://192.168.1.144:6379 added\r\n[19-09-01 08:01:58:939][INFO]-org.redisson.connection.SentinelConnectionManager:174 - slave: redis://192.168.1.144:6380 added\r\n[19-09-01 08:01:58:947][INFO]-org.redisson.connection.SentinelConnectionManager:547 - sentinel: redis://192.168.1.144:5001 added\r\n[19-09-01 08:01:58:947][INFO]-org.redisson.connection.SentinelConnectionManager:547 - sentinel: redis://192.168.1.144:5002 added\r\n[19-09-01 08:01:58:948][INFO]-org.redisson.connection.SentinelConnectionManager:547 - sentinel: redis://192.168.1.144:5000 added\r\n[19-09-01 08:02:00:979][ERROR]-org.springframework.boot.web.embedded.tomcat.TomcatStarter:61 - Error starting Tomcat context. Exception: org.springframework.beans.factory.BeanCreationException. Message: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthIndicatorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthIndicatorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthIndicatorRegistry]: Factory method 'healthIndicatorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.redis.RedisReactiveHealthIndicatorAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonConnectionFactory' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Unsatisfied dependency expressed through method 'redissonConnectionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n[19-09-01 08:02:01:017][INFO]-org.apache.catalina.core.StandardService:173 - Stopping service [Tomcat]\r\n[19-09-01 08:02:01:021][WARN]-org.apache.catalina.loader.WebappClassLoaderBase:173 - The web application [ROOT] appears to have started a thread named [Thread-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n sun.net.dns.ResolverConfigurationImpl.notifyAddrChange0(Native Method)\r\n sun.net.dns.ResolverConfigurationImpl$AddressChangeListener.run(ResolverConfigurationImpl.java:144)\r\n[19-09-01 08:02:01:024][WARN]-org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:557 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat\r\n[19-09-01 08:02:01:040][INFO]-org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:136 - \r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.\r\n[19-09-01 08:02:01:046][ERROR]-org.springframework.boot.SpringApplication:822 - Application run failed\r\norg.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:156) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:743) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:390) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:312) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1214) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1203) [spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.exam.demo.DemoApplication.main(DemoApplication.java:12) [classes/:?]\r\nCaused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:124) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'servletEndpointRegistrar' defined in class path resource [org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthIndicatorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthIndicatorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthIndicatorRegistry]: Factory method 'healthIndicatorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.redis.RedisReactiveHealthIndicatorAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonConnectionFactory' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Unsatisfied dependency expressed through method 'redissonConnectionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar]: Factory method 'servletEndpointRegistrar' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthIndicatorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthIndicatorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthIndicatorRegistry]: Factory method 'healthIndicatorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.redis.RedisReactiveHealthIndicatorAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonConnectionFactory' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Unsatisfied dependency expressed through method 'redissonConnectionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'healthEndpoint' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class]: Unsatisfied dependency expressed through method 'healthEndpoint' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthIndicatorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthIndicatorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthIndicatorRegistry]: Factory method 'healthIndicatorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.redis.RedisReactiveHealthIndicatorAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonConnectionFactory' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Unsatisfied dependency expressed through method 'redissonConnectionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:141) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:131) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:120) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:114) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:72) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.CGLIB$servletEndpointRegistrar$0(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96$$FastClassBySpringCGLIB$$6a7ca482.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.servletEndpointRegistrar(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'healthIndicatorRegistry' defined in class path resource [org/springframework/boot/actuate/autoconfigure/health/HealthIndicatorAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthIndicatorRegistry]: Factory method 'healthIndicatorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.redis.RedisReactiveHealthIndicatorAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonConnectionFactory' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Unsatisfied dependency expressed through method 'redissonConnectionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:141) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:131) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:120) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:114) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:72) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.CGLIB$servletEndpointRegistrar$0(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96$$FastClassBySpringCGLIB$$6a7ca482.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.servletEndpointRegistrar(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.boot.actuate.health.HealthIndicatorRegistry]: Factory method 'healthIndicatorRegistry' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.redis.RedisReactiveHealthIndicatorAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonConnectionFactory' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Unsatisfied dependency expressed through method 'redissonConnectionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:141) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:131) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:120) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:114) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:72) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.CGLIB$servletEndpointRegistrar$0(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96$$FastClassBySpringCGLIB$$6a7ca482.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.servletEndpointRegistrar(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.redis.RedisReactiveHealthIndicatorAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonConnectionFactory' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Unsatisfied dependency expressed through method 'redissonConnectionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1341) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:606) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:594) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1226) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans$ReactiveHealthIndicators.get(HealthIndicatorRegistryBeans.java:54) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans.get(HealthIndicatorRegistryBeans.java:44) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration.healthIndicatorRegistry(HealthIndicatorAutoConfiguration.java:77) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.CGLIB$healthIndicatorRegistry$2(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b$$FastClassBySpringCGLIB$$883683bc.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.healthIndicatorRegistry(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:141) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:131) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:120) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:114) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:72) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.CGLIB$servletEndpointRegistrar$0(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96$$FastClassBySpringCGLIB$$6a7ca482.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.servletEndpointRegistrar(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonConnectionFactory' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Unsatisfied dependency expressed through method 'redissonConnectionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1467) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1431) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1350) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1209) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1341) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:606) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:594) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1226) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans$ReactiveHealthIndicators.get(HealthIndicatorRegistryBeans.java:54) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans.get(HealthIndicatorRegistryBeans.java:44) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration.healthIndicatorRegistry(HealthIndicatorAutoConfiguration.java:77) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.CGLIB$healthIndicatorRegistry$2(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b$$FastClassBySpringCGLIB$$883683bc.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.healthIndicatorRegistry(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:141) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:131) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:120) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:114) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:72) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.CGLIB$servletEndpointRegistrar$0(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96$$FastClassBySpringCGLIB$$6a7ca482.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.servletEndpointRegistrar(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisson' defined in class path resource [org/redisson/spring/starter/RedissonAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1467) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1431) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1350) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1209) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1341) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:606) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:594) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1226) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans$ReactiveHealthIndicators.get(HealthIndicatorRegistryBeans.java:54) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans.get(HealthIndicatorRegistryBeans.java:44) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration.healthIndicatorRegistry(HealthIndicatorAutoConfiguration.java:77) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.CGLIB$healthIndicatorRegistry$2(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b$$FastClassBySpringCGLIB$$883683bc.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.healthIndicatorRegistry(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:141) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:131) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:120) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:114) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:72) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.CGLIB$servletEndpointRegistrar$0(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96$$FastClassBySpringCGLIB$$6a7ca482.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.servletEndpointRegistrar(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redisson' threw exception; nested exception is org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1467) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1431) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1350) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1209) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1341) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:606) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:594) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1226) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans$ReactiveHealthIndicators.get(HealthIndicatorRegistryBeans.java:54) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans.get(HealthIndicatorRegistryBeans.java:44) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration.healthIndicatorRegistry(HealthIndicatorAutoConfiguration.java:77) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.CGLIB$healthIndicatorRegistry$2(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b$$FastClassBySpringCGLIB$$883683bc.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.healthIndicatorRegistry(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:141) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:131) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:120) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:114) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:72) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.CGLIB$servletEndpointRegistrar$0(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96$$FastClassBySpringCGLIB$$6a7ca482.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.servletEndpointRegistrar(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nCaused by: org.redisson.client.RedisConnectionException: At least two sentinels should be defined in Redis configuration! SENTINEL SENTINELS command returns empty result!\r\n\tat org.redisson.connection.SentinelConnectionManager.<init>(SentinelConnectionManager.java:216) ~[redisson-3.11.3.jar:3.11.3]\r\n\tat org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:197) ~[redisson-3.11.3.jar:3.11.3]\r\n\tat org.redisson.Redisson.<init>(Redisson.java:120) ~[redisson-3.11.3.jar:3.11.3]\r\n\tat org.redisson.Redisson.create(Redisson.java:160) ~[redisson-3.11.3.jar:3.11.3]\r\n\tat org.redisson.spring.starter.RedissonAutoConfiguration.redisson(RedissonAutoConfiguration.java:164) ~[redisson-spring-boot-starter-3.11.3.jar:3.11.3]\r\n\tat org.redisson.spring.starter.RedissonAutoConfiguration$$EnhancerBySpringCGLIB$$57998bd.CGLIB$redisson$2(<generated>) ~[redisson-spring-boot-starter-3.11.3.jar:3.11.3]\r\n\tat org.redisson.spring.starter.RedissonAutoConfiguration$$EnhancerBySpringCGLIB$$57998bd$$FastClassBySpringCGLIB$$adde819c.invoke(<generated>) ~[redisson-spring-boot-starter-3.11.3.jar:3.11.3]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.redisson.spring.starter.RedissonAutoConfiguration$$EnhancerBySpringCGLIB$$57998bd.redisson(<generated>) ~[redisson-spring-boot-starter-3.11.3.jar:3.11.3]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1467) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1431) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1350) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1209) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1341) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:606) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:594) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1226) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans$ReactiveHealthIndicators.get(HealthIndicatorRegistryBeans.java:54) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorRegistryBeans.get(HealthIndicatorRegistryBeans.java:44) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration.healthIndicatorRegistry(HealthIndicatorAutoConfiguration.java:77) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.CGLIB$healthIndicatorRegistry$2(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b$$FastClassBySpringCGLIB$$883683bc.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorAutoConfiguration$$EnhancerBySpringCGLIB$$e3dfcf7b.healthIndicatorRegistry(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBean(EndpointDiscoverer.java:141) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.createEndpointBeans(EndpointDiscoverer.java:131) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.discoverEndpoints(EndpointDiscoverer.java:120) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.getEndpoints(EndpointDiscoverer.java:114) ~[spring-boot-actuator-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.servletEndpointRegistrar(ServletEndpointManagementContextConfiguration.java:72) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.CGLIB$servletEndpointRegistrar$0(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96$$FastClassBySpringCGLIB$$6a7ca482.invoke(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration$$EnhancerBySpringCGLIB$$90920b96.servletEndpointRegistrar(<generated>) ~[spring-boot-actuator-autoconfigure-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_172]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_172]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_172]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_172]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204) ~[spring-beans-5.1.9.RELEASE.jar:5.1.9.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5132) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[?:1.8.0_172]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) ~[?:1.8.0_172]\r\n\tat org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134) ~[?:1.8.0_172]\r\n\tat org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardService.startInternal(StandardService.java:421) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:932) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.apache.catalina.startup.Tomcat.start(Tomcat.java:456) ~[tomcat-embed-core-9.0.22.jar:9.0.22]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:105) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:416) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153) ~[spring-boot-2.1.7.RELEASE.jar:2.1.7.RELEASE]\r\n\t... 8 more\r\nDisconnected from the target VM, address: '127.0.0.1:63319', transport: 'socket'\r\n\r\nProcess finished with exit code 1\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version  \r\n5.0.5\r\n### Redisson version\r\n3.11.3\r\n### Redisson configuration\r\nspring:\r\n  redis:\r\n    sentinel:\r\n      master: mymaster\r\n      nodes: 192.168.1.144:5000, 192.168.1.144:5001, 192.168.1.144:5002\r\n\r\n\r\n\r\nbut it works well with redisson-spring-boot-starter 3.10.7", "url": "https://github.com/redisson/redisson/issues/2291", "user": "xiejx618", "labels": ["bug"], "created": "2019-09-01 00:13:01", "closed": "2019-09-05 16:22:07", "commits": {"23fd2a6e3224896ff965b294fd57d936fad34c9e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "9e9fdfe8844f850098a66bc5200952c44f6410a9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "23fd2a6e3224896ff965b294fd57d936fad34c9e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e64392b1bdf8d93e5c6020d034f5ab1c8c27d0b9"], "nameRev": "23fd2a6e3224896ff965b294fd57d936fad34c9e tags/redisson-3.11.4~26", "commitMessage": "Fixed - wrong error message if Sentinel server has misconfiguration #2291\n", "commitDateTime": "2019-09-02 11:59:04", "authoredDateTime": "2019-09-02 11:59:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 8, "deletions": 5, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9e9fdfe8844f850098a66bc5200952c44f6410a9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fe4d44441492a3c0287c6ffd26e0835e0d1707f3"], "nameRev": "9e9fdfe8844f850098a66bc5200952c44f6410a9 tags/redisson-3.11.4~20", "commitMessage": "Fixed - Spring Boot default connection timeout is 0 seconds. #2291\n", "commitDateTime": "2019-09-05 12:09:48", "authoredDateTime": "2019-09-05 12:09:48", "commitGitStats": [{"filePath": "redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter/RedissonAutoConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonAutoConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.starter.RedissonAutoConfiguration.redisson()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["23fd2a6e3224896ff965b294fd57d936fad34c9e", "9e9fdfe8844f850098a66bc5200952c44f6410a9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 9, "deletions": 6, "lines": 15, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager", "org.redisson.spring.starter.RedissonAutoConfiguration.redisson()"]}, {"title": "the redission can not shutdown", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nI use single mode redisson to test batch function. However after I have finished the test, I can not shutdown the redissonClient. In the test, if I call rfuture.cancel(), then the redissonclient can not shutdown. If not, it shutdown normally\r\n\r\n### Steps to reproduce or test case\r\nclass TestRedisson {\r\n    public static void main(String[] args) throws Exception {\r\n        BatchOptions batchOption = BatchOptions.defaults().executionMode(ExecutionMode.IN_MEMORY)//.skipResult()\r\n                .responseTimeout(1, TimeUnit.SECONDS).retryInterval(1, TimeUnit.SECONDS)\r\n                .retryAttempts(2);\r\n        Config config = new Config();\r\n        config.useSingleServer().setAddress(\"redis://xxxx.eos.grid.xxx.com.cn:50470\");\r\n        config.setCodec(StringCodec.INSTANCE);\r\n        RedissonClient redisson = Redisson.create(config);\r\n        String test = \"hwc#key\";\r\n        String map = \"hwc#map\";\r\n        RBatch batch = redisson.createBatch(batchOption);\r\n        List<RFuture<?>> futures = new ArrayList<RFuture<?>>();\r\n        for (int i = 0; i < 100; i++) {\r\n            RFuture getFuture = batch.getBucket(test).getAsync();\r\n            RFuture setFuture = batch.getBucket(test).setAsync(\"\" + i);\r\n            getFuture.whenComplete((res, e) -> {\r\n                System.out.println(res);\r\n            });\r\n            setFuture.whenComplete((res, e) -> {\r\n                System.out.println(res);\r\n            });\r\n            getFuture.cancel(true);\r\n        }\r\n        RFuture<BatchResult<?>> batchFuture = batch.executeAsync();\r\n        batchFuture.join();\r\n        long c1 = System.currentTimeMillis();\r\n        System.out.println(\"cost\" + (c1 - c));\r\n        redisson.shutdown();\r\n### Redis version\r\n2.4.20.23\r\n### Redisson version\r\n3.11.2\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2275", "user": "damoyang", "labels": ["bug"], "created": "2019-08-23 13:53:16", "closed": "2019-08-28 10:11:31", "commits": {"53e4c223d674cc59e2301f89e2dde22b29bea83d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "53e4c223d674cc59e2301f89e2dde22b29bea83d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c1c1e1e5bd127ffa953cbbb1c2b7fec94a410806"], "nameRev": "53e4c223d674cc59e2301f89e2dde22b29bea83d tags/redisson-3.11.3~7", "commitMessage": "Fixed - Redisson couldn't be shutdown if one of RBatch commands was canceled. #2275\n", "commitDateTime": "2019-08-28 13:12:50", "authoredDateTime": "2019-08-28 13:12:50", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/BaseRedisBatchExecutor.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/command/BatchPromise.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 13, "deletions": 7, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/command/RedisBatchExecutor.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/command/RedisCommonBatchExecutor.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/command/RedisQueuedBatchExecutor.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRedisBatchExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.BaseRedisBatchExecutor", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 6}]}, {"spoonFilePath": "BatchPromise.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.BatchPromise.cancel(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.createPromise()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeRedisBasedQueue().1.run()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync(org.redisson.api.BatchOptions)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisBatchExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisBatchExecutor", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "RedisCommonBatchExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisCommonBatchExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisQueuedBatchExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.RedisQueuedBatchExecutor", "TOT": 19, "UPD": 0, "INS": 5, "MOV": 13, "DEL": 1}, {"spoonMethodName": "org.redisson.command.RedisQueuedBatchExecutor.handleSuccess(org.redisson.misc.RPromise,org.redisson.api.RFuture,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.RedisQueuedBatchExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.RedisQueuedBatchExecutor.getConnection()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.command.RedisQueuedBatchExecutor.handleError(org.redisson.api.RFuture,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchCancel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["53e4c223d674cc59e2301f89e2dde22b29bea83d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 41, "deletions": 23, "lines": 64, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 49, "UPD": 4, "INS": 15, "MOV": 16, "DEL": 14, "spoonFilesChanged": 6, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.RedisCommonBatchExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "org.redisson.command.RedisQueuedBatchExecutor", "org.redisson.command.CommandBatchService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,boolean)", "org.redisson.command.RedisQueuedBatchExecutor.handleError(org.redisson.api.RFuture,java.lang.Throwable)", "org.redisson.command.BaseRedisBatchExecutor", "org.redisson.command.RedisBatchExecutor", "org.redisson.command.RedisQueuedBatchExecutor.handleSuccess(org.redisson.misc.RPromise,org.redisson.api.RFuture,java.lang.Object)", "org.redisson.command.CommandBatchService.executeAsync(org.redisson.api.BatchOptions)", "org.redisson.command.RedisQueuedBatchExecutor.getConnection()", "org.redisson.command.RedisQueuedBatchExecutor.sendCommand(org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "org.redisson.command.CommandBatchService.executeRedisBasedQueue().1.run()", "org.redisson.command.BatchPromise.cancel(boolean)", "org.redisson.command.CommandBatchService.createPromise()"]}, {"title": "RLocalCachedMap  clearLocalCache  getClearSemaphore", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior \r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version  4.0.2\r\n\r\n### Redisson version 3.11.2\r\n\r\n### Redisson configuration\r\n\r\norg.redisson.RedissonLocalCachedMap#clearLocalCacheAsync\r\n\r\n\u5f53\u6211\u4f7f\u7528RLocalCachedMap clearLocalCache  \u5728redis \u4e2d\u4f1a\u4ea7\u751f\u8bb8\u591a\u4ee5\u4e0b\u6570\u636e\r\nWhen I use RLocalCachedMap clearLocalCache , generate many  data in redis\r\n![image](https://user-images.githubusercontent.com/30223515/63483867-4ddbc180-c4d0-11e9-95e8-b05a9d55715a.png)\r\n\u67e5\u770b\u6e90\u7801 \r\nview source code  I Found RSemaphore  \r\n![image](https://user-images.githubusercontent.com/30223515/63483970-a57a2d00-c4d0-11e9-8330-d794ccf3e958.png)\r\n![image](https://user-images.githubusercontent.com/30223515/63483986-b460df80-c4d0-11e9-971a-2fca1da56ea9.png)\r\n\u4ece3.11.0 \u5347\u7ea7\u81f33.11.2 \u53d1\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898 \r\nI Found problem when  upgrade redisson version 3.11.0 to 3.11.3 \r\n\u6240\u4ee5 *clear:* \u76f8\u5173\u5bf9\u8c61 redisson \u4f1a\u505a\u5982\u4f55\u7ba1\u7406 \r\nSo how does redisson manage data?  for   RSemaphore K*clear:*\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2273", "user": "CatCccC", "labels": ["bug"], "created": "2019-08-22 03:50:35", "closed": "2019-08-22 07:07:13", "commits": {"dc7206ab79c6aebec3d70761fae4739204f37524": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dc7206ab79c6aebec3d70761fae4739204f37524", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8669589d7e012b922f4673a8d56c81fd98686022"], "nameRev": "dc7206ab79c6aebec3d70761fae4739204f37524 tags/redisson-3.11.3~15", "commitMessage": "Fixed - semaphore object is not deleted after RLocalCachedMap.clearLocalCache method invocation. #2273\n", "commitDateTime": "2019-08-22 10:08:43", "authoredDateTime": "2019-08-22 10:08:43", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cache/LocalCacheListener.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLocalCachedMapTest.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalCacheListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LocalCacheListener.clearLocalCacheAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonLocalCachedMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMapTest.testLocalCacheClear()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dc7206ab79c6aebec3d70761fae4739204f37524"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 1, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cache"], "changesInPackagesSPOON": ["org.redisson.cache.LocalCacheListener.clearLocalCacheAsync()"]}, {"title": "RMapCache#remainTimeToLive \u8fd4\u56de\u8d1f\u503c", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n\u8fd4\u56de\u9884\u8ba1\u5269\u4f59\u8fc7\u671f\u65f6\u95f4\u7684\u6beb\u79d2\u6570\r\n\r\n### Actual behavior\r\n\r\n\u8fd4\u56de\u9884\u8ba1\u5269\u4f59\u8fc7\u671f\u65f6\u95f4\u7684\u6beb\u79d2\u6570\u7684\u8d1f\u503c\r\n\r\n### Steps to reproduce or test case\r\n\r\n```java\r\nRMapCache<String, String> test = redisson.getMapCache(\"foobar\");\r\ntest.put(\"foo\", \"bar\", 1000, TimeUnit.MILLISECONDS)\r\nassertThat(test.remainTimeToLive(\"foo\")).isGreaterThan(-1) //false and return -997\r\n```\r\n\r\n### Redis version\r\n\r\n4.0.8\r\n\r\n### Redisson version\r\n\r\n3.11.2\r\n\r\n### Redisson configuration\r\n\r\n```yml\r\nsingleServerConfig:\r\n    idleConnectionTimeout: 10000\r\n    pingTimeout: 1000\r\n    connectTimeout: 10000\r\n    timeout: 3000\r\n    retryAttempts: 3\r\n    retryInterval: 1500\r\n    subscriptionsPerConnection: 5\r\n    address: \"redis://127.0.0.1:6379\"\r\n    subscriptionConnectionMinimumIdleSize: 1\r\n    subscriptionConnectionPoolSize: 50\r\n    connectionMinimumIdleSize: 32\r\n    connectionPoolSize: 64\r\n    database: 1\r\n  threads: 0\r\n  nettyThreads: 0\r\n  transportMode: NIO\r\n```\r\n\r\n### Relation Code\r\n\r\nhttps://github.com/redisson/redisson/blob/8669589d7e012b922f4673a8d56c81fd98686022/redisson/src/main/java/org/redisson/RedissonMapCache.java#L1016-L1017\r\n\r\n1017 \u884c\u903b\u8f91\u4f3c\u4e4e\u6709\u8bef\u3002", "url": "https://github.com/redisson/redisson/issues/2272", "user": "zongwei007", "labels": ["bug"], "created": "2019-08-21 15:08:15", "closed": "2019-09-04 12:05:03", "commits": {"fe4d44441492a3c0287c6ffd26e0835e0d1707f3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "fe4d44441492a3c0287c6ffd26e0835e0d1707f3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ec9a661aa4999136ca30e21073640fc7ecf2ecf3"], "nameRev": "fe4d44441492a3c0287c6ffd26e0835e0d1707f3 tags/redisson-3.11.4~21", "commitMessage": "Fixed - RMapCache.remainTimeToLive method returns negative remain time. #2272\n", "commitDateTime": "2019-09-04 15:07:07", "authoredDateTime": "2019-09-04 15:07:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.remainTimeToLiveAsync(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRemainTimeToLive()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fe4d44441492a3c0287c6ffd26e0835e0d1707f3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.remainTimeToLiveAsync(java.lang.Object)"]}, {"title": "RX and Reactive Set Intersection `java.lang.ClassCastException`", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n`Single<Integer> intersection(String... names)`\r\n### Actual behavior\r\n`Single<Long> intersection(String... names)`\r\n### Steps to reproduce or test case\r\nNA\r\n### Redis version\r\nNA\r\n### Redisson version\r\n3.11.1\r\n### Redisson configuration\r\nNA\r\n\r\nBoth Rx and Reactive versions of `RSet` throw `java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.Long (java.lang.Integer and java.lang.Long are in module java.base of loader 'bootstrap')` when using `intersection(String... names)` method.\r\n\r\nI think this is happening because `org.redisson.RedissonSet#intersection` returns an `int`", "url": "https://github.com/redisson/redisson/issues/2241", "user": "alexguzun", "labels": ["bug"], "created": "2019-07-31 14:09:23", "closed": "2019-08-01 10:01:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "CROSSSLOT Keys in request don't hash to the same slot. channel", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior - to get data from the cluster\r\n\r\n### Actual behavior\r\n\r\nCROSSSLOT Keys in request don't hash to the same slot. channel: [id: 0x2000086d, L:/xx.xx.xx.xx:62238 - R:xx.xx.xx.xx/xx.xx.xx.xx:6379] command: (MGET), params: [RO-61519108549746, RO-61519109582837, RO-61519109822542, RO-61519109835348, RO-61519094769904, RO-61519095943381, RO-61519110418000, RO-61519096754445, RO-61519111380355, RO-61519112387629, ...]\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version : 5.0.4\r\n\r\n### Redisson version : 3.11.0\r\n\r\n### Redisson configuration \r\n\r\nRedissonClient redisClient=redisClusterCacheUtils.getRedissonClient();\r\nRBuckets rBuckets =redisClient.getBuckets();\r\nMap<String,String> map = rBuckets.get(idsArray);\r\n\r\npublic RedissonClient getRedissonClient() {\r\nlog.debug(\"getRedissonClient()\");\r\nif(redisson ==null)\r\n{\r\nConfig config = new Config();\r\nconfig.useClusterServers().addNodeAddress(\"redis://\"+redisCacheConfigurations.getServerIp()+\":\"+redisCacheConfigurations.getServerPort());\r\nconfig.useClusterServers().setMasterConnectionMinimumIdleSize(redisCacheConfigurations.getMinIdle());\r\nconfig.useClusterServers().setMasterConnectionPoolSize(redisCacheConfigurations.getMaxConnections());\r\nconfig.useClusterServers().setSlaveConnectionMinimumIdleSize(redisCacheConfigurations.getMinIdle());\r\nconfig.useClusterServers().setSlaveConnectionPoolSize(redisCacheConfigurations.getMaxConnections());\r\nconfig.useClusterServers().setConnectTimeout(redisCacheConfigurations.getConnectTimeoutInMillis());\r\nconfig.useClusterServers().setTimeout(redisCacheConfigurations.getConnectTimeoutInMillis());\r\nconfig.useClusterServers().setClientName(redisCacheConfigurations.getClientName());\r\nredisson = Redisson.create(config);\r\n}\r\nreturn redisson;\r\n}\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2240", "user": "LakshmikanthQuickRide", "labels": ["bug"], "created": "2019-07-29 14:24:46", "closed": "2019-09-03 10:37:08", "commits": {"7ccc1335d37aa2bf4cbea170630e85d9c668c25a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 35.000277777777775, "commitsDetails": [{"commitHash": "7ccc1335d37aa2bf4cbea170630e85d9c668c25a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b8a935f31e27e0de073f68c11ed1d46e40e5d719"], "nameRev": "7ccc1335d37aa2bf4cbea170630e85d9c668c25a tags/redisson-3.11.4~24", "commitMessage": "Fixed - RBucket.get doesn't work in Redis cluster mode. #2240\n", "commitDateTime": "2019-09-03 13:38:52", "authoredDateTime": "2019-09-03 13:38:52", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBuckets.java", "insertions": 23, "deletions": 2, "lines": 25}, {"filePath": "redisson/src/main/java/org/redisson/RedissonKeys.java", "insertions": 22, "deletions": 51, "lines": 73}, {"filePath": "redisson/src/main/java/org/redisson/SlotCallback.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncExecutor.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 80, "deletions": 0, "lines": 80}, {"filePath": "redisson/src/main/java/org/redisson/connection/decoder/BucketsDecoder.java", "insertions": 54, "deletions": 0, "lines": 54}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBucketsTest.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "redisson/src/test/java/org/redisson/RedissonKeysTest.java", "insertions": 39, "deletions": 0, "lines": 39}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBuckets.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBuckets.getAsync(java.lang.String[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.countAsync()", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.unlinkAsync(java.lang.String[])", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonKeys.deleteAsync(java.lang.String[])", "TOT": 9, "UPD": 5, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.executeAsync(org.redisson.client.protocol.RedisStrictCommand,java.lang.String[])", "TOT": 18, "UPD": 8, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonKeys.count()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SlotCallback.java", "spoonMethods": [{"spoonMethodName": "org.redisson.createCommand(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.readBatchedAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.writeBatchedAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.readBatchedAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.writeBatchedAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.executeBatchedAsync(boolean,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.pollFromAnyAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,long,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BucketsDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.decoder.BucketsDecoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBucketsTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBucketsTest.testGetInCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonKeysTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeysTest.testDeleteInCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ccc1335d37aa2bf4cbea170630e85d9c668c25a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 196, "deletions": 53, "lines": 249, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 49, "UPD": 18, "INS": 11, "MOV": 18, "DEL": 2, "spoonFilesChanged": 6, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/connection/decoder"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.writeBatchedAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "org.redisson.RedissonKeys.executeAsync(org.redisson.client.protocol.RedisStrictCommand,java.lang.String[])", "org.redisson.connection.decoder.BucketsDecoder", "org.redisson.command.readBatchedAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "org.redisson.RedissonKeys.count()", "org.redisson.command.CommandAsyncService.readBatchedAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "org.redisson.RedissonKeys.countAsync()", "org.redisson.command.CommandAsyncService.pollFromAnyAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,long,java.lang.String[])", "org.redisson.RedissonKeys.unlinkAsync(java.lang.String[])", "org.redisson.RedissonKeys.deleteAsync(java.lang.String[])", "org.redisson.createCommand(java.lang.Object)", "org.redisson.RedissonBuckets.getAsync(java.lang.String[])", "org.redisson.command.writeBatchedAsync(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])", "org.redisson.command.CommandAsyncService.executeBatchedAsync(boolean,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String[])"]}, {"title": "org.redisson.client.RedisNodeNotFoundException: Node: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=null] hasn't been discovered yet", "body": "\r\nHello. I am using redisson to connect to redis cluster. However, while I am reading from redis (via redisson), I shutdown one of master instance. So I get this error:\r\norg.redisson.client.RedisNodeNotFoundException: Node: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=null] hasn't been discovered yet\r\n\r\n### Expected behavior\r\n \r\n### Actual behavior\r\n \r\n### Steps to reproduce or test case\r\n \r\n### Redis version\r\n        5.0.5\r\n### Redisson version\r\n        3.11.1\r\n### Redisson configuration\r\n       config\r\n                .useClusterServers()\r\n                .setScanInterval(scanInterval)\r\n                .setReadMode(ReadMode.SLAVE)\r\n                .addNodeAddress(\"redis://10.5.12.10:30001\")\r\n                .setConnectTimeout(10000)\r\n                .setRetryAttempts(10)\r\n                .setIdleConnectionTimeout(10000)\r\n                .setPingConnectionInterval(1000)\r\n                .setTimeout(6000)\r\n                .setFailedSlaveCheckInterval(3)\r\n                .setFailedSlaveCheckInterval(30000)\r\n                .setRetryInterval(3000)\r\n                .setMasterConnectionPoolSize(100)\r\n                .setSlaveConnectionPoolSize(100)\r\n                .setFailedSlaveReconnectionInterval(3000)\r\n                .setSubscriptionsPerConnection(5)\r\n                .setSubscriptionConnectionMinimumIdleSize(1)\r\n                .setSubscriptionConnectionPoolSize(50)\r\n                .setSlaveConnectionMinimumIdleSize(10)\r\n                .setMasterConnectionMinimumIdleSize(10)\r\n                .setSubscriptionMode(SubscriptionMode.SLAVE)\r\n                .setReconnectionTimeout(reconnectionTimeout);", "url": "https://github.com/redisson/redisson/issues/2234", "user": "muradzulfugarov", "labels": ["bug"], "created": "2019-07-19 11:00:12", "closed": "2019-07-23 14:23:55", "commits": {"8a898ced46a168cb902879d9b6094014d4e4f788": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "8a898ced46a168cb902879d9b6094014d4e4f788", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6af30bca914860765f198671b02c25ba53b9df1c"], "nameRev": "8a898ced46a168cb902879d9b6094014d4e4f788 tags/redisson-3.11.2~15", "commitMessage": "Fixed - a new attempt is not made if node with defined slot hasn't been discovered. #2234\n", "commitDateTime": "2019-07-23 17:24:42", "authoredDateTime": "2019-07-23 17:24:42", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/NodeSource.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.getNodeSource(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.getNodeSource(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NodeSource.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.NodeSource", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8a898ced46a168cb902879d9b6094014d4e4f788"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 2, "lines": 9, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.getNodeSource(java.lang.String)", "org.redisson.command.CommandAsyncService.getNodeSource(byte[])", "org.redisson.connection.NodeSource"]}, {"title": "Session behaviour mismatch - Redis + AFTER_REQUEST", "body": "\r\n### Expected behavior\r\nRedisson session manager should return actual value of value persisted to session.\r\n\r\n### Actual behavior\r\nRedisson returns null for every value previously saved.\r\n\r\n### Steps to reproduce or test case\r\n1) updateMode = AFTER_REQUEST + readMode = REDIS\r\n2) session.setAttribute(\"abcd\", \"abcd\")\r\n3) session.getAttribute(\"abcd\")  => null, but accroding to my opinion, it should return \"abcd\"\r\n\r\nIf I use readMode = MEMORY, it is somehow working but currently, I\u00b4m experiencing issues with synchronization => getting outdated session / not latest data. So I tried to use readMode = \"REDIS\". I would expect session to be on every request fully loaded from Session, during request are made to the memory object and at the end, it should be push to Redis. \r\n\r\nMaybe it is not a bug, not sure, whether it is intended or not. Otherwise, could you advise how to solve? Or tune config somehow to eleminate outdated session data?\r\n\r\n### Redis version\r\n3.0.503\r\n\r\n### Redisson version\r\n3.11.1\r\n\r\n### Redisson configuration\r\n{\r\n  \"singleServerConfig\": {\r\n    \"idleConnectionTimeout\": 10000,\r\n    \"connectTimeout\": 10000,\r\n    \"timeout\": 3000,\r\n    \"retryAttempts\": 3,\r\n    \"retryInterval\": 1500,\r\n    \"password\": null,\r\n    \"subscriptionsPerConnection\": 5,\r\n    \"clientName\": \"ppe-ib1\",\r\n    \"address\": \"redis://localhost:6379\",\r\n    \"subscriptionConnectionMinimumIdleSize\": 1,\r\n    \"subscriptionConnectionPoolSize\": 50,\r\n    \"connectionMinimumIdleSize\": 32,\r\n    \"connectionPoolSize\": 64,\r\n    \"database\": 0,\r\n    \"dnsMonitoringInterval\": 5000\r\n  },\r\n  \"threads\": 16,\r\n  \"nettyThreads\": 32,\r\n  \"codec\": {\r\n    \"class\": \"org.redisson.codec.FstCodec\"\r\n  },\r\n  \"transportMode\": \"NIO\"\r\n}", "url": "https://github.com/redisson/redisson/issues/2230", "user": "JiriFrankCZ", "labels": ["bug", "tomcat"], "created": "2019-07-16 11:09:58", "closed": "2020-02-13 12:26:54", "commits": {"80141fc918734090a90e86933dd2df1d9f55519f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 212.00027777777777, "commitsDetails": [{"commitHash": "80141fc918734090a90e86933dd2df1d9f55519f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4a1681629df1058abe8931fe5ec8243711e5d58f"], "nameRev": "80141fc918734090a90e86933dd2df1d9f55519f tags/redisson-3.12.2~6", "commitMessage": "Fixed - session should return the same object during the same request. When it was updated in readMode = REDIS and updateMode = AFTER_REQUEST #2230\n", "commitDateTime": "2020-02-13 15:27:09", "authoredDateTime": "2020-02-13 15:27:09", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 23, "deletions": 18, "lines": 41}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 39, "deletions": 12, "lines": 51}, {"filePath": "redisson-tomcat/{redisson-tomcat-8/src/test/webapp/META-INF/context.xml => redisson-tomcat-7/src/test/webapp/META-INF/context_memory.xml}", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/webapp/META-INF/context_memory_after_request.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/webapp/META-INF/{context.xml => context_redis.xml}", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/webapp/META-INF/context_redis_after_request.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/webapp/WEB-INF/web.xml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 25, "deletions": 20, "lines": 45}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 63, "deletions": 4, "lines": 67}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/java/org/redisson/tomcat/TestHttpSessionListener.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "redisson-tomcat/{redisson-tomcat-9/src/test/webapp/META-INF/context.xml => redisson-tomcat-8/src/test/webapp/META-INF/context_memory.xml}", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/webapp/META-INF/context_memory_after_request.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/webapp/META-INF/context_redis.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/webapp/META-INF/context_redis_after_request.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/webapp/WEB-INF/web.xml", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 65, "deletions": 5, "lines": 70}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/test/java/org/redisson/tomcat/TestHttpSessionListener.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/test/webapp/META-INF/context_memory.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/test/webapp/META-INF/context_memory_after_request.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/test/webapp/META-INF/context_redis.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/test/webapp/META-INF/context_redis_after_request.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/test/webapp/WEB-INF/web.xml", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.setAttribute(java.lang.String,java.lang.Object,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.removeAttributeInternal(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManagerTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.testExpiration()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.data()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.before()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.testHttpSessionListener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestHttpSessionListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.TestHttpSessionListener", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["80141fc918734090a90e86933dd2df1d9f55519f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 59, "deletions": 38, "lines": 97, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 7, "MOV": 4, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.setAttribute(java.lang.String,java.lang.Object,boolean)", "org.redisson.tomcat.RedissonSession", "org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String)", "org.redisson.tomcat.RedissonSession.save()", "org.redisson.tomcat.RedissonSession.removeAttributeInternal(java.lang.String,boolean)"]}, {"title": "evalShaAsync\u548cevalSha\u6267\u884c\u76f8\u540c\u7684lua\u811a\u672c\uff0c\u7ed3\u679c\u4e0d\u4e00\u81f4", "body": "### Expected behavior\r\n\r\n1) \"totalNum\"\r\n2) \"2\"\r\n3) \"totalEnergy\"\r\n4) \"111.32\"\r\n\r\nThe 4) should be a number as 111.32, and evalSha was right.\r\n\r\n`\r\nList<Object> obj = script.evalSha(RScript.Mode.READ_ONLY, sha, RScript.ReturnType.MAPVALUELIST, Arrays.asList(\"yyyyy\"), String.valueOf(new BigDecimal(55.66).doubleValue()));\r\nSystem.out.println(obj);\r\n`\r\n\r\n[totalNum, 2, totalEnergy, 111.32]\r\n\r\n### Actual behavior\r\n\r\nevalShaAsync result:\r\n\r\n1) \"totalNum\"\r\n2) \"1\"\r\n3) \"totalEnergy\"\r\n4) \"\\xfc\\x05403.0\"\r\n\r\nThe 4) contains \\xfc\\x0\r\n\r\n\r\nRFuture<List<Object>> scriptFuture = script.evalShaAsync(RScript.Mode.READ_ONLY, sha, RScript.ReturnType.MAPVALUELIST, Arrays.asList(key), String.valueOf(pojo.getEnergy().doubleValue()));\r\n\r\nscriptFuture.whenComplete((res, exception) -> {\r\n// nothing to println on console\r\n    System.out.println(\"res: \"+res.isEmpty());\r\n    System.out.println(\"exception.getMessage(): \" + exception.getMessage());\r\n    resultFuture.complete(Arrays.asList(res.toString()));\r\n});\r\n\r\n### Redisson version\r\n3.11.0\r\n\r\n### lua script\r\n\r\nlocal k = KEYS[1]\r\nlocal e = ARGV[1]\r\nlocal isExists = redis.call('exists', k)\r\nif not isExists or isExists == 0 then\r\n  redis.call('hmset', k, 'totalNum', 1)\r\n  redis.call('hmset', k, 'totalEnergy', e)\r\nelse\r\n  redis.call('hmset', k, 'totalNum', tonumber(redis.call('hget', k, 'totalNum')) + 1)\r\n  redis.call('hmset', k, 'totalEnergy', string.format(\"%.2f\", tonumber(redis.call('hget', k, 'totalEnergy')) + tonumber(e)))\r\nend\r\nreturn redis.call('hgetall', k)\r\n\r\n### Redisson Source Code\r\n\r\n@Override\r\npublic <R> R evalSha(String key, Mode mode, String shaDigest, ReturnType returnType, List<Object> keys,\r\n            Object... values) {\r\n        return commandExecutor.get((RFuture<R>) evalShaAsync(key, mode, shaDigest, returnType, keys, values));\r\n}\r\n\r\n### Debug found... \u8fd9\u662f\u4e2aBUG\ud83d\ude0a\r\nevalSha:org.redisson.client.codec.StringCodec\r\nreturn evalAsync(source, true, codec, evalCommandType, script, keys, params);\r\n\r\nevalShaAsync:org.redisson.codec.FstCodec\r\nreturn script.evalShaAsync(key, mode, shaDigest, returnType, keys, values);\r\n\r\n\u6700\u7ec8\u8c03\u7528\u7684\u4f4d\u7f6e\u662f\u4e00\u6837\u7684\uff0cCodec\u4e0d\u540c\u3002\r\nUse getScript(Codec) instead\r\n@Deprecated\r\n\u5e26\u6709Codec\u53c2\u6570\u7684\u65b9\u6cd5\u3002\r\n\u7136\u800c\u5e76\u6ca1\u6709\u4f7f\u7528getScript(Codec)\u91cc\u7684StringCodec\uff0c\u800c\u662fcommandExecutor.getConnectionManager().getCodec()\u4e3aorg.redisson.codec.FstCodec\u3002\r\n\u4e0b\u9762\u6784\u9020\u65b9\u6cd5\u91cc\u7684codec\u4e3aStringCodec\u3002\r\n\r\npublic RedissonScript(CommandAsyncExecutor commandExecutor, Codec codec) {\r\n        this.commandExecutor = commandExecutor;\r\n        this.codec = codec;\r\n}\r\n\r\n@Override\r\npublic RScript getScript(Codec codec) {\r\n        return new RedissonScript(connectionManager.getCommandExecutor(), codec);\r\n}\r\n\r\npublic Config(Config oldConf) {\r\n        setExecutor(oldConf.getExecutor());\r\n\r\n        if (oldConf.getCodec() == null) {\r\n            // use it by default\r\n            oldConf.setCodec(new FstCodec());\r\n        }\r\n...\r\n}\r\n\r\n### whenComplete\u6709\u95ee\u9898\uff0c\u6709\u65f6\u5019\u5076\u5c14\u4f1a\u6267\u884c\u6253\u5370\u51fa\u7ed3\u679c\uff0c\u5927\u90e8\u5206\u65f6\u5019\u90fd\u662f\u6ca1\u4e00\u70b9\u53cd\u5e94\r\n\r\nscriptFuture.whenComplete(new BiConsumer<List<Object>, Throwable>() {\r\n    @Override\r\n    public void accept(List<Object> objects, Throwable throwable) {\r\n        System.out.println(objects);\r\n    }\r\n});", "url": "https://github.com/redisson/redisson/issues/2228", "user": "shaozhipeng", "labels": ["bug"], "created": "2019-07-15 07:46:14", "closed": "2019-07-16 09:54:03", "commits": {"eafb42c45316350691152adf3420acb4c94943d8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "eafb42c45316350691152adf3420acb4c94943d8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["22ddb6a6711acda0e088db99b961c0d60801bc7c"], "nameRev": "eafb42c45316350691152adf3420acb4c94943d8 tags/redisson-3.11.2~22", "commitMessage": "Fixed - some methods of RScript doesn't use defined codec. #2228\n", "commitDateTime": "2019-07-16 12:53:41", "authoredDateTime": "2019-07-16 12:53:41", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonScript.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonScript.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScript.evalShaAsync(org.redisson.Mode,java.lang.String,org.redisson.ReturnType,java.util.List,java.lang.Object[])", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonScript.evalShaAsync(org.redisson.Mode,java.lang.String,org.redisson.ReturnType)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonScript.evalAsync(org.redisson.Mode,java.lang.String,org.redisson.ReturnType)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eafb42c45316350691152adf3420acb4c94943d8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonScript.evalShaAsync(org.redisson.Mode,java.lang.String,org.redisson.ReturnType)", "org.redisson.RedissonScript.evalAsync(org.redisson.Mode,java.lang.String,org.redisson.ReturnType)", "org.redisson.RedissonScript.evalShaAsync(org.redisson.Mode,java.lang.String,org.redisson.ReturnType,java.util.List,java.lang.Object[])"]}, {"title": "\u8fd9\u662fRedissonSetMultimap\u7684Bug\uff1f", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\u5e0c\u671b\u6279\u91cf\u5220\u9664RedissonSetMultimap\u4e2d\u67d0\u4e2aKey\u5bf9\u5e94Value\u96c6\u5408\u4e2d\u7684\u503c\u3002\r\n\u4f46\u901a\u8fc7\u6e90\u7801\u53d1\u73b0\u901a\u8fc7RedissonSetMultimap.get(K key)\u62ff\u5230\u7684RSet\u662f\u5185\u90e8\u5b9e\u73b0\u7c7b\uff0c\u5b83\u7684removeAll(Collection<?> c)\u65b9\u6cd5\u7684lua\u811a\u672c\u5e94\u8be5\u4e0eapi\u63cf\u8ff0\u4e0d\u7b26\uff1a\r\n```java\r\n  @Override\r\n            public RFuture<Boolean> removeAllAsync(Collection<?> c) {\r\n                ByteBuf keyState = encodeMapKey(key);\r\n                return commandExecutor.evalWriteAsync(RedissonSetMultimap.this.getName(), codec, RedisCommands.EVAL_BOOLEAN_AMOUNT,\r\n                        \"redis.call('hdel', KEYS[1], ARGV[1]); \" +\r\n                        \"return redis.call('del', KEYS[2]); \",\r\n                    Arrays.<Object>asList(RedissonSetMultimap.this.getName(), setName), keyState);\r\n            }\r\n```\r\n\r\n### Actual behavior\r\n\u901a\u8fc7RedissonSetMultimap.get(key)\u83b7\u5f97\u7684RSet\u5bf9\u8c61\uff0c\u8c03\u7528RSet.removeAll(Collection<?> c);\uff0c\u4f1a\u5bfc\u81f4key\u503c\u5bf9\u5e94\u7684Values\u96c6\u5408\u90fd\u88ab\u6e05\u7a7a\u3002\r\n\r\n### Steps to reproduce or test case\r\n```java\r\n        RSetMultimap<Integer, Integer> ttt = redissonUtils.getSetMultimap(\"ttt\");\r\n        ttt.put(1, 1);\r\n        ttt.put(1, 2);\r\n        ttt.put(1, 3);\r\n\r\n        ttt = redissonUtils.getSetMultimap(\"ttt\");\r\n        Log.debug(ttt.get(1).size() + \"\");\r\n\r\n        Set<Integer> t = Sets.newHashSet(1, 2);\r\n        ttt.get(1).removeAll(t);\r\n        ttt = redissonUtils.getSetMultimap(\"ttt\");\r\n        Log.debug(ttt.get(1).size() + \"\");\r\n```\r\n\r\n### Redis version\r\n5.0.5\r\n\r\n### Redisson version\r\n3.11.0\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2219", "user": "zl1030", "labels": ["bug"], "created": "2019-07-08 04:03:11", "closed": "2019-07-08 06:50:58", "commits": {"5fdd5c1b248d8032ffd67cbb9fb819f5ea096cd0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5fdd5c1b248d8032ffd67cbb9fb819f5ea096cd0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d8854b3bb0403d2c2a21f66ef9ca5d3e5249f703"], "nameRev": "5fdd5c1b248d8032ffd67cbb9fb819f5ea096cd0 tags/redisson-3.11.2~25", "commitMessage": "Fixed - removeAll method doesn't work on collections returned by Multimap based objects. #2219\n", "commitDateTime": "2019-07-08 09:51:31", "authoredDateTime": "2019-07-08 09:51:31", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonListMultimap.java", "insertions": 18, "deletions": 4, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimap.java", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "redisson/src/test/java/org/redisson/RedissonListMultimapTest.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetMultimapTest.java", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonListMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)", "TOT": 14, "UPD": 4, "INS": 5, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "RedissonSetMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)", "TOT": 14, "UPD": 4, "INS": 5, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "RedissonListMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimapTest.testRemoveAllFromCollection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testRemoveAllFromCollection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5fdd5c1b248d8032ffd67cbb9fb819f5ea096cd0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 34, "deletions": 7, "lines": 41, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 28, "UPD": 8, "INS": 10, "MOV": 8, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSetMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)", "org.redisson.RedissonListMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)"]}, {"title": "return null when not used in pipeline / transaction", "body": "class\uff1aorg.redisson.spring.data.connection.RedissonConnection.java \r\ncode line\uff1a882 \r\ncode segment\uff1a\r\n<T> T write(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {\r\n\tRFuture<T> f = executorService.writeAsync(key, codec, command, params);\r\n\tindexCommand(command);\r\n\treturn sync(f);\r\n}\r\n\r\nbug\uff1areturn null when not used in pipeline / transaction.\r\n\r\n### Expected behavior\r\nnot return null when not used in pipeline / transaction.\r\n### Actual behavior\r\nreturn null when not used in pipeline / transaction.\r\n### Steps to reproduce or test case\r\npublic Boolean setNx(String key, String value, long expireMillis) {\r\n\treturn stringRedisTemplate.execute(new RedisCallback<Boolean>() {\r\n\t\t@Override\r\n\t\tpublic Boolean doInRedis(RedisConnection connection) throws DataAccessException {\r\n\t\t\treturn connection.set(key.getBytes(), value.getBytes(), Expiration.milliseconds(expireMillis),\r\n\t\t\t\t\tSetOption.SET_IF_ABSENT);\r\n\t\t}\r\n\t}, true);\r\n}\r\n### Redis version\r\nRedis-x64-3.0.500\r\n### Redisson version\r\n3.11.1\r\n### Redisson configuration", "url": "https://github.com/redisson/redisson/issues/2217", "user": "luckyQing", "labels": ["bug"], "created": "2019-07-05 03:44:33", "closed": "2019-07-08 07:05:42", "commits": {"22ddb6a6711acda0e088db99b961c0d60801bc7c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "22ddb6a6711acda0e088db99b961c0d60801bc7c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["343b3f813cfb6a3ff4b679e01ac38dec2a4a2eda"], "nameRev": "22ddb6a6711acda0e088db99b961c0d60801bc7c tags/redisson-3.11.2~23", "commitMessage": "Fixed - RedissonConnection.set returns null if invoked with expiration parameter. #2217\n", "commitDateTime": "2019-07-08 10:06:28", "authoredDateTime": "2019-07-08 10:06:28", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/test/java/org/redisson/spring/data/connection/RedissonConnectionTest.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection.set(byte[],byte[],org.springframework.data.redis.core.types.Expiration,org.redisson.spring.data.connection.SetOption)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "RedissonConnectionTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnectionTest.testSetExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["22ddb6a6711acda0e088db99b961c0d60801bc7c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 9, "lines": 15, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonConnection.set(byte[],byte[],org.springframework.data.redis.core.types.Expiration,org.redisson.spring.data.connection.SetOption)"]}, {"title": "batch.getKeys().deleteByPatternAsync does not work", "body": "I am new in Redisson, so probably it is a dumb question. \r\nPlease give it a look.\r\n\r\nMy code:\r\n\r\n`   Config config = new Config();\r\n    config.useSingleServer().setAddress(\"redis://\" + redis.getContainerIpAddress() + \":\" + redis.getMappedPort(6379));\r\n    RedissonClient redisson = Redisson.create(config);\r\n\r\n    //Random data\r\n    RBucket<Object> bucket = redisson.getBucket(\"obj.0.a\");\r\n    bucket.set(\"a\");\r\n    bucket = redisson.getBucket(\"obj.0.b\");\r\n    bucket.set(\"b\");\r\n    bucket = redisson.getBucket(\"obj.0.c\");\r\n    bucket.set(\"c\");\r\n    bucket = redisson.getBucket(\"obj.0.d\");\r\n    bucket.set(\"d\");\r\n\r\n    //Batch delete by patern\r\n    RBatch createBatch = redisson.createBatch();\r\n    RFuture<Long> deleteByPatternAsync = createBatch.getKeys().deleteByPatternAsync(\"obj.0.*\");\r\n    createBatch.execute();\r\n    Thread.sleep(10 * 1000);\r\n\r\n    //Test batch delete\r\n    Iterator<String> iterator = redisson.getKeys().getKeysByPattern(\"obj.0.*\").iterator();\r\n    if (iterator.hasNext()) {\r\n      System.out.println(\"deleteByPatternAsync did not work\");\r\n    } else {\r\n      System.out.println(\"deleteByPatternAsync worked\");\r\n    }\r\n    \r\n    //Syn Delete\r\n    redisson.getKeys().deleteByPattern(\"obj.0.*\");\r\n    iterator = redisson.getKeys().getKeysByPattern(\"obj.0.*\").iterator();\r\n    \r\n    //Test syn detelete\r\n    if (iterator.hasNext()) {\r\n      System.out.println(\"deleteByPattern did not work\");\r\n    } else {\r\n      System.out.println(\"deleteByPattern worked\");\r\n    }`\r\n\r\n\r\n### Expected behavior\r\nOutput:\r\ndeleteByPatternAsync worked\r\ndeleteByPattern worked\r\n\r\n### Actual behavior\r\nOutput:\r\ndeleteByPatternAsync did not work\r\ndeleteByPattern worked\r\n\r\n### Steps to reproduce or test case\r\nI used testcontainers with the docker image 'redis:3.0.6'\r\n\r\n### Redis version\r\n3.0.6\r\n### Redisson version\r\n3.11.1\r\n\r\n### Redisson configuration\r\nSingleServer", "url": "https://github.com/redisson/redisson/issues/2216", "user": "joseph6x", "labels": ["bug"], "created": "2019-07-04 22:38:53", "closed": "2019-07-26 08:46:52", "commits": {"f9b7567263c8fc64aedd1d75005748f10a6051d5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "f9b7567263c8fc64aedd1d75005748f10a6051d5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c856c353735a568a9b21f56b025dfbbbe667f30b"], "nameRev": "f9b7567263c8fc64aedd1d75005748f10a6051d5 tags/redisson-3.11.2~12", "commitMessage": "Fixed - RKeys.deleteByPatternAsync doesn't work in batch mode #2216\n", "commitDateTime": "2019-07-26 11:47:49", "authoredDateTime": "2019-07-26 11:47:49", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonKeys.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "redisson/src/test/java/org/redisson/RedissonKeysTest.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.deleteByPatternAsync(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonKeysTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeysTest.testDeleteByPatternBatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f9b7567263c8fc64aedd1d75005748f10a6051d5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 0, "lines": 15, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonKeys.deleteByPatternAsync(java.lang.String)"]}, {"title": "CommandBatchService Execute Error", "body": "\r\n\r\n\r\n### Expected behavior\r\n\r\n\r\n### Actual behavior\r\nCaused by: org.redisson.client.RedisException: Unexpected exception while processing command\r\n\tat org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:400) ~[redisson-3.10.6.jar!/:?]\r\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:204) ~[redisson-3.10.6.jar!/:?]\r\n\tat org.redisson.command.CommandBatchService.execute(CommandBatchService.java:360) ~[redisson-3.10.6.jar!/:?]\r\n\tat org.redisson.spring.data.connection.RedissonConnection.exec(RedissonConnection.java:1597) ~[redisson-spring-data-21-3.10.6.jar!/:?]\r\n\t... 143 more\r\nCaused by: java.util.NoSuchElementException\r\n\tat java.util.ArrayList$Itr.next(ArrayList.java:854) ~[?:1.8.0_65]\r\n\tat org.redisson.command.CommandBatchService$1.lambda$run$2(CommandBatchService.java:471) ~[redisson-3.10.6.jar!/:?]\r\n\tat org.redisson.misc.RedissonPromise.lambda$onComplete$0(RedissonPromise.java:187) ~[redisson-3.10.6.jar!/:?]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:502) ~[netty-all-4.1.34.Final.jar!/:4.1.34.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:476) ~[netty-all-4.1.34.Final.jar!/:4.1.34.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:415) ~[netty-all-4.1.34.Final.jar!/:4.1.34.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:540) ~[netty-all-4.1.34.Final.jar!/:4.1.34.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:529) ~[netty-all-4.1.34.Final.jar!/:4.1.34.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:101) ~[netty-all-4.1.34.Final.jar!/:4.1.34.Final]\r\n\r\n### Steps to reproduce or test case\r\nTest code(Under the multithread test):\r\nList<Object> txResults = redisTemplate.execute(new SessionCallback<List<Object>>() {\r\n                @Override\r\n                public List<Object> execute(RedisOperations operations) throws DataAccessException {\r\n                    try {\r\n                        operations.watch(key);\r\n                        SeqInfo seqInfo = SeqInfo.fromString(String.valueOf(operations.opsForValue().get(key)));\r\n                        if (oldSeq.equals(seqInfo)) {\r\n                            operations.multi();\r\n                            operations.opsForValue().get(key);\r\n                            operations.opsForValue().set(key, newSeq.toString());\r\n                            return operations.exec();\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    } catch (Exception e) {\r\n                        log.error(e.getMessage(), e);\r\n                        return null;\r\n                    } finally {\r\n                        operations.unwatch();\r\n                    }\r\n                }\r\n            });\r\n\r\n### redis version:3.2.0\r\n\r\n### redisson version:3.10.6\r\n\r\n### \r\nsingleServerConfig\r\n", "url": "https://github.com/redisson/redisson/issues/2212", "user": "liubaochuan", "labels": ["bug"], "created": "2019-07-03 09:20:32", "closed": "2019-08-03 07:35:48", "commits": {"ac6581ed21d111d27dfbe41b1662d742df3d0c43": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "ac6581ed21d111d27dfbe41b1662d742df3d0c43", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["06d155f2c85442d9ed41f649422f2b40e536d06a"], "nameRev": "ac6581ed21d111d27dfbe41b1662d742df3d0c43 tags/redisson-3.11.2~2", "commitMessage": "Fixed - RBatch throws NoSuchElementException. #2212\n", "commitDateTime": "2019-08-03 10:37:06", "authoredDateTime": "2019-08-03 10:37:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync(org.redisson.api.BatchOptions).1.run()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ac6581ed21d111d27dfbe41b1662d742df3d0c43"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandBatchService.executeAsync(org.redisson.api.BatchOptions).1.run()"]}, {"title": "RedissonSession setAttribute do not check if the value is null before removing the attribute name from removedAttributes collection", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\nRedissonSession setAttribute do not check if the value is null before removing the attribute name from removedAttributes collection\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.11.1-SNAPSHOT\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2187", "user": "jchobantonov", "labels": ["bug"], "created": "2019-06-19 21:29:11", "closed": "2019-06-20 06:28:52", "commits": {"68d9ede5b9b9bb5bb1b942089eb5cbd067811974": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "68d9ede5b9b9bb5bb1b942089eb5cbd067811974", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7ec36c23f9492ada38ce868b0076b4fb882ab678"], "nameRev": "68d9ede5b9b9bb5bb1b942089eb5cbd067811974 tags/redisson-3.11.1~14", "commitMessage": "Fixed - RedissonSession.setAttribute method doesn't check the value for null #2187 (thanks to jchobantonov)\n", "commitDateTime": "2019-06-20 09:28:25", "authoredDateTime": "2019-06-20 09:28:25", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.setAttribute(java.lang.String,java.lang.Object,boolean)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["68d9ede5b9b9bb5bb1b942089eb5cbd067811974"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 5, "lines": 22, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.setAttribute(java.lang.String,java.lang.Object,boolean)"]}, {"title": "Subscribe Timeout Exceptions - After master Re-election  ", "body": "### Expected behaviour\r\n\r\nNone, or fewer Exceptions (just during failover period)\r\n\r\n### Actual behaviour\r\n\r\nAfter a master re-election (and not otherwise) a constant percentage (about 1%) of the requests fail with this exception until the Redisson client is re-initialised manually with a pod bounce.\r\n\r\norg.redisson.client.RedisTimeoutException: Subscribe timeout: (60000ms). Increase 'subscriptionsPerConnection' and/or 'subscriptionConnectionPoolSize' parameters.\u2028at org.redisson.command.CommandAsyncService.syncSubscription(CommandAsyncService.java:167) ~[redisson-3.10.7.jar!/:na]\u2028at org.redisson.RedissonLock.lock(RedissonLock.java:183) ~[redisson-3.10.7.jar!/:na]\u2028at org.redisson.RedissonLock.lock(RedissonLock.java:157) ~[redisson-3.10.7.jar!/:na]\u2028at com.ajw.quondam.redis.RedisConnector.removeKey(RedisConnector.java:53) ~[classes!/:1.0-SNAPSHOT]\r\n\r\n### Steps to reproduce or test case\r\n\r\nI'm running 3 redis (master, slave, slave) alongside 3 sentinels.\r\n\r\n\u2028I'm running a constant load of requests through a redisson\u00a0client which can run indefinitely without any issue.\u2028\r\n\r\nWhen I introduce a chaos script to trigger a failure of the master and thus a master re-election I start to see the errors, yet only for a very small percentage of the requests (but that percentage remains constant indefinitely until a manual restart of the redisson client happens)\r\n\r\nEach request acquires and releases an RLock with a chance of collision with another request being 1 in 100.\r\n\r\nIf I lower the collision probability to be 1 in 10000 this problem almost completely disappears to the point where I lose only perhaps a single request, during the failover period (which is the expected behaviour for the higher collision case also)\r\n\r\n### Redis version\r\nredis_version:4.0.11\r\n\r\n### Redisson version\r\n3.10.7\r\n\r\n### Redisson configuration\r\n\r\n.setSubscriptionsPerConnection(20)\u2028\r\n.setSubscriptionConnectionPoolSize(200)\u2028\r\n.setRetryAttempts(15)\u2028\r\n.setRetryInterval(3000)\u2028\r\n.setSubscriptionConnectionMinimumIdleSize(50)\u2028\r\n.setSlaveConnectionPoolSize(200)\r\n\u2028.setMasterConnectionPoolSize(200)\r\n\u2028.setTimeout(15000)\r\n\r\n.setNettyThreads(128)\r\n", "url": "https://github.com/redisson/redisson/issues/2181", "user": "alexwatts", "labels": ["bug"], "created": "2019-06-19 00:43:59", "closed": "2019-07-23 14:50:36", "commits": {"c140b5cdb7eb45071f4d064c462963e7791ddd56": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "12e81de984698d06b3dbc236bac00479ec7e3d61": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "c140b5cdb7eb45071f4d064c462963e7791ddd56", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d8055ba0dd779be1d92b57a95717a73d9813208f"], "nameRev": "c140b5cdb7eb45071f4d064c462963e7791ddd56 tags/redisson-3.11.1~11", "commitMessage": "Fixed - Publish/Subscribe connections are not resubscribed properly after failover process. #2181\n", "commitDateTime": "2019-06-20 15:21:45", "authoredDateTime": "2019-06-20 15:21:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisPubSubConnection.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/PubSubConnectionEntry.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/PublishSubscribeService.java", "insertions": 107, "deletions": 23, "lines": 130}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 157, "deletions": 0, "lines": 157}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisPubSubConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisPubSubConnection.subscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.psubscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.unsubscribe(org.redisson.client.ChannelName[])", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.punsubscribe(org.redisson.client.ChannelName[])", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry.subscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry.psubscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.RedisPubSubListener)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry.punsubscribe(org.redisson.client.ChannelName,org.redisson.client.RedisPubSubListener)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribeService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.addListeners(org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.pubsub.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[])", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.psubscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.punsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.connect(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[])", "TOT": 12, "UPD": 0, "INS": 7, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).2.run()", "TOT": 12, "UPD": 0, "INS": 7, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore).3.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.CharSequence)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1.run()", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 9, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1.run().1.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.CharSequence)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1.run().2.operationComplete(io.netty.channel.ChannelFuture).1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1.run().2.operationComplete(io.netty.channel.ChannelFuture).1.run(io.netty.util.Timeout)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.addListeners(org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.pubsub.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).3.run(io.netty.util.Timeout)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.addListeners(org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.pubsub.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterSlave()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.sendCommands(org.redisson.api.RedissonClient,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterSlave().16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.sendCommands(org.redisson.api.RedissonClient,java.lang.String).14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterSlave().15", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterMaster().17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterMaster().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachPatternTopicListenersOnClusterFailover().19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinel2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterSlave().15.onSubscribe(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterSlave().15.onUnsubscribe(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "12e81de984698d06b3dbc236bac00479ec7e3d61", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8a898ced46a168cb902879d9b6094014d4e4f788"], "nameRev": "12e81de984698d06b3dbc236bac00479ec7e3d61 tags/redisson-3.11.2~14", "commitMessage": "Fixed - Subscribe timeouts after failover. #2181\n", "commitDateTime": "2019-07-23 17:50:45", "authoredDateTime": "2019-07-23 17:50:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/pubsub/PubSubConnectionEntry.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/PublishSubscribeService.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 123, "deletions": 6, "lines": 129}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribeService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.reattachPubSub(org.redisson.client.RedisPubSubConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterMaster()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testConcurrentTopic()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.failover(org.redisson.ClusterRunner.ClusterProcesses,org.redisson.RedisRunner,org.redisson.RedisRunner)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testSyncCommands()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testResubscriptionAfterFailover()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c140b5cdb7eb45071f4d064c462963e7791ddd56", "12e81de984698d06b3dbc236bac00479ec7e3d61"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 152, "deletions": 37, "lines": 189, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 88, "UPD": 11, "INS": 41, "MOV": 35, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 26}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/pubsub", "redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisPubSubConnection.psubscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName[])", "org.redisson.pubsub.PublishSubscribeService.reattachPubSub(org.redisson.client.RedisPubSubConnection)", "org.redisson.client.RedisPubSubConnection.unsubscribe(org.redisson.client.ChannelName[])", "org.redisson.pubsub.PubSubConnectionEntry.psubscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName)", "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).2.run()", "org.redisson.pubsub.PublishSubscribeService.toString()", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore).4", "org.redisson.pubsub.PubSubConnectionEntry.subscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName)", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1.run()", "org.redisson.pubsub.PublishSubscribeService.addListeners(org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.pubsub.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).3", "org.redisson.pubsub.PublishSubscribeService.psubscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec)", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1.run().2.operationComplete(io.netty.channel.ChannelFuture).1", "org.redisson.pubsub.PublishSubscribeService.addListeners(org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.pubsub.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[])", "org.redisson.client.RedisPubSubConnection.subscribe(org.redisson.client.codec.Codec,org.redisson.client.ChannelName[])", "org.redisson.client.RedisPubSubConnection.punsubscribe(org.redisson.client.ChannelName[])", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1.run().1.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.CharSequence)", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore)", "org.redisson.pubsub.PublishSubscribeService.connect(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[])", "org.redisson.pubsub.PublishSubscribeService.addListeners(org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.pubsub.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).3.run(io.netty.util.Timeout)", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore).3.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.CharSequence)", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).5.run().1.run().2.operationComplete(io.netty.channel.ChannelFuture).1.run(io.netty.util.Timeout)", "org.redisson.pubsub.PubSubConnectionEntry.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.RedisPubSubListener)", "org.redisson.pubsub.PubSubConnectionEntry.punsubscribe(org.redisson.client.ChannelName,org.redisson.client.RedisPubSubListener)", "org.redisson.pubsub.PublishSubscribeService.punsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore)", "org.redisson.pubsub.PubSubConnectionEntry.toString()"]}, {"title": "Redisson throws RedisTimeoutException before timeout has exceeded", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\nRedisson throws RedisTimeoutException after timeout has exceeded.\r\n\r\n### Actual behavior\r\n\r\nThere is a race condition where Redisson may throw RedisTimeoutException after retryInterval has exceeded but before timeout has exceeded (in a nutshell when there are bursts of commands, commands will timeout even if timeout hasn't passed if retry interval is set to 0).\r\n\r\nline 765 in CommandAsyncService seems suspect as it uses retry interval for the initial timeout value..\r\n\r\n```java\r\n     Timeout timeout = connectionManager.newTimeout(retryTimerTask, connectionManager.getConfig().getRetryInterval(), TimeUnit.MILLISECONDS);\r\n```\r\n\r\norg.redisson.client.RedisTimeoutException: Unable to send command! Try to increase 'nettyThreads' and/or connection pool size settings Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=value:50:queue:0, freeConnectionsAmount=31, freeConnectionsCounter=value:63:queue:0, freezed=false, freezeReason=null, client=[addr=redis://127.0.0.1:6379], nodeType=MASTER, firstFail=0]]], connection: RedisConnection@1164990041 [redisClient=[addr=redis://127.0.0.1:6379], channel=[id: 0xfe590eb3, L:/127.0.0.1:61299 - R:127.0.0.1/127.0.0.1:6379], command=null], current command in queue: null, command: (EVAL), params: [local insertable = false; local value = redis.call('hget', KEYS[1], ARGV[5]); local t, val;if value ..., 8, HibernateCache.Product, redisson__timeout__set:{HibernateCache.Product}, redisson__idle__set:{HibernateCache.Product}, redisson_map_cache_created:{HibernateCache.Product}, redisson_map_cache_updated:{HibernateCache.Product}, redisson__map_cache__last_access__set:{HibernateCache.Product}, redisson_map_cache_removed:{HibernateCache.Product}, {HibernateCache.Product}:redisson_options, ...] after 0 retry attempts\r\n\r\n### Steps to reproduce or test case\r\n\r\nOn faster machines you may need to create some artificial load then run the reproducer..\r\n\r\n```\r\nstress --cpu 8 --timeout 120\r\n```\r\n\r\n```java\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RMap;\r\nimport org.redisson.api.RedissonClient;\r\nimport org.redisson.client.RedisException;\r\nimport org.redisson.codec.SnappyCodec;\r\nimport org.redisson.config.Config;\r\nimport org.redisson.config.SingleServerConfig;\r\nimport org.redisson.config.TransportMode;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ForkJoinPool;\r\n\r\n/**\r\n * @author Johno Crawford (johno@sulake.com)\r\n */\r\npublic class BurstMain {\r\n\r\n    private static final ForkJoinPool forkJoinPool = new ForkJoinPool(16);\r\n\r\n    public static void main(String[] args) {\r\n        final Config config = new Config();\r\n        final SingleServerConfig singleServerConfig = config.useSingleServer();\r\n        singleServerConfig.setDatabase(3);\r\n        singleServerConfig.setTimeout(1000);\r\n        singleServerConfig.setRetryAttempts(0);\r\n        singleServerConfig.setRetryInterval(0);\r\n        //singleServerConfig.setConnectionPoolSize(8);\r\n        //singleServerConfig.setConnectionMinimumIdleSize(8);\r\n        singleServerConfig.setRetryInterval(0);\r\n        singleServerConfig.setTcpNoDelay(true);\r\n        singleServerConfig.setKeepAlive(true);\r\n        singleServerConfig.setAddress(\"redis://127.0.0.1:6379\");\r\n        config.setCodec(new SnappyCodec());\r\n        config.setTransportMode(TransportMode.NIO);\r\n        config.setReferenceEnabled(false);\r\n\r\n        final RedissonClient redissonClient = Redisson.create(config);\r\n\r\n        for (int i = 0; i < 16; i++) {\r\n            createWorker(redissonClient, i);\r\n        }\r\n\r\n        redissonClient.shutdown();\r\n    }\r\n\r\n    private static void createWorker(RedissonClient redissonClient, int id) {\r\n        CompletableFuture<Void> cf = new CompletableFuture<>();\r\n        CompletableFuture.runAsync(() -> {\r\n            final RMap<String, Room> rMap = redissonClient.getMap(\"mymap\" + id );\r\n            rMap.clear();\r\n\r\n            try {\r\n                for (int i = 0; i < 100000; i++) {\r\n                    rMap.put(\"huuhaa_\" + i, new Room(i, \"huuhaa\", 12));\r\n                    rMap.get(\"huuhaa_\" + i);\r\n                    rMap.get(\"huuhaa_\" + i);\r\n                }\r\n                cf.complete(null);\r\n            } catch (RedisException e) {\r\n                cf.completeExceptionally(e);\r\n            }\r\n        }, forkJoinPool);\r\n        cf.join();\r\n    }\r\n\r\n    private static class Room implements Serializable {\r\n\r\n        private static final long serialVersionUID = 1L;\r\n\r\n        private int id;\r\n        private String name;\r\n        private int score;\r\n\r\n        public Room() {\r\n        }\r\n\r\n        public Room(int id, String name, int score) {\r\n            this.id = id;\r\n            this.name = name;\r\n            this.score = score;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Redis version\r\n\r\nredis-5.0.5-1.fc30.x86_64 / 4.0.9\r\n\r\n### Redisson version\r\n\r\n3.10.7\r\n\r\n### Redisson configuration\r\n\r\nn/a", "url": "https://github.com/redisson/redisson/issues/2175", "user": "johnou", "labels": ["bug"], "created": "2019-06-17 08:10:30", "closed": "2019-08-01 12:10:33", "commits": {"f4611f0035fd13c170b13ff31ab082bb53237477": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 45.000277777777775, "commitsDetails": [{"commitHash": "f4611f0035fd13c170b13ff31ab082bb53237477", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["87d603c7d38bde643d51d9fdcceb85869f6a53e0"], "nameRev": "f4611f0035fd13c170b13ff31ab082bb53237477 tags/redisson-3.11.2~6", "commitMessage": "Fixed - RedisTimeoutException is thrown if retryInterval set to 0 #2175\n", "commitDateTime": "2019-08-01 15:11:28", "authoredDateTime": "2019-08-01 15:11:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean).6.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).3.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newTimeout(io.netty.util.TimerTask,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.1.cancel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f4611f0035fd13c170b13ff31ab082bb53237477"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 7, "lines": 34, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 12, "UPD": 4, "INS": 5, "MOV": 3, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).3.run(io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.newTimeout(io.netty.util.TimerTask,long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean).6.run(io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.1.cancel()", "org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean)"]}, {"title": "RStream.getInfo throws java.lang.ClassCastException", "body": "", "url": "https://github.com/redisson/redisson/issues/2174", "user": "mrniko", "labels": ["bug"], "created": "2019-06-14 19:26:54", "closed": "2019-06-17 06:49:32", "commits": {"4f78eaa7e8fae38576d558badd5f4fcdb22def32": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "4f78eaa7e8fae38576d558badd5f4fcdb22def32", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9d10cf9ab7a6db9ef7d3d46b0e961722616f6965"], "nameRev": "4f78eaa7e8fae38576d558badd5f4fcdb22def32 tags/redisson-3.11.1~16", "commitMessage": "Fixed - RStream.getInfo throws java.lang.ClassCastException #2174\n", "commitDateTime": "2019-06-17 09:49:40", "authoredDateTime": "2019-06-17 09:49:40", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/StreamInfoDecoder.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/StreamInfoMapDecoder.java", "insertions": 20, "deletions": 3, "lines": 23}, {"filePath": "redisson/src/test/java/org/redisson/RedissonStreamTest.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StreamInfoDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.StreamInfoDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 8, "DEL": 0}]}, {"spoonFilePath": "StreamInfoMapDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.StreamInfoMapDecoder", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.client.protocol.decoder.StreamInfoMapDecoder.getDecoder(int,org.redisson.client.handler.State)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.protocol.decoder.StreamInfoMapDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonStreamTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonStreamTest.testStreamInfoEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4f78eaa7e8fae38576d558badd5f4fcdb22def32"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 32, "deletions": 11, "lines": 43, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 20, "UPD": 0, "INS": 9, "MOV": 8, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol/decoder"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.StreamInfoMapDecoder", "org.redisson.client.protocol.decoder.StreamInfoMapDecoder.getDecoder(int,org.redisson.client.handler.State)", "org.redisson.client.protocol.decoder.StreamInfoMapDecoder.decode(java.util.List,org.redisson.client.handler.State)", "org.redisson.client.protocol.decoder.StreamInfoDecoder.decode(java.util.List,org.redisson.client.handler.State)"]}, {"title": "if waitTime == -1 and leaseTime != -1\uff0cmultiple threads get the lock at the same time", "body": "RedissonRedLock lock = new RedissonRedLock(lock1, lock2, lock3);\r\nboolean res = lock.tryLock(-1, 10, TimeUnit.SECONDS);\r\n\r\nif waitTime == -1  and leaseTime != -1\uff0cmultiple threads get the lock at the same time\r\n\r\nThank you", "url": "https://github.com/redisson/redisson/issues/2172", "user": "543229143", "labels": ["bug"], "created": "2019-06-14 09:54:00", "closed": "2019-06-14 14:52:37", "commits": {"d7b029327a023b993c479b77b9f489805d5e73a2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d7b029327a023b993c479b77b9f489805d5e73a2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6dd21c2f558a0d800dca62ca1c2b17e2c125609f"], "nameRev": "d7b029327a023b993c479b77b9f489805d5e73a2 tags/redisson-3.11.1~21", "commitMessage": "Fixed - RedissonMultiLock could be acquired by multiple threads if waitTime == -1 and leaseTime != -1. #2172\n", "commitDateTime": "2019-06-14 17:52:28", "authoredDateTime": "2019-06-14 17:52:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMultiLock.java", "insertions": 14, "deletions": 6, "lines": 20}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMultiLockTest.java", "insertions": 40, "deletions": 4, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMultiLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultiLock.LockState", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultiLock.LockState.tryAcquireLockAsync(java.util.ListIterator,org.redisson.misc.RPromise)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultiLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "RedissonMultiLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultiLockTest.testWaitAndLeaseTimeouts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d7b029327a023b993c479b77b9f489805d5e73a2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 6, "lines": 20, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 18, "UPD": 0, "INS": 5, "MOV": 9, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMultiLock.LockState.tryAcquireLockAsync(java.util.ListIterator,org.redisson.misc.RPromise)", "org.redisson.RedissonMultiLock.LockState", "org.redisson.RedissonMultiLock.tryLock(long,long,java.util.concurrent.TimeUnit)"]}, {"title": "The PRINCIPAL_NAME_INDEX_NAME key is not created in redis", "body": "What I want to do is depending on PRINCIPAL_NAME_INDEX_NAME in redis to control the Spring Security's maximum session management through SpringSessionBackedSessionRegistry class.\r\n\r\nThe first look at RedissonSessionRepository.save() confused me that it is an empty method which says \"session changes are stored in real-time\". In comparison, the standard RedisOperationsSessionRepository.save() of spring-session-data-redis has codes to create PRINCIPAL_NAME_INDEX_NAME. In fact, these codes are in RedisOperationsSessionRepository$RedisSession.saveDelta().\r\n\r\n### Expected behavior\r\nThe PRINCIPAL_NAME_INDEX_NAME key is created with Spring Security's principal information\r\n\r\n### Actual behavior\r\nThe PRINCIPAL_NAME_INDEX_NAME key is not created\r\n\r\n### Steps to reproduce or test case\r\nUsing Spring Boot 2.1.3/Spring Security 5.1.4/Spring Session 2.1.4, during which the Spring Session java configuration is:\r\n```java\r\n@EnableRedissonHttpSession(keyPrefix = \"xxx:\")\r\npublic class SessionConfig {\r\n    @Bean\r\n    public static ConfigureRedisAction configureRedisAction() {\r\n        return ConfigureRedisAction.NO_OP;\r\n    }\r\n}\r\n```\r\n\r\n### Redis version\r\n5.0.0 on AWS Elasticache\r\n### Redisson version\r\n3.11.0\r\n### Redisson configuration\r\n```yaml\r\nclusterServersConfig:\r\n   retryAttempts: 6\r\n   retryInterval: 20000\r\n   readMode: \"MASTER_SLAVE\"\r\n   nodeAddresses:\r\n   - \"redis://xxx.xxxxxx.clustercfg.apne1.cache.amazonaws.com:6379\"\r\n   scanInterval: 5000\r\n```", "url": "https://github.com/redisson/redisson/issues/2153", "user": "wangtora", "labels": ["bug"], "created": "2019-06-07 02:23:14", "closed": "2019-06-12 07:51:34", "commits": {"8d78bf5197076927a1f9c81defbece346a9f0359": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "e356c1e3d4b8d3787a6876a3aaf1157e953fb835": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "8d78bf5197076927a1f9c81defbece346a9f0359", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d1a8936aecc1880f48831bf55862f749bf833348"], "nameRev": "8d78bf5197076927a1f9c81defbece346a9f0359 tags/redisson-3.11.1~30", "commitMessage": "Fixed - PRINCIPAL_NAME_INDEX_NAME key is not created in redis. SessionExpiredEvent is not triggered. #2153\n", "commitDateTime": "2019-06-12 10:51:40", "authoredDateTime": "2019-06-12 10:51:40", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java", "insertions": 69, "deletions": 47, "lines": 116}, {"filePath": "redisson/src/main/java/org/redisson/spring/session/config/RedissonHttpSessionConfiguration.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.findById(java.lang.String)", "TOT": 7, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.updateExpiration()", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.deleteById(java.lang.String)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)", "TOT": 24, "UPD": 4, "INS": 8, "MOV": 8, "DEL": 4}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.delete()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.load()", "TOT": 17, "UPD": 2, "INS": 0, "MOV": 14, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.setAttribute(java.lang.String,java.lang.Object)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.removeAttribute(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.getSessionAttrNameKey(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.loadSession(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.getExpiredKey(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.getExpiredKeyPrefix()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.changeSessionId()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonHttpSessionConfiguration.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "e356c1e3d4b8d3787a6876a3aaf1157e953fb835", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8d78bf5197076927a1f9c81defbece346a9f0359"], "nameRev": "e356c1e3d4b8d3787a6876a3aaf1157e953fb835 tags/redisson-3.11.1~29", "commitMessage": "Fixed - SessionExpiredEvent is not triggered. #2153\n", "commitDateTime": "2019-06-13 15:58:57", "authoredDateTime": "2019-06-13 15:58:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.updateExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8d78bf5197076927a1f9c81defbece346a9f0359", "e356c1e3d4b8d3787a6876a3aaf1157e953fb835"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 70, "deletions": 49, "lines": 119, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 96, "UPD": 14, "INS": 30, "MOV": 37, "DEL": 15, "spoonFilesChanged": 1, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/session", "redisson/src/main/java/org/redisson/spring/session/config"], "changesInPackagesSPOON": ["org.redisson.spring.session.RedissonSessionRepository.RedissonSession.updateExpiration()", "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.delete()", "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.load()", "org.redisson.spring.session.RedissonSessionRepository.getExpiredKeyPrefix()", "org.redisson.spring.session.RedissonSessionRepository", "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.setAttribute(java.lang.String,java.lang.Object)", "org.redisson.spring.session.RedissonSessionRepository.getExpiredKey(java.lang.String)", "org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)", "org.redisson.spring.session.RedissonSessionRepository.deleteById(java.lang.String)", "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.removeAttribute(java.lang.String)", "org.redisson.spring.session.RedissonSessionRepository.RedissonSession", "org.redisson.spring.session.RedissonSessionRepository.getSessionAttrNameKey(java.lang.String)", "org.redisson.spring.session.RedissonSessionRepository.loadSession(java.lang.String)", "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.changeSessionId()", "org.redisson.spring.session.RedissonSessionRepository.findById(java.lang.String)"]}, {"title": "redisson RRemoteService.getFreeWorkers api code issue?", "body": "it seems RRemoteService.getFreeWorkers api code issue?\r\nfrom the [document](https://static.javadoc.io/org.redisson/redisson/3.10.7/org/redisson/api/RRemoteService.html#getFreeWorkers-java.lang.Class-) `RRemoteService.getFreeWorkers`, I get the follow description\r\n```java\r\nint getFreeWorkers(Class<?> remoteInterface)\r\nReturns free workers amount available for tasks\r\n```\r\n\r\ncode:\r\n```\r\n      RedissonClient client = Redisson.create(config);\r\n      RRemoteService rpc = client.getRemoteService();\r\n      System.out.println(rpc.getFreeWorkers())\r\n      System.out.println(rpc.getFreeWorkers())\r\n```\r\nprint:\r\n```\r\n100\r\n0\r\n```\r\n\r\nThen I find the source code\r\n[RedissonRemoteService.java](https://github.com/redisson/redisson/blob/redisson-3.11.0/redisson/src/main/java/org/redisson/RedissonRemoteService.java)\r\n\r\n### Expected behavior\r\n```java\r\n    @Override\r\n    public int getFreeWorkers(Class<?> remoteInterface) {\r\n        Entry entry = remoteMap.get(remoteInterface);\r\n        if (entry == null) {\r\n            return 0;\r\n        }\r\n        return entry.getCounter().get();\r\n    }\r\n```\r\n\r\n### Actual behavior\r\n```java\r\n    @Override\r\n    public int getFreeWorkers(Class<?> remoteInterface) {\r\n        Entry entry = remoteMap.remove(remoteInterface);\r\n        if (entry == null) {\r\n            return 0;\r\n        }\r\n        return entry.getCounter().get();\r\n    }\r\n```\r\n\r\nare you kidding me\uff1f\r\nwhy `remove`? it should be `get`\r\n```\r\nEntry entry = remoteMap.remove(remoteInterface);\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/2151", "user": "AWaterColorPen", "labels": ["bug"], "created": "2019-06-06 12:55:55", "closed": "2019-06-06 14:01:12", "commits": {"1000e0f39a689027254d49d788cfc6b0a9a4afe7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1000e0f39a689027254d49d788cfc6b0a9a4afe7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["be46b914827c0630a5eb7574d3c735279f622016"], "nameRev": "1000e0f39a689027254d49d788cfc6b0a9a4afe7 tags/redisson-3.11.1~37", "commitMessage": "Fixed - RRemoteService.getFreeWorkers removes registered service. #2151\n", "commitDateTime": "2019-06-06 16:59:59", "authoredDateTime": "2019-06-06 16:59:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRemoteServiceTest.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.getFreeWorkers(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRemoteServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testFreeWorkers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1000e0f39a689027254d49d788cfc6b0a9a4afe7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRemoteService.getFreeWorkers(java.lang.Class)"]}, {"title": "Redisson throws NPE when host name contains underscore in it", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\nRedisson version 3.10.7\r\nLinked with https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6587184\r\n\r\nProblem is in RedisClient.java,  line 172:\r\n```java\r\n        byte[] addr = NetUtil.createByteArrayFromIpAddressString(uri.getHost());\r\n```\r\n`uri.getHost()` is returning null, so validation of address inside netty is throwing NPE when it tries to get length of the string that is null.\r\n\r\nI'm providing the stack trace:\r\n```\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.lang.NullPointerException\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)\r\n\t... 42 more\r\nCaused by: java.lang.NullPointerException\r\n\tat io.netty.util.NetUtil.isValidIpV4Address(NetUtil.java:648)\r\n\tat io.netty.util.NetUtil.createByteArrayFromIpAddressString(NetUtil.java:368)\r\n\tat org.redisson.client.RedisClient.resolveAddr(RedisClient.java:172)\r\n\tat org.redisson.connection.MasterSlaveEntry.setupMasterEntry(MasterSlaveEntry.java:123)\r\n\tat org.redisson.connection.MasterSlaveEntry.setupMasterEntry(MasterSlaveEntry.java:118)\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.initSingleEntry(MasterSlaveConnectionManager.java:345)\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.<init>(MasterSlaveConnectionManager.java:163)\r\n\tat org.redisson.connection.SingleConnectionManager.<init>(SingleConnectionManager.java:34)\r\n\tat org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:229)\r\n\tat org.redisson.Redisson.<init>(Redisson.java:119)\r\n\tat org.redisson.Redisson.create(Redisson.java:159)\r\n\tat net.icpweb.messaging.broker.configuration.MessagingAutoConfiguration.redissonClient(MessagingAutoConfiguration.java:114)\r\n\tat net.icpweb.messaging.broker.configuration.MessagingAutoConfiguration$$EnhancerBySpringCGLIB$$30111eb4.CGLIB$redissonClient$1(<generated>)\r\n\tat net.icpweb.messaging.broker.configuration.MessagingAutoConfiguration$$EnhancerBySpringCGLIB$$30111eb4$$FastClassBySpringCGLIB$$ba41b375.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)\r\n\tat net.icpweb.messaging.broker.configuration.MessagingAutoConfiguration$$EnhancerBySpringCGLIB$$30111eb4.redissonClient(<generated>)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\t... 43 more\r\n\r\n```\r\n\r\nConfiguration is YAML based:\r\n```\r\nsingleServerConfig:\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  subscriptionsPerConnection: 5\r\n  sslEnableEndpointIdentification: true\r\n  sslProvider: \"JDK\"\r\n  pingConnectionInterval: 0\r\n  keepAlive: false\r\n  tcpNoDelay: false\r\n  address: \"redis_test:3809\"\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  connectionMinimumIdleSize: 32\r\n  connectionPoolSize: 64\r\n  database: 0\r\n  dnsMonitoringInterval: 5000\r\nthreads: 16\r\nnettyThreads: 32\r\nreferenceEnabled: true\r\ntransportMode: \"NIO\"\r\nlockWatchdogTimeout: 30000\r\nkeepPubSubOrder: true\r\ndecodeInExecutor: false\r\nuseScriptCache: false\r\nminCleanUpDelay: 5\r\nmaxCleanUpDelay: 1800\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/2150", "user": "nikolajovickg", "labels": ["bug"], "created": "2019-06-06 11:30:36", "closed": "2019-06-11 09:51:25", "commits": {"0ce487f08d68fe4cde21355a9394d1967bc38d32": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "0ce487f08d68fe4cde21355a9394d1967bc38d32", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b2fc908615cae1b95fc906161e504ef4049233b6"], "nameRev": "0ce487f08d68fe4cde21355a9394d1967bc38d32 tags/redisson-3.11.1~33", "commitMessage": "Fixed - host name containing underscore cause NPE. Illegal reflective access by org.redisson.misc.URIBuilder warning removed #2150 #2029\n", "commitDateTime": "2019-06-11 12:50:27", "authoredDateTime": "2019-06-11 12:50:27", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedisNodes.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisClientConfig.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisRedirectException.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 44, "deletions": 41, "lines": 85}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterNodeInfo.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterPartition.java", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "redisson/src/main/java/org/redisson/config/ClusterServersConfig.java", "insertions": 5, "deletions": 9, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/config/Config.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/config/ConfigSupport.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "redisson/src/main/java/org/redisson/config/MasterSlaveServersConfig.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "redisson/src/main/java/org/redisson/config/ReplicatedServersConfig.java", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/config/SentinelServersConfig.java", "insertions": 5, "deletions": 9, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/config/SingleServerConfig.java", "insertions": 4, "deletions": 15, "lines": 19}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/connection/DNSMonitor.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 19, "deletions": 17, "lines": 36}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 22, "deletions": 22, "lines": 44}, {"filePath": "redisson/src/main/java/org/redisson/connection/NodeSource.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 30, "deletions": 29, "lines": 59}, {"filePath": "redisson/src/main/java/org/redisson/connection/SingleEntry.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 8, "deletions": 9, "lines": 17}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/WeightedRoundRobinBalancer.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/misc/RedisURI.java", "insertions": 127, "deletions": 0, "lines": 127}, {"filePath": "redisson/src/main/java/org/redisson/misc/URIBuilder.java", "insertions": 0, "deletions": 90, "lines": 90}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "rateLimiter does not work,since version3.7.2", "body": "here is my code:\r\n ==========================================================\r\n         public @interface RateLimiter {\r\n                   int limit() default 5;//\u653e\u884c\u6570\u91cf,5\u4e2a\r\n                  int timeout() default 1;//\u9650\u6d41\u65f6\u95f4\u95f4\u9694\uff0c\u9ed8\u8ba41\u79d2\r\n                  String rateKey() default \"\";//\u9650\u6d41\u5668\uff0c\u81ea\u5b9a\u4e49key\r\n                String timeUnit() default \"SECONDS\";//\u9650\u6d41\u5668\uff0c\u9ed8\u8ba4\u9650\u6d41\u65f6\u95f4\u5355\u4f4d\r\n         }        \r\n ==========================================================\r\n\t@ApiOperation(value = \"\u6d4b\u8bd5\u683c\u5f0f\u5316\u663e\u793a\", notes = \"\u6d4b\u8bd5\u683c\u5f0f\u5316\u663e\u793a\", httpMethod = \"GET\")\r\n\t@RequestMapping(value = \"/formatCode\", method = RequestMethod.GET)\r\n\t@RateLimiter(limit = 1,timeUnit=\u201cSECONDS\u201d,timeout =5,rateKey=\"formatCode\")\r\n        public String formatCode(HttpServletRequest req) {\r\n\t\tSystem.err.println(\"formatJson\");\r\n\t\treturn \"format_code\";\r\n\t}\r\n ==========================================================\r\n  public static boolean tryAcquire(RedissonClient redisClient,\r\n                 String rateKey,long permits,long \r\n                 timeout,String timeUnit) {\r\n\t          RRateLimiter rateLimiter = redisClient.getRateLimiter(rateKey);\r\n\t\t  //\u521d\u59cb\u5316,\u6700\u5927\u6d41\u901f = \u6bcf1\u79d2\u949f\u4ea7\u751f10\u4e2a\u4ee4\u724c\r\n                 rateLimiter.trySetRate(RateType.OVERALL, permits, timeout, \r\n                          RateIntervalUnit.SECONDS);//1\u79d2permits\u4e2atoken\r\n\t\treturn rateLimiter.tryAcquire(1,0, TimeUnit.SECONDS);//\u95f4\u9694\u4e00\u79d2\uff0c\u5c1d\u8bd5\u4e00\u6b21\r\n}\r\n ==========================================================\r\npublic class RateLimiterInterceptor extends HandlerInterceptorAdapter {\r\n\t\r\n\tprivate Logger logger = LoggerFactory.getLogger(RateLimiterInterceptor.class);\r\n\t\r\n\t@Autowired\r\n        private RedissonClient redisClient;\r\n\r\n\t@Override\r\n\tpublic boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)  {\r\n\t\t\tif(handler instanceof HandlerMethod){\r\n\t\t\t\t HandlerMethod handlerMethod = (HandlerMethod) handler;\r\n\t\t         Method method = handlerMethod.getMethod();\r\n\t\t         RateLimiter rateLimiter = method.getAnnotation(RateLimiter.class);\r\n\t\t         if (rateLimiter != null) {\r\n\t\t             int limit = ObjectUtils.isEmpty(rateLimiter.limit())?RedisRateLimiter.REDISSON_RATE_LIMITER_PERMITS:rateLimiter.limit();\r\n\t\t             long timeout = ObjectUtils.isEmpty(rateLimiter.timeout())?RedisRateLimiter.REDISSON_RATE_LIMITER_TIMEOUT:rateLimiter.timeout();\r\n\t\t             String rateKey=StringUtils.isEmpty(rateLimiter.rateKey())?request.getRequestURI():rateLimiter.rateKey();//key\u4e3a\u7a7a\u5224\u65ad\r\n\t\t             rateKey=RedisRateLimiter.REDISSON_RATE_LIMITER_KEY+rateKey;\r\n\t\t             String timeUnit=ObjectUtils.isEmpty(rateLimiter.timeUnit())?RedisRateLimiter.REDISSON_RATE_LIMITER_TIMEUNIT:rateLimiter.timeUnit();\r\n\t\t             Boolean isAllow=RedisRateLimiter.tryAcquire(redisClient, rateKey, limit, timeout, timeUnit);\r\n\t\t             if(!isAllow){\r\n\t\t            \t logger.warn(\"\u5f88\u62b1\u6b49\uff0c\u670d\u52a1\u5668\u7e41\u5fd9\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5!\");\r\n\t\t            \t throw new RRException(\"\u670d\u52a1\u5668\u7e41\u5fd9\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5!\", HttpStatus.SERVICE_UNAVAILABLE.value());\r\n\t\t             }\r\n\t\t         }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n}\t\t\r\n ==========================================================\r\n  when frequent calls  formatCode,this config rateLimiter.tryAcquire(1,0, TimeUnit.SECONDS);\r\ndoes not work normly above the version 3.7.2,here is the doc\r\n \r\ncurrent version:3.7.2\r\n   /**\r\n     * Acquires the given number of <code>permits</code> only if all are available\r\n     * within the given waiting time.\r\n     *\r\n     * <p>Acquires the given number of permits, if all are available and returns immediately,\r\n     * with the value {@code true}, reducing the number of available permits by one.\r\n     *\r\n     * <p>If no permit is available then the current thread becomes\r\n     * disabled for thread scheduling purposes and lies dormant until\r\n     * the specified waiting time elapses.\r\n     *\r\n     * <p>If a permits is acquired then the value {@code true} is returned.\r\n     *\r\n     * <p>If the specified waiting time elapses then the value {@code false}\r\n     * is returned.  If the time is less than or equal to zero, the method\r\n     * will not wait at all.\r\n     *\r\n     * @param permits amount\r\n     * @param timeout the maximum time to wait for a permit\r\n     * @param unit the time unit of the {@code timeout} argument\r\n     * @return {@code true} if a permit was acquired and {@code false}\r\n     *         if the waiting time elapsed before a permit was acquired\r\n     */\r\n    boolean tryAcquire(long permits, long timeout, TimeUnit unit);\r\n\r\nAll code can see  (https://gitee.com/bootstrap2table/boot_master/tree/feature/boot-simple),\r\nneed help to fixed this bug,thanks!\r\n \r\n  \r\n          \r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2149", "user": "apple987", "labels": ["bug"], "created": "2019-06-06 06:29:06", "closed": "2019-06-06 08:45:55", "commits": {"be46b914827c0630a5eb7574d3c735279f622016": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "be46b914827c0630a5eb7574d3c735279f622016", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2dc424c665c6d494ee00b3ff01d110c9e8f9c00d"], "nameRev": "be46b914827c0630a5eb7574d3c735279f622016 tags/redisson-3.11.1~38", "commitMessage": "Fixed - zero timeout isn't respected in RRateLimiter.tryAcquire method. #2149\n", "commitDateTime": "2019-06-06 11:45:57", "authoredDateTime": "2019-06-06 11:45:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRateLimiter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRateLimiterTest.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRateLimiter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiter.tryAcquireAsync(long,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRateLimiterTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiterTest.testZeroTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["be46b914827c0630a5eb7574d3c735279f622016"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRateLimiter.tryAcquireAsync(long,long,java.util.concurrent.TimeUnit)"]}, {"title": "Non thread-safe initialization in RedissonObjectBuilder ", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nSpring bean created successfully\r\n\r\n\r\n### Actual behavior\r\n```\r\nCaused by: java.lang.NullPointerException: null\r\n    at org.redisson.liveobject.core.RedissonObjectBuilder.fillCodecMethods(RedissonObjectBuilder.java:192)\r\n    at org.redisson.liveobject.core.RedissonObjectBuilder.<init>(RedissonObjectBuilder.java:108)\r\n    at org.redisson.command.CommandAsyncService.enableRedissonReferenceSupport(CommandAsyncService.java:155)\r\n    at org.redisson.command.CommandAsyncService.enableRedissonReferenceSupport(CommandAsyncService.java:124)\r\n    at org.redisson.Redisson.enableRedissonReferenceSupport(Redisson.java:701)\r\n    at org.redisson.Redisson.create(Redisson.java:166)\r\n    at com.canva.embed.server.RpcLauncherConfiguration.embedRedisClient(RpcLauncherConfiguration.java:192)\r\n    at com.canva.embed.server.RpcLauncherConfiguration$$EnhancerBySpringCGLIB$$7265447b.CGLIB$embedRedisClient$5(<generated>)\r\n    at com.canva.embed.server.RpcLauncherConfiguration$$EnhancerBySpringCGLIB$$7265447b$$FastClassBySpringCGLIB$$851420f7.invoke(<generated>)\r\n    at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)\r\n    at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)\r\n    at com.canva.embed.server.RpcLauncherConfiguration$$EnhancerBySpringCGLIB$$7265447b.embedRedisClient(<generated>)\r\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.base/java.lang.reflect.Method.invoke(Method.java:564)\r\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n```\r\n\r\n\r\n### Steps to reproduce or test case\r\nWe have several spring beans that initialise in prallel\r\n\r\n### Redis version\r\n?\r\n\r\n### Redisson version\r\n3.10.1\r\n\r\n### Redisson configuration\r\n```\r\n@Bean\r\n  RedissonClient embedRedisClient( //\r\n      @Value(\"${embed.cache.nodes}\") String nodes, //\r\n      @Value(\"${embed.cache.connections}\") int connections, //\r\n      @Value(\"${embed.cache.command.retry.attempts}\") int retryAttempts, //\r\n      @Value(\"${embed.cache.command.retry.interval.ms}\") int retryInterval, //\r\n      @Value(\"${embed.cache.command.server.timeout.ms}\") int timeout\r\n  ) {\r\n    String[] splitNodes = nodes.split(\"\\\\s*,\\\\s*\");\r\n    Preconditions.checkArgument(splitNodes.length > 0);\r\n\r\n    int maxConnections = connections * 2;\r\n\r\n    Config config = new Config();\r\n    if (splitNodes.length == 1) {\r\n      config.useSingleServer()\r\n          .setAddress(splitNodes[0])\r\n          .setConnectionPoolSize(connections)\r\n          .setRetryAttempts(retryAttempts)\r\n          .setRetryInterval(retryInterval)\r\n          .setTimeout(timeout);\r\n    } else {\r\n      config.useReplicatedServers() //\r\n          .addNodeAddress(splitNodes)\r\n          .setMasterConnectionMinimumIdleSize(connections)\r\n          .setMasterConnectionPoolSize(maxConnections)\r\n          .setSlaveConnectionMinimumIdleSize(connections)\r\n          .setSlaveConnectionPoolSize(maxConnections)\r\n          .setRetryAttempts(retryAttempts)\r\n          .setRetryInterval(retryInterval)\r\n          .setTimeout(timeout);\r\n    }\r\n    return Redisson.create(config);\r\n  }\r\n```", "url": "https://github.com/redisson/redisson/issues/2147", "user": "mskonovalov", "labels": ["bug"], "created": "2019-06-05 07:45:58", "closed": "2019-06-05 09:43:34", "commits": {"6189c1bf717122049dab387cd8f32b1721d6997b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6189c1bf717122049dab387cd8f32b1721d6997b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["25914b000cab1f588aa9f72350933011d10d92e2"], "nameRev": "6189c1bf717122049dab387cd8f32b1721d6997b tags/redisson-3.11.1~42", "commitMessage": "Fixed - RedissonObjectBuilder.REFERENCES map isn't filled once. #2147\n", "commitDateTime": "2019-06-05 12:42:04", "authoredDateTime": "2019-06-05 12:42:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/liveobject/core/RedissonObjectBuilder.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonObjectBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.core.RedissonObjectBuilder", "TOT": 13, "UPD": 0, "INS": 3, "MOV": 7, "DEL": 3}, {"spoonMethodName": "org.redisson.liveobject.core.RedissonObjectBuilder.fillCodecMethods(java.util.Map,java.lang.Class,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6189c1bf717122049dab387cd8f32b1721d6997b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 6, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 14, "UPD": 0, "INS": 4, "MOV": 7, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/liveobject/core"], "changesInPackagesSPOON": ["org.redisson.liveobject.core.RedissonObjectBuilder", "org.redisson.liveobject.core.RedissonObjectBuilder.fillCodecMethods(java.util.Map,java.lang.Class,java.lang.Class)"]}, {"title": "Question about design of readWriteLock", "body": "RedissonReadLock.class#tryLockInnerAsync\r\n```\r\nredis.call('pexpire', KEYS[1], ARGV[1]); \r\n```\r\nIf thread1 set expire 5000ms ,and then thread2 set expire 1000ms, then thread2 shutdown. \r\nIn this case,thread1 will lose its lock.\r\nI think we can change code like this\r\n```\r\nlocal remainTime = redis.call('pttl', KEYS[1])\r\nredis.call('pexpire', KEYS[1], math.max(remainTime,ARGV[1])); \r\n```\r\nAnd the rwlock_timeout key will be not required.\r\n\r\nAm I right? Where is the problem?\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2144", "user": "Aimwhipy", "labels": ["bug"], "created": "2019-06-03 11:49:22", "closed": "2019-06-05 07:10:31", "commits": {"25914b000cab1f588aa9f72350933011d10d92e2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "25914b000cab1f588aa9f72350933011d10d92e2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9232aa6dba46f7af503348f7d3d7c882bd3febf3"], "nameRev": "25914b000cab1f588aa9f72350933011d10d92e2 tags/redisson-3.11.1~43", "commitMessage": "Fixed - RReadWriteLock.readLock doesn't take in account expiration date of the last acquired read lock. (thanks to Aimwhipy) #2144\n", "commitDateTime": "2019-06-05 10:09:57", "authoredDateTime": "2019-06-05 10:09:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonReadLock.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReadWriteLockTest.java", "insertions": 43, "deletions": 0, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonReadLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonReadWriteLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockLeaseTimeoutDiffThreadsWRR()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockExpirationRenewal()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockLeaseTimeoutDiffThreadsRRW()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteReadReentrancy()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteRead()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["25914b000cab1f588aa9f72350933011d10d92e2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonReadLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)"]}, {"title": "Redisson warning \uff0credis sentinel node added and down frequently\uff01", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n4.0.6\r\n### Redisson version\r\n3.11.0\r\n### Redisson configuration\r\n\r\n![image](https://user-images.githubusercontent.com/9379331/58798170-7f14c600-8634-11e9-861c-0e6d410a37c4.png)\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2143", "user": "fanchangjifen", "labels": ["bug"], "created": "2019-06-03 11:19:51", "closed": "2019-06-21 11:34:41", "commits": {"b357e62a5dd0816fd9a03405be256ffbe335e67d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "b357e62a5dd0816fd9a03405be256ffbe335e67d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["58236688af9c7f318b029b87d92ec7c7d60fa482"], "nameRev": "b357e62a5dd0816fd9a03405be256ffbe335e67d tags/redisson-3.11.1~8", "commitMessage": "Fixed - dead Sentinel appears in logs as node added and down. #2143\n", "commitDateTime": "2019-06-21 14:34:49", "authoredDateTime": "2019-06-21 14:34:49", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 21, "deletions": 3, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.config.MasterSlaveServersConfig)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b357e62a5dd0816fd9a03405be256ffbe335e67d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 3, "lines": 24, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.config.MasterSlaveServersConfig)"]}, {"title": "ClassNotFoundException thrown during SeriazliationCodec.decode", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nNo ClassNotFoundException to occur\r\n\r\n### Actual behavior\r\nClassNotFoundException occur during object deserialization\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.11.1-SNAPSHOT\r\n\r\n### Redisson configuration\r\n```\r\n    <ResourceLink name=\"session/redisson\"\r\n                  global=\"session/redisson\"\r\n\t\t          type=\"org.redisson.api.RedissonClient\" />\r\n\t\t\t\t  \r\n    <Manager className=\"org.redisson.tomcat.JndiRedissonSessionManager\"\r\n         readMode=\"REDIS\"\r\n\t\t updateMode=\"DEFAULT\"\r\n         jndiName=\"session/redisson\" />\r\n\r\n```", "url": "https://github.com/redisson/redisson/issues/2136", "user": "jchobantonov", "labels": ["bug"], "created": "2019-05-29 17:14:40", "closed": "2019-06-13 18:41:20", "commits": {"9e5087cf5e50273201fc9ca76c56b28e1556809d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "9e5087cf5e50273201fc9ca76c56b28e1556809d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0ce487f08d68fe4cde21355a9394d1967bc38d32", "f62f028e0822ca7113f7c80342915d1b2e11abfc"], "nameRev": "9e5087cf5e50273201fc9ca76c56b28e1556809d tags/redisson-3.11.1~32", "commitMessage": "Merge pull request #2138 from jchobantonov/master\n\nresolves issue: ClassNotFoundException thrown during SeriazliationCodec.decode #2136", "commitDateTime": "2019-06-11 12:56:41", "authoredDateTime": "2019-06-11 12:56:41", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/SerializationCodec.java", "insertions": 15, "deletions": 7, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 12, "deletions": 3, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SerializationCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.SerializationCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.decode(org.redisson.executor.params.TaskParameters)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RedissonReactiveSubscription ", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\nredisson-spring-data \r\nRedissonReactiveSubscription\r\n\r\nprivate final AtomicReference<Flux<Message<ByteBuffer, ByteBuffer>>> flux = new AtomicReference<>();\r\n\r\nthe document of AtomicReference  is Creates a new AtomicReference with null initial value.\r\n\r\n\r\n    @Override\r\n    public Flux<Message<ByteBuffer, ByteBuffer>> receive() {\r\n        if (flux.get() == null) {\r\n            return flux.get();\r\n        }\r\n    }\r\n\r\nthis well always return null\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2126", "user": "Kookey", "labels": ["bug"], "created": "2019-05-24 08:24:34", "closed": "2019-05-25 06:33:28", "commits": {"008756ec9488f9771bf0ab7833cc880a1a67e6b9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "008756ec9488f9771bf0ab7833cc880a1a67e6b9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5207d920d89c98a647064195b29712342e20e5f2"], "nameRev": "008756ec9488f9771bf0ab7833cc880a1a67e6b9 tags/redisson-3.11.0~8", "commitMessage": "Fixed - redisson-spring-data ReactiveSubscription.receive() method throws NPE. #2126\n", "commitDateTime": "2019-05-25 09:33:17", "authoredDateTime": "2019-05-25 09:33:17", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonReactiveSubscription.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/test/java/org/redisson/spring/data/connection/RedissonSubscribeReactiveTest.java", "insertions": 64, "deletions": 0, "lines": 64}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonReactiveSubscription.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonReactiveSubscription.receive()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSubscribeReactiveTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonSubscribeReactiveTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["008756ec9488f9771bf0ab7833cc880a1a67e6b9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonReactiveSubscription.receive()"]}, {"title": "RStream.readGroup doesn't work properly with TypedJsonJacksonCodec", "body": "### Expected behavior\r\n`TypedJsonJacksonCodec` should decode messages within stream to specific types.\r\n### Actual behavior\r\nJSON is decoded to `LinkedHashMap` rather than to specific type.\r\n\r\n### Steps to reproduce or test case\r\n```\r\nRStream<String, Message> stream = redissonClient.getStream(\"stream\", new TypedJsonJacksonCodec(String.class, Message.class));\r\nMap<StreamMessageId, Map<String, Message>> messageMap = stream.readGroup(\"group\", \"consumer\");\r\n\r\nmessageMap.forEach((key, value) -> {\r\n    value.forEach((k, v) -> {\r\n        log.info(\"Class: {}\", v.getClass()); // prints LinkedHashMap\r\n        v.getValue(); // ClassCastException\r\n    });\r\n});\r\n```\r\n\r\n\r\n### Redis version\r\n5.0\r\n### Redisson version\r\n3.10.7\r\n### Redisson configuration\r\n```\r\nConfig redisConfig = new Config();\r\nredisConfig.useSingleServer().setAddress(url);\r\nRedissonReactiveClient redissonClient = Redisson.create(redisConfig);\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/2107", "user": "StasKolodyuk", "labels": ["bug"], "created": "2019-05-14 21:09:54", "closed": "2019-08-16 13:22:15", "commits": {"b3e3215f2ec630601e81e88fea21c2ad66741813": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 93.00027777777778, "commitsDetails": [{"commitHash": "b3e3215f2ec630601e81e88fea21c2ad66741813", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3d3d429922b824fcce7f907e7e9f189a4dceb900"], "nameRev": "b3e3215f2ec630601e81e88fea21c2ad66741813 tags/redisson-3.11.3~23", "commitMessage": "Fixed - RStream.readGroup method doesn't work properly with TypedJsonJacksonCodec #2107\n", "commitDateTime": "2019-08-16 16:22:38", "authoredDateTime": "2019-08-16 16:22:38", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 9, "deletions": 9, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 9, "UPD": 6, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b3e3215f2ec630601e81e88fea21c2ad66741813"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 9, "lines": 18, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 6, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol"], "changesInPackagesSPOON": ["org.redisson.client.protocol"]}, {"title": "HttpSessionListener#sessionDestoyed isn't invoked (Tomcat 8)", "body": "### Description\r\nI have two nodes:\r\n* node 1 -> N1\r\n* node 2 -> N2\r\n\r\n### Expected behaviour\r\nsessionDestroyed event must be handled by both nodes\r\n\r\n### Actual behaviour\r\nsessionDestroyed event handled only by N1\r\n\r\n### Steps to reproduce or test case\r\n**WHEN** client log in N1\r\n**THEN** N1 and N2 receive sessionCreated event\r\n**AND** service invalidate session (on N1)\r\n**THEN** sessionDestroyed event handle only N1\r\n\r\n### Redis version\r\nRedis server v=3.2.6 sha=00000000:0 malloc=jemalloc-4.0.3 bits=64 build=6135068212e7fc88\r\n\r\n### Redisson version\r\n3.10.7\r\n\r\n### Redisson configuration\r\nredisson.conf\r\n```json\r\n{\r\n\t\"singleServerConfig\": {\r\n\t\t\"idleConnectionTimeout\": 10000,\r\n\t\t\"pingTimeout\": 1000,\r\n\t\t\"connectTimeout\": 10000,\r\n\t\t\"timeout\": 3000,\r\n\t\t\"retryAttempts\": 3,\r\n\t\t\"retryInterval\": 1500,\r\n\t\t\"password\": null,\r\n\t\t\"subscriptionsPerConnection\": 5,\r\n\t\t\"clientName\": null,\r\n\t\t\"address\": \"redis://some-ip\",\r\n\t\t\"subscriptionConnectionMinimumIdleSize\": 1,\r\n\t\t\"subscriptionConnectionPoolSize\": 50,\r\n\t\t\"connectionMinimumIdleSize\": 32,\r\n\t\t\"connectionPoolSize\": 64,\r\n\t\t\"database\": 0,\r\n\t\t\"dnsMonitoringInterval\": 5000\r\n\t},\r\n\t\"threads\": 0,\r\n\t\"nettyThreads\": 0,\r\n\t\"codec\": {\r\n\t\t\"class\": \"org.redisson.codec.SerializationCodec\"\r\n\t},\r\n\t\"transportMode\": \"NIO\"\r\n}\r\n```\r\n\r\ncontext.xml\r\n```xml\r\n<Manager className=\"org.redisson.tomcat.RedissonSessionManager\"\r\n          configPath=\"${catalina.base}/conf/redisson.conf\" readMode=\"MEMORY\" updateMode=\"DEFAULT\" broadcastSessionEvents=\"true\"/>\r\n```", "url": "https://github.com/redisson/redisson/issues/2104", "user": "sibmaks", "labels": ["bug"], "created": "2019-05-14 05:36:50", "closed": "2019-06-05 11:56:35", "commits": {"b10e8c559cdfe44d6d56a38ae1bb25e469aef550": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "9f886d6e5e5061a846c3eef498a387e29a3bd5ba": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "2dc424c665c6d494ee00b3ff01d110c9e8f9c00d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "b10e8c559cdfe44d6d56a38ae1bb25e469aef550", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["68286c26837235f2b5bae47683b85d893f1b8f02"], "nameRev": "b10e8c559cdfe44d6d56a38ae1bb25e469aef550 tags/redisson-3.11.0~5", "commitMessage": "Fixed - HttpSessionListener#sessionDestoyed isn't invoked if session wasn't loaded by Tomcat instance. #2104\n", "commitDateTime": "2019-05-27 16:47:12", "authoredDateTime": "2019-05-27 16:47:12", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 18, "deletions": 5, "lines": 23}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 19, "deletions": 7, "lines": 26}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 18, "deletions": 6, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.delete()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.createEmptySession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().2.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManagerTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.testHttpSessionListener()", "TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9f886d6e5e5061a846c3eef498a387e29a3bd5ba", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0b9f660d06dbe8d97585ae1b4a69a5462ed0fb9c"], "nameRev": "9f886d6e5e5061a846c3eef498a387e29a3bd5ba tags/redisson-3.11.1~46", "commitMessage": "Fixed - Tomcat Session doesn't expire if broadcastSessionEvents = true #2104\n", "commitDateTime": "2019-06-03 19:24:36", "authoredDateTime": "2019-06-03 19:24:36", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 18, "deletions": 2, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.expireSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.load(java.util.Map)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.delete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2dc424c665c6d494ee00b3ff01d110c9e8f9c00d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ad03cba3fa097a5b77473da3765b700c1b878a64"], "nameRev": "2dc424c665c6d494ee00b3ff01d110c9e8f9c00d tags/redisson-3.11.1~39", "commitMessage": "Fixed - Tomcat Session doesn't expire if broadcastSessionEvents = true #2104\n", "commitDateTime": "2019-06-05 14:45:28", "authoredDateTime": "2019-06-05 14:45:28", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.delete()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.getNotifiedNodes(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().2.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b10e8c559cdfe44d6d56a38ae1bb25e469aef550", "9f886d6e5e5061a846c3eef498a387e29a3bd5ba"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 180, "deletions": 39, "lines": 219, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 21, "UPD": 1, "INS": 17, "MOV": 2, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession", "org.redisson.tomcat.RedissonSession.delete()", "org.redisson.tomcat.RedissonSessionManager.startInternal().2.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "org.redisson.tomcat.RedissonSession.expireSession()", "org.redisson.tomcat.RedissonSession.load(java.util.Map)", "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String,boolean)", "org.redisson.tomcat.RedissonSessionManager.createEmptySession()", "org.redisson.tomcat.RedissonSession.save()"]}, {"title": "Get data sanity after RBuckets get error.", "body": "Because of some errors, Our redis mixes some different serialized data.\r\nEx: \r\nSome data use StringCodec. Some Data use JsonJacksonCodec.\r\n\r\nIn this case, when using mget get data, if the <n-1 of result of mget have a decode error, then the ByteBuf will not be cleaned up, causing the next command to get the wrong data.\r\n\r\n\r\n\r\n### Expected behavior\r\ngetStringValue(\"test3\") return test3\r\n### Actual behavior\r\ngetStringValue(\"test3\") return test1\r\n### Steps to reproduce or test case\r\n```\r\nprivate Redisson redissonClient;\r\n\r\n\t@Before\r\n\tpublic void setUp() {\r\n\t\tConfig config = new Config();\r\n\t\tconfig.setThreads(1);\r\n\t\tconfig.setNettyThreads(1);\r\n\t\tconfig.useSingleServer()\r\n\t\t\t\t.setConnectionMinimumIdleSize(1)\r\n\t\t\t\t.setConnectionPoolSize(1)\r\n\t\t\t\t.setAddress(\"redis://127.0.0.1:6379\");\r\n\t\tredissonClient = (Redisson) Redisson.create(config);\r\n\t}\r\n\r\n\r\n\t@Test\r\n\tpublic void test_sanity_data() throws Exception {\r\n\t\tsetJSONValue(\"test1\", new Foo(\"test1\"));\r\n\t\tsetStringValue(\"test2\", new Foo(\"test2\"));\r\n\t\tsetJSONValue(\"test3\", new Foo(\"test3\"));\r\n\t\ttry {\r\n\t\t\tRBuckets buckets = redissonClient.getBuckets(new JsonJacksonCodec());\r\n\t\t\tbuckets.get(\"test2\", \"test1\");\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tSystem.out.println(getStringValue(\"test3\")); // will result test1\r\n\t}\r\n\r\n\tpublic void setJSONValue(String key, Object t) {\r\n\t\tRBucket<Object> test1 = redissonClient.getBucket(key, new JsonJacksonCodec());\r\n\t\ttest1.set(t);\r\n\t}\r\n\r\n\tpublic void setStringValue(String key, Object t) {\r\n\t\tRBucket<Object> test1 = redissonClient.getBucket(key, new StringCodec());\r\n\t\ttest1.set(t);\r\n\t}\r\n\r\n\r\n\tpublic Object getStringValue(String key) {\r\n\t\tRBucket<Object> test1 = redissonClient.getBucket(key, new JsonJacksonCodec());\r\n\t\treturn test1.get();\r\n\t}\r\n\r\n\t@AllArgsConstructor\r\n\t@NoArgsConstructor\r\n\t@Data\r\n\tstatic class Foo {\r\n\t\tString bar;\r\n\t}\r\n\r\n\t@After\r\n\tpublic void clear() {\r\n\t\tredissonClient.shutdown();\r\n\t}\r\n```\r\n### Redis version\r\n4.0.10\r\n### Redisson version\r\n3.10.7\r\n### Redisson configuration\r\n```\r\nconfig.setThreads(1);\r\nconfig.setNettyThreads(1);\r\nconfig.useSingleServer()\r\n\t.setConnectionMinimumIdleSize(1)\r\n\t.setConnectionPoolSize(1)\r\n\t.setAddress(\"redis://127.0.0.1:6379\");\r\n```\r\n\r\n\r\n### \r\n\r\n```\r\n private void decodeList(ByteBuf in, CommandData<Object, Object> data, List<Object> parts,\r\n            Channel channel, long size, List<Object> respParts, boolean skipConvertor, List<CommandData<?, ?>> commandsData)\r\n                    throws IOException {\r\n...\r\n// when  error take place ,  shall we skip the data or catch the exception?\r\nfor (int i = respParts.size(); i < size; i++) {\r\n       decode(in, data, respParts, channel, skipConvertor, null);\r\n}\r\n...\r\n```", "url": "https://github.com/redisson/redisson/issues/2098", "user": "mm23504570", "labels": ["bug"], "created": "2019-05-09 17:10:48", "closed": "2019-05-20 14:34:36", "commits": {"18a6cea368804b4e22fd48f00e33cb4131d6ba6c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "18a6cea368804b4e22fd48f00e33cb4131d6ba6c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["09c83745ada76d73495bc78ac1de5dda66d04de9"], "nameRev": "18a6cea368804b4e22fd48f00e33cb4131d6ba6c tags/redisson-3.11.0~12", "commitMessage": "Fixed - Redis response isn't fully consumed after decoding error. #2098\n", "commitDateTime": "2019-05-20 17:33:53", "authoredDateTime": "2019-05-20 17:33:53", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 26, "deletions": 10, "lines": 36}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/CommandsData.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 42, "deletions": 0, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.skipCommand(io.netty.buffer.ByteBuf)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "CommandsData.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.CommandsData", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.sendCommand(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testNextResponseAfterDecoderError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.setJSONValue(org.redisson.api.RedissonClient,java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.setStringValue(org.redisson.api.RedissonClient,java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.getStringValue(org.redisson.api.RedissonClient,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["18a6cea368804b4e22fd48f00e33cb4131d6ba6c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 15, "lines": 42, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 22, "UPD": 1, "INS": 12, "MOV": 8, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.protocol.CommandsData", "org.redisson.command.CommandBatchService.sendCommand(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.Channel,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "org.redisson.client.handler.CommandDecoder.skipCommand(io.netty.buffer.ByteBuf)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"]}, {"title": "is this is a bug ? release() method in org.redisson.pubsub.AsyncSemaphore.java ", "body": "**org.redisson.pubsub.AsyncSemaphore.java** \r\n\r\n```java\r\npublic void release() {\r\n    Entry entryToAcquire = null;\r\n    \r\n    synchronized (this) {\r\n        counter++;\r\n        Iterator<Entry> iter = listeners.iterator();\r\n        if (iter.hasNext()) {\r\n            Entry entry = iter.next();\r\n            if (entry.getPermits() >= counter) {\r\n                iter.remove();\r\n                entryToAcquire = entry;\r\n            }\r\n        }\r\n    }\r\n   \r\n    if (entryToAcquire != null) {\r\n        acquire(entryToAcquire.getRunnable(), entryToAcquire.getPermits());\r\n    }\r\n}\r\n```\r\n**_if (entry.getPermits() >= counter) {_**\r\nshould this line be :\r\n**if (entry.getPermits() <= counter) {**\r\n\r\nplease check ,thanks\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2095", "user": "cietwwl", "labels": ["bug"], "created": "2019-05-07 06:17:52", "closed": "2019-05-07 12:06:42", "commits": {"aec2460b766ccaaf8f68ced4e3b41a293b26802d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "aec2460b766ccaaf8f68ced4e3b41a293b26802d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f2703e7526987a99cd9bea7b985e534b09b19ad0"], "nameRev": "aec2460b766ccaaf8f68ced4e3b41a293b26802d tags/redisson-3.11.0~20", "commitMessage": "Fixed - AsyncSemaphore doesn't notify sleeping threads with permits more than one. #2095\n", "commitDateTime": "2019-05-07 15:05:50", "authoredDateTime": "2019-05-07 15:05:50", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/pubsub/AsyncSemaphore.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AsyncSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.AsyncSemaphore.release()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aec2460b766ccaaf8f68ced4e3b41a293b26802d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/pubsub"], "changesInPackagesSPOON": ["org.redisson.pubsub.AsyncSemaphore.release()"]}, {"title": "RedissonConnection\u7684geoRadius\u65b9\u6cd5\u62a5\u9519", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nstringRedisTemplate.opsForGeo().radius(\"location\", circle, RedisGeoCommands.GeoRadiusCommandArgs.newGeoRadiusArgs().limit(8).sortAscending().includeDistance().includeCoordinates())\r\n\u671f\u671b\u8fd4\u56de\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6570\u636e\r\n### Actual behavior\r\njava.lang.IllegalArgumentException: distance is marked @NonNull but is null\r\n### Steps to reproduce or test case\r\npublic static void main(String[] args) {\r\n        StringRedisTemplate stringRedisTemplate = new StringRedisTemplate();\r\n        long start = System.currentTimeMillis();\r\n        Point center_point = new Point(116.111, 39.111);\r\n        Point point1 = new Point(116.222, 39.222);\r\n        Point point2 = new Point(116.333, 39.333);\r\n        Point point3 = new Point(116.444, 39.444);\r\n        Map<String, Point> map = new HashMap<>();\r\n        map.put(\"center_point\", center_point);\r\n        map.put(\"point1\", point1);\r\n        map.put(\"point2\", point2);\r\n        map.put(\"point3\", point3);\r\n        // \u4ee5\u5750\u6807\u5f62\u5f0f\u5b58\u5165redis\r\n        stringRedisTemplate.opsForGeo().add(Constant.ONE_MINUTE_DATA, map);\r\n        // \u4ee5\u7ed9\u5b9a\u5750\u6807\u70b9\u672a\u4e2d\u5fc3\uff0c\u8ba1\u7b973\u516c\u91cc\u8303\u56f4\u5185\u7684\u5750\u6807\u70b9\r\n        Distance three = new Distance(300.00, RedisGeoCommands.DistanceUnit.KILOMETERS);\r\n        RedisGeoCommands.GeoRadiusCommandArgs geoRadiusCommandArgs = RedisGeoCommands.GeoRadiusCommandArgs.newGeoRadiusArgs();\r\n        geoRadiusCommandArgs.limit(8).sortAscending().includeDistance().includeCoordinates();\r\n        Circle circle = new Circle(center_point, three);\r\n        GeoResults<RedisGeoCommands.GeoLocation<String>> georesults = stringRedisTemplate.opsForGeo().radius(Constant.ONE_MINUTE_DATA, circle, geoRadiusCommandArgs);\r\n        LOGGER.info(\"\u8fd4\u56de\u5750\u6807\u70b9\uff1a\" + georesults);\r\n    }\r\n### Redis version\r\n5.0\r\n### Redisson version\r\n3.10.6\r\n### Redisson configuration\r\n---\r\nsingleServerConfig:\r\n  # address: \"redis://redis-server-single-peer:6379\"\r\n  # \u53d1\u5e03\u548c\u8ba2\u9605\u8fde\u63a5\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  # \u53d1\u5e03\u548c\u8ba2\u9605\u8fde\u63a5\u6c60\u5927\u5c0f\r\n  subscriptionConnectionPoolSize: 50\r\n  # \u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570\r\n  connectionMinimumIdleSize: 32\r\n  # \u8fde\u63a5\u6c60\u5927\u5c0f\r\n  connectionPoolSize: 2000\r\n  idleConnectionTimeout: 10000\r\n  connectTimeout: 60000\r\n  database: 1\r\n  password: 123456\r\n  # \u91cd\u8bd5\u6b21\u6570\r\n  retryAttempts: 6\r\n  # DNS\u76d1\u6d4b\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\uff1a\u6beb\u79d2\r\n  dnsMonitoringInterval: 5000\r\n  timeout: 60000\r\nthreads: 20\r\nnettyThreads: 20", "url": "https://github.com/redisson/redisson/issues/2093", "user": "lesserPanda", "labels": ["bug"], "created": "2019-05-07 02:32:22", "closed": "2019-05-07 11:50:02", "commits": {"355b25a4b446990552a3642c4a32966da74c96b0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "355b25a4b446990552a3642c4a32966da74c96b0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["83f10b120c7094d72727ce96b8f9a7e255e9d161"], "nameRev": "355b25a4b446990552a3642c4a32966da74c96b0 tags/redisson-3.11.0~22", "commitMessage": "Fixed - RedisTemplate.radius and RedisConnection.geoRadius throw IllegalArgumentException during response decoding. #2093\n", "commitDateTime": "2019-05-07 14:49:14", "authoredDateTime": "2019-05-07 14:49:14", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/GeoResultsDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/GeoResultsDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/GeoResultsDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GeoResultsDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.GeoResultsDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["355b25a4b446990552a3642c4a32966da74c96b0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.GeoResultsDecoder.decode(java.util.List,org.redisson.client.handler.State)"]}, {"title": "RRateLimiter allows permits exceeding", "body": "During first permits aquisition call RRateLimiter allows to acquire permits more than defined in rate.", "url": "https://github.com/redisson/redisson/issues/2072", "user": "mrniko", "labels": ["bug"], "created": "2019-04-25 06:53:59", "closed": "2019-04-25 06:56:05", "commits": {"328e0708736888118e1dca8ae388a9592fbfb916": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "328e0708736888118e1dca8ae388a9592fbfb916", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["184be32c44b7edbd681fd93b8867ad5950860de5"], "nameRev": "328e0708736888118e1dca8ae388a9592fbfb916 tags/redisson-3.10.7~11", "commitMessage": "Fixed -  RRateLimiter allows permits exceeding #2072\n", "commitDateTime": "2019-04-25 09:55:31", "authoredDateTime": "2019-04-25 09:55:31", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRateLimiter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRateLimiterTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRateLimiter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiter.tryAcquireAsync(org.redisson.client.protocol.RedisCommand,java.lang.Long)", "TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonRateLimiterTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiterTest.testPermitsExceeding()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["328e0708736888118e1dca8ae388a9592fbfb916"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRateLimiter.tryAcquireAsync(org.redisson.client.protocol.RedisCommand,java.lang.Long)"]}, {"title": "NullPointerException and ClassNotFoundException from trying to decode values", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.10.7\r\n\r\n### Redisson configuration\r\nsingleServerConfig:\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  password: null\r\n  subscriptionsPerConnection: 5\r\n  clientName: null\r\n  address: \"redis://127.0.0.1:6379\"\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  connectionMinimumIdleSize: 32\r\n  connectionPoolSize: 64\r\n  database: 0\r\n  dnsMonitoringInterval: 5000\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.SerializationCodec> {}\r\ntransportMode: \"NIO\"\r\n\r\n\r\nin tomcat context.xml :\r\n```\r\n    <ResourceLink name=\"session/redisson\"\r\n                  global=\"session/redisson\"\r\n\t\t          type=\"org.redisson.api.RedissonClient\" />\r\n\t\t\t\t  \r\n    <Manager className=\"org.redisson.tomcat.JndiRedissonSessionManager\"\r\n         readMode=\"REDIS\"\r\n\t\t updateMode=\"DEFAULT\"\r\n         jndiName=\"session/redisson\" />\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/2071", "user": "jchobantonov", "labels": ["bug"], "created": "2019-04-24 22:08:47", "closed": "2019-04-29 07:10:49", "commits": {"eed760548adf1deb233d65b3f37b496fd39e5383": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "eed760548adf1deb233d65b3f37b496fd39e5383", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["da41773a8b81ebea8634af44e41869068180ab05", "2d08717e437c467fe4380377529072b464ef4a22"], "nameRev": "eed760548adf1deb233d65b3f37b496fd39e5383 tags/redisson-3.10.7~3^2", "commitMessage": "Merge pull request #2075 from jchobantonov/master\n\nUse codec that is classloader aware fix for #2071", "commitDateTime": "2019-04-29 10:10:03", "authoredDateTime": "2019-04-29 10:10:03", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 3, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.getMap(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().2.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.stopInternal()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Composit codec getMapValueDecoder confuse", "body": "https://github.com/redisson/redisson/blob/98c73ccc14e7d39b0fdd3c4618964b7e232f1221/redisson/src/main/java/org/redisson/codec/CompositeCodec.java#L54\r\n\r\nCompositeCodec.getMapValueDecoder uses mapValueCodec.getMapKeyDecoder() instead of\r\nmapValueCodec.getMapValueDecoder()\r\n\r\nIs it a typo?", "url": "https://github.com/redisson/redisson/issues/2068", "user": "rasentry", "labels": ["bug"], "created": "2019-04-24 13:47:18", "closed": "2019-04-25 05:16:55", "commits": {"184be32c44b7edbd681fd93b8867ad5950860de5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "184be32c44b7edbd681fd93b8867ad5950860de5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["98c73ccc14e7d39b0fdd3c4618964b7e232f1221"], "nameRev": "184be32c44b7edbd681fd93b8867ad5950860de5 tags/redisson-3.10.7~12", "commitMessage": "Fixed - CompositeCodec.getMapValueDecoder method uses MapKeyDecoder instead of MapValueDecoder #2068\n", "commitDateTime": "2019-04-25 08:17:30", "authoredDateTime": "2019-04-25 08:17:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/CompositeCodec.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CompositeCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.CompositeCodec.getMapValueDecoder()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["184be32c44b7edbd681fd93b8867ad5950860de5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.CompositeCodec.getMapValueDecoder()"]}, {"title": "redisson don't detect if new sentinel added to sentinel group.", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n5.*\r\n### Redisson version\r\n3.10.5\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2067", "user": "bhaskarroy19", "labels": ["bug"], "created": "2019-04-24 12:44:28", "closed": "2019-04-29 07:09:08", "commits": {"da41773a8b81ebea8634af44e41869068180ab05": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "da41773a8b81ebea8634af44e41869068180ab05", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5f4ec21cc938e1418201e1e452aa263ce399c675"], "nameRev": "da41773a8b81ebea8634af44e41869068180ab05 tags/redisson-3.10.7~5", "commitMessage": "Fixed - disconnected sentinels shouldn't be listed in sentinel list. #2067\n", "commitDateTime": "2019-04-29 10:08:31", "authoredDateTime": "2019-04-29 10:08:31", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 62, "deletions": 48, "lines": 110}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(java.net.URI,org.redisson.config.MasterSlaveServersConfig)", "TOT": 22, "UPD": 5, "INS": 2, "MOV": 14, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.scheduleSentinelDNSCheck().1.run().2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 34, "UPD": 9, "INS": 3, "MOV": 17, "DEL": 5}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 25, "UPD": 7, "INS": 7, "MOV": 10, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator)", "TOT": 26, "UPD": 6, "INS": 6, "MOV": 12, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.scheduleSentinelDNSCheck().1.run()", "TOT": 16, "UPD": 10, "INS": 1, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateSentinels(java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.startDNSMonitoring(org.redisson.client.RedisClient)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["da41773a8b81ebea8634af44e41869068180ab05"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 62, "deletions": 48, "lines": 110, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 126, "UPD": 37, "INS": 21, "MOV": 56, "DEL": 12, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.scheduleSentinelDNSCheck().1.run().2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.SentinelConnectionManager.updateSentinels(java.util.Set)", "org.redisson.connection.SentinelConnectionManager.scheduleSentinelDNSCheck().1.run()", "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(java.net.URI,org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.SentinelConnectionManager.startDNSMonitoring(org.redisson.client.RedisClient)"]}, {"title": "Rename RListMultimap then set value in map , but old value can not output", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n```\r\nHttpPostRequest(super=AbstractHttpRequest(url=789789, forceUseCharset=false, charset=null, parameters={}, cookies={}, headers={}, priority=0), fields={})=java.lang.Exception: 789789\r\nHttpPostRequest(super=AbstractHttpRequest(url=123123, forceUseCharset=false, charset=null, parameters={}, cookies={}, headers={}, priority=0), fields={})=java.lang.Exception: 123123\r\n...\r\n```\r\n\r\n### Actual behavior\r\n\r\nonly output\r\n```\r\nHttpPostRequest(super=AbstractHttpRequest(url=789789, forceUseCharset=false, charset=null, parameters={}, cookies={}, headers={}, priority=0), fields={})=java.lang.Exception: 789789\r\n```\r\n\r\n### Steps to reproduce or test case\r\n\r\n```java\r\nRListMultimap<HttpRequest, Exception> failedRequestMap = redissonClient.getListMultimap(\"gecco:failedRequests\");\r\n\r\nfailedRequestMap.put(new HttpPostRequest(\"123123\"), new Exception(\"123123\"));\r\nfailedRequestMap.put(new HttpPostRequest(\"456456\"), new Exception(\"456456\"));\r\n\r\nfailedRequestMap.renamenx(\"asdasd:1\");\r\n\r\nfailedRequestMap.put(new HttpPostRequest(\"789789\"), new Exception(\"789789\"));\r\n\r\nfailedRequestMap.entries().forEach(httpRequestExceptionEntry -> {\r\n     log.info(httpRequestExceptionEntry.toString());\r\n});\r\n```\r\n\r\n### Redis version\r\n\r\n3.0.6\r\n\r\n### Redisson version\r\n\r\nredisson-spring-boot-starter: 3.10.6\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2066", "user": "ztcaoll222", "labels": ["bug"], "created": "2019-04-24 10:38:15", "closed": "2019-09-23 10:34:40", "commits": {"8b4d4530642ffa2f31116f393b793d191aca3f75": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 151.00027777777777, "commitsDetails": [{"commitHash": "8b4d4530642ffa2f31116f393b793d191aca3f75", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3a47ed40c0e088937c839111ee062861bc0d21ec"], "nameRev": "8b4d4530642ffa2f31116f393b793d191aca3f75 tags/redisson-3.11.4~5", "commitMessage": "Fixed - rename and renamenx methods of RMultimap interface aren't working. #2066\n", "commitDateTime": "2019-09-23 13:34:03", "authoredDateTime": "2019-09-23 13:31:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMultimap.java", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "redisson/src/main/java/org/redisson/RedissonObject.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetMultimapTest.java", "insertions": 57, "deletions": 13, "lines": 70}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultimap.renameAsync(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.renamenxAsync(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonObject.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonObject", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testRename()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testRenamenx()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testReplaceValues()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8b4d4530642ffa2f31116f393b793d191aca3f75"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 63, "deletions": 1, "lines": 64, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMultimap.renameAsync(java.lang.String)", "org.redisson.RedissonObject", "org.redisson.RedissonMultimap.renamenxAsync(java.lang.String)"]}, {"title": "Wrong logic for Map in RedissonLiveObjectService:persist method", "body": "In RedissonLiveObjectService class, while copying and persisting map Entities in persist method, the \"for\" loop just accesses empty Redisson map instead of right map object, it causes no any map entity is copied and persisted into redis.\r\n\r\nClass: https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/RedissonLiveObjectService.java\r\nLine: #308  , The map instance in line 308 should be replaced with object instance which is created in line 303.\r\n`for (Entry<?, ?> entry : map.entrySet()) {`\r\n\r\n### Redisson version: from 3.5.3 to 3.10.6\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2061", "user": "liheeng", "labels": ["bug"], "created": "2019-04-23 14:22:22", "closed": "2019-04-25 08:05:38", "commits": {"689f7c95e9f3e699f620454e988223111d627c50": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "689f7c95e9f3e699f620454e988223111d627c50", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c9bffacbdd437a2b3c954f5bad4da7d3510de9de"], "nameRev": "689f7c95e9f3e699f620454e988223111d627c50 tags/redisson-3.10.7~9", "commitMessage": "Fixed - LiveObject field with Map type couldn't be persisted. #2061\n", "commitDateTime": "2019-04-25 11:06:14", "authoredDateTime": "2019-04-25 11:06:14", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 16, "deletions": 1, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.persist(java.lang.Object,java.util.Map,org.redisson.api.RCascadeType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testPersist()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestClass.addEntry(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestClass.setValues(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestClass.getValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["689f7c95e9f3e699f620454e988223111d627c50"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLiveObjectService.persist(java.lang.Object,java.util.Map,org.redisson.api.RCascadeType)"]}, {"title": "JCache.removeAll method doesn't notify Cache listeners", "body": "", "url": "https://github.com/redisson/redisson/issues/2056", "user": "mrniko", "labels": ["bug"], "created": "2019-04-22 09:28:58", "closed": "2019-04-22 09:29:27", "commits": {"a056a200ca1219c5c968334186d70c2ca41b9832": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a056a200ca1219c5c968334186d70c2ca41b9832", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c15ceba7594575918c6580a68174a85e0c83afa6"], "nameRev": "a056a200ca1219c5c968334186d70c2ca41b9832 tags/redisson-3.10.7~15", "commitMessage": "Fixed - JCache.removeAll method doesn't notify Cache listeners #2056\n", "commitDateTime": "2019-04-22 12:29:59", "authoredDateTime": "2019-04-22 12:29:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 46, "deletions": 23, "lines": 69}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValues(java.lang.Object[])", "TOT": 9, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.putValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getUpdateTimeout()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getCreationTimeout()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.putIfAbsentValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.put(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndPutValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndPut(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.putAll(java.util.Map)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValue(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplaceValue(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAccessTimeout()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAccessTimeout(long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getUpdateTimeout(long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getCreationTimeout(long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a056a200ca1219c5c968334186d70c2ca41b9832"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 46, "deletions": 23, "lines": 69, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 39, "UPD": 3, "INS": 15, "MOV": 5, "DEL": 16, "spoonFilesChanged": 1, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/jcache"], "changesInPackagesSPOON": ["org.redisson.jcache.JCache.putValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndPut(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getUpdateTimeout(long)", "org.redisson.jcache.JCache.put(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndReplaceValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.removeValue(java.lang.Object)", "org.redisson.jcache.JCache.putIfAbsentValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getCreationTimeout()", "org.redisson.jcache.JCache.getAccessTimeout(long)", "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "org.redisson.jcache.JCache.removeValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getUpdateTimeout()", "org.redisson.jcache.JCache.removeValues(java.lang.Object[])", "org.redisson.jcache.JCache.getAndPutValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAccessTimeout()", "org.redisson.jcache.JCache.putAll(java.util.Map)", "org.redisson.jcache.JCache.getCreationTimeout(long)"]}, {"title": "RedissonPromise\u6cc4\u9732", "body": "`RBlockingQueue`\u7684`take`\u65b9\u6cd5\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\r\n\r\n```java\r\npublic void run(String... args) throws Exception {\r\n        RBlockingQueue<String> queue = client.getBlockingQueue(\"demo\");\r\n\r\n        Runnable producer = () -> {\r\n            for (int i = 0; i < 1000000; i++) {\r\n                queue.offer(i + \"\");\r\n            }\r\n        };\r\n\r\n        Runnable consumer = () -> {\r\n            while (true) {\r\n                try {\r\n                    String msg = queue.take();\r\n                    System.out.println(\"receive: \" + msg);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        };\r\n\r\n        new Thread(producer).start();\r\n        new Thread(consumer).start();\r\n    }\r\n```\r\n\r\n```cmd\r\njmap -histo:live 4012\r\n\r\n num     #instances         #bytes  class name\r\n----------------------------------------------\r\n   1:       2999440       95982080  io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise\r\n   2:       2999440       71986560  org.redisson.misc.RedissonPromise\r\n   3:        999793       71985096  org.redisson.command.AsyncDetails\r\n   4:        999794       55988464  io.netty.util.HashedWheelTimer$HashedWheelTimeout\r\n   5:       1057046       40346808  [C\r\n   6:        999793       39991720  io.netty.channel.DefaultChannelPromise\r\n   7:        999793       39991720  org.redisson.command.CommandAsyncService$8\r\n   8:        999793       31993376  org.redisson.connection.NodeSource\r\n   9:       1010953       25483976  [Ljava.lang.Object;\r\n  10:       1055901       25341624  java.lang.String\r\n  11:        999793       23995032  org.redisson.command.CommandAsyncService$9\r\n  12:        999840       15997440  java.util.concurrent.atomic.AtomicBoolean\r\n  13:        999798       15996768  org.redisson.misc.RedissonPromise$$Lambda$19/1667859935\r\n  14:             7        4194472  [Lio.netty.util.concurrent.GenericFutureListener;\r\n```\r\n\r\n### Expected behavior\r\n\r\n`RedissonPromise`\u5728`full gc`\u540e\u5e94\u8be5\u5927\u90e8\u5206\u88ab\u56de\u6536\r\n\r\n### Actual behavior\r\n\r\n\u5b9e\u9645\u4e0a\u672a\u88ab\u56de\u6536\r\n\r\n### Steps to reproduce or test case\r\n\r\n\u53c2\u8003\u95ee\u9898\u63cf\u8ff0\u63d0\u4f9b\u7684\u4ee3\u7801\r\n\r\n### Redis version\r\n\r\n3.0.6\r\n\r\n### Redisson version\r\n\r\n3.10.5\r\n\r\n### Redisson configuration\r\n\r\ndefault config", "url": "https://github.com/redisson/redisson/issues/2055", "user": "douyux", "labels": ["bug"], "created": "2019-04-22 08:04:18", "closed": "2019-04-24 04:50:29", "commits": {"765d6ed1297d3b7408bea48b1d5e02f0c55b8fdb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "765d6ed1297d3b7408bea48b1d5e02f0c55b8fdb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a056a200ca1219c5c968334186d70c2ca41b9832"], "nameRev": "765d6ed1297d3b7408bea48b1d5e02f0c55b8fdb tags/redisson-3.10.7~14", "commitMessage": "Fixed - Memory leak during Queue blocking methods invocation. #2055\n", "commitDateTime": "2019-04-24 07:50:46", "authoredDateTime": "2019-04-24 07:50:46", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 5, "deletions": 12, "lines": 17}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Long)", "TOT": 7, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Long).8.accept(java.lang.Boolean,java.lang.Throwable)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Long).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean).10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean).10.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getShutdownPromise()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getShutdownPromise()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdown(long,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["765d6ed1297d3b7408bea48b1d5e02f0c55b8fdb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 17, "lines": 30, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 19, "UPD": 12, "INS": 2, "MOV": 2, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.getShutdownPromise()", "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean).10.run(io.netty.util.Timeout)", "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Long).9", "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean).10", "org.redisson.connection.MasterSlaveConnectionManager.shutdown(long,long,java.util.concurrent.TimeUnit)", "org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.connection.MasterSlaveConnectionManager.getShutdownPromise()", "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Long)", "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Long).8.accept(java.lang.Boolean,java.lang.Throwable)"]}, {"title": "Maven build fails with: Failed during checkstyle configuration: cannot initialize module SuppressionFilter - Unable to find: suppressions.xml", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nMaven build to be successful\r\n### Actual behavior\r\nMaven build fails with Failed during checkstyle configuration: cannot initialize module SuppressionFilter - Unable to find: suppressions.xml\r\n### Steps to reproduce or test case\r\nDo mvn clean install on root directory\r\n### Redis version\r\n\r\n### Redisson version\r\n3.10.7-SNAPSHOT\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2048", "user": "jchobantonov", "labels": ["bug"], "created": "2019-04-18 17:34:19", "closed": "2019-04-18 18:09:26", "commits": {"60f4c7bbcc8c5680dcbf7f2d580768bf1ab2ead7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "f65a9fd482e9b9d4afdbb9e2f9fb91ec4e8e826f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "60f4c7bbcc8c5680dcbf7f2d580768bf1ab2ead7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1332b03ed98bb3aec13db6621386137af395f96f"], "nameRev": "60f4c7bbcc8c5680dcbf7f2d580768bf1ab2ead7 tags/redisson-3.10.7~20", "commitMessage": "suppressions.xml file added #2048\n", "commitDateTime": "2019-04-18 21:01:48", "authoredDateTime": "2019-04-18 21:01:48", "commitGitStats": [{"filePath": "suppressions.xml", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f65a9fd482e9b9d4afdbb9e2f9fb91ec4e8e826f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["60f4c7bbcc8c5680dcbf7f2d580768bf1ab2ead7"], "nameRev": "f65a9fd482e9b9d4afdbb9e2f9fb91ec4e8e826f tags/redisson-3.10.7~19", "commitMessage": "Maven build fails with \"Unable to find: suppressions.xml\" error #2048 (thanks to jchobantonov)\n", "commitDateTime": "2019-04-18 21:09:46", "authoredDateTime": "2019-04-18 21:09:46", "commitGitStats": [{"filePath": "redisson/checkstyle.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "suppressions.xml", "insertions": 0, "deletions": 13, "lines": 13}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["60f4c7bbcc8c5680dcbf7f2d580768bf1ab2ead7", "f65a9fd482e9b9d4afdbb9e2f9fb91ec4e8e826f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "RedissonLock.renewExpiration will refresh forever", "body": "### Expected behavior\r\n\r\nIf the lock key no longer exist the refresh should cease\r\n\r\n### Actual behavior\r\n\r\nThe renewExpiration() method ignores the return value of renewExpirationAsync() and reschedules itself forever\r\n\r\n### Steps to reproduce or test case\r\n\r\nShould be as simple as manually removing a lock entry key from redis.\r\n\r\n### Redisson version\r\n\r\n3.10.6\r\n\r\nOn a side note, another thing we noticed while looking into this is that renewExpirationAsync() does a scripted call that returns 0 or 1 depending on HEXISTS. It seems unnecessary as according to the redis docs about PEXPIRE, it does the same thing out of the box in a single command call (https://redis.io/commands/pexpire).", "url": "https://github.com/redisson/redisson/issues/2037", "user": "MikeBlink", "labels": ["bug"], "created": "2019-04-11 10:51:47", "closed": "2019-04-16 08:28:51", "commits": {"caaeaf591b4bbbbc07bb3edb8fed4309872a7a87": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "caaeaf591b4bbbbc07bb3edb8fed4309872a7a87", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c7b1b6f745cc7924a9da9fe274739955580701ee"], "nameRev": "caaeaf591b4bbbbc07bb3edb8fed4309872a7a87 tags/redisson-3.10.7~23", "commitMessage": "Fixed - Redisson tries to renewed Lock expiration even if lock doesn't exist. Regression since 3.10.5 version #2037\n", "commitDateTime": "2019-04-16 11:28:16", "authoredDateTime": "2019-04-16 11:28:16", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.renewExpiration().1.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["caaeaf591b4bbbbc07bb3edb8fed4309872a7a87"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.renewExpiration().1.run(io.netty.util.Timeout)"]}, {"title": "FstCodec can't deserialize ConcurrentHashMap based object with package visibility", "body": "", "url": "https://github.com/redisson/redisson/issues/2035", "user": "mrniko", "labels": ["bug"], "created": "2019-04-10 07:45:30", "closed": "2019-04-10 07:46:36", "commits": {"abe6f65fea4ab9348a51a333d14d2a126615e9a5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "abe6f65fea4ab9348a51a333d14d2a126615e9a5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["797c089318267dfb15ef3893814c147f166535ec"], "nameRev": "abe6f65fea4ab9348a51a333d14d2a126615e9a5 tags/redisson-3.10.7~31", "commitMessage": "Fixed - FstCodec can't deserialize ConcurrentHashMap based object with package visibility #2035\n", "commitDateTime": "2019-04-10 10:46:38", "authoredDateTime": "2019-04-10 10:46:38", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/FstCodec.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "redisson/src/test/java/org/redisson/codec/FSTCodecTest.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FstCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.FstCodec.FSTMapSerializerV2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.FstCodec", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FSTCodecTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.FSTCodecTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["abe6f65fea4ab9348a51a333d14d2a126615e9a5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 63, "deletions": 0, "lines": 63, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.FstCodec", "org.redisson.codec.FstCodec.FSTMapSerializerV2"]}, {"title": "asBitSet () \u65b9\u6cd5\u4e3a\u4ec0\u4e48\u4e0d\u68c0\u67e5null\u7684\u60c5\u51b5\u5e76\u8fd4\u56denew BitSet\u5462", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\nfromByteArrayReverse\u65b9\u6cd5\u4e3a\u4ec0\u4e48\u4e0d\u68c0\u67e5bytes\u4e3anull\u7684\u60c5\u51b5\uff0c\u5e76\u8fd4\u56denew BitSet()\uff1b\r\n### Expected behavior\r\nif (bytes == null) {\r\n            return new BitSet();\r\n}\r\n### Actual behavior\r\nthrow new NullPointerException();\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.10.5\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/2026", "user": "xanderxie", "labels": ["bug"], "created": "2019-04-04 06:35:36", "closed": "2019-04-05 06:21:36", "commits": {"81bacffb13dee17d187bcd6b8285093093bac504": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "81bacffb13dee17d187bcd6b8285093093bac504", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8bd89a670ee2b265d1d925bfee8a7dcc6c387bd4"], "nameRev": "81bacffb13dee17d187bcd6b8285093093bac504 tags/redisson-3.10.6~3", "commitMessage": "Fixed - RBitSet.asBitSet methods throws NPE #2026\n", "commitDateTime": "2019-04-05 09:03:27", "authoredDateTime": "2019-04-05 09:03:27", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBitSet.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBitSetTest.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBitSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBitSet.fromByteArrayReverse(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBitSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBitSetTest.testAsBitSet()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["81bacffb13dee17d187bcd6b8285093093bac504"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBitSet.fromByteArrayReverse(byte[])"]}, {"title": "Tomcat Session Manager issue in Load Balance environment with redMode MEMORY", "body": "We have a 2 instances of tomcat running in front of apache (with sticky session).\r\nWe have a single redis instance and we are using the redisson tomcat 8 session manager (setup in the context.xml in the /conf dir). Version redisson-tomcat-8-3.7. Tomcat version 8.0.32.\r\n\r\nThis is similar to bug #1311 . We have a session timeout of 30mins. \r\n\r\nWhat is happening:\r\n1) User logs onto instance 1, session created.\r\n2) User uses session on instance 1\r\n3) Apache loadbalancers the request over to instance 2 (perhaps load was too great on instance1)\r\n4) New session created on instance 2 and loaded with session info via redis, user carries on without loosing session. All good so far.\r\n5) 15 mins later user makes another request and apache loadbalancers back to instance 1. User carries on without issue.\r\n6) User keeps using their session on instance 1.\r\n7 ) On instance 2 the session timesout after 30 mins. This then invalidates the session on instance 1 even though the user is still using it and user looses session . This is the problem.\r\n\r\nIt seems that  in RedissonSessionManager.java -> startInternal() -> onMessage() when receiving a AttributesPutAllMessage is NOT updating the timing on the session (at least in readMode MEMORY)  and then tomcat MangerBase times the session out. I can see session values session:lastAccessedTime and session:thisAccessedTime are sent in the map, however debugging into superSetAttribute() on Tomcat 8 does NOT update these member variables, and therefore the session timesout.\r\n\r\nI made a local patch to test my thoery by calling session.superEndAccess() instead:\r\n```\r\nif (msg instanceof AttributesPutAllMessage) {\r\n      AttributesPutAllMessage m = (AttributesPutAllMessage) msg;\r\n                                for (Entry<String, Object> entry : m.getAttrs().entrySet()) {\r\n                                    session.superSetAttribute(entry.getKey(), entry.getValue(), true);\r\n                                    if (entry.getKey().equals(\"session:lastAccessedTime\") ) {\r\n                                    \tsession.superEndAccess(); // so tomcat doesn't time the session out on this instance\r\n                                    }\r\n                                \r\n                                }\r\n                            }\r\n```\r\n\r\nThis now works as expected. However I'm not sure this is the best implementation and looking for your guidence/fix. This is consistently reproducable.\r\n\r\nMany thanks\r\n\r\n\r\n\r\n\r\n\r\n\r\nContext.xml:\r\n<Manager className=\"org.redisson.tomcat.RedissonSessionManager\" configPath=\"${catalina.base}/redisson.conf\" readMode=\"MEMORY\" updateMode=\"DEFAULT\"/> \r\n\r\nRedisson.conf:\r\n---\r\nsingleServerConfig:\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  password: null\r\n  subscriptionsPerConnection: 5\r\n  clientName: null\r\n  address: \"redis://127.0.0.1:6379\"\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  connectionMinimumIdleSize: 32\r\n  connectionPoolSize: 64\r\n  database: 0\r\n  dnsMonitoringInterval: 5000\r\n  pingConnectionInterval: 1000\r\n  keepAlive: true\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.SerializationCodec> {}\r\ntransportMode: \"NIO\"\r\n", "url": "https://github.com/redisson/redisson/issues/2020", "user": "WayneAtGC", "labels": ["bug"], "created": "2019-03-29 15:05:34", "closed": "2019-04-01 06:38:26", "commits": {"b88765b8a6f1554ac30cbb8507a03ee99c0f1492": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "b88765b8a6f1554ac30cbb8507a03ee99c0f1492", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0b81682d6d24566f6612fba023b7fbda4a80a447"], "nameRev": "b88765b8a6f1554ac30cbb8507a03ee99c0f1492 tags/redisson-3.10.6~11", "commitMessage": "Fixed - session parameters aren't updated completely in readMode=MEMORY #2020\n", "commitDateTime": "2019-04-01 09:37:30", "authoredDateTime": "2019-04-01 09:37:30", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().2.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "TOT": 9, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b88765b8a6f1554ac30cbb8507a03ee99c0f1492"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 12, "lines": 20, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSessionManager.startInternal().2.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)"]}, {"title": "session.invalidate()\u540e,key\u503c\u4ecd\u5b58\u5728", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n\u4f7f\u7528redisson-tomcat\uff0c\u4ee3\u7801\u4e2d session.invalidate()\u540e\uff0c\u671f\u671bredis\u4e2dsession key\u503c\u88ab\u5220\u9664\r\n\r\n### Actual behavior\r\n\r\n\u4f7f\u7528redisson-tomcat\uff0c\u4ee3\u7801\u4e2d session.invalidate()\u540e\uff0c\u5b9e\u9645redis\u4e2dsession key\u503c\u6ca1\u88ab\u5220\u9664\uff0cttl\u503c\u4e3a-1\r\n\r\n### Steps to reproduce or test case\r\n\r\n\r\nsession.invalidate()\r\n\r\n### Redis version\r\n\r\n\u5355\u673a\u72484.0.11\r\n\r\n### Redisson version\r\n\r\nredisson \u5f00\u6e90\u7248 3.10.5\r\n\r\n### Redisson configuration\r\n\r\n{\r\n   \"singleServerConfig\":{\r\n      \"idleConnectionTimeout\":10000,\r\n      \"pingTimeout\":1000,\r\n      \"connectTimeout\":10000,\r\n      \"timeout\":3000,\r\n      \"retryAttempts\":3,\r\n      \"retryInterval\":1500,\r\n      \"password\":password,\r\n      \"subscriptionsPerConnection\":5,\r\n      \"clientName\":null,\r\n      \"address\": \"redis://127.0.0.1:6379\",\r\n      \"subscriptionConnectionMinimumIdleSize\":1,\r\n      \"subscriptionConnectionPoolSize\":50,\r\n      \"connectionMinimumIdleSize\":32,\r\n      \"connectionPoolSize\":64,\r\n      \"database\":0,\r\n      \"dnsMonitoringInterval\":5000\r\n   },\r\n   \"threads\":0,\r\n   \"nettyThreads\":0,\r\n   \"codec\":{\r\n      \"class\":\"org.redisson.codec.JsonJacksonCodec\"\r\n   },\r\n   \"transportMode\":\"NIO\"\r\n}\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/2019", "user": "wy281704862", "labels": ["bug"], "created": "2019-03-29 09:27:56", "closed": "2019-04-25 17:13:59", "commits": {"bfb313306b037d2e14758835d8ce789856171d78": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "bfb313306b037d2e14758835d8ce789856171d78", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["689f7c95e9f3e699f620454e988223111d627c50", "7406b524c60f04ea98fcda714b34dc5f42dcec28"], "nameRev": "bfb313306b037d2e14758835d8ce789856171d78 tags/redisson-3.10.7~8", "commitMessage": "Merge pull request #2070 from jchobantonov/master\n\nwhen using findSession check if the session exists in Redis first before creating a new one - a fix for #2019", "commitDateTime": "2019-04-25 20:13:31", "authoredDateTime": "2019-04-25 20:13:31", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RLock.unlock method returns true if lock doesn't exist", "body": "", "url": "https://github.com/redisson/redisson/issues/2018", "user": "mrniko", "labels": ["bug"], "created": "2019-03-29 08:50:14", "closed": "2019-03-29 08:51:52", "commits": {"fc58dd0b286c68b7db7e68ff6132b6564df8326f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fc58dd0b286c68b7db7e68ff6132b6564df8326f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["332bb5371d77b7e7f011ce4d9756f71e8f66ed97"], "nameRev": "fc58dd0b286c68b7db7e68ff6132b6564df8326f tags/redisson-3.10.6~13", "commitMessage": "Fixed - RLock.unlock method returns true if lock doesn't exist #2018\n", "commitDateTime": "2019-03-29 11:51:43", "authoredDateTime": "2019-03-29 11:51:43", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLockTest.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.unlockInnerAsync(long)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockTest.testExpire()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fc58dd0b286c68b7db7e68ff6132b6564df8326f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 4, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.unlockInnerAsync(long)"]}, {"title": "JCache.getAll throws RedisException: too many results to unpack", "body": "### Expected behavior\r\nAll entries are returned.\r\n### Actual behavior\r\nA RedisException is thrown:\r\n```\r\njavax.cache.CacheException: org.redisson.client.RedisException: ERR Error running script (call to f_d886289bc2022124a889b8e8783a7a3637e98521): @user_script:1: user_script:1: too many results to unpack . channel: [id: 0x7a41093f, L:/<client-address> - R:<redis-address>] command: (EVAL), params: [local expireHead = redis.call('zrange', KEYS[2], 0, 0, 'withscores');local accessTimeout = ARGV[1]; ..., 3, hitf-idCache-Employee, jcache_timeout_set:{hitf-idCache-Employee}, jcache_removed_channel:{hitf-idCache-Employee}, -1, 1553688656762, PooledUnsafeDirectByteBuf(ridx: 0, widx: 48, cap: 256), PooledUnsafeDirectByteBuf(ridx: 0, widx: 48, cap: 256), PooledUnsafeDirectByteBuf(ridx: 0, widx: 48, cap: 256), ...]\r\n\tat org.redisson.jcache.JCache.evalRead(JCache.java:404)\r\n\tat org.redisson.jcache.JCache.getAll(JCache.java:671)\r\n```\r\n### Steps to reproduce or test case\r\n1. Add more than 10k entries to a JCache.\r\n1. Try to pull them all by ids.\r\n### Redis version\r\n5.0.0\r\n### Redisson version\r\n3.10.3\r\n### Redisson configuration\r\n```\r\n{\r\n  \"singleServerConfig\": {\r\n    \"idleConnectionTimeout\": 10000,\r\n    \"connectTimeout\": 10000,\r\n    \"timeout\": 30000,\r\n    \"retryAttempts\": 5,\r\n    \"retryInterval\": 15000,\r\n    \"password\": null,\r\n    \"subscriptionsPerConnection\": 5,\r\n    \"clientName\": null,\r\n    \"address\": \"<redis-address>\",\r\n    \"subscriptionConnectionMinimumIdleSize\": 1,\r\n    \"subscriptionConnectionPoolSize\": 50,\r\n    \"connectionMinimumIdleSize\": 32,\r\n    \"connectionPoolSize\": 64,\r\n    \"database\": 0,\r\n    \"dnsMonitoringInterval\": 5000\r\n  },\r\n  \"threads\": 0,\r\n  \"nettyThreads\": 0,\r\n  \"codec\": {\r\n    \"class\": \"org.redisson.codec.FstCodec\"\r\n  },\r\n  \"transportMode\": \"NIO\"\r\n}\r\n```\r\n\r\nJust wanted to wonder if it is a correct behavior and there is just a limit of entities I can retrieve in one batch or it is actually a bug somewhere.", "url": "https://github.com/redisson/redisson/issues/2014", "user": "xSAVIKx", "labels": ["bug"], "created": "2019-03-27 20:31:16", "closed": "2019-04-03 06:16:24", "commits": {"5fc26836812c132d6426ac700817f82d0664f72e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "5fc26836812c132d6426ac700817f82d0664f72e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c67c333fa1f3e083914c2d55bd86cca91b831774"], "nameRev": "5fc26836812c132d6426ac700817f82d0664f72e tags/redisson-3.10.6~7", "commitMessage": "Fixed - JCache.getAll throws RedisException: too many results to unpack #2014\n", "commitDateTime": "2019-04-03 09:16:15", "authoredDateTime": "2019-04-03 09:16:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "redisson/src/test/java/org/redisson/jcache/JCacheTest.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.getAll(java.util.Set)", "TOT": 52, "UPD": 48, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "JCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCacheTest.testGetAllHighVolume()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5fc26836812c132d6426ac700817f82d0664f72e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 2, "lines": 17, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 52, "UPD": 48, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/jcache"], "changesInPackagesSPOON": ["org.redisson.jcache.JCache.getAll(java.util.Set)"]}, {"title": "Springcache @sync allowNullValues set false not work", "body": "\r\n### Expected behavior\r\nRedissonSpringCacheManager redissonSpringCacheManager=  new \r\n        RedissonSpringCacheManager(redissonClient,config);\r\n        redissonSpringCacheManager.setAllowNullValues(false);\r\n\r\n### Actual behavior\r\nin redis value is org.redisson.spring.cache.NullValue \r\n\r\n\r\n### Steps to reproduce or test case\r\norg.redisson.spring.cache.RedissonCache#putValue \r\n Line 176  value = toStoreValue(valueLoader.call());\r\n tranfer null  2 NullValue\r\nwhy need this op?\r\n\r\n\r\n### Redis version\r\n3.21.\r\n### Redisson version\r\n3.10.5\r\n### Redisson configuration\r\nnormal ", "url": "https://github.com/redisson/redisson/issues/2008", "user": "saber233", "labels": ["bug"], "created": "2019-03-25 02:17:13", "closed": "2019-03-25 12:01:33", "commits": {"ebbd6a033d2b09dde63841cecd309c148a99c70e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ebbd6a033d2b09dde63841cecd309c148a99c70e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["afd88edaa83525b76664dd04e80f21f777bc12ca"], "nameRev": "ebbd6a033d2b09dde63841cecd309c148a99c70e tags/redisson-3.10.6~26", "commitMessage": "Fixed - NullValue object shouldn't be stored if RedissonSpringCacheManager.allowNullValues = false #2008\n", "commitDateTime": "2019-03-25 15:01:04", "authoredDateTime": "2019-03-25 15:01:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/RedissonCache.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonCache.putValue(java.lang.Object,java.util.concurrent.Callable,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ebbd6a033d2b09dde63841cecd309c148a99c70e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/cache"], "changesInPackagesSPOON": ["org.redisson.spring.cache.RedissonCache.putValue(java.lang.Object,java.util.concurrent.Callable,java.lang.Object)"]}, {"title": "removeListener method of RTopicReactive and RTopicRx interfaces throws NoSuchMethodException", "body": "", "url": "https://github.com/redisson/redisson/issues/2005", "user": "mrniko", "labels": ["bug"], "created": "2019-03-22 06:30:55", "closed": "2019-03-22 06:42:26", "commits": {"32720d09dc76a713c093b488397051276d4ba74d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "32720d09dc76a713c093b488397051276d4ba74d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b41a66753b419bf70eb30e595198934f65db43d2"], "nameRev": "32720d09dc76a713c093b488397051276d4ba74d tags/redisson-3.10.6~29", "commitMessage": "Fixed - removeListener method of RTopicReactive and RTopicRx interfaces throws NoSuchMethodException #2005\n", "commitDateTime": "2019-03-22 09:41:32", "authoredDateTime": "2019-03-22 09:41:32", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/api/RTopicReactive.java", "insertions": 11, "deletions": 3, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/api/RTopicRx.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicReactiveTest.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "redisson/src/test/java/org/redisson/rx/RedissonTopicRxTest.java", "insertions": 73, "deletions": 0, "lines": 73}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RTopicReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.api.removeListener(int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.api.removeListener(org.redisson.api.listener.MessageListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RTopicRx.java", "spoonMethods": [{"spoonMethodName": "org.redisson.api.removeListener(int)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.api.removeListener(org.redisson.api.listener.MessageListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicReactiveTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicReactiveTest.testLong().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicReactiveTest.Message", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicReactiveTest.testRemoveListenerById()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicReactiveTest.testRemoveListenerByInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicRxTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.rx.RedissonTopicRxTest.testLong().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.rx.RedissonTopicRxTest.Message", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.rx.RedissonTopicRxTest.testRemoveListenerById()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.rx.RedissonTopicRxTest.testRemoveListenerByInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["32720d09dc76a713c093b488397051276d4ba74d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 5, "lines": 28, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 5, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/api"], "changesInPackagesSPOON": ["org.redisson.api.removeListener(int)", "org.redisson.api.removeListener(org.redisson.api.listener.MessageListener)"]}, {"title": "Error: java.lang.NoSuchFieldError: INSTANCE on start", "body": "Hello\r\n\r\nI have changed to hibernate-5,2,2,Final and redisson-hibernate-52\r\n\r\n\r\n```\r\n <dependency>\r\n          <groupId>org.redisson</groupId>\r\n          <artifactId>redisson-hibernate-52</artifactId>\r\n         <version>3.10.4</version>\r\n </dependency>\r\n\r\n```\r\nAnd i'm getting this error on start up\r\n```\r\n\r\nINFO  [2019-03-19 11:04:35,236] [redisson-netty-1-14] [] [MasterConnectionPool] 5 connections initialized for srvaxivln213/10.216.0.213:6379\r\njava.lang.NoSuchFieldError: INSTANCE\r\n        at org.redisson.hibernate.RedissonRegionFactory.start(RedissonRegionFactory.java:97)\r\n        at org.hibernate.cache.spi.RegionFactory.start(RegionFactory.java:63)\r\n        at org.hibernate.internal.CacheImpl.<init>(CacheImpl.java:71)\r\n        at org.hibernate.engine.spi.CacheInitiator.initiateService(CacheInitiator.java:28)\r\n        at org.hibernate.engine.spi.CacheInitiator.initiateService(CacheInitiator.java:20)\r\n        at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.initiateService(SessionFactoryServiceRegistryImpl.java:55)\r\n        at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:257)\r\n        at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:231)\r\n        at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:210)\r\n        at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:238)\r\n        at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:490)\r\n        at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)\r\n        at io.dropwizard.hibernate.SessionFactoryFactory.buildSessionFactory(SessionFactoryFactory.java:96)\r\n        at io.dropwizard.hibernate.SessionFactoryFactory.build(SessionFactoryFactory.java:49)\r\n        at io.dropwizard.hibernate.SessionFactoryFactory.build(SessionFactoryFactory.java:39)\r\n        at io.dropwizard.hibernate.HibernateBundle.run(HibernateBundle.java:62)\r\n        at io.dropwizard.hibernate.HibernateBundle.run(HibernateBundle.java:15)\r\n        at io.dropwizard.setup.Bootstrap.run(Bootstrap.java:200)\r\n        at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:42)\r\n        at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:85)\r\n        at io.dropwizard.cli.Cli.run(Cli.java:75)\r\n        at io.dropwizard.Application.run(Application.java:93)\r\n        at com.triggle.middleware.user.UserApplication.main(UserApplication.java:17)\r\n\r\n\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/1994", "user": "tufgupmi", "labels": ["bug"], "created": "2019-03-19 10:06:50", "closed": "2019-03-19 10:23:29", "commits": {"a2cf0e26e232d04f1961f1305be47e0d6b80f23d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a2cf0e26e232d04f1961f1305be47e0d6b80f23d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["da7ebb5b71c1b4fc4a7a551e65f291e680361ab8"], "nameRev": "a2cf0e26e232d04f1961f1305be47e0d6b80f23d tags/redisson-3.10.5~5", "commitMessage": "Fixed - compatibility with hibernate 5.2.0 - 5.2.4 versions. #1994\n", "commitDateTime": "2019-03-19 13:20:59", "authoredDateTime": "2019-03-19 13:20:59", "commitGitStats": [{"filePath": "redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRegionFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.hibernate.RedissonRegionFactory.start(org.hibernate.boot.spi.SessionFactoryOptions,java.util.Properties)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a2cf0e26e232d04f1961f1305be47e0d6b80f23d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate"], "changesInPackagesSPOON": ["org.redisson.hibernate.RedissonRegionFactory.start(org.hibernate.boot.spi.SessionFactoryOptions,java.util.Properties)"]}, {"title": "Connecting to a sentinel Redis 5.0.1 server fails with `NOAUTH Authentication required`", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\nI should be able to connect to a sentinel node of Redis 5.\r\n\r\n### Actual behavior\r\n\r\nI am trying to connect to the sentinel node of a Redis setup in AWS, and I am getting the message:\r\n\r\n```\r\nNOAUTH Authentication required.\r\n```\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n`5.0.1`\r\n\r\n### Redisson version\r\n\r\n`3.10.4`\r\n\r\n### Redisson configuration\r\n\r\n```\r\nConfig config = new Config();\r\nSentinelServersConfig sentinelConfig = config.useSentinelServers();\r\nsentinelConfig.setPassword(\"**************\");\r\nsentinelConfig\r\n                .setMasterName(\"redis-master\")\r\n                .addSentinelAddress(\"redis://redis-sentinel\");\r\n\r\nRedissonClient client = Redisson.create(config);\r\n```", "url": "https://github.com/redisson/redisson/issues/1981", "user": "ssouris", "labels": ["bug"], "created": "2019-03-13 18:23:40", "closed": "2019-04-18 13:14:00", "commits": {"4ee3074dfe4be72557945c851bdaf3581b48f0a3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "1332b03ed98bb3aec13db6621386137af395f96f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 35.000277777777775, "commitsDetails": [{"commitHash": "4ee3074dfe4be72557945c851bdaf3581b48f0a3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a12722ec92f5c7d49347136cf3a9581d9ff0e08d"], "nameRev": "4ee3074dfe4be72557945c851bdaf3581b48f0a3 tags/redisson-3.10.5~20", "commitMessage": "Fixed - Sentinel doesn't support AUTH command. #1981\n", "commitDateTime": "2019-03-14 12:55:34", "authoredDateTime": "2019-03-14 12:55:34", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1332b03ed98bb3aec13db6621386137af395f96f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ec5873bb1bc8af31f8e4483bb76655758ff5fd8e"], "nameRev": "1332b03ed98bb3aec13db6621386137af395f96f tags/redisson-3.10.7~21", "commitMessage": "Fixed - Redis Sentinel prior 5.0.1 version doesn't require password. Regression since 3.10.5 #1981\n", "commitDateTime": "2019-04-18 16:14:09", "authoredDateTime": "2019-04-18 16:14:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisAuthRequiredException.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisAuthRequiredException.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisAuthRequiredException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4ee3074dfe4be72557945c851bdaf3581b48f0a3", "1332b03ed98bb3aec13db6621386137af395f96f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 68, "deletions": 2, "lines": 70, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 6, "MOV": 3, "DEL": 1, "spoonFilesChanged": 4, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/client/handler", "redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisAuthRequiredException", "org.redisson.connection.SentinelConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean,java.util.List)", "org.redisson.connection.MasterSlaveConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "org.redisson.connection.SentinelConnectionManager"]}, {"title": "RStream.readGroup method doesn't handle empty result properly with Redis 5.0.3", "body": "", "url": "https://github.com/redisson/redisson/issues/1978", "user": "mrniko", "labels": ["bug"], "created": "2019-03-13 13:30:19", "closed": "2019-03-13 13:31:55", "commits": {"3311e56e4feb4c886f0a65951cb1d33b22428ec3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3311e56e4feb4c886f0a65951cb1d33b22428ec3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6c9c2950250054748f9f9dfa1746969b75caac2f"], "nameRev": "3311e56e4feb4c886f0a65951cb1d33b22428ec3 tags/redisson-3.10.5~24", "commitMessage": "Fixed - RStream.readGroup method doesn't handle empty result properly with Redis 5.0.3 #1978\n", "commitDateTime": "2019-03-13 16:31:35", "authoredDateTime": "2019-03-13 16:31:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ObjectDecoder.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/StreamIdDecoder.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/StreamObjectMapReplayDecoder.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ObjectDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ObjectDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "StreamIdDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.StreamIdDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamObjectMapReplayDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.StreamObjectMapReplayDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3311e56e4feb4c886f0a65951cb1d33b22428ec3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol/decoder"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.StreamObjectMapReplayDecoder.decode(java.util.List,org.redisson.client.handler.State)", "org.redisson.client.protocol.decoder.StreamIdDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.client.protocol.decoder.ObjectDecoder.decode(java.util.List,org.redisson.client.handler.State)"]}, {"title": "Security Breach - password passed in exceptions", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nWhen an exception is thrown upon the AUTH command the exception contains the actual password as a param. This happens because LogHelper.toString called by RedisConnection.async nowadays accepts a \"Object...\" all the time, and LogHelper redacts the password only when a single object of the type CommandData is passed.\r\n\r\n### Actual behavior\r\nCaused by: org.redisson.client.RedisTimeoutException: Command execution timeout for command: (AUTH), command params: [**our actual password**], Redis client: [addr=rediss://server:6379]\r\n\tat org.redisson.client.RedisConnection$2.run(RedisConnection.java:214)\r\n\tat io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:127)\r\n\t... 6 common frames omitted\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.10.4\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1976", "user": "gilshidlansikgong", "labels": ["bug"], "created": "2019-03-12 12:14:44", "closed": "2019-03-13 07:28:57", "commits": {"6c9c2950250054748f9f9dfa1746969b75caac2f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6c9c2950250054748f9f9dfa1746969b75caac2f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["deaca654c0cd565056835d532e600518ff81c4f7"], "nameRev": "6c9c2950250054748f9f9dfa1746969b75caac2f tags/redisson-3.10.5~25", "commitMessage": "Fixed - AUTH password included in Exception. #1976\n", "commitDateTime": "2019-03-13 10:24:27", "authoredDateTime": "2019-03-13 10:24:27", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/misc/LogHelper.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1.run()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,boolean,org.redisson.client.RedisConnection)", "TOT": 10, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,boolean,org.redisson.client.RedisConnection).7.run(io.netty.util.Timeout)", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean).6.run(io.netty.util.Timeout)", "TOT": 15, "UPD": 2, "INS": 3, "MOV": 5, "DEL": 5}]}, {"spoonFilePath": "LogHelper.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.LogHelper.toString(org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6c9c2950250054748f9f9dfa1746969b75caac2f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 7, "lines": 22, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 37, "UPD": 5, "INS": 9, "MOV": 13, "DEL": 10, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/misc", "redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,boolean,org.redisson.client.RedisConnection)", "org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,boolean,org.redisson.client.RedisConnection).7.run(io.netty.util.Timeout)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean).6.run(io.netty.util.Timeout)", "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1.run()", "org.redisson.misc.LogHelper.toString(org.redisson.client.protocol.RedisCommand,java.lang.Object[])"]}, {"title": "Bug: Tomcat with 'updateMode=AFTER_REQUEST' will not remove attributes ", "body": "Hi all! \r\n\r\nWe use Redisson with the tomcat-8 integration. Because this is a legacy application with mutable session objects we have to use `updateMode=AFTER_REQUEST`. \r\n\r\nThe problem we faces is that this update mode will not be able to sync removed attrbutes to redis and inform other running tomcat instances. This is bad because our other instances of Tomcat ends up using removed attributes. \r\n\r\nIt's actually easy to spot the bug if one inspect [RedissonSession.java#L267-L276](https://github.com/redisson/redisson/blob/master/redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java#L267-L276):\r\n\r\n```java\r\n    protected void removeAttributeInternal(String name, boolean notify) {\r\n        super.removeAttributeInternal(name, notify);\r\n        \r\n        if (updateMode == UpdateMode.DEFAULT && map != null) {\r\n            map.fastRemove(name);\r\n            if (readMode == ReadMode.MEMORY) {\r\n                topic.publish(new AttributeRemoveMessage(redissonManager.getNodeId(), getId(), name));\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nYou can see that `removeAttributeInternal` only does publish the removed attribute if `updateMode=DEFAULT`. This would be fine if Redisson somehow stored which attribute names which was removed so that they also was synced in the [store function](https://github.com/redisson/redisson/blob/master/redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java#L312-L323) triggered by  the UpdateValve. \r\n\r\n```java\r\n    public void store(HttpSession session) throws IOException {\r\n        if (session == null) {\r\n            return;\r\n        }\r\n        \r\n        if (updateMode == UpdateMode.AFTER_REQUEST) {\r\n            RedissonSession sess = (RedissonSession) super.findSession(session.getId());\r\n            if (sess != null) {\r\n                sess.save();\r\n            }\r\n        }\r\n    }\r\n```\r\nThe problem is that store will only save the current attributes ([see RedissonSession.java#L278-L303](https://github.com/redisson/redisson/blob/master/redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java#L278-L303)) on the session, and not the removed attributes. Handling removed attributes will require that Redisson  keeps control of both the added and the removed attributes within one request cycle (the same attribute may be added and removed multiple times). \r\n\r\n### How can this be fixed?\r\n\r\n#### Solution 1: relax AFTER_REQUEST\r\nI would argue that you actually want all session attributes to be synced as soon as possible. But in the rare scenario where you operate on mutable session data you would do an extra force-update after the request completes. \r\n\r\nThe proposal would be to replace AFTER_REQUEST mode with FORCE_UPDATE_AFTER_REQUEST. Then all `addAttrbiute` & `removeAttribute` should be synced as soon as possible, the same way you get with the `DEFUALT` mode today. But in addition you will get **all attributes** synced after the request completes. This would be easy to implement as it will only require removal of the if-guard inside the `removeAttributeInternal` function. \r\n\r\nIt could also be beneficial if one is able to specify a white-list of attributes known to be immutable. \r\n\r\n\r\n#### Solution 2: Redission keeps track of removed attributes\r\nIn this solution Redisson needs to keep track a map of removed attributes during a request cycle and make sure to remove these attributes from redis and notify all other tomcat instances. This will be more complex to implement correctly than solution 1. \r\n", "url": "https://github.com/redisson/redisson/issues/1971", "user": "ivarconr", "labels": ["bug"], "created": "2019-03-11 07:37:07", "closed": "2019-03-28 08:56:07", "commits": {"4b023aa34171c42d51b341e98d97e54029c782c7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "7dda76261db4615ac4967a4b094fbaf96ebc8736": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "4b023aa34171c42d51b341e98d97e54029c782c7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d75f61023362be5536bac596a575eb6a1d0809c9"], "nameRev": "4b023aa34171c42d51b341e98d97e54029c782c7 tags/redisson-3.10.6~17", "commitMessage": "Fixed - Tomcat Session Manager doesn't remove session attributes in updateMode=AFTER_REQUEST. #1971\n", "commitDateTime": "2019-03-28 11:55:59", "authoredDateTime": "2019-03-28 11:55:59", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributeRemoveMessage.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 0, "deletions": 14, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributeRemoveMessage.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 0, "deletions": 14, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributeRemoveMessage.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 0, "deletions": 14, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributeRemoveMessage.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 24, "deletions": 1, "lines": 25}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 0, "deletions": 14, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AttributeRemoveMessage.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.AttributeRemoveMessage", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.AttributeRemoveMessage.getName()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.removeAttributeInternal(java.lang.String,boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.setAttribute(java.lang.String,java.lang.Object,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().1.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.store(javax.servlet.http.HttpSession)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "UpdateValve.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.UpdateValve.invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7dda76261db4615ac4967a4b094fbaf96ebc8736", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4b023aa34171c42d51b341e98d97e54029c782c7"], "nameRev": "7dda76261db4615ac4967a4b094fbaf96ebc8736 tags/redisson-3.10.6~16", "commitMessage": "Fixed NPE in RedissonSession #1971\n", "commitDateTime": "2019-03-28 11:59:41", "authoredDateTime": "2019-03-28 11:59:41", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4b023aa34171c42d51b341e98d97e54029c782c7", "7dda76261db4615ac4967a4b094fbaf96ebc8736"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 157, "deletions": 108, "lines": 265, "gitFilesChange": 16}, "spoonStatsSummary": {"TOT": 40, "UPD": 10, "INS": 14, "MOV": 9, "DEL": 7, "spoonFilesChanged": 4, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession", "org.redisson.tomcat.RedissonSessionManager.store(javax.servlet.http.HttpSession)", "org.redisson.tomcat.AttributeRemoveMessage", "org.redisson.tomcat.RedissonSession.removeAttributeInternal(java.lang.String,boolean)", "org.redisson.tomcat.RedissonSessionManager.startInternal().1.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "org.redisson.tomcat.AttributeRemoveMessage.getName()", "org.redisson.tomcat.RedissonSession.setAttribute(java.lang.String,java.lang.Object,boolean)", "org.redisson.tomcat.UpdateValve.invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)", "org.redisson.tomcat.RedissonSession.save()"]}, {"title": "Deadlock after Redis timeout", "body": "### Expected behavior\r\n\r\nAfter a Redis response timeout, Redisson needs to be resilient and back to normal operation after Redis timeout and allow to lock and unlock critical sections again.\r\n\r\n### Actual behavior\r\n\r\nAfter a Redis response timeout **between attempts**, Redisson adds the lock to scheduled renew task and never remove them. So, the application enters on a deadlock due to a lock renewed even after unlock.\r\nThe task can run on the same thread due to reentrant lock feature, but when the task runs on another thread a deadlock occurs.\r\n\r\n### Steps to reproduce or test case\r\n\r\n1. Start Redis\r\n2. Run the test application (https://github.com/hmagarotto/redissonlock) with a simple locked task.\r\n3. Force a timeout on Redis runnning a client pause command: \"CLIENT PAUSE 5000\"\r\n\r\n### Redis version\r\n4.0.10\r\n\r\n### Redisson version\r\n3.10.3\r\n\r\n### Redisson configuration\r\nSingle server default", "url": "https://github.com/redisson/redisson/issues/1966", "user": "hmagarotto", "labels": ["bug"], "created": "2019-03-08 21:47:34", "closed": "2019-03-14 06:09:51", "commits": {"deaca654c0cd565056835d532e600518ff81c4f7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "deaca654c0cd565056835d532e600518ff81c4f7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f01fd0823b86a609ed7c6f09620f9996a71ef827"], "nameRev": "deaca654c0cd565056835d532e600518ff81c4f7 tags/redisson-3.10.5~26", "commitMessage": "Fixed - locked lock isn't unlocked after disconnect to Redis #1966\n", "commitDateTime": "2019-03-13 09:50:45", "authoredDateTime": "2019-03-13 09:50:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 76, "deletions": 24, "lines": 100}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.ExpirationEntry", "TOT": 11, "UPD": 2, "INS": 3, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.ExpirationEntry.getThreadId()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.scheduleExpirationRenewal(long)", "TOT": 15, "UPD": 2, "INS": 1, "MOV": 11, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.cancelExpirationRenewal(java.lang.Long)", "TOT": 12, "UPD": 1, "INS": 4, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonLock.scheduleExpirationRenewal(long).1.run(io.netty.util.Timeout)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonLock.unlockAsync(long)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.renewExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.ExpirationEntry.addThreadId(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.ExpirationEntry.hasNoThreads()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.ExpirationEntry.removeThreadId(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.ExpirationEntry.setTimeout(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.ExpirationEntry.getFirstThreadId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.renewExpiration().1.run(io.netty.util.Timeout)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["deaca654c0cd565056835d532e600518ff81c4f7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 76, "deletions": 24, "lines": 100, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 60, "UPD": 7, "INS": 20, "MOV": 25, "DEL": 8, "spoonFilesChanged": 1, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.scheduleExpirationRenewal(long)", "org.redisson.RedissonLock.ExpirationEntry.setTimeout(io.netty.util.Timeout)", "org.redisson.RedissonLock.scheduleExpirationRenewal(long).1.run(io.netty.util.Timeout)", "org.redisson.RedissonLock.unlockAsync(long)", "org.redisson.RedissonLock.ExpirationEntry.getThreadId()", "org.redisson.RedissonLock.renewExpiration().1.run(io.netty.util.Timeout)", "org.redisson.RedissonLock.ExpirationEntry", "org.redisson.RedissonLock.renewExpiration()", "org.redisson.RedissonLock.cancelExpirationRenewal(java.lang.Long)", "org.redisson.RedissonLock.ExpirationEntry.addThreadId(long)", "org.redisson.RedissonLock.ExpirationEntry.getFirstThreadId()", "org.redisson.RedissonLock.ExpirationEntry.removeThreadId(long)", "org.redisson.RedissonLock.ExpirationEntry.hasNoThreads()"]}, {"title": "RLocalCachedMap.destroy() method doesn't clear local cache", "body": "", "url": "https://github.com/redisson/redisson/issues/1962", "user": "mrniko", "labels": ["bug"], "created": "2019-03-07 09:36:48", "closed": "2019-03-07 09:38:17", "commits": {"d8dbda1b442e96ff54f7b0f99f723c7efba109e3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d8dbda1b442e96ff54f7b0f99f723c7efba109e3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8214d3381969300fc001d90edde7121c8aa32823"], "nameRev": "d8dbda1b442e96ff54f7b0f99f723c7efba109e3 tags/redisson-3.10.4~7", "commitMessage": "Fixed - RLocalCachedMap.destroy method doesn't clear local cache. #1962\n", "commitDateTime": "2019-03-07 12:37:26", "authoredDateTime": "2019-03-07 12:37:26", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.destroy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d8dbda1b442e96ff54f7b0f99f723c7efba109e3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap.destroy()"]}, {"title": "ClassNotFoundException is thrown by Tomcat Session Manager in readMode = MEMORY", "body": "", "url": "https://github.com/redisson/redisson/issues/1959", "user": "mrniko", "labels": ["bug"], "created": "2019-03-06 06:55:43", "closed": "2019-03-06 06:56:46", "commits": {"d8ae21e5405ce37746fda7e535e5b62543265331": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d8ae21e5405ce37746fda7e535e5b62543265331", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d5ee9a728bf1f58c816349656e46025fdceaf0da"], "nameRev": "d8ae21e5405ce37746fda7e535e5b62543265331 tags/redisson-3.10.4~14", "commitMessage": "Fixed - ClassNotFoundException is thrown by Tomcat Session Manager in readMode = MEMORY #1959\n", "commitDateTime": "2019-03-06 09:56:14", "authoredDateTime": "2019-03-06 09:55:49", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 6, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d8ae21e5405ce37746fda7e535e5b62543265331"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 56, "deletions": 24, "lines": 80, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession", "org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String)", "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)"]}, {"title": "Redisson Map Cache Event Notification doesn't work with HPE's NONSTOP OS", "body": "Redisson Map Cache Event Notification doesn't work with HPE's NONSTOP OS.\r\nThis is because of the endianness.\r\nBelow logic is there in MapCacheEventCodec.decode(ByteBuf buf, State state, Decoder<?> decoder) method, \r\nif (isWindows) {\r\n            keyLen = buf.readIntLE();\r\n        } else {\r\n        \tkeyLen = (int) buf.readLongLE();\r\n        }\r\n\r\nHere, if it is windows, buf.readIntLE() is used, or else buf.readLongLE() is used. But for HPE's NONSTOP OS, buf.readLong() has to be used.\r\n\r\nTo fix this, two classes has to be modified, \r\n\r\n1. **RedissonMapCache** - Like how isWindows is being set using \"Windows\" substring, isNonstop boolean also can be initialized using \"NONSTOP\" substring\r\nif (isNonstop == null) {\r\n            RFuture<Map<String, String>> serverFuture = commandExecutor.readAsync((String)null, StringCodec.INSTANCE, RedisCommands.INFO_SERVER);\r\n            serverFuture.syncUninterruptibly();\r\n            String os = serverFuture.getNow().get(\"os\");\r\n            isNonstop = os.contains(\"NONSTOP\");\r\n        }\r\nAlso, while initializing MapCacheEventCodec, need to pass isNonstop boolean.\r\nnew MapCacheEventCodec(codec, isWindows, isNonstop) - in all the 4 places\r\n\r\n2. **MapCacheEventCodec** - Need to declare isNonstop boolean and initialize(in constructor) based on the isNonstop boolean that is received from ReidssonMapCache\r\n\r\nAlso, in the decode method, like how isWindows is being checked, need to check isNonstop and use buf.readLong() if it is NONSTOP as given below.\r\nif (isWindows) {\r\n            keyLen = buf.readIntLE();\r\n        }else if (isNonstop) {\r\n            keyLen = buf.readLong();\r\n        } else {\r\n        \tkeyLen = (int) buf.readLongLE();\r\n        }\r\n\r\nCould you please fix this in Redisson code?", "url": "https://github.com/redisson/redisson/issues/1956", "user": "manubusupalli", "labels": ["bug"], "created": "2019-03-05 09:54:14", "closed": "2019-03-14 08:53:47", "commits": {"4535cf171a9347726240c7703d78d92301dbaf1d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "06f8ec1572e62405f3f021127e6372e7363da90c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "4535cf171a9347726240c7703d78d92301dbaf1d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["14b6b2250da02dbd7b33ae9192a1b1f3f03f013e"], "nameRev": "4535cf171a9347726240c7703d78d92301dbaf1d tags/redisson-3.10.4~10", "commitMessage": "Fixed - HP NONSTOP OS is not supported by MapCacheEventCodec #1956\n", "commitDateTime": "2019-03-06 13:32:59", "authoredDateTime": "2019-03-06 13:32:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 12, "deletions": 7, "lines": 19}, {"filePath": "redisson/src/main/java/org/redisson/codec/MapCacheEventCodec.java", "insertions": 11, "deletions": 7, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.addListener(org.redisson.api.map.event.MapEntryListener)", "TOT": 13, "UPD": 6, "INS": 2, "MOV": 5, "DEL": 0}]}, {"spoonFilePath": "MapCacheEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.MapCacheEventCodec", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.equals(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.hashCode()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State,org.redisson.client.protocol.Decoder)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.OSType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "06f8ec1572e62405f3f021127e6372e7363da90c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0d64e0fb623cd9ab1ecbb13f07b43034c209d0cf"], "nameRev": "06f8ec1572e62405f3f021127e6372e7363da90c tags/redisson-3.10.5~22", "commitMessage": "Fixed - HP NONSTOP OS is not supported by MapCacheEventCodec #1956\n", "commitDateTime": "2019-03-14 11:53:33", "authoredDateTime": "2019-03-14 11:53:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/MapCacheEventCodec.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MapCacheEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State,org.redisson.client.protocol.Decoder)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["06f8ec1572e62405f3f021127e6372e7363da90c"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.MapCacheEventCodec.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State,org.redisson.client.protocol.Decoder)"]}, {"title": "null exception in RedissonLocalCachedMap.java:741", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nno exception in readAllMap\r\n\r\n### Actual behavior\r\nNullPointerException happened in \r\n\r\n### Steps to reproduce or test case\r\nrun the attached code \"RedissonNullException.zip\"\r\n\r\n### Redis version\r\nRedis server v=4.0.8 sha=00000000:0 malloc=jemalloc-4.0.3 bits=64 build=9d70bbb410c08012\r\n\r\n### Redisson version\r\n3.10.3\r\n\r\n### Redisson configuration\r\n        Config redissonConfig = new Config();\r\n        redissonConfig.useSingleServer()\r\n            .setTimeout(1000000)\r\n            .setAddress(\"redis://192.168.1.123:6379\")\r\n            .setDatabase(10)\r\n            .setPassword(\"123\")\r\n            .setConnectionPoolSize(10)\r\n            .setConnectionMinimumIdleSize(2);\r\n        redissonConfig.setCodec(new FstCodec());\r\n        redissonConfig.setLockWatchdogTimeout(5000);\r\n        \r\n        RedissonClient client = Redisson.create(redissonConfig);\r\n        \r\n        LocalCachedMapOptions options = LocalCachedMapOptions.defaults()\r\n               .evictionPolicy(EvictionPolicy.NONE)\r\n               .cacheSize(0)\r\n               .reconnectionStrategy(ReconnectionStrategy.NONE)\r\n               .syncStrategy(SyncStrategy.UPDATE)\r\n               .evictionPolicy(EvictionPolicy.WEAK)\r\n               .timeToLive(0)\r\n               .maxIdle(0);\r\n\r\n### Log file\r\n[nullExceptionLog.txt](https://github.com/redisson/redisson/files/2927340/nullExceptionLog.txt)\r\n\r\n[RedissonNullException.zip](https://github.com/redisson/redisson/files/2927318/RedissonNullException.zip)\r\n\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1953", "user": "gmailisgone", "labels": ["bug"], "created": "2019-03-04 16:40:49", "closed": "2019-03-06 08:53:37", "commits": {"258ac53fab948295f79c9dac452181704e6c618e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "258ac53fab948295f79c9dac452181704e6c618e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ee51283731cc61e761371092350ea758b396b1ec"], "nameRev": "258ac53fab948295f79c9dac452181704e6c618e tags/redisson-3.10.4~12", "commitMessage": "Fixed - RedissonLocalCachedMap.readAll* methods throw NPE if evictionPolicy = WEAK is used #1953\n", "commitDateTime": "2019-03-06 11:52:50", "authoredDateTime": "2019-03-06 11:52:50", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllValuesAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllMapAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllEntrySetAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["258ac53fab948295f79c9dac452181704e6c618e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 0, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap.readAllMapAsync()", "org.redisson.RedissonLocalCachedMap.readAllValuesAsync()", "org.redisson.RedissonLocalCachedMap.readAllEntrySetAsync()"]}, {"title": "Evict delay bug", "body": "### Expected behavior\r\nevict old keys even with acceptable delay\r\n\r\n### Actual behavior\r\neviction delay is too big due to bug\r\n\r\n### Steps to reproduce or test case\r\nuse cache with ttl 10min or 1hour.\r\nin EvictionTask#run is `delay` that starts with 5seconds and is multiplied by 1.5 if no eviction is needed. therefore in first 10 minutes without evicting is many times multiplied and resulted to delay 110 or 165 seconds. that is CORRECT.\r\nBut after 10 minutes running evicting is started and this **delay remains at this big value and is NOT decreased** due to BUG. In production is this delay very big and redis is not fast enough in evicting and available memory is fulfilled. Jedis consumes under 100MB, redisson consumes 1GB(config limit) in short run.\r\n\r\nMapCacheEvictionTask#execute contains \r\n`return #expiredKeys1 + #expiredKeys2;` \r\nwhich cause that even for keysLimit=100 is returned number 200.\r\n\r\nEvictionTask#run contains \r\n` if (size == keysLimit) {\r\n                        delay = Math.max(minDelay, delay/4);\r\n}`\r\nand this is always false (200 ==100) and therefore there is no option to decrease delay back to low number.\r\n\r\n\r\n\r\n### Redis version\r\n4.0.2\r\n\r\n### Redisson version\r\n3.10.1 and also 3.10.3\r\n\r\n### Redisson configuration\r\nSingleServer and also on SentinelServer\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1941", "user": "roborobo2", "labels": ["bug"], "created": "2019-02-27 18:28:07", "closed": "2019-03-01 09:38:03", "commits": {"feee5dff88afbd64ec4db433fe93ba8986a9cb1c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "9ac3a7c5530c4bf93b41f892bade7cdf8b054902": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "feee5dff88afbd64ec4db433fe93ba8986a9cb1c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e58405e2c20a0a1aa4f281a9419f9c97f9a7ecaf"], "nameRev": "feee5dff88afbd64ec4db433fe93ba8986a9cb1c tags/redisson-3.10.4~22", "commitMessage": "Fixed - eviction delay for RMapCache object is not decreased #1941\n", "commitDateTime": "2019-02-28 14:55:45", "authoredDateTime": "2019-02-28 14:55:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/eviction/EvictionTask.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EvictionTask.java", "spoonMethods": [{"spoonMethodName": "org.redisson.eviction.EvictionTask.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9ac3a7c5530c4bf93b41f892bade7cdf8b054902", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a3a952ab07bed945d23c67f3d1a700fb4449c565"], "nameRev": "9ac3a7c5530c4bf93b41f892bade7cdf8b054902 tags/redisson-3.10.4~18", "commitMessage": "Feature - maxCleanUpDelay and minCleanUpDelay settings added to Config object. #1941\n", "commitDateTime": "2019-03-01 09:36:29", "authoredDateTime": "2019-03-01 09:36:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/config/Config.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "redisson/src/main/java/org/redisson/eviction/EvictionTask.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.Config", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.Config.getMinCleanUpDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.Config.setMinCleanUpDelay(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.Config.getMaxCleanUpDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.Config.setMaxCleanUpDelay(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EvictionTask.java", "spoonMethods": [{"spoonMethodName": "org.redisson.eviction.EvictionTask", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["feee5dff88afbd64ec4db433fe93ba8986a9cb1c", "9ac3a7c5530c4bf93b41f892bade7cdf8b054902"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 46, "deletions": 3, "lines": 49, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 1, "INS": 10, "MOV": 0, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/eviction", "redisson/src/main/java/org/redisson/config"], "changesInPackagesSPOON": ["org.redisson.eviction.EvictionTask.run()", "org.redisson.config.Config.setMaxCleanUpDelay(int)", "org.redisson.config.Config.getMinCleanUpDelay()", "org.redisson.config.Config", "org.redisson.config.Config.getMaxCleanUpDelay()", "org.redisson.config.Config.setMinCleanUpDelay(int)", "org.redisson.eviction.EvictionTask"]}, {"title": "tryLockAsync and lockAsync methods of RedissonMultiLock object get hang", "body": "", "url": "https://github.com/redisson/redisson/issues/1939", "user": "mrniko", "labels": ["bug"], "created": "2019-02-26 11:59:32", "closed": "2019-02-26 12:00:06", "commits": {"e58405e2c20a0a1aa4f281a9419f9c97f9a7ecaf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e58405e2c20a0a1aa4f281a9419f9c97f9a7ecaf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["54a231716865326845aacc7f1547072aeb429b9e"], "nameRev": "e58405e2c20a0a1aa4f281a9419f9c97f9a7ecaf tags/redisson-3.10.4~23", "commitMessage": "Fixed - tryLockAsync and lockAsync methods of RedissonMultiLock object get hang #1939\n", "commitDateTime": "2019-02-26 15:00:06", "authoredDateTime": "2019-02-26 15:00:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMultiLock.java", "insertions": 148, "deletions": 136, "lines": 284}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["e58405e2c20a0a1aa4f281a9419f9c97f9a7ecaf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 148, "deletions": 136, "lines": 284, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"]}, {"title": "RStream.listPending throws IndexOutOfBoundsException", "body": "IndexOutOfBoundsException arise when there are no elements in group", "url": "https://github.com/redisson/redisson/issues/1936", "user": "mrniko", "labels": ["bug"], "created": "2019-02-25 11:37:50", "closed": "2019-02-25 12:24:21", "commits": {"2d420f0940caf2069c4b0d897d86e5e73506b3b1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2d420f0940caf2069c4b0d897d86e5e73506b3b1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b48c10a768b89307aea58dc5a845626c6a500756"], "nameRev": "2d420f0940caf2069c4b0d897d86e5e73506b3b1 tags/redisson-3.10.3~6", "commitMessage": "Fixed - RStream.listPending throws IndexOutOfBoundsException #1936\n", "commitDateTime": "2019-02-25 15:24:08", "authoredDateTime": "2019-02-25 15:24:08", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/PendingResultDecoder.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PendingResultDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.PendingResultDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2d420f0940caf2069c4b0d897d86e5e73506b3b1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 2, "lines": 13, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson/client/protocol/decoder"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.PendingResultDecoder.decode(java.util.List,org.redisson.client.handler.State)", "org.redisson.client.protocol"]}, {"title": "LocalCacheView.toCacheKey StackOverflowError", "body": "```java\r\npublic CacheKey toCacheKey(Object key) {\r\n    ByteBuf encoded = object.encodeMapKey(key);\r\n    try {\r\n        return toCacheKey(encoded);\r\n    } finally {\r\n        encoded.release();\r\n    }\r\n}\r\n```", "url": "https://github.com/redisson/redisson/issues/1935", "user": "douyux", "labels": ["bug"], "created": "2019-02-25 07:33:24", "closed": "2019-02-25 10:09:44", "commits": {"de7c115542f770ba25c2fc5712f88c2184324dcc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "de7c115542f770ba25c2fc5712f88c2184324dcc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4400c929e660df9886ddd32837282e1aaa1389f7"], "nameRev": "de7c115542f770ba25c2fc5712f88c2184324dcc tags/redisson-3.10.3~8", "commitMessage": "Fixed - StackOverflowError arise in LocalCacheView.toCacheKey #1935\n", "commitDateTime": "2019-02-25 13:09:01", "authoredDateTime": "2019-02-25 13:09:01", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cache/LocalCacheView.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalCacheView.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LocalCacheView.toCacheKey(io.netty.buffer.ByteBuf)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["de7c115542f770ba25c2fc5712f88c2184324dcc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cache"], "changesInPackagesSPOON": ["org.redisson.cache.LocalCacheView.toCacheKey(io.netty.buffer.ByteBuf)"]}, {"title": "Transactional RBucket object doesn't respect transaction timeout", "body": "", "url": "https://github.com/redisson/redisson/issues/1928", "user": "mrniko", "labels": ["bug"], "created": "2019-02-21 11:52:35", "closed": "2019-02-21 11:59:19", "commits": {"e781736691a0bf691a45369f865f2308d814bbed": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e781736691a0bf691a45369f865f2308d814bbed", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["07fe10381c77410754a9777186dd99a2fcced66b"], "nameRev": "e781736691a0bf691a45369f865f2308d814bbed tags/redisson-3.10.3~20", "commitMessage": "Fixed - Transactional RBucket object doesn't respect transaction timeout #1928\n", "commitDateTime": "2019-02-21 14:55:09", "authoredDateTime": "2019-02-21 14:55:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalBucket.java", "insertions": 17, "deletions": 15, "lines": 32}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/DeleteOperation.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/bucket/BucketCompareAndSetOperation.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/bucket/BucketGetAndDeleteOperation.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/bucket/BucketGetAndSetOperation.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/bucket/BucketSetOperation.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/bucket/BucketTrySetOperation.java", "insertions": 8, "deletions": 5, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonTransactionalBucket.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.compareAndSetAsync(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.setAsync(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.setAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.trySetAsync(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.trySetAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.deleteAsync().3.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.compareAndSetAsync(java.lang.Object,java.lang.Object).4.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.getAndSetAsync(java.lang.Object).5.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransactionalBucket.getAndDeleteAsync().6.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DeleteOperation.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.operation.DeleteOperation", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.DeleteOperation.commit(org.redisson.command.CommandAsyncExecutor)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.DeleteOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "BucketCompareAndSetOperation.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketCompareAndSetOperation", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketCompareAndSetOperation.commit(org.redisson.command.CommandAsyncExecutor)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketCompareAndSetOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BucketGetAndDeleteOperation.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketGetAndDeleteOperation", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketGetAndDeleteOperation.commit(org.redisson.command.CommandAsyncExecutor)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketGetAndDeleteOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BucketGetAndSetOperation.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketGetAndSetOperation", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketGetAndSetOperation.commit(org.redisson.command.CommandAsyncExecutor)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketGetAndSetOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BucketSetOperation.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketSetOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketSetOperation", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketSetOperation.commit(org.redisson.command.CommandAsyncExecutor)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BucketTrySetOperation.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketTrySetOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketTrySetOperation", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.operation.bucket.BucketTrySetOperation.commit(org.redisson.command.CommandAsyncExecutor)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e781736691a0bf691a45369f865f2308d814bbed"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 58, "deletions": 38, "lines": 96, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 80, "UPD": 3, "INS": 51, "MOV": 26, "DEL": 0, "spoonFilesChanged": 7, "spoonMethodsChanged": 28}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/transaction", "redisson/src/main/java/org/redisson/transaction/operation/bucket", "redisson/src/main/java/org/redisson/transaction/operation"], "changesInPackagesSPOON": ["org.redisson.transaction.operation.DeleteOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.operation.bucket.BucketCompareAndSetOperation.commit(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.RedissonTransactionalBucket.trySetAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "org.redisson.transaction.RedissonTransactionalBucket.compareAndSetAsync(java.lang.Object,java.lang.Object).4.run()", "org.redisson.transaction.RedissonTransactionalBucket", "org.redisson.transaction.operation.DeleteOperation", "org.redisson.transaction.operation.bucket.BucketTrySetOperation.commit(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.RedissonTransactionalBucket.compareAndSetAsync(java.lang.Object,java.lang.Object)", "org.redisson.transaction.operation.bucket.BucketGetAndDeleteOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.operation.DeleteOperation.commit(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.RedissonTransactionalBucket.getAndSetAsync(java.lang.Object).5.run()", "org.redisson.transaction.operation.bucket.BucketGetAndDeleteOperation.commit(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.RedissonTransactionalBucket.setAsync(java.lang.Object)", "org.redisson.transaction.RedissonTransactionalBucket.trySetAsync(java.lang.Object)", "org.redisson.transaction.operation.bucket.BucketTrySetOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.operation.bucket.BucketCompareAndSetOperation", "org.redisson.transaction.operation.bucket.BucketSetOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.operation.bucket.BucketGetAndSetOperation", "org.redisson.transaction.operation.bucket.BucketGetAndDeleteOperation", "org.redisson.transaction.RedissonTransactionalBucket.setAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "org.redisson.transaction.operation.bucket.BucketSetOperation.commit(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.RedissonTransactionalBucket.getAndDeleteAsync().6.run()", "org.redisson.transaction.operation.bucket.BucketTrySetOperation", "org.redisson.transaction.operation.bucket.BucketCompareAndSetOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.operation.bucket.BucketGetAndSetOperation.rollback(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.operation.bucket.BucketSetOperation", "org.redisson.transaction.operation.bucket.BucketGetAndSetOperation.commit(org.redisson.command.CommandAsyncExecutor)", "org.redisson.transaction.RedissonTransactionalBucket.deleteAsync().3.run()"]}, {"title": "FSTCodec memory leak", "body": "several puts (5-10) into a MapCache guarded with a Lock seems to accumulate the payloads in thread locals. The payload is large (several Mb) and the pod (dockered spring boot app with 700 Mb max) goes out of heap. The app running with redisson 3.7.5 has no such problems.\r\n\r\nredisson 3.10.2\r\n\r\n      config\r\n        .useMasterSlaveServers()\r\n        .setMasterAddress(redisHost)\r\n        .addSlaveAddress(redisSlave)\r\n        .setPassword(redisPassword)\r\n        .setTimeout(10000);\r\n\r\nredis 4.0.1 (master, slave)\r\n\r\n![mat-1](https://user-images.githubusercontent.com/37765839/53153947-d331f800-35b9-11e9-8903-e1e021632545.png)\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1927", "user": "astmuc", "labels": ["bug"], "created": "2019-02-21 08:21:14", "closed": "2019-02-25 09:57:11", "commits": {"b77fda1e7e2c8746ce90e4c188577f89568c03cc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "e2c134e1a6f14460106a73c4dbd9c1f67a24bac8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "4c216e257c445d69f5b4a6a2a3962e01f5685afc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "b77fda1e7e2c8746ce90e4c188577f89568c03cc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ff4c2f71f2bfd6284aed7b8bc185c24b8aa57716"], "nameRev": "b77fda1e7e2c8746ce90e4c188577f89568c03cc tags/redisson-3.10.3~14", "commitMessage": "Fixed - FSTCodec memory leak #1927\n", "commitDateTime": "2019-02-22 13:12:09", "authoredDateTime": "2019-02-22 13:12:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/FstCodec.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FstCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.FstCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.FstCodec.2.encode(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e2c134e1a6f14460106a73c4dbd9c1f67a24bac8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c16a31b09bf3eec3df0abd4b50ab11bf273c16ed"], "nameRev": "e2c134e1a6f14460106a73c4dbd9c1f67a24bac8 tags/redisson-3.10.3~12", "commitMessage": "Fixed - FSTCodec memory leak #1927\n", "commitDateTime": "2019-02-25 12:49:21", "authoredDateTime": "2019-02-25 12:49:21", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/FstCodec.java", "insertions": 83, "deletions": 8, "lines": 91}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FstCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.FstCodec.2.encode(java.lang.Object)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.FstCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.FstCodec.FSTDefaultStreamCoderFactory", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.FstCodec", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4c216e257c445d69f5b4a6a2a3962e01f5685afc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e2c134e1a6f14460106a73c4dbd9c1f67a24bac8"], "nameRev": "4c216e257c445d69f5b4a6a2a3962e01f5685afc tags/redisson-3.10.3~11", "commitMessage": "Fixed - FSTCodec memory leak #1927\n", "commitDateTime": "2019-02-25 12:56:36", "authoredDateTime": "2019-02-25 12:56:36", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/FstCodec.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FstCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.FstCodec", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b77fda1e7e2c8746ce90e4c188577f89568c03cc"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.FstCodec.2.encode(java.lang.Object)", "org.redisson.codec.FstCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)"]}, {"title": "RedissonLocalCachedMap.clearLocalCache\u662f\u5426\u80fd\u591f\u7b49\u5f85\u6240\u6709instance\u6e05\u7406\u5b8c\u6bd5\u540e\u8fd4\u56de?", "body": "`RedissonLocalCachedMap.clearLocalCache` \u65b9\u6cd5\u53ea\u662f`publish`\u4e00\u4e2a\u6e05\u7406\u6d88\u606f\uff0c\u5e76\u672a\u786e\u4fdd\u6240\u6709`instance`\u6e05\u7406\u5b8c\u6210\uff0c\u751a\u81f3\u8fde\u5f53\u524d\u5b9e\u4f8b\u4e5f\u4e0d\u80fd\u786e\u4fdd\u6e05\u7406\u5b8c\u6210\uff0c\u53ea\u662f\u4e00\u4e2a\u5f02\u6b65\u65b9\u6cd5\uff0c\u80fd\u5426\u589e\u5f3a\u4e00\u4e0b\uff0c\u52a0\u4e00\u4e2a\u6e05\u7406`ack`\u6d88\u606f\u5e76\u7b49\u5f85\u6e05\u7406\u5b8c\u6bd5\r\n\r\n```java\r\nLocalCachedMapOptions<String, Entry> options = LocalCachedMapOptions.<String, Entry>defaults()\r\n        .syncStrategy(LocalCachedMapOptions.SyncStrategy.INVALIDATE)\r\n        .reconnectionStrategy(LocalCachedMapOptions.ReconnectionStrategy.CLEAR)\r\n        .evictionPolicy(LocalCachedMapOptions.EvictionPolicy.NONE)\r\n        .timeToLive(builder.localExpireSeconds, TimeUnit.SECONDS);\r\nRLocalCachedMap<String, Entry> cache = client.getLocalCachedMap(\r\n        \"entry_cache\",\r\n        JsonJacksonCodec.INSTANCE,\r\n        options);\r\n\r\nEntry entry1 = new Entry();\r\ncache.put(\"1\", entry1);\r\n\r\ncache.map1.clearLocalCache();\r\n\r\nEntry entry2 = cache.get(\"1\");\r\nassertFalse(entry1 == entry2);  // maybe true\r\n```\r\n\r\n\u5982\u679c\u5f71\u54cd\u6bd4\u8f83\u5927\uff0c\u662f\u5426\u53ef\u80fd\u65b0\u589e\u4e00\u4e2a\u65b9\u6cd5", "url": "https://github.com/redisson/redisson/issues/1926", "user": "douyux", "labels": ["bug"], "created": "2019-02-21 06:08:27", "closed": "2019-06-20 11:54:12", "commits": {"d8055ba0dd779be1d92b57a95717a73d9813208f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 119.00027777777778, "commitsDetails": [{"commitHash": "d8055ba0dd779be1d92b57a95717a73d9813208f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4c76960ae48cf9e8c1780a665c48d8c77040b901"], "nameRev": "d8055ba0dd779be1d92b57a95717a73d9813208f tags/redisson-3.11.1~12", "commitMessage": "Fixed - RedissonLocalCachedMap.clearLocalCache method executes asynchronously. #1926\n", "commitDateTime": "2019-06-20 14:54:23", "authoredDateTime": "2019-06-20 14:54:23", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/cache/LocalCacheListener.java", "insertions": 32, "deletions": 4, "lines": 36}, {"filePath": "redisson/src/main/java/org/redisson/cache/LocalCachedMapClear.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/cache/LocalCachedMapDisable.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/cache/LocalCachedMapEnable.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/cache/LocalCachedMessageCodec.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLocalCachedMapTest.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.deleteAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.init(java.lang.String,org.redisson.api.LocalCachedMapOptions,org.redisson.api.RedissonClient,org.redisson.eviction.EvictionScheduler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LocalCacheListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LocalCacheListener.clearLocalCacheAsync()", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.cache.LocalCacheListener.getInstanceId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.LocalCacheListener.getClearSemaphore(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.LocalCacheListener", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.LocalCacheListener.generateId()", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.LocalCacheListener.add(org.redisson.cache.Cache).2.onMessage(java.lang.CharSequence,java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocalCachedMapClear.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LocalCachedMapClear", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.LocalCachedMapClear.getRequestId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocalCachedMapDisable.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LocalCachedMapDisable", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocalCachedMapEnable.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LocalCachedMapEnable", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocalCachedMessageCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LocalCachedMessageCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.LocalCachedMessageCodec.2.encode(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLocalCachedMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMapTest.testLocalCacheClear()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d8055ba0dd779be1d92b57a95717a73d9813208f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 58, "deletions": 7, "lines": 65, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 33, "UPD": 3, "INS": 24, "MOV": 5, "DEL": 1, "spoonFilesChanged": 6, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cache", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.cache.LocalCacheListener.clearLocalCacheAsync()", "org.redisson.cache.LocalCachedMapDisable", "org.redisson.cache.LocalCacheListener.getInstanceId()", "org.redisson.cache.LocalCachedMessageCodec.2.encode(java.lang.Object)", "org.redisson.cache.LocalCacheListener.add(org.redisson.cache.Cache).2.onMessage(java.lang.CharSequence,java.lang.Object)", "org.redisson.cache.LocalCacheListener.getClearSemaphore(byte[])", "org.redisson.cache.LocalCachedMapClear", "org.redisson.RedissonLocalCachedMap.deleteAsync()", "org.redisson.cache.LocalCacheListener", "org.redisson.cache.LocalCachedMapClear.getRequestId()", "org.redisson.RedissonLocalCachedMap.init(java.lang.String,org.redisson.api.LocalCachedMapOptions,org.redisson.api.RedissonClient,org.redisson.eviction.EvictionScheduler)", "org.redisson.cache.LocalCachedMessageCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.cache.LocalCachedMapEnable", "org.redisson.cache.LocalCacheListener.generateId()"]}, {"title": "Regression of RBatch result performance decoding", "body": "Appeared since 2.12.2 / 3.7.2 version", "url": "https://github.com/redisson/redisson/issues/1925", "user": "mrniko", "labels": ["bug"], "created": "2019-02-20 12:18:50", "closed": "2019-02-20 12:19:39", "commits": {"9aeeeb6d21118a4c22a76fc1479ee428b34c844a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9aeeeb6d21118a4c22a76fc1479ee428b34c844a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f34c3985d593f2b4c92a3182b6367e5950d91f82"], "nameRev": "9aeeeb6d21118a4c22a76fc1479ee428b34c844a tags/redisson-3.10.3~24", "commitMessage": "Fixed - performance regression of RBatch result decoding. #1925\n", "commitDateTime": "2019-02-20 15:19:13", "authoredDateTime": "2019-02-20 15:19:13", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.checkConnectionFuture(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,org.redisson.misc.RPromise,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean,long,int,org.redisson.api.BatchOptions.ExecutionMode,java.util.concurrent.atomic.AtomicInteger)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.sendCommand(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9aeeeb6d21118a4c22a76fc1479ee428b34c844a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandBatchService.sendCommand(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "org.redisson.command.CommandBatchService.checkConnectionFuture(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,org.redisson.misc.RPromise,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean,long,int,org.redisson.api.BatchOptions.ExecutionMode,java.util.concurrent.atomic.AtomicInteger)"]}, {"title": "RedissonNamespaceHandlerSupport fail to load at Tomcat startup", "body": "The scenario is a Spring based application deployed on top of Tomcat 8 configured to use the RedissonSessionManager. \r\n\r\nAt startup, Spring initialization try to discover on classloader the namespace handlers including the org.redisson.spring.support.RedissonNamespaceHandlerSupport provided with the reddisson-all.jar library.\r\n\r\nAt this point the init of this handler fails with a NoClassDefFoundError probably because the Tomcat classloader cannot see Spring dependencies that are loaded by webapp classloader.\r\n\r\nUnfortunately, after this WARN, the RedissonSessionManager doesn't work properly and new sessions are not stored on Redis.\r\n\r\nHere the complete stacktrace:\r\n`\r\n15-Feb-2019 15.48.23 [Appalti]|WARN |Ignoring namespace handler [org.redisson.spring.support.RedissonNamespaceHandlerSupport]: problem with handler class file or dependent class\r\njava.lang.NoClassDefFoundError: org/springframework/beans/factory/xml/NamespaceHandlerSupport\r\n\tat java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)\r\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\r\n\tat java.net.URLClassLoader.defineClass(URLClassLoader.java:468)\r\n\tat java.net.URLClassLoader.access$100(URLClassLoader.java:74)\r\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:369)\r\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:363)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:362)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat java.lang.Class.forName0(Native Method)\r\n\tat java.lang.Class.forName(Class.java:348)\r\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1315)\r\n\tat org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1163)\r\n\tat org.springframework.util.ClassUtils.forName(ClassUtils.java:201)\r\n\tat org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.initHandlerMappings(DefaultNamespaceHandlerResolver.java:117)\r\n\tat org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.<init>(DefaultNamespaceHandlerResolver.java:96)\r\n\tat org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.<init>(DefaultNamespaceHandlerResolver.java:82)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.createDefaultNamespaceHandlerResolver(XmlBeanDefinitionReader.java:488)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.createReaderContext(XmlBeanDefinitionReader.java:477)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:458)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:353)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)\r\n\tat org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)\r\n\tat org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:112)\r\n\tat org.springframework.jdbc.support.SQLErrorCodesFactory.<clinit>(SQLErrorCodesFactory.java:70)\r\n\tat org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.setDataSource(SQLErrorCodeSQLExceptionTranslator.java:133)\r\n\tat org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(SQLErrorCodeSQLExceptionTranslator.java:98)\r\n\tat org.springframework.jdbc.support.JdbcAccessor.getExceptionTranslator(JdbcAccessor.java:99)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:553)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:587)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:616)\r\n\tat org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:624)\r\n\tat it.eldasoft.gene.db.dao.jdbc.SqlDaoJdbc.getVectorQuery(SqlDaoJdbc.java:603)\r\n\tat it.eldasoft.gene.bl.SqlManager.getVector(SqlManager.java:184)\r\n\tat it.eldasoft.gene.bl.SqlManager.isTable(SqlManager.java:433)\r\n\tat it.eldasoft.gene.bl.SqlManager$$FastClassByCGLIB$$9be41d47.invoke(<generated>)\r\n\tat net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:149)\r\n\tat org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:695)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:107)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:166)\r\n\tat org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:630)\r\n\tat it.eldasoft.gene.bl.SqlManager$$EnhancerByCGLIB$$bf7df9b3.isTable(<generated>)\r\n\tat it.eldasoft.gene.bl.SqlManager.setUserStoriaModifiche(SqlManager.java:477)\r\n\tat it.eldasoft.gene.commons.web.spring.DataSourceTransactionManagerBase.doBegin(DataSourceTransactionManagerBase.java:65)\r\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:350)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:262)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:102)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:166)\r\n\tat org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:630)\r\n\tat it.eldasoft.gene.bl.admin.AccountManager$$EnhancerByCGLIB$$bf386373.updateLogins(<generated>)\r\n\tat it.eldasoft.gene.commons.web.struts.GeneStartupPlugIn.initConfigurabile(GeneStartupPlugIn.java:94)\r\n\tat it.eldasoft.gene.commons.web.struts.PlugInBase.initApplicazione(PlugInBase.java:257)\r\n\tat it.eldasoft.gene.commons.web.struts.PlugInBase.init(PlugInBase.java:177)\r\n\tat org.apache.struts.action.ActionServlet.initModulePlugIns(ActionServlet.java:871)\r\n\tat org.apache.struts.action.ActionServlet.init(ActionServlet.java:359)\r\n\tat javax.servlet.GenericServlet.init(GenericServlet.java:158)\r\n\tat org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1199)\r\n\tat org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1143)\r\n\tat org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:1032)\r\n\tat org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:5035)\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5345)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)\r\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)\r\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)\r\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)\r\n\tat org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:586)\r\n\tat org.apache.catalina.startup.HostConfig$DeployDescriptor.run(HostConfig.java:1795)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.beans.factory.xml.NamespaceHandlerSupport\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:382)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n... 75 more\r\n`\r\nAfter some tests, we try to solve this problem by removing the following files from redisson-all-3.10.2.jar:\r\n- META-INF/spring.factories\r\n- META-INF/spring.handlers\r\n- META-INF/spring.schemas\r\n- META-INF/spring.tooling\r\n\r\nso there is no need of Sprint integration in our case.\r\n\r\nThere is any solution/configuration we can adopt to avoid this error and keep the original library?", "url": "https://github.com/redisson/redisson/issues/1920", "user": "marcobrizi", "labels": ["bug"], "created": "2019-02-16 08:49:25", "closed": "2019-10-30 10:17:39", "commits": {"ef3e8913fe6ac67abf69fd1bc719f60b6bded866": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 256.0002777777778, "commitsDetails": [{"commitHash": "ef3e8913fe6ac67abf69fd1bc719f60b6bded866", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["246f1d7d3ce3b2e51e31f9fd928011e8f60a0431"], "nameRev": "ef3e8913fe6ac67abf69fd1bc719f60b6bded866 tags/redisson-parent-3.11.6~32", "commitMessage": "Fixed - spring metainfo files should be excluded in redisson-all artifact. #1920\n", "commitDateTime": "2019-10-30 13:17:55", "authoredDateTime": "2019-10-30 13:17:55", "commitGitStats": [{"filePath": "redisson-all/pom.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ef3e8913fe6ac67abf69fd1bc719f60b6bded866"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Rename RedissonMap then set value in map , the value will put in the old map", "body": "```\r\n        Config config = new Config();\r\n        config.useSingleServer().setAddress(\"addrss\").setPassword(\"passwd\");\r\n        RedissonClient client = Redisson.create(config);\r\n        RMap<String, String> map = client.getMap(\"aaa\");\r\n        map.put(\"111\",\"222\");  // 1\r\n        map.rename(\"bbb\");\r\n        map.put(\"222222\",\"333333\");   // 2\r\n        client.shutdown();\r\n```\r\nthe 1 will move into 'bbb' map, but the 2 will put in the 'aaa' map,not the new one 'bbb'.\r\n", "url": "https://github.com/redisson/redisson/issues/1913", "user": "sadanyoyo", "labels": ["bug"], "created": "2019-02-13 09:02:29", "closed": "2019-02-13 10:05:09", "commits": {"cd01ebcf30992c298f033a59d1605a63c7605b27": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cd01ebcf30992c298f033a59d1605a63c7605b27", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["73babb4f27eb95e35012f1d9800ac834566c976c"], "nameRev": "cd01ebcf30992c298f033a59d1605a63c7605b27 tags/redisson-3.10.3~45", "commitMessage": "Fixed - rename and renamenx methods doesn't change name of current object. #1913\n", "commitDateTime": "2019-02-13 13:04:46", "authoredDateTime": "2019-02-13 13:04:46", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonObject.java", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBucketTest.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonObject.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonObject", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonObject.renameAsync(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonObject.renamenxAsync(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonBucketTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBucketTest.testRenamenx()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBucketTest.testRename()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cd01ebcf30992c298f033a59d1605a63c7605b27"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 3, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonObject.renameAsync(java.lang.String)", "org.redisson.RedissonObject", "org.redisson.RedissonObject.renamenxAsync(java.lang.String)"]}, {"title": "Spring session renaime failed when session ID changed on Redis cluster", "body": "### Actual behavior\r\nRedisson Session exception:\r\n\r\n{\"time\":\"2019-01-31T20:49:46.279+00:00\",\"level\":\"ERROR\",\"msg\":\"Runtime error: [[org.redisson.client.RedisException: CROSSSLOT Keys in request don't hash to the same slot. channel: [id: 0x1bc3eb9e, L:/172.18.0.6:51190 - R:172.18.0.3/172.18.0.3:7002] command: (RENAME), params: [spring:session:afe9d89c-35fe-4cd5-949f-b6fc07426bbe, spring:session:b93a060f-331a-4bcb-839f-8f2d764941ff]]]\",\"requestId\":\"98778a17-677b-453b-91a7-b520b1596458\",\"X-B3-TraceId\":\"2cc7f5f9cc324dcf\",\"requestURI\":\"/auth/v3/oauth/token\",\"stackTrace\":\"org.redisson.client.RedisException: CROSSSLOT Keys in request don't hash to the same slot. channel: [id: 0x1bc3eb9e, L:/172.18.0.6:51190 - R:172.18.0.3/172.18.0.3:7002] command: (RENAME), params: [spring:session:afe9d89c-35fe-4cd5-949f-b6fc07426bbe, spring:session:b93a060f-331a-4bcb-839f-8f2d764941ff]\\n\\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:314)\\n\\tat org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:130)\\n\\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:110)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)\\n\\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\\n\\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\\n\\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\\n\\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\\n\\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\\n\\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\\n\\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\\n\\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)\\n\\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:677)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:612)\\n\\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:529)\\n\\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:491)\\n\\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)\\n\\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n\"\r\n\r\n\r\n### Redis version\r\nRedis Cluster 3.2.7\r\n\r\n### Redisson version \r\n3.10.1\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1897", "user": "yevgenb", "labels": ["bug"], "created": "2019-01-31 21:05:02", "closed": "2019-02-01 14:10:52", "commits": {"8610d60b0c1d9a3f1ed334871b51cdfe5da1a577": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8610d60b0c1d9a3f1ed334871b51cdfe5da1a577", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["584cb7c15182311abca7067d140169df47a33bb9"], "nameRev": "8610d60b0c1d9a3f1ed334871b51cdfe5da1a577 tags/redisson-3.10.2~4", "commitMessage": "Fixed - Spring session ID change doesn't work in Redis cluster #1897\n", "commitDateTime": "2019-02-01 17:12:17", "authoredDateTime": "2019-02-01 17:12:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.changeSessionId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8610d60b0c1d9a3f1ed334871b51cdfe5da1a577"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 1, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/session"], "changesInPackagesSPOON": ["org.redisson.spring.session.RedissonSessionRepository.RedissonSession.changeSessionId()"]}, {"title": "Netty buffer leak during failover and RBatch object exection", "body": "", "url": "https://github.com/redisson/redisson/issues/1896", "user": "mrniko", "labels": ["bug"], "created": "2019-01-31 12:26:01", "closed": "2019-01-31 12:30:39", "commits": {"483ac35f6d4848752fc80d1848c255ad00486c2b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "483ac35f6d4848752fc80d1848c255ad00486c2b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f659c58c8c4d7524e00654931fc4b39fc5f9a10e"], "nameRev": "483ac35f6d4848752fc80d1848c255ad00486c2b tags/redisson-2.15.2~13", "commitMessage": "Fixed - Buffer leak during failover and RBatch object execution. #1896\n", "commitDateTime": "2019-01-31 15:28:59", "authoredDateTime": "2019-01-31 15:26:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/LogHelper.java", "insertions": 9, "deletions": 8, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LogHelper.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.LogHelper", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.LogHelper.toString(java.lang.Object)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["483ac35f6d4848752fc80d1848c255ad00486c2b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 8, "lines": 17, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.LogHelper", "org.redisson.misc.LogHelper.toString(java.lang.Object)"]}, {"title": "RFuture.cause() method should return CancellationException and not throw it.", "body": "Code to reproduce the issue:\r\n\r\n```java\r\nRedissonPromise p = new RedissonPromise();\r\np.cancel(true);\r\np.cause();\r\n```", "url": "https://github.com/redisson/redisson/issues/1893", "user": "mrniko", "labels": ["bug"], "created": "2019-01-29 13:52:15", "closed": "2019-01-29 14:04:33", "commits": {"319a7845693732035fbf3d391fb77f7b8a83646c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "319a7845693732035fbf3d391fb77f7b8a83646c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["31b38027d98851bb66352cfd41e71f3588f44397"], "nameRev": "319a7845693732035fbf3d391fb77f7b8a83646c tags/redisson-3.10.2~7", "commitMessage": "Fixed - RFuture.cause() method should return CancellationException and not throw it #1893\n", "commitDateTime": "2019-01-29 17:00:02", "authoredDateTime": "2019-01-29 17:00:02", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/RedissonPromise.java", "insertions": 4, "deletions": 7, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPromise.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.RedissonPromise.cancel(boolean)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.misc.RedissonPromise.cause()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["319a7845693732035fbf3d391fb77f7b8a83646c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 7, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.RedissonPromise.cause()", "org.redisson.misc.RedissonPromise.cancel(boolean)"]}, {"title": "RStream.readGroup use timeout parameter error", "body": "### Steps to reproduce or test case\r\n`rStream.readGroup(groupName, consumerName, 10, 5, TimeUnit.SECONDS);`\r\n\r\n```\r\nio.netty.util.concurrent.DefaultPromise 514 notifyListener0 - An exception was thrown by org.redisson.command.CommandAsyncService$11$1.operationComplete() java.lang.NumberFormatException: For input string: \"SEND\" \r\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[?:1.8.0_60]\r\n\tat java.lang.Long.parseLong(Long.java:589) ~[?:1.8.0_60]\r\n\tat java.lang.Long.valueOf(Long.java:803) ~[?:1.8.0_60]\r\n\tat org.redisson.command.CommandAsyncService.checkWriteFuture(CommandAsyncService.java:862) ~[redisson-2.15.0.jar:?]\r\n\tat org.redisson.command.CommandAsyncService.access$200(CommandAsyncService.java:92) ~[redisson-2.15.0.jar:?]\r\n\tat org.redisson.command.CommandAsyncService$11$1.operationComplete(CommandAsyncService.java:800) ~[redisson-2.15.0.jar:?]\r\n\tat org.redisson.command.CommandAsyncService$11$1.operationComplete(CommandAsyncService.java:797) ~[redisson-2.15.0.jar:?]\r\n```\r\nThe string \"SEND\" is the group name.\r\n\r\n### Redis version\r\n5.0.3\r\n\r\n### Redisson version\r\n2.15.0\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1892", "user": "sycoral", "labels": ["bug"], "created": "2019-01-29 10:09:02", "closed": "2019-01-30 08:07:43", "commits": {"f659c58c8c4d7524e00654931fc4b39fc5f9a10e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f659c58c8c4d7524e00654931fc4b39fc5f9a10e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5b40913b967f8fc959e7277d8f19b92b78ee9c99"], "nameRev": "f659c58c8c4d7524e00654931fc4b39fc5f9a10e tags/redisson-2.15.2~14", "commitMessage": "Fixed - NumberFormatException error appears in log during RStream.readGroup invocation #1892\n", "commitDateTime": "2019-01-30 11:08:50", "authoredDateTime": "2019-01-30 11:08:25", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonStreamTest.java", "insertions": 49, "deletions": 1, "lines": 50}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,boolean,org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonStreamTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonStreamTest.testPoll()", "TOT": 9, "UPD": 1, "INS": 8, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonStreamTest.testReadGroupBlocking()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f659c58c8c4d7524e00654931fc4b39fc5f9a10e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,boolean,org.redisson.client.RedisConnection)"]}, {"title": "After Redis failover, the number of connection to the new slave is 1 instead of 34", "body": "I just realized issued #1845 had been closed. This issue is related to #1845 fix. \r\n\r\nI have verified that previous master node was added back as a slave node after failover with release 3.10.1. Thanks for the fix. But the number of connections to the salve is only 1 instead of 34. Is this expected? I tested a couple of times and got the same result. Following screen shot shows two tests. I started the app, Redisson established connections to both 003 and 004. Then I did failover from 003 to 004. After failover was done, there was only one connection to 003. Then I restarted the app to make sure Redisson re-established connections to both 003 and 004. I did failover from 004 to 003. After failover was done, again there was only one connection to 004. ( You can run netstat -nt | sort +5 | fgrep .6379 | grep -n ^   from app box to see the connections)  \r\n<img width=\"907\" alt=\"image\" src=\"https://user-images.githubusercontent.com/4614936/51627229-52b6a380-1ef6-11e9-9e5b-a47764d2e1d0.png\">", "url": "https://github.com/redisson/redisson/issues/1891", "user": "jimwang-dtci", "labels": ["bug"], "created": "2019-01-28 16:46:59", "closed": "2019-01-31 12:32:37", "commits": {"29d014a2252e35fbdb2025a083453951a4ffc535": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "29d014a2252e35fbdb2025a083453951a4ffc535", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1c4f6190bc64b7ca663e497ce01253461459d553"], "nameRev": "29d014a2252e35fbdb2025a083453951a4ffc535 tags/redisson-2.15.2~11", "commitMessage": "Fixed - slave's connection pools are not initialized when it back from failover. #1891\n", "commitDateTime": "2019-01-31 15:34:01", "authoredDateTime": "2019-01-31 15:34:01", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 9, "deletions": 10, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.unfreeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.initConnections(org.redisson.connection.ClientConnectionsEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["29d014a2252e35fbdb2025a083453951a4ffc535"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 11, "lines": 23, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 14, "UPD": 0, "INS": 4, "MOV": 6, "DEL": 4, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/balancer", "redisson/src/main/java/org/redisson/connection/pool"], "changesInPackagesSPOON": ["org.redisson.connection.balancer.LoadBalancerManager.unfreeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.pool.ConnectionPool.initConnections(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "tomcat7 \u542f\u52a8 Unable to process Jar entry [META-INF/versions/9/module-info.class] from Jar", "body": "Redisson: 3.10.1\r\nTomcat:7\r\nCentos 64bit\r\nOracle jdk 1.8.0_111\r\n\r\n\r\n\u4e00\u6708 24, 2019 8:36:13 \u4e0b\u5348 org.apache.catalina.startup.ContextConfig processAnnotationsJar\r\n\u4e25\u91cd: Unable to process Jar entry [META-INF/versions/9/module-info.class] from Jar [jar:file:/Users/sk/local/tomcat7_xinghuo-uat_8081/lib/redisson-all-3.10.1.jar!/] for annotations\r\norg.apache.tomcat.util.bcel.classfile.ClassFormatException: Invalid byte tag in constant pool: 19\r\n\tat org.apache.tomcat.util.bcel.classfile.Constant.readConstant(Constant.java:97)\r\n\tat org.apache.tomcat.util.bcel.classfile.ConstantPool.<init>(ConstantPool.java:55)\r\n\tat org.apache.tomcat.util.bcel.classfile.ClassParser.readConstantPool(ClassParser.java:176)\r\n\tat org.apache.tomcat.util.bcel.classfile.ClassParser.parse(ClassParser.java:85)\r\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsStream(ContextConfig.java:2089)\r\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsJar(ContextConfig.java:1965)\r\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsUrl(ContextConfig.java:1931)\r\n\tat org.apache.catalina.startup.ContextConfig.processAnnotations(ContextConfig.java:1916)\r\n\tat org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1330)\r\n\tat org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:889)\r\n\tat org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:386)\r\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)\r\n\tat org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5419)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n\tat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\r\n\tat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\r\n\tat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:652)\r\n\tat org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:1095)\r\n\tat org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1930)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)", "url": "https://github.com/redisson/redisson/issues/1884", "user": "scofier", "labels": ["bug"], "created": "2019-01-24 12:39:21", "closed": "2019-01-24 12:57:19", "commits": {"45c615e4d90d3e1b000d2e6e0dd5ecc8cbe60ae9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "45c615e4d90d3e1b000d2e6e0dd5ecc8cbe60ae9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d70aa0fc132b65e97f0762a8c9ab29a80313dbdc"], "nameRev": "45c615e4d90d3e1b000d2e6e0dd5ecc8cbe60ae9 tags/redisson-2.15.2~33", "commitMessage": "Fixed - class files should be excluded from META-INF folder. #1884\n", "commitDateTime": "2019-01-24 15:58:21", "authoredDateTime": "2019-01-24 15:58:00", "commitGitStats": [{"filePath": "redisson-all/pom.xml", "insertions": 9, "deletions": 1, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["45c615e4d90d3e1b000d2e6e0dd5ecc8cbe60ae9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "java.lang.NullPointerException when trying to get attribute from session", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n\r\nredisson-tomcat-8-2.15.2-SNAPSHOT.jar\r\nredisson-all-2.15.2-SNAPSHOT.jar\r\nTomcat 8.5.35\r\n\r\n### Redisson configuration\r\n\r\n```\r\n    <ResourceLink name=\"session/redisson\"\r\n                  global=\"session/redisson\"\r\n\t\t          type=\"org.redisson.api.RedissonClient\" />\r\n\t\t\t\t  \r\n    <Manager className=\"org.redisson.tomcat.JndiRedissonSessionManager\"\r\n         readMode=\"REDIS\"\r\n\t\t updateMode=\"DEFAULT\"\r\n         jndiName=\"session/redisson\" />\r\n```", "url": "https://github.com/redisson/redisson/issues/1874", "user": "jchobantonov", "labels": ["bug"], "created": "2019-01-21 22:47:42", "closed": "2019-01-28 14:26:50", "commits": {"31dfbdbcf2933bc4784bac97b708ca32bf9a7b93": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "31dfbdbcf2933bc4784bac97b708ca32bf9a7b93", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2b4529c7365246a13b43a64cc5e8dd740b6edf95"], "nameRev": "31dfbdbcf2933bc4784bac97b708ca32bf9a7b93 tags/redisson-2.15.2~20", "commitMessage": "Fixed - NPE arise during Tomcat Session getAttribute/delete methods invocation.\ngetAttributeNames and getValueNames methods implementation. #1874\n", "commitDateTime": "2019-01-28 17:27:45", "authoredDateTime": "2019-01-28 17:27:45", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 41, "deletions": 0, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.getAttributeNames()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.getValueNames()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.delete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["31dfbdbcf2933bc4784bac97b708ca32bf9a7b93"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 164, "deletions": 0, "lines": 164, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 9, "UPD": 0, "INS": 5, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.getValueNames()", "org.redisson.tomcat.RedissonSession.getAttributeNames()", "org.redisson.tomcat.RedissonSession.delete()", "org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String)"]}, {"title": "Getting Redisson is shutdown", "body": "### Expected behavior\r\nNot throwing RedissonShutdownException\r\n\r\n### Actual behavior\r\nThrowing RedissonShutdownException\r\n\r\n### Steps to reproduce or test case\r\nOne of our WAR did not start and I thing this have something to do with RedissonShutdownException\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\nredisson-tomcat-8-2.15.1-SNAPSHOT.jar\r\nredisson-all-2.15.1-SNAPSHOT.jar\r\nTomcat 8.5.35\r\n\r\n### Redisson configuration\r\n\r\n    <Manager className=\"org.redisson.tomcat.JndiRedissonSessionManager\" jndiName=\"session/redisson\"  readMode=\"REDIS\"\r\n\t\t updateMode=\"DEFAULT\"/>", "url": "https://github.com/redisson/redisson/issues/1872", "user": "jchobantonov", "labels": ["bug"], "created": "2019-01-19 14:31:42", "closed": "2019-01-22 08:32:14", "commits": {"ce8a8eb791fa35b8ec15a43d3e61b44108536131": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "ce8a8eb791fa35b8ec15a43d3e61b44108536131", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2aca77d9888e9bad07220d1a317dee8cfd0d98fa"], "nameRev": "ce8a8eb791fa35b8ec15a43d3e61b44108536131 tags/redisson-2.15.2~39", "commitMessage": "Fixed - JndiRedissonSessionManager shouldn't shutdown Redisson instance. #1872\n", "commitDateTime": "2019-01-22 11:33:28", "authoredDateTime": "2019-01-22 11:33:28", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/JndiRedissonSessionManager.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/JndiRedissonSessionManager.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/JndiRedissonSessionManager.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/JndiRedissonSessionManager.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 7, "deletions": 3, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JndiRedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.JndiRedissonSessionManager.shutdownRedisson()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.shutdownRedisson()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.stopInternal()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ce8a8eb791fa35b8ec15a43d3e61b44108536131"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 44, "deletions": 12, "lines": 56, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSessionManager.stopInternal()", "org.redisson.tomcat.JndiRedissonSessionManager.shutdownRedisson()", "org.redisson.tomcat.RedissonSessionManager.shutdownRedisson()"]}, {"title": "RateType.PER_CLIENT in RRateLimiter does not work.", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nEach client should acquire their own permission when using RateType.PER_CLIENT in RRateLimiter.\r\n### Actual behavior\r\nWhen one client acquire the permission, the other client fails to acquire the permission at the same time even though using RateType.PER_CLIENT.\r\n### Steps to reproduce or test case\r\n```\r\n        //Two clients run the test case at the same time,the first client acquires the permission, the other one fails.\r\n        @Test\r\n\tpublic static void test2() throws Exception\r\n\t{\r\n\t\tConfig config = RedissionConfigBuilder.build();\r\n\t\tRedissonClient redisson = Redisson.create(config);\r\n    \t        RRateLimiter rateLimiter = redisson.getRateLimiter(\"myRateLimiter_client\");\r\n    \t        rateLimiter.trySetRate(RateType.PER_CLIENT, 5, 5, RateIntervalUnit.SECONDS);\r\n    \t        System.out.println(rateLimiter.tryAcquire(5));    \t\r\n    \t        redisson.shutdown();\r\n\t}\r\n```\r\nBy the way, I checked the source code of  method \"tryAcquireAsync\" in class \"RedissonRateLimiter\" , I found the condition judgment below does not work:\r\n```\r\n+ \"if type == 1 then \"\r\n   + \"valueName = KEYS[3];\"\r\n + \"end;\"\r\n```\r\nIt works when the code is:\r\n```\r\n+ \"if type == '1' then \"\r\n   + \"valueName = KEYS[3];\"\r\n + \"end;\"\r\n```\r\n### Redis version\r\n3.2.9\r\n### Redisson version\r\n3.8.1\r\n### Redisson configuration\r\nstandalone", "url": "https://github.com/redisson/redisson/issues/1870", "user": "shengjie8329", "labels": ["bug"], "created": "2019-01-18 14:02:48", "closed": "2019-01-18 14:09:18", "commits": {"319fa7109398c8fe1cf994a9c4747f1b4f935a2d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "319fa7109398c8fe1cf994a9c4747f1b4f935a2d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["705511b53c7cbbbf31eefc9bd5f4022199ec6c3b"], "nameRev": "319fa7109398c8fe1cf994a9c4747f1b4f935a2d tags/redisson-2.15.1~4", "commitMessage": "Fixed - RRateLimiter RateType checking. #1870\n", "commitDateTime": "2019-01-18 17:10:26", "authoredDateTime": "2019-01-18 17:10:26", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRateLimiter.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRateLimiter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiter.tryAcquireAsync(org.redisson.client.protocol.RedisCommand,java.lang.Long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["319fa7109398c8fe1cf994a9c4747f1b4f935a2d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRateLimiter.tryAcquireAsync(org.redisson.client.protocol.RedisCommand,java.lang.Long)"]}, {"title": "Can't delete/cancel scheduleWithFixedDelay Job which is running", "body": "redisson 3.10.0\r\n\r\nWhen a `scheduleWithFixedDelay` job is running, cancel the job using `cancelTask`, the job can be terminated. But when the job is over, the taskId will be inserted into redis again. ", "url": "https://github.com/redisson/redisson/issues/1869", "user": "YYoungZou", "labels": ["bug"], "created": "2019-01-18 01:24:14", "closed": "2019-01-18 10:53:15", "commits": {"0dcefca39c2a3add9258536b987232f4aa40a272": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0dcefca39c2a3add9258536b987232f4aa40a272", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["96ef05671ee21c8adac1904dd2be83ad66410f10"], "nameRev": "0dcefca39c2a3add9258536b987232f4aa40a272 tags/redisson-2.15.1~7", "commitMessage": "Fixed - running scheduleWithFixedDelay Job couldn't be canceled. #1869\n", "commitDateTime": "2019-01-18 13:54:30", "authoredDateTime": "2019-01-18 13:54:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonScheduledExecutorServiceTest.java", "insertions": 36, "deletions": 0, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.params.TaskParameters,java.util.Date)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.finish(java.lang.String,java.util.Date)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.params.TaskParameters)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeCallable(org.redisson.executor.params.TaskParameters)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.schedule(org.redisson.executor.params.ScheduledCronExpressionParameters)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.scheduleWithFixedDelay(org.redisson.executor.params.ScheduledWithFixedDelayParameters)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.finish(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScheduledExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.ScheduledRunnableTask2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelAtFixedDelay2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0dcefca39c2a3add9258536b987232f4aa40a272"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 9, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 14, "UPD": 8, "INS": 4, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.executor.TasksRunnerService.finish(java.lang.String,java.util.Date)", "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.params.TaskParameters)", "org.redisson.executor.TasksRunnerService.finish(java.lang.String,boolean)", "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.params.TaskParameters,java.util.Date)", "org.redisson.executor.TasksRunnerService.executeCallable(org.redisson.executor.params.TaskParameters)", "org.redisson.executor.TasksRunnerService.schedule(org.redisson.executor.params.ScheduledCronExpressionParameters)", "org.redisson.executor.TasksRunnerService.scheduleWithFixedDelay(org.redisson.executor.params.ScheduledWithFixedDelayParameters)"]}, {"title": "RedissonSessionManager throws java.lang.ClassNotFoundException if readMode=MEMORY", "body": "", "url": "https://github.com/redisson/redisson/issues/1867", "user": "mrniko", "labels": ["bug"], "created": "2019-01-17 07:15:47", "closed": "2019-01-17 07:16:57", "commits": {"ae14dba2fcd3150493a00f1cb97af6620745da70": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ae14dba2fcd3150493a00f1cb97af6620745da70", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["228319d656951d18c881c72666339213a8ba2eba"], "nameRev": "ae14dba2fcd3150493a00f1cb97af6620745da70 tags/redisson-2.15.1~15", "commitMessage": "Fixed - RedissonSessionManager throws java.lang.ClassNotFoundException if readMode=MEMORY #1867\n", "commitDateTime": "2019-01-17 10:18:00", "authoredDateTime": "2019-01-17 10:18:00", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributeMessage.java", "insertions": 24, "deletions": 4, "lines": 28}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributeRemoveMessage.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 7, "deletions": 11, "lines": 18}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributesClearMessage.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 22, "deletions": 10, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributeMessage.java", "insertions": 24, "deletions": 4, "lines": 28}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributeRemoveMessage.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 7, "deletions": 11, "lines": 18}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributesClearMessage.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 22, "deletions": 10, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributeMessage.java", "insertions": 24, "deletions": 4, "lines": 28}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributeRemoveMessage.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 7, "deletions": 11, "lines": 18}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributesClearMessage.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 22, "deletions": 10, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributeMessage.java", "insertions": 24, "deletions": 4, "lines": 28}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributeRemoveMessage.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 7, "deletions": 11, "lines": 18}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributesClearMessage.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 22, "deletions": 10, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 13, "deletions": 4, "lines": 17}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["ae14dba2fcd3150493a00f1cb97af6620745da70"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 306, "deletions": 160, "lines": 466, "gitFilesChange": 28}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat"]}, {"title": "RedissonSessionRepository subscribe and process too many keys", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nIn `RedissonSessionRepository.onMessage()`, if a `body` not starts with `\"redisson_spring_session:\"`, just return.\r\n### Actual behavior\r\nIn my application, there are other keys contains char `':'`.\r\n\r\n`RedissonSessionRepository` try to `HGETALL` a session key not exist.\r\n\r\nIt's not necessary and print a lot debug log:\r\n\r\n```\r\nacquired connection for command ...\r\n``` \r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.9.0\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1864", "user": "yxc023", "labels": ["bug"], "created": "2019-01-16 13:14:55", "closed": "2019-01-16 13:41:53", "commits": {"ad92d39b89921f528ee5ae734c7fa5a7f10c94f1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ad92d39b89921f528ee5ae734c7fa5a7f10c94f1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["959fad17715bc2f62a2fda73a59f4f13a90232ec"], "nameRev": "ad92d39b89921f528ee5ae734c7fa5a7f10c94f1 tags/redisson-2.15.1~19", "commitMessage": "Fixed - RedissonSessionRepository process changes of unnecessary keys #1864\n", "commitDateTime": "2019-01-16 16:43:03", "authoredDateTime": "2019-01-16 16:43:03", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ad92d39b89921f528ee5ae734c7fa5a7f10c94f1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/session"], "changesInPackagesSPOON": ["org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)"]}, {"title": "Tomcat Session expires in Redis earlier than scheduled by Tomcat", "body": "", "url": "https://github.com/redisson/redisson/issues/1861", "user": "mrniko", "labels": ["bug"], "created": "2019-01-16 08:02:34", "closed": "2019-01-16 08:03:10", "commits": {"959fad17715bc2f62a2fda73a59f4f13a90232ec": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "959fad17715bc2f62a2fda73a59f4f13a90232ec", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4fbaa1bfeb3ec8afe0e723979ce6f1dc663dd480"], "nameRev": "959fad17715bc2f62a2fda73a59f4f13a90232ec tags/redisson-2.15.1~20", "commitMessage": "Fixed - Tomcat Session expires in Redis earlier than scheduled by Tomcat. #1861\n", "commitDateTime": "2019-01-16 11:04:25", "authoredDateTime": "2019-01-16 11:04:25", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 9, "deletions": 10, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.access()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.setMaxInactiveInterval(int)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.expireSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["959fad17715bc2f62a2fda73a59f4f13a90232ec"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 36, "deletions": 37, "lines": 73, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 14, "UPD": 2, "INS": 3, "MOV": 6, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.expireSession()", "org.redisson.tomcat.RedissonSession.setMaxInactiveInterval(int)", "org.redisson.tomcat.RedissonSession.access()", "org.redisson.tomcat.RedissonSession.save()"]}, {"title": "\u4f7f\u7528 javamelody \u76d1\u542csession\u4f1a\bNullPointerException", "body": "Redisson: 3.10.0\r\nTomcat:7\r\nCentos 64bit\r\nOracle jdk 1.8.0_111\r\n\r\n\r\n\r\n`\u4e25\u91cd: Session event listener threw exception\r\njava.lang.NullPointerException\r\n\tat org.redisson.tomcat.RedissonSession.getAttribute(RedissonSession.java:77)\r\n\tat org.apache.catalina.session.StandardSessionFacade.getAttribute(StandardSessionFacade.java:120)\r\n\tat net.bull.javamelody.SessionListener.sessionCreated(SessionListener.java:301)\r\n\tat org.apache.catalina.session.StandardSession.tellNew(StandardSession.java:422)\r\n\tat org.apache.catalina.session.StandardSession.setId(StandardSession.java:394)\r\n\tat org.redisson.tomcat.RedissonSession.setId(RedissonSession.java:85)\r\n\tat org.apache.catalina.session.StandardSession.setId(StandardSession.java:375)\r\n\tat org.redisson.tomcat.RedissonSessionManager.createSession(RedissonSessionManager.java:126)\r\n\tat org.apache.catalina.connector.Request.doGetSession(Request.java:3020)\r\n\tat org.apache.catalina.connector.Request.getSession(Request.java:2384)\r\n\tat org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:897)\r\n\tat javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:229)\r\n\tat org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.onAuthentication(SessionFixationProtectionStrategy.java:91)\r\n\tat org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:204)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)\r\n\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169)`", "url": "https://github.com/redisson/redisson/issues/1859", "user": "scofier", "labels": ["bug"], "created": "2019-01-15 02:44:29", "closed": "2019-01-16 06:22:29", "commits": {"4fbaa1bfeb3ec8afe0e723979ce6f1dc663dd480": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4fbaa1bfeb3ec8afe0e723979ce6f1dc663dd480", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d1618f4b697d7689983f54b3ae15376bb3a4e966"], "nameRev": "4fbaa1bfeb3ec8afe0e723979ce6f1dc663dd480 tags/redisson-2.15.1~21", "commitMessage": "Fixed - RedissonSession.getAttribute throws NPE #1859\n", "commitDateTime": "2019-01-16 09:23:29", "authoredDateTime": "2019-01-16 09:23:29", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.setId(java.lang.String,boolean)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.endAccess()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.add(org.apache.catalina.Session)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4fbaa1bfeb3ec8afe0e723979ce6f1dc663dd480"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 52, "deletions": 40, "lines": 92, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 5, "MOV": 5, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.save()", "org.redisson.tomcat.RedissonSessionManager.add(org.apache.catalina.Session)", "org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String)", "org.redisson.tomcat.RedissonSession", "org.redisson.tomcat.RedissonSession.setId(java.lang.String,boolean)", "org.redisson.tomcat.RedissonSession.endAccess()"]}, {"title": "Unable to decode data +PONG", "body": "### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n```text\r\n2019-01-12 12:53:15.134 ERROR 1 --- [isson-netty-1-3] o.r.client.handler.CommandDecoder        : Unable to decode data. channel: [id: 0x51b60460, L:/10.42.1.145:35170 - R:10.42.3.8/10.42.3.8:6379] message: +PONG\r\njava.util.concurrent.CancellationException: null\r\njava.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2263) org.redisson.misc.RedissonPromise.cancel(RedissonPromise.java:239)\r\norg.redisson.client.handler.PingConnectionHandler$1.run(PingConnectionHandler.java:59)\r\nio.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:670)\r\nio.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:745)\r\nio.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:473)\r\njava.lang.Thread.run(Thread.java:745)\r\n```\r\n### Redis version\r\n`4.0.11`\r\n### Redisson version\r\n`3.10.0`\r\n### Redisson configuration\r\n```java\r\n                Config config = new Config();\r\n                config.useSentinelServers()\r\n                        .setScanInterval(1000)\r\n                        .setPingConnectionInterval(1000)\r\n                        .setFailedSlaveCheckInterval(5000)\r\n                        .setFailedSlaveReconnectionInterval(3000)\r\n                        .setKeepAlive(true)\r\n                        .addSentinelAddress(address)\r\n                        .setMasterConnectionPoolSize(128)\r\n                        .setSlaveConnectionPoolSize(128)\r\n                        .setConnectTimeout(10000)\r\n                        .setTimeout(10000)\r\n                        .setMasterName(\"redis-master\")\r\n                        .setPassword(\"password\")\r\n                        .setDatabase(0);\r\n```", "url": "https://github.com/redisson/redisson/issues/1855", "user": "zhou-hao", "labels": ["bug"], "created": "2019-01-12 05:30:51", "closed": "2019-01-18 06:42:44", "commits": {"4f6cde2af56bd9a558a6957a5d45e03303304e71": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "4f6cde2af56bd9a558a6957a5d45e03303304e71", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["79e03e13aac81f1fd94b3cdaa7b4da29817f27ab"], "nameRev": "4f6cde2af56bd9a558a6957a5d45e03303304e71 tags/redisson-2.15.1~12", "commitMessage": "Fixed - don't send PING command for blocking queues. #1855\n", "commitDateTime": "2019-01-18 09:43:39", "authoredDateTime": "2019-01-18 09:43:39", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/PingConnectionHandler.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PingConnectionHandler.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).2.run(io.netty.util.Timeout)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4f6cde2af56bd9a558a6957a5d45e03303304e71"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).2.run(io.netty.util.Timeout)"]}, {"title": "Fails when trying to read yaml config", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nTo load config values from redisson.yaml\r\n### Actual behavior\r\nTries to load redisson.json first and aborts even if redisson.yaml is present\r\n### Steps to reproduce or test case\r\nCreate a redisson.yaml config and without a redisson.json config present.\r\n### Redis version\r\n4.0.9\r\n### Redisson version\r\n\"org.redisson\" % \"redisson-hibernate-52\" % \"3.10.0\"\r\n### Redisson configuration\r\nsingleServerConfig:\r\n  address: \"redis://127.0.0.1:6379\"\r\n  database: 0\r\n\r\nThe error is in RedissonRegionFactory.java on line 126. A possible fix would be to nest the config loading like it's done when loading a file without the class loader.", "url": "https://github.com/redisson/redisson/issues/1851", "user": "flippy84", "labels": ["bug"], "created": "2019-01-11 13:17:49", "closed": "2019-01-24 14:11:36", "commits": {"3b6467d6ce708fdfe4a0cb7ec66ed81ace860616": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "3b6467d6ce708fdfe4a0cb7ec66ed81ace860616", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["45c615e4d90d3e1b000d2e6e0dd5ecc8cbe60ae9"], "nameRev": "3b6467d6ce708fdfe4a0cb7ec66ed81ace860616 tags/redisson-2.15.2~32", "commitMessage": "Fixed - redisson yaml configuration located in classpath couldn't be loaded by hibernate factory. #1851\n", "commitDateTime": "2019-01-24 17:12:57", "authoredDateTime": "2019-01-24 17:12:57", "commitGitStats": [{"filePath": "redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate/RedissonRegionFactory.java", "insertions": 10, "deletions": 24, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRegionFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.hibernate.RedissonRegionFactory.loadConfig(java.lang.ClassLoader,java.lang.String)", "TOT": 17, "UPD": 2, "INS": 2, "MOV": 8, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3b6467d6ce708fdfe4a0cb7ec66ed81ace860616"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 40, "deletions": 96, "lines": 136, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 17, "UPD": 2, "INS": 2, "MOV": 8, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-hibernate/redisson-hibernate-4/src/main/java/org/redisson/hibernate", "redisson-hibernate/redisson-hibernate-53/src/main/java/org/redisson/hibernate", "redisson-hibernate/redisson-hibernate-5/src/main/java/org/redisson/hibernate", "redisson-hibernate/redisson-hibernate-52/src/main/java/org/redisson/hibernate"], "changesInPackagesSPOON": ["org.redisson.hibernate.RedissonRegionFactory.loadConfig(java.lang.ClassLoader,java.lang.String)"]}, {"title": "Slave connection will not recover from freeze mode after failover", "body": "Hi!\r\nI am testing failover behavior of redisson on AWS Elasticache in replicatedServers mode with one master and one slave. I am using read mode MASTER_SLAVE. After the failover is finished redisson correctly detects the new master and redirects all traffic to the master. The slave needs around 5 minutes to recover on Elasticache. Redisson is continously checking that connection, but after recovering that connection it does not move traffic to the slave. \r\n\r\n### Expected behavior\r\nTraffic should again be load balanced between master and slave after failover is completed.\r\n\r\n### Actual behavior\r\nConnections to master and slave are established but all traffic is routed to master.\r\nBy debugging i identified that the slave connection will remain freezed with FreezeReason Manager.\r\n\r\n### Steps to reproduce or test case\r\n1. Start app with replicateServers mode with one slave and one master\r\n2. Start failover on AWS console and wait until it is finished.\r\n3. Watch traffic on slave. -> nothing\r\n\r\n### Redis version\r\n4.0.10\r\n\r\n### Redisson version\r\n3.10.0\r\n\r\n### Redisson configuration\r\n            config.useReplicatedServers()\r\n                .setReadMode(ReadMode.MASTER_SLAVE)\r\n                .addNodeAddress(connections)\r\n                .setMasterConnectionPoolSize(maxConnections)\r\n                .setSlaveConnectionPoolSize(maxConnections)\r\n                .setScanInterval(1000);", "url": "https://github.com/redisson/redisson/issues/1846", "user": "reimer-eimer", "labels": ["bug"], "created": "2019-01-10 14:11:29", "closed": "2019-01-17 14:31:30", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "RedissonClient still points to failed AWS Elasticache Redis node when failover happens", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\nI tested AWS Elasticache Redis failover (manual test). First I started my app which creates one  Redissonclient. It established 67 connections to primary Redis node. Then I manually did failover primary test.\r\n### Expected behavior\r\nAll 67 connections point to new primary Redis node.\r\n### Actual behavior\r\n33 connections still point to previous (failed) primary Redis node, 34 connections point to new primary Redis node.\r\n### Steps to reproduce or test case\r\n1. Start my app which creates one Redissonclient.\r\n2. From command line run:   netstat -nt | sort +5 | fgrep .6379 | grep -n ^         This commands show 67 connections to primary Redis node.\r\n3. Go to AWS Console, Elasticache, Redis and select redis cluster you are using. It shows all of nodes of the cluster. Check the primary node, go to Action and select \"Failover primary\".\r\n4. Wait for a while, run step 2 command, out of 67 connections, half of them are pointing to previous primary node, half of them are pointing to new primary node. \r\n5. I have a cache called \"foo\". My code calls redissonClient.getMapCache(foo).size() and it ends up with errors like \"SlaveConnectionPool no available Redis entries.  Disconnected hosts: [xxxxx.usw2.cache.amazonaws.com/ipaddress:6379]\" The ipaddress here points to previous primary node. \r\n6. From AWS Console, if you select previous and new Redis primary nodes, then look at \"Current Connections\" of CloudWatch metrics, you can get the same result: Redisson client points to both previous and new Redis primary nodes. Following screenshot shows Redis primary node failover from 003 to 004.\r\n![image](https://user-images.githubusercontent.com/4614936/50936614-3bbb8000-1425-11e9-98d0-d3607a96f148.png)\r\n\r\n\r\n### Redis version\r\n3.2.6 (Elasticache on AWS)\r\n### Redisson version\r\n3.10.0\r\n### Redisson configuration\r\n            Config config = new Config();\r\n\r\n            ReplicatedServersConfig replicatedConfig = config.useReplicatedServers();\r\n            replicatedConfig.addNodeAddress(Primary Endpoint of redis);\r\n            \r\n            replicatedConfig.setTimeout(3000);\r\n            replicatedConfig.setRetryAttempts(3);\r\n            replicatedConfig.setRetryInterval(1500);\r\n            replicatedConfig.setPingConnectionInterval(5000);\r\n\r\n            redissonClient = Redisson.create(config);\r\n", "url": "https://github.com/redisson/redisson/issues/1845", "user": "jimwang-dtci", "labels": ["bug"], "created": "2019-01-09 23:49:29", "closed": "2019-01-16 14:43:35", "commits": {"332c95ab84171809efa987ec5aead010788973f5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "332c95ab84171809efa987ec5aead010788973f5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ad92d39b89921f528ee5ae734c7fa5a7f10c94f1"], "nameRev": "332c95ab84171809efa987ec5aead010788973f5 tags/redisson-2.15.1~18", "commitMessage": "Fixed - ReplicatedConnectionManager doesn't recover Master node as Slave after failover. #1845\n", "commitDateTime": "2019-01-16 17:44:32", "authoredDateTime": "2019-01-16 17:44:32", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java", "insertions": 14, "deletions": 4, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectToNode(org.redisson.config.BaseMasterSlaveServersConfig,java.net.URI,org.redisson.client.RedisClient,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "ReplicatedConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager.slaveUp(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).1.run().1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).1.run()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["332c95ab84171809efa987ec5aead010788973f5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 5, "lines": 25, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.connectToNode(org.redisson.config.BaseMasterSlaveServersConfig,java.net.URI,org.redisson.client.RedisClient,java.lang.String)", "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).1.run().1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.ReplicatedConnectionManager.slaveUp(java.net.URI)", "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).1.run()"]}, {"title": "  Why function of SingleConnectionManager.create skip set keepAlive? ", "body": "\r\n### Expected behavior\r\n\r\nActual client is keepAlive\r\n### Actual behavior\r\nActual client is not  keepAlive\r\n### Steps to reproduce or test case\r\n\r\nConfig config = new Config();\r\n\t\tconfig.useSingleServer()\r\n\t\t\t\t.setAddress(\"redis://localhost:6379\")\r\n\t\t\t\t.setKeepAlive(true)\r\n\t\t\t\t.setConnectionPoolSize(1)\r\n\t\t\t\t.setConnectTimeout(3000)\r\n\t\t\t\t.setConnectionMinimumIdleSize(1);\r\n\r\n\t\tRedissonClient redisson = Redisson.create(config);\r\n\r\n### Redis version\r\n4.0\r\n### Redisson version\r\n3.8\r\n### Redisson configuration\r\n\r\nConfig config = new Config();\r\n\t\tconfig.useSingleServer()\r\n\t\t\t\t.setAddress(\"redis://localhost:6379\")\r\n\t\t\t\t.setKeepAlive(true)\r\n\t\t\t\t.setConnectionPoolSize(1)\r\n\t\t\t\t.setConnectTimeout(3000)\r\n\t\t\t\t.setConnectionMinimumIdleSize(1);\r\n", "url": "https://github.com/redisson/redisson/issues/1843", "user": "mm23504570", "labels": ["bug"], "created": "2019-01-08 08:36:52", "closed": "2019-01-09 09:24:43", "commits": {"1a9c2b52a046061bab29cc4f390d4d37e37a1f8d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "1a9c2b52a046061bab29cc4f390d4d37e37a1f8d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["24a5a6c7f56ab19463c8a1b47b779a3dbe16de57"], "nameRev": "1a9c2b52a046061bab29cc4f390d4d37e37a1f8d tags/redisson-2.15.1~37", "commitMessage": "Fixed - keepAlive setting is not set for single server connection mode. #1843\n", "commitDateTime": "2019-01-09 12:25:28", "authoredDateTime": "2019-01-09 12:25:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager.create(org.redisson.config.SingleServerConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1a9c2b52a046061bab29cc4f390d4d37e37a1f8d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SingleConnectionManager.create(org.redisson.config.SingleServerConfig)"]}, {"title": "changeMaster failed cuase constantly \"RedisTimeoutException: Unable to get connection\"", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\nMaster connection pool can be re-established later even if participal changemaster failed in redisson.\r\n\r\n### Actual behavior\r\n\r\nIf participal changemaster failed,  then always throw \"RedisTimeoutException: Unable to get connection\" and cannot be recoverred.  And seems there are two masterEntry target to both old and new master address.\r\n\r\n2019-01-07-T05:41:34.523+0200 | redisson-netty-1-2 | ERROR | org.redisson.connection.SingleEntry | Can't change master to: redis://[2a00:8a00:4000:20c::87:ace]:6379\r\n2019-01-07-T05:44:41.319+0200 | redisson-netty-1-1 | INFO  | org.redisson.connection.pool.MasterPubSubConnectionPool | 1 connections initialized for 2a00:8a00:4000:20c::87:ace/2a00:8a00:4000:20c:0:0:87:ace:6379\r\n2019-01-07-T05:44:41.320+0200 | redisson-netty-1-2 | INFO  | org.redisson.connection.pool.MasterConnectionPool | 32 connections initialized for 2a00:8a00:4000:20c::87:ace/2a00:8a00:4000:20c:0:0:87:ace:6379\r\n2019-01-07-T05:44:41.331+0200 | redisson-netty-1-2 | INFO  | org.redisson.connection.SingleEntry | master 2a00:8a00:4000:20c::87:acf/2a00:8a00:4000:20c:0:0:87:acf:6379 has changed to 2a00:8a00:4000:20c::87:ace/2a00:8a00:4000:20c:0:0:87:ace:6379\r\n2019-01-07-T05:44:43.781+0200 | register-consumer | ERROR | RegisterConsumer | Exception when consume registration/unregistration task\r\norg.redisson.client.RedisTimeoutException: Unable to get connection! Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=org.redisson.pubsub.AsyncSemaphore@1822f118, freeConnectionsAmount=32, freeConnectionsCounter=org.redisson.pubsub.AsyncSemaphore@64a6870d, freezed=false, freezeReason=null, client=[addr=redis://[2a00:8a00:4000:20c::87:acf]:6379], nodeType=MASTER, firstFail=0]]], command: (BLPOP), command params: [register-queue, 10] after 3 retry attempts\r\n        at org.redisson.command.CommandAsyncService$8.run(CommandAsyncService.java:532) ~[?:?]\r\n        at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:668) ~[?:?]\r\n        at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:743) ~[?:?]\r\n        at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:471) ~[?:?]\r\n2019-01-07-T05:44:53.981+0200 | thread-14492 | ERROR | TEST | General reason ::\t\t\r\norg.redisson.client.RedisTimeoutException: Unable to get connection! Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=org.redisson.pubsub.AsyncSemaphore@6dd14177, freeConnectionsAmount=32, freeConnectionsCounter=org.redisson.pubsub.AsyncSemaphore@db605f5, freezed=false, freezeReason=null, client=[addr=redis://[2a00:8a00:4000:20c::87:ace]:6379], nodeType=MASTER, firstFail=0]]], command: (EVAL), command params: [local value = redis.call('hget', KEYS[1], ARGV[2]); if value == false then return nil; end; local t,..., 5, NE3SWS-NeInfo, redisson__timeout__set:{Info}, redisson__idle__set:{Info}, redisson__map_cache__last_access__set:{Info}, {Info}:redisson_options, 1546832687609, PooledUnsafeDirectByteBuf(ridx: 0, widx: 20, cap: 256)] after 3 retry attempts\r\n        at org.redisson.command.CommandAsyncService$8.run(CommandAsyncService.java:532) ~[?:?]\r\n        at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:668) ~[?:?]\r\n        at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:743) ~[?:?]\r\n        at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:471) ~[?:?]\r\n        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_191]\r\n\r\n\r\n### Steps to reproduce or test case\r\n\r\nIf any changeMaster activity failed and got \"Can't change master to: redis://[2a00:8a00:4000:20c::87:ace]:6379\" error, then masterConnection pool will not able to get connection in later phase even master connection recoverred.\r\n\r\n### Redis version\r\n\r\nany\r\n\r\n### Redisson version\r\n\r\n3.7.0\r\n\r\n### Redisson configuration\r\n\r\n3 sentinels + 1 master + 1 slave", "url": "https://github.com/redisson/redisson/issues/1839", "user": "empty117", "labels": ["bug"], "created": "2019-01-07 08:44:25", "closed": "2019-01-18 09:28:09", "commits": {"4f2a4b98111ea41ca4b566534b149e019877bf8a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "96ef05671ee21c8adac1904dd2be83ad66410f10": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "4f2a4b98111ea41ca4b566534b149e019877bf8a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6531573603a10d2693b3c292c7e0e8b9f51fd64c"], "nameRev": "4f2a4b98111ea41ca4b566534b149e019877bf8a tags/redisson-2.15.1~10", "commitMessage": "Fixed - master can't be changed anymore if new master wasn't added the first time. #1839\n", "commitDateTime": "2019-01-18 10:19:28", "authoredDateTime": "2019-01-18 10:19:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "96ef05671ee21c8adac1904dd2be83ad66410f10", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f4d5cfba356c6e5a98afa05b6391fd1e6ebc5870"], "nameRev": "96ef05671ee21c8adac1904dd2be83ad66410f10 tags/redisson-2.15.1~8", "commitMessage": "Fixed - master can't be changed anymore if new master wasn't added the first time. #1839\n", "commitDateTime": "2019-01-18 12:07:20", "authoredDateTime": "2019-01-18 12:07:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 11, "deletions": 3, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReplicatedConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).1.run().1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).1.run().1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).5.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4f2a4b98111ea41ca4b566534b149e019877bf8a"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).4.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Unable to decode data & NPE", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n```\r\n01/05 14:22:37.435 ERROR [redisson-netty-2-2] (CommandPubSubDecoder.java:81) - Unable to decode data. channel: [id: 0xa570f102, L:/172.18.5.20:55662 - R:10.0.2.10/10.0.2.10:6379] message: *3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n*3\r\n$7\r\nmessage\r\n$48\r\nredisson_lock__channel:{lock:friend:68719477182}\r\n$1\r\n0\r\n\r\njava.lang.NullPointerException: null\r\n        at org.redisson.client.handler.CommandPubSubDecoder.selectDecoder(CommandPubSubDecoder.java:245) ~[redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:329) [redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:380) [redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:343) [redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandPubSubDecoder.decodeCommand(CommandPubSubDecoder.java:77) ~[redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:110) [redisson-3.10.0.jar:na]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_111]\r\n01/05 14:22:37.435  WARN [redisson-netty-2-2] (Slf4JLogger.java:151) - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: java.lang.NullPointerException\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421) ~[netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) ~[netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_111]\r\nCaused by: java.lang.NullPointerException: null\r\n        at org.redisson.client.handler.CommandPubSubDecoder.selectDecoder(CommandPubSubDecoder.java:245) ~[redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:329) ~[redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:380) ~[redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:343) ~[redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandPubSubDecoder.decodeCommand(CommandPubSubDecoder.java:77) ~[redisson-3.10.0.jar:na]\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:110) ~[redisson-3.10.0.jar:na]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) ~[netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366) ~[netty-all-4.1.24.Final.jar:4.1.24.Final]\r\n        ... 28 common frames omitted\r\n```\r\n### Steps to reproduce or test case\r\n```\r\n        RLock lock1 = redissonClient.getLock(LockName.friend(playerId));\r\n        List<Long> success = new ArrayList<>();\r\n        for (long friendId : friendIds) {\r\n            RLock lock2 = redissonClient.getLock(LockName.friend(friendId));\r\n            RLock[] locks = sort(lock1, lock2);\r\n            RedissonMultiLock lock = new RedissonMultiLock(locks);\r\n            try {\r\n            if (!lock.tryLock(config.getRedissonLockWait(), config.getRedissonLockRelease(), TimeUnit.SECONDS)) {\r\n                throw new Exception(\"lock failed\", e);\r\n            }\r\n        } catch (Exception e) {\r\n            throw new Exception(\"lock failed\", e);\r\n        }\r\n\r\n            try {\r\n                // do something...\r\n            } finally {\r\n                lock.unlock();\r\n            }\r\n        }\r\n```\r\nthe code run in high concurrent environment appear so many of the exception\r\n### Redis version\r\n4.0\r\n### Redisson version\r\n3.10.0\r\n### Redisson configuration\r\n```\r\n<bean id=\"redissonCodec\" class=\"org.redisson.codec.JsonJacksonCodec\" />\r\n<redisson:client id=\"gameRedisson\" codec-ref=\"redissonCodec\">\r\n    <redisson:single-server address=\"${redis.host1}\" password=\"${redis.password}\" />\r\n</redisson:client>\r\n```", "url": "https://github.com/redisson/redisson/issues/1838", "user": "Skycat", "labels": ["bug"], "created": "2019-01-05 09:17:52", "closed": "2019-01-08 07:01:20", "commits": {"4e1331fde8889e9d3cb9ce4ea0b04e40f3b31114": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "4e1331fde8889e9d3cb9ce4ea0b04e40f3b31114", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cd49e38f4805dedefdb0ae306ab35f7412b79f2d"], "nameRev": "4e1331fde8889e9d3cb9ce4ea0b04e40f3b31114 tags/redisson-2.15.1~42", "commitMessage": "Fixed - NPE in CommandPubSubDecoder. #1838\n", "commitDateTime": "2019-01-07 12:10:29", "authoredDateTime": "2019-01-07 12:10:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.ChannelHandlerContext,java.lang.Object).1.run()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.enqueueMessage(java.lang.Object,org.redisson.client.RedisPubSubConnection,org.redisson.client.handler.PubSubEntry).2.run()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.getDecoder(java.util.List,byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4e1331fde8889e9d3cb9ce4ea0b04e40f3b31114"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 4, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 18, "UPD": 0, "INS": 5, "MOV": 9, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandPubSubDecoder.getDecoder(java.util.List,byte[])", "org.redisson.client.handler.CommandPubSubDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.ChannelHandlerContext,java.lang.Object).1.run()", "org.redisson.client.handler.CommandPubSubDecoder.enqueueMessage(java.lang.Object,org.redisson.client.RedisPubSubConnection,org.redisson.client.handler.PubSubEntry).2.run()"]}, {"title": "RGeo.pos broken", "body": "### Expected behavior\r\ngeo.pos(element) returns a map\r\n\r\n### Actual behavior\r\nThrows exception for trying to cast an ArrayList into a Map\r\n\r\n### Steps to reproduce or test case\r\n\r\n        RGeo geo = redisson.getGeo(\"features\");\r\n        geo.add(0,0,\"hi\");\r\n        System.out.println(geo.pos(\"hi\"));\r\n\r\n\r\nException in thread \"main\" java.lang.ClassCastException: java.util.ArrayList cannot be cast to java.util.Map\r\n\tat org.redisson.RedissonGeo.pos(RedissonGeo.java:126)\r\n\tat com.examples.redis.MyRedis.main(MyRedis.java:32)\r\n\r\nIt seems that on RedissonGeo.java line 137 you are using a ListMultiDecoder rather than a GeoDistanceMapDecoder or something more appropriate.  I tested this on 3.7.3 and it was still there.  You should probably have had a unit test for this API.\r\n\r\n\r\n### Redis version\r\nAny\r\n\r\n### Redisson version\r\n3.9.1\r\nCouldn't confirm 3.10.0 due to inability to find list of dependencies to import\r\n\r\n### Redisson configuration\r\nPlain jane redisson setup\r\n", "url": "https://github.com/redisson/redisson/issues/1837", "user": "borg286", "labels": ["bug"], "created": "2019-01-04 16:47:09", "closed": "2019-01-06 13:41:13", "commits": {"820fe3b68eb2cc963f0ec5201046818a2b78a8fa": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "820fe3b68eb2cc963f0ec5201046818a2b78a8fa", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ff16c2bcfd96919693e68f19e3db4f8965b12681"], "nameRev": "820fe3b68eb2cc963f0ec5201046818a2b78a8fa tags/redisson-2.15.1~44", "commitMessage": "Fixed - RGeo.pos throws ClassCastException #1837\n", "commitDateTime": "2019-01-06 16:41:52", "authoredDateTime": "2019-01-06 16:41:52", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonGeo.java", "insertions": 23, "deletions": 33, "lines": 56}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/State.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ListMultiDecoder.java", "insertions": 17, "deletions": 2, "lines": 19}, {"filePath": "redisson/src/test/java/org/redisson/RedissonGeoTest.java", "insertions": 38, "deletions": 0, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonGeo.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonGeo.posAsync(java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithDistanceAsync(double,double,double,org.redisson.api.GeoUnit)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithDistanceAsync(double,double,double,org.redisson.api.GeoUnit,int)", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithDistanceAsync(double,double,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithDistanceAsync(double,double,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder,int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithPositionAsync(double,double,double,org.redisson.api.GeoUnit)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithPositionAsync(double,double,double,org.redisson.api.GeoUnit,int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithPositionAsync(double,double,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithPositionAsync(double,double,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder,int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithDistanceAsync(java.lang.Object,double,org.redisson.api.GeoUnit)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithDistanceAsync(java.lang.Object,double,org.redisson.api.GeoUnit,int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithDistanceAsync(java.lang.Object,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithDistanceAsync(java.lang.Object,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder,int)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithPositionAsync(java.lang.Object,double,org.redisson.api.GeoUnit)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithPositionAsync(java.lang.Object,double,org.redisson.api.GeoUnit,int)", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithPositionAsync(java.lang.Object,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo.radiusWithPositionAsync(java.lang.Object,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder,int)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonGeo", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.ChannelHandlerContext,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "State.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.State.incLevel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.State.decLevel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ListMultiDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ListMultiDecoder.getDecoder(int,org.redisson.client.handler.State)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListMultiDecoder", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListMultiDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonGeoTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonGeoTest.testPos4()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonGeoTest.testPos1()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonGeoTest.testPos3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonGeoTest.testPos2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["820fe3b68eb2cc963f0ec5201046818a2b78a8fa"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 52, "deletions": 35, "lines": 87, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 108, "UPD": 0, "INS": 31, "MOV": 43, "DEL": 34, "spoonFilesChanged": 4, "spoonMethodsChanged": 24}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol/decoder", "redisson/src/main/java/org/redisson/client/handler", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonGeo.radiusWithPositionAsync(java.lang.Object,double,org.redisson.api.GeoUnit,int)", "org.redisson.client.protocol.decoder.ListMultiDecoder.getDecoder(int,org.redisson.client.handler.State)", "org.redisson.RedissonGeo.radiusWithPositionAsync(double,double,double,org.redisson.api.GeoUnit)", "org.redisson.RedissonGeo.radiusWithPositionAsync(double,double,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder,int)", "org.redisson.RedissonGeo.radiusWithDistanceAsync(java.lang.Object,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder,int)", "org.redisson.RedissonGeo.radiusWithPositionAsync(double,double,double,org.redisson.api.GeoUnit,int)", "org.redisson.client.protocol.decoder.ListMultiDecoder", "org.redisson.RedissonGeo.radiusWithPositionAsync(java.lang.Object,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder,int)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.ChannelHandlerContext,boolean)", "org.redisson.RedissonGeo.posAsync(java.lang.Object[])", "org.redisson.RedissonGeo.radiusWithDistanceAsync(double,double,double,org.redisson.api.GeoUnit,int)", "org.redisson.client.protocol.decoder.ListMultiDecoder.decode(java.util.List,org.redisson.client.handler.State)", "org.redisson.RedissonGeo.radiusWithPositionAsync(double,double,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder)", "org.redisson.RedissonGeo", "org.redisson.RedissonGeo.radiusWithPositionAsync(java.lang.Object,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder)", "org.redisson.RedissonGeo.radiusWithPositionAsync(java.lang.Object,double,org.redisson.api.GeoUnit)", "org.redisson.RedissonGeo.radiusWithDistanceAsync(java.lang.Object,double,org.redisson.api.GeoUnit)", "org.redisson.client.handler.State.incLevel()", "org.redisson.client.handler.State.decLevel()", "org.redisson.RedissonGeo.radiusWithDistanceAsync(double,double,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder)", "org.redisson.RedissonGeo.radiusWithDistanceAsync(double,double,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder,int)", "org.redisson.RedissonGeo.radiusWithDistanceAsync(java.lang.Object,double,org.redisson.api.GeoUnit,org.redisson.api.GeoOrder)", "org.redisson.RedissonGeo.radiusWithDistanceAsync(java.lang.Object,double,org.redisson.api.GeoUnit,int)", "org.redisson.RedissonGeo.radiusWithDistanceAsync(double,double,double,org.redisson.api.GeoUnit)"]}, {"title": "LRUCacheMap ArrayIndexOutOfBoundsException", "body": "java.lang.ArrayIndexOutOfBoundsException\r\n        at java.util.ArrayList.elementData(ArrayList.java:433)\r\n        at java.util.ArrayList.get(ArrayList.java:446)\r\n        at org.redisson.cache.LRUCacheMap.getQueue(LRUCacheMap.java:57)\r\n        at org.redisson.cache.LRUCacheMap.onValueCreate(LRUCacheMap.java:52)\r\n        at org.redisson.cache.AbstractCacheMap.put(AbstractCacheMap.java:190)\r\n        at org.redisson.cache.AbstractCacheMap.put(AbstractCacheMap.java:179)\r\n        at org.redisson.liveobject.misc.ClassUtils.isAnnotationPresent(ClassUtils.java:137)\r\n        at org.redisson.misc.RedissonObjectFactory.toReference(RedissonObjectFactory.java:166)\r\n        at org.redisson.RedissonObject.encodeMapValue(RedissonObject.java:273)\r\n        at org.redisson.RedissonMap.fastPutOperationAsync(RedissonMap.java:1052)\r\n        at org.redisson.RedissonMap.fastPutAsync(RedissonMap.java:1037)\r\n        at org.redisson.RedissonMap.fastPut(RedissonMap.java:1057)\r\n        at org.redisson.tomcat.RedissonSession.fastPut(RedissonSession.java:153)\r\n        at org.redisson.tomcat.RedissonSession.setAttribute(RedissonSession.java:200)\r\n        at org.apache.catalina.session.StandardSession.setAttribute(StandardSession.java:1415)\r\n        at org.apache.catalina.session.StandardSessionFacade.setAttribute(StandardSessionFacade.java:137)\r\n\r\n### Expected behavior\r\nNo ArrayIndexOutOfBoundsException\r\n\r\n### Actual behavior\r\nThrowing ArrayIndexOutOfBoundsException when setting object into HTTP session using setAttribute\r\n\r\n### Steps to reproduce or test case\r\nConfigure Tomcat 8.5 server with redisson-tomcat-8-2.15.0.jar and redisson-all-2.15.0.jar - try to set object into http session using setAttribute\r\n\r\n### Redis version\r\nRedis server v=3.0.504 sha=00000000:0 malloc=jemalloc-3.6.0 bits=64 build=a4f7a6e86f2d60b3\r\n\r\n### Redisson version\r\nredisson-all-2.15.0\r\n\r\n### Redisson configuration\r\n\r\nsingleServerConfig:\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  password: null\r\n  subscriptionsPerConnection: 5\r\n  clientName: null\r\n  address: \"redis://127.0.0.1:6379\"\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  connectionMinimumIdleSize: 32\r\n  connectionPoolSize: 64\r\n  database: 0\r\n  dnsMonitoringInterval: 5000\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.SerializationCodec> {}\r\ntransportMode: \"NIO\"\r\n", "url": "https://github.com/redisson/redisson/issues/1836", "user": "jchobantonov", "labels": ["bug"], "created": "2019-01-04 15:42:24", "closed": "2019-01-05 06:48:24", "commits": {"d6448eee3431539bfa9d5b6a53410ba55284f63f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "ff16c2bcfd96919693e68f19e3db4f8965b12681": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d6448eee3431539bfa9d5b6a53410ba55284f63f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ceda83ae58e70da5ddc8874ed6e96da6acb2e7aa"], "nameRev": "d6448eee3431539bfa9d5b6a53410ba55284f63f tags/redisson-2.15.1~46", "commitMessage": "Fixed - LRUCacheMap throws ArrayIndexOutOfBoundsException. #1836\n", "commitDateTime": "2019-01-04 19:21:02", "authoredDateTime": "2019-01-04 19:21:02", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cache/LRUCacheMap.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LRUCacheMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LRUCacheMap", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ff16c2bcfd96919693e68f19e3db4f8965b12681", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d6448eee3431539bfa9d5b6a53410ba55284f63f"], "nameRev": "ff16c2bcfd96919693e68f19e3db4f8965b12681 tags/redisson-2.15.1~45", "commitMessage": "Fixed - LRUCacheMap throws ArrayIndexOutOfBoundsException. #1836\n", "commitDateTime": "2019-01-05 09:49:07", "authoredDateTime": "2019-01-05 09:49:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cache/LRUCacheMap.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LRUCacheMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LRUCacheMap", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.LRUCacheMap.getQueue(org.redisson.cache.CachedValue)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d6448eee3431539bfa9d5b6a53410ba55284f63f"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cache"], "changesInPackagesSPOON": ["org.redisson.cache.LRUCacheMap"]}, {"title": "RBlockingQueue.pollFromAny should honor slots", "body": "### Expected behavior\r\n`RBlockingQueue.pollFromAny` should send the appropriate number of `BLPOP` instructions to the appropriate number of masters in a redis-cluster configuration.\r\n\r\n### Actual behavior\r\n`RBlockingQueue.pollFromAny` sends a single `BLPOP` instruction regardless of hash-slots and sometimes returns a `CROSSSLOT` error.\r\n\r\n### Steps to reproduce or test case\r\n\r\n1. Set up a multi-node redis-cluster with multiple slots ranges going to different masters.\r\n2. Connect redisson to redis-cluster.\r\n3. Call `RBlockingQueue.pollFromAny` with at least two queue names that reside on different masters.\r\n4. See exception thrown.\r\n\r\n### Redis version\r\n3.2.5\r\n\r\n### Redisson version\r\n3.8.1\r\n\r\n### Redisson configuration\r\n```\r\nredisson:\r\n  clusterServersConfig:\r\n    nodeAddresses:\r\n    - \"redis://redis-0.redis-main.v1x1.svc.cluster.local:6379\"\r\n    - \"redis://redis-1.redis-main.v1x1.svc.cluster.local:6379\"\r\n    - \"redis://redis-2.redis-main.v1x1.svc.cluster.local:6379\"\r\n    - \"redis://redis-3.redis-main.v1x1.svc.cluster.local:6379\"\r\n    - \"redis://redis-4.redis-main.v1x1.svc.cluster.local:6379\"\r\n    - \"redis://redis-5.redis-main.v1x1.svc.cluster.local:6379\"\r\n    - \"redis://redis-6.redis-main.v1x1.svc.cluster.local:6379\"\r\n    - \"redis://redis-7.redis-main.v1x1.svc.cluster.local:6379\"\r\n    - \"redis://redis-8.redis-main.v1x1.svc.cluster.local:6379\"\r\n    clientName: \"v1x1-{{module_name}}\"\r\n    readMode: MASTER\r\n    masterConnectionPoolSize: 1024\r\n    retryAttempts: 10\r\n    failedSlaveCheckInterval: 10\r\n```", "url": "https://github.com/redisson/redisson/issues/1831", "user": "Cobi", "labels": ["bug"], "created": "2018-12-29 23:05:21", "closed": "2019-01-07 06:46:42", "commits": {"cd49e38f4805dedefdb0ae306ab35f7412b79f2d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "cd49e38f4805dedefdb0ae306ab35f7412b79f2d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["820fe3b68eb2cc963f0ec5201046818a2b78a8fa"], "nameRev": "cd49e38f4805dedefdb0ae306ab35f7412b79f2d tags/redisson-2.15.1~43", "commitMessage": "Fixed - `pollFromAny` doesn't support Redis cluster. #1831\n", "commitDateTime": "2019-01-07 09:47:35", "authoredDateTime": "2019-01-07 09:47:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingDeque.java", "insertions": 1, "deletions": 7, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingQueue.java", "insertions": 1, "deletions": 9, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBoundedBlockingQueue.java", "insertions": 1, "deletions": 8, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 2, "deletions": 14, "lines": 16}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncExecutor.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 47, "deletions": 0, "lines": 47}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBlockingDeque.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollLastFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 4}]}, {"spoonFilePath": "RedissonBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueue.pollFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 4}]}, {"spoonFilePath": "RedissonBoundedBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.pollFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.pollFirstFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.pollLastFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 4}]}, {"spoonFilePath": "CommandAsyncExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.pollFromAnyAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,long,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.pollFromAnyAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,long,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.poll(java.lang.String,org.redisson.client.codec.Codec,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicReference,java.util.List,java.util.concurrent.atomic.AtomicLong,org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollFromAny()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTake()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testTakeLastAndOfferFirstTo()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollLastAndOfferFirstTo()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testBlockingQueue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollFromAnyInCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cd49e38f4805dedefdb0ae306ab35f7412b79f2d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 63, "deletions": 38, "lines": 101, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 42, "UPD": 11, "INS": 3, "MOV": 8, "DEL": 20, "spoonFilesChanged": 6, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBoundedBlockingQueue.pollFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonScoredSortedSet.pollFirstFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.command.pollFromAnyAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,long,java.lang.String[])", "org.redisson.RedissonBlockingDeque.pollLastFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonBlockingQueue.pollFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.command.CommandAsyncService.poll(java.lang.String,org.redisson.client.codec.Codec,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicReference,java.util.List,java.util.concurrent.atomic.AtomicLong,org.redisson.client.protocol.RedisCommand)", "org.redisson.command.CommandAsyncService.pollFromAnyAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,long,java.lang.String[])", "org.redisson.RedissonScoredSortedSet.pollLastFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])"]}, {"title": "zRevRangeWithScores does not work properly in Spring RedisTemplate", "body": "![image](https://user-images.githubusercontent.com/24350787/50270691-64c3a300-046d-11e9-9e8d-0d33abf43265.png)\r\nI found a problem with the command declared by ZREVRANGE_ENTRY in the RedissonConnection class. It should be ZREVRANGE, not ZRANGE.\r\nredisson version :3.9.1\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1814", "user": "hqxy", "labels": ["bug"], "created": "2018-12-20 07:41:44", "closed": "2018-12-24 07:52:20", "commits": {"fed5b714ff3b4b16cc78cbd8796b8818480e8777": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "fed5b714ff3b4b16cc78cbd8796b8818480e8777", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8ad76f2c30c7fff17c87c40f342edff913c4aff7"], "nameRev": "fed5b714ff3b4b16cc78cbd8796b8818480e8777 tags/redisson-2.15.0~28", "commitMessage": "Fixed - zRevRangeWithScores does not work properly in Spring RedisTemplate. #1814\n", "commitDateTime": "2018-12-24 10:53:10", "authoredDateTime": "2018-12-24 10:53:10", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnection", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fed5b714ff3b4b16cc78cbd8796b8818480e8777"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonConnection"]}, {"title": "RedissonSession#changeSessionId doesn't change the id in redis.", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\nWhen call RedissonSession.changeSessionId(), the session id did not change in redis. So, when call another request , redisson cannot find the session in redis.\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n3.2.10\r\n### Redisson version\r\n3.9.1\r\n### Redisson configuration\r\nspring boot autoconfig with single mode.", "url": "https://github.com/redisson/redisson/issues/1813", "user": "sadanyoyo", "labels": ["bug"], "created": "2018-12-20 07:20:20", "closed": "2019-01-07 07:52:34", "commits": {"2c6f327395ac5631dd6145e5d1f7666b69f0a5c1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "2c6f327395ac5631dd6145e5d1f7666b69f0a5c1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4faf81b06f2473fc9a7fbdd35c982c807b255eb3"], "nameRev": "2c6f327395ac5631dd6145e5d1f7666b69f0a5c1 tags/redisson-3.10.1~12", "commitMessage": "Fixed - Spring Session changeSessionId method doesn't change session id. #1813\n", "commitDateTime": "2019-01-07 10:53:40", "authoredDateTime": "2019-01-07 10:53:40", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.createSession()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.findById(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.changeSessionId()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2c6f327395ac5631dd6145e5d1f7666b69f0a5c1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 7, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 15, "UPD": 4, "INS": 3, "MOV": 4, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/session"], "changesInPackagesSPOON": ["org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)", "org.redisson.spring.session.RedissonSessionRepository.createSession()", "org.redisson.spring.session.RedissonSessionRepository.RedissonSession", "org.redisson.spring.session.RedissonSessionRepository.RedissonSession.changeSessionId()", "org.redisson.spring.session.RedissonSessionRepository.findById(java.lang.String)"]}, {"title": "The connection not reconnect", "body": "\r\nrelated #1583   Channel Inactive but the event not catched by ConnectionWatchdog.channelInactive() \r\n\r\nI think it is the same as #1583 ,  when I use kill -9 redisPid, then restart the redis, it seems work fine. But when the program run one or two days,  this issue appeared. I guess there may be a network problem that caused ConnectionWatchdog.channelActive not to be triggered. Is there any parameter setting to avoid this problem?\r\n\r\n\r\n\r\nThe exception stack:\r\n2018-12-19 14:30:24.064 [http-nio-8081-exec-1][10.10.3.117-http-nio-8081-exec-1] ERROR c.b.c.s.w.s.m.m.annotation.HandlerMethodAspect - Throw:\r\norg.redisson.client.WriteRedisConnectionException: Unable to send command! Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=1, freeSubscribeConnectionsCounter=50, freeConnectionsAmount=10, freeConnectionsCounter=64, freezed=false, freezeReason=null, client=[addr=redis://10.10.3.112:6379], nodeType=MASTER, firstFail=0]]], connection: RedisConnection@1662347556 [redisClient=[addr=redis://10.10.3.113:6379], channel=[id: 0xb21f069b, L:/10.10.3.117:50884 ! R:10.10.3.113/10.10.3.113:6379]], command: (HGET), command params: [shiro-activeSessionCache, \ufffd\ufffdt$afb4da38-cf18-4117-9159-ce16fc61b9d9] after 3 retry attempts\r\n\tat org.redisson.command.CommandAsyncService.checkWriteFuture(CommandAsyncService.java:837)\r\n\tat org.redisson.command.CommandAsyncService.access$200(CommandAsyncService.java:92)\r\n\tat org.redisson.command.CommandAsyncService$11$1.operationComplete(CommandAsyncService.java:794)\r\n\tat org.redisson.command.CommandAsyncService$11$1.operationComplete(CommandAsyncService.java:791)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:485)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:424)\r\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:121)\r\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetFailure(AbstractChannel.java:987)\r\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.write(AbstractChannel.java:869)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.write(DefaultChannelPipeline.java:1391)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.access$1700(AbstractChannelHandlerContext.java:38)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1104)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1151)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1075)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:466)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.nio.channels.ClosedChannelException: null\r\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.write(...)(Unknown Source)\r\n\r\n\r\n\r\n\r\n\r\n### Redis version\r\n4.0.9\r\n### Redisson version\r\n3.9.1\r\n### Redisson configuration\r\n            config.useSentinelServers()\r\n                .setTimeout(2000)\r\n                .setConnectTimeout(10000)\r\n                .setRetryAttempts(3)\r\n                .setRetryInterval(1000)\r\n                .setDnsMonitoringInterval(-1)\r\n                .setDatabase(0)\r\n                .setPingConnectionInterval(10000)\r\n                .setMasterName(\"mymaster\")\r\n                .addSentinelAddress(convert(Arrays.asList(getSentinelNodes().split(\",\"))));", "url": "https://github.com/redisson/redisson/issues/1811", "user": "zhwq1216", "labels": ["bug"], "created": "2018-12-20 06:20:59", "closed": "2019-01-14 10:03:10", "commits": {"44ea59f9f60ee0d2f586de7b0a5750c74783a33a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "44ea59f9f60ee0d2f586de7b0a5750c74783a33a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["eb4200dfea42e64bf1afeb9c1b786bf118f1957b"], "nameRev": "44ea59f9f60ee0d2f586de7b0a5750c74783a33a tags/redisson-2.15.1~32", "commitMessage": "Fixed - connection is not reconnected #1811\n", "commitDateTime": "2019-01-14 08:59:52", "authoredDateTime": "2019-01-14 08:59:52", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionWatchdog.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.tryReconnect(org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["44ea59f9f60ee0d2f586de7b0a5750c74783a33a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.ConnectionWatchdog.tryReconnect(org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "drainTo when only one element exists", "body": "### Expected behavior\r\nqueue should be empty after calling drainTo()\r\n\r\n### Actual behavior\r\nif only one element exists, after calling drainTo() element still exists in the queue\r\n\r\n### Steps to reproduce or test case\r\n1. create a redisson blocking queue\r\n2. add only one element\r\n3. call drainTo on the queue\r\n\r\n### Redis version\r\n3.2.10\r\n\r\n### Redisson version\r\n3.7.0\r\n\r\n### Redisson configuration\r\n![image](https://user-images.githubusercontent.com/1742454/50214522-8baca700-0391-11e9-8f05-dac96b7fb4aa.png)\r\n\r\n### More details\r\n\r\ndrainTo runs command \"ltrim key -1 0\" under the hood. start index and stop index is the same so element stays in the list. i think this SO question may be helpful: https://stackoverflow.com/questions/40488194/unable-to-ltrim-when-redis-list-is-having-only-one-record\r\n", "url": "https://github.com/redisson/redisson/issues/1809", "user": "mkurt", "labels": ["bug"], "created": "2018-12-19 10:34:28", "closed": "2019-01-15 14:47:01", "commits": {"d1618f4b697d7689983f54b3ae15376bb3a4e966": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "d1618f4b697d7689983f54b3ae15376bb3a4e966", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1b8849f522ca6a11be3cf155130b6c2431c9ee99"], "nameRev": "d1618f4b697d7689983f54b3ae15376bb3a4e966 tags/redisson-2.15.1~22", "commitMessage": "Fixed - RBlockingQueue.drainTo doesn't work when queue contains only one element. #1809\n", "commitDateTime": "2019-01-15 17:48:14", "authoredDateTime": "2019-01-15 17:48:14", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingQueue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueue.drainToAsync(java.util.Collection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testDrainToSingle()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d1618f4b697d7689983f54b3ae15376bb3a4e966"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBlockingQueue.drainToAsync(java.util.Collection)"]}, {"title": "RMapCache element expiration doesn't work with map size = 1", "body": "", "url": "https://github.com/redisson/redisson/issues/1808", "user": "mrniko", "labels": ["bug"], "created": "2018-12-17 10:25:53", "closed": "2018-12-17 10:28:11", "commits": {"640e40e4453a855f165548e9a8d4227adad3d376": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "640e40e4453a855f165548e9a8d4227adad3d376", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3d3d24b2191a14e25b90ba4ae5cd3459ffd008cf"], "nameRev": "640e40e4453a855f165548e9a8d4227adad3d376 tags/redisson-2.15.0~42", "commitMessage": "Fixed - RMapCache element expiration doesn't work with map size = 1 #1808\n", "commitDateTime": "2018-12-17 13:28:03", "authoredDateTime": "2018-12-17 13:28:03", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 27, "deletions": 24, "lines": 51}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.getOptionsName(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.removeOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.getOperationAsync(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putIfAbsentOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.addAndGetOperationAsync(java.lang.Object,java.lang.Number)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutOperationAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutIfAbsentOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putAllOperationAsync(java.util.Map)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putAllOperationAsync(java.util.Map,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.getOptionsName(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testFastPutTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testMaxSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["640e40e4453a855f165548e9a8d4227adad3d376"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 24, "lines": 51, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 24, "UPD": 23, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long)", "org.redisson.RedissonMapCache.removeOperationAsync(java.lang.Object,java.lang.Object)", "org.redisson.RedissonMapCache.fastPutOperationAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonMapCache.fastPutIfAbsentOperationAsync(java.lang.Object,java.lang.Object)", "org.redisson.RedissonMapCache.getOptionsName(java.lang.String)", "org.redisson.RedissonMapCache.fastPutIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonMapCache.getOperationAsync(java.lang.Object)", "org.redisson.RedissonMapCache.putOperationAsync(java.lang.Object,java.lang.Object)", "org.redisson.RedissonMapCache.putIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonMapCache.addAndGetOperationAsync(java.lang.Object,java.lang.Number)", "org.redisson.RedissonMapCache.getOptionsName(java.lang.Object)", "org.redisson.RedissonMapCache.putIfAbsentOperationAsync(java.lang.Object,java.lang.Object)", "org.redisson.RedissonMapCache.fastPutOperationAsync(java.lang.Object,java.lang.Object)", "org.redisson.RedissonMapCache.putAllOperationAsync(java.util.Map)", "org.redisson.RedissonMapCache.putAllOperationAsync(java.util.Map,long,java.util.concurrent.TimeUnit)"]}, {"title": "RMap.getAll   throw ClassCastException", "body": "### Actual behavior\r\nexception\r\njava.lang.ClassCastException: java.util.HashMap cannot be cast to org.redisson.RedissonMap\r\n\tat org.redisson.transaction.BaseTransactionalMap.getAllOperationAsync(BaseTransactionalMap.java:702)\r\n\tat org.redisson.transaction.RedissonTransactionalMap.getAllOperationAsync(RedissonTransactionalMap.java:203)\r\n\tat org.redisson.RedissonMap.getAllAsync(RedissonMap.java:202)\r\n\tat org.redisson.RedissonMap.getAll(RedissonMap.java:193)\r\n\r\n### reason\r\nBaseTransactionalMap.java\r\nprotected RFuture<Map<K, V>> getAllOperationAsync(Set<K> keys) {\r\n      final Map<K, V> map = new HashMap();\r\n      ...\r\n     // \u6b64\u5904map\u662fhashMap\uff0c\u5f3a\u8f6c\u5f02\u5e38  -- redission 3.8.0,  line:646\r\n     RFuture<Map<K, V>> future = ((RedissonMap)map).getAllOperationAsync(keysToLoad);\r\n\r\n}\r\n\r\n\r\n### Redisson version\r\n3.8.0\r\n", "url": "https://github.com/redisson/redisson/issues/1798", "user": "LG772EF", "labels": ["bug"], "created": "2018-12-12 09:09:18", "closed": "2018-12-27 03:46:20", "commits": {"9bb32b4b2fa6705fcaee47c882ab32c88a51169b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "9bb32b4b2fa6705fcaee47c882ab32c88a51169b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["938a6255b295c5355ae3111dd540772b197b6a6a"], "nameRev": "9bb32b4b2fa6705fcaee47c882ab32c88a51169b tags/redisson-2.15.0~5", "commitMessage": "Fixed - `RMap.getAll` throws ClassCastException during transaction execution #1798\n", "commitDateTime": "2018-12-27 06:44:26", "authoredDateTime": "2018-12-27 06:44:26", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/transaction/BaseTransactionalMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/transaction/RedissonBaseTransactionalMapTest.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseTransactionalMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.BaseTransactionalMap.getAllOperationAsync(java.util.Set)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonBaseTransactionalMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.RedissonBaseTransactionalMapTest.testGetAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9bb32b4b2fa6705fcaee47c882ab32c88a51169b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/transaction"], "changesInPackagesSPOON": ["org.redisson.transaction.BaseTransactionalMap.getAllOperationAsync(java.util.Set)"]}, {"title": "Android URI Fatal ERROR", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\nhttps://hastebin.com/irariborob.rb\r\n\r\n### Redis version\r\n5.X.X\r\n### Redisson version\r\n3.9.1\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1795", "user": "kanekireal", "labels": ["bug"], "created": "2018-12-09 22:23:39", "closed": "2018-12-13 11:47:29", "commits": {"f5a7395269ca1fdeb69d51fe7cd8f4fdf3bca165": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "f5a7395269ca1fdeb69d51fe7cd8f4fdf3bca165", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e124acfec62db0b65590e0354120da9d6c80d9f6"], "nameRev": "f5a7395269ca1fdeb69d51fe7cd8f4fdf3bca165 tags/redisson-2.15.0~44", "commitMessage": "Fixed - unable connect to Redis on Android. #1795\n", "commitDateTime": "2018-12-13 14:48:03", "authoredDateTime": "2018-12-13 14:48:03", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClientConfig.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/connection/DNSMonitor.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 18, "deletions": 5, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/misc/URIBuilder.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClientConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClientConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClientConfig.getResolverGroup()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClientConfig.setResolverGroup(io.netty.resolver.dns.DnsAddressResolverGroup)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DNSMonitor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.DNSMonitor", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "URIBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URIBuilder.patchUriField(java.lang.Long,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f5a7395269ca1fdeb69d51fe7cd8f4fdf3bca165"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 26, "deletions": 10, "lines": 36, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 12, "UPD": 5, "INS": 4, "MOV": 3, "DEL": 0, "spoonFilesChanged": 4, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client", "redisson/src/main/java/org/redisson/misc", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.client.RedisClientConfig.getResolverGroup()", "org.redisson.connection.DNSMonitor", "org.redisson.client.RedisClientConfig.setResolverGroup(io.netty.resolver.dns.DnsAddressResolverGroup)", "org.redisson.misc.URIBuilder.patchUriField(java.lang.Long,java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.client.RedisClientConfig"]}, {"title": "Sentinel Connection does not recover after +tilt mode entered on a slave", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n Client connection recovers after one of the slaves recovers from the tilt mode\r\n### Actual behavior\r\n Client stops communicating with slave, and all commands to that slave time out\r\n### Steps to reproduce or test case\r\nHappens every time one of the slaves has +tilt mode\r\n\r\n### Redis version\r\n Redis Version 4.0.9\r\n### Redisson version\r\nRedisson Version 3.7.1\r\n### Redisson configuration\r\n Sentinel 1 Master + 2 Slaves\r\n\r\nWe have 3 nodes, master on 10.86.145.138 and 2 slaves on 10.86.145.137 and 10.86.145.136\r\n\r\n10.86.145.137 enters into tilt mode from time to time due to heavy load but recovers very quickly\r\n```\r\n910:X 08 Dec 08:48:32.430 # +tilt #tilt mode entered\r\n1910:X 08 Dec 08:49:02.488 # -tilt #tilt mode exited\r\n```\r\nClient running on the master node gets the down and up events\r\n```\r\n67711850 08 Dec 2018 08:48:32 +0000 [redisson-netty-4-2] WARN  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has down\r\n67711870 08 Dec 2018 08:48:32 +0000 [redisson-netty-1-2] WARN  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has down\r\n67712855 08 Dec 2018 08:48:33 +0000 [redisson-netty-4-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n```\r\nBut the client never recovers. From this point on, write request to master work fine, but readonly calls, which routed to slaves  time out and redisson considers this node disconnected although it is connected , and retries forever\r\n```\r\n67711850 08 Dec 2018 08:48:32 +0000 [redisson-netty-4-2] WARN  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has down\r\n67711870 08 Dec 2018 08:48:32 +0000 [redisson-netty-1-2] WARN  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has down\r\n67712855 08 Dec 2018 08:48:33 +0000 [redisson-netty-4-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n67712880 08 Dec 2018 08:48:33 +0000 [redisson-netty-1-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n67898196 08 Dec 2018 08:51:38 +0000 [qtp204349222-10] ERROR o.r.c.pool.SlaveConnectionPool - slave 10.86.145.37/10.86.145.37:6379 has been disconnected after 180000 ms interval si\r\nnce moment of the first failed connection\r\n67898210 08 Dec 2018 08:51:38 +0000 [redisson-netty-1-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n68078653 08 Dec 2018 08:54:39 +0000 [pool-4-thread-1] ERROR o.r.c.pool.SlaveConnectionPool - slave 10.86.145.37/10.86.145.37:6379 has been disconnected after 180000 ms interval si\r\nnce moment of the first failed connection\r\n68079537 08 Dec 2018 08:54:40 +0000 [redisson-netty-1-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n68260654 08 Dec 2018 08:57:41 +0000 [pool-4-thread-1] ERROR o.r.c.pool.SlaveConnectionPool - slave 10.86.145.37/10.86.145.37:6379 has been disconnected after 180000 ms interval si\r\nnce moment of the first failed connection\r\n68260825 08 Dec 2018 08:57:41 +0000 [redisson-netty-1-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n68441554 08 Dec 2018 09:00:42 +0000 [qtp204349222-102] ERROR o.r.c.pool.SlaveConnectionPool - slave 10.86.145.37/10.86.145.37:6379 has been disconnected after 180000 ms interval s\r\nince moment of the first failed connection\r\n68442120 08 Dec 2018 09:00:42 +0000 [redisson-netty-1-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n68622665 08 Dec 2018 09:03:43 +0000 [qtp204349222-105] ERROR o.r.c.pool.SlaveConnectionPool - slave 10.86.145.37/10.86.145.37:6379 has been disconnected after 180000 ms interval s\r\nince moment of the first failed connection\r\n68623414 08 Dec 2018 09:03:43 +0000 [redisson-netty-1-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n68808753 08 Dec 2018 09:06:49 +0000 [pool-4-thread-1] ERROR o.r.c.pool.SlaveConnectionPool - slave 10.86.145.37/10.86.145.37:6379 has been disconnected after 180000 ms interval si\r\nnce moment of the first failed connection\r\n68809742 08 Dec 2018 09:06:50 +0000 [redisson-netty-1-2] INFO  o.r.c.SentinelConnectionManager - slave: 10.86.145.37:6379 has up\r\n68997353 08 Dec 2018 09:09:57 +0000 [pool-4-thread-1] ERROR o.r.c.pool.SlaveConnectionPool - slave 10.86.145.37/10.86.145.37:6379 has been disconnected after 180000 ms interval si\r\nnce moment of the first failed connection\r\n\r\n```\r\n\r\nThe Big problem with this, is that it creates instability in our app, and the partial operation of Redisson in this situation is confusing.\r\n\r\nThis happened after we upgraded to 3.7.1 and did not change configuration of Redis ", "url": "https://github.com/redisson/redisson/issues/1793", "user": "abel98", "labels": ["bug"], "created": "2018-12-08 13:47:14", "closed": "2019-01-25 11:24:19", "commits": {}, "ttf": 47.000277777777775, "commitsDetails": []}, {"title": "Pooled connection closed after MOVED redirection", "body": "", "url": "https://github.com/redisson/redisson/issues/1778", "user": "mrniko", "labels": ["bug"], "created": "2018-12-05 09:59:02", "closed": "2018-12-05 09:59:40", "commits": {"cbafc09d2b17185b3c507964d54f085c28a7872e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cbafc09d2b17185b3c507964d54f085c28a7872e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ce5a17fd29677d82059587c187a034407b3a6e65"], "nameRev": "cbafc09d2b17185b3c507964d54f085c28a7872e tags/redisson-2.15.0~57", "commitMessage": "Fixed - Pooled connection closed after MOVED redirection #1778\n", "commitDateTime": "2018-12-05 13:00:04", "authoredDateTime": "2018-12-05 13:00:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.returnConnection(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cbafc09d2b17185b3c507964d54f085c28a7872e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/pool"], "changesInPackagesSPOON": ["org.redisson.connection.pool.ConnectionPool.returnConnection(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)"]}, {"title": "Redisson Spring Boot doesn't start properly without lettuce or jedis in classpath", "body": "", "url": "https://github.com/redisson/redisson/issues/1774", "user": "mrniko", "labels": ["bug"], "created": "2018-12-04 10:32:56", "closed": "2018-12-04 10:36:26", "commits": {"f1526a93fd7c9e7273192033eced54836199575b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f1526a93fd7c9e7273192033eced54836199575b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b8ca822b4a2e61168857eb377780c5e2246fa009"], "nameRev": "f1526a93fd7c9e7273192033eced54836199575b tags/redisson-2.15.0~60", "commitMessage": "Fixed - Redisson Spring Boot doesn't start properly without lettuce or jedis in classpath #1774\n", "commitDateTime": "2018-12-04 13:34:04", "authoredDateTime": "2018-12-04 13:34:04", "commitGitStats": [{"filePath": "redisson-spring-boot-starter/pom.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter/RedissonAutoConfiguration.java", "insertions": 23, "deletions": 4, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonAutoConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.starter.RedissonAutoConfiguration.redisTemplate(org.springframework.data.redis.connection.RedisConnectionFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.starter.RedissonAutoConfiguration.stringRedisTemplate(org.springframework.data.redis.connection.RedisConnectionFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.starter.RedissonAutoConfiguration", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f1526a93fd7c9e7273192033eced54836199575b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 4, "lines": 27, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter"], "changesInPackagesSPOON": ["org.redisson.spring.starter.RedissonAutoConfiguration.redisTemplate(org.springframework.data.redis.connection.RedisConnectionFactory)", "org.redisson.spring.starter.RedissonAutoConfiguration.stringRedisTemplate(org.springframework.data.redis.connection.RedisConnectionFactory)", "org.redisson.spring.starter.RedissonAutoConfiguration"]}, {"title": "Redis URL not start with redis:// after update to 2.14.1", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nRun successfully\r\n### Actual behavior\r\n![38330a44a474e0bb63162d229a5744de](https://user-images.githubusercontent.com/14845223/49422967-bc58e200-f7d0-11e8-92d2-237fb0d38284.png)\r\n![8cac75cd93c40e1913c557354d5226ea](https://user-images.githubusercontent.com/14845223/49422971-bfec6900-f7d0-11e8-88fc-067f67765e15.png)\r\n![9bc3980ad9c8f6d144e819d5fe3b9b02](https://user-images.githubusercontent.com/14845223/49422973-c1b62c80-f7d0-11e8-8304-24085f74db31.png)\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n2.14.1\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1772", "user": "a2232189", "labels": ["bug"], "created": "2018-12-04 06:28:17", "closed": "2018-12-04 10:45:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Problem with radius() method and AWS ElastiCache cluster and readMode=SLAVE", "body": "### Expected behavior\r\nA call to retrieve the items from a RGeo key based on radius should work in an AWS ElastiCache replicated setup using readMode SLAVE\r\n\r\n### Actual behavior\r\nSince all these calls are considered read-only by Redisson as opposed to write by Redis/ElastiCache, they are all sent to read-only slaves. We get the exception below instead. Please note I've masked actual IP addresses and host names with x's, and replaced the key names and coordinates.\r\nREADONLY You can't write against a read only slave.. channel: [id: 0xad662a07, L:/xx.x.x.230:46140 - R:xxx-01.xxx.0001.use1.cache.amazonaws.com/xx.x.xx.xxx:6379] command: (GEORADIUS), params: [{geo}geoKey:coords, -100.000000, 30.000000, 50.0, mi, ASC]\r\n\r\n### Steps to reproduce or test case\r\nConfigure Redisson to use a replicated ElastiCache cluster with readMode=SLAVE and use radius() method for a RGeo object\r\n\r\n### Redis version\r\nAWS ElastiCache\r\n\r\n### Redisson version\r\n3.8.1\r\n\r\n### Redisson configuration\r\nIn Code\r\n```\r\nString[] redisNodes = { \"xxx-01.xxx.0001.use1.cache.amazonaws.com:6379\", \"xxx-02.xxx.0001.use1.cache.amazonaws.com:6379\", \"xxx-03.xxx.0001.use1.cache.amazonaws.com:6379\" }\r\nconfig.useReplicatedServers().addNodeAddress(redisNodes);\r\n``` \r\n\r\nIn YAML\r\n```\r\nreplicatedServersConfig:\r\n    idleConnectionTimeout: 10000\r\n    pingTimeout: 1000\r\n    connectTimeout: 10000\r\n    timeout: 3000\r\n    retryAttempts: 3\r\n    retryInterval: 1500\r\n    failedSlaveReconnectionInterval: 3000\r\n    failedSlaveCheckInterval: 60000\r\n    password: null\r\n    subscriptionsPerConnection: 5\r\n    clientName: null\r\n    loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}\r\n    subscriptionConnectionMinimumIdleSize: 1\r\n    subscriptionConnectionPoolSize: 50\r\n    slaveConnectionMinimumIdleSize: 10\r\n    slaveConnectionPoolSize: 100\r\n    masterConnectionMinimumIdleSize: 10\r\n    masterConnectionPoolSize: 100\r\n    readMode: \"SLAVE\"\r\n    subscriptionMode: \"MASTER\"\r\n    scanInterval: 1000\r\n    pingConnectionInterval: 0\r\n    keepAlive: false\r\n    tcpNoDelay: false\r\n    dnsMonitoringInterval: 5000\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.SerializationCodec> {}\r\ntransportMode: \"NIO\"\r\n```", "url": "https://github.com/redisson/redisson/issues/1768", "user": "duribe76", "labels": ["bug"], "created": "2018-11-30 21:19:51", "closed": "2018-12-27 04:43:09", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "RoundRobinLoadBalancer doesn't distribute load equally if one of slave nodes was failed", "body": "", "url": "https://github.com/redisson/redisson/issues/1766", "user": "mrniko", "labels": ["bug"], "created": "2018-11-30 12:29:26", "closed": "2018-11-30 12:30:41", "commits": {"ca8c7f88a14148fc6f74520b6d7a2ca5330bb241": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ca8c7f88a14148fc6f74520b6d7a2ca5330bb241", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["dc7036c9d88f013ba6ec22c5ba7d1906c892a9aa"], "nameRev": "ca8c7f88a14148fc6f74520b6d7a2ca5330bb241 tags/redisson-2.15.0~66", "commitMessage": "Fixed - RoundRobinLoadBalancer doesn't distribute load equally if one of slave nodes was failed #1766\n", "commitDateTime": "2018-11-30 15:30:24", "authoredDateTime": "2018-11-30 15:30:24", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 10, "deletions": 6, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ca8c7f88a14148fc6f74520b6d7a2ca5330bb241"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 6, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/pool"], "changesInPackagesSPOON": ["org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand)"]}, {"title": "NPE in CommandDecoder", "body": "We've problem with redisson-tomcat 8-3.9.1. / redisson v3.9.1. After sime kind of classes modification, the session manager stops working consequently it stopped Tomcat. Tomca'st log contains following fragment:\r\n```\r\nCaused by: java.lang.NullPointerException\r\n        at org.redisson.client.handler.CommandDecoder.selectDecoder(CommandDecoder.java:490)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:351)\r\n        at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:128)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:108)\r\n```", "url": "https://github.com/redisson/redisson/issues/1764", "user": "skybber", "labels": ["bug"], "created": "2018-11-29 08:35:15", "closed": "2018-12-20 14:31:42", "commits": {"bdb5e1cf43ca6532096dee98611af2417dc00b0a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "bdb5e1cf43ca6532096dee98611af2417dc00b0a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1a08db75b72f8863f9e5dc2fa4e3de5780d521d7"], "nameRev": "bdb5e1cf43ca6532096dee98611af2417dc00b0a tags/redisson-2.15.0~31", "commitMessage": "Fixed - NPE in CommandDecoder #1764\n", "commitDateTime": "2018-12-20 17:31:02", "authoredDateTime": "2018-12-20 17:31:02", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bdb5e1cf43ca6532096dee98611af2417dc00b0a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)"]}, {"title": "Spring Session keyPrefix setting isn't used in session name", "body": "", "url": "https://github.com/redisson/redisson/issues/1755", "user": "mrniko", "labels": ["bug"], "created": "2018-11-26 14:31:22", "closed": "2018-11-26 14:57:04", "commits": {"de1f34498a1d8e45ae128163c56f8de62079db01": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "56ab865cd5de0c028c04a2be6ca6adc7f8905fe0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "de1f34498a1d8e45ae128163c56f8de62079db01", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1ae5935f214028334eb5cc2789f249f0dc9d324a"], "nameRev": "de1f34498a1d8e45ae128163c56f8de62079db01 tags/redisson-2.15.0~69", "commitMessage": "Fixed - Spring Session keyPrefix setting isn't used in session name. #1755\n", "commitDateTime": "2018-11-26 17:52:38", "authoredDateTime": "2018-11-26 17:52:38", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.createSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.RedissonSession", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "56ab865cd5de0c028c04a2be6ca6adc7f8905fe0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["203a8c911b0c6325d158f04ef9914b74cc5c5bae"], "nameRev": "56ab865cd5de0c028c04a2be6ca6adc7f8905fe0 tags/redisson-2.15.0~46", "commitMessage": "Fixed - Spring Session keyPrefix setting isn't used in session name. #1755\n", "commitDateTime": "2018-12-08 13:41:41", "authoredDateTime": "2018-12-08 13:41:41", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.getSession(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["de1f34498a1d8e45ae128163c56f8de62079db01"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 1, "INS": 4, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/session"], "changesInPackagesSPOON": ["org.redisson.spring.session.RedissonSessionRepository.RedissonSession", "org.redisson.spring.session.RedissonSessionRepository.createSession()"]}, {"title": "The Redisson connection to Redis master node will break down after Redis slave node is up from down", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nWe have application using Redisson to access Redis cluster(3 masters+3 slaves).\r\nWe have a test case which is to shutdown one or more Redis slave nodes then take it up.\r\nWe don't expect there is any Redisson Connection broken on the master nodes since we only take action on the slave nodes.\r\n\r\n### Actual behavior\r\nIt is found after Redis slave node is shutdown and taken up, the Redisson connection to its master node will be broken.\r\nBy checking the Redisson 3.9.0(also the latest 3.9.1), it is found after a slave node is up, on its master node, Redisson will try to release the connection from all others except this slave node.\r\nHere \"all others\" has included the connection from the application.\r\nMasterSlaveEntry.java: Function \"public boolean slaveUp(URI address, FreezeReason freezeReason)\"\r\nNot sure my understanding is correct or not.\r\n\r\n### Steps to reproduce or test case\r\nLike above, in a Redis cluster, after restarting the slave nodes, the Redisson connections to the master nodes will be broken. \r\n\r\n### Redis version\r\n4.0.8\r\n\r\n### Redisson version\r\n3.9.0\r\n\r\n### Redisson configuration\r\nclusterServersConfig:\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 15000\r\n  connectTimeout: 10000\r\n#  timeout: 60000\r\n  timeout: 30000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n#  retryInterval: 1500\r\n  reconnectionTimeout: 1000\r\n  failedAttempts: 3\r\n  password: null\r\n  subscriptionsPerConnection: 5\r\n  clientName: null\r\n  loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}\r\n  slaveSubscriptionConnectionMinimumIdleSize: 1\r\n  slaveSubscriptionConnectionPoolSize: 50\r\n  slaveConnectionMinimumIdleSize: 2\r\n  slaveConnectionPoolSize: 2\r\n  masterConnectionMinimumIdleSize: 3\r\n  masterConnectionPoolSize: 3\r\n  readMode: \"MASTER_SLAVE\"\r\n  nodeAddresses:\r\n   - \"redis://HOST1:6000\"\r\n#  - \"redis://[HOST2]:5301\"\r\n#  - \"redis://[HOST3]:5301\"\r\n  scanInterval: 10000\r\nthreads: 32\r\nnettyThreads: 32\r\ncodec: !<org.redisson.codec.JsonJacksonCodec> {}\r\nuseLinuxNativeEpoll: false", "url": "https://github.com/redisson/redisson/issues/1752", "user": "zhanshen8D", "labels": ["bug"], "created": "2018-11-26 09:56:33", "closed": "2019-01-23 15:26:04", "commits": {}, "ttf": 58.000277777777775, "commitsDetails": []}, {"title": "Issues with RBitSet - Value does not stick", "body": "I am new to Redis and Redisson. I am trying to set a RMap<String,BitSet>. I call the put method on my RMap object, but when i do the get, I always get a empty BitSet. If i use RMap<String,RBitSet>, iterating over the map results in a \"java.lang.ClassCastException: org.redisson.RedissonReference cannot be cast to org.redisson.api.RBitSet\"\r\n\r\nRMap<String,BitSet> data = redisson.getMap(\"data-00\");\r\nBitSet bs = new BitSet(10);\r\n\t\tbs.set(5);\r\n\t\tbs.set(7);\r\ndata.put(\"a\", bs);\r\n\r\nRMap<String,BitSet> data1 = redisson.getMap(\"data-00\");\r\n\t\tfor (Map.Entry<String, BitSet> entry : data1.entrySet()) {\r\n\t\t\tSystem.out.println(entry.getKey()+\" = \"+entry.getValue());\r\n\t\t}\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1751", "user": "arkothari", "labels": ["bug"], "created": "2018-11-24 19:20:22", "closed": "2018-12-20 05:42:28", "commits": {"e2690921a38ccfc3206ef4a4d03523474f41af6b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "e2690921a38ccfc3206ef4a4d03523474f41af6b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["60352b8490220cfeecc99ca51d73b867f563838c"], "nameRev": "e2690921a38ccfc3206ef4a4d03523474f41af6b tags/redisson-2.15.0~35", "commitMessage": "Fixed - RBitSet object couldn't be used as nested object. #1751\n", "commitDateTime": "2018-12-20 08:43:00", "authoredDateTime": "2018-12-20 08:43:00", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBitSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/RedissonObject.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 2, "deletions": 7, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/liveobject/core/RedissonObjectBuilder.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/misc/RedissonObjectFactory.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReferenceTest.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBitSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBitSet", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonObject.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonObject.touchAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonObject.isExistsAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonObject.sizeInMemoryAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonObject.renameAsync(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonObject.migrateAsync(java.lang.String,int,int,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonObject.copyAsync(java.lang.String,int,int,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonObject.moveAsync(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonObject.renamenxAsync(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonObject.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonObject.unlinkAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.handleReference(org.redisson.misc.RPromise,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.fromReference(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonObjectBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.core.RedissonObjectBuilder.store(org.redisson.api.RObject,java.lang.String,org.redisson.api.RMap)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonObjectFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.RedissonObjectFactory.toReference(org.redisson.config.Config,java.lang.Object)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedissonReferenceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReferenceTest.testBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e2690921a38ccfc3206ef4a4d03523474f41af6b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 21, "lines": 43, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 23, "UPD": 0, "INS": 15, "MOV": 4, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/liveobject/core", "redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.RedissonObject.copyAsync(java.lang.String,int,int,long)", "org.redisson.RedissonObject.renamenxAsync(java.lang.String)", "org.redisson.RedissonObject.deleteAsync()", "org.redisson.RedissonObject.migrateAsync(java.lang.String,int,int,long)", "org.redisson.RedissonObject.renameAsync(java.lang.String)", "org.redisson.RedissonObject.touchAsync()", "org.redisson.RedissonObject.moveAsync(int)", "org.redisson.RedissonObject.isExistsAsync()", "org.redisson.command.CommandAsyncService.fromReference(java.lang.Object)", "org.redisson.RedissonBitSet", "org.redisson.RedissonObject.sizeInMemoryAsync()", "org.redisson.command.CommandAsyncService.handleReference(org.redisson.misc.RPromise,java.lang.Object)", "org.redisson.liveobject.core.RedissonObjectBuilder.store(org.redisson.api.RObject,java.lang.String,org.redisson.api.RMap)", "org.redisson.RedissonObject.unlinkAsync()", "org.redisson.misc.RedissonObjectFactory.toReference(org.redisson.config.Config,java.lang.Object)"]}, {"title": "in MASTER_SLAVE readMode ,when master down,and read will be slow...", "body": "In MASTER_SLAVE read mode, when redis master node closes, read will slow down. Is this a bug?\r\n\r\nHere are my operations\uff1a\r\n\r\nI started three redis server processes, (6379, 7379, 7380), 6379 as master and 7379, 7380 as slave.\r\nThen I started three Sentinel processes (26379, 26380, 26381) to monitor the redis cluster.\r\nThen I started redisson client by this config:\r\n\r\n```\r\nConfig config = new Config();  \r\nconfig.setTransportMode(TransportMode.NIO);\r\nconfig.useSentinelServers()\r\n.setReadMode(ReadMode.MASTER_SLAVE)\r\n.setMasterName(\"mymaster\")\r\n.addSentinelAddress(\"redis://127.0.0.1:26379\", \"redis://127.0.0.1:26380\", \"redis://127.0.0.1:26381\");\r\n```\r\n\r\nThen I read and write randomly to redis cluster\uff1a\r\n\r\n```\r\nRedissonClient redisson = Redisson.create(config);\r\nfor (; ; ) {\r\n   try {\r\n      RBucket<Object> test = redisson.getBucket(\"test\");\r\n      if (System.currentTimeMillis() % 5 == 0) {\r\n         test.set(System.currentTimeMillis()+\"\");\r\n      }\r\n      System.out.println(test.get());\r\n      Thread.sleep(50);\r\n   } catch (Exception e) {\r\n      e.printStackTrace();\r\n   }\r\n}\r\n```\r\n\r\nThen every 50 milliseconds I can get a result.\r\n\r\nBut when I kill redis master node (6379), the get command of redisson will become very slow, which is jstack information.\r\n\r\n```\r\n192 \"main\" #1 prio=5 os_prio=31 tid=0x00007febfc00c000 nid=0x1703 waiting on condition [0x0000700000218000]\r\n193    java.lang.Thread.State: WAITING (parking)\r\n194     at sun.misc.Unsafe.park(Native Method)\r\n195     - parking to wait for  <0x000000076c40ab30> (a java.util.concurrent.CountDownLatch$Sync)\r\n196     at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n197     at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\r\n198     at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\r\n199     at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\r\n200     at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)\r\n201     at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:182)\r\n202     at org.redisson.RedissonObject.get(RedissonObject.java:76)\r\n203     at org.redisson.RedissonBucket.get(RedissonBucket.java:97)\r\n204     at com.xxxx.main(RedisExpandClient.java:2135)\r\n205     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n206     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n207     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n208     at java.lang.reflect.Method.invoke(Method.java:498)\r\n209     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)\r\n```\r\n\r\n### Redis version\r\n\r\n```\r\nredis-server --version\r\nRedis server v=4.0.11 sha=00000000:0 malloc=libc bits=64 build=a57766d459574c0a\r\n```\r\n\r\n### Redisson version\r\n```\r\n<dependency>\r\n   <groupId>org.redisson</groupId>\r\n   <artifactId>redisson</artifactId>\r\n   <version>3.9.0</version>\r\n</dependency>\r\n```", "url": "https://github.com/redisson/redisson/issues/1746", "user": "violetgo", "labels": ["bug"], "created": "2018-11-22 03:31:32", "closed": "2018-11-30 12:31:19", "commits": {"9e3e9fe547830b3bcbb9a62d255bfd51780393b4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "dc7036c9d88f013ba6ec22c5ba7d1906c892a9aa": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "9e3e9fe547830b3bcbb9a62d255bfd51780393b4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["de1f34498a1d8e45ae128163c56f8de62079db01"], "nameRev": "9e3e9fe547830b3bcbb9a62d255bfd51780393b4 tags/redisson-2.15.0~68", "commitMessage": "Fixed - failed Redis Master node is not shutdown properly. #1746\n", "commitDateTime": "2018-11-30 15:25:52", "authoredDateTime": "2018-11-30 15:25:52", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.isMasterForRead()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.freeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "dc7036c9d88f013ba6ec22c5ba7d1906c892a9aa", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9e3e9fe547830b3bcbb9a62d255bfd51780393b4"], "nameRev": "dc7036c9d88f013ba6ec22c5ba7d1906c892a9aa tags/redisson-2.15.0~67", "commitMessage": "Fixed - Master node shouldn't be shutdown on slave down event in Sentinel mode. #1746\n", "commitDateTime": "2018-11-30 15:27:29", "authoredDateTime": "2018-11-30 15:27:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 12, "deletions": 8, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.addSlave(java.lang.String,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).6.operationComplete(io.netty.util.concurrent.Future).1.onSuccess(java.lang.Void)", "TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.addSlave(java.lang.String,java.lang.String,java.lang.String).9.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9e3e9fe547830b3bcbb9a62d255bfd51780393b4", "dc7036c9d88f013ba6ec22c5ba7d1906c892a9aa"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 36, "deletions": 10, "lines": 46, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 20, "UPD": 2, "INS": 10, "MOV": 3, "DEL": 5, "spoonFilesChanged": 4, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/connection/balancer"], "changesInPackagesSPOON": ["org.redisson.connection.balancer.LoadBalancerManager.freeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).6.operationComplete(io.netty.util.concurrent.Future).1.onSuccess(java.lang.Void)", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.ClientConnectionsEntry.isMasterForRead()", "org.redisson.connection.SentinelConnectionManager.addSlave(java.lang.String,java.lang.String,java.lang.String)", "org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.SentinelConnectionManager.addSlave(java.lang.String,java.lang.String,java.lang.String).9.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "RDelayedQueue got delay long time when offer a task with negative time", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n```\r\nRedissonClient redissonClient = redisService.getRedissonClient();\r\nRBlockingQueue readyQueue = redissonClient.getBlockingQueue(\"delay_queue\");\r\nRDelayedQueue delayedQueue = redissonClient.getDelayedQueue(readyQueue );\r\n\r\ndelayedQueue.offer(\"1111\", -2515194, TimeUnit.SECONDS);\r\n```\r\n\r\n### Expected behavior\r\noffer an element with delay time (-2515194, \"2018-11-20 20:00:52\") when create time is \"2018-11-20 20:42:08\".\r\n\r\nI expect that it transfers to readyQueue right now.\r\n\r\n### Actual behavior\r\nbut after a long time I got it from the readyQueue at \"2018-11-20 21:00:10\".\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.9.0\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1744", "user": "RogerFang", "labels": ["bug"], "created": "2018-11-20 13:17:06", "closed": "2019-03-06 09:07:45", "commits": {"b4bb0f480c41c1925b53f4aecb31ca05fd4f8884": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 105.00027777777778, "commitsDetails": [{"commitHash": "b4bb0f480c41c1925b53f4aecb31ca05fd4f8884", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4e3c64aa210067490fce5fdaa9debb960cbdc887"], "nameRev": "b4bb0f480c41c1925b53f4aecb31ca05fd4f8884 tags/redisson-3.10.4~20", "commitMessage": "Fixed - negative delay shouldn't be allowed to define for RDelayedQueue.offer method. #1744\n", "commitDateTime": "2019-02-28 15:51:41", "authoredDateTime": "2019-02-28 15:51:41", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonDelayedQueue.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonDelayedQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonDelayedQueue.offer(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonDelayedQueue.offerAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b4bb0f480c41c1925b53f4aecb31ca05fd4f8884"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonDelayedQueue.offerAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonDelayedQueue.offer(java.lang.Object,long,java.util.concurrent.TimeUnit)"]}, {"title": "cannot stop by shutdown in spring data redis, redisson 3.9.0,Maybe a bug", "body": "spring use:\r\n@Configuration\r\npublic class RedissonSpringDataConfig {\r\n    \r\n    @Bean\r\n    public RedissonConnectionFactory redissonConnectionFactory(RedissonClient redisson) {\r\n        return new RedissonConnectionFactory(redisson);\r\n    }\r\n    \r\n    @Bean(destroyMethod = \"shutdown\")\r\n    public RedissonClient redisson(@Value(\"classpath:/redisson.yaml\") Resource configFile) throws IOException {\r\n        Config config = Config.fromYAML(configFile.getInputStream());\r\n        return Redisson.create(config);\r\n    }\r\n }\r\n\r\nconfiguration:\r\nclusterServersConfig:\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  failedSlaveReconnectionInterval: 3000\r\n  failedSlaveCheckInterval: 60000\r\n  password: iMfnd14#ra66N0ep\r\n  subscriptionsPerConnection: 5\r\n  clientName: null\r\n  loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  slaveConnectionMinimumIdleSize: 32\r\n  slaveConnectionPoolSize: 64\r\n  masterConnectionMinimumIdleSize: 32\r\n  masterConnectionPoolSize: 64\r\n  readMode: \"SLAVE\"\r\n  subscriptionMode: \"SLAVE\"\r\n  nodeAddresses:\r\n  - \"redis://10.9.3.1:6344\"\r\n  - \"redis://10.9.3.1:6355\"\r\n  - \"redis://10.9.3.1:6366\"\r\n  - \"redis://10.9.3.1:6377\"\r\n  - \"redis://10.9.3.1:6388\"\r\n  - \"redis://10.9.3.1:6399\"\r\n  scanInterval: 1000\r\n  pingConnectionInterval: 0\r\n  keepAlive: false\r\n  tcpNoDelay: false\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.JsonJacksonCodec> {}\r\ntransportMode: \"NIO\"\r\n\r\nwhen shutdown throw excetion:\r\n2018-11-14 22:32:26.701 ERROR 12561 --- [       Thread-3] i.n.u.c.D.rejectedExecution              : Failed to submit a listener notification task. Event loop shut down?\r\n\r\njava.util.concurrent.RejectedExecutionException: event executor terminated\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:842) ~[netty-common-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:328) ~[netty-common-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:321) ~[netty-common-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:765) ~[netty-common-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.safeExecute(DefaultPromise.java:768) [netty-common-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:432) [netty-common-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:94) [netty-common-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.channel.group.DefaultChannelGroupFuture.setSuccess0(DefaultChannelGroupFuture.java:205) [netty-transport-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.channel.group.DefaultChannelGroupFuture.<init>(DefaultChannelGroupFuture.java:121) [netty-transport-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.channel.group.DefaultChannelGroup.newCloseFuture(DefaultChannelGroup.java:449) [netty-transport-4.1.29.Final.jar:4.1.29.Final]\r\n\tat io.netty.channel.group.DefaultChannelGroup.newCloseFuture(DefaultChannelGroup.java:430) [netty-transport-4.1.29.Final.jar:4.1.29.Final]\r\n\tat org.redisson.client.RedisClient.shutdownAsync(RedisClient.java:334) [redisson-3.9.0.jar:na]\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.closeNodeConnections(MasterSlaveConnectionManager.java:215) [redisson-3.9.0.jar:na]\r\n\tat org.redisson.cluster.ClusterConnectionManager.shutdown(ClusterConnectionManager.java:802) [redisson-3.9.0.jar:na]\r\n\tat org.redisson.Redisson.shutdown(Redisson.java:661) [redisson-3.9.0.jar:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_151]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_151]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_151]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_151]\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337) [spring-beans-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271) [spring-beans-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954) [spring-beans-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961) [spring-beans-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1039) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1015) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:935) [spring-context-5.0.10.RELEASE.jar:5.0.10.RELEASE]\r\n", "url": "https://github.com/redisson/redisson/issues/1736", "user": "zjw2011", "labels": ["bug"], "created": "2018-11-14 14:41:29", "closed": "2018-12-04 10:30:43", "commits": {"b8ca822b4a2e61168857eb377780c5e2246fa009": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "6f17ee1fa82adba8af0209f55d454e375301ede6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "b8ca822b4a2e61168857eb377780c5e2246fa009", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d15f4f6c562e2f6a098a677dca2962e870a0b45f"], "nameRev": "b8ca822b4a2e61168857eb377780c5e2246fa009 tags/redisson-2.15.0~61", "commitMessage": "Fixed - Redisson shouldn't be shutdown in RedissonConnectionFactory  #1736\n", "commitDateTime": "2018-12-04 13:27:00", "authoredDateTime": "2018-12-04 13:27:00", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnectionFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnectionFactory.destroy()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6f17ee1fa82adba8af0209f55d454e375301ede6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["915d55616ae5d46b4a8fc2ef55432e40a5249157"], "nameRev": "6f17ee1fa82adba8af0209f55d454e375301ede6 tags/redisson-3.10.0~27", "commitMessage": "Fixed - Redisson shouldn't be shutdown in RedissonConnectionFactory #1736\n", "commitDateTime": "2018-12-04 13:30:17", "authoredDateTime": "2018-12-04 13:30:17", "commitGitStats": [{"filePath": "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonConnectionFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.data.connection.RedissonConnectionFactory.destroy()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b8ca822b4a2e61168857eb377780c5e2246fa009", "6f17ee1fa82adba8af0209f55d454e375301ede6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 0, "deletions": 5, "lines": 5, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-data/redisson-spring-data-17/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-18/src/main/java/org/redisson/spring/data/connection", "redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection"], "changesInPackagesSPOON": ["org.redisson.spring.data.connection.RedissonConnectionFactory.destroy()"]}, {"title": "ScheduledExecutorService schedule does not run subsequent executions", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n If execution of the cron task takes longer than its period, then subsequent executions should start late, but not removed.\r\n### Actual behavior\r\nWhen the cron task takes longer then its period, the subsequent scheduler is removed and the task is never run after.\r\n### Steps to reproduce or test case\r\n```\r\npublic class Schedule {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tRedissonClient client = Redisson.create();\r\n\t\tRScheduledExecutorService executorService = client.getExecutorService(\"JobA\");\r\n                // run JobA every 10 seconds\r\n\t\texecutorService.schedule(new JobA() , CronSchedule.of(\"0/10 * * * * ?\"));\r\n\t}\r\n\r\n}\r\n```\r\nJobA class:\r\n```\r\npublic class JobA implements Runnable {\r\n\r\n\t@Override\r\n\tpublic void run() {\r\n\r\n\t\ttry {\r\n\t\t\tThread.sleep(10000)\r\n\t\t} catch (InterruptedException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tSystem.out.println(\"JOB A ran!!!!!!!!!!\");\r\n\t}\r\n\r\n}\r\n```\r\nWorker to run JobA:\r\n```\r\npublic class Worker{\r\n\tpublic static void main(String[] args) {\r\n\t\tConfig config = new Config();\r\n\t\tconfig.useSingleServer().setAddress(\"redis://127.0.0.1:6379\");\r\n\t\tRedissonNodeConfig nodeConfig = new RedissonNodeConfig(config);\r\n\t\tnodeConfig.getExecutorServiceWorkers().put(\"JobA\", 1);\r\n\t\tRedissonNode node = RedissonNode.create(nodeConfig);\r\n\t\tnode.start();\r\n\t}\r\n\r\n}\r\n```\r\n### Redis version\r\nRedis 3.0.503\r\n\r\n### Redisson version\r\n3.9.0, 3.8.2, 3.8.1, 3.8.0\r\n\r\nWhen the worker starts it will execute the JobA only once. I checked the Redis and the scheduler key under JobA is removed after. This happens when the task takes longer to complete than rate.", "url": "https://github.com/redisson/redisson/issues/1734", "user": "miraj12", "labels": ["bug"], "created": "2018-11-14 05:43:01", "closed": "2018-11-16 18:16:40", "commits": {"db1ba0c9289c64723c9b4dca228ce45f307cac2b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "db1ba0c9289c64723c9b4dca228ce45f307cac2b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["02f1fd7e205cd3581971ad1ad389a987355c7521"], "nameRev": "db1ba0c9289c64723c9b4dca228ce45f307cac2b tags/redisson-2.14.1~23", "commitMessage": "Fixed - task scheduled with cron pattern isn't executed with single worker. #1734\n", "commitDateTime": "2018-11-16 21:15:03", "authoredDateTime": "2018-11-16 21:15:03", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 28, "deletions": 20, "lines": 48}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonScheduledExecutorServiceTest.java", "insertions": 41, "deletions": 0, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.finish(java.lang.String)", "TOT": 14, "UPD": 2, "INS": 0, "MOV": 10, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.params.TaskParameters)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.params.TaskParameters,java.util.Date)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.finish(java.lang.String,java.util.Date)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.schedule(org.redisson.executor.params.ScheduledCronExpressionParameters)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeCallable(org.redisson.executor.params.TaskParameters)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScheduledExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.TestTask", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testSingleWorker()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testTaskFailover()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["db1ba0c9289c64723c9b4dca228ce45f307cac2b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 20, "lines": 48, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 25, "UPD": 2, "INS": 10, "MOV": 10, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.executor.TasksRunnerService.finish(java.lang.String,java.util.Date)", "org.redisson.executor.TasksRunnerService.schedule(org.redisson.executor.params.ScheduledCronExpressionParameters)", "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.params.TaskParameters)", "org.redisson.executor.TasksRunnerService.executeRunnable(org.redisson.executor.params.TaskParameters,java.util.Date)", "org.redisson.executor.TasksRunnerService.finish(java.lang.String)", "org.redisson.executor.TasksRunnerService.executeCallable(org.redisson.executor.params.TaskParameters)"]}, {"title": "sentinel bug ?", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n![image](https://user-images.githubusercontent.com/4715142/48325213-82803a00-e66f-11e8-9422-296cf3a8aa6a.png)\r\n\r\n### Actual behavior\r\nspring.redis.sentinel.nodes=192.168.1.241:26379,192.168.1.241:36379,192.168.1.241:46379\r\n\r\n### Steps to reproduce or test case\r\n![image](https://user-images.githubusercontent.com/4715142/48325244-9c218180-e66f-11e8-93fb-b9023ab04c48.png)\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1731", "user": "walkersing", "labels": ["bug"], "created": "2018-11-12 03:39:34", "closed": "2018-11-13 11:11:39", "commits": {"82050c404af09a481be06a9e3b3f8a75e1228b88": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "82050c404af09a481be06a9e3b3f8a75e1228b88", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bc7ab0e58660fe72580301b25260e3c2eaee10e3"], "nameRev": "82050c404af09a481be06a9e3b3f8a75e1228b88 tags/redisson-2.14.1~33", "commitMessage": "Fixed - Spring Boot Starter doesn't convert properly list of sentinel addresses. #1731\n", "commitDateTime": "2018-11-13 14:11:53", "authoredDateTime": "2018-11-13 14:11:53", "commitGitStats": [{"filePath": "redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter/RedissonAutoConfiguration.java", "insertions": 18, "deletions": 12, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonAutoConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.starter.RedissonAutoConfiguration.getConfigStream()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.starter.RedissonAutoConfiguration.redisson()", "TOT": 11, "UPD": 1, "INS": 4, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.spring.starter.RedissonAutoConfiguration.convert(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["82050c404af09a481be06a9e3b3f8a75e1228b88"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 12, "lines": 30, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 13, "UPD": 2, "INS": 5, "MOV": 4, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-boot-starter/src/main/java/org/redisson/spring/starter"], "changesInPackagesSPOON": ["org.redisson.spring.starter.RedissonAutoConfiguration.convert(java.util.List)", "org.redisson.spring.starter.RedissonAutoConfiguration.getConfigStream()", "org.redisson.spring.starter.RedissonAutoConfiguration.redisson()"]}, {"title": "Redisson 2.13.1+ no longer work on Java 1.6", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\nPer the main README:\r\nhttps://github.com/redisson/redisson/blob/master/README.md\r\n\r\nRedisson 2.14.0 should work on Java 1.6.\r\n\r\n### Actual behavior\r\n\r\nRedisson 2.13.1 and above have the class files compiled with version 51.0 (Java 1.7), and will no longer work on 1.6. ", "url": "https://github.com/redisson/redisson/issues/1719", "user": "natecarlson", "labels": ["bug"], "created": "2018-11-05 16:20:20", "closed": "2018-11-06 23:03:12", "commits": {"52685c144d18314fbb07fe3583d69041f29007c8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "52685c144d18314fbb07fe3583d69041f29007c8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a71460624e844335aa8d0268d411e3d3308c1445"], "nameRev": "52685c144d18314fbb07fe3583d69041f29007c8 tags/redisson-2.14.1~38", "commitMessage": "Fixed - JDK 1.6 compatibility for 2.x base line. #1719\n", "commitDateTime": "2018-11-07 02:03:06", "authoredDateTime": "2018-11-07 02:03:06", "commitGitStats": [{"filePath": "pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/RedisChannelInitializer.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/PendingResultDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisChannelInitializer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.RedisChannelInitializer.initSsl(org.redisson.client.RedisClientConfig,io.netty.channel.Channel)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "PendingResultDecoder.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["52685c144d18314fbb07fe3583d69041f29007c8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 2, "lines": 11, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol/decoder", "redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.RedisChannelInitializer.initSsl(org.redisson.client.RedisClientConfig,io.netty.channel.Channel)"]}, {"title": "RLocalCachedMap Subscribe timeout", "body": "\u4f60\u597d\uff0c\u6211\u5728\u6d4b\u8bd5\u5173\u4e8eRLocalCachedMap\u7684\u529f\u80fd\uff0c\u53d1\u73b0\u8ba2\u9605\u6570\u7684\u914d\u7f6e\u6570\u91cf\u4f1a\u5f15\u53d1\u8d85\u65f6\uff0c\u5e76\u4e14\u6b64\u7ebf\u7a0b\u91cd\u8bd5\u8bfb\u53d6\u4f9d\u7136\u8d85\u65f6\u3002\r\n\u6d4b\u8bd5\u9879\u76ee\u5982\u4e0b\uff1a\r\nhttps://github.com/titus12/TestRedissonTemporary2.git\r\ncount = 100,\u4f1a\u51fa\u95ee\u9898\uff0ccount < 50 \u6b63\u5e38\uff0c\r\nredisson.yaml \u914d\u7f6e\u4e2d\r\nsubscriptionsPerConnection = 5\uff0csubscriptionConnectionPoolSize = 10\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1717", "user": "titus12", "labels": ["bug"], "created": "2018-11-03 02:58:07", "closed": "2018-11-13 10:57:26", "commits": {"bc7ab0e58660fe72580301b25260e3c2eaee10e3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "bc7ab0e58660fe72580301b25260e3c2eaee10e3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1ab6ebf38ad50da613261975c024f89b4e0352c5"], "nameRev": "bc7ab0e58660fe72580301b25260e3c2eaee10e3 tags/redisson-2.14.1~34", "commitMessage": "Fixed - RTopic and all objects based on it stop work properly if Subscribe timeout has happened. #1717\n", "commitDateTime": "2018-11-13 13:57:22", "authoredDateTime": "2018-11-13 13:57:22", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonTopic.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/PublishSubscribeService.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 50, "deletions": 1, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.removeAllListeners()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribeService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.connect(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.punsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.reattachPubSubListeners(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.protocol.pubsub.PubSubType).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.psubscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.connect(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).7.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.RedisPubSubListener[]).1.run().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.reattachPubSubListeners(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.protocol.pubsub.PubSubType).9.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.psubscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).11.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.connect(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.RedisPubSubListener[]).1.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).11.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).10.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.sendCommands(org.redisson.api.RedissonClient)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testRemoveByInstance().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinel().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinel().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattach().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattach().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.sendCommands(org.redisson.api.RedissonClient).13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInCluster().14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInCluster().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testInnerPublish()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testUnsubscribe()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testLazyUnsubscribe()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.test()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testHeavyLoad()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testSubscribeLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinel()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattach()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bc7ab0e58660fe72580301b25260e3c2eaee10e3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 1, "lines": 18, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 24, "UPD": 15, "INS": 4, "MOV": 4, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 18}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/pubsub"], "changesInPackagesSPOON": ["org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.RedisPubSubListener[]).1.run()", "org.redisson.RedissonTopic.removeAllListeners()", "org.redisson.pubsub.PublishSubscribeService.connect(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[])", "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).10", "org.redisson.pubsub.PublishSubscribeService.reattachPubSubListeners(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.protocol.pubsub.PubSubType).9.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.pubsub.PublishSubscribeService.connect(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore).6", "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).10.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.pubsub.PublishSubscribeService.reattachPubSubListeners(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.protocol.pubsub.PubSubType).9", "org.redisson.pubsub.PublishSubscribeService.psubscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).11", "org.redisson.pubsub.PublishSubscribeService.punsubscribe(org.redisson.client.ChannelName,org.redisson.pubsub.AsyncSemaphore).8", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).7", "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).11.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType).7.run()", "org.redisson.pubsub.PublishSubscribeService.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.RedisPubSubListener[]).1.run().1", "org.redisson.pubsub.PublishSubscribeService.unsubscribe(org.redisson.client.ChannelName,org.redisson.client.protocol.pubsub.PubSubType)", "org.redisson.pubsub.PublishSubscribeService.connect(org.redisson.client.codec.Codec,org.redisson.client.ChannelName,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).5", "org.redisson.pubsub.PublishSubscribeService.psubscribe(org.redisson.client.ChannelName,java.util.Collection,org.redisson.client.codec.Codec).11.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "org.redisson.client.RedisConnectionClosedException received. MasterSlaveServersConfig.create function skips setting keepAlive flag.", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nThe value associated with the key\r\n### Actual behavior\r\norg.redisson.client.RedisConnectionClosedException: Command succesfully sent, but channel [xyz] has been closed!\r\nWhen I debug happy case I am seeing the actual redisClients in connectionFutures in async method of CommandAsyncService have keepAlive = false. I suspect this may the root cause.\r\n\r\nThe connections seem to go stale after an unknown duration (verified that the server timeout is not affecting this) \r\nLooking in more detail, I see MasterSlaveServersConfig create(BaseMasterSlaveServersConfig<?> cfg) \r\nin MasterSlaveConnectionManager.java file is not setting keepAlive flag.\r\n\r\nThis is extremely hard to repro and I couldn't debug a failure case yet; but it seems like we cannot rely on redisClient abstracting connection handling unless we are missing a config.\r\nPlease advise.\r\n### Steps to reproduce or test case\r\nConnect to a redis cluster by setting keepAlive = true\r\nNot performing any actions for a long time ranges between 1h to 10h.\r\nTrigger a getMap with existing key value.\r\n\r\n\r\n### Redis version\r\n4.0.9\r\n### Redisson version\r\n3.8.2\r\n### Redisson configuration\r\nredissonConfig.useClusterServers()\r\n                .addNodeAddress(\"host\")\r\n                .setMasterConnectionMinimumIdleSize(8)\r\n                .setMasterConnectionPoolSize(1924)\r\n                .setSlaveConnectionMinimumIdleSize(8)\r\n                .setSlaveConnectionPoolSize(1924)\r\n                .setTimeout(20000)\r\n                .setDnsMonitoringInterval(-1)\r\n                .setKeepAlive(true);", "url": "https://github.com/redisson/redisson/issues/1700", "user": "bugratari", "labels": ["bug"], "created": "2018-10-26 23:00:50", "closed": "2018-10-30 12:34:09", "commits": {"5d37dd0ea3577f117743c9ecaa4ed0bbba66c15c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "5d37dd0ea3577f117743c9ecaa4ed0bbba66c15c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f08cac4beb6d98f0538c44cc0ea26cc194ab1cdf", "c936ea5b0d69b65c9bfea575f5574114ffbe2865"], "nameRev": "5d37dd0ea3577f117743c9ecaa4ed0bbba66c15c tags/redisson-2.14.0~4^2", "commitMessage": "Merge pull request #1705 from bugratari/master\n\nIssue #1700 - Set the keepAlive flag from the config parameter", "commitDateTime": "2018-10-30 11:49:00", "authoredDateTime": "2018-10-30 11:49:00", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RTopic\u5982\u679c\u6267\u884cremoveAllListeners\u7591\u4f3c\u4f1a\u5bfc\u81f4\u53d1\u5e03\u8ba2\u9605\u963b\u585e", "body": "## redisson\u7248\u672c \r\n```xml\r\n <dependency>\r\n            <groupId>org.redisson</groupId>\r\n            <artifactId>redisson</artifactId>\r\n            <version>3.8.2</version>\r\n</dependency>\r\n```\r\n\r\n## redis\u4fe1\u606f\r\n```txt\r\n# Server\r\nredis_version:3.2.9\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:d837dd4aae3a6933\r\nredis_mode:standalone\r\nos:Linux 4.9.27-moby x86_64\r\narch_bits:64\r\nmultiplexing_api:epoll\r\ngcc_version:4.9.2\r\nprocess_id:1\r\nrun_id:3c1a4fd32e311a07d2d9c5ece9b937580467a241\r\ntcp_port:6379\r\nuptime_in_seconds:7678\r\nuptime_in_days:0\r\nhz:10\r\nlru_clock:13324804\r\nexecutable:/data/redis-server\r\nconfig_file:\r\n\r\n# Clients\r\nconnected_clients:83\r\nclient_longest_output_list:0\r\nclient_biggest_input_buf:0\r\nblocked_clients:0\r\n\r\n# Memory\r\nused_memory:2539056\r\nused_memory_human:2.42M\r\nused_memory_rss:4964352\r\nused_memory_rss_human:4.73M\r\nused_memory_peak:3540152\r\nused_memory_peak_human:3.38M\r\ntotal_system_memory:2095890432\r\ntotal_system_memory_human:1.95G\r\nused_memory_lua:37888\r\nused_memory_lua_human:37.00K\r\nmaxmemory:0\r\nmaxmemory_human:0B\r\nmaxmemory_policy:noeviction\r\nmem_fragmentation_ratio:1.96\r\nmem_allocator:jemalloc-4.0.3\r\n\r\n# Persistence\r\nloading:0\r\nrdb_changes_since_last_save:0\r\nrdb_bgsave_in_progress:0\r\nrdb_last_save_time:1540050984\r\nrdb_last_bgsave_status:ok\r\nrdb_last_bgsave_time_sec:0\r\nrdb_current_bgsave_time_sec:-1\r\naof_enabled:0\r\naof_rewrite_in_progress:0\r\naof_rewrite_scheduled:0\r\naof_last_rewrite_time_sec:-1\r\naof_current_rewrite_time_sec:-1\r\naof_last_bgrewrite_status:ok\r\naof_last_write_status:ok\r\n\r\n# Stats\r\ntotal_connections_received:3548\r\ntotal_commands_processed:8491\r\ninstantaneous_ops_per_sec:0\r\ntotal_net_input_bytes:2401890\r\ntotal_net_output_bytes:21135836\r\ninstantaneous_input_kbps:0.00\r\ninstantaneous_output_kbps:0.00\r\nrejected_connections:0\r\nsync_full:0\r\nsync_partial_ok:0\r\nsync_partial_err:0\r\nexpired_keys:0\r\nevicted_keys:0\r\nkeyspace_hits:263\r\nkeyspace_misses:2\r\npubsub_channels:1\r\npubsub_patterns:0\r\nlatest_fork_usec:410\r\nmigrate_cached_sockets:0\r\n\r\n# Replication\r\nrole:master\r\nconnected_slaves:0\r\nmaster_repl_offset:0\r\nrepl_backlog_active:0\r\nrepl_backlog_size:1048576\r\nrepl_backlog_first_byte_offset:0\r\nrepl_backlog_histlen:0\r\n\r\n# CPU\r\nused_cpu_sys:17.84\r\nused_cpu_user:3.51\r\nused_cpu_sys_children:0.00\r\nused_cpu_user_children:0.01\r\n\r\n# Cluster\r\ncluster_enabled:0\r\n\r\n# Keyspace\r\ndb0:keys=3,expires=0,avg_ttl=0\r\n```\r\n\r\n## \u590d\u73b0\u4ee3\u7801\r\n```java\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RTopic;\r\nimport org.redisson.api.RedissonClient;\r\n\r\nimport java.util.UUID;\r\nimport java.util.concurrent.*;\r\nimport java.util.concurrent.atomic.AtomicLong;\r\nimport java.util.function.Consumer;\r\n\r\npublic class RedissonSubErrorTest {\r\n\r\n    static RedissonClient redissonClient = Redisson.create();\r\n    static ScheduledExecutorService executorService = new ScheduledThreadPoolExecutor(Runtime.getRuntime().availableProcessors() * 2);\r\n\r\n\r\n    public static RTopic<String> getRequestTopic() {\r\n        return redissonClient.getTopic(\"request-topic\");\r\n    }\r\n\r\n    public static RTopic<String> getResponseTopic(String msgId) {\r\n        return redissonClient.getTopic(\"response-topic-\" + msgId);\r\n    }\r\n\r\n    public static void consume(String msgId, Consumer<String> consumer) {\r\n        RTopic<String> topic = getResponseTopic(msgId);\r\n        topic.addListener((channel, msg) -> {\r\n            consumer.accept(msg);\r\n\r\n            //*********[\u5220\u9664\u672c\u884c\u53ef\u89e3\u51b3\u6b64\u95ee\u9898]**********\r\n            topic.removeAllListeners();\r\n        });\r\n\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        AtomicLong responseCounter = new AtomicLong();\r\n        AtomicLong requestCounter = new AtomicLong();\r\n\r\n        executorService.submit(() -> {\r\n            try {\r\n                getRequestTopic()\r\n                        .addListener((channel, msg) -> {\r\n                            System.out.print(\"accept [\" + msg + \"] publish result: \");\r\n                            getResponseTopic(msg).publish(\"response-\" + msg + \"(\" + responseCounter.incrementAndGet() + \")\");\r\n                            System.out.println(\"ok\");\r\n                        });\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n\r\n        executorService.scheduleAtFixedRate(() -> {\r\n            String msgId = UUID.randomUUID().toString();\r\n            try {\r\n                System.out.print(\"consume [\" + msgId+\"] times \"+requestCounter.incrementAndGet());\r\n                consume(msgId, msg->{\r\n\r\n                });\r\n                System.out.println(\" ok\");\r\n                System.out.print(\"publish request [\" + msgId+\"]\");\r\n                getRequestTopic().publish(msgId);\r\n                System.out.println(\" ok\");\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n        }, 100, 100, TimeUnit.MILLISECONDS);\r\n    }\r\n}\r\n\r\n```\r\n\r\n# \u8f93\u51fa\r\n```txt\r\nconsume [b00ca1ff-f7f4-4c57-994e-66c569ccef59] times 1 ok\r\npublish request [b00ca1ff-f7f4-4c57-994e-66c569ccef59] ok\r\naccept [b00ca1ff-f7f4-4c57-994e-66c569ccef59] publish result: ok\r\nconsume [fd3e8c42-6544-46a2-aeb8-fb2e7fff4677] times 2 ok\r\npublish request [fd3e8c42-6544-46a2-aeb8-fb2e7fff4677] ok\r\naccept [fd3e8c42-6544-46a2-aeb8-fb2e7fff4677] publish result: ok\r\nconsume [58337154-1947-4429-bd46-ed16c8293cc2] times 3 ok\r\npublish request [58337154-1947-4429-bd46-ed16c8293cc2] ok\r\naccept [58337154-1947-4429-bd46-ed16c8293cc2] publish result: ok\r\nconsume [f89b7327-360e-4f1e-ab21-3207e5d1f979] times 4 ok\r\npublish request [f89b7327-360e-4f1e-ab21-3207e5d1f979] ok\r\naccept [f89b7327-360e-4f1e-ab21-3207e5d1f979] publish result: ok\r\nconsume [b81afdb8-fe94-4a70-8232-6f8eb5fde86a] times 5 ok\r\npublish request [b81afdb8-fe94-4a70-8232-6f8eb5fde86a] ok\r\naccept [b81afdb8-fe94-4a70-8232-6f8eb5fde86a] publish result: ok\r\nconsume [7c294875-7fc6-40c8-a4ce-2fcf9700b83c] times 6 ok\r\npublish request [7c294875-7fc6-40c8-a4ce-2fcf9700b83c] ok\r\naccept [7c294875-7fc6-40c8-a4ce-2fcf9700b83c] publish result: ok\r\nconsume [9d3b8e9f-7fdc-440d-84d9-84e915d7a3f6] times 7 ok\r\npublish request [9d3b8e9f-7fdc-440d-84d9-84e915d7a3f6] ok\r\naccept [9d3b8e9f-7fdc-440d-84d9-84e915d7a3f6] publish result: ok\r\nconsume [30cf5df0-7da0-461a-a9c9-b87aecd9a0bd] times 8 ok\r\npublish request [30cf5df0-7da0-461a-a9c9-b87aecd9a0bd] ok\r\naccept [30cf5df0-7da0-461a-a9c9-b87aecd9a0bd] publish result: ok\r\nconsume [4b5ff736-8728-4a39-af27-a1e6e9cfddb8] times 9 ok\r\npublish request [4b5ff736-8728-4a39-af27-a1e6e9cfddb8] ok\r\naccept [4b5ff736-8728-4a39-af27-a1e6e9cfddb8] publish result: ok\r\nconsume [dbbc3354-b3bd-4ab6-8557-f6821ec09948] times 10 ok\r\npublish request [dbbc3354-b3bd-4ab6-8557-f6821ec09948] ok\r\naccept [dbbc3354-b3bd-4ab6-8557-f6821ec09948] publish result: ok\r\nconsume [048072d4-8c28-46a2-954e-c05d6577f4db] times 11 ok\r\npublish request [048072d4-8c28-46a2-954e-c05d6577f4db] ok\r\naccept [048072d4-8c28-46a2-954e-c05d6577f4db] publish result: ok\r\nconsume [16d10170-58cf-40b3-bb45-187b7bb82da3] times 12 ok\r\npublish request [16d10170-58cf-40b3-bb45-187b7bb82da3] ok\r\naccept [16d10170-58cf-40b3-bb45-187b7bb82da3] publish result: ok\r\nconsume [1eecc1db-f479-45c7-9a43-d98b87c2cd7b] times 13 ok\r\npublish request [1eecc1db-f479-45c7-9a43-d98b87c2cd7b] ok\r\naccept [1eecc1db-f479-45c7-9a43-d98b87c2cd7b] publish result: ok\r\nconsume [3562cf2e-211e-4ec3-ba29-fa19f28f0159] times 14 ok\r\npublish request [3562cf2e-211e-4ec3-ba29-fa19f28f0159] ok\r\naccept [3562cf2e-211e-4ec3-ba29-fa19f28f0159] publish result: ok\r\nconsume [2a30a36e-4144-4619-b4d9-a9a9b2e3b22e] times 15 ok\r\npublish request [2a30a36e-4144-4619-b4d9-a9a9b2e3b22e] ok\r\naccept [2a30a36e-4144-4619-b4d9-a9a9b2e3b22e] publish result: ok\r\nconsume [bf85d4bb-f6d3-49e8-ad8c-22154de7f526] times 16 ok\r\npublish request [bf85d4bb-f6d3-49e8-ad8c-22154de7f526] ok\r\naccept [bf85d4bb-f6d3-49e8-ad8c-22154de7f526] publish result: ok\r\nconsume [fbd0e428-09bc-466e-a981-c317cc67649f] times 17 ok\r\npublish request [fbd0e428-09bc-466e-a981-c317cc67649f] ok\r\naccept [fbd0e428-09bc-466e-a981-c317cc67649f] publish result: ok\r\nconsume [2c38c431-c22d-463e-bbd5-601648dde4d3] times 18 ok\r\npublish request [2c38c431-c22d-463e-bbd5-601648dde4d3] ok\r\naccept [2c38c431-c22d-463e-bbd5-601648dde4d3] publish result: ok\r\nconsume [0bd47020-0039-4b66-9485-2a171d0f8b24] times 19 ok\r\npublish request [0bd47020-0039-4b66-9485-2a171d0f8b24] ok\r\naccept [0bd47020-0039-4b66-9485-2a171d0f8b24] publish result: ok\r\nconsume [5de00553-50d5-4340-ae18-76951cbc78d4] times 20 ok\r\npublish request [5de00553-50d5-4340-ae18-76951cbc78d4] ok\r\naccept [5de00553-50d5-4340-ae18-76951cbc78d4] publish result: ok\r\nconsume [55a7312b-f1ab-49a3-a49a-de7d18f58c02] times 21 ok\r\npublish request [55a7312b-f1ab-49a3-a49a-de7d18f58c02] ok\r\naccept [55a7312b-f1ab-49a3-a49a-de7d18f58c02] publish result: ok\r\nconsume [43e1361e-5806-42dc-a6fd-b0efb22c5cc1] times 22 ok\r\npublish request [43e1361e-5806-42dc-a6fd-b0efb22c5cc1] ok\r\naccept [43e1361e-5806-42dc-a6fd-b0efb22c5cc1] publish result: ok\r\nconsume [a749aa68-57ea-40fc-8c95-30b5bf7a1a9d] times 23 ok\r\npublish request [a749aa68-57ea-40fc-8c95-30b5bf7a1a9d] ok\r\naccept [a749aa68-57ea-40fc-8c95-30b5bf7a1a9d] publish result: ok\r\nconsume [df33ba6a-60ea-4e64-8e9b-69d9fbfe2b81] times 24 ok\r\npublish request [df33ba6a-60ea-4e64-8e9b-69d9fbfe2b81] ok\r\naccept [df33ba6a-60ea-4e64-8e9b-69d9fbfe2b81] publish result: ok\r\nconsume [9062568f-5c30-429b-8f46-b65ae7a5a711] times 25 ok\r\npublish request [9062568f-5c30-429b-8f46-b65ae7a5a711] ok\r\naccept [9062568f-5c30-429b-8f46-b65ae7a5a711] publish result: ok\r\nconsume [1ff12c28-1586-4086-ab61-b80ad11a2de9] times 26 ok\r\npublish request [1ff12c28-1586-4086-ab61-b80ad11a2de9] ok\r\naccept [1ff12c28-1586-4086-ab61-b80ad11a2de9] publish result: ok\r\nconsume [69472202-1aba-492b-ac1c-f9f4554b79a5] times 27 ok\r\npublish request [69472202-1aba-492b-ac1c-f9f4554b79a5] ok\r\naccept [69472202-1aba-492b-ac1c-f9f4554b79a5] publish result: ok\r\nconsume [5a75099e-1b9b-4f36-9706-690435ed8048] times 28 ok\r\npublish request [5a75099e-1b9b-4f36-9706-690435ed8048] ok\r\naccept [5a75099e-1b9b-4f36-9706-690435ed8048] publish result: ok\r\nconsume [043e5df4-0601-447b-9d99-bf8e388d6d91] times 29 ok\r\npublish request [043e5df4-0601-447b-9d99-bf8e388d6d91] ok\r\naccept [043e5df4-0601-447b-9d99-bf8e388d6d91] publish result: ok\r\nconsume [21b57a16-e865-4005-ad4e-14675f7ee729] times 30 ok\r\npublish request [21b57a16-e865-4005-ad4e-14675f7ee729] ok\r\naccept [21b57a16-e865-4005-ad4e-14675f7ee729] publish result: ok\r\nconsume [5514e4e6-a5c7-41e1-adac-27103e763c90] times 31 ok\r\npublish request [5514e4e6-a5c7-41e1-adac-27103e763c90] ok\r\naccept [5514e4e6-a5c7-41e1-adac-27103e763c90] publish result: ok\r\nconsume [56b41d0f-8b29-4045-8db9-327f4be42f65] times 32 ok\r\npublish request [56b41d0f-8b29-4045-8db9-327f4be42f65] ok\r\naccept [56b41d0f-8b29-4045-8db9-327f4be42f65] publish result: ok\r\nconsume [1b231538-79b4-47cd-9599-078c79ae5d17] times 33 ok\r\npublish request [1b231538-79b4-47cd-9599-078c79ae5d17] ok\r\naccept [1b231538-79b4-47cd-9599-078c79ae5d17] publish result: ok\r\nconsume [afcb6ad2-8daf-4b19-9850-a7c40a664bf7] times 34 ok\r\npublish request [afcb6ad2-8daf-4b19-9850-a7c40a664bf7] ok\r\naccept [afcb6ad2-8daf-4b19-9850-a7c40a664bf7] publish result: ok\r\nconsume [843e0d65-d5d5-41c5-bfc3-933e475faae1] times 35 ok\r\npublish request [843e0d65-d5d5-41c5-bfc3-933e475faae1] ok\r\naccept [843e0d65-d5d5-41c5-bfc3-933e475faae1] publish result: ok\r\nconsume [07b2d9f9-631e-4807-84a7-977a737e2e36] times 36 ok\r\npublish request [07b2d9f9-631e-4807-84a7-977a737e2e36] ok\r\naccept [07b2d9f9-631e-4807-84a7-977a737e2e36] publish result: ok\r\nconsume [ed5e3995-bee6-4595-8e8a-71c394b88c7d] times 37 ok\r\npublish request [ed5e3995-bee6-4595-8e8a-71c394b88c7d] ok\r\naccept [ed5e3995-bee6-4595-8e8a-71c394b88c7d] publish result: ok\r\nconsume [c26ee613-6baf-4b20-ad6c-d77889d64e72] times 38 ok\r\npublish request [c26ee613-6baf-4b20-ad6c-d77889d64e72] ok\r\naccept [c26ee613-6baf-4b20-ad6c-d77889d64e72] publish result: ok\r\nconsume [fdb01678-19af-4cc3-a280-a363223d2a2c] times 39 ok\r\npublish request [fdb01678-19af-4cc3-a280-a363223d2a2c] ok\r\naccept [fdb01678-19af-4cc3-a280-a363223d2a2c] publish result: ok\r\nconsume [1f6ac25b-537c-45c1-8741-35498c68a9d6] times 40 ok\r\npublish request [1f6ac25b-537c-45c1-8741-35498c68a9d6] ok\r\naccept [1f6ac25b-537c-45c1-8741-35498c68a9d6] publish result: ok\r\nconsume [df1cb753-137b-4e41-b2b1-f8993d9042e8] times 41 ok\r\npublish request [df1cb753-137b-4e41-b2b1-f8993d9042e8] ok\r\naccept [df1cb753-137b-4e41-b2b1-f8993d9042e8] publish result: ok\r\nconsume [e7e0b01c-d1cc-4d3d-ad77-194679119013] times 42 ok\r\npublish request [e7e0b01c-d1cc-4d3d-ad77-194679119013] ok\r\naccept [e7e0b01c-d1cc-4d3d-ad77-194679119013] publish result: ok\r\nconsume [6cc2e099-5a1b-4c1e-90fb-d75d8010d0dd] times 43 ok\r\npublish request [6cc2e099-5a1b-4c1e-90fb-d75d8010d0dd] ok\r\naccept [6cc2e099-5a1b-4c1e-90fb-d75d8010d0dd] publish result: ok\r\nconsume [151136a5-2204-40ec-a31b-c0942a362b06] times 44 ok\r\npublish request [151136a5-2204-40ec-a31b-c0942a362b06] ok\r\naccept [151136a5-2204-40ec-a31b-c0942a362b06] publish result: ok\r\nconsume [43b1a2f4-b652-4a2f-bd23-3902d00ae3bb] times 45 ok\r\npublish request [43b1a2f4-b652-4a2f-bd23-3902d00ae3bb] ok\r\naccept [43b1a2f4-b652-4a2f-bd23-3902d00ae3bb] publish result: ok\r\nconsume [db015885-d6b5-42bc-b953-9af535335190] times 46 ok\r\npublish request [db015885-d6b5-42bc-b953-9af535335190] ok\r\naccept [db015885-d6b5-42bc-b953-9af535335190] publish result: ok\r\nconsume [9aa892aa-91b3-41d3-b761-c4cb80263bc7] times 47 ok\r\npublish request [9aa892aa-91b3-41d3-b761-c4cb80263bc7] ok\r\naccept [9aa892aa-91b3-41d3-b761-c4cb80263bc7] publish result: ok\r\nconsume [4edc10ed-53b0-412a-98f5-995b1d4bf9f4] times 48 ok\r\npublish request [4edc10ed-53b0-412a-98f5-995b1d4bf9f4] ok\r\naccept [4edc10ed-53b0-412a-98f5-995b1d4bf9f4] publish result: ok\r\nconsume [1146df16-f8c1-489b-9be4-5949ad87f787] times 49 ok\r\npublish request [1146df16-f8c1-489b-9be4-5949ad87f787] ok\r\naccept [1146df16-f8c1-489b-9be4-5949ad87f787] publish result: ok\r\nconsume [a3e6b48a-4799-4b1f-9933-e874bb2ba6b1] times 50 ok\r\npublish request [a3e6b48a-4799-4b1f-9933-e874bb2ba6b1] ok\r\naccept [a3e6b48a-4799-4b1f-9933-e874bb2ba6b1] publish result: ok\r\nconsume [3b43ede5-1bce-45ee-b3c8-16829b09a982] times 51\r\n\r\n```", "url": "https://github.com/redisson/redisson/issues/1696", "user": "zhou-hao", "labels": ["bug"], "created": "2018-10-25 15:20:16", "closed": "2018-11-02 11:49:58", "commits": {"040c659f30116c3680db93501a098d0336c83548": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "040c659f30116c3680db93501a098d0336c83548", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b4135a99948bc71352158af729cca820e580c22e"], "nameRev": "040c659f30116c3680db93501a098d0336c83548 tags/redisson-2.14.1~49", "commitMessage": "Fixed - RTopic.removeAllListeners leads to PubSub connections leak. #1696\n", "commitDateTime": "2018-11-02 14:49:43", "authoredDateTime": "2018-11-02 14:49:43", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonPatternTopic.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/RedissonTopic.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/PubSubConnectionEntry.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 30, "deletions": 1, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPatternTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPatternTopic.removeAllListeners()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.removeAllListeners()", "TOT": 7, "UPD": 1, "INS": 5, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PubSubConnectionEntry.removeAllListeners(org.redisson.client.ChannelName)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testRemoveAllListeners()", "TOT": 6, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testRemoveAllListeners2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["040c659f30116c3680db93501a098d0336c83548"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 4, "lines": 20, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 11, "UPD": 1, "INS": 5, "MOV": 3, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/pubsub"], "changesInPackagesSPOON": ["org.redisson.RedissonPatternTopic.removeAllListeners()", "org.redisson.RedissonTopic.removeAllListeners()", "org.redisson.pubsub.PubSubConnectionEntry.removeAllListeners(org.redisson.client.ChannelName)"]}, {"title": "Redisson can't resolve short DNS name", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\nSince version 3.8.2 Redisson failed to resolve short DNS name.\r\n\r\n### Steps to reproduce or test case\r\n\r\n1) Configure redis full host name (in our case\r\n redis-test.domain.com)\r\n2) Add search domain \"domain.com\" to  /etc/resolv.conf\r\n3) Verify that short name can be resolved with nslookup:\r\nnslookup redis-test\r\nServer:\t\t192.168.20.167\r\nAddress:\t192.168.20.167#53\r\n\r\nNon-authoritative answer:\r\nName:\tredis-test.domain.com\r\nAddress: 135.17.72.111\r\n3) Configure redisson client to connect to \"redis-test\"\r\n4) Client can't connect to server:\r\n{\"time\":\"2018-10-24T10:36:45.969-07:00\",\"@version\":1,\"msg\":\"failed to resolve 'redis-test' after 3 queries \",\"logger_name\":\"org.redisson.cluster.ClusterConnectionManager\",\"thread_name\":\"main\",\"level\":\"WARN\",\"level_value\":30000,\"name\":\"gws-core-auth\",\"pid\":66459}\r\n\r\n### Redisson version\r\n3.8.2\r\n### Redisson configuration\r\nDefault config used", "url": "https://github.com/redisson/redisson/issues/1693", "user": "yevgenb", "labels": ["bug"], "created": "2018-10-24 17:37:31", "closed": "2019-01-18 14:05:31", "commits": {"89448edff906a1212b442b2661785b5707cc121c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 85.00027777777778, "commitsDetails": [{"commitHash": "89448edff906a1212b442b2661785b5707cc121c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ce4e86fd66da14f65e2b0decb7cbf6b55d808e61"], "nameRev": "89448edff906a1212b442b2661785b5707cc121c tags/redisson-2.14.0~17", "commitMessage": "Fixed - Redisson can't resolve short DNS name #1693\n", "commitDateTime": "2018-10-25 09:49:58", "authoredDateTime": "2018-10-25 09:49:58", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/dns/MultiDnsAddressResolverGroup.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MultiDnsAddressResolverGroup.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.MultiDnsAddressResolverGroup", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9d3d4a856222f4f9b4d3923e9a2afbeb1c1d5633"], "nameRev": "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b tags/redisson-2.15.1~5", "commitMessage": "Fixed - DNSNameResolver bug (workaround). #1646 #1625 #1486 #1693\n", "commitDateTime": "2019-01-18 17:06:33", "authoredDateTime": "2019-01-18 17:06:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MultiDnsAddressResolverGroupFactory.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/GroupAddressResolver.java", "insertions": 0, "deletions": 124, "lines": 124}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/MultiDnsAddressResolverGroup.java", "insertions": 0, "deletions": 80, "lines": 80}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MultiDnsAddressResolverGroupFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MultiDnsAddressResolverGroupFactory.create(java.lang.Class,io.netty.resolver.dns.DnsServerAddressStreamProvider)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "GroupAddressResolver.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.GroupAddressResolver", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MultiDnsAddressResolverGroup.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.MultiDnsAddressResolverGroup", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["89448edff906a1212b442b2661785b5707cc121c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/dns"], "changesInPackagesSPOON": ["org.redisson.connection.dns.MultiDnsAddressResolverGroup"]}, {"title": "ReplicatedConnectionManager shuts down executor it doesn't own", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nWhen we pass an executor in the redisson config, redisson should never shut it down.\r\n\r\n### Actual behavior\r\nReplicatedConnectionManager calls stopThreads from the parent class MasterSlaveConnectionManager.  The stopThreads method calls `executor.shutdown()` without checking who owns it.\r\n\r\n### Steps to reproduce or test case\r\nThis example should call stopThreads in the ReplicatedConnectionManager constructor because the config doesn't have any node addresses:\r\n\r\n```java\r\nExecutorService es = Executors.newCachedThreadPool();\r\nConfig config = new Config().setExecutor(executorService);\r\nconfig.useReplicatedServers();\r\nRedisson.create(config);\r\n\r\nassert !es.isTerminated();\r\n```\r\n\r\n### Redis version\r\n3.2.6\r\n\r\n### Redisson version\r\n3.8.2\r\n\r\n### Redisson configuration\r\n`config.setExecutor(executorService).useReplicatedServers()`\r\n", "url": "https://github.com/redisson/redisson/issues/1690", "user": "dsilvasc", "labels": ["bug"], "created": "2018-10-24 09:14:22", "closed": "2018-10-24 14:52:14", "commits": {"ce4e86fd66da14f65e2b0decb7cbf6b55d808e61": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ce4e86fd66da14f65e2b0decb7cbf6b55d808e61", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["57e2d6253a0045ba4b73a0b6c34fcd40dc793315"], "nameRev": "ce4e86fd66da14f65e2b0decb7cbf6b55d808e61 tags/redisson-2.14.0~18", "commitMessage": "Fixed - Redisson shuts down executor it doesn't own #1690\n", "commitDateTime": "2018-10-24 17:52:02", "authoredDateTime": "2018-10-24 17:52:02", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 8, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.stopThreads()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ce4e86fd66da14f65e2b0decb7cbf6b55d808e61"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 8, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.stopThreads()"]}, {"title": "BlockingQueue.take method doesn't survey failover (regression)", "body": "", "url": "https://github.com/redisson/redisson/issues/1680", "user": "mrniko", "labels": ["bug"], "created": "2018-10-17 14:03:01", "closed": "2018-10-17 14:03:39", "commits": {"a66e82b544cc23e303c738391dbdbfb096b98b66": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a66e82b544cc23e303c738391dbdbfb096b98b66", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9c69d25caf5703c06808072e47ddd2df0ece11c3"], "nameRev": "a66e82b544cc23e303c738391dbdbfb096b98b66 tags/redisson-2.14.0~31", "commitMessage": "Fixed - BlockingQueue.take method doesn't survey failover (regression) #1680\n", "commitDateTime": "2018-10-17 17:07:31", "authoredDateTime": "2018-10-17 17:07:31", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandsQueue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/CommandsData.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/QueueCommand.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandsQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandsQueue.channelInactive(io.netty.channel.ChannelHandlerContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandsData.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.CommandsData.isBlockingCommand()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueueCommand.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.isBlockingCommand()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a66e82b544cc23e303c738391dbdbfb096b98b66"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 1, "lines": 9, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.protocol.isBlockingCommand()", "org.redisson.client.protocol.CommandsData.isBlockingCommand()", "org.redisson.client.handler.CommandsQueue.channelInactive(io.netty.channel.ChannelHandlerContext)"]}, {"title": "NPE in CommandDecoder", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nIt should get the entry save into Reddis\r\n### Actual behavior\r\nI got the following exception :\r\n`2018-10-15 14:11:24,121 ERROR [stderr] (redisson-3-6) Exception in thread \"redisson-3-6\" org.redisson.client.RedisException: Unexpected exception while processing command\r\n2018-10-15 14:11:24,121 ERROR [stderr] (redisson-3-6)   at org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:378)\r\n2018-10-15 14:11:24,121 ERROR [stderr] (redisson-3-6)   at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:182)\r\n2018-10-15 14:11:24,121 ERROR [stderr] (redisson-3-6)   at org.redisson.RedissonObject.get(RedissonObject.java:76)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at org.redisson.RedissonMap.readAllEntrySet(RedissonMap.java:430)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at org.redisson.spring.session.RedissonSessionRepository$RedissonSession.load(RedissonSessionRepository.java:97)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at org.redisson.spring.session.RedissonSessionRepository.onMessage(RedissonSessionRepository.java:264)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at org.redisson.spring.session.RedissonSessionRepository.onMessage(RedissonSessionRepository.java:53)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at org.redisson.PubSubPatternMessageListener.onPatternMessage(PubSubPatternMessageListener.java:81)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at org.redisson.client.RedisPubSubConnection.onMessage(RedisPubSubConnection.java:83)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at org.redisson.client.handler.CommandPubSubDecoder$2.run(CommandPubSubDecoder.java:183)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n2018-10-15 14:11:24,122 ERROR [stderr] (redisson-3-6)   at java.lang.Thread.run(Thread.java:748)\r\n2018-10-15 14:11:24,136 ERROR [stderr] (redisson-3-6) Caused by: java.lang.NullPointerException\r\n2018-10-15 14:11:24,136 ERROR [stderr] (redisson-3-6)   at org.redisson.client.handler.CommandDecoder.selectDecoder(CommandDecoder.java:476)\r\n2018-10-15 14:11:24,136 ERROR [stderr] (redisson-3-6)   at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:348)\r\n2018-10-15 14:11:24,136 ERROR [stderr] (redisson-3-6)   at org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:128)\r\n2018-10-15 14:11:24,136 ERROR [stderr] (redisson-3-6)   at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:108)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n2018-10-15 14:11:24,137 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n2018-10-15 14:11:24,138 ERROR [stderr] (redisson-3-6)   at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n2018-10-15 14:11:24,138 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n2018-10-15 14:11:24,138 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n2018-10-15 14:11:24,138 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n2018-10-15 14:11:24,138 ERROR [stderr] (redisson-3-6)   at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n2018-10-15 14:11:24,138 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n2018-10-15 14:11:24,138 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n2018-10-15 14:11:24,138 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n2018-10-15 14:11:24,139 ERROR [stderr] (redisson-3-6)   at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n2018-10-15 14:11:24,139 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n2018-10-15 14:11:24,139 ERROR [stderr] (redisson-3-6)   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n2018-10-15 14:11:24,139 ERROR [stderr] (redisson-3-6)   at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n2018-10-15 14:11:24,139 ERROR [stderr] (redisson-3-6)   at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n2018-10-15 14:11:24,140 ERROR [stderr] (redisson-3-6)   at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n2018-10-15 14:11:24,140 ERROR [stderr] (redisson-3-6)   at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n2018-10-15 14:11:24,140 ERROR [stderr] (redisson-3-6)   at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n2018-10-15 14:11:24,140 ERROR [stderr] (redisson-3-6)   at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n2018-10-15 14:11:24,140 ERROR [stderr] (redisson-3-6)   at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)\r\n2018-10-15 14:11:24,140 ERROR [stderr] (redisson-3-6)   ... 2 more`\r\n\r\n### Steps to reproduce or test case\r\nIt is very hard to reproduce. It does not appears each time. I only got this error during a load test. It is very random.\r\nWe are in Spring 5 with spring-session-core in 2.0.5.RELEASE.\r\nRedis is used to store the httpSession data.\r\nHere is the redis data :\r\n` 1) \"\\\"passwordLess\\\"\"\r\n 2) \"\\\"true\\\"\"\r\n 3) \"\\\"SPRING_SECURITY_CONTEXT\\\"\"\r\n 4) \"{\\\"@class\\\":\\\"org.springframework.security.core.context.SecurityContextImpl\\\",\\\"authentication\\\":{\\\"@class\\\":\\\"ctx.security.CustomUsernamePasswordAuthenticationToken\\\",\\\"authenticated\\\":true,\\\"details\\\":{\\\"@class\\\":\\\"org.springframework.security.web.authentication.WebAuthenticationDetails\\\",\\\"remoteAddress\\\":\\\"88.190.12.13\\\",\\\"sessionId\\\":\\\"d6266c39-ac4d-4a2b-b3b5-995f1c341b58\\\"},\\\"principal\\\":{\\\"@class\\\":\\\"ctx.security.model.OnAirUserSecurity\\\",\\\"email\\\":\\\"9612472228_72@mailinator.com\\\",\\\"grantedAuths\\\":[\\\"java.util.ArrayList\\\",[{\\\"@class\\\":\\\"org.springframework.security.core.authority.SimpleGrantedAuthority\\\",\\\"authority\\\":\\\"ROLE_USER\\\"}]],\\\"id\\\":23178686,\\\"password\\\":\\\"$2a$10$iK2ijRQvMMxOXrzVAtLOQelepT1.ry.FE7n8jxO4D7xMkkurHibBO\\\"}}}\"\r\n 5) \"\\\"session:maxInactiveInterval\\\"\"\r\n 6) \"[\\\"java.lang.Long\\\",1800]\"\r\n 7) \"\\\"session:creationTime\\\"\"\r\n 8) \"[\\\"java.lang.Long\\\",1539612489361]\"\r\n 9) \"\\\"passenger_context\\\"\"\r\n10) \"{\\\"@class\\\":\\\"ctx.model.PassengerContext\\\",\\\"carrierCode\\\":\\\"TEST\\\",\\\"deviceIp\\\":\\\"10.0.0.0\\\",\\\"email\\\":\\\"1539612472228_72@mailinator.com\\\",\\\"flightId\\\":1926722,\\\"locale\\\":\\\"en\\\",\\\"platform\\\":\\\"EKPAC\\\",\\\"sessionId\\\":\\\"d6266c39-ac4d-4a2b-b3b5-995f1c341b58\\\",\\\"theme\\\":\\\"TEST\\\",\\\"userAgent\\\":\\\"Mozilla/5.0 (X11; Linux i686; rv:31.0) Gecko/20100101 Firefox/31.0\\\",\\\"userId\\\":23178686,\\\"vesselCode\\\":\\\"TEST4\\\"}\"\r\n11) \"\\\"selected_product\\\"\"\r\n12) \"{\\\"@class\\\":\\\"ice.client.backend.dto.resource.ProductResource\\\",\\\"allFlight\\\":true,\\\"byteUsageLimit\\\":26214400,\\\"carrier\\\":\\\"TEST\\\",\\\"createdAt\\\":\\\"2018-10-12T07:57:51.743871Z\\\",\\\"disabled\\\":false,\\\"discountable\\\":true,\\\"displayOrder\\\":0,\\\"displayedByteUsageLimit\\\":26214400,\\\"hideFromMenu\\\":false,\\\"id\\\":628,\\\"initial\\\":true,\\\"isAllFlight\\\":true,\\\"isInitial\\\":true,\\\"isRenewal\\\":true,\\\"links\\\":[\\\"java.util.ArrayList\\\",[{\\\"@class\\\":\\\"org.springframework.hateoas.Link\\\",\\\"href\\\":\\\"http://ppe-core-vip-001.pod.sitaonair.aero/ice-back-end/api/v1/products/LT_TEST_FL_25MB_FREE\\\",\\\"rel\\\":\\\"self\\\"}]],\\\"maxLifeTime\\\":90,\\\"meteringType\\\":\\\"FLIGHT_LIMITED_VOLUME\\\",\\\"pausable\\\":true,\\\"price\\\":0.0,\\\"productCode\\\":\\\"LT_TEST_FL_25MB_FREE\\\",\\\"productTranslations\\\":[\\\"java.util.ArrayList\\\",[]],\\\"productType\\\":\\\"REGULAR\\\",\\\"renewal\\\":true,\\\"speedLimit\\\":\\\"ILLIMITED\\\",\\\"timeUsageLimit\\\":0,\\\"updatedAt\\\":\\\"2018-10-12T07:57:51.743871Z\\\",\\\"upgradable\\\":false}\"\r\n13) \"\\\"captcha\\\"\"\r\n14) \"\\\"false\\\"\"\r\n15) \"\\\"org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository.CSRF_TOKEN\\\"\"\r\n16) \"{\\\"@class\\\":\\\"org.springframework.security.web.csrf.DefaultCsrfToken\\\",\\\"headerName\\\":\\\"X-CSRF-TOKEN\\\",\\\"parameterName\\\":\\\"_csrf\\\",\\\"token\\\":\\\"3e3c0d98-3e0a-428e-897a-7078f4bbc949\\\"}\"\r\n17) \"\\\"session:lastAccessedTime\\\"\"\r\n18) \"[\\\"java.lang.Long\\\",1539612775785]\"\r\n`\r\n\r\ni also got NPE with this message \r\n`[2018-10-15 12:17:25,026] [ERROR] [o.r.c.h.CommandDecoder] - Unable to decode data. channel: [id: 0x746bf880, L:/127.17.0.5:44662 - R:88.101.47.45/88.101.47.44:6399] message: *8$26\"session:lastAccessedTime\"$32[\"java.lang.Long\",1539605843679]$22\"session:creationTime\"$32[\"java.lang.Long\",1539605843676]$19\"passenger_context\"$272{\"@class\":\"aero.onair.ctx.model.PassengerContext\",\"carrierCode\":\"PAL\",\"deviceIp\":\"10.0.0.17\",\"flightId\":1926263,\"locale\":\"en\",\"platform\":\"EKPAC\",\"theme\":\"PAL\",\"userAgent\":\"Mozilla/5.0 (X11; Linux i686; rv:31.0) Gecko/20100101 Firefox/31.0\",\"userId\":0,\"vesselCode\":\"PAL14\"}$29\"session:maxInactiveInterval\"$23[\"java.lang.Long\",1800]*0*0\r\njava.lang.NullPointerException: null\r\n`\r\n### Redisson version\r\n3.8.2. It is also appear with the 3.7.5\r\n### Redisson configuration\r\n`\r\n@Configuration\r\n@EnableRedissonHttpSession\r\npublic class RedissonConfig implements BeanClassLoaderAware\r\n{\r\n    @Autowired\r\n    private ConfigurationWrapper configuration;\r\n\r\n    private static final int CONNECTION_TIMEOUT = 3000;\r\n    private static final int TIMEOUT = 10000;\r\n    private static final int THREAD_NUMBER = 4;\r\n\r\n    private ClassLoader loader;\r\n\r\n    @Bean(destroyMethod = \"shutdown\")\r\n    public RedissonClient redissonClient()\r\n    {\r\n         return Redisson.create(sentinelServers());\r\n    }\r\n\r\n    private Config baseConfig()\r\n    {\r\n        return new Config()\r\n                .setNettyThreads(THREAD_NUMBER)\r\n                .setThreads(THREAD_NUMBER)\r\n                .setCodec(new JsonJacksonCodec(mapper()));\r\n    }\r\n\r\n    private Config sentinelServers()\r\n    {\r\n        final Config config = baseConfig();\r\n        config.useSentinelServers()\r\n                .setConnectTimeout(CONNECTION_TIMEOUT)\r\n                .setTimeout(TIMEOUT)\r\n                .addSentinelAddress(split(configuration.getAddresses(), \", \"))\r\n                .setMasterName(configuration.getMasterName())\r\n                .setPassword(configuration.getPassword());\r\n        return config;\r\n    }\r\n\r\n    @Override\r\n    public void setBeanClassLoader(final ClassLoader classLoader)\r\n    {\r\n        this.loader = classLoader;\r\n    }\r\n\r\n    private ObjectMapper mapper()\r\n    {\r\n        final ObjectMapper mapper = new ObjectMapper();\r\n        mapper.registerModule(new JavaTimeModule());\r\n        mapper.registerModules(SecurityJackson2Modules.getModules(this.loader));\r\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\r\n        mapper.disable(DeserializationFeature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE);\r\n        mapper.setSerializationInclusion(Include.NON_NULL);\r\n        mapper.addMixIn(Throwable.class, JsonJacksonCodec.ThrowableMixIn.class);\r\n        mapper.findAndRegisterModules();\r\n        return mapper;\r\n    }\r\n}\r\n`", "url": "https://github.com/redisson/redisson/issues/1677", "user": "lbernollin", "labels": ["bug"], "created": "2018-10-15 15:10:38", "closed": "2018-10-16 12:09:24", "commits": {"0c3259c1284125bb5724e68eb2a7b7e9f92c2728": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0c3259c1284125bb5724e68eb2a7b7e9f92c2728", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["dfb3d59500256b0ece9cb1ce06c1be79a097b6ba"], "nameRev": "0c3259c1284125bb5724e68eb2a7b7e9f92c2728 tags/redisson-2.14.0~39", "commitMessage": "Fixed - NPE in CommandDecoder #1677\n", "commitDateTime": "2018-10-16 15:13:07", "authoredDateTime": "2018-10-16 15:13:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0c3259c1284125bb5724e68eb2a7b7e9f92c2728"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)"]}, {"title": "SnappyCodecV2 doesn't decode properly underlying data encoded by FST codec", "body": "", "url": "https://github.com/redisson/redisson/issues/1672", "user": "mrniko", "labels": ["bug"], "created": "2018-10-12 08:08:03", "closed": "2018-10-12 08:10:12", "commits": {"e2717f8275e2b63a8ff64e29ff63970a74ae034d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "dfb3d59500256b0ece9cb1ce06c1be79a097b6ba": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e2717f8275e2b63a8ff64e29ff63970a74ae034d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c6247e7308a799ebf001a679538671a9db7ba59e"], "nameRev": "e2717f8275e2b63a8ff64e29ff63970a74ae034d tags/redisson-2.14.0~54", "commitMessage": "Fixed - SnappyCodecV2 doesn't decode properly underlying data encoded by FST codec #1672\n", "commitDateTime": "2018-10-12 11:13:49", "authoredDateTime": "2018-10-12 11:13:49", "commitGitStats": [{"filePath": "redisson/pom.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/codec/SnappyCodecV2.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/test/java/org/redisson/codec/SnappyCodecV2Test.java", "insertions": 137, "deletions": 0, "lines": 137}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SnappyCodecV2.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.SnappyCodecV2.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "SnappyCodecV2Test.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.SnappyCodecV2Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "dfb3d59500256b0ece9cb1ce06c1be79a097b6ba", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["dc4017f06c60376375ab4e9625e4ab887a8a913d"], "nameRev": "dfb3d59500256b0ece9cb1ce06c1be79a097b6ba tags/redisson-2.14.0~40", "commitMessage": "Fixed - SnappyCodecV2 doesn't decode properly underlying data encoded by FST codec #1672\n", "commitDateTime": "2018-10-16 12:14:20", "authoredDateTime": "2018-10-16 12:14:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/SnappyCodecV2.java", "insertions": 11, "deletions": 18, "lines": 29}, {"filePath": "redisson/src/test/java/org/redisson/codec/SnappyCodecV2Test.java", "insertions": 479, "deletions": 0, "lines": 479}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["e2717f8275e2b63a8ff64e29ff63970a74ae034d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 1.0, "INS": 2.0, "MOV": 2.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.SnappyCodecV2.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)"]}, {"title": "Redis address can not load when I use redisson-spring-boot-starter: 3.8.0/3.8.2", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\nWhen I use the config: spring.redis.cluster.nodes=redis1.test:3000  or redis://redis1.test:3000 or rediss://redis1.test:3000, the application can not startup. \r\nthe env is:\r\nredisson-spring-boot-starter: 3.8.0/3.8.2\r\nspring-boot: 2.0.4\r\n### Expected behavior\r\nstartup successfully\r\n### Actual behavior\r\nGot error:  Illegal character in scheme name at index 0: [redis1.test]:3000\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n4.2\r\n### Redisson version\r\n3.8.2\r\n### Redisson configuration\r\nspring.redis.cluster.nodes=redis1.test:3000", "url": "https://github.com/redisson/redisson/issues/1670", "user": "einarzhang", "labels": ["bug"], "created": "2018-10-11 09:29:46", "closed": "2018-10-24 13:41:37", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Can Redisson be used for Tomcat session and application cache? Getting java.lang.ClassNotFoundException on read", "body": "I have a webapp using Redisson to handle Hibernate cache, application cache and session persistence.\r\nHowever, each time my webapp client attempt to READ back from Redis, Redisson give back an java.lang.ClassNotFoundException on every object saved in Redis.\r\nIf I remove all lib from the lib folder and disable the session manager, the webapp client work perfectly.\r\n\r\nI suspect a class loader conflict, as Redisson's classes are loaded inside the Server Class loader, while the webapp classes inside the Webapp class loader. The sessions objects are working as all is handled at Tomcat level, but the client is jumping between both class loader.\r\n\r\nAnyone was able to get both working altogether, or is it require to use 2 Redis Java client implementation, one for the Session and the other for the Webapps?\r\n\r\n### Expected behavior\r\nTomcat sessions are saved.\r\nObject are saved and restored from Redis in the Webapps\r\n\r\n### Actual behavior\r\nTomcat Session are saved and restored.\r\nWebapps objects are saved but cause a \"java.lang.ClassNotFoundException\" upon restore.\r\n\r\n### Steps to reproduce or test case\r\nCreate a plain tomcat instance.\r\nPut redisson-all and redisson-tomcat jars in lib folder\r\nCreate a war with a 2 serializable entities and a servlet that read and save said entity in the session And the client directly (caching). \r\n \r\n### Redis version\r\n4.0.9\r\n### Redisson version\r\n3.8.2\r\n\r\n### Redisson configuration\r\n{\r\n   \"singleServerConfig\":{\r\n      \"idleConnectionTimeout\":10000,\r\n      \"pingTimeout\":1000,\r\n      \"connectTimeout\":10000,\r\n      \"timeout\":3000,\r\n      \"retryAttempts\":3,\r\n      \"retryInterval\":1500,\r\n      \"password\":null,\r\n      \"subscriptionsPerConnection\":5,\r\n      \"clientName\":\"tomcat\",\r\n      \"address\": \"redis://127.0.0.1:6379\",\r\n      \"subscriptionConnectionMinimumIdleSize\":1,\r\n      \"subscriptionConnectionPoolSize\":50,\r\n      \"connectionMinimumIdleSize\":32,\r\n      \"connectionPoolSize\":64,\r\n      \"database\":1\r\n   },\r\n   \"threads\":0,\r\n   \"nettyThreads\":0,\r\n   \"codec\":{\r\n      \"class\":\"org.redisson.codec.SnappyCodec\"\r\n   },\r\n   \"transportMode\":\"NIO\"\r\n}\r\n\r\n[RedissonTomcatTest.zip](https://github.com/redisson/redisson/files/2465955/RedissonTomcatTest.zip)\r\n", "url": "https://github.com/redisson/redisson/issues/1668", "user": "pbusquemdf", "labels": ["bug", "tomcat"], "created": "2018-10-10 18:24:26", "closed": "2019-01-17 13:34:40", "commits": {"37b58db7bcc2bdf586e3ce2e55a37803fcd545fd": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "79e03e13aac81f1fd94b3cdaa7b4da29817f27ab": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 98.00027777777778, "commitsDetails": [{"commitHash": "37b58db7bcc2bdf586e3ce2e55a37803fcd545fd", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ae14dba2fcd3150493a00f1cb97af6620745da70"], "nameRev": "37b58db7bcc2bdf586e3ce2e55a37803fcd545fd tags/redisson-2.15.1~14", "commitMessage": "Fixed - Getting java.lang.ClassNotFoundException if same Redisson instance used in tomcat and application. #1668\n", "commitDateTime": "2019-01-17 16:35:01", "authoredDateTime": "2019-01-17 16:35:01", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/JndiRedissonFactory.java", "insertions": 0, "deletions": 11, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBitSet.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/BaseCodec.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/JsonJacksonMapCodec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/AvroJacksonCodec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/CborJacksonCodec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/CompositeCodec.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "redisson/src/main/java/org/redisson/codec/FstCodec.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/codec/IonJacksonCodec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/JsonJacksonCodec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/KryoCodec.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/codec/LZ4Codec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/MapCacheEventCodec.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "redisson/src/main/java/org/redisson/codec/MsgPackJacksonCodec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/SerializationCodec.java", "insertions": 5, "deletions": 21, "lines": 26}, {"filePath": "redisson/src/main/java/org/redisson/codec/SmileJacksonCodec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/SnappyCodec.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/SnappyCodecV2.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/codec/TypedJsonJacksonCodec.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 52, "deletions": 2, "lines": 54}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLocalCachedMapTest.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "79e03e13aac81f1fd94b3cdaa7b4da29817f27ab", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["37b58db7bcc2bdf586e3ce2e55a37803fcd545fd"], "nameRev": "79e03e13aac81f1fd94b3cdaa7b4da29817f27ab tags/redisson-2.15.1~13", "commitMessage": "Fixed - Getting java.lang.ClassNotFoundException if same Redisson instance used in tomcat and application. #1668\n", "commitDateTime": "2019-01-17 16:58:03", "authoredDateTime": "2019-01-17 16:58:03", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 0, "deletions": 10, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.buildClient()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["37b58db7bcc2bdf586e3ce2e55a37803fcd545fd"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 254, "deletions": 37, "lines": 291, "gitFilesChange": 21}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec", "redisson/src/main/java/org/redisson/client/codec", "redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": []}, {"title": "UnsupportedOperationException thrown when using Spring Actuator", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\nI am trying to use Spring Actuator with redis as a single server but I'm getting UnsupportedOperationException at RedisHealthCheck so the application is considering redis DOWN\r\n\r\n### Expected behavior\r\nActuator is able to perform health checks to determine the status of Redis server\r\n\r\n### Actual behavior\r\njava.lang.UnsupportedOperationException is thrown when Actuator tries to do the Redis health check\r\n\r\n### Steps to reproduce or test case\r\nAdd spring actuator to project\r\nConfigure RedissonClient as a single server (default configuration from here https://github.com/redisson/redisson/wiki/2.-Configuration#26-single-instance-mode can be used)\r\nStart the application with health check enabled\r\n\r\n### Redis version\r\nredis_version:4.0.9\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:d3ebfc7feabc1290\r\nredis_mode:standalone\r\n\r\n### Redisson version\r\nredisson-3.8.1\r\n\r\n### Redisson configuration\r\n{\r\n   \"singleServerConfig\":{\r\n      \"idleConnectionTimeout\":10000,\r\n      \"pingTimeout\":1000,\r\n      \"connectTimeout\":10000,\r\n      \"timeout\":3000,\r\n      \"retryAttempts\":3,\r\n      \"retryInterval\":1500,\r\n      \"password\":null,\r\n      \"subscriptionsPerConnection\":5,\r\n      \"clientName\":null,\r\n      \"address\": \"redis://127.0.0.1:6379\",\r\n      \"subscriptionConnectionMinimumIdleSize\":1,\r\n      \"subscriptionConnectionPoolSize\":50,\r\n      \"connectionMinimumIdleSize\":32,\r\n      \"connectionPoolSize\":64,\r\n      \"database\":0,\r\n      \"dnsMonitoringInterval\":5000\r\n   },\r\n   \"threads\":0,\r\n   \"nettyThreads\":0,\r\n   \"codec\":{\r\n      \"class\":\"org.redisson.codec.JsonJacksonCodec\"\r\n   },\r\n   \"transportMode\":\"NIO\"\r\n}\r\n[redisson-stack-trace.log](https://github.com/redisson/redisson/files/2446131/redisson-stack-trace.log)\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1663", "user": "bulivlad", "labels": ["bug"], "created": "2018-10-04 11:26:25", "closed": "2018-10-15 11:14:57", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Unexpected ClassCastException during RBatchReactive execution", "body": "### Expected behavior\r\n\r\nCalling `RBatchReactive.execute()` should complete successfully.\r\n\r\n### Actual behavior\r\n\r\n`RBatchReactive.execute()` triggers a ClassCastException to be thrown from `org.redisson.command.CommandBatchService.handleSuccess(CommandBatchService.java:224)` with the message of `org.redisson.misc.RedissonPromise cannot be cast to org.redisson.command.BatchPromise`\r\n\r\n### Steps to reproduce or test case\r\n\r\nThis was occurring in some code that looks like the following gist: https://gist.github.com/orclev/2e70b1bc269d30d79121fd1e3c6da047\r\n\r\nDue to the nature of the code in question so mild anonymization has been applied to it.\r\n\r\n### Redis version\r\n\r\n4.0.10\r\n\r\n### Redisson version\r\n\r\n3.7.5\r\n\r\n### Redisson configuration\r\n\r\n1 master, 2 replicas.\r\n\r\n```\r\nconfig.useReplicatedServers()\r\n                    .setTimeout(5000)\r\n                    .setRetryAttempts(15)\r\n                    .setMasterConnectionPoolSize(512)\r\n                    .setMasterConnectionMinimumIdleSize(64)\r\n                    .setSlaveConnectionPoolSize(1025)\r\n                    .setSlaveConnectionMinimumIdleSize(128)\r\n                    .setSubscriptionConnectionPoolSize(16)\r\n                    .setSubscriptionConnectionMinimumIdleSize(1)\r\n                    .setRetryInterval(500)\r\n                    .addNodeAddress(redisHosts.stream()\r\n                            .map(host -> \"redis://\" + host + \":\" + redisPort)\r\n                            .collect(Collectors.toList())\r\n                            .toArray(new String[] {}));\r\n```", "url": "https://github.com/redisson/redisson/issues/1661", "user": "orclev", "labels": ["bug"], "created": "2018-10-03 17:09:30", "closed": "2019-03-15 09:02:40", "commits": {"bd74e07fdbbe3399d808d2b332549578fd9c634e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 162.00027777777777, "commitsDetails": [{"commitHash": "bd74e07fdbbe3399d808d2b332549578fd9c634e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c0729ae51a863348d5e46db29c4ea79c56d79c0a"], "nameRev": "bd74e07fdbbe3399d808d2b332549578fd9c634e tags/redisson-3.10.5~15", "commitMessage": "Fixed - ClassCastException during RBatchReactive and RBatchRx execution in exectionMode = REDIS_WRITE_ATOMIC or REDIS_READ_ATOMIC. #1661\n", "commitDateTime": "2019-03-15 12:02:08", "authoredDateTime": "2019-03-15 12:02:08", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/reactive/CommandReactiveBatchService.java", "insertions": 21, "deletions": 16, "lines": 37}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonBatchReactive.java", "insertions": 2, "deletions": 9, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/rx/CommandRxBatchService.java", "insertions": 9, "deletions": 11, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/rx/RedissonBatchRx.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/rx/RedissonBatchRxTest.java", "insertions": 8, "deletions": 6, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.createPromise()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandReactiveBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.CommandReactiveBatchService.superReactive(java.util.function.Supplier)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.CommandReactiveBatchService.reactive(java.util.function.Supplier)", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.CommandReactiveBatchService", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.reactive.CommandReactiveBatchService.executeAsync(org.redisson.api.BatchOptions)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonBatchReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonBatchReactive.execute().1.get()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.reactive.RedissonBatchReactive.execute()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.reactive.RedissonBatchReactive", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandRxBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.rx.CommandRxBatchService.executeAsync(org.redisson.api.BatchOptions)", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.rx.CommandRxBatchService.flowable(java.util.concurrent.Callable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.rx.CommandRxBatchService", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.rx.CommandRxBatchService.flowable(java.util.concurrent.Callable).1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.rx.CommandRxBatchService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchRx.java", "spoonMethods": [{"spoonMethodName": "org.redisson.rx.RedissonBatchRx", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchRxTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.rx.RedissonBatchRxTest.testConnectionLeakAfterError()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.rx.RedissonBatchRxTest.testWriteTimeout()", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.rx.RedissonBatchRxTest.data()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bd74e07fdbbe3399d808d2b332549578fd9c634e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 34, "deletions": 38, "lines": 72, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 36, "UPD": 11, "INS": 10, "MOV": 9, "DEL": 6, "spoonFilesChanged": 5, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/reactive", "redisson/src/main/java/org/redisson/rx", "redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.rx.CommandRxBatchService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean)", "org.redisson.reactive.RedissonBatchReactive.execute().1.get()", "org.redisson.reactive.RedissonBatchReactive", "org.redisson.rx.CommandRxBatchService.flowable(java.util.concurrent.Callable)", "org.redisson.reactive.RedissonBatchReactive.execute()", "org.redisson.rx.CommandRxBatchService.flowable(java.util.concurrent.Callable).1", "org.redisson.rx.CommandRxBatchService", "org.redisson.reactive.CommandReactiveBatchService.executeAsync(org.redisson.api.BatchOptions)", "org.redisson.reactive.CommandReactiveBatchService.superReactive(java.util.function.Supplier)", "org.redisson.rx.CommandRxBatchService.executeAsync(org.redisson.api.BatchOptions)", "org.redisson.rx.RedissonBatchRx", "org.redisson.command.CommandBatchService.createPromise()", "org.redisson.reactive.CommandReactiveBatchService", "org.redisson.reactive.CommandReactiveBatchService.reactive(java.util.function.Supplier)"]}, {"title": "RRateLimiter.tryAcquire with timeout blocks forever", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nIf it's not possible to acquire a permission before timeout elapses, tryAcquire should return a boolean false.\r\n\r\n### Actual behavior\r\nEven if the timeout elapses, the method tryAcquire keeps blocked\r\n\r\n### Steps to reproduce or test case\r\n```\r\n@Test\r\n    public void testTryAcquire() {\r\n        RRateLimiter rr = redisson.getRateLimiter(\"acquire\");\r\n        assertThat(rr.trySetRate(RateType.OVERALL, 1, 5, RateIntervalUnit.SECONDS)).isTrue();\r\n\r\n        rr.tryAcquire(1, 1, TimeUnit.SECONDS);\r\n        rr.tryAcquire(1, 1, TimeUnit.SECONDS);\r\n        assertThat(rr.tryAcquire()).isFalse();\r\n\r\n    }\r\n```\r\n\r\n### Redis version\r\n4.0.2\r\n\r\n### Redisson version\r\n3.8.2-SNAPSHOT\r\n\r\n### Redisson configuration\r\nstandalone", "url": "https://github.com/redisson/redisson/issues/1659", "user": "arrodrigues", "labels": ["bug"], "created": "2018-09-30 22:03:31", "closed": "2018-10-04 10:29:45", "commits": {"7015d31aa859ac03c62cfcbbc12c7b186d430dc4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "7015d31aa859ac03c62cfcbbc12c7b186d430dc4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c38fecd9a4323a3b713fb0ad787e37c7b9675451"], "nameRev": "7015d31aa859ac03c62cfcbbc12c7b186d430dc4 tags/redisson-2.13.2~8", "commitMessage": "Fixed - RRateLimiter.tryAcquire with timeout blocks forever #1659\n", "commitDateTime": "2018-10-04 13:33:21", "authoredDateTime": "2018-10-04 13:33:21", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRateLimiter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRateLimiterTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRateLimiter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiter.tryAcquireAsync(long,org.redisson.misc.RPromise,long).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRateLimiterTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiterTest.testTryAcquire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7015d31aa859ac03c62cfcbbc12c7b186d430dc4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRateLimiter.tryAcquireAsync(long,org.redisson.misc.RPromise,long).2.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "CommandAsyncService blocks indefinitely [without OutOfMemoryError] ", "body": "Similarly to #889\r\n at sun.misc.Unsafe.park(Native Method)\r\n        -  waiting on java.util.concurrent.CountDownLatch$Sync@f2899ce\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\r\n        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)\r\n        at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:152)\r\n        at org.redisson.RedissonObject.get(RedissonObject.java:75)\r\n        at org.redisson.RedissonMap.get(RedissonMap.java:251)\r\n\r\n\r\n### Expected behavior\r\nthrow exception\r\n### Actual behavior\r\nThread indefinitely park\r\n### Steps to reproduce or test case\r\n1. Using RMapCache and configure maploader to DB(oracle).\r\n2. Shutdown DB,\r\n3.RMapCache get operation will be blocked.\r\n### Redis version\r\nany\r\n### Redisson version\r\n3.6.0\r\n### Redisson configuration\r\nstandalone", "url": "https://github.com/redisson/redisson/issues/1658", "user": "empty117", "labels": ["bug"], "created": "2018-09-30 06:59:50", "closed": "2018-10-04 09:57:12", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Warning with sensitive user data dispatched by CommandDecoder", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n### Expected behavior\r\nWhen RedisTimeoutException occurs just throw the exception to the user code without printing any warning messages or at least do not include result of the GET command\r\n\r\n### Actual behavior\r\nWe are storing sensitive data in redis cache. On rare occasions when GET command fails on timeout org.redisson.client.handler.CommandDecoder#completeResponse method prints warning message containing the command result which in our case is sensitive data stored in our redis cache \r\nthis is happening here : org/redisson/redisson/3.7.3/redisson-3.7.3-sources.jar!/org/redisson/client/handler/CommandDecoder.java:442\r\n\r\nSince our code is also using slf4j for logging, this warning message is printed to the same file as other log messages and then is flushed to our log managing server.\r\n\r\nAt this point we don't have control on this data and thus it will appear in our logging server. Due to GDPR concerns and inner regulations in our company we need to anonymize all user data stored in our systems, but it is hard to do when we have no control on the data dispatched to logs.\r\n\r\nWhile we will seek how to patch this for now, we think that other redisson customers could suffer from the same problem as we are and kindly ask you to remove sensitive contents from warning messages or set log message level to trace or debug or allow user code to control this.\r\n\r\nexample:\r\n`2018-09-22 01:57:16.647,level=\"WARN\",cls=\"o.r.c.h.CommandDecoder\",thread=\"redisson-netty-4-13\",..skipped some of our mdc context, line=\"response has been skipped due to timeout! channel: [id: 0xdf4f4091, L:/<ip_1(let me know if you need this info)>:36660 - R:<ip_2>/<ip_3>:15001], command: (GET), params: [<redis_key>], result: {sensitive user data in JSON format}\",exc=\"\"`\r\n### Steps to reproduce or test case\r\nIt would be easy enough to reproduce timeout - just reduce it to 1ms, but I'm not sure how to reproduce that result will be available after timeout. But even if result is not available warning message will be dispatched, so since we are requesting eliminate warning messages/allow disabling them it would suffice\r\n### Redis version\r\nRedis version: 3.2.7\r\n### Redisson version\r\nRedisson version: 3.7.3\r\n### Redisson configuration\r\n\r\n```\r\n{\r\n  \"clusterServersConfig\":{\r\n    \"password\": \"our password\",\r\n    \"nodeAddresses\": [\"rediss://<our_redis_endpoint_in_azure_redis_cache>:<redis_port>\"],\r\n    \"sslEnableEndpointIdentification\": true\r\n  }\r\n}\r\n```", "url": "https://github.com/redisson/redisson/issues/1654", "user": "ilyaMiropolsky", "labels": ["bug"], "created": "2018-09-28 22:38:03", "closed": "2019-03-14 09:04:12", "commits": {"a12722ec92f5c7d49347136cf3a9581d9ff0e08d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 166.00027777777777, "commitsDetails": [{"commitHash": "a12722ec92f5c7d49347136cf3a9581d9ff0e08d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["06f8ec1572e62405f3f021127e6372e7363da90c"], "nameRev": "a12722ec92f5c7d49347136cf3a9581d9ff0e08d tags/redisson-3.10.5~21", "commitMessage": "Fixed - command response shouldn't be printed in case of timeout #1654\n", "commitDateTime": "2019-03-14 12:03:33", "authoredDateTime": "2019-03-14 12:03:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.completeResponse(org.redisson.client.protocol.CommandData,java.lang.Object,io.netty.channel.Channel)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a12722ec92f5c7d49347136cf3a9581d9ff0e08d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 6, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.client.handler.CommandDecoder.completeResponse(org.redisson.client.protocol.CommandData,java.lang.Object,io.netty.channel.Channel)"]}, {"title": "redisson-spring-boot-starter 3.8.1 doesn't works", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.8.1\r\n### Redisson configuration\r\n\r\n\r\n\r\n\r\nBecause the file https://github.com/redisson/redisson/blob/master/redisson-spring-boot-starter/src/main/resources/META-INF/spring.factories is encoded as UTF-8+ BOM instead of Utf-8. Causes PropertyLoaderUtils.loadProperties(resource); reading this file is garbled.\r\n\r\nthe key of the property as follows :\r\n![cb30fc43-a49e-485d-bbe4-c769202e3f78](https://user-images.githubusercontent.com/2609827/46145023-582a1700-c291-11e8-9827-280f1b45a030.png)\r\n\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1650", "user": "xiejx618", "labels": ["bug"], "created": "2018-09-27 12:11:46", "closed": "2018-09-28 06:08:34", "commits": {"b8551b842459c02dae3c0afeda3c897acc4dba3d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b8551b842459c02dae3c0afeda3c897acc4dba3d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c25fa5468d51a82bf8d8268fdadd1ee58ece44f3"], "nameRev": "b8551b842459c02dae3c0afeda3c897acc4dba3d tags/redisson-2.13.2~20", "commitMessage": "#1650 - resources format fixed\n", "commitDateTime": "2018-09-28 09:11:18", "authoredDateTime": "2018-09-28 09:11:18", "commitGitStats": [{"filePath": "redisson-spring-boot-starter/src/main/resources/META-INF/spring.factories", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-spring-boot-starter/src/main/resources/META-INF/spring.provides", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b8551b842459c02dae3c0afeda3c897acc4dba3d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-spring-boot-starter/src/main/resources/META-INF/spring.provides", "redisson-spring-boot-starter/src/main/resources/META-INF/spring.factories"]}, {"title": "DNSNameResolver warnings in log using AWS Elasticache", "body": "I see this warning with stack trace below in  our application log when using redisson version 3.8.1 going against AWS Elasticache 3.2.6.  Wondering what is the cause of this? We are using netty 4.1.29.Final\r\n\r\n\r\n2018-09-24 19:19:17,885 WARN  [redisson-netty-1-43]  io.netty.resolver.dns.DnsNameResolver  - [id: 0xfe9383cc, L:/0.0.0.0:48778] Unexpected exception: \r\nio.netty.handler.codec.CorruptedFrameException: not a response\r\n\tat io.netty.handler.codec.dns.DatagramDnsResponseDecoder.newResponse(DatagramDnsResponseDecoder.java:84)\r\n\tat io.netty.handler.codec.dns.DatagramDnsResponseDecoder.decode(DatagramDnsResponseDecoder.java:57)\r\n\tat io.netty.handler.codec.dns.DatagramDnsResponseDecoder.decode(DatagramDnsResponseDecoder.java:33)\r\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:93)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:628)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:563)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:480)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:442)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n### Expected behavior\r\nNo warnings or exceptions\r\n### Actual behavior\r\nSee above warning\r\n### Steps to reproduce or test case\r\nNo particular steps to reproduce happens in normal course of execution\r\n### Redis version\r\nAWS Elasticache 3.2.6\r\n### Redisson version\r\n3.8.1\r\n### Redisson configuration\r\nclusterServersConfig:\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  timeout: 60000\r\n  retryAttempts: 10\r\n  retryInterval: 1500\r\n  subscriptionsPerConnection: 5\r\n  sslEnableEndpointIdentification: true\r\n  sslProvider: \"JDK\"\r\n  pingConnectionInterval: 0\r\n  keepAlive: false\r\n  tcpNoDelay: false\r\n  loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}\r\n  slaveConnectionMinimumIdleSize: 4\r\n  slaveConnectionPoolSize: 4\r\n  failedSlaveReconnectionInterval: 3000\r\n  failedSlaveCheckInterval: 60000\r\n  masterConnectionMinimumIdleSize: 32\r\n  masterConnectionPoolSize: 100\r\n  readMode: \"MASTER\"\r\n  subscriptionMode: \"MASTER\"\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 4\r\n  dnsMonitoringInterval: 5000\r\n  nodeAddresses:\r\n  - \"redis://xxxxxxxxxxxxxxx.cache.amazonaws.com:6379\"\r\n  scanInterval: 1000\r\n  slaveSubscriptionConnectionPoolSize: 4\r\n  slaveSubscriptionConnectionMinimumIdleSize: 1\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.JsonJacksonCodec> {}\r\nreferenceCodecProvider: !<org.redisson.codec.DefaultReferenceCodecProvider> {}\r\nreferenceEnabled: true\r\ntransportMode: \"NIO\"\r\nlockWatchdogTimeout: 30000\r\nkeepPubSubOrder: true\r\naddressResolverGroupFactory: !<org.redisson.connection.DnsAddressResolverGroupFactory> {}\r\nuseLinuxNativeEpoll: false", "url": "https://github.com/redisson/redisson/issues/1646", "user": "gopkumar", "labels": ["bug"], "created": "2018-09-24 21:10:51", "closed": "2019-01-18 14:06:06", "commits": {"14eeed15f6b7b508dd206d40dec7c80377e6c9db": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 115.00027777777778, "commitsDetails": [{"commitHash": "14eeed15f6b7b508dd206d40dec7c80377e6c9db", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7d934dc1dd7d59a6fd879d72ba9c8551ea7fddaf"], "nameRev": "14eeed15f6b7b508dd206d40dec7c80377e6c9db tags/redisson-2.13.2~4", "commitMessage": "Fixed - DNSNameResolver bug (workaround). #1646 #1625 #1486\n", "commitDateTime": "2018-10-06 11:07:42", "authoredDateTime": "2018-10-06 11:07:42", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/DnsAddressResolverGroupFactory.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/GroupAddressResolver.java", "insertions": 124, "deletions": 0, "lines": 124}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/MultiDnsAddressResolverGroup.java", "insertions": 74, "deletions": 0, "lines": 74}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DnsAddressResolverGroupFactory.java", "spoonMethods": []}, {"spoonFilePath": "GroupAddressResolver.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.GroupAddressResolver", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MultiDnsAddressResolverGroup.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.MultiDnsAddressResolverGroup", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9d3d4a856222f4f9b4d3923e9a2afbeb1c1d5633"], "nameRev": "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b tags/redisson-2.15.1~5", "commitMessage": "Fixed - DNSNameResolver bug (workaround). #1646 #1625 #1486 #1693\n", "commitDateTime": "2019-01-18 17:06:33", "authoredDateTime": "2019-01-18 17:06:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MultiDnsAddressResolverGroupFactory.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/GroupAddressResolver.java", "insertions": 0, "deletions": 124, "lines": 124}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/MultiDnsAddressResolverGroup.java", "insertions": 0, "deletions": 80, "lines": 80}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MultiDnsAddressResolverGroupFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MultiDnsAddressResolverGroupFactory.create(java.lang.Class,io.netty.resolver.dns.DnsServerAddressStreamProvider)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "GroupAddressResolver.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.GroupAddressResolver", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MultiDnsAddressResolverGroup.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.MultiDnsAddressResolverGroup", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Empty RBoundedBlockingQueue's capacity increases when using poll(timeout) ?", "body": "### Problem\r\nI have an empty BoundedBlockingQueue. Whenever I invoke poll(timeout) the queue.remainCapacity increases when timeout occurs. This does not happen when using poll(**no**-timeout). See simple test below.\r\n\r\n### Expected behavior\r\nI'd expect capacity/remainCapacity to not **not** increase :laughing: \r\n\r\n### Steps to reproduce or test case\r\n\r\n```java\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RBoundedBlockingQueue;\r\nimport org.redisson.api.RedissonClient;\r\n\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class BoundedBlockingQueueTest {\r\n\r\n    public static void main(String[] args) throws InterruptedException {\r\n        final RedissonClient client = Redisson.create();\r\n\r\n        try {\r\n\r\n            // run-pool-without-timeout\r\n            run(false, client, 10);\r\n\r\n            // run-pool-with-timeout\r\n            run(true, client, 10);\r\n\r\n        } finally {\r\n            client.shutdown();\r\n        }\r\n    }\r\n\r\n    private static void run(boolean useTimeout, RedissonClient client, int capacity) throws InterruptedException {\r\n        RBoundedBlockingQueue<String> queue = setupQueue(client, capacity);\r\n        System.out.println(\"Run queue.poll() \" + (useTimeout ? \"with\" : \"without\") + \" timeout:\\n\");\r\n        for (int i = 1; i <= 5; i++) {\r\n            poll(i, useTimeout, queue);\r\n        }\r\n        if (queue.remainingCapacity() > capacity) {\r\n            System.out.println(\"!!! Why o why is our capacity now \" + queue.remainingCapacity() + \"???\");\r\n        } else {\r\n            System.out.println(\"all is fine :)\");\r\n        }\r\n        System.out.println(\"++++++++++++++++++++++++++++++++++++++++++\\n\\n\");\r\n    }\r\n\r\n\r\n    private static RBoundedBlockingQueue<String> setupQueue(RedissonClient client, int capacity) {\r\n        RBoundedBlockingQueue<String> queue = client.getBoundedBlockingQueue(\"queue\");\r\n        queue.delete();\r\n        queue.trySetCapacity(capacity);\r\n        return queue;\r\n    }\r\n\r\n    private static void poll(int index, boolean useTimeout, RBoundedBlockingQueue<String> queue) throws InterruptedException {\r\n        System.out.println(\"Before Poll \" + index + \" - queueSize: \" + queue.size() + \", remainingCapacity: \" + queue.remainingCapacity());\r\n        String msg = (useTimeout ? queue.poll(1, TimeUnit.SECONDS) : queue.poll());\r\n        if (msg == null) {\r\n            System.out.println(\"After  Poll \" + index + \" - queueSize: \" + queue.size() + \", remainingCapacity: \" + queue.remainingCapacity());\r\n        } else {\r\n            throw new IllegalStateException(\"queue is not empty\");\r\n        }\r\n        System.out.println(\"------------------------------------------\");\r\n    }\r\n}\r\n```\r\n\r\nOutput is:\r\n```\r\nRun queue.poll() without timeout:\r\n\r\nBefore Poll 1 - queueSize: 0, remainingCapacity: 10\r\nAfter  Poll 1 - queueSize: 0, remainingCapacity: 10\r\n------------------------------------------\r\nBefore Poll 2 - queueSize: 0, remainingCapacity: 10\r\nAfter  Poll 2 - queueSize: 0, remainingCapacity: 10\r\n------------------------------------------\r\nBefore Poll 3 - queueSize: 0, remainingCapacity: 10\r\nAfter  Poll 3 - queueSize: 0, remainingCapacity: 10\r\n------------------------------------------\r\nBefore Poll 4 - queueSize: 0, remainingCapacity: 10\r\nAfter  Poll 4 - queueSize: 0, remainingCapacity: 10\r\n------------------------------------------\r\nBefore Poll 5 - queueSize: 0, remainingCapacity: 10\r\nAfter  Poll 5 - queueSize: 0, remainingCapacity: 10\r\n------------------------------------------\r\nall is fine :)\r\n++++++++++++++++++++++++++++++++++++++++++\r\n\r\nRun queue.poll() with timeout:\r\n\r\nBefore Poll 1 - queueSize: 0, remainingCapacity: 10\r\nAfter  Poll 1 - queueSize: 0, remainingCapacity: 11\r\n------------------------------------------\r\nBefore Poll 2 - queueSize: 0, remainingCapacity: 11\r\nAfter  Poll 2 - queueSize: 0, remainingCapacity: 12\r\n------------------------------------------\r\nBefore Poll 3 - queueSize: 0, remainingCapacity: 12\r\nAfter  Poll 3 - queueSize: 0, remainingCapacity: 13\r\n------------------------------------------\r\nBefore Poll 4 - queueSize: 0, remainingCapacity: 13\r\nAfter  Poll 4 - queueSize: 0, remainingCapacity: 14\r\n------------------------------------------\r\nBefore Poll 5 - queueSize: 0, remainingCapacity: 14\r\nAfter  Poll 5 - queueSize: 0, remainingCapacity: 15\r\n------------------------------------------\r\n!!! Why o why is our capacity now 15???\r\n++++++++++++++++++++++++++++++++++++++++++\r\n```\r\n\r\n### Redis version\r\n4.0.11 (running in standalone mode)\r\n\r\n### Redisson version\r\n3.8.0\r\n\r\nThanks!\r\n", "url": "https://github.com/redisson/redisson/issues/1633", "user": "dguggi", "labels": ["bug"], "created": "2018-09-13 16:02:54", "closed": "2018-09-21 11:27:55", "commits": {"a863f5909c257680e77965d37ee6ea320f720f59": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "a863f5909c257680e77965d37ee6ea320f720f59", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6f5a382b31e2cf6918b10e821c7d70ee63f1f684"], "nameRev": "a863f5909c257680e77965d37ee6ea320f720f59 tags/redisson-2.13.2~35", "commitMessage": "Fixed - empty RBoundedBlockingQueue's capacity increases when using poll(timeout). #1633\n", "commitDateTime": "2018-09-21 14:31:13", "authoredDateTime": "2018-09-21 14:31:13", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBoundedBlockingQueue.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBoundedBlockingQueueTest.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBoundedBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.wrapTakeFuture(org.redisson.api.RFuture).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBoundedBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueueTest.testRemainingCapacity()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a863f5909c257680e77965d37ee6ea320f720f59"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBoundedBlockingQueue.wrapTakeFuture(org.redisson.api.RFuture).3.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Constant Unable to send command! errors with pingConnectionInterval config", "body": "### Expected behavior\r\nOnce we added pingConnectionInterval = 1000 configuration, randomly after a period of time the server is unable to perform any operation on redis. Having the following error on every request:\r\n`org.redisson.client.WriteRedisConnectionException: Unable to send command! Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=MasterSlaveEntry [masterEntry=[freeSubscribeConnectionsAmount=0, freeSubscribeConnectionsCounter=49, freeConnectionsAmount=8, freeConnectionsCounter=64, freezed=false, freezeReason=null, client=[addr=redis://100.127.5.63:6379], nodeType=MASTER, firstFail=0]]], connection: [id: 0x06781db8, L:0.0.0.0/0.0.0.0:47286 ! R:100.127.15.237/100.127.15.237:6379], command: (HMGET), params: [dev:operator:TENANT_DETAILS_CACHE_KEY_V4, PooledUnsafeDirectByteBuf(ridx: 0, widx: 43, cap: 256), PooledUnsafeDirectByteBuf(ridx: 0, widx: 28, cap: 256)]\r\nat org.redisson.command.CommandAsyncService.checkWriteFuture(CommandAsyncService.java:664) ~[redisson-3.7.5.jar:?]\r\nat org.redisson.command.CommandAsyncService.access$100(CommandAsyncService.java:84) ~[redisson-3.7.5.jar:?]\r\nat org.redisson.command.CommandAsyncService$9$1.operationComplete(CommandAsyncService.java:622) ~[redisson-3.7.5.jar:?]\r\nat org.redisson.command.CommandAsyncService$9$1.operationComplete(CommandAsyncService.java:619) ~[redisson-3.7.5.jar:?]\r\nat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:485) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:424) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:121) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetFailure(AbstractChannel.java:987) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.AbstractChannel$AbstractUnsafe.write(AbstractChannel.java:869) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.DefaultChannelPipeline$HeadContext.write(DefaultChannelPipeline.java:1391) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.AbstractChannelHandlerContext.access$1900(AbstractChannelHandlerContext.java:38) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1081) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1128) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1070) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:464) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]\r\nat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.27.Final.jar:4.1.27.Final]\r\nat java.lang.Thread.run(Thread.java:844) [?:?]\r\nCaused by: java.nio.channels.ClosedChannelException\r\nat io.netty.channel.AbstractChannel$AbstractUnsafe.write(...)(Unknown Source) ~[netty-transport-4.1.27.Final.jar:4.1.27.Final]`\r\n \r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n3.0.7\r\n### Redisson version\r\n3.7.5\r\n### Redisson configuration\r\nredis cluster with sentinels\r\npingConnectionInterval = 1000", "url": "https://github.com/redisson/redisson/issues/1632", "user": "archmisha", "labels": ["bug"], "created": "2018-09-13 07:35:59", "closed": "2018-12-24 07:10:29", "commits": {"13abe16511bedfdbce4ca36e1df931c3a230dbba": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 101.00027777777778, "commitsDetails": [{"commitHash": "13abe16511bedfdbce4ca36e1df931c3a230dbba", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bdb5e1cf43ca6532096dee98611af2417dc00b0a"], "nameRev": "13abe16511bedfdbce4ca36e1df931c3a230dbba tags/redisson-2.15.0~30", "commitMessage": "Fixed - CommandDecoder throws IndexOutOfBoundsException if pingConnectionInterval param is used #1497\nFixed - Unable to send command! error if pingConnectionInterval param is used #1632\n", "commitDateTime": "2018-12-24 10:10:20", "authoredDateTime": "2018-12-24 10:10:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisPubSubConnection.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 50, "deletions": 94, "lines": 144}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandsQueue.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/State.java", "insertions": 15, "deletions": 11, "lines": 26}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/StateLevel.java", "insertions": 10, "deletions": 17, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisPubSubConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisPubSubConnection.async(org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean)", "TOT": 22, "UPD": 8, "INS": 0, "MOV": 7, "DEL": 7}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List,boolean)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 42, "UPD": 8, "INS": 7, "MOV": 19, "DEL": 8}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.ChannelHandlerContext,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "CommandsQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendNextCommand(io.netty.channel.Channel)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "State.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.State.decLevel()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.State.incLevel()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.State.resetLevel()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.State.getLevel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StateLevel.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.StateLevel.getLastListSize()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.StateLevel", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.setLastListSize(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.getLastList()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.setLastList(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.isFull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Redisson Sentinel not executing scheduled task on Master-Slave Failover", "body": "I am running Redis in Sentinel Mode with 5 Sentinel, 1 Master and 2 Slaves. I am scheduling a task with Redisson. It is executing the scheduled tasks normally but if i bring down the Master and a new master is elected by the sentinels, redisson doesn't execute the previously scheduled task. Newly scheduled tasks are getting executed.\r\n\r\n```\r\nRedissonTest.createRedissonNode();\r\n            RScheduledExecutorService scheduledExecutorService = redissonClient.getExecutorService(\"dialer_manager_worker\");\r\n             scheduledExecutorService.schedule(new CallableTask(i), i+1, TimeUnit.MINUTES);\r\n```\r\n**Observation:** The previously scheduled tasks are getting executed on restarting redisson node.\r\n\r\n### Expected behavior\r\nRedisson Node should execute the previously scheduled task after master-slave failover\r\n\r\n### Actual behavior\r\nRedisson Node doesn't execute the previously scheduled task after master-slave failover.\r\n\r\n### Steps to reproduce or test case\r\n\r\n1. Submit scheduled task to redisson\r\n2. Shutdown Redis Master\r\n3. After sentinels have elected new master, wait for redisson to execute the previously executed task.\r\n\r\n### Redis version\r\n4.0.11\r\n\r\n### Redisson version\r\n3.7.5\r\n\r\n### Redisson configuration\r\n```\r\nRedissonNodeConfig nodeConfig = new RedissonNodeConfig();\r\n        SentinelServersConfig sentinelServersConfig = nodeConfig.useSentinelServers();\r\n        sentinelServersConfig.setMasterName(\"master01\")\r\n                .addSentinelAddress(\"redis://192.168.2.132:26379\", \"redis://192.168.2.132:26380\", \"redis://192.168.2.132:26381\")\r\n                .addSentinelAddress(\"redis://192.168.2.130:26379\", \"redis://192.168.2.130:26380\");\r\n        nodeConfig.setRedissonNodeInitializer(new UbonaRedissonNodeinitializer());\r\n        Map<String, Integer> workers = new HashMap<>();\r\n        workers.put(\"dialer_manager_worker\", 5);\r\n        nodeConfig.setExecutorServiceWorkers(workers);\r\n```", "url": "https://github.com/redisson/redisson/issues/1622", "user": "mohitsinghcse", "labels": ["bug"], "created": "2018-09-03 13:45:49", "closed": "2018-09-08 10:26:15", "commits": {"9ca5977758583bb757a47cbe41fb87e16f131622": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "ead4eae3420dfbd1ba9dd90be8ba57a3ce585a62": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "9ca5977758583bb757a47cbe41fb87e16f131622", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4fef15078cf3a1fcc6bf728e6c2098f20ac7dfbd"], "nameRev": "9ca5977758583bb757a47cbe41fb87e16f131622 tags/redisson-2.13.1~20", "commitMessage": "Fixed - BlockingQueue.take method doesn't work properly after failover. #1622\n", "commitDateTime": "2018-09-07 17:43:28", "authoredDateTime": "2018-09-07 17:43:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 6, "deletions": 28, "lines": 34}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 79, "deletions": 0, "lines": 79}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.getAllConnections()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.connect().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(org.redisson.client.RedisClient,boolean,org.redisson.api.NodeType).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).3.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).3.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.closeConnections(org.redisson.connection.ClientConnectionsEntry)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testFailoverInSentinel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ead4eae3420dfbd1ba9dd90be8ba57a3ce585a62", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["52c33403a4434778910b66111ed72bedb67c54ff"], "nameRev": "ead4eae3420dfbd1ba9dd90be8ba57a3ce585a62 tags/redisson-2.13.1~18", "commitMessage": "Redisson node failover test added. #1622\n", "commitDateTime": "2018-09-08 13:28:50", "authoredDateTime": "2018-09-08 13:28:50", "commitGitStats": [{"filePath": "redisson/src/test/java/org/redisson/executor/RedissonExecutorServiceTest.java", "insertions": 94, "deletions": 1, "lines": 95}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testTaskFailover()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testFailoverInSentinel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9ca5977758583bb757a47cbe41fb87e16f131622", "ead4eae3420dfbd1ba9dd90be8ba57a3ce585a62"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 28, "lines": 41, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 18, "UPD": 8, "INS": 4, "MOV": 4, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.addSlave(org.redisson.client.RedisClient,boolean,org.redisson.api.NodeType).4", "org.redisson.connection.ClientConnectionsEntry.connect().1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).3.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).5", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).3", "org.redisson.connection.ClientConnectionsEntry", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).3.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.connection.ClientConnectionsEntry.getAllConnections()", "org.redisson.connection.MasterSlaveEntry.closeConnections(org.redisson.connection.ClientConnectionsEntry)"]}, {"title": "Task scheduled with delay more than 1 hour timeout prematurely.", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nTask scheduled with delay more than 1 hour should not timeout prematurely.\r\n### Actual behavior\r\nTask scheduled with delay more than 1 hour are timing out  prematurely.\r\n### Steps to reproduce or test case\r\nRScheduledExecutorService executorService = redissonClient\r\n.getExecutorService(\"cpbsummary_worker_cpb_24_02_Aug\");\r\n\r\nint delay = 2*3600;\r\nlog.info(\"Scheduling task at Time={}, with delay={}\", DateTime.now(TimeUtils.IST),delay);\r\nRScheduledFuture<String> schedule = executorService.schedule(new MyCallable(), delay,\r\n    TimeUnit.Seconds);\r\n### Redis version\r\n3.7.5\r\n### Redisson version\r\n3.7.5\r\n### Redisson configuration\r\n config\r\n        .useClusterServers()\r\n        .addNodeAddress(\r\n            (\"redis://zoom-cpp-realtime.ongcpp.clustercfg.apse1.cache.amazonaws\" + \".com:6379\"))\r\n        .setTimeout(7 * 24 * 60 * 60 * 1000)\r\n        .setRetryAttempts(3)\r\n        .setRetryInterval(3000)\r\n        .setConnectTimeout(60 * 1000)\r\n        .setSubscriptionConnectionMinimumIdleSize(2)\r\n        .setSubscriptionConnectionPoolSize(5)\r\n        .setMasterConnectionMinimumIdleSize(2)\r\n        .setMasterConnectionPoolSize(10);\r\n", "url": "https://github.com/redisson/redisson/issues/1619", "user": "pushparajxa", "labels": ["bug"], "created": "2018-09-01 08:21:22", "closed": "2018-09-03 09:44:36", "commits": {"53820628711985dcb2e37e71fd9cfbd1b4b8f395": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "53820628711985dcb2e37e71fd9cfbd1b4b8f395", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["618505befa6fcffd484d913d68c6c635fff64250"], "nameRev": "53820628711985dcb2e37e71fd9cfbd1b4b8f395 tags/redisson-3.8.0~10^2", "commitMessage": "Fixed - task scheduled with time more than 1 hour is not executed #1619\n", "commitDateTime": "2018-09-03 12:45:45", "authoredDateTime": "2018-09-03 12:45:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/RedissonExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/misc/LogHelper.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonScheduledExecutorServiceTest.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).7.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollResultResponse(long,org.redisson.remote.RequestId,org.redisson.remote.RemoteServiceRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonExecutorService", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ScheduledTasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.ScheduledTasksService.pollResultResponse(long,org.redisson.remote.RequestId,org.redisson.remote.RemoteServiceRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LogHelper.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.LogHelper.toString(java.lang.Object)", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 3}]}, {"spoonFilePath": "RedissonScheduledExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testDelay()", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 6, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["53820628711985dcb2e37e71fd9cfbd1b4b8f395"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 5, "lines": 26, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 15, "UPD": 2, "INS": 2, "MOV": 7, "DEL": 4, "spoonFilesChanged": 4, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/misc", "redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).7.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "org.redisson.executor.ScheduledTasksService.pollResultResponse(long,org.redisson.remote.RequestId,org.redisson.remote.RemoteServiceRequest)", "org.redisson.BaseRemoteService.pollResultResponse(long,org.redisson.remote.RequestId,org.redisson.remote.RemoteServiceRequest)", "org.redisson.misc.LogHelper.toString(java.lang.Object)", "org.redisson.RedissonExecutorService", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"]}, {"title": "I found two problems about Scheduled Jobs in redisson3.7.5", "body": "I am using `scheduleWithFixedDelay` to create a scheduled job, `initialDelay` is 0 and delay is 10m. When the job was running, I found the job's interval is 5min.\r\nI found the problem was created by `ff..requestId`, because the `ExecutorOptions.default()` is 5m.\r\n\r\nRead the script in `ScheduledTasksService.java`:\r\n```java\r\ncommandExecutor.evalWriteAsync(name, LongCodec.INSTANCE, RedisCommands.EVAL_BOOLEAN,\r\n// check if executor service not in shutdown state\r\n\"if redis.call('exists', KEYS[2]) == 0 then \"\r\n\t+ \"local retryInterval = redis.call('get', KEYS[6]); \"\r\n\t+ \"if retryInterval ~= false then \"\r\n\t\t+ \"local time = tonumber(ARGV[4]) + tonumber(retryInterval);\"\r\n\t\t+ \"redis.call('zadd', KEYS[3], time, 'ff' .. ARGV[2]);\"\r\n\t+ \"elseif tonumber(ARGV[5]) > 0 then \"\r\n\t\t+ \"redis.call('set', KEYS[6], ARGV[5]);\"\r\n\t\t+ \"local time = tonumber(ARGV[4]) + tonumber(ARGV[5]);\"\r\n\t\t+ \"redis.call('zadd', KEYS[3], time, 'ff' .. ARGV[2]);\"\r\n\t+ \"end; \"\r\n\r\n\t+ \"redis.call('zadd', KEYS[3], ARGV[1], ARGV[2]);\"\r\n\t+ \"redis.call('hset', KEYS[5], ARGV[2], ARGV[3]);\"\r\n\t+ \"redis.call('incr', KEYS[1]);\"\r\n\t+ \"local v = redis.call('zrange', KEYS[3], 0, 0); \"\r\n\t// if new task added to queue head then publish its startTime \r\n\t// to all scheduler workers \r\n\t+ \"if v[1] == ARGV[2] then \"\r\n\t   + \"redis.call('publish', KEYS[4], ARGV[1]); \"\r\n\t+ \"end \"\r\n\t+ \"return 1;\"\r\n+ \"end;\"\r\n+ \"return 0;\", \r\nArrays.<Object>asList(tasksCounterName, statusName, schedulerQueueName, schedulerChannelName, tasksName, tasksRetryIntervalName),\r\nstartTime, request.getId(), encode(request), System.currentTimeMillis(), tasksRetryInterval);\r\n```\r\nDebug the code, I know startTime is `System.currentTimeMillis() + delay`, but `'ff'..ARGV[2]` is `System.currentTimeMillis() + retryInterval`. In my program, delay is 10m, retryInterval is 5m, so `'ff'..requestId` is before requestId in zset named `{jobName:org.redisson.executor.RemoteExecutorService}:scheduler`. So, the job's interval is changed to 5 minutes.\r\n\r\n\r\nAnother problem is that `{jobName:org.redisson.executor.RemoteExecutorService}:retry-interval` was deleted when only one Job was running and first `run()` was finish.  \r\nRead the script in `TasksRunnerService.java`:\r\n```java\r\nprivate void finish(String requestId) {\r\n\tcommandExecutor.evalWriteAsync(name, StringCodec.INSTANCE, RedisCommands.EVAL_VOID,\r\n\t\t   \"local scheduled = redis.call('zscore', KEYS[5], ARGV[3]);\"\r\n\t\t + \"if scheduled == false then \"\r\n\t\t\t + \"redis.call('hdel', KEYS[4], ARGV[3]); \"\r\n\t\t + \"end;\" +\r\n\t\t   \"redis.call('zrem', KEYS[5], 'ff' .. ARGV[3]);\" +\r\n\t\t   \"if redis.call('decr', KEYS[1]) == 0 then \"\r\n\t\t\t+ \"redis.call('del', KEYS[1], KEYS[6]);\"\r\n\t\t\t+ \"if redis.call('get', KEYS[2]) == ARGV[1] then \"\r\n\t\t\t\t+ \"redis.call('set', KEYS[2], ARGV[2]);\"\r\n\t\t\t\t+ \"redis.call('publish', KEYS[3], ARGV[2]);\"\r\n\t\t\t+ \"end;\"\r\n\t\t + \"end;\",  \r\n\t\t\tArrays.<Object>asList(tasksCounterName, statusName, terminationTopicName, tasksName, schedulerQueueName, tasksRetryIntervalName),\r\n\t\t\tRedissonExecutorService.SHUTDOWN_STATE, RedissonExecutorService.TERMINATED_STATE, requestId);\r\n}\r\n```\r\nWhen `tasksCounterName`'s value is 0, `tasksRetryIntervalName` is deleted. But `tasksRetryIntervalName` can't be reset.", "url": "https://github.com/redisson/redisson/issues/1617", "user": "YYoungZou", "labels": ["bug"], "created": "2018-08-31 12:16:12", "closed": "2018-09-01 07:55:55", "commits": {"62aa3705b9b954a6feeb4a9e7c89db07f0054ce1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "62aa3705b9b954a6feeb4a9e7c89db07f0054ce1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9fce0211312b34256f38eec081f7554377e36f56"], "nameRev": "62aa3705b9b954a6feeb4a9e7c89db07f0054ce1 tags/redisson-3.8.0~11^2", "commitMessage": "RScheduledExecutorService doesn't handle delay correctly.\ntasksRetryIntervalName is deleted if tasks absent.\n #1605 #1617\n", "commitDateTime": "2018-09-01 10:47:18", "authoredDateTime": "2018-09-01 10:47:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/QueueTransferTask.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/RedissonExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksService.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonExecutorServiceTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonScheduledExecutorServiceTest.java", "insertions": 31, "deletions": 4, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueueTransferTask.java", "spoonMethods": [{"spoonMethodName": "org.redisson.QueueTransferTask.scheduleTask(java.lang.Long)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonExecutorService.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScheduledTasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.ScheduledTasksService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "TOT": 13, "UPD": 11, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.addAsync(java.lang.String,org.redisson.remote.RemoteServiceRequest)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.finish(java.lang.String)", "TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.decode(java.lang.String,byte[],io.netty.buffer.ByteBuf)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "TOT": 13, "UPD": 11, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testTaskFailover()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testCancelAndInterrupt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testRedissonInjected()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScheduledExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testTaskFailover()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCronExpressionMultipleTasks()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testShutdownWithCancelAndOfflineExecutor()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelAndInterrupt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelWithFixedDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelAndInterruptWithFixedDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelAtFixedRate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testMultipleTasksWithTimeShift()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testMultipleTasks()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testRunnableTask()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RedisConnectionException thrown if client-name is set and retry-attempts is zero", "body": "### Expected behavior\r\nRedisson should start properly when _client-name_ property is set and _retry-attempts_ property is zero in a single-server configuration.\r\n\r\nRedisson starts properly if _retry-attempts_ is set to 1.\r\n\r\n### Actual behavior\r\nThe following exception is thrown and the server does not start:\r\n```\r\norg.redisson.client.RedisConnectionException: Unable to connect to Redis server: 127.0.0.1/127.0.0.1:6379\r\n\tat org.redisson.connection.pool.ConnectionPool$2$1.operationComplete(ConnectionPool.java:137)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:485)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:424)\r\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:121)\r\n\tat org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:83)\r\n\tat org.redisson.connection.pool.ConnectionPool.promiseFailure(ConnectionPool.java:299)\r\n\tat org.redisson.connection.pool.ConnectionPool.access$400(ConnectionPool.java:53)\r\n\tat org.redisson.connection.pool.ConnectionPool$4.operationComplete(ConnectionPool.java:264)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:504)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:483)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:424)\r\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:121)\r\n\tat org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:83)\r\n\tat org.redisson.client.RedisClient$2$1$1$1.run(RedisClient.java:240)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:464)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.redisson.client.RedisTimeoutException: Command execution timeout for command: (CLIENT SETNAME), command params: [test-redisson-cli], Redis client: [addr=redis://127.0.0.1:6379]\r\n\tat org.redisson.client.RedisConnection$2.run(RedisConnection.java:213)\r\n\tat io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:127)\r\n```\r\n### Steps to reproduce or test case\r\n1.- set client-name=\"test-redisson-cli\" and retry-attempts=\"0\" in the configuration file.\r\n2.- Start Redisson\r\n\r\nPlease check the configuration used below.\r\n\r\n### Redis version\r\n3.2.12\r\n\r\n### Redisson version\r\n2.12.5\r\n\r\n### Redisson configuration\r\nSpring XML format:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txmlns:redisson=\"http://redisson.org/schema/redisson\"\r\n\txsi:schemaLocation=\"\r\n\t\thttp://www.springframework.org/schema/beans\r\n\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\r\n\t\thttp://redisson.org/schema/redisson\r\n\t\t\thttp://redisson.org/schema/redisson/redisson.xsd\r\n\t\" default-lazy-init=\"false\">\r\n\r\n  <bean id=\"redissonNioEventLoopGroup\" class=\"io.netty.channel.nio.NioEventLoopGroup\" />\r\n\r\n  <redisson:client\r\n    id=\"redissonClient\"\r\n    threads=\"8\"\r\n    netty-threads=\"8\" \r\n    event-loop-group-ref=\"redissonNioEventLoopGroup\">\r\n    <redisson:single-server \r\n      client-name=\"test-redisson-cli\"\r\n      address=\"redis://127.0.0.1:6379\"\r\n      connect-timeout=\"10000\"\r\n      timeout=\"10000\"\r\n      retry-attempts=\"0\"\r\n      retry-interval=\"1500\"\r\n      subscription-connection-minimum-idle-size=\"1\"\r\n      subscription-connection-pool-size=\"50\"\r\n      connection-minimum-idle-size=\"32\"\r\n      connection-pool-size=\"64\"\r\n      idle-connection-timeout=\"10000\"\r\n      database=\"0\" />\r\n  </redisson:client>\r\n</beans>\r\n```", "url": "https://github.com/redisson/redisson/issues/1611", "user": "jeiroa", "labels": ["bug"], "created": "2018-08-28 17:26:26", "closed": "2019-08-14 09:27:00", "commits": {"7bc7dfe2f2da36295bda1fba1e133c3c7f818ba1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 350.0002777777778, "commitsDetails": [{"commitHash": "7bc7dfe2f2da36295bda1fba1e133c3c7f818ba1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a52796fb31e33e9d879208f136ee92dc1856d134"], "nameRev": "7bc7dfe2f2da36295bda1fba1e133c3c7f818ba1 tags/redisson-3.11.3~26", "commitMessage": "Fixed - RedisTimeoutException is thrown if retryAttempts set to 0 #1611\n", "commitDateTime": "2019-08-14 12:28:00", "authoredDateTime": "2019-08-14 12:28:00", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean).6.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).3.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.config.MasterSlaveServersConfig)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7bc7dfe2f2da36295bda1fba1e133c3c7f818ba1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 7, "lines": 19, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 17, "UPD": 2, "INS": 5, "MOV": 7, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).3.run(io.netty.util.Timeout)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean).6.run(io.netty.util.Timeout)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.misc.RedisURI,org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean)"]}, {"title": "Redisson reconnection issue in Kubernetes", "body": "### Expected behavior\r\nWhen Redis in single server mode stops, its pod takes some time to restart. Redisson client should eventually reconnect\r\n\r\n### Actual behavior\r\nRedisson connectionWatchdog detects that redis is down and tries to reconnect but quickly stops trying, before redis is newly available.\r\nIP address does not change as redis is exposed via a kubernetes clusterIp service.\r\nRedisson never reconnects to redis.\r\n\r\n### Steps to reproduce or test case\r\nDeploy redis helm in single server mode. Connect a client from a pod inside the cluster. Stop redis pod manually.\r\n\r\n### Redis version\r\n4.0.10\r\n\r\n### Redisson version\r\n3.7.1\r\n\r\n### Redisson configuration\r\nI tried several with the same behavior more or less\r\n        config.useSingleServer()\r\n                .setAddress(\"redis://\" + p_ipRedis + \":\" + p_portRedis)\r\n                .setPassword(p_password)\r\n                .setConnectTimeout(30000)\r\n                .setPingConnectionInterval(30000)\r\n                .setTimeout(30000)\r\n                .setReconnectionTimeout(30000)\r\n                .setRetryInterval(1000);\r\n\r\nThanks you \r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1610", "user": "unludo", "labels": ["bug"], "created": "2018-08-28 14:42:01", "closed": "2018-10-05 11:06:32", "commits": {"398e3ba1b3f5a596cebab67e6ad5c07a19e1c16d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 37.000277777777775, "commitsDetails": [{"commitHash": "398e3ba1b3f5a596cebab67e6ad5c07a19e1c16d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a50eb9e0d7f59c3d2b2046b1520e545020c64d37"], "nameRev": "398e3ba1b3f5a596cebab67e6ad5c07a19e1c16d tags/redisson-2.13.1~5", "commitMessage": "Fixed - PingConnectionInterval settings affects re-connection process with password enabled setting #1610\n", "commitDateTime": "2018-09-14 18:06:12", "authoredDateTime": "2018-09-14 18:06:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/PingConnectionHandler.java", "insertions": 11, "deletions": 1, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PingConnectionHandler.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).2.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["398e3ba1b3f5a596cebab67e6ad5c07a19e1c16d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 1, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.PingConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext)", "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1", "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1.run(io.netty.util.Timeout)", "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).2.run(io.netty.util.Timeout)"]}, {"title": "Using RScheduledExecutorServiceAsync to scheduleAsync a task is getting executed  before timeout/delay", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\n\r\nRScheduledExecutorServiceAsync executorService = redissonClient\r\n        .getExecutorService(\"cpbsummary_worker_cpb_24_02_Aug\");\r\n\r\n    int delay = 1200;\r\n    log.info(\"Scheduling task at Time={}, with delay={}\", DateTime.now(TimeUtils.IST),delay);\r\n    RScheduledFuture<String> schedule = executorService.scheduleAsync(new MyCallable(), delay,\r\n        TimeUnit.Seconds\r\nschedule.handleAsync(\r\n        (x, y) -> {\r\n          System.out.println(\"From callback thread .. received this result \"+x+\" at time=\"+ DateTime.now(TimeUtils.IST));\r\n          return x;\r\n        });\r\n\r\nI expect the output after 1200 seconds.. but I see it after 5 mins .. 300 seconds\r\n\r\n2018-08-24 16:48:06] [main] INFO  c.r.zoom.cpbsummary.RedissonTest.main - Scheduling task at Time=2018-08-24T16:48:06.885+05:30, with delay=1200\r\nFrom callback thread .. received this result hello at time=2018-08-24T16:53:06.884+05:30\r\n\r\n### Actual behavior\r\nThe scheduled CallableTask should be executed after the delay has expired and not before that\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n4.0.10\r\n### Redisson version\r\n3.7.5\r\n### Redisson configuration\r\n config\r\n        .useClusterServers()\r\n        .addNodeAddress(\r\n            (\"redis://dsfkjsdkjfs\" + \".com:6379\"))\r\n        .setTimeout(7*24*60* 60 * 1000)\r\n        .setRetryAttempts(3)\r\n        .setRetryInterval(3000)\r\n        .setConnectTimeout(60 * 1000)\r\n        .setSubscriptionConnectionMinimumIdleSize(2)\r\n        .setSubscriptionConnectionPoolSize(5)\r\n        .setMasterConnectionMinimumIdleSize(2)\r\n        .setMasterConnectionPoolSize(10);*/\r\n\r\n    config\r\n        .useSingleServer()\r\n        .setAddress(\"redis://127.0.0.1:6379\")\r\n        .setTimeout(24*60 * 60 * 1000)\r\n        .setRetryAttempts(3)\r\n        .setRetryInterval(3000)\r\n        .setConnectTimeout(60 * 1000)\r\n        .setSubscriptionConnectionMinimumIdleSize(2)\r\n        .setSubscriptionConnectionPoolSize(5);\r\n", "url": "https://github.com/redisson/redisson/issues/1605", "user": "pushparajxa", "labels": ["bug"], "created": "2018-08-24 11:41:19", "closed": "2018-09-01 07:56:08", "commits": {"62aa3705b9b954a6feeb4a9e7c89db07f0054ce1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "62aa3705b9b954a6feeb4a9e7c89db07f0054ce1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9fce0211312b34256f38eec081f7554377e36f56"], "nameRev": "62aa3705b9b954a6feeb4a9e7c89db07f0054ce1 tags/redisson-3.8.0~11^2", "commitMessage": "RScheduledExecutorService doesn't handle delay correctly.\ntasksRetryIntervalName is deleted if tasks absent.\n #1605 #1617\n", "commitDateTime": "2018-09-01 10:47:18", "authoredDateTime": "2018-09-01 10:47:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/QueueTransferTask.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/RedissonExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksService.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonExecutorServiceTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonScheduledExecutorServiceTest.java", "insertions": 31, "deletions": 4, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueueTransferTask.java", "spoonMethods": [{"spoonMethodName": "org.redisson.QueueTransferTask.scheduleTask(java.lang.Long)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonExecutorService.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScheduledTasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.ScheduledTasksService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "TOT": 13, "UPD": 11, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.addAsync(java.lang.String,org.redisson.remote.RemoteServiceRequest)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.finish(java.lang.String)", "TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.decode(java.lang.String,byte[],io.netty.buffer.ByteBuf)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "TOT": 13, "UPD": 11, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testTaskFailover()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testCancelAndInterrupt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testRedissonInjected()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScheduledExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testTaskFailover()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCronExpressionMultipleTasks()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testShutdownWithCancelAndOfflineExecutor()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelAndInterrupt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelWithFixedDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelAndInterruptWithFixedDelay()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancelAtFixedRate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testMultipleTasksWithTimeShift()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testMultipleTasks()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testRunnableTask()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCancel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Lock watchdog does not monitor read locks", "body": "Hi, when we acquire multiple (concurrent) read locks and process a task for longer than the [Config.lockWatchdogTimeout](https://github.com/redisson/redisson/wiki/2.-Configuration#lockwatchdogtimeout), we get errors when unlocking.\r\n\r\nCode to reproduce (wait the watchdog timeout):\r\n```\r\nint threadCount = 100;\r\n\r\nExecutorService executorService = Executors.newFixedThreadPool(threadCount/5);\r\n\r\nfor (int i=0; i<threadCount; i++) {\r\n\texecutorService.submit(()-> {\r\n\t\ttry {\r\n\t\t\tRReadWriteLock rw1 = client.getReadWriteLock(\"mytestlock\");\r\n\t\t\tRLock readLock = rw1.readLock();\r\n\t\t\treadLock.lock();\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(config.getLockWatchdogTimeout() + 5000);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t\treadLock.unlock();\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t});\r\n}\r\n\t\t\r\nSystem.out.println(\"All scheduled\");\r\nexecutorService.shutdown();\r\nexecutorService.awaitTermination(1, TimeUnit.DAYS);\r\nSystem.out.println(\"Terminated\");\r\n```\r\n\r\nLooking into Redis for the ttl of different keys, I noticed:\r\n- The key 'mytestlock' gets an extended ttl\r\n- The key '{mytestlock}:UUID:THREADID:rwlock_timeout:1 is not set with new ttl and the key disappears before the unlock is called.\r\n\r\nWe tested with Redisson 3.5.4 and 3.7.5.", "url": "https://github.com/redisson/redisson/issues/1604", "user": "choeflake", "labels": ["bug"], "created": "2018-08-24 07:55:16", "closed": "2018-09-10 08:31:25", "commits": {"387dd9307182f17ce785accf325ed8eb27909438": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "387dd9307182f17ce785accf325ed8eb27909438", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f5e3618b330117200f483865eab485d8cae7a695"], "nameRev": "387dd9307182f17ce785accf325ed8eb27909438 tags/redisson-2.13.1~15", "commitMessage": "Fixed - Lock watchdog does not monitor read locks #1604\n", "commitDateTime": "2018-09-10 11:33:15", "authoredDateTime": "2018-09-10 11:33:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/RedissonReadLock.java", "insertions": 35, "deletions": 1, "lines": 36}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReadWriteLockTest.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.scheduleExpirationRenewal(long).3.run(io.netty.util.Timeout)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.renewExpirationAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.cancelExpirationRenewal(java.lang.Long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonReadLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadLock.getKeyPrefix(long,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadLock.renewExpirationAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadLock.unlockInnerAsync(long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonReadWriteLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockLeaseTimeoutDiffThreadsWRR()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockLeaseTimeoutDiffThreadsRRW()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteReadReentrancy()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockExpirationRenewal()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["387dd9307182f17ce785accf325ed8eb27909438"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 50, "deletions": 9, "lines": 59, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 1, "INS": 5, "MOV": 7, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.cancelExpirationRenewal(java.lang.Long)", "org.redisson.RedissonReadLock.unlockInnerAsync(long)", "org.redisson.RedissonLock.scheduleExpirationRenewal(long).3.run(io.netty.util.Timeout)", "org.redisson.RedissonReadLock.getKeyPrefix(long,java.lang.String)", "org.redisson.RedissonLock.renewExpirationAsync(long)", "org.redisson.RedissonReadLock.renewExpirationAsync(long)"]}, {"title": "unlock fail and expirationRenewal still execute", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nunlock success\r\n\r\n### Actual behavior\r\nunlock  fail\r\n\r\n### Steps to reproduce or test case\r\nunlock ()\r\nclient -> redis service network problem\r\nunlock throw Exception\r\nnetwork recovery\r\nexpirationRenewal still execute\r\n\r\n### Redis version\r\n\r\n\r\n### Redisson version\r\n2.11.5\r\n\r\n### Redisson configuration\r\nredisson.connectionPoolSize=5\r\nredisson.connectionMinimumIdleSize=2\r\nredisson.address=\r\nredisson.database=3\r\nredisson.password=\r\nredisson.connectTimeout=3000\r\nredisson.timeout=3000\r\n", "url": "https://github.com/redisson/redisson/issues/1602", "user": "xmh51", "labels": ["bug"], "created": "2018-08-24 07:03:44", "closed": "2018-09-08 14:26:21", "commits": {"f5e3618b330117200f483865eab485d8cae7a695": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "f5e3618b330117200f483865eab485d8cae7a695", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["583fb3cf3f18fac791f6447c139ceb2e84fb31bd"], "nameRev": "f5e3618b330117200f483865eab485d8cae7a695 tags/redisson-2.13.1~16", "commitMessage": "Fixed - Lock expiration renewal should be canceled if unlock method failed to execute. #1602\n", "commitDateTime": "2018-09-08 17:29:37", "authoredDateTime": "2018-09-08 17:29:37", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonFairLock.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 44, "deletions": 18, "lines": 62}, {"filePath": "redisson/src/main/java/org/redisson/RedissonReadLock.java", "insertions": 2, "deletions": 15, "lines": 17}, {"filePath": "redisson/src/main/java/org/redisson/RedissonWriteLock.java", "insertions": 2, "deletions": 15, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonFairLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonFairLock.forceUnlockAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.cancelExpirationRenewal()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.unlock()", "TOT": 12, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonLock.getEntryName()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.scheduleExpirationRenewal(long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.ExpirationEntry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.cancelExpirationRenewal(java.lang.Long)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.forceUnlockAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.unlockAsync(long).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonReadLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadLock.forceUnlockAsync().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadLock.forceUnlockAsync()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "RedissonWriteLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonWriteLock.forceUnlockAsync().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonWriteLock.forceUnlockAsync()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f5e3618b330117200f483865eab485d8cae7a695"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 49, "deletions": 49, "lines": 98, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 46, "UPD": 5, "INS": 17, "MOV": 12, "DEL": 12, "spoonFilesChanged": 4, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.scheduleExpirationRenewal(long)", "org.redisson.RedissonFairLock.forceUnlockAsync()", "org.redisson.RedissonWriteLock.forceUnlockAsync().1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.forceUnlockAsync()", "org.redisson.RedissonLock.ExpirationEntry", "org.redisson.RedissonLock.cancelExpirationRenewal(java.lang.Long)", "org.redisson.RedissonReadLock.forceUnlockAsync()", "org.redisson.RedissonLock", "org.redisson.RedissonLock.unlock()", "org.redisson.RedissonLock.unlockAsync(long).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonReadLock.forceUnlockAsync().1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonWriteLock.forceUnlockAsync()", "org.redisson.RedissonLock.getEntryName()", "org.redisson.RedissonLock.cancelExpirationRenewal()"]}, {"title": "Accumulation of MapCacheEvictionTask in Memory", "body": "### Expected behavior\r\nWhen the RMapCache entries expire, the MapCacheEvictionTask should be cleaned up.\r\n\r\n### Actual behavior\r\nMapCacheEvictionTask is leaking memory as more and more RMapCache gets created.\r\n\r\n### Steps to reproduce or test case\r\nWe create millions of RMapCache a day. Over the course of a few days, the MapCachEvictionTask object stays in memory and is never cleaned up.\r\n\r\n### Redis version\r\n4.0.11\r\n\r\n### Redisson version\r\n3.5.3\r\n\r\n### Redisson configuration\r\n```\r\n  redisson:\r\n    singleServerConfig:\r\n      connectTimeout: 500\r\n      address: \"redis://127.0.0.1:13788\"\r\n      connectionPoolSize: 128\r\n      timeout: 900\r\n      retryInterval: 500\r\n      reconnectionTimeout: 10\r\n```", "url": "https://github.com/redisson/redisson/issues/1601", "user": "andytung", "labels": ["bug"], "created": "2018-08-24 00:03:33", "closed": "2018-08-29 11:46:56", "commits": {"cb004ab8c6275366716311aadfe281d53d9fb9aa": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "cb004ab8c6275366716311aadfe281d53d9fb9aa", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2199a9c0dd45238c819832f98efbf71fe3bb6555"], "nameRev": "cb004ab8c6275366716311aadfe281d53d9fb9aa tags/redisson-3.8.0~11^2~6", "commitMessage": "Fixed - RMapCache and RSetCache should implement RDestroyable #1601\n", "commitDateTime": "2018-08-29 14:48:50", "authoredDateTime": "2018-08-29 14:48:50", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetCache.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/api/RMapCache.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/api/RSetCache.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/eviction/EvictionScheduler.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/BaseMapTest.java", "insertions": 87, "deletions": 18, "lines": 105}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 68, "deletions": 9, "lines": 77}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetCacheTest.java", "insertions": 43, "deletions": 1, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.destroy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCache", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCache.destroy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RMapCache.java", "spoonMethods": []}, {"spoonFilePath": "RSetCache.java", "spoonMethods": []}, {"spoonFilePath": "EvictionScheduler.java", "spoonMethods": [{"spoonMethodName": "org.redisson.eviction.EvictionScheduler.remove(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseMapTest.testInteger()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testLong()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testNullKey()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testNullValue()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testSize()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testPutAll()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testPutAllBig()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testPutGet()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testPutIfAbsent()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testReplaceOldValueFail()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testReplaceOldValueSuccess()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testReplaceValue()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testReplace()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testContainsValue()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testContainsKey()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testRemoveValueFail()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testRemoveValue()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testRemoveObject()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.destroy(org.redisson.api.RMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testGetAllWithStringKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testStringCodec()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testIterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testOrdering()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testEmptyRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testFastPutIfAbsent()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testDeserializationErrorReturnsErrorImmediately()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testFastRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testValueIterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testFastPut()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testFastReplace()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testEquals()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testFastRemoveEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testKeySetByPattern()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testValuesByPattern()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testEntrySetByPattern()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testReadAllKeySet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testEntrySetIteratorRemoveHighVolume()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testEntrySetIteratorRandomRemoveHighVolume()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testKeySetIteratorRemoveHighVolume()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testReadAllKeySetHighAmount()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testReadAllValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testGetAllBig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testGetAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testValueSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testGetAllOrder()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testGetAllOrderPartially()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testAddAndGet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testMapLoaderGetMulipleNulls()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterAddAndGet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterFastRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterFastPut()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterReplaceKeyOldNewValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterRemoveKeyValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterFastPutIfAbsent()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterPutIfAbsent()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterPutAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testWriterPut()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testLoadAllReplaceValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testLoadAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMapTest.testMapLoaderGet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testExpireOverwrite()", "TOT": 8, "UPD": 5, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRemoveValueFail()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testReplaceOldValueFail()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testReplaceOldValueSuccess()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testDestroy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRemainTimeToLive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testWriterPutIfAbsentTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testWriterPutTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testWriterFastPutIfAbsentTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testWriterFastPutTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testMaxSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testCacheValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testGetAllTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testGetAllWithStringKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testExpiredIterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testExpireAt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testClearExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testEntrySet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testKeySet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testKeySetByPatternTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testValuesByPatternTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testEntrySetByPatternTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testContainsValueTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testContainsKeyTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRemoveValueTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testReplaceValueTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testScheduler()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testPutGetTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testPutIfAbsentTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testFastPutIfAbsentTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testCreatedListener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.checkCreatedListener(org.redisson.api.RMapCache,java.lang.Integer,java.lang.Integer,java.lang.Runnable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testUpdatedListener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testExpiredListener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRemovedListener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testIdleExpiration(java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testTTLExpiration(java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRMapCacheValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testReadAllEntrySet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testReadAllValuesTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testAddAndGetTTL()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testFastPutIfAbsentWithTTL()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCacheTest.testDestroy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testRemoveAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testDelete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testEmptyReadAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddBigBean()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddBean()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddOverrideExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddExpireTwise()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddExpireThenAdd()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testExpireOverwrite()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testIteratorRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testIteratorSequence()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testRetainAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testIteratorRemoveHighVolume()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testContainsAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testToArray()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testContains()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testDuplicates()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testReadAllExpired()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testReadAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testRetainAllEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testRetainAllNoModify()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testExpiredIterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testExpireAt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testClearExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testScheduler()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cb004ab8c6275366716311aadfe281d53d9fb9aa"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 3, "lines": 30, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 9, "UPD": 0, "INS": 9, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/api", "redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/eviction"], "changesInPackagesSPOON": ["org.redisson.eviction.EvictionScheduler.remove(java.lang.String)", "org.redisson.RedissonSetCache", "org.redisson.RedissonMapCache.destroy()", "org.redisson.RedissonSetCache.destroy()", "org.redisson.RedissonMapCache"]}, {"title": "\u83b7\u53d6\u6240\u6709key\u65f6\u5019\u7a7a\u6307\u9488\u5f02\u5e38", "body": " \u6211\u5728\u6d4b\u8bd5\u4f7f\u7528redisson.getKeys().getKeys()\u65b9\u6cd5\u65f6\u5019\u53d1\u73b0org.redisson.misc.CompositeIterable.java\u7b2c63\u884c\u5982\u4e0b\u4ee3\u7801\u62a5java.lang.NullPointerException\uff0c\r\n\r\n   public boolean hasNext() {\r\n        if (currentIterator == null || !currentIterator.hasNext()) {\r\n            while (listIterator.hasNext()) {    ---63\u884c\r\n                Iterator<T> iterator = listIterator.next();\r\n                if (iterator.hasNext()) {\r\n                    currentIterator = iterator;\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return currentIterator.hasNext();\r\n    }", "url": "https://github.com/redisson/redisson/issues/1598", "user": "wangxlwithall", "labels": ["bug"], "created": "2018-08-22 11:10:39", "closed": "2018-08-24 08:48:03", "commits": {"16fdd0e52160458e3d9b22ad9b4f7189cdee3fa5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "16fdd0e52160458e3d9b22ad9b4f7189cdee3fa5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["91c29e1ee865df99b34563f5551da18e23d846aa", "2fa2f17a33812aa810d9a187f8247549da5a7d9f"], "nameRev": "16fdd0e52160458e3d9b22ad9b4f7189cdee3fa5 tags/redisson-3.8.0~13^2^2~2", "commitMessage": "Merge pull request #1603 from Pepe-Lu/master\n\nAn enhancement from #1598 CompositeIterator decouple from CompositeIterable", "commitDateTime": "2018-08-24 11:47:23", "authoredDateTime": "2018-08-24 11:47:23", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/CompositeIterable.java", "insertions": 3, "deletions": 34, "lines": 37}, {"filePath": "redisson/src/main/java/org/redisson/misc/CompositeIterator.java", "insertions": 66, "deletions": 0, "lines": 66}, {"filePath": "redisson/src/test/java/org/redisson/misc/CompositeIteratorTest.java", "insertions": 132, "deletions": 0, "lines": 132}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CompositeIterable.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.CompositeIterable", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.misc.CompositeIterable.iterator()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.redisson.misc.CompositeIterable.hasNext()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.misc.CompositeIterable.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.misc.CompositeIterable.remove()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CompositeIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.CompositeIterator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CompositeIteratorTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.CompositeIteratorTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RExecutorService task execution performance regression", "body": "RExecutorService task execution process got performance regression about x5 times, after https://github.com/redisson/redisson/issues/1468 had been resolved", "url": "https://github.com/redisson/redisson/issues/1596", "user": "mrniko", "labels": ["bug"], "created": "2018-08-17 10:41:10", "closed": "2018-08-17 10:44:15", "commits": {"f78b0b68f57e24e831f776b5a57625eb91723eeb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "8d8ff88a106b407b36e092dd86db770b80bcbac2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f78b0b68f57e24e831f776b5a57625eb91723eeb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["84c00617f95e2e39f4e5f91fbf7171a3dbffa95f"], "nameRev": "f78b0b68f57e24e831f776b5a57625eb91723eeb tags/redisson-3.8.0~14^2~5", "commitMessage": "Fixed - RExecutorService task execution performance regression. #1596\n", "commitDateTime": "2018-08-17 13:46:50", "authoredDateTime": "2018-08-17 13:46:50", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 18, "deletions": 12, "lines": 30}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonExecutorServiceTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.decode(org.redisson.executor.RedissonClassLoader,io.netty.buffer.ByteBuf)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeCallable(java.lang.String,byte[],byte[],java.lang.String)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeRunnable(java.lang.String,byte[],byte[],java.lang.String)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.decode(java.lang.String,byte[],io.netty.buffer.ByteBuf)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testPerformance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8d8ff88a106b407b36e092dd86db770b80bcbac2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f78b0b68f57e24e831f776b5a57625eb91723eeb"], "nameRev": "8d8ff88a106b407b36e092dd86db770b80bcbac2 tags/redisson-3.8.0~14^2~4", "commitMessage": "Fixed - RExecutorService task execution performance regression. #1596\n", "commitDateTime": "2018-08-18 10:16:40", "authoredDateTime": "2018-08-18 10:16:40", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonExecutorServiceTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.decode(java.lang.String,byte[],io.netty.buffer.ByteBuf)", "TOT": 5, "UPD": 2, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonExecutorServiceTest.testPerformance()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f78b0b68f57e24e831f776b5a57625eb91723eeb"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 12, "lines": 30, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 16, "UPD": 6, "INS": 5, "MOV": 3, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.executor.TasksRunnerService.executeRunnable(java.lang.String,byte[],byte[],java.lang.String)", "org.redisson.executor.TasksRunnerService.decode(java.lang.String,byte[],io.netty.buffer.ByteBuf)", "org.redisson.executor.TasksRunnerService.decode(org.redisson.executor.RedissonClassLoader,io.netty.buffer.ByteBuf)", "org.redisson.executor.TasksRunnerService", "org.redisson.executor.TasksRunnerService.executeCallable(java.lang.String,byte[],byte[],java.lang.String)"]}, {"title": "Non Sticky Session with tomcat 8: Session loaded in second node triggers new session event(tellnew)", "body": "We are using Tomcat 8 session replication and some attributes are set in session listeners whenever a new session event is created. Configuration details are given below. \r\n\r\nWhen a request for a session (created in node 1 goes to node 2) is loaded from redis cache, we are getting the following error as one of the listeners is setting an attribute and the Session's isValid attribute is false at the time.\r\n\r\nExpected behavior is that for sessions loaded from redis cache, \"session created\" event (tellNew) should not be triggered. \r\n\r\nA probable solution would be to disable notification when setting the session id (ie) setId(id, false) in  RedissonSessionManager.findSession function. \r\n\r\n\r\n16-Aug-2018 20:25:46.314 SEVERE [ajp-nio-8010-exec-3] org.apache.catalina.session.StandardSession.tellNew Session event listener threw exception\r\n java.lang.IllegalStateException: setAttribute: Session [CED5C6D89DC87D28A6842EAC52631D26] has already been invalidated\r\n        at org.apache.catalina.session.StandardSession.setAttribute(StandardSession.java:1450)\r\n        at org.redisson.tomcat.RedissonSession.setAttribute(RedissonSession.java:184)\r\n        at org.apache.catalina.session.StandardSession.setAttribute(StandardSession.java:1415)\r\n        at org.apache.catalina.session.StandardSessionFacade.setAttribute(StandardSessionFacade.java:137)\r\n        at **org.eclipse.birt.report.listener.ViewerHttpSessionListener.sessionCreated(ViewerHttpSessionListener.java:41)**\r\n        at org.apache.catalina.session.StandardSession.tellNew(StandardSession.java:396)\r\n        at org.apache.catalina.session.StandardSession.setId(StandardSession.java:368)\r\n        at org.redisson.tomcat.RedissonSession.setId(RedissonSession.java:72)\r\n        at org.apache.catalina.session.StandardSession.setId(StandardSession.java:349)\r\n        at org.redisson.tomcat.RedissonSessionManager.findSession(RedissonSessionManager.java:159)\r\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2977)\r\n        at org.apache.catalina.connector.Request.getSessionInternal(Request.java:2695)\r\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:466)\r\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n        at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650)\r\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n        at org.apache.coyote.ajp.AjpProcessor.service(AjpProcessor.java:486)\r\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\r\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)\r\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n### Steps to reproduce or test case\r\nConfigure a cluster of tomcat 8 servers using redisson/redis managers.  Configure the load balancer for non sticky sessions. \r\nHave a HttpSessionListener configured to set some attribute on sessionCreated event. \r\npublic class ViewerHttpSessionListener implements HttpSessionListener\r\n{\r\n       public void sessionCreated( HttpSessionEvent event )\r\n\t{\r\n\t\t// Create Tasks map\r\n\t\tHttpSession session = event.getSession( );\r\n\t\tsession.setAttribute( \"TASKS\", new HashMap( ) );\r\n\t}\r\n        public void sessionDestroyed( HttpSessionEvent event )\r\n\t{\r\n\t}\r\n}\r\nAdd this listener to the application's web.xml \r\n<listener>\r\n\t\t<listener-class>org.eclipse.birt.report.listener.ViewerHttpSessionListener</listener-class>\r\n</listener>\r\n\r\nStart the loadbalancer and all tomcat nodes. Login to the application and browse through the application.The above error will be logged in the log files for the node that is trying to load the session from the redis cache. \r\n\r\n### Redis version\r\n4.0.11\r\n### Redisson version\r\n3.7.5\r\n### Redisson configuration\r\n\r\n#### redisson.yaml\r\nsingleServerConfig:\r\n  address: \"redis://192.168.8.224:6379\"\r\ncodec: !<org.redisson.codec.SerializationCodec> {}\r\n\r\n#### context.xml\r\n<Manager className=\"org.redisson.tomcat.RedissonSessionManager\"\r\n          configPath=\"${catalina.base}/conf/redisson.yaml\" readMode=\"REDIS\" updateMode=\"DEFAULT\"/>\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1595", "user": "jmuthu", "labels": ["bug"], "created": "2018-08-17 04:11:58", "closed": "2019-03-29 05:37:33", "commits": {"ebf9f42e63fac292c6ba895ebcae089c8d580b76": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 224.00027777777777, "commitsDetails": [{"commitHash": "ebf9f42e63fac292c6ba895ebcae089c8d580b76", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7dda76261db4615ac4967a4b094fbaf96ebc8736"], "nameRev": "ebf9f42e63fac292c6ba895ebcae089c8d580b76 tags/redisson-3.10.6~15", "commitMessage": "Feature - broadcastSessionEvents setting added to Tomcat Session Manager. #1595\n", "commitDateTime": "2019-03-29 08:35:25", "authoredDateTime": "2019-03-29 08:35:25", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 41, "deletions": 24, "lines": 65}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/SessionCreatedMessage.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/SessionDestroyedMessage.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 42, "deletions": 25, "lines": 67}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/SessionCreatedMessage.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/SessionDestroyedMessage.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/java/org/redisson/tomcat/TestHttpSessionListener.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/webapp/META-INF/context.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/webapp/WEB-INF/web.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 42, "deletions": 25, "lines": 67}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/SessionCreatedMessage.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/SessionDestroyedMessage.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 42, "deletions": 25, "lines": 67}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/SessionCreatedMessage.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/SessionDestroyedMessage.java", "insertions": 32, "deletions": 0, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String)", "TOT": 19, "UPD": 3, "INS": 1, "MOV": 6, "DEL": 9}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().1.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.isBroadcastSessionEvents()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.setBroadcastSessionEvents(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().2.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String).1.sessionEvent(org.apache.catalina.SessionEvent)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionCreatedMessage.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.SessionCreatedMessage", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionDestroyedMessage.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.SessionDestroyedMessage", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManagerTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.testHttpSessionListener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestHttpSessionListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.TestHttpSessionListener", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ebf9f42e63fac292c6ba895ebcae089c8d580b76"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 423, "deletions": 99, "lines": 522, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 39, "UPD": 6, "INS": 12, "MOV": 10, "DEL": 11, "spoonFilesChanged": 3, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSessionManager.startInternal().2.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String)", "org.redisson.tomcat.RedissonSessionManager.startInternal()", "org.redisson.tomcat.RedissonSessionManager.startInternal().1", "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "org.redisson.tomcat.RedissonSessionManager.startInternal().1.onMessage(java.lang.CharSequence,org.redisson.tomcat.AttributeMessage)", "org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String).1.sessionEvent(org.apache.catalina.SessionEvent)", "org.redisson.tomcat.RedissonSessionManager.setBroadcastSessionEvents(boolean)", "org.redisson.tomcat.SessionCreatedMessage", "org.redisson.tomcat.RedissonSessionManager", "org.redisson.tomcat.RedissonSessionManager.isBroadcastSessionEvents()", "org.redisson.tomcat.SessionDestroyedMessage"]}, {"title": "problem about RLock.lock()  interruptedException ?", "body": "<!--\r\n\r\n-->\r\n\r\n### Expected behavior\r\n**RLock.lock() does not return anything, is that mean a thread can always get the lock ?**\r\n\r\n> After i saw the source code of lock funcation, it calls lockInterruptibly and catch the InterruptedException, it means that when a thread is interrupted by other thread, it will stop waiting and return from this lock function.\r\n\r\n**so I tried a example in such way:**\r\n> There are two threads in my example, thread-1 gets the lock, and thread-2 is waiting for the lock, then main thread interrupts thread-2, and in this way, thread-2 actually does not get the lock, but thread-2 still stops waiting and return from lock() funcation and continues to do the business which should be locked.\r\n\r\n**should i use the interruption status of current thread to check if the current thread has got the lock?**\r\n\r\n\r\nThank you very much!\r\n\r\n### Actual behavior\r\n```\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RLock;\r\nimport org.redisson.config.Config;\r\nimport java.util.concurrent.CountDownLatch;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class TestDistributedRedisLock {\r\n\r\n    private static CountDownLatch finish = new CountDownLatch(2);\r\n    private static final String KEY = \"testlock\";\r\n    private static Config config;\r\n    private static Redisson redisson;\r\n    static {\r\n        config = new Config();\r\n        config.useSingleServer().setAddress(\"127.0.0.1:6379\");\r\n        redisson = (Redisson)Redisson.create(config);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Thread thread_1 = new LockWithoutBoolean(\"thread-1\");\r\n        Thread thread_2 = new LockWithoutBoolean(\"thread-2\");\r\n        thread_1.start();\r\n        try {\r\n            TimeUnit.SECONDS.sleep(10); // let thread-1 get the lock\r\n            thread_2.start();\r\n            TimeUnit.SECONDS.sleep(10); // let thread_2 waiting for the lock\r\n            thread_2.interrupt(); // interrupte the thread-2\r\n            finish.await();\r\n        } catch (InterruptedException e) {\r\n            Thread.currentThread().interrupt();\r\n        } finally {\r\n            redisson.shutdown();\r\n        }\r\n    }\r\n\r\n    static class LockWithoutBoolean extends Thread {\r\n        private String name;\r\n\r\n        public LockWithoutBoolean(String name) {\r\n            super(name);\r\n        }\r\n\r\n        public void run() {\r\n            RLock lock = redisson.getLock(KEY);\r\n            lock.lock(10, TimeUnit.MINUTES);\r\n            System.out.println(Thread.currentThread().getName() + \" gets lock. and interrupt: \" + Thread.currentThread().isInterrupted());\r\n            try {\r\n                TimeUnit.MINUTES.sleep(1);\r\n            } catch (InterruptedException e) {\r\n                Thread.currentThread().interrupt();\r\n            } finally {\r\n                try {\r\n                    lock.unlock();\r\n                } finally {\r\n                    finish.countDown();\r\n                }\r\n            }\r\n            System.out.println(Thread.currentThread().getName() + \" ends.\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Steps to reproduce or test case\r\n> **output:**\r\n```\r\nthread-1 gets lock. and interrupt: false\r\nthread-2 gets lock. and interrupt: true\r\nException in thread \"thread-2\" java.lang.IllegalMonitorStateException: attempt to unlock lock, not locked by current thread by node id: 965ec21d-aa56-4057-a0e9-a29acacf35b1 thread-id: 21\r\n\tat org.redisson.RedissonLock.unlock(RedissonLock.java:353)\r\n\tat com.example.TestDistributedRedisLock$LockWithoutBoolean.run(TestDistributedRedisLock.java:55)\r\nthread-1 ends.\r\n```\r\n### Redis version\r\n```4.0.6```\r\n### Redisson version\r\n```\r\n<dependency>\r\n            <groupId>org.redisson</groupId>\r\n            <artifactId>redisson</artifactId>\r\n            <version>2.7.0</version>\r\n        </dependency>\r\n```\r\n### Redisson configuration\r\n```\r\nno other configuration\r\n```", "url": "https://github.com/redisson/redisson/issues/1593", "user": "nicktming", "labels": ["bug"], "created": "2018-08-15 14:18:55", "closed": "2019-04-02 12:46:41", "commits": {"c67c333fa1f3e083914c2d55bd86cca91b831774": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 229.00027777777777, "commitsDetails": [{"commitHash": "c67c333fa1f3e083914c2d55bd86cca91b831774", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e4fe2105df7002e7fba68f66a2b582d8b62de11c"], "nameRev": "c67c333fa1f3e083914c2d55bd86cca91b831774 tags/redisson-3.10.6~8", "commitMessage": "Fixed - RLock.lock method can be interrupted with Thread.interrupt method. #1593\n", "commitDateTime": "2019-04-02 15:46:33", "authoredDateTime": "2019-04-02 15:46:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 22, "deletions": 7, "lines": 29}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLockTest.java", "insertions": 46, "deletions": 0, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.lockInterruptibly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.lock()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.lock(long,java.util.concurrent.TimeUnit)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.lock(long,java.util.concurrent.TimeUnit,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockTest.LockWithoutBoolean", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLockTest.testLockUninterruptibly()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c67c333fa1f3e083914c2d55bd86cca91b831774"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 7, "lines": 29, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 17, "UPD": 4, "INS": 5, "MOV": 5, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.lock(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonLock.lock(long,java.util.concurrent.TimeUnit,boolean)", "org.redisson.RedissonLock.lock()", "org.redisson.RedissonLock.lockInterruptibly()"]}, {"title": "some suggest of set with ttl", "body": "###\r\nversion:3.7.5\r\n```java\r\n RBucket<User> rBucket = redisson.getBucket(\"test\");\r\nrBucket.set(null); //this is success\r\nrBucket.set(null,1,TimeUnit.DAYS);//this is error\r\n```\r\nwould you be consistent", "url": "https://github.com/redisson/redisson/issues/1587", "user": "kkrgwbj", "labels": ["bug"], "created": "2018-08-10 03:27:46", "closed": "2018-08-29 09:11:53", "commits": {"7a62ee2e02669bf51b0d77b23cd791b92a25507f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "7a62ee2e02669bf51b0d77b23cd791b92a25507f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cdd7c8ae2f078adc03f689c162dbfc7dc7112a79"], "nameRev": "7a62ee2e02669bf51b0d77b23cd791b92a25507f tags/redisson-3.8.0~11^2~8", "commitMessage": "Fixed - RBucket.set with ttl throws NPE if value is null. #1587\n", "commitDateTime": "2018-08-29 12:13:48", "authoredDateTime": "2018-08-29 12:13:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBucket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBucketTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBucket.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBucket.setAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonBucketTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBucketTest.testSetGet()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7a62ee2e02669bf51b0d77b23cd791b92a25507f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBucket.setAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)"]}, {"title": "Memory Leak when I try to create client", "body": "<!--\r\nPlease consider to take commercial 24x7 support included in PRO version https://redisson.pro\r\n-->\r\n\r\n### Expected behavior\r\nIt should't have memory leak.\r\n### Actual behavior\r\n```\r\n[main] ERROR io.netty.util.ResourceLeakDetector  - LEAK: HashedWheelTimer.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.\r\nRecent access records: \r\nCreated at:\r\n\tio.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:272)\r\n\tio.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:216)\r\n\tio.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:195)\r\n\torg.redisson.connection.MasterSlaveConnectionManager.initTimer(MasterSlaveConnectionManager.java:318)\r\n\torg.redisson.connection.MasterSlaveConnectionManager.<init>(MasterSlaveConnectionManager.java:161)\r\n\torg.redisson.connection.SingleConnectionManager.<init>(SingleConnectionManager.java:34)\r\n\torg.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:192)\r\n\torg.redisson.Redisson.<init>(Redisson.java:122)\r\n\torg.redisson.Redisson.create(Redisson.java:159)\r\n\ttest.main(test.java:32)\r\n```\r\n\r\n### Steps to reproduce or test case\r\n```java=\r\n        Codec stringCodec = new StringCodec();\r\n\r\n        for (int i = 0; i < 10; i++) {\r\n            RedissonClient client;\r\n            Config config = new Config();\r\n            config.useSingleServer().setAddress(RedisConfig.Address);\r\n            config.useSingleServer().setPassword(RedisConfig.Password);\r\n            config.setCodec(stringCodec);\r\n            client = Redisson.create(config);\r\n\r\n            BatchOptions options = BatchOptions.defaults();\r\n            RBatch pipe = client.createBatch(options);\r\n\r\n            pipe.getBucket(\"test\", stringCodec).getAsync();\r\n            BatchResult res = pipe.execute();\r\n\r\n            System.out.println(res.getResponses().get(0));\r\n\r\n            client.shutdown();\r\n\r\n            System.gc();\r\n        }\r\n\r\n```\r\n\r\n### Redis version\r\n4.0.10\r\n### Redisson version\r\n3.7.5\r\n### Redisson configuration\r\n```\r\nConfig config = new Config();\r\nconfig.useSingleServer().setAddress(RedisConfig.Address);\r\nconfig.useSingleServer().setPassword(RedisConfig.Password);\r\nconfig.setCodec(stringCodec);\r\nclient = Redisson.create(config);\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/1584", "user": "sappy5678", "labels": ["bug"], "created": "2018-08-08 07:51:56", "closed": "2018-08-29 09:02:40", "commits": {"404c90c4913d78087731673a42184654db8ea74b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "404c90c4913d78087731673a42184654db8ea74b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b7c44b530f11eb845cc344a27084d1ed1c1d28f0"], "nameRev": "404c90c4913d78087731673a42184654db8ea74b tags/redisson-3.8.0~11^2~11", "commitMessage": "Fixed - false HashedWheelTimer resource leak message #1584\n", "commitDateTime": "2018-08-29 12:04:59", "authoredDateTime": "2018-08-29 12:04:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 10, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initTimer(org.redisson.config.MasterSlaveServersConfig)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["404c90c4913d78087731673a42184654db8ea74b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 10, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.initTimer(org.redisson.config.MasterSlaveServersConfig)"]}, {"title": "Jcache removeAll(Keys) Method is not working ***", "body": "Hi,\r\n removeAll (keys) Method is not working for \"org.redisson.jcache.JCache\".  Keys are still exising in the cache after After the execution of removeAll (keys).\r\n\r\nBelow Method in org.redisson.jcache.Jcache is returning 0.\r\n\r\n private long removeValues(Object... keys) {\r\n        List<Object> params = new ArrayList<Object>(keys.length);\r\n        encodeMapKeys(params, Arrays.asList(keys));\r\n        return evalWrite(getName(), codec, RedisCommands.EVAL_LONG,\r\n                  \"redis.call('zrem', KEYS[2], unpack(ARGV)); \"\r\n                + \"return redis.call('hdel', KEYS[1], unpack(ARGV)); \",\r\n                Arrays.<Object>asList(getName(), getTimeoutSetName()), params);\r\n    }\r\n\r\nremove(key) is working fine.\r\n\r\nPlease find My code snippet below\r\npublic void invalidate(String region, Collection<String> keys) {\r\n\t\tif(keys == null || keys.isEmpty()){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tCache<String, Serializable> cache = getCache(region);\r\n\r\n\t\tif (cache != null && !Formatter.isEmpty(keys)) {\r\n\t\t\tcache.removeAll(new HashSet<String>(keys));\r\n\t\t}\r\n\r\n\t}\r\n\r\nPlease let me know if anything is Wrong from myside.\r\n\r\nThanks", "url": "https://github.com/redisson/redisson/issues/1574", "user": "stkggit", "labels": ["bug"], "created": "2018-08-01 15:56:53", "closed": "2018-08-14 14:27:58", "commits": {"24146f776b8a46e239ee61677f2a7abf88d9b0a3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "24146f776b8a46e239ee61677f2a7abf88d9b0a3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e37c9d3741e482436b7efd23fc1da1b094ebdeb6"], "nameRev": "24146f776b8a46e239ee61677f2a7abf88d9b0a3 tags/redisson-3.8.0~16^2~1", "commitMessage": "Fixed - JCache.removeAll doesn't work. #1574\n", "commitDateTime": "2018-08-14 17:30:48", "authoredDateTime": "2018-08-14 17:30:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/jcache/JCacheTest.java", "insertions": 32, "deletions": 1, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.removeValues(java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCacheTest.testGetAll()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCacheTest.testRemoveAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["24146f776b8a46e239ee61677f2a7abf88d9b0a3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/jcache"], "changesInPackagesSPOON": ["org.redisson.jcache.JCache.removeValues(java.lang.Object[])"]}, {"title": "Redis node failover triggers 30x spike in Commands to the failover shard (using RBatch object)", "body": "Redis node failover triggers 30x spike in Commands to the failover shard\r\n\r\nAdditional Description: We have Elasticache cluster with 2 shards* 6 nodes in each shard. Whenever a node failover occurs, the commands (HashCommands) that shard processes increases by 30x (For ex: ). No change in the incoming requests to service but the request/ commands processed by Redis goes up by 30x. Once we redeploy service, Redis commands to that shard will come to normal state. \r\n\r\nUpdated redisson client to latest version. With redisson client update, we are seeing a performance hit. Latencies are increased by 25%. We haven't verified whether the issue is happening in latest version or not. \r\n\r\nAppreciate any inputs to debug what's happening here. \r\n\r\n\r\nExpected behavior: Failover should be handled gracefully\r\n\r\nActual behavior: Failover leads to increase in traffic to Redis\r\n\r\nSteps to reproduce or test case:\r\n1) Failover Primary in one of the shard\r\n\r\nRedis version: AWS Elasticache Redis 3.2.10\r\n\r\nRedisson version: 2.8.2\r\n\r\nRedisson configuration:\r\nScanInterval: 30000\r\nReadMode: Slave\r\nLoad Balancer: Round Robin\r\ntimeout: 1000\r\ncluster mode: true\r\n", "url": "https://github.com/redisson/redisson/issues/1567", "user": "EXPEbdodla", "labels": ["bug"], "created": "2018-07-30 22:39:24", "closed": "2019-02-25 09:57:32", "commits": {"7557715581689538474dcd402429f05f99988a6e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "b7c44b530f11eb845cc344a27084d1ed1c1d28f0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 209.00027777777777, "commitsDetails": [{"commitHash": "7557715581689538474dcd402429f05f99988a6e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bb19fd7997997d14637d0c55697e54c757290a62"], "nameRev": "7557715581689538474dcd402429f05f99988a6e tags/redisson-3.8.0~13^2~1", "commitMessage": "Fixed - 30x spike in Commands to the failover shard #1567\n", "commitDateTime": "2018-08-27 17:07:57", "authoredDateTime": "2018-08-27 17:07:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 15, "deletions": 8, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean,org.redisson.api.RFuture).8.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).9.run(io.netty.util.Timeout)", "TOT": 13, "UPD": 3, "INS": 5, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b7c44b530f11eb845cc344a27084d1ed1c1d28f0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1faaaca92c1e32e8ce7ba54b9f897649887543cc"], "nameRev": "b7c44b530f11eb845cc344a27084d1ed1c1d28f0 tags/redisson-3.8.0~12^2~1", "commitMessage": "Fixed - Redis request/response handling performance improvement #1567\n", "commitDateTime": "2018-08-28 14:19:12", "authoredDateTime": "2018-08-28 14:19:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 13, "deletions": 54, "lines": 67}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 0, "deletions": 11, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/liveobject/misc/ClassUtils.java", "insertions": 22, "deletions": 8, "lines": 30}, {"filePath": "redisson/src/main/java/org/redisson/misc/RedissonObjectFactory.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 32, "deletions": 0, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.tryHandleReference(java.lang.Object)", "TOT": 40, "UPD": 12, "INS": 4, "MOV": 17, "DEL": 7}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean,org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean,org.redisson.api.RFuture)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "ClassUtils.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.misc.ClassUtils.isAnnotationPresent(java.lang.Class,java.lang.Class)", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.liveobject.misc.ClassUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonObjectFactory.java", "spoonMethods": []}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testPerformance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7557715581689538474dcd402429f05f99988a6e", "b7c44b530f11eb845cc344a27084d1ed1c1d28f0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 51, "deletions": 83, "lines": 134, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 76, "UPD": 16, "INS": 18, "MOV": 28, "DEL": 14, "spoonFilesChanged": 3, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/liveobject/misc", "redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.tryHandleReference(java.lang.Object)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean,org.redisson.api.RFuture).8.run(io.netty.util.Timeout)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).9.run(io.netty.util.Timeout)", "org.redisson.liveobject.misc.ClassUtils", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean,org.redisson.api.RFuture)", "org.redisson.liveobject.misc.ClassUtils.isAnnotationPresent(java.lang.Class,java.lang.Class)", "org.redisson.command.CommandBatchService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],org.redisson.misc.RPromise,int,boolean,org.redisson.api.RFuture)"]}, {"title": "Only Linux launch error: io.netty.handler.codec.DecoderException: CommandDecoder.decode()", "body": "## Like error #1295 \r\n    Windows is OK, but Linux error!\r\n### Redisson version\r\n```\r\n            <dependency>\r\n                <groupId>org.redisson</groupId>\r\n                <artifactId>redisson</artifactId>\r\n                <version>3.7.5</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>io.netty</groupId>\r\n                <artifactId>netty-transport-native-epoll</artifactId>\r\n                <version>4.1.25.Final</version>\r\n            </dependency>\r\n```\r\n### Redisson configuration\r\n```\r\n    @Bean(destroyMethod = \"shutdown\")\r\n    @ConditionalOnProperty(name = \"redisson.address\")\r\n    public RedissonClient redissonClientSingle() {\r\n        Config config = new Config().setTransportMode(NIO);\r\n        config.setCodec(new JsonJacksonCodec());\r\n        SingleServerConfig singleton = config.useSingleServer()\r\n                .setAddress(address)\r\n                .setConnectionMinimumIdleSize(pool.getMinIdle())\r\n                .setConnectTimeout(connectTimeout)\r\n                .setPingTimeout(pingTimeout)\r\n                .setConnectionPoolSize(pool.maxActive);\r\n        if (null != password)\r\n            singleton.setPassword(password);\r\n        return Redisson.create(config);\r\n    }\r\n```\r\n### ERROR log\r\n2018-07-30 05:22:52 [redisson-netty-1-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096\r\n2018-07-30 05:22:52 [redisson-netty-1-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxSharedCapacityFactor: 2\r\n2018-07-30 05:22:52 [redisson-netty-1-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.linkCapacity: 16\r\n2018-07-30 05:22:52 [redisson-netty-1-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8\r\n2018-07-30 05:22:52 [redisson-netty-1-4] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.bytebuf.checkAccessible: true\r\n2018-07-30 05:22:52 [redisson-netty-1-4] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@55a00547\r\n2018-07-30 05:22:52 [redisson-netty-1-2] WARN  io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: CommandDecoder.decode() must consume the inbound data or change its state if it did not decode anything.\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:379)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)", "url": "https://github.com/redisson/redisson/issues/1566", "user": "Crab2died", "labels": ["bug"], "created": "2018-07-30 05:49:29", "closed": "2018-12-19 14:15:29", "commits": {"60352b8490220cfeecc99ca51d73b867f563838c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 142.00027777777777, "commitsDetails": [{"commitHash": "60352b8490220cfeecc99ca51d73b867f563838c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["91e2cf96405cd9c6c58dcedc61df8f049cb703bd"], "nameRev": "60352b8490220cfeecc99ca51d73b867f563838c tags/redisson-2.15.0~36", "commitMessage": "Fixed - error during channel initialization is not logged. #1566\n", "commitDateTime": "2018-12-19 17:16:12", "authoredDateTime": "2018-12-19 17:16:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["60352b8490220cfeecc99ca51d73b867f563838c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean)"]}, {"title": "RTransaction Unusual Locking Problem", "body": "Hi mrniko,\r\n\r\nWe have two methods:\r\n\r\n1. \r\n\r\npublic void putAndWait() {\r\n\t\t\r\n\t\tRTransaction transaction = redisson.createTransaction(options);\r\n\t\tRMap map1=transaction.getMap(\"put_test\");\r\n\t\tmap1.put(1,\"aryan\");\r\n\t\tThread.sleep(10000);\r\n\t\ttransaction.commit();\r\n\r\n\t}\r\n\r\n2.\r\n\r\npublic void put() {\r\n\t\t\r\n\t\tRTransaction transaction = redisson.createTransaction(options);\r\n\t\tRMap map=transaction.getMap(\"put_test\");\r\n\t\tmap.put(1,\"shiv\");\r\n\t\ttransaction.commit();\r\n\t\t\r\n\t}\r\n\r\nAs per our test we invoke method 1 and then immediately invoke method 2. The second transaction waits until the first one finishes and seems like the first transaction takes a pessimistic lock on one of the keys of the map being used here and we are totally fine with that.\r\n\r\n\r\nNow we have another method in a different test scenario:\r\n\r\npublic void test(){\r\n\t\t\r\n\t\tRTransaction transaction1 = redisson.createTransaction(options);\r\n\t\tRmap map1 = transaction1.getMap(\"put_test\");\r\n\t\tmap1.remove(1);\r\n\r\n\t\tRTransaction transaction2 = redisson.createTransaction(options);\r\n\t\tSystem.out.println(map1.get(1));\r\n\t\tRMap map2 = transaction2.getMap(\"put_test\");\r\n\t\tmap2.put(1,\"aryan\");\r\n\t\tSystem.out.println(map2.get(1));\r\n\t\tSystem.out.println(map1.get(1));\r\n\t\t\r\n\t\t\r\n\t\ttransaction2.commit();\r\n\t\ttransaction1.commit();\r\n\t\r\n\t}\r\n\r\nAs per our previous test we expected a deadlock situation in this scenario, since transaction1 has the lock over the key and transaction2 is trying to alter it. But in our test both transactions commit successfully and maintain order.\r\n\r\nPlease explain the ambigious locking in case of these to scenarios. Thank you.\r\n", "url": "https://github.com/redisson/redisson/issues/1561", "user": "shivendra-kumar", "labels": ["bug"], "created": "2018-07-25 14:18:58", "closed": "2018-08-14 14:16:51", "commits": {"27d71b32b69e4dc75dd5019e5468e611b9a3dc4e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "27d71b32b69e4dc75dd5019e5468e611b9a3dc4e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["43765f94ded5c9de1e19d7170fc2900625357842"], "nameRev": "27d71b32b69e4dc75dd5019e5468e611b9a3dc4e tags/redisson-3.8.0~16^2~4", "commitMessage": "Fixed - locking in multiple parallel transactions created with the same thread. #1561\n", "commitDateTime": "2018-08-14 17:14:48", "authoredDateTime": "2018-08-14 17:14:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetCache.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/RedissonWriteLock.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/api/RLock.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/api/RLockAsync.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommand.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/convertor/IntegerReplayConvertor.java", "insertions": 15, "deletions": 1, "lines": 16}, {"filePath": "redisson/src/main/java/org/redisson/transaction/BaseTransactionalMap.java", "insertions": 29, "deletions": 20, "lines": 49}, {"filePath": "redisson/src/main/java/org/redisson/transaction/BaseTransactionalMapCache.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/transaction/BaseTransactionalSet.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransaction.java", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalBucket.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalLocalCachedMap.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalLock.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalMap.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalMapCache.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalSet.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransactionalSetCache.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/TransactionalSet.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/transaction/TransactionalSetCache.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapAddAndGetOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapCacheFastPutIfAbsentOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapCacheFastPutOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapCachePutIfAbsentOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapCachePutOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapFastPutIfAbsentOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapFastPutOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapFastRemoveOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapOperation.java", "insertions": 14, "deletions": 5, "lines": 19}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapPutIfAbsentOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapPutOperation.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapRemoveOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/map/MapReplaceOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/AddCacheOperation.java", "insertions": 9, "deletions": 10, "lines": 19}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/AddOperation.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/MoveOperation.java", "insertions": 11, "deletions": 10, "lines": 21}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/RemoveCacheOperation.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/RemoveOperation.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/transaction/operation/set/SetOperation.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "redisson/src/test/java/org/redisson/transaction/RedissonBaseTransactionalMapTest.java", "insertions": 25, "deletions": 0, "lines": 25}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["27d71b32b69e4dc75dd5019e5468e611b9a3dc4e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 351, "deletions": 178, "lines": 529, "gitFilesChange": 41}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/transaction/operation/map", "redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/transaction/operation/set", "redisson/src/main/java/org/redisson/transaction", "redisson/src/main/java/org/redisson/api", "redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson/client/protocol/convertor"]}, {"title": "Getting issues while using Redisson Tomcat session manager to share one redis instance among multiple tomcats", "body": "Hi,\r\n\r\nI am trying to use one redis instance for multiple tomcats to make session storage centralized for my application. But i am getting below error.\r\n\r\n**org.redisson.client.RedisTimeoutException: Redis server response timeout (3000 ms) occured for command: (HGET) with params: [redisson:tomcat_session:793608B88C44BAB4E33D83A057A2BD09, PooledUnsafeDirectByteBuf(ridx: 0, widx: 9, cap: 256)] channel: [id: 0x9d152a45, L:/127.0.0.1:60560 - R:127.0.0.1/127.0.0.1:6379]**\r\n\r\nAs far as i understood redisson is not able to get the session created previously and then it goes on to create a new one. Because of this every time i use application on one tomcat to login it creates new session and when i come to other tomcat to use the same application its not able to find the created session and goes on to create a new one.\r\n\r\nBut i do see all the sessions created in redis and being stored properly. Its just that redisson is not able to read the session.\r\n\r\nBelow are my config:\r\n\r\n**redisson.yml**\r\n\r\n```\r\nsingleServerConfig:\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  password: null\r\n  subscriptionsPerConnection: 5\r\n  clientName: null\r\n  address: \"redis://127.0.0.1:6379\"\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  connectionMinimumIdleSize: 32\r\n  connectionPoolSize: 64\r\n  database: 0\r\n  dnsMonitoringInterval: 5000\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.JsonJacksonCodec> {}\r\ntransportMode: \"NIO\"\r\n```\r\n\r\n**Context.xml:**\r\n\r\n```\r\n<Manager className=\"org.redisson.tomcat.RedissonSessionManager\"\r\n          configPath=\"${catalina.base}/conf/redisson.yml\" readMode=\"REDIS\" updateMode=\"DEFAULT\"/>\r\n```\r\n\r\nI am using redisson 3.7.4\r\n", "url": "https://github.com/redisson/redisson/issues/1558", "user": "rohitgulia", "labels": ["bug"], "created": "2018-07-20 19:27:49", "closed": "2019-03-04 06:15:26", "commits": {"d5ee9a728bf1f58c816349656e46025fdceaf0da": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 226.00027777777777, "commitsDetails": [{"commitHash": "d5ee9a728bf1f58c816349656e46025fdceaf0da", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["be050938b4ef5c0efef48e595fa459ceaf5137db"], "nameRev": "d5ee9a728bf1f58c816349656e46025fdceaf0da tags/redisson-3.10.4~15", "commitMessage": "Fixed - fresh Tomcat instance unable to load session stored in Redis. #1558\n", "commitDateTime": "2019-03-04 09:14:49", "authoredDateTime": "2019-03-04 09:14:49", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 14, "UPD": 3, "INS": 3, "MOV": 5, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d5ee9a728bf1f58c816349656e46025fdceaf0da"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 36, "deletions": 28, "lines": 64, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 14, "UPD": 3, "INS": 3, "MOV": 5, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)"]}, {"title": "Connection is closed per command execution for master node used as slave in readMode = MASTER_SLAVE", "body": "This issue leads to new connection established per Redis command invocation and therefore performance degradation for master node used as slave.", "url": "https://github.com/redisson/redisson/issues/1550", "user": "mrniko", "labels": ["bug"], "created": "2018-07-17 13:41:46", "closed": "2018-07-17 13:43:08", "commits": {"fe49988f2a3e5be57e2dfb1c5bce14ce3f538a50": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fe49988f2a3e5be57e2dfb1c5bce14ce3f538a50", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["543835607e540b818bc847ae9af38322fc90bb33"], "nameRev": "fe49988f2a3e5be57e2dfb1c5bce14ce3f538a50 tags/redisson-2.12.5~7", "commitMessage": "Fixed - connection is closed per command execution for master node used as slave in readMode = MASTER_SLAVE #1550\n", "commitDateTime": "2018-07-17 16:45:35", "authoredDateTime": "2018-07-17 16:45:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.isMasterForRead()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.returnConnection(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fe49988f2a3e5be57e2dfb1c5bce14ce3f538a50"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 4, "lines": 11, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/pool", "redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.pool.ConnectionPool.returnConnection(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "org.redisson.connection.ClientConnectionsEntry.isMasterForRead()"]}, {"title": "LiveObjectService - ClassCastException when using multiple ClassLoaders", "body": "\ufeff### Expected behavior\r\nRedissonLiveObjectService creates proxy objects that are `instanceof` the given entity class.\r\n\r\n### Actual behavior\r\nWhen using a different ClassLoader when loading the Class-To-Proxy for an LiveObject than when loading the Redission library all proxies creations will throw a `ClassCastException`.\r\n\r\n```\r\nCaused by: java.lang.ClassCastException: ch.aquint.MyLiveObject$ByteBuddy$EG1hQiP9 cannot be cast to ch.aquint.MyLiveObject\r\n        at ch.aquint.MyService.initService(MyService.java:20) ~[main/:na]\r\n\r\n```\r\n\r\n**This is most likely due to the line.** https://github.com/redisson/redisson/blob/46e8e8846a260999b6706e331b40943de0ffb813/redisson/src/main/java/org/redisson/RedissonLiveObjectService.java#L693\r\nI think redission should use `entityClass.getClassLoader()` instead to make sure that the generated proxy object will be assignable to the given entity class.\r\n(As soon as `spring-boot-devtools` is removed from the classpath and there is only 1 ClassLoader around everything works perfectly fine)\r\n\r\n### Steps to reproduce or test case\r\nI've created a minimal repository that shows the error simply by running `./gradlew run` in the project.\r\n[https://github.com/Aqu1nt/redission-classcastexception](url)  \r\n\r\nIf [https://github.com/Aqu1nt/redission-classcastexception/blob/master/build.gradle#L18](url) is removed everything works fine.\r\n\r\n### Redis version\r\n4.0.10\r\n\r\n### Redisson version\r\n3.7.3\r\n\r\n### Redisson configuration\r\n```java\r\n@Bean\r\npublic RedissonClient redissonClient() {\r\n  return Redisson.create();\r\n}\r\n```", "url": "https://github.com/redisson/redisson/issues/1545", "user": "Aqu1nt", "labels": ["bug"], "created": "2018-07-14 13:56:23", "closed": "2018-07-17 12:56:46", "commits": {"4713fcf1d78ebf93febe626f02d4f4092b341b1d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "4713fcf1d78ebf93febe626f02d4f4092b341b1d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["879109b9da750c36372b2828288d56fd737d6b6c"], "nameRev": "4713fcf1d78ebf93febe626f02d4f4092b341b1d tags/redisson-2.12.5~9", "commitMessage": "Fixed - RLiveObjectService should use entityClass's classloader #1545\n", "commitDateTime": "2018-07-17 15:35:51", "authoredDateTime": "2018-07-17 15:35:51", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.registerClassInternal(java.lang.Class)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4713fcf1d78ebf93febe626f02d4f4092b341b1d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLiveObjectService.registerClassInternal(java.lang.Class)"]}, {"title": "Global config codec is not registered in codec cache", "body": "\ufeff### Expected behavior\r\n\r\nWhen deserializing nested data structures the nested structure should use the codec instance assigned to the redisson config using `setCodec`.\r\n\r\n### Actual behavior\r\n\r\nThe nested data structure is serialized using the default `JsonJacksonCodec` codec ignoring the one set on `Config` using `setCodec`.\r\n\r\n### Steps to reproduce or test case\r\n\r\nCreate a new `JsonJacksonCodec` using a non-default `ObjectMapper` instance. \r\n\r\nAssign that instance to Config using `Config.setCodec`. \r\n\r\nStored a nested data structure such as a `RBucketReactive` inside of a `RSetReactive`, and store a POJO inside of the `RBucketReactive` that's dependent on the configuration of the `ObjectMapper` used previously.\r\n\r\nAttempt to retrieve the value from the `RBucketReactive` instance by iterating the `RSetReactive` contents and observe that Jackson deserialization will fail due to using a defaultly configured `ObjectMapper`.\r\n\r\n### Redis version\r\n\r\n4.0.10\r\n\r\n### Redisson version\r\n\r\n3.7.1\r\n\r\n### Redisson configuration\r\n\r\nAll defaults except for registering a new Codec.", "url": "https://github.com/redisson/redisson/issues/1544", "user": "orclev", "labels": ["bug"], "created": "2018-07-13 17:20:44", "closed": "2018-07-19 13:41:31", "commits": {"9ea442193d95784dd5c30ef80681c50c4161391d": {"commitGHEventType": "closed", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "9ea442193d95784dd5c30ef80681c50c4161391d", "commitGHEventType": "closed", "commitUser": "mrniko", "commitParents": ["cf31188d3f792507d5351991806349e6073f75b3", "90a794ef9746ea534d5a445a25176726ffd15ed0"], "nameRev": "9ea442193d95784dd5c30ef80681c50c4161391d tags/redisson-3.8.0~16^2~21", "commitMessage": "Merge pull request #1552 from jackygurui/fix-#1544\n\nFix #1544 - global codec not registered", "commitDateTime": "2018-07-19 16:41:25", "authoredDateTime": "2018-07-19 16:41:25", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/Redisson.java", "insertions": 42, "deletions": 43, "lines": 85}, {"filePath": "redisson/src/main/java/org/redisson/RedissonReactive.java", "insertions": 15, "deletions": 16, "lines": 31}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReferenceReactiveTest.java", "insertions": 59, "deletions": 12, "lines": 71}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReferenceTest.java", "insertions": 54, "deletions": 21, "lines": 75}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Redisson.java", "spoonMethods": []}, {"spoonFilePath": "RedissonReactive.java", "spoonMethods": []}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.enableRedissonReferenceSupport(org.redisson.config.Config)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.enableRedissonReferenceSupport(org.redisson.api.RedissonClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.enableRedissonReferenceSupport(org.redisson.api.RedissonReactiveClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonReferenceReactiveTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReferenceReactiveTest.test()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceReactiveTest.testBatch()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceReactiveTest.testReactiveToNormal()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceReactiveTest.shouldUseDefaultCodec()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceReactiveTest.MyObject", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonReferenceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReferenceTest.testBasic()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceTest.testBatch()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceTest.testNormalToReactive()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceTest.testWithList()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceTest.testWithZSet()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceTest.testReadAll()", "TOT": 23, "UPD": 23, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceTest.testWithMap()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceTest.shouldUseDefaultCodec()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReferenceTest.MyObject", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Multiple ReadLocks are not sharing locks properly after WriteLock releases", "body": "Hello!\r\n\r\n\ufeffI've found something that I believe is a bug in Redisson's [RReadWriteLock](https://static.javadoc.io/org.redisson/redisson/3.4.3/org/redisson/api/RReadWriteLock.html) implementation where multiple ReadLocks seemed to become or at least behaved like WriteLock when it tried to lock on a lockpoint that another WriteLock has already acquired a lock, then released. Because of that, ReadLocks are not sharing the lockpoint like it should and are taking turns in locking the lockpoint. Theoretically, this will have a performance impact on applications that expected Redisson to have quicker locking mechanism based on inclusive locking mechanism but under the hood, it is not inclusive and those applications will spend some time to wait for locks to complete.\r\n\r\nI have tested this with Java's [ReentrantReadWriteLock](https://docs.oracle.com/javase/7/docs/api/index.html?java/util/concurrent/locks/ReentrantLock.html) and it has worked exactly what I'd expected it to be.\r\n\r\n**Note:** I have only tested this on a single Redis server. I did not test this on clustered Redis servers.\r\n\r\n### Expected behavior\r\n\r\n1. Writer Thread locks\r\n2. Reader Thread 1 fails to lock and waits\r\n3. Reader Thread 2 fails to lock and waits\r\n4. Reader Thread 3 fails to lock and waits\r\n5. Writer Thread unlocks\r\n6. Read Thread 1 locks\r\n7. Read Thread 2 locks\r\n8. Read Thread 3 locks\r\n9. Read Thread 1 unlocks\r\n10. Read Thread 2 unlocks\r\n11. Read Thread 3 unlocks\r\n\r\nThis behavior matches Java's [ReentrantReadWriteLock](https://docs.oracle.com/javase/7/docs/api/index.html?java/util/concurrent/locks/ReentrantLock.html) behavior exactly.\r\n\r\n### Actual behavior\r\n1. Writer Thread locks\r\n2. Reader Thread 1 fails to lock and waits\r\n3. Reader Thread 2 fails to lock and waits\r\n4. Reader Thread 3 fails to lock and waits\r\n5. Writer Thread unlocks\r\n6. Read Thread 1 locks\r\n7. Read Thread 2 fails to lock and waits\r\n8. Read Thread 3 fails to lock and waits\r\n9. Read Thread 1 unlocks\r\n10. Read Thread 2 locks\r\n11. Read Thread 3 fails to lock and waits\r\n12. Read Thread 2 unlocks\r\n13. Read Thread 3 locks\r\n14. Read Thread 3 unlocks\r\n\r\nThis behavior does not match Java's [ReentrantReadWriteLock](https://docs.oracle.com/javase/7/docs/api/index.html?java/util/concurrent/locks/ReentrantLock.html) behavior exactly.\r\n\r\n### Steps to reproduce or test case\r\nI have written a test code for you to review, download, and test. \r\n\r\nThe link to my code is here:\r\nhttps://github.com/orchapod/redisson-lock-test\r\n\r\nThe test code includes two test suites that runs a control test using Java's [ReentrantReadWriteLock](https://docs.oracle.com/javase/7/docs/api/index.html?java/util/concurrent/locks/ReentrantLock.html) and an experiment test with Redisson's [RReadWriteLock](https://static.javadoc.io/org.redisson/redisson/3.4.3/org/redisson/api/RReadWriteLock.html).\r\n\r\nEach test suites has two test cases where one of the test does multiple ReadLocks locks on the lockpoint before WriteLock locks on it, and another one tests multiple ReadLocks locking on the lockpoint after WriteLock has locked on it. The failure on the latter test on Redisson's [RReadWriteLock](https://static.javadoc.io/org.redisson/redisson/3.4.3/org/redisson/api/RReadWriteLock.html) is what has prompted me to open this issue ticket. Java's [ReentrantReadWriteLock](https://docs.oracle.com/javase/7/docs/api/index.html?java/util/concurrent/locks/ReentrantLock.html) passed that test.\r\n\r\nOverview:\r\n* RedissonLockTest\r\n  * `testReadLockBeforeWriteLock` - PASS\r\n  * `testReadLockAfterWriteLock` - **FAIL**\r\n* ReentrantLockTest\r\n  * `testReadLockBeforeWriteLock` - PASS\r\n  * `testReadLockAfterWriteLock` - PASS\r\n\r\nTo run the test, run `mvn test` with Maven to test the code.\r\n\r\n### Redis version\r\n4.0.9\r\n\r\n### Redisson version\r\n3.7.3\r\n\r\n### Redisson configuration\r\nSingle server with default configuration created by Redisson's Config class.", "url": "https://github.com/redisson/redisson/issues/1542", "user": "orchapod", "labels": ["bug"], "created": "2018-07-12 14:44:01", "closed": "2018-09-21 15:17:09", "commits": {"f3e3b56ea9d314ffbf4651c7e131843f1e4b2b7c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 71.00027777777778, "commitsDetails": [{"commitHash": "f3e3b56ea9d314ffbf4651c7e131843f1e4b2b7c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["862b689f9ca8c4ce1cea1a4954fecd258f3c78b9"], "nameRev": "f3e3b56ea9d314ffbf4651c7e131843f1e4b2b7c tags/redisson-2.13.2~33", "commitMessage": "Fixed - read locks aren't acquire lock at the same moment when write released. #1542\n", "commitDateTime": "2018-09-21 18:20:29", "authoredDateTime": "2018-09-21 18:20:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonWriteLock.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/LockPubSub.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReadWriteLockTest.java", "insertions": 26, "deletions": 0, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonWriteLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonWriteLock.unlockInnerAsync(long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonWriteLock.forceUnlockAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LockPubSub.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.LockPubSub.onMessage(org.redisson.RedissonLockEntry,java.lang.Long)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.pubsub.LockPubSub", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonReadWriteLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteReadReentrancy()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteRead()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f3e3b56ea9d314ffbf4651c7e131843f1e4b2b7c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 2, "lines": 15, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/pubsub"], "changesInPackagesSPOON": ["org.redisson.RedissonWriteLock.forceUnlockAsync()", "org.redisson.pubsub.LockPubSub", "org.redisson.RedissonWriteLock.unlockInnerAsync(long)", "org.redisson.pubsub.LockPubSub.onMessage(org.redisson.RedissonLockEntry,java.lang.Long)"]}, {"title": "Slow Redis Sentinel Initialization on Start (update from 3.6.5 -> 3.7.3)", "body": "Hello,\r\n\r\nI'm updating Redisson lib from version 3.6.5 to 3.7.3. But I saw that Redis Sentinel initialization takes more times in the newer version 3.7.3. Is there's a new parameter to be aware of that could explain/solve this slow initialization ?\r\n\r\nI'm using the default Redis Sentinel configuration unchanged since version 3.6.5.\r\n\r\nRegards,\r\n\r\n\ufeff### Expected behavior\r\nA fast sentinel redis initialization as with Redisson 3.6.5\r\n```\r\n2018-07-12 08:56:36||INFO |c.s.c.c.e.scala.Main Starting EMR connector 0.0.0 (1970-01-01T00:00)\r\n2018-07-12 08:56:37||INFO |a.event.slf4j.Slf4jLogger Slf4jLogger started\r\n2018-07-12 08:56:37||DEBUG|akka.event.EventStream logger log1-Slf4jLogger started\r\n2018-07-12 08:56:37||DEBUG|akka.event.EventStream Default Loggers started\r\n2018-07-12 08:56:37||INFO |org.redisson.Version Redisson 3.6.5\r\n2018-07-12 08:56:37||INFO |o.r.c.SentinelConnectionManager master: redis://10.98.211.37:50100 added\r\n2018-07-12 08:56:37||INFO |o.r.c.SentinelConnectionManager slave: redis://10.98.211.36:50100 added\r\n2018-07-12 08:56:37||INFO |o.r.c.SentinelConnectionManager slave: redis://10.98.211.35:50100 added\r\n2018-07-12 08:56:37||INFO |o.r.c.p.PubSubConnectionPool 1 connections initialized for /10.98.211.36:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.PubSubConnectionPool 1 connections initialized for /10.98.211.35:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.SlaveConnectionPool 32 connections initialized for /10.98.211.36:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.SlaveConnectionPool 32 connections initialized for /10.98.211.35:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.MasterPubSubConnectionPool 1 connections initialized for /10.98.211.37:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.MasterConnectionPool 32 connections initialized for /10.98.211.37:50100\r\n2018-07-12 08:56:37||INFO |org.redisson.Version Redisson 3.6.5\r\n2018-07-12 08:56:37||INFO |o.r.c.SentinelConnectionManager master: redis://10.98.211.37:50100 added\r\n2018-07-12 08:56:37||INFO |o.r.c.SentinelConnectionManager slave: redis://10.98.211.36:50100 added\r\n2018-07-12 08:56:37||INFO |o.r.c.SentinelConnectionManager slave: redis://10.98.211.35:50100 added\r\n2018-07-12 08:56:37||INFO |o.r.c.p.SlaveConnectionPool 32 connections initialized for /10.98.211.36:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.PubSubConnectionPool 1 connections initialized for /10.98.211.35:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.PubSubConnectionPool 1 connections initialized for /10.98.211.36:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.SlaveConnectionPool 32 connections initialized for /10.98.211.35:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.MasterPubSubConnectionPool 1 connections initialized for /10.98.211.37:50100\r\n2018-07-12 08:56:37||INFO |o.r.c.p.MasterConnectionPool 32 connections initialized for /10.98.211.37:50100\r\n```\r\n\r\n### Actual behavior\r\nThe sentinel redis initialization is slower with Redisson 3.7.3. There's a 20 seconds * 2 time delay.\r\n```\r\n2018-07-12 08:19:47||INFO |c.s.c.c.e.scala.Main Starting EMR connector 0.0.0 (1970-01-01T00:00)\r\n2018-07-12 08:19:48||INFO |a.event.slf4j.Slf4jLogger Slf4jLogger started\r\n2018-07-12 08:19:48||DEBUG|akka.event.EventStream logger log1-Slf4jLogger started\r\n2018-07-12 08:19:48||DEBUG|akka.event.EventStream Default Loggers started\r\n2018-07-12 08:19:48||INFO |org.redisson.Version Redisson 3.7.3\r\n2018-07-12 08:19:48||INFO |o.r.c.SentinelConnectionManager master: redis://10.98.211.37:50100 added\r\n2018-07-12 08:19:49||INFO |o.r.c.SentinelConnectionManager slave: redis://10.98.211.36:50100 added\r\n2018-07-12 08:19:49||INFO |o.r.c.SentinelConnectionManager slave: redis://10.98.211.35:50100 added\r\n2018-07-12 08:20:09||INFO |o.r.c.p.PubSubConnectionPool 1 connections initialized for 10.98.211.35/10.98.211.35:50100\r\n2018-07-12 08:20:09||INFO |o.r.c.p.PubSubConnectionPool 1 connections initialized for 10.98.211.36/10.98.211.36:50100\r\n2018-07-12 08:20:09||INFO |o.r.c.p.SlaveConnectionPool 32 connections initialized for 10.98.211.35/10.98.211.35:50100\r\n2018-07-12 08:20:09||INFO |o.r.c.p.SlaveConnectionPool 32 connections initialized for 10.98.211.36/10.98.211.36:50100\r\n2018-07-12 08:20:09||INFO |o.r.c.p.MasterPubSubConnectionPool 1 connections initialized for 10.98.211.37/10.98.211.37:50100\r\n2018-07-12 08:20:09||INFO |o.r.c.p.MasterConnectionPool 32 connections initialized for 10.98.211.37/10.98.211.37:50100\r\n2018-07-12 08:20:09||INFO |org.redisson.Version Redisson 3.7.3\r\n2018-07-12 08:20:09||INFO |o.r.c.SentinelConnectionManager master: redis://10.98.211.37:50100 added\r\n2018-07-12 08:20:09||INFO |o.r.c.SentinelConnectionManager slave: redis://10.98.211.36:50100 added\r\n2018-07-12 08:20:09||INFO |o.r.c.SentinelConnectionManager slave: redis://10.98.211.35:50100 added\r\n2018-07-12 08:20:29||INFO |o.r.c.p.PubSubConnectionPool 1 connections initialized for 10.98.211.35/10.98.211.35:50100\r\n2018-07-12 08:20:29||INFO |o.r.c.p.PubSubConnectionPool 1 connections initialized for 10.98.211.36/10.98.211.36:50100\r\n2018-07-12 08:20:29||INFO |o.r.c.p.SlaveConnectionPool 32 connections initialized for 10.98.211.35/10.98.211.35:50100\r\n2018-07-12 08:20:29||INFO |o.r.c.p.SlaveConnectionPool 32 connections initialized for 10.98.211.36/10.98.211.36:50100\r\n2018-07-12 08:20:29||INFO |o.r.c.p.MasterPubSubConnectionPool 1 connections initialized for 10.98.211.37/10.98.211.37:50100\r\n2018-07-12 08:20:29||INFO |o.r.c.p.MasterConnectionPool 32 connections initialized for 10.98.211.37/10.98.211.37:50100\r\n```\r\n\r\n### Steps to reproduce or test case\r\nCheck connection initialization on Sentinel mode with Redisson on version 3.6.5 vs version 3.7.3\r\n\r\n### Redis version\r\nredis_version:4.0.6\r\n\r\n### Redisson version\r\n3.6.5 -> 3.7.3\r\n\r\n### Redisson configuration\r\nDefault sentinel configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1541", "user": "nsphung", "labels": ["bug"], "created": "2018-07-12 09:07:10", "closed": "2018-07-12 12:50:34", "commits": {"19b3e67441e8b8ea117be50ffc6e07c820bf35ee": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "19b3e67441e8b8ea117be50ffc6e07c820bf35ee", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["633c801da414219772820e8c2847cd800c935704"], "nameRev": "19b3e67441e8b8ea117be50ffc6e07c820bf35ee tags/redisson-2.12.4~4", "commitMessage": "Fixed - slow Redis Sentinel Initialization. #1541\n", "commitDateTime": "2018-07-12 15:52:09", "authoredDateTime": "2018-07-12 15:52:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 60, "deletions": 0, "lines": 60}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(java.net.URI,org.redisson.config.MasterSlaveServersConfig).8.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testSentinelStartup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["19b3e67441e8b8ea117be50ffc6e07c820bf35ee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.registerSentinel(java.net.URI,org.redisson.config.MasterSlaveServersConfig).8.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "HyperLogLog.addAll adds only one element", "body": "", "url": "https://github.com/redisson/redisson/issues/1535", "user": "mrniko", "labels": ["bug"], "created": "2018-07-06 06:58:59", "closed": "2018-07-12 10:37:49", "commits": {"633c801da414219772820e8c2847cd800c935704": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "633c801da414219772820e8c2847cd800c935704", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2c05c92006110cc99f99869893705303fcf17447"], "nameRev": "633c801da414219772820e8c2847cd800c935704 tags/redisson-2.12.4~5", "commitMessage": "Fixed - HyperLogLog.addAll method doesn't add all elements. #1535\n", "commitDateTime": "2018-07-12 13:39:52", "authoredDateTime": "2018-07-12 13:39:52", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonHyperLogLog.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonHyperLogLogTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonHyperLogLog.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonHyperLogLog.addAllAsync(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonHyperLogLogTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonHyperLogLogTest.testAddAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["633c801da414219772820e8c2847cd800c935704"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonHyperLogLog.addAllAsync(java.util.Collection)"]}, {"title": "severe bug !! when sending read operation to new slave loading previous data after failover", "body": "\ufeff### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce or test case\r\n- ReadMode : Slave \r\n- userClusterServer\r\n- ElastiCache Redis Cluster Enabled. \r\n- 1 Master / 1 Slave \r\n\r\nSourceCode------------------------------------------------------------\r\n* i make RedissClient when servlet server start up at frist like below.\r\n* i store redissonClient to static variable.\r\n\r\nConfig config = new Config();\r\nconfig.setCodec(new StringCodec());\r\nconfig.useClusterServers()\r\n          .setScanInterval(2000)\r\n          .addNodeAddress(clusterNodesAddress)\r\n          .setReadMode(ReadMode.SLAVE);\r\nredissonClient = Redisson.create(config);\r\n\r\n* on each servlet request, i send read command like below to redis, in this case, it is problem. \r\nresult = redissonClient.getScript().eval(Mode.READ_ONLY, script, RScript.ReturnType.VALUE), keyList, argvList.toArray());\r\n\r\n* on each servlet request, i send read or write command like below to redis,  in this case, it is ok \r\nresult = redissonClient.getScript().eval(Mode.READ_WRITE, script, RScript.ReturnType.VALUE), keyList, argvList.toArray());\r\n--------------------------------------------------------------------------\r\n1. send read operation each reqeuest on servlet server continusly.\r\n2. read operation is going slave well\r\n3. start failover. \r\n4. master redis is down.\r\n5. occured error for 60 seconds. \r\n6. slave is changed to master. \r\n7. 'cluster nodes' info is changed 1 master.  no slave.\r\n8. redisson recognize changed master correctly and read from master instedad of slave. \r\n9. read operation is going master well.\r\n10. previous down master is up as slave.\r\n11. 'cluster nodes' info is changed 1 master and 1 slave.\r\n11. redisson recognize new slave\r\n------------------problem is started.\r\n12. slave is loading data for syncing with master. it takes 10 minutes to load all data completely.\r\n13. during 10 minutes, servlet server is going strange behavior and throuput is very lower and don't return any exception. i think some threads is hanging around Redisson connection with new slave loading data.\r\n14. actually i expected returning error with timeout. why it is not returning any error until slave is completed loading data.\r\n15. after 10 minutes which completed load data from slave. it is going back to normal and throuput become higer. \r\n16.  however, read operation with Mode.ReadOnly is going both master and slave not going to slave only.\r\n\r\n\r\n* problem.\r\n1. when loading data at slave, redisson is sending read operation to slave. and read opeartion thread is hanging aroud somewhere in redisson.\r\n2. read operation with Mode.ReadOnly is going well to slave only. however after failover, read operation is going both master and slave not going to slave only.\r\n\r\n\r\n### Redis version\r\n4.0.10\r\n\r\n### Redisson version\r\njava 7 latest version 2.12.3 \r\n\r\n### Redisson configuration\r\n- ReadMode : Slave \r\n- userClusterServer\r\n-ElastiCache Redis Cluster Enabled. \r\n- 1 Master / 1 Slave \r\n- default options", "url": "https://github.com/redisson/redisson/issues/1534", "user": "nakamototavarez", "labels": ["bug"], "created": "2018-07-06 05:29:30", "closed": "2019-01-31 14:34:45", "commits": {"9ce12e10f41cb1062d186a0cf1bd351419062965": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "f82246c345209ccfcf497d3ca4a3f6ac5b519de8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 209.00027777777777, "commitsDetails": [{"commitHash": "9ce12e10f41cb1062d186a0cf1bd351419062965", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["29d014a2252e35fbdb2025a083453951a4ffc535"], "nameRev": "9ce12e10f41cb1062d186a0cf1bd351419062965 tags/redisson-2.15.2~10", "commitMessage": "Fixed - continues handling of RedisLoadingException leads to excessive load. #1534\n", "commitDateTime": "2019-01-31 17:35:32", "authoredDateTime": "2019-01-31 17:35:32", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 2, "deletions": 6, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,io.netty.util.concurrent.Future,boolean)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).11.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f82246c345209ccfcf497d3ca4a3f6ac5b519de8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9ce12e10f41cb1062d186a0cf1bd351419062965"], "nameRev": "f82246c345209ccfcf497d3ca4a3f6ac5b519de8 tags/redisson-2.15.2~9", "commitMessage": "Fixed - Fixed - continues handling of RedisLoadingException leads to excessive load. #1534\n", "commitDateTime": "2019-02-01 16:58:49", "authoredDateTime": "2019-02-01 16:58:49", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 12, "deletions": 10, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,io.netty.util.concurrent.Future,boolean)", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,io.netty.util.concurrent.Future,boolean).18.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).11.operationComplete(io.netty.util.concurrent.Future)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).11.operationComplete(io.netty.util.concurrent.Future).1.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9ce12e10f41cb1062d186a0cf1bd351419062965", "f82246c345209ccfcf497d3ca4a3f6ac5b519de8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 29, "deletions": 36, "lines": 65, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27, "UPD": 4, "INS": 8, "MOV": 11, "DEL": 4, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).11.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,io.netty.util.concurrent.Future,boolean)", "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,io.netty.util.concurrent.Future,boolean).18.run(io.netty.util.Timeout)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,org.redisson.api.BatchOptions).11.operationComplete(io.netty.util.concurrent.Future).1.run(io.netty.util.Timeout)"]}, {"title": "Lot of connections remain in TIME_WAIT state after Redisson shutdown", "body": "", "url": "https://github.com/redisson/redisson/issues/1532", "user": "mrniko", "labels": ["bug"], "created": "2018-07-05 11:44:11", "closed": "2018-07-05 13:08:21", "commits": {"ef087eb008b70b8ab63a09ec966b3416aca550b5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ef087eb008b70b8ab63a09ec966b3416aca550b5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e8dfd1e46c1d921e62400e01360295caec33917e"], "nameRev": "ef087eb008b70b8ab63a09ec966b3416aca550b5 tags/redisson-2.12.4~10", "commitMessage": "Fixed - Lot of connections remain in TIME_WAIT state after Redisson shutdown. #1532\n", "commitDateTime": "2018-07-05 16:10:17", "authoredDateTime": "2018-07-05 16:10:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisConnection.java", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 5, "deletions": 6, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient.shutdownAsync()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.setClosed(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.forceFastReconnectAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisConnection.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.closeAsync()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdown(long,long,java.util.concurrent.TimeUnit)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ef087eb008b70b8ab63a09ec966b3416aca550b5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 13, "lines": 35, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 15, "UPD": 3, "INS": 5, "MOV": 6, "DEL": 1, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client", "redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/client/protocol"], "changesInPackagesSPOON": ["org.redisson.client.RedisConnection.setClosed(boolean)", "org.redisson.connection.MasterSlaveConnectionManager.shutdown(long,long,java.util.concurrent.TimeUnit)", "org.redisson.client.protocol", "org.redisson.client.RedisConnection.close()", "org.redisson.client.RedisConnection.closeAsync()", "org.redisson.client.RedisConnection.forceFastReconnectAsync()", "org.redisson.client.RedisClient.shutdownAsync()"]}, {"title": "why 'readonly' command is going to master everytime i send read operation at ReadMode.Master_Slave", "body": "\ufeff### Expected behavior\r\n\r\n1. 'readonly' command should not go to master everytime i send read operation.\r\n2. 'readonly' command is going to master or slave only onetime at first when making connection.\r\n\r\n### Actual behavior\r\n1. 'readonly' command is going to master everytime when i send read operation.\r\n2. because of added 'readonly' command, master is not distributed throughput\r\n\r\n### Steps to reproduce or test case\r\n1. make Redissonclient with ReadMode.MasterSlave\r\n2. send read operation \r\nredissonClient.eval(Mode.ReadOnly, \"return redis.call('get', 'something')\"...\r\n3. 'monitor' in redis console.\r\nmaster node=>\r\n'readonly'\r\n[lua] return redis.call('get'.....\r\nslave node =>\r\n[lua] return redis.call('get'.....\r\n\r\n### Redis version\r\n4.0.10\r\n\r\n### Redisson version\r\n2.12.3  6/28 latest version with java7\r\n\r\n### Redisson configuration\r\nAWS elasticache redis cluster enabled\r\nShard : 1 master / 1 slave\r\nuseClusterMode()\r\nReadMode : Master_Slave\r\ncommand : eval(Mode.ReadOnly, \"return redis.call('get',......\r\n\r\n\r\n** actually, read operation is distributed propery, but master node get plus 'readonly' command. even though 'readonly' comman is not working at master node and not affecting anything functionally.\r\nhowever this is big problem which increase throughput and cpu utilization on master node. finally, it is same as not distributed", "url": "https://github.com/redisson/redisson/issues/1531", "user": "nakamototavarez", "labels": ["bug"], "created": "2018-07-04 14:04:18", "closed": "2018-07-17 13:46:29", "commits": {"84e9a8c309f163e04b3040fda3056f79e7e2afbe": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "84e9a8c309f163e04b3040fda3056f79e7e2afbe", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fe49988f2a3e5be57e2dfb1c5bce14ce3f538a50"], "nameRev": "84e9a8c309f163e04b3040fda3056f79e7e2afbe tags/redisson-2.12.5~6", "commitMessage": "Fixed - readonly command shouldn't be executed on master node used as slave. #1531\n", "commitDateTime": "2018-07-17 16:48:17", "authoredDateTime": "2018-07-17 16:48:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.URI,boolean,org.redisson.api.NodeType)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["84e9a8c309f163e04b3040fda3056f79e7e2afbe"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.addSlave(java.net.URI,boolean,org.redisson.api.NodeType)"]}, {"title": "RedissonRateLimiter acquire() method blocks forever", "body": "The acquire method should block until a permit is available, but it blocks indefinitely instead of the remaining time until a new permit becomes available. From my testing I have found that it doesn't acquire a permit when one should be available based on the rate and interval I tested. If I set the rate to 1 every 5 seconds, it should take a loop of 10 single permit acquires approximately 50 seconds to complete. Instead it acquires the first permit, then blocks forever on the next acquires call.\r\n", "url": "https://github.com/redisson/redisson/issues/1524", "user": "teagy", "labels": ["bug"], "created": "2018-06-28 21:12:00", "closed": "2018-07-03 11:13:50", "commits": {"dce544c18af983702ec1a23cb1bd4b428ae9d00a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "dce544c18af983702ec1a23cb1bd4b428ae9d00a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1bdc88cb934645dab2a1d935fe23804dbeba9b30"], "nameRev": "dce544c18af983702ec1a23cb1bd4b428ae9d00a tags/redisson-2.12.4~12", "commitMessage": "Fixed - RedissonRateLimiter acquire() blocks forever #1524\n", "commitDateTime": "2018-07-03 14:15:55", "authoredDateTime": "2018-07-03 14:15:55", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRateLimiter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRateLimiterTest.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRateLimiter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiter.tryAcquireAsync(long,org.redisson.misc.RPromise,long).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRateLimiterTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiterTest.testAcquire()", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dce544c18af983702ec1a23cb1bd4b428ae9d00a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRateLimiter.tryAcquireAsync(long,org.redisson.misc.RPromise,long).2.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Using Redis Transaction MULTI crashes in java.lang.NumberFormatException: For input string: \"QUEUED\"", "body": "\ufeff### Expected behavior\r\nno expcetion\r\n### Actual behavior\r\njava.lang.NumberFormatException: For input string: \"QUEUED\"\r\n\tat org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:343)\r\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:170)\r\n\tat org.redisson.command.CommandBatchService.execute(CommandBatchService.java:361)\r\n\tat org.redisson.RedissonBatch.execute(RedissonBatch.java:267)\r\n\tat som.executors.basic.RedissonTest.transactionTest(RedissonTest.java:38)\r\nCaused by: java.lang.NumberFormatException: For input string: \"QUEUED\"\r\n\tat sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)\r\n\tat sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)\r\n\tat java.lang.Double.parseDouble(Double.java:538)\r\n\tat java.lang.Double.valueOf(Double.java:502)\r\n\tat org.redisson.client.protocol.convertor.DoubleReplayConvertor.convert(DoubleReplayConvertor.java:25)\r\n\tat org.redisson.client.protocol.convertor.DoubleNullSafeReplayConvertor.convert(DoubleNullSafeReplayConvertor.java:27)\r\n\tat org.redisson.client.protocol.convertor.DoubleNullSafeReplayConvertor.convert(DoubleNullSafeReplayConvertor.java:23)\r\n\tat org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:434)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:295)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeCommandBatch(CommandDecoder.java:229)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:135)\r\n\r\n### Steps to reproduce or test case\r\n        RBatch batch = redissonClient.createBatch(BatchOptions.defaults().executionMode(BatchOptions.ExecutionMode.REDIS_WRITE_ATOMIC));\r\n\r\n        batch.getScoredSortedSet(\"myZKey\").addScoreAsync(\"abc\", 1d);\r\n\r\n        batch.execute();\r\n\r\n\r\n\r\n### Redis version\r\nredis_version:4.0.7\r\n\r\n### Redisson version\r\nRedisson 3.7.2\r\n\r\n### Redisson configuration\r\n        Config config = new Config();\r\n        config.setCodec(new StringCodec());\r\n        config.useSingleServer()\r\n                .setAddress(\"redis://localhost:6379\")\r\n                .setConnectionMinimumIdleSize(1)\r\n                .setConnectionPoolSize(1);\r\n\r\n        RedissonClient redissonClient = Redisson.create(config);\r\n", "url": "https://github.com/redisson/redisson/issues/1522", "user": "adrianiacobghiula", "labels": ["bug"], "created": "2018-06-27 17:09:19", "closed": "2018-08-08 12:37:17", "commits": {"8238ad47fc253d82aebe2f31f796419ea0a6db54": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "84dca69db2275b9852c2dd5526a06a2c9a8a60d8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "8238ad47fc253d82aebe2f31f796419ea0a6db54", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ef087eb008b70b8ab63a09ec966b3416aca550b5"], "nameRev": "8238ad47fc253d82aebe2f31f796419ea0a6db54 tags/redisson-2.12.4~9", "commitMessage": "Fixed - Batch in ExecutionMode.REDIS_WRITE_ATOMIC and ExecutionMode.REDIS_READ_ATOMIC modes throws NumberFormatException exception #1522\n", "commitDateTime": "2018-07-09 16:08:17", "authoredDateTime": "2018-07-09 16:08:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean,io.netty.channel.Channel)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 9, "UPD": 0, "INS": 7, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testConvertor()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "84dca69db2275b9852c2dd5526a06a2c9a8a60d8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b325d3ca09c6d8afc04e3dbddd6985532d41d3d4"], "nameRev": "84dca69db2275b9852c2dd5526a06a2c9a8a60d8 tags/redisson-3.8.0~16^2~11", "commitMessage": "Fixed - Batch in ExecutionMode.REDIS_WRITE_ATOMIC and ExecutionMode.REDIS_READ_ATOMIC returns QUEUED instead of real result #1522\n", "commitDateTime": "2018-08-08 15:38:41", "authoredDateTime": "2018-08-08 15:38:41", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.sendCommand(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "TOT": 6, "UPD": 2, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync(org.redisson.api.BatchOptions)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testConvertor()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8238ad47fc253d82aebe2f31f796419ea0a6db54", "84dca69db2275b9852c2dd5526a06a2c9a8a60d8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 25, "deletions": 20, "lines": 45, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 31, "UPD": 4, "INS": 22, "MOV": 3, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean,io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "org.redisson.command.CommandBatchService.sendCommand(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "org.redisson.command.CommandBatchService.executeAsync(org.redisson.api.BatchOptions)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean)", "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List,boolean)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"]}, {"title": "CustomObjectInputStream doesnt work for proxied classes", "body": "\ufeff### Expected behavior\r\nClassloader passed into CustomObjectInputStream is not used to load proxied classes.\r\nIn my case redisson cant deserialize org.springframework.security.oauth2.client.token.AccessTokenRequest class\r\n### Actual behavior\r\nFollowing exception is thrown during class loading:\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.security.oauth2.client.token.AccessTokenRequest\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat java.lang.Class.forName0(Native Method)\r\n\tat java.lang.Class.forName(Class.java:348)\r\n\tat java.io.ObjectInputStream.resolveProxyClass(ObjectInputStream.java:698)\r\n\tat java.io.ObjectInputStream.readProxyDesc(ObjectInputStream.java:1559)\r\n\tat java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1515)\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1774)\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)\r\n\tat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2000)\r\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1924)\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1801)\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)\r\n\tat java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n4.x\r\n\r\n### Redisson version\r\n3.6.5\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1518", "user": "heikih", "labels": ["bug"], "created": "2018-06-26 10:25:11", "closed": "2018-06-26 14:48:57", "commits": {"6b25a23a3d93479635736aadad87649c92946028": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6b25a23a3d93479635736aadad87649c92946028", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b7ac9368c3cf4503e9114d6b4c237f1ffce0df18"], "nameRev": "6b25a23a3d93479635736aadad87649c92946028 tags/redisson-2.12.3~4", "commitMessage": "Fixed - SerializationCodec doesn't support proxied classes. #1518\n", "commitDateTime": "2018-06-26 17:50:53", "authoredDateTime": "2018-06-26 17:50:53", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/CustomObjectInputStream.java", "insertions": 16, "deletions": 1, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CustomObjectInputStream.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.CustomObjectInputStream.resolveProxyClass(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.CustomObjectInputStream", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6b25a23a3d93479635736aadad87649c92946028"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 1, "lines": 17, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.CustomObjectInputStream.resolveProxyClass(java.lang.String[])", "org.redisson.codec.CustomObjectInputStream"]}, {"title": "Missing PubSub messages when using connection ping", "body": "\ufeff### Expected behavior\r\nsetPingConnectionInterval should send periodic ping messages and keep channels alive, but this must not affect any other type of messages on channels.\r\n\r\n### Actual behavior\r\nWhen using setPingConnectionInterval some messages will not be delivered to listeners after being published. I have a test code which can reliably reproduce this issue:\r\n```\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RTopic;\r\nimport org.redisson.api.RedissonClient;\r\nimport org.redisson.codec.SerializationCodec;\r\nimport org.redisson.config.Config;\r\nimport org.redisson.config.SubscriptionMode;\r\n\r\nimport java.util.UUID;\r\nimport java.util.concurrent.ConcurrentSkipListSet;\r\n\r\npublic class PlainPubSubTest {\r\n\r\n    public static void main(String[] args) throws InterruptedException {\r\n        ConcurrentSkipListSet<String> sentItems = new ConcurrentSkipListSet<>();\r\n        ConcurrentSkipListSet<String> receivedItems = new ConcurrentSkipListSet<>();\r\n\r\n        System.out.println(\"Staring test\");\r\n\r\n        RedissonClient redissonClient = redissonClient(configSentinel());\r\n\r\n        RTopic<String> eventsTopic = redissonClient.getTopic(\"eventsTopic\");\r\n        eventsTopic.addListener((channel, msg) -> receivedItems.add(msg));\r\n\r\n        System.out.println(\"Starting sending loop\");\r\n        for(int i = 0; i<1000; i++){\r\n            final String message = UUID.randomUUID().toString();\r\n            eventsTopic.publish(message);\r\n            sentItems.add(message);\r\n            Thread.sleep(10);\r\n        }\r\n\r\n        System.out.println(\"Sent: \" + sentItems.size() + \", got: \" + receivedItems.size());\r\n        Thread.sleep(1000);\r\n        System.out.println(\"Sent: \" + sentItems.size() + \", got: \" + receivedItems.size());\r\n    }\r\n\r\n    private static RedissonClient redissonClient(Config config){\r\n        return Redisson.create(config);\r\n    }\r\n\r\n    private static Config configSentinel(){\r\n        Config config = new Config();\r\n        config.setCodec(new SerializationCodec());\r\n        String password = \"*****************\";\r\n        String masterName = \"my-master-name\";\r\n        String[] sentinelAddresses = new String[]{\"redis://localhost:26001\", \"redis://localhost:26002\", \"redis://localhost:26003\"};\r\n        Integer connectionTimeout = 10000;\r\n        int pingTimeout = 5000;\r\n        int reconnectionTimeout = 5000;\r\n        int connectionPoolSize = 10;\r\n        int connectionPoolMinSize = 10;\r\n        int connectionPingInterval = 50; //Changing to 0 eliminates issue\r\n        config.useSentinelServers()\r\n                .setPassword(password)\r\n                .setMasterName(masterName)\r\n                .addSentinelAddress(sentinelAddresses)\r\n                .setConnectTimeout(connectionTimeout)\r\n                .setPingTimeout(pingTimeout)\r\n                .setPingConnectionInterval(connectionPingInterval)\r\n                .setSubscriptionMode(SubscriptionMode.MASTER)\r\n                .setFailedSlaveReconnectionInterval(reconnectionTimeout)\r\n                .setMasterConnectionMinimumIdleSize(connectionPoolMinSize)\r\n                .setMasterConnectionPoolSize(connectionPoolSize);\r\n        return config;\r\n    }\r\n}\r\n```\r\n\r\nOutput of this code will produce varying results each time, but it will never get all sent messages, like this:\r\n```\r\nStaring test\r\nStarting sending loop\r\nSent: 1000, got: 640\r\nSent: 1000, got: 640\r\n```\r\n\r\nHowever if connectionPingInterval is set to 0 (disabled) issue is completely eliminated, like this:\r\n```\r\nStaring test\r\nStarting sending loop\r\nSent: 1000, got: 1000\r\nSent: 1000, got: 1000\r\n```\r\n\r\n### Redis version\r\n```\r\nredis_version:4.0.6\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:f1060815dd32471a\r\nredis_mode:standalone\r\nos:Linux 3.10.0-514.26.1.el7.x86_64 x86_64\r\n```\r\n\r\n### Redisson version\r\n3.7.2\r\n\r\n### Redisson configuration\r\nVisible in test case", "url": "https://github.com/redisson/redisson/issues/1497", "user": "mmatosevic", "labels": ["bug"], "created": "2018-06-19 16:01:13", "closed": "2019-01-29 10:18:33", "commits": {"979d11ae0e6982c0cdd4100d01435bd5c2ae3919": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "ef94818b83b800fb10d61210330f2f6414baa896": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "2eee782be804d2b185bc5030ead5d8701db57d11": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "db19103b7947878fec5609a5c4b7dc4c2b63d25b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "31d47c2517a31877b2140125e511fb125df1396b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "acf2a82f4a6a5d191e1518c0b1bea08bbc34fec6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "13abe16511bedfdbce4ca36e1df931c3a230dbba": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 223.00027777777777, "commitsDetails": [{"commitHash": "979d11ae0e6982c0cdd4100d01435bd5c2ae3919", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1d7252555a7a1885e672fe2485756c5b330129fd"], "nameRev": "979d11ae0e6982c0cdd4100d01435bd5c2ae3919 tags/redisson-2.12.3~11", "commitMessage": "Fixed - Missing PubSub messages when pingConnectionInterval setting is specified. #1497\n", "commitDateTime": "2018-06-21 15:07:45", "authoredDateTime": "2018-06-21 15:07:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/PingConnectionHandler.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/{QueueObjectDecoder.java => ListObjectDecoder.java}", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/misc/RedissonPromise.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 29, "deletions": 0, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.sync(org.redisson.client.protocol.RedisStrictCommand,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PingConnectionHandler.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.PingConnectionHandler.sendPing(io.netty.channel.ChannelHandlerContext).1.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ListObjectDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.QueueObjectDecoder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.QueueObjectDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListObjectDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonPromise.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.RedissonPromise.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testPing()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ef94818b83b800fb10d61210330f2f6414baa896", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["088e93b960772720766bcf49a57dc8de7d71ecdd"], "nameRev": "ef94818b83b800fb10d61210330f2f6414baa896 tags/redisson-2.12.4~7", "commitMessage": "Fixed - Missing PubSub messages when pingConnectionInterval setting is specified. #1497\n", "commitDateTime": "2018-07-11 14:33:56", "authoredDateTime": "2018-07-11 14:33:56", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisConnection.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 16, "deletions": 14, "lines": 30}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 65, "deletions": 23, "lines": 88}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/CommandData.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/CommandsData.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/QueueCommand.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).2.run()", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 23, "UPD": 2, "INS": 1, "MOV": 18, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.ChannelHandlerContext,org.redisson.client.protocol.QueueCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandData.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.CommandData.isExecuted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandsData.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.CommandsData.isExecuted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueueCommand.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.isExecuted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2eee782be804d2b185bc5030ead5d8701db57d11", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a66e82b544cc23e303c738391dbdbfb096b98b66"], "nameRev": "2eee782be804d2b185bc5030ead5d8701db57d11 tags/redisson-2.14.0~30", "commitMessage": "Fixed - DecoderException when using connection ping #1497\n", "commitDateTime": "2018-10-18 13:41:46", "authoredDateTime": "2018-10-18 13:41:46", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "db19103b7947878fec5609a5c4b7dc4c2b63d25b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6d20c1356cd72e7f13962bc42dde8e3a0beb11ae"], "nameRev": "db19103b7947878fec5609a5c4b7dc4c2b63d25b tags/redisson-2.14.0~26", "commitMessage": "Fixed - DecoderException when using connection ping #1497\n", "commitDateTime": "2018-10-22 14:44:49", "authoredDateTime": "2018-10-22 14:44:49", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "31d47c2517a31877b2140125e511fb125df1396b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["baf1848dc59dc0676c04a91f7542472a4495b594"], "nameRev": "31d47c2517a31877b2140125e511fb125df1396b tags/redisson-2.14.0~13", "commitMessage": "Fixed - DecoderException when using connection ping #1497\n", "commitDateTime": "2018-10-25 17:09:49", "authoredDateTime": "2018-10-25 17:09:49", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "acf2a82f4a6a5d191e1518c0b1bea08bbc34fec6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["040c659f30116c3680db93501a098d0336c83548"], "nameRev": "acf2a82f4a6a5d191e1518c0b1bea08bbc34fec6 tags/redisson-2.14.1~48", "commitMessage": "Fixed - CommandDecoder exception while using PubSub with ping. #1497\n", "commitDateTime": "2018-11-04 15:55:12", "authoredDateTime": "2018-11-04 15:55:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "13abe16511bedfdbce4ca36e1df931c3a230dbba", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bdb5e1cf43ca6532096dee98611af2417dc00b0a"], "nameRev": "13abe16511bedfdbce4ca36e1df931c3a230dbba tags/redisson-2.15.0~30", "commitMessage": "Fixed - CommandDecoder throws IndexOutOfBoundsException if pingConnectionInterval param is used #1497\nFixed - Unable to send command! error if pingConnectionInterval param is used #1632\n", "commitDateTime": "2018-12-24 10:10:20", "authoredDateTime": "2018-12-24 10:10:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisPubSubConnection.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 50, "deletions": 94, "lines": 144}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandsQueue.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/State.java", "insertions": 15, "deletions": 11, "lines": 26}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/StateLevel.java", "insertions": 10, "deletions": 17, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisPubSubConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisPubSubConnection.async(org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,boolean)", "TOT": 22, "UPD": 8, "INS": 0, "MOV": 7, "DEL": 7}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List,boolean)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 42, "UPD": 8, "INS": 7, "MOV": 19, "DEL": 8}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.ChannelHandlerContext,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "CommandsQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendNextCommand(io.netty.channel.Channel)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "State.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.State.decLevel()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.State.incLevel()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.State.resetLevel()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.State.getLevel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StateLevel.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.StateLevel.getLastListSize()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.StateLevel", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.setLastListSize(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.getLastList()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.setLastList(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.isFull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ef94818b83b800fb10d61210330f2f6414baa896", "2eee782be804d2b185bc5030ead5d8701db57d11", "acf2a82f4a6a5d191e1518c0b1bea08bbc34fec6"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 102, "deletions": 42, "lines": 144, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 54, "UPD": 6, "INS": 15, "MOV": 27, "DEL": 6, "spoonFilesChanged": 7, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler", "redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "org.redisson.client.handler.CommandPubSubDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.protocol.CommandData.isExecuted()", "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.ChannelHandlerContext,org.redisson.client.protocol.QueueCommand)", "org.redisson.client.handler.CommandPubSubDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).2.run()", "org.redisson.client.protocol.isExecuted()", "org.redisson.client.protocol.CommandsData.isExecuted()", "org.redisson.client.handler.CommandPubSubDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.protocol", "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.client.handler.CommandDecoder.decodeCommand(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand)"]}, {"title": "Acquire Methods in RedissonRateLimiter Are Not Functional", "body": "Issue since Redisson 3.7.1\r\n\r\nLine 125 of RedissonRateLimiter.java throws a null pointer exception when the time unit  parameter is null. When you call the acquire methods it passes a null for that parameter. Basic unit tests for the acquire method would have caught this.\r\n\r\n` \r\n@Override\r\npublic RFuture<Boolean> tryAcquireAsync(long permits, long timeout, TimeUnit unit) {\r\n        RPromise<Boolean> promise = new RedissonPromise<Boolean>();\r\n        tryAcquireAsync(permits, promise, unit.toMillis(timeout));\r\n        return promise; \r\n}\r\n`\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1493", "user": "teagy", "labels": ["bug"], "created": "2018-06-19 01:52:08", "closed": "2018-06-19 08:11:34", "commits": {"cdfcb06b410646834aecb8ce6d1d32c6e807e425": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cdfcb06b410646834aecb8ce6d1d32c6e807e425", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["598a01283e2583381b66429dfd88c24ec4b3411d"], "nameRev": "cdfcb06b410646834aecb8ce6d1d32c6e807e425 tags/redisson-2.12.3~19", "commitMessage": "Fixed - RRateLimiter.acquire throws NPE #1493\n", "commitDateTime": "2018-06-19 11:12:51", "authoredDateTime": "2018-06-19 11:12:51", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRateLimiter.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRateLimiterTest.java", "insertions": 13, "deletions": 3, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRateLimiter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiter.tryAcquireAsync(long,long,java.util.concurrent.TimeUnit)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonRateLimiterTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRateLimiterTest.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRateLimiterTest.testConcurrency()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonRateLimiterTest.testAcquire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRateLimiterTest.testConcurrency().1.run()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cdfcb06b410646834aecb8ce6d1d32c6e807e425"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRateLimiter.tryAcquireAsync(long,long,java.util.concurrent.TimeUnit)"]}, {"title": "Warn:\"Invocation of destroy method 'close' failed on bean with name 'jCacheCacheManager'\"", "body": "\ufeff### Expected behavior\r\nI imported Redission in spring boot using distributedLock,but the log always show this WARN \r\n### Actual behavior\r\ncollection-web 2018-06-13 20:50:24.428 WARN  --- [Thread-7] org.springframework.beans.factory.support.DisposableBeanAdapter Line:371 - Invocation of destroy method 'close' failed on bean with name 'jCacheCacheManager'\r\njava.lang.NullPointerException: null\r\n\tat org.redisson.jcache.JCacheManager.close(JCacheManager.java:368)\r\n\tat org.redisson.jcache.JCachingProvider.close(JCachingProvider.java:183)\r\n\tat org.redisson.jcache.JCacheManager.close(JCacheManager.java:360)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:364)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:287)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:961)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)\r\n\tat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.destroySingletons(FactoryBeanRegistrySupport.java:230)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:968)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1030)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1006)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:958)\r\n\tat org.springframework.boot.actuate.endpoint.ShutdownEndpoint$1.run(ShutdownEndpoint.java:74)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n### Steps to reproduce or test case\r\n\r\n### Redis version\r\n\r\n### Redisson version\r\n3.7.0\r\n### Redisson configuration\r\nthis is my configuration class:\r\n/**\r\n     *\r\n     * @return\r\n     */\r\n    @Bean\r\n    RedissonClient redissonClient() {\r\n        List<String> nodeList = redisClusterConfigProperties.getNodes();\r\n        Config config = new Config();\r\n        ClusterServersConfig clusterServersConfig = config.useClusterServers();\r\n        for (String node : nodeList) {\r\n            clusterServersConfig = config.useClusterServers().addNodeAddress(\"redis://\" + node);\r\n        }\r\n        clusterServersConfig.setScanInterval(2000);\r\n        return Redisson.create(config);\r\n    }\r\n\r\n    @Bean\r\n    CacheManager cacheManager(RedissonClient redissonClient) {\r\n        Map<String, CacheConfig> config = new HashMap<>();\r\n        config.put(\"testMap\", new CacheConfig(24*60*1000, 12*60*1000));\r\n        return new RedissonSpringCacheManager(redissonClient, config);\r\n    }", "url": "https://github.com/redisson/redisson/issues/1489", "user": "Rorschach7H", "labels": ["bug"], "created": "2018-06-14 01:49:15", "closed": "2018-06-14 11:11:39", "commits": {"7543d53507e0a457cf4b7428985e29f2e0868785": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7543d53507e0a457cf4b7428985e29f2e0868785", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bf84090f63dde95b51914ed954191b46703a4424"], "nameRev": "7543d53507e0a457cf4b7428985e29f2e0868785 tags/redisson-2.12.2~1", "commitMessage": "Fixed - NPE during JCacheManager.close method invocation. #1489\n", "commitDateTime": "2018-06-14 14:13:20", "authoredDateTime": "2018-06-14 14:13:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/jcache/JCacheManager.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JCacheManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCacheManager.close()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7543d53507e0a457cf4b7428985e29f2e0868785"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/jcache"], "changesInPackagesSPOON": ["org.redisson.jcache.JCacheManager.close()"]}, {"title": "Occasional  ERROR:Search domain query failed.  ", "body": "\r\n### Expected behavior\r\n\u9879\u76ee\u80fd\u591f\u987a\u5229\u542f\u52a8\u3002\r\n### Actual behavior\r\n\u5076\u5c14\u4f1a\u629b\u51faSearch domain query failed.\u5f02\u5e38\u4fe1\u606f\u5bfc\u81f4\u9879\u76ee\u542f\u52a8\u4e0d\u4e86\r\nSteps to reproduce or test case\r\n\u9879\u76ee\u91c7\u7528\u7684spring boot1.5.3\u3002\r\n### Redis version\r\nredis 4.0.2\r\n### Redisson version\r\nRedisson 3.6.5\r\nRedisson configuration\r\n```\r\napplication.yml\r\nredisson:\r\n  address: redis://www.chasel.com:6279\r\n  timeout: 3000\r\n  connectionPoolSize: 64\r\n  connectionMinimumIdleSize: 10\r\n  reconnectionTimeout: 3000\r\n  threads: 10\r\n  codec: org.redisson.codec.JsonJacksonCodec\r\n  nettyThreads: 10\r\n  transportMode: NIO\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  database: 0\r\nJava Code\r\npublic class RedissonConfig {\r\n\r\n\tprivate String address;\r\n\tprivate int connectionMinimumIdleSize;\r\n\tprivate int idleConnectionTimeout;\r\n\tprivate int pingTimeout;\r\n\tprivate int connectTimeout;\r\n\tprivate int timeout;\r\n\tprivate int reconnectionTimeout;\r\n\tprivate int connectionPoolSize;\r\n\tprivate int database;\r\n\tprivate int threads; // \u5f53\u524d\u5904\u7406\u6838\u6570\u91cf * 2\r\n\tprivate int nettyThreads;\r\n\tprivate String codec;\r\n\t@ConditionalOnProperty(name = \"redisson.address\")\r\n\t@Bean(destroyMethod = \"shutdown\")\r\n\tRedissonClient redisson() throws Exception {\r\n\t\tConfig config = new Config();\r\n\t\tconfig.useSingleServer().setAddress(address)\r\n\t\t\t\t.setConnectionMinimumIdleSize(connectionMinimumIdleSize).setIdleConnectionTimeout(idleConnectionTimeout)\r\n\t\t\t\t.setPingTimeout(pingTimeout).setConnectTimeout(connectTimeout).setTimeout(timeout)\r\n\t\t\t\t.setConnectionPoolSize(connectionPoolSize).setDatabase(database)\r\n\t\t\t\t;\r\n\t\tconfig.setThreads(threads);\r\n\t\tconfig.setTransportMode(TransportMode.NIO);\r\n\t\tconfig.setNettyThreads(nettyThreads);\r\n\t\t// SingleServerConfig singleServerConfig =\r\n\t\t// config.useSingleServer().setAddress();\r\n\t\t// Config config = Config.fromJSON(new\r\n\t\t// ClassPathResource(RedisContants.RedissonConstants.REDISSON_JSON_CONFIG_FILE_NAME).getFile());\r\n\t\treturn Redisson.create(config);\r\n\t}\r\n\r\n\t@ConditionalOnProperty(name = \"redisson.address\")\r\n\t@Bean\r\n\tRedissonReactiveClient RedissonReactive() throws IOException {\r\n\t\tConfig config = new Config();\r\n\t\tconfig.useSingleServer().setAddress(address)\r\n\t\t\t\t.setConnectionMinimumIdleSize(connectionMinimumIdleSize).setIdleConnectionTimeout(idleConnectionTimeout)\r\n\t\t\t\t.setPingTimeout(pingTimeout).setConnectTimeout(connectTimeout).setTimeout(timeout)\r\n\t\t\t\t.setConnectionPoolSize(connectionPoolSize).setDatabase(database)\r\n\t\t\t\t;\r\n\t\tconfig.setThreads(threads);\r\n\t\tconfig.setTransportMode(TransportMode.NIO);\r\n\t\tconfig.setNettyThreads(nettyThreads);\r\n\t\treturn Redisson.createReactive(config);\r\n\t}\r\n```\r\n### Excpetion:\r\n```\r\norg.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redissonUtil': Unsatisfied dependency expressed through method 'setRedissonReactiveClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'RedissonReactive' defined in class path resource [com/sst/common/config/RedissonConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonReactiveClient]: Factory method 'RedissonReactive' threw exception; nested exception is io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'www.chasel.com' failed to resolve 'www.chasel.com' after 2 queries \r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:667)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:314)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)\r\n\tat com.sst.AdminApiApplication.main(AdminApiApplication.java:13)\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'RedissonReactive' defined in class path resource [com/sst/common/config/RedissonConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonReactiveClient]: Factory method 'RedissonReactive' threw exception; nested exception is io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'www.chasel.com' failed to resolve 'www.chasel.com' after 2 queries \r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:659)\r\n\t... 19 common frames omitted\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonReactiveClient]: Factory method 'RedissonReactive' threw exception; nested exception is io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'www.chasel.com' failed to resolve 'www.chasel.com' after 2 queries \r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)\r\n\t... 31 common frames omitted\r\nCaused by: io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'www.chasel.com' failed to resolve 'www.chasel.com' after 2 queries \r\n\tat io.netty.resolver.dns.DnsNameResolverContext.finishResolve(DnsNameResolverContext.java:728)\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.tryToFinishResolve(DnsNameResolverContext.java:670)\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:306)\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:295)\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.access$700(DnsNameResolverContext.java:60)\r\n\tat io.netty.resolver.dns.DnsNameResolverContext$3.operationComplete(DnsNameResolverContext.java:346)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:485)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:424)\r\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:121)\r\n\tat io.netty.resolver.dns.DnsQueryContext.setFailure(DnsQueryContext.java:223)\r\n\tat io.netty.resolver.dns.DnsQueryContext.access$300(DnsQueryContext.java:42)\r\n\tat io.netty.resolver.dns.DnsQueryContext$4.run(DnsQueryContext.java:162)\r\n\tat io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:125)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: io.netty.resolver.dns.DnsNameResolverTimeoutException: [/10.3.0.28:53] query timed out after 5000 milliseconds (no stack trace available)\r\n```", "url": "https://github.com/redisson/redisson/issues/1486", "user": "ChaselCho", "labels": ["bug"], "created": "2018-06-13 07:01:10", "closed": "2019-01-18 14:05:47", "commits": {"14eeed15f6b7b508dd206d40dec7c80377e6c9db": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 219.00027777777777, "commitsDetails": [{"commitHash": "14eeed15f6b7b508dd206d40dec7c80377e6c9db", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7d934dc1dd7d59a6fd879d72ba9c8551ea7fddaf"], "nameRev": "14eeed15f6b7b508dd206d40dec7c80377e6c9db tags/redisson-2.13.2~4", "commitMessage": "Fixed - DNSNameResolver bug (workaround). #1646 #1625 #1486\n", "commitDateTime": "2018-10-06 11:07:42", "authoredDateTime": "2018-10-06 11:07:42", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/DnsAddressResolverGroupFactory.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/GroupAddressResolver.java", "insertions": 124, "deletions": 0, "lines": 124}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/MultiDnsAddressResolverGroup.java", "insertions": 74, "deletions": 0, "lines": 74}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DnsAddressResolverGroupFactory.java", "spoonMethods": []}, {"spoonFilePath": "GroupAddressResolver.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.GroupAddressResolver", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MultiDnsAddressResolverGroup.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.MultiDnsAddressResolverGroup", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9d3d4a856222f4f9b4d3923e9a2afbeb1c1d5633"], "nameRev": "705511b53c7cbbbf31eefc9bd5f4022199ec6c3b tags/redisson-2.15.1~5", "commitMessage": "Fixed - DNSNameResolver bug (workaround). #1646 #1625 #1486 #1693\n", "commitDateTime": "2019-01-18 17:06:33", "authoredDateTime": "2019-01-18 17:06:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MultiDnsAddressResolverGroupFactory.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/GroupAddressResolver.java", "insertions": 0, "deletions": 124, "lines": 124}, {"filePath": "redisson/src/main/java/org/redisson/connection/dns/MultiDnsAddressResolverGroup.java", "insertions": 0, "deletions": 80, "lines": 80}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MultiDnsAddressResolverGroupFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MultiDnsAddressResolverGroupFactory.create(java.lang.Class,io.netty.resolver.dns.DnsServerAddressStreamProvider)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "GroupAddressResolver.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.GroupAddressResolver", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MultiDnsAddressResolverGroup.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.dns.MultiDnsAddressResolverGroup", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Cluster Mode: Master fails over to slave, when slave fails over again redisson client retains connection to previous dead node.", "body": "\ufeff### Expected behavior\r\nRedisson is able to send read and write commands to the 2nd newly elected Master.\r\n### Actual behavior\r\nThis is the topology: \r\n`\r\n71a80a4554db9893e194545a45e4caeaf159a726 10.45.248.93:6379 master - 0 1527887027479 76 connected 0-5460 01f30ae68e733f9b6394efd05577c4d1d6ab011a 10.45.247.71:6379 slave 22b3f1ec6e436d206c2757a9fbf97b325d753486 0 1527887028983 93 connected 22b3f1ec6e436d206c2757a9fbf97b325d753486 10.45.247.72:6379 master - 0 1527887027981 80 connected 10922-16383 dfa03dc3fdcb917641a8d4e85e8373ee19e1fda8 10.45.248.80:6379 master - 0 1527887028482 93 connected 5461-10921 b7695f9238909af61f158deafe7f4f33ffd2eae4 10.45.248.134:6379 slave dfa03dc3fdcb917641a8d4e85e8373ee19e1fda8 0 1527887028983 93 connected a6a42df404d5adac79203eb9bc3fc49bcc03fd19 10.45.248.106:6379 myself,slave 71a80a4554db9893e194545a45e4caeaf159a726 0 0 61 connected 5c421bf7466e8702bbf344de9ae528fa8fbea1d7 10.45.247.74:6379 slave dfa03dc3fdcb917641a8d4e85e8373ee19e1fda8 0 1527887029482 93 connected 9640188f1b2214faa6c26a1755179803ebafad7c 10.45.247.75:6379 slave 71a80a4554db9893e194545a45e4caeaf159a726 0 1527887027981 76 connected\r\n`\r\nWhen testing various failover situations, I ran into a situation which causes the redisson client to get stuck using a bad connection when making the write calls, however the thread that is polling for the topology is fine. The situation is the redis process dies on a Master node I am writing to, a slave is then promoted to master. The redisson client is still in a GOOD state. The redis process dies on the new Master, a floating slave is then promoted to Master. At this point, the redisson client is now STUCK using a bad connection to a dead master.\r\n### Steps to reproduce or test case\r\nRun 7 node cluster, I believe this is the minimum to reproduce this as you need an extra floating slave to promote after the first Master/Slave pair dies. For Master 1 slots 0-5460 (M1), kill the redis process. This should cause it's slave (S1) to promote to master and the floating slave (FS2) to attach to this new master. Then repeat kill the redis process on S1 which was promoted to master and FS1 should be promoted to master. The redisson client will now fail reads/writes because the redisson client connections are to the old S1 node despite FS1 now being the new master but does not fail to poll for CLUSTER NODES because I believe it is using a separate connection pool/thread to do that. \r\n### Redis version\r\n3.2.11\r\n### Redisson version\r\n3.7.0\r\n### Redisson configuration\r\nDefault redis cluster config with 7 nodes. 3 Master 4 Slave.", "url": "https://github.com/redisson/redisson/issues/1481", "user": "ericwu1", "labels": ["bug"], "created": "2018-06-11 18:31:12", "closed": "2018-08-23 00:19:16", "commits": {}, "ttf": 72.00027777777778, "commitsDetails": []}, {"title": "Redis INFO call stopped working after 3.7.1 release", "body": "\ufeff### Expected behavior\r\nCall Redis INFO on a given node in a cluster and it should return a blob of info for that given node.\r\n### Actual behavior\r\nWhen the redisson client is preparing to send the redis INFO call, client2key returns null for the given redisClient which only happened to me during INFO calls, not any writes or reads. This is the commit that I believe caused this behavior. https://github.com/redisson/redisson/commit/fe98d0aa1442463aab404a20c22ed8b2ddf4ffdd#diff-bb90b8f5c06abce59014861b02cecd93\r\n\r\n```06/04/2018 16:18:58 PDT DEBUG pool-1-thread-1 CommandAsyncService:585 - attempt 3 for command (INFO MEMORY) and params []\r\n06/04/2018 16:18:59 PDT DEBUG redisson-netty-1-4 ClusterConnectionManager:391 - cluster nodes state from 10.73.128.146/10.73.128.146:6379:\r\n03de98146f0038a9a04587dd6ef102f48c54aeab 10.73.128.76:6379 slave 0cba7b1e954e4235a9ac86e0306608e97e04e404 0 1528154338964 98 connected\r\n0cba7b1e954e4235a9ac86e0306608e97e04e404 10.73.128.146:6379 myself,master - 0 0 98 connected 10922-16383\r\n117b100e765b5af972dd7d3f96b9541d7c7aba24 10.73.128.138:6379 slave a3e0502ebb14d9b6c4eb0d600e05e15d30adb387 0 1528154337463 79 connected\r\nd78a886e8fb890bb98ed740f8908b222874a164a 10.73.129.85:6379 slave 178153b9fdc7b8314ef3a26f269395d4ec6597ca 0 1528154338464 93 connected\r\n987c581e9b11b72d9e17c4e58d8c66abce653dd6 10.73.128.93:6379 slave 0cba7b1e954e4235a9ac86e0306608e97e04e404 0 1528154337963 98 connected\r\n178153b9fdc7b8314ef3a26f269395d4ec6597ca 10.73.128.68:6379 master - 0 1528154336962 93 connected 5461-10921\r\na3e0502ebb14d9b6c4eb0d600e05e15d30adb387 10.73.128.91:6379 master - 0 1528154337463 79 connected 0-5460\r\n\r\n\r\norg.redisson.client.RedisConnectionException: Can't find entry for [addr=redis://10.73.128.68:6379]\r\n    at org.redisson.connection.balancer.LoadBalancerManager.getConnection(LoadBalancerManager.java:241)\r\n    at org.redisson.connection.MasterSlaveEntry.connectionReadOp(MasterSlaveEntry.java:507)\r\n    at org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(MasterSlaveConnectionManager.java:583)\r\n    at org.redisson.command.CommandAsyncService.async(CommandAsyncService.java:497)\r\n    at org.redisson.command.CommandAsyncService$8.run(CommandAsyncService.java:589)\r\n    at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:668)\r\n    at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:743)\r\n    at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:471)\r\n    at java.lang.Thread.run(Thread.java:745)\r\nCan't find entry for [addr=redis://10.73.128.68:6379]\r\n```\r\nIt seems the issue is the hashcodes are different only when making the INFO call (That i know of) because the channels value changes.\r\n\r\n![](https://files.gitter.im/mrniko/redisson/7tq4/Screen-Shot-2018-06-04-at-5.55.21-PM.png)\r\n\r\nSo when doing the get for client2key, it gets nothing. For Writes and reads that i tried, the hashcodes for the clients are the same\r\n### Steps to reproduce or test case\r\nSpin up any redis cluster and simply call .info() on a node in the .getNodesGroup()\r\n### Redis version\r\n3.2.11\r\n### Redisson version\r\n3.7.1\r\n### Redisson configuration\r\ndefault redis cluster config with 7 nodes in the cluster. 3 Master and 4 Slave", "url": "https://github.com/redisson/redisson/issues/1480", "user": "ericwu1", "labels": ["bug"], "created": "2018-06-11 18:09:23", "closed": "2018-06-13 10:26:05", "commits": {"d7e2b718caae4074b3fa31501ff8b2307943eb3a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "d7e2b718caae4074b3fa31501ff8b2307943eb3a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2eabbdd27c45a75c4ea2cb5974f855f61b8face1"], "nameRev": "d7e2b718caae4074b3fa31501ff8b2307943eb3a tags/redisson-2.12.2~4", "commitMessage": "Fixed - RedisNode.info doesn't work.  #1480\n", "commitDateTime": "2018-06-13 13:27:54", "authoredDateTime": "2018-06-13 13:27:54", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedisNodes.java", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 35, "deletions": 0, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisNodes.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedisNodes.getNode(java.lang.String)", "TOT": 7, "UPD": 4, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedisNodes.getNodes(org.redisson.api.NodeType)", "TOT": 13, "UPD": 4, "INS": 3, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.RedisNodes.getNodes()", "TOT": 9, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.getSlaveEntries()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testNodesInCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testNode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d7e2b718caae4074b3fa31501ff8b2307943eb3a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 23, "lines": 41, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 32, "UPD": 11, "INS": 6, "MOV": 11, "DEL": 4, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.getSlaveEntries()", "org.redisson.RedisNodes.getNodes(org.redisson.api.NodeType)", "org.redisson.RedisNodes.getNode(java.lang.String)", "org.redisson.RedisNodes.getNodes()"]}, {"title": "RedissonScoredSortedSet uses wrong codec for some score methods", "body": "\ufeff### Expected behavior\r\nThe codec specified in the constructor should be used only for values, not for scores.\r\nRedis commands : RedisCommands.ZSCORE and RedisCommands.ZSCORE_CONTAINS\r\n\r\n### Actual behavior\r\nCodec for scores sometimes uses LongCodec sometimes uses \"codec\". For backward data compatibility should always use LongCodec when accessing scores.\r\n### Steps to reproduce or test case\r\nCreate a ScoredSortedSet with non default codec and use getScoreAsync / containsAsync methods\r\n### Redis version\r\n4.0.6\r\n### Redisson version\r\n3.7.1\r\n\r\nUsed to work fine with Redisson Version 3.5.7, when upgraded to 3.7.1 ScoredSortedSet stopped working. Codec \r\n\r\nWorks fine with this change:\r\n```\r\n @Override\r\n        public @Nullable RFuture<Double> getScoreAsync(final @Nullable V o) {\r\n            return commandExecutor.readAsync(getName(), LongCodec.INSTANCE, RedisCommands.ZSCORE, getName(), encode(o));\r\n        }\r\n@Override\r\n        public @Nullable RFuture<Boolean> containsAsync(final @Nullable Object o) {\r\n            return commandExecutor.readAsync(getName(), LongCodec.INSTANCE, RedisCommands.ZSCORE_CONTAINS, getName(), encode(o));\r\n        }\r\n\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/1477", "user": "abel98", "labels": ["bug"], "created": "2018-06-08 23:27:55", "closed": "2018-06-11 12:14:19", "commits": {"bfb8e09ae6ed5c14859c42fc02b7d014c5964c7c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "bfb8e09ae6ed5c14859c42fc02b7d014c5964c7c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["df1519575e490f1e6fe6cd847ea913e86e38b1aa"], "nameRev": "bfb8e09ae6ed5c14859c42fc02b7d014c5964c7c tags/redisson-2.12.2~12", "commitMessage": "Fixed - RedissonScoredSortedSet.contains and RedissonScoredSortedSet.getScoreAsync methods are used wrong codec. #1477\n", "commitDateTime": "2018-06-11 15:16:04", "authoredDateTime": "2018-06-11 15:16:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.containsAsync(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.getScoreAsync(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bfb8e09ae6ed5c14859c42fc02b7d014c5964c7c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonScoredSortedSet.containsAsync(java.lang.Object)", "org.redisson.RedissonScoredSortedSet.getScoreAsync(java.lang.Object)"]}, {"title": "NullPointerException when using setPingConnectionInterval in Pub/Sub mode", "body": "\ufeff### Expected behavior\r\nsetPingConnectionInterval should ping redis Pub/Sub channel periodically and re-subscribe if pong is not received during specified interval. No exceptions should be thrown or logged by sending PING or receiving PONG messages.\r\n\r\n### Actual behavior\r\nThere is NullPointerException thrown and logged as error when pong is received.\r\nNot sure if connection check and recovery would even work in this case.\r\nThis is copy/paste from our error log:\r\n`\r\n2018-06-08 14:39:53,778 ERROR [redisson-netty-1-3] o.r.c.handler.CommandPubSubDecoder  - Unable to decode data. channel: [id: 0x23e24825, L:/10.116.40.44:46628 - R:10.116.172.14/10.116.172.14:6379] message: *2\r\n$4\r\npong\r\n$0\r\njava.lang.NullPointerException: null\r\n2018-06-08 14:39:53,779 WARN  [redisson-netty-1-3] i.n.channel.DefaultChannelPipeline  - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: java.lang.NullPointerException\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException: null\r\n`\r\n\r\nThis is also logged as WARN by redisson, related to the same event:\r\n\r\n`\r\n2018-06-08 15:04:50,296 WARN  [redisson-netty-1-2] i.n.channel.DefaultChannelPipeline  - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: java.lang.NullPointerException\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException: null\r\n\tat org.redisson.client.handler.CommandPubSubDecoder.messageDecoder(CommandPubSubDecoder.java:179)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:378)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:356)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:111)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n\t... 32 common frames omitted\r\n`\r\n\r\n### Steps to reproduce or test case\r\nApplication uses SerializationCodec for all channels, currently using 2 channels for pub/sub. Enable setPingConnectionInterval, in my case set to 5000 ms. After this NPE will be logged in error log.\r\n\r\n### Redis version\r\n# Server\r\nredis_version:4.0.6\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:f1060815dd32471a\r\nredis_mode:standalone\r\nos:Linux 3.10.0-514.26.1.el7.x86_64 x86_64\r\n\r\n- Sentinels\r\n# Server\r\nredis_version:4.0.6\r\nredis_git_sha1:00000000\r\nredis_git_dirty:0\r\nredis_build_id:f1060815dd32471a\r\nredis_mode:sentinel\r\nos:Linux 3.10.0-693.21.1.el7.x86_64 x86_64\r\n\r\nUsing 2 redis servers with master/slave + 3 sentinels of the same version\r\n\r\n### Redisson version\r\n3.7.0, 3.7.1\r\n\r\n### Redisson configuration\r\n- sentinel mode\r\nsetConnectTimeout(10000)\r\nsetPingConnectionInterval(5000)\r\nsetSubscriptionMode(SubscriptionMode.MASTER)\r\nsetFailedSlaveReconnectionInterval(15000)\r\nredis.connection.pool.size(10)", "url": "https://github.com/redisson/redisson/issues/1476", "user": "mmatosevic", "labels": ["bug"], "created": "2018-06-08 12:56:10", "closed": "2018-06-12 13:57:40", "commits": {"c6a9e1cab8ed8e050f6bfe6e4ebcf7ce4f91a2c0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "c6a9e1cab8ed8e050f6bfe6e4ebcf7ce4f91a2c0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b0dcbfb796cd41c7d0e48fafd1bb0d82b45cf134"], "nameRev": "c6a9e1cab8ed8e050f6bfe6e4ebcf7ce4f91a2c0 tags/redisson-2.12.2~7", "commitMessage": "Fixed - NullPointerException when using setPingConnectionInterval in Pub/Sub mode #1476\n", "commitDateTime": "2018-06-12 16:59:25", "authoredDateTime": "2018-06-12 16:59:25", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c6a9e1cab8ed8e050f6bfe6e4ebcf7ce4f91a2c0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandPubSubDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)"]}, {"title": "Error while using RedissonSessionManager at tomcat(java.io.IOException: java.lang.ClassNotFoundException: org.springframework.webflow.conversation.impl.ConversationContainer)", "body": "I am seeing below error while using RedissonSessionManager with tomcat. I have followed the default configuration that was provided at https://github.com/redisson/redisson/tree/master/redisson-tomcat.\r\n\r\nConfiguration is working fine in multi node environment with session replication at redis, but for every request I am seeing this error. Can you one please help on this.\r\n\r\n**Context.xml** \r\nManager className=\"org.redisson.tomcat.RedissonSessionManager\" configPath=\"${catalina.base}/lib/redisson.json\" \r\n\r\n**JSON file:**\r\n{\r\n\"singleServerConfig\":{\r\n\"password\":null,\r\n\"address\": \"redis://localhost:6379\",\r\n\"database\":0\r\n},\r\n\"codec\":{\r\n\"class\":\"org.redisson.codec.SerializationCodec\"\r\n},\r\n\"transportMode\": \"EPOLL\"\r\n}\r\n\r\nMy redissona-all jar version is 3.7.1\r\nredisson-tomcat-8:3.7.1\r\nTomcat version: 8.5.23\r\n\r\njava.io.IOException: java.lang.ClassNotFoundException: org.springframework.webflow.conversation.impl.ConversationContainer\r\nat org.redisson.codec.SerializationCodec$1.decode(SerializationCodec.java:54)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:330)\r\nat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:372)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:356)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:111)\r\nat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\nat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\nat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:808)\r\nat io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:408)\r\nat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:308)\r\nat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\nat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\nat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.webflow.conversation.impl.ConversationContainer\r\nat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\nat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\nat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\nat java.lang.Class.forName0(Native Method)\r\nat java.lang.Class.forName(Class.java:348)\r\nat java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:677)\r\nat org.redisson.codec.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:43)\r\nat java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1826)\r\nat java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1713)\r\nat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2000)\r\nat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\r\nat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245)\r\nat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169)\r\nat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027)\r\nat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\r\nat java.io.ObjectInputStream.readObject(ObjectInputStream.java:422)\r\nat org.redisson.codec.SerializationCodec$1.decode(SerializationCodec.java:50)\r\n... 32 more\r\n[redisson-netty-4-3] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: java.io.IOException: java.lang.ClassNotFoundException: org.springframework.webflow.conversation.impl.ConversationContainer\r\nat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:421)\r\nat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\nat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:808)\r\nat io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:408)\r\nat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:308)\r\nat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\nat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\nat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.io.IOException: java.lang.ClassNotFoundException: org.springframework.webflow.conversation.impl.ConversationContainer\r\nat org.redisson.codec.SerializationCodec$1.decode(SerializationCodec.java:54)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:330)\r\nat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:372)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:356)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:111)\r\nat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n... 26 more\r\nCaused by: java.lang.ClassNotFoundException: org.springframework.webflow.conversation.impl.ConversationContainer\r\nat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\nat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\nat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\nat java.lang.Class.forName0(Native Method)\r\nat java.lang.Class.forName(Class.java:348)\r\nat java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:677)\r\nat org.redisson.codec.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:43)\r\nat java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1826)\r\nat java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1713)\r\nat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2000)\r\nat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\r\nat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245)\r\nat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169)\r\nat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027)\r\nat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\r\nat java.io.ObjectInputStream.readObject(ObjectInputStream.java:422)\r\nat org.redisson.codec.SerializationCodec$1.decode(SerializationCodec.java:50)\r\n... 32 more", "url": "https://github.com/redisson/redisson/issues/1473", "user": "guravaiahp", "labels": ["bug"], "created": "2018-06-06 09:20:49", "closed": "2018-07-02 10:18:02", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "Redisson executing previous jobs on the schedule of newly submitted jobs.", "body": "```java\r\npublic class Main {\r\n\r\n    private final static int NO_OF_JOBS = 5;\r\n\r\n    public static void main(String[] args) {\r\n\r\n        Config config = new Config();\r\n        config.useClusterServers()\r\n                .addNodeAddress(\"http://127.0.0.1:7000\", \"http://127.0.0.1:7001\", \"http://127.0.0.1:7002\");\r\n        RedissonClient redisson = Redisson.create(config);\r\n        RExecutorService e =  redisson.getExecutorService(\"w1\");//redisson.getExecutorService(\"w1\");\r\n        \r\n        for (int j = 0; j < NO_OF_JOBS; j++) {\r\n            Calendar calendar = Calendar.getInstance();\r\n            int hour = calendar.get(Calendar.HOUR_OF_DAY);\r\n            int minute = calendar.get(Calendar.MINUTE) + 1;\r\n            //System.out.println(\"hour, minute\" + hour + \", \" + minute);\r\n            ((RScheduledExecutorService) e).schedule(new RunnableTask(j + 1), CronSchedule.dailyAtHourAndMinute(hour, minute));\r\n        }\r\n    }\r\n}\r\n//new  job\r\npublic class RunnableTask implements Runnable {\r\n    private int job_no;\r\n    RunnableTask(int job_no) {\r\n        this.job_no = job_no;\r\n    }\r\n    public void run() {\r\n        try {\r\n            Thread.sleep(10);\r\n            System.out.println(\"This is task no \" + job_no);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n//old Job\r\npublic class RunnableTask implements Runnable {\r\n    private static volatile int i = 0;\r\n    private long anyParam;\r\n    public RunnableTask() {\r\n    }\r\n    RunnableTask(long anyParam) {\r\n        this.anyParam = anyParam;\r\n    }\r\n    public void run() {\r\n        try {\r\n            Thread.sleep(10);\r\n            i++;\r\n            System.out.println(i);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\nI previously scheduled 5 jobs (old jobs) they executed successfully. After that I scheduled another 5 jobs(new job) but this time the previous 5 jobs got executed on the schedule I gave for new job. Can anyone explain me this behaviour of redisson and point where I am making the mistake.\r\n\r\nFor this experiment I runned 4 redissonnodes in standalone mode with configuration as described below.\r\n```\r\n{\r\n   \"clusterServersConfig\":{\r\n      \"nodeAddresses\":[\r\n         \"redis://127.0.0.1:7001\",\r\n         \"redis://127.0.0.1:7002\",\r\n         \"redis://127.0.0.1:7003\"\r\n      ],\r\n   },\r\n   \"threads\":10,\r\n   \"executorServiceWorkers\": {\"w1\":10},\r\n\r\n}\t\r\n```\r\n### Redis version\r\n4.0.9\r\n### Redisson version\r\n3.7.0\r\n### Redisson configuration\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1468", "user": "arpit728", "labels": ["bug"], "created": "2018-06-04 05:11:34", "closed": "2018-06-12 15:02:01", "commits": {"670ccd4b7782dcdb562c20eb35c9715b210df713": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "670ccd4b7782dcdb562c20eb35c9715b210df713", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c6a9e1cab8ed8e050f6bfe6e4ebcf7ce4f91a2c0"], "nameRev": "670ccd4b7782dcdb562c20eb35c9715b210df713 tags/redisson-2.12.2~6", "commitMessage": "Fixed - ExecutorService tasks aren't reloaded properly. #1468\n", "commitDateTime": "2018-06-12 18:03:49", "authoredDateTime": "2018-06-12 18:03:49", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/executor/ClassLoaderDelegator.java", "insertions": 0, "deletions": 84, "lines": 84}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 16, "deletions": 23, "lines": 39}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassLoaderDelegator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.ClassLoaderDelegator", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeCallable(java.lang.String,byte[],byte[],java.lang.String)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeRunnable(java.lang.String,byte[],byte[],java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.decode(io.netty.buffer.ByteBuf)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.finish(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.decode(org.redisson.executor.RedissonClassLoader,io.netty.buffer.ByteBuf)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["670ccd4b7782dcdb562c20eb35c9715b210df713"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 107, "lines": 123, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27, "UPD": 3, "INS": 6, "MOV": 10, "DEL": 8, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.executor.TasksRunnerService.decode(io.netty.buffer.ByteBuf)", "org.redisson.executor.ClassLoaderDelegator", "org.redisson.executor.TasksRunnerService.executeRunnable(java.lang.String,byte[],byte[],java.lang.String)", "org.redisson.executor.TasksRunnerService.decode(org.redisson.executor.RedissonClassLoader,io.netty.buffer.ByteBuf)", "org.redisson.executor.TasksRunnerService", "org.redisson.executor.TasksRunnerService.executeCallable(java.lang.String,byte[],byte[],java.lang.String)", "org.redisson.executor.TasksRunnerService.finish(java.lang.String)"]}, {"title": "RedissonLocalCachedMap can not init with NullPointerException", "body": "\ufeff### RedissonLocalCachedMap can not init with NullPointerException when ReconnectionStrategy is ReconnectionStrategy.LOAD\r\n\r\n### I think the LocalCacheListener is null ;The line 160 in source code org.redisson.RedissonLocalCachedMap.java ,listener is null because it create in line 164;\r\n\r\n### Redis version 4.0\r\n\r\n### Redisson version 3.7.1\r\n\r\n### ", "url": "https://github.com/redisson/redisson/issues/1467", "user": "dtype", "labels": ["bug"], "created": "2018-06-04 01:54:41", "closed": "2018-06-04 09:10:05", "commits": {"a73ceb9aea73bb28a1570936d90e62b74638d8a2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a73ceb9aea73bb28a1570936d90e62b74638d8a2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0d6cd1b1cbc9b239e1d02b7d4ff41c1b1b75e123"], "nameRev": "a73ceb9aea73bb28a1570936d90e62b74638d8a2 tags/redisson-2.12.2~14", "commitMessage": "Fixed - NPE in RedissonLocalCachedMap during init with ReconnectionStrategy.LOAD param. #1467\n", "commitDateTime": "2018-06-04 12:11:42", "authoredDateTime": "2018-06-04 12:11:42", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 8, "deletions": 8, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.init(java.lang.String,org.redisson.api.LocalCachedMapOptions,org.redisson.api.RedissonClient,org.redisson.eviction.EvictionScheduler)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a73ceb9aea73bb28a1570936d90e62b74638d8a2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 8, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap.init(java.lang.String,org.redisson.api.LocalCachedMapOptions,org.redisson.api.RedissonClient,org.redisson.eviction.EvictionScheduler)"]}, {"title": "CommandAsyncService gets blocked at high concurrency [without OutOfMemoryError] ", "body": "Hi,\r\nWhile running a load test on jmeter of 200 users with ramp up time of 10 seconds and number of puts per user equal to 10, threads are getting  stuck. In this test we are using RTransaction and doing load testing on a single key by putting random values for a single key. \r\nhere is the stack trace:\r\n\r\n\tat sun.misc.Unsafe.park(Native Method)\r\n          \r\n            \t-  waiting on java.util.concurrent.CountDownLatch$Sync@b55ea542\r\n          \r\n            \tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\r\n          \r\n            \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:847)\r\n          \r\n            \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1008)\r\n          \r\n            \tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1315)\r\n          \r\n            \tat java.util.concurrent.CountDownLatch.await(CountDownLatch.java:242)\r\n          \r\n            \tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:152)\r\n          \r\n            \tat org.redisson.RedissonObject.get(RedissonObject.java:74)\r\n          \r\n            \tat org.redisson.RedissonMap.fastPut(RedissonMap.java:922)\r\n          \r\n            \tat com.nucleus.controller.Controller1.sameKeyPut(Controller1.java:237)\r\n\r\n### Steps to reproduce or test case\r\n\r\n\tpublic void sameKeyPut(){\r\n\t\t\r\n\t\tRTransaction transaction = redisson.createTransaction(options);\r\n\t\tmap=transaction.getMap(\"put_test\");\r\n\t\tmap.fastPut(1, 1);\r\n\t\ttransaction.commit();\r\n\t\t}\r\n### Redis version\r\n4.0.9\r\n### Redisson version\r\n3.7.0\r\n### Redisson configuration\r\n\r\n\t\r\n\t\tConfig config = new Config();\r\n\t\tconfig.useSingleServer().setAddress(\"redis://10.0.50.128:6379\");\r\n\r\n\t\tconfig.useSingleServer().setRetryAttempts(3);\r\n\t\tconfig.useSingleServer().setConnectionPoolSize(500);\r\n\t\tconfig.useSingleServer().setRetryInterval(2000);\r\n\t\tconfig.useSingleServer().setConnectTimeout(20000);\r\n\t\tredisson = (RedissonClient) Redisson.create(config);\r\n\t\t\r\n\t\t   \r\n                            TransactionOptions  options = TransactionOptions.defaults()\r\n\t\t\t\t\r\n\t\t\t\t.syncSlavesTimeout(5, TimeUnit.SECONDS)\r\n\t\t\t\t.responseTimeout(3, TimeUnit.SECONDS)\r\n\t\t\t\t.retryInterval(5, TimeUnit.SECONDS)\r\n\t\t\t\t.retryAttempts(3)\r\n\t\t\t\t.timeout(10, TimeUnit.SECONDS);\r\n\t\t\r\n\t\t", "url": "https://github.com/redisson/redisson/issues/1459", "user": "shivendra-kumar", "labels": ["bug"], "created": "2018-05-28 14:22:44", "closed": "2018-06-12 11:51:06", "commits": {"8d347ad22be930b9a92fd55724a5c90440fa0a3c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "eb36207f93add5faa4b2b58677efa1f19cfab426": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "6c8f04b0f101acd4940155270758ed41f9ca4645": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "8d347ad22be930b9a92fd55724a5c90440fa0a3c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c3cdb4f5a8d1988c577c113fd7230c5d4d4c18ff"], "nameRev": "8d347ad22be930b9a92fd55724a5c90440fa0a3c tags/redisson-2.12.1~3", "commitMessage": "Fixed - methods belongs to transactional objects get blocked at high concurrency. #1459\n", "commitDateTime": "2018-06-01 10:38:43", "authoredDateTime": "2018-06-01 10:38:43", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/pubsub/LockPubSub.java", "insertions": 6, "deletions": 17, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/SemaphorePubSub.java", "insertions": 6, "deletions": 17, "lines": 23}, {"filePath": "redisson/src/test/java/org/redisson/transaction/RedissonBaseTransactionalMapTest.java", "insertions": 23, "deletions": 1, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LockPubSub.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.LockPubSub.onMessage(org.redisson.RedissonLockEntry,java.lang.Long)", "TOT": 9, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 3}]}, {"spoonFilePath": "SemaphorePubSub.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.SemaphorePubSub.onMessage(org.redisson.RedissonLockEntry,java.lang.Long)", "TOT": 9, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 3}]}, {"spoonFilePath": "RedissonBaseTransactionalMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.RedissonBaseTransactionalMapTest.testFastPut()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "eb36207f93add5faa4b2b58677efa1f19cfab426", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ba1430061142518e850bf81c0ed0c04219267d77"], "nameRev": "eb36207f93add5faa4b2b58677efa1f19cfab426 tags/redisson-2.12.2~16", "commitMessage": "Fixed - methods belongs to transactional objects get blocked at high concurrency. #1459\n", "commitDateTime": "2018-06-04 12:08:51", "authoredDateTime": "2018-06-04 12:08:51", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 58, "deletions": 66, "lines": 124}, {"filePath": "redisson/src/main/java/org/redisson/RedissonPermitExpirableSemaphore.java", "insertions": 69, "deletions": 75, "lines": 144}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSemaphore.java", "insertions": 42, "deletions": 48, "lines": 90}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/LockPubSub.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/SemaphorePubSub.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/transaction/RedissonBaseTransactionalMapTest.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.lockAsync(long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).7.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.lockAsync(long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).10.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).10.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonPermitExpirableSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPermitExpirableSemaphore.tryAcquireAsync(java.util.concurrent.atomic.AtomicLong,int,org.redisson.api.RFuture,org.redisson.misc.RPromise,long,java.util.concurrent.TimeUnit).2.operationComplete(io.netty.util.concurrent.Future).3.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonPermitExpirableSemaphore.tryAcquireAsync(java.util.concurrent.atomic.AtomicLong,int,org.redisson.api.RFuture,org.redisson.misc.RPromise,long,java.util.concurrent.TimeUnit).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonPermitExpirableSemaphore.acquireAsync(int,org.redisson.api.RFuture,org.redisson.misc.RPromise,long,java.util.concurrent.TimeUnit).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSemaphore.tryAcquireAsync(java.util.concurrent.atomic.AtomicLong,int,org.redisson.api.RFuture,org.redisson.misc.RPromise).2.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSemaphore.tryAcquireAsync(java.util.concurrent.atomic.AtomicLong,int,org.redisson.api.RFuture,org.redisson.misc.RPromise).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSemaphore.acquireAsync(int,org.redisson.api.RFuture,org.redisson.misc.RPromise).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LockPubSub.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.LockPubSub.onMessage(org.redisson.RedissonLockEntry,java.lang.Long)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "SemaphorePubSub.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.SemaphorePubSub.onMessage(org.redisson.RedissonLockEntry,java.lang.Long)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "RedissonBaseTransactionalMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.RedissonBaseTransactionalMapTest.testFastPut()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6c8f04b0f101acd4940155270758ed41f9ca4645", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cfb37545e1c5eb9219c33166480cc81914947e7a"], "nameRev": "6c8f04b0f101acd4940155270758ed41f9ca4645 tags/redisson-2.12.2~10", "commitMessage": "Fixed - ConcurrentModificationException in RTransaction object. #1459\n", "commitDateTime": "2018-06-12 14:37:07", "authoredDateTime": "2018-06-12 14:37:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cache/LocalCachedMapDisabledKey.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/cache/LocalCachedMapEnable.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/transaction/RedissonTransaction.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/transaction/RedissonBaseTransactionalMapTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalCachedMapDisabledKey.java", "spoonMethods": []}, {"spoonFilePath": "LocalCachedMapEnable.java", "spoonMethods": []}, {"spoonFilePath": "RedissonTransaction.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.RedissonTransaction", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.transaction.RedissonTransaction.checkTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBaseTransactionalMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.transaction.RedissonBaseTransactionalMapTest.testFastPut()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eb36207f93add5faa4b2b58677efa1f19cfab426", "6c8f04b0f101acd4940155270758ed41f9ca4645"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 182, "deletions": 204, "lines": 386, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 36, "UPD": 3, "INS": 3, "MOV": 16, "DEL": 14, "spoonFilesChanged": 6, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cache", "redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/transaction", "redisson/src/main/java/org/redisson/pubsub"], "changesInPackagesSPOON": ["org.redisson.RedissonPermitExpirableSemaphore.tryAcquireAsync(java.util.concurrent.atomic.AtomicLong,int,org.redisson.api.RFuture,org.redisson.misc.RPromise,long,java.util.concurrent.TimeUnit).2.operationComplete(io.netty.util.concurrent.Future).3.run(io.netty.util.Timeout)", "org.redisson.RedissonPermitExpirableSemaphore.acquireAsync(int,org.redisson.api.RFuture,org.redisson.misc.RPromise,long,java.util.concurrent.TimeUnit).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.transaction.RedissonTransaction", "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).10.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.transaction.RedissonTransaction.checkTimeout()", "org.redisson.RedissonPermitExpirableSemaphore.tryAcquireAsync(java.util.concurrent.atomic.AtomicLong,int,org.redisson.api.RFuture,org.redisson.misc.RPromise,long,java.util.concurrent.TimeUnit).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).10.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "org.redisson.RedissonLock.lockAsync(long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonSemaphore.tryAcquireAsync(java.util.concurrent.atomic.AtomicLong,int,org.redisson.api.RFuture,org.redisson.misc.RPromise).2.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "org.redisson.RedissonSemaphore.acquireAsync(int,org.redisson.api.RFuture,org.redisson.misc.RPromise).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.lockAsync(long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).7.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "org.redisson.RedissonSemaphore.tryAcquireAsync(java.util.concurrent.atomic.AtomicLong,int,org.redisson.api.RFuture,org.redisson.misc.RPromise).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.pubsub.SemaphorePubSub.onMessage(org.redisson.RedissonLockEntry,java.lang.Long)", "org.redisson.pubsub.LockPubSub.onMessage(org.redisson.RedissonLockEntry,java.lang.Long)"]}, {"title": "setPingConnectionInterval for single server configuration is not propagated to underlying MasterSlaveServersConfig", "body": "\ufeff### Expected behavior\r\nSetting the pingConnectionInterval on a single server config should enable periodic ping on connections.\r\n\r\n### Actual behavior\r\nNo pings take place.  Similar to #1415, this appears to be due to SingleConnectionManager.create not copying the configured value to the MasterSlaveServersConfig.\r\n\r\n### Steps to reproduce or test case\r\nCreate single server redisson client with config:\r\n```\r\n        config.useSingleServer()\r\n                .setAddress(nodeAddress)\r\n                .setPingConnectionInterval(5000);\r\n```\r\n### Redis version\r\nAny\r\n\r\n### Redisson version\r\n3.7.0\r\n\r\n### Redisson configuration\r\n", "url": "https://github.com/redisson/redisson/issues/1455", "user": "nigelh-iw", "labels": ["bug"], "created": "2018-05-24 17:44:30", "closed": "2018-05-31 13:13:38", "commits": {"16368a5ed8e5401595b65ab4d2e669f8b51a753f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "16368a5ed8e5401595b65ab4d2e669f8b51a753f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2ba163a32ff2492eedd7fb2b8f8f075908fefbe8"], "nameRev": "16368a5ed8e5401595b65ab4d2e669f8b51a753f tags/redisson-2.12.1~8", "commitMessage": "Fixed - setPingConnectionInterval is not propagated for single server configuration. #1455\n", "commitDateTime": "2018-05-25 12:12:54", "authoredDateTime": "2018-05-25 12:12:54", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager.create(org.redisson.config.SingleServerConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["16368a5ed8e5401595b65ab4d2e669f8b51a753f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SingleConnectionManager.create(org.redisson.config.SingleServerConfig)"]}, {"title": "ClassNotFoundException on Classes under WEB-INF/lib", "body": "We upgraded Redisson tomcat session manager from 3.6.3 to 3.7.0, and got ClassNotFoundException on classes under WEB-INF/lib. After reverted back to 3.6.3, error was gone. We are using SerializationCodec and are under java 8 / tomcat 7.\r\n\r\njava.io.IOException: java.lang.ClassNotFoundException: com.servicebench.candyland.web.actions.support.SearchState\r\n        at org.redisson.codec.SerializationCodec$1.decode(SerializationCodec.java:54)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:309)\r\n        at org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:351)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:335)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:97)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1414)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:945)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:146)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.ClassNotFoundException: com.servicebench.candyland.web.actions.support.SearchState\r\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n        at java.lang.Class.forName0(Native Method)\r\n        at java.lang.Class.forName(Class.java:348)\r\n        at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:683)\r\n        at org.redisson.codec.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:43)\r\n        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1863)\r\n        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1746)\r\n        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2037)\r\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1568)\r\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:428)\r\n        at java.util.HashMap.readObject(HashMap.java:1409)\r\n        at sun.reflect.GeneratedMethodAccessor311.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1158)\r\n        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2173)\r\n        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2064)\r\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1568)\r\n        at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2282)\r\n        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2206)\r\n        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2064)\r\n        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1568)\r\n        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:428)\r\n        at org.redisson.codec.SerializationCodec$1.decode(SerializationCodec.java:50)\r\n        ... 34 more", "url": "https://github.com/redisson/redisson/issues/1454", "user": "lying1234", "labels": ["bug"], "created": "2018-05-24 15:59:51", "closed": "2018-07-12 10:35:06", "commits": {"bb491f60f1b1dba9f881ad35a09d6b482871708f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "2c05c92006110cc99f99869893705303fcf17447": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 48.000277777777775, "commitsDetails": [{"commitHash": "bb491f60f1b1dba9f881ad35a09d6b482871708f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1a61d036557490948bf5ed84423d1b50ba15074b"], "nameRev": "bb491f60f1b1dba9f881ad35a09d6b482871708f tags/redisson-2.12.4~15", "commitMessage": "Fixed - ClassNotFoundException arise in Tomcat session manager #1454\n", "commitDateTime": "2018-07-02 13:19:28", "authoredDateTime": "2018-07-02 13:19:28", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 27, "deletions": 3, "lines": 30}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 27, "deletions": 3, "lines": 30}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 31, "deletions": 3, "lines": 34}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 31, "deletions": 3, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AttributeUpdateMessage.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.AttributeUpdateMessage", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.AttributeUpdateMessage.getValue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AttributesPutAllMessage.java", "spoonMethods": []}, {"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.setCreationTime(long)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.access()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.fastPut(java.lang.String,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.createPutAllMessage(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.decode(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.encode(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.buildClient()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().1.onMessage(java.lang.String,org.redisson.tomcat.AttributeMessage)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2c05c92006110cc99f99869893705303fcf17447", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ef94818b83b800fb10d61210330f2f6414baa896"], "nameRev": "2c05c92006110cc99f99869893705303fcf17447 tags/redisson-2.12.4~6", "commitMessage": "Fixed - ClassNotFoundException arise in Tomcat session manager #1454\n", "commitDateTime": "2018-07-11 18:53:15", "authoredDateTime": "2018-07-11 18:53:15", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 19, "deletions": 30, "lines": 49}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 11, "deletions": 31, "lines": 42}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 20, "deletions": 28, "lines": 48}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributeUpdateMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/AttributesPutAllMessage.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 20, "deletions": 28, "lines": 48}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/UpdateValve.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AttributeUpdateMessage.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.AttributeUpdateMessage", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.AttributeUpdateMessage.getValue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AttributesPutAllMessage.java", "spoonMethods": []}, {"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.createPutAllMessage(java.util.Map)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.fastPut(java.lang.String,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.decode(byte[])", "TOT": 10, "UPD": 7, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.encode(java.lang.Object)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.getTopic()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal().1.onMessage(java.lang.String,org.redisson.tomcat.AttributeMessage)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.store(javax.servlet.http.HttpSession)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.generateId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UpdateValve.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.UpdateValve.invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bb491f60f1b1dba9f881ad35a09d6b482871708f"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 188, "deletions": 52, "lines": 240, "gitFilesChange": 16}, "spoonStatsSummary": {"TOT": 25, "UPD": 3, "INS": 10, "MOV": 8, "DEL": 4, "spoonFilesChanged": 3, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.AttributeUpdateMessage", "org.redisson.tomcat.RedissonSession.createPutAllMessage(java.util.Map)", "org.redisson.tomcat.RedissonSession.setCreationTime(long)", "org.redisson.tomcat.RedissonSession.fastPut(java.lang.String,java.lang.Object)", "org.redisson.tomcat.RedissonSessionManager.encode(java.lang.Object)", "org.redisson.tomcat.RedissonSessionManager.buildClient()", "org.redisson.tomcat.RedissonSessionManager.decode(byte[])", "org.redisson.tomcat.RedissonSession.access()", "org.redisson.tomcat.AttributeUpdateMessage.getValue()", "org.redisson.tomcat.RedissonSession.save()", "org.redisson.tomcat.RedissonSessionManager.startInternal().1.onMessage(java.lang.String,org.redisson.tomcat.AttributeMessage)"]}, {"title": "Redisson in cluster environment cannot use the same node when iterating a set", "body": "When I try to iterate a set collection in the cluster environment, I'm getting some odd result: some entries are missing. So I've checked the below issues:  #277 and #230.\r\n\r\nI have 9 Redis nodes. 3 master nodes, which each one has two replication node. So the Redisson can execute sscan command from alternative two slave nodes.\r\n\r\nI turn on the debug logging, I notice that Redisson has changed connection during each command execution with default load balance strategy.\r\n\r\ndetail logs like this:\r\n\r\n```\r\n[15:33:14:695] [DEBUG] - org.redisson.command.CommandAsyncService$9.operationComplete(CommandAsyncService.java:628) - acquired connection for command (SSCAN) and params [{shardingdefault}:pushUser:huawei8, 5375] from slot NodeSource [slot=12669, addr=null, redisClient=[addr=redis://192.168.5.138:23000], redirect=null, entry=null] using node 192.168.5.138/192.168.5.138:20000... RedisConnection@445185455 [redisClient=[addr=redis://192.168.5.138:20000], channel=[id: 0x3ea48654, L:/192.168.5.1:62262 - R:192.168.5.138/192.168.5.138:20000]]\r\n[15:33:14:695] [DEBUG] - org.redisson.command.CommandAsyncService$15.operationComplete(CommandAsyncService.java:797) - connection released for command (SSCAN) and params [{shardingdefault}:pushUser:huawei8, 5375] from slot NodeSource [slot=12669, addr=null, redisClient=[addr=redis://192.168.5.138:23000], redirect=null, entry=null] using connection RedisConnection@445185455 [redisClient=[addr=redis://192.168.5.138:20000], channel=[id: 0x3ea48654, L:/192.168.5.1:62262 - R:192.168.5.138/192.168.5.138:20000]]\r\n\r\n[15:33:14:695] [DEBUG] - org.redisson.command.CommandAsyncService$9.operationComplete(CommandAsyncService.java:628) - acquired connection for command (SSCAN) and params [{shardingdefault}:pushUser:huawei8, 15615] from slot NodeSource [slot=12669, addr=null, redisClient=[addr=redis://192.168.5.138:20000], redirect=null, entry=null] using node 192.168.5.138/192.168.5.138:23000... RedisConnection@1960164143 [redisClient=[addr=redis://192.168.5.138:23000], channel=[id: 0xd71cfbec, L:/192.168.5.1:62246 - R:192.168.5.138/192.168.5.138:23000]]\r\n[15:33:14:695] [DEBUG] - org.redisson.command.CommandAsyncService$15.operationComplete(CommandAsyncService.java:797) - connection released for command (SSCAN) and params [{shardingdefault}:pushUser:huawei8, 15615] from slot NodeSource [slot=12669, addr=null, redisClient=[addr=redis://192.168.5.138:20000], redirect=null, entry=null] using connection RedisConnection@1960164143 [redisClient=[addr=redis://192.168.5.138:23000], channel=[id: 0xd71cfbec, L:/192.168.5.1:62246 - R:192.168.5.138/192.168.5.138:23000]]\r\n```\r\n\r\nSo I simply trace the source code, \r\n\r\nIn the class `BaseIterator`, it could store the current query connection correctly with a field.\r\n\r\n```java\r\nprotected RedisClient client;\r\n\r\n// Line 54\r\nScanResult<E> res = iterator(client, nextIterPos);\r\nclient = res.getRedisClient();\r\n```\r\n\r\nThen, it passes the client info to the function `async` of the class `CommandAsyncService` , which the parameter `source` contains it.\r\n\r\n```java\r\nprotected <V, R> void async(final boolean readOnlyMode, final NodeSource source, final Codec codec,\r\n            final RedisCommand<V> command, final Object[] params, final RPromise<R> mainPromise, final int attempt, \r\n            final boolean ignoreRedirect)\r\n```\r\n\r\nThe most disturbing part is this:\r\n\r\nWhen trying to get a connection from `MasterSlaveConnectionManager` `connectionReadOp`, it will not consist with the previous client connection, but to get a new slave connection according to the master-slave entry. So this will get a different connection than the last.\r\n\r\nlike this:\r\n\r\n```java\r\npublic RFuture<RedisConnection> connectionReadOp(NodeSource source, RedisCommand<?> command) {\r\n    MasterSlaveEntry entry = getEntry(source);\r\n    if (entry == null) {\r\n        RedisNodeNotFoundException ex = new RedisNodeNotFoundException(\"Node: \" + source + \" hasn't been discovered yet\");\r\n        return RedissonPromise.newFailedFuture(ex);\r\n    }\r\n\r\n    if (source.getRedirect() != null) {\r\n        return entry.connectionReadOp(command, source.getAddr());\r\n    }\r\n        \r\n    return entry.connectionReadOp(command);\r\n}\r\n```\r\n\r\nAt last, here is briefly my test code\r\n\r\n```java\r\n    Config config = new Config();\r\n    config.useClusterServers()\r\n        .addNodeAddress(\"redis://192.168.5.138:15000\")\r\n        .addNodeAddress(\"redis://192.168.5.138:16000\")\r\n        .addNodeAddress(\"redis://192.168.5.138:17000\")\r\n        .addNodeAddress(\"redis://192.168.5.138:18000\")\r\n        .addNodeAddress(\"redis://192.168.5.138:19000\")\r\n        .addNodeAddress(\"redis://192.168.5.138:20000\")\r\n        .addNodeAddress(\"redis://192.168.5.138:21000\")\r\n        .addNodeAddress(\"redis://192.168.5.138:22000\")\r\n        .addNodeAddress(\"redis://192.168.5.138:23000\");\r\n        \r\n    RedissonClient client = Redisson.create(config);\r\n    RSet<String> tokens = client.getSet(TOKEN_KEY);\r\n        \r\n    for (String token : tokens) {\r\n       // Tokens in the redis set will be missing\r\n        System.out.println(token);\r\n    }\r\n        \r\n    client.shutdown();\r\n```\r\n\r\nHope to make sense, thanks~", "url": "https://github.com/redisson/redisson/issues/1447", "user": "bluelullaby", "labels": ["bug"], "created": "2018-05-23 08:14:29", "closed": "2018-05-23 09:32:35", "commits": {"fe98d0aa1442463aab404a20c22ed8b2ddf4ffdd": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fe98d0aa1442463aab404a20c22ed8b2ddf4ffdd", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3aaed2f9d177d6635d5ae4c15e6e8bcf87496ff5"], "nameRev": "fe98d0aa1442463aab404a20c22ed8b2ddf4ffdd tags/redisson-2.12.1~20", "commitMessage": "Fixed - Collection iterator is not using the same Redis node. #1447\n", "commitDateTime": "2018-05-23 12:33:53", "authoredDateTime": "2018-05-23 12:33:53", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetTest.java", "insertions": 48, "deletions": 0, "lines": 48}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.protocol.RedisCommand,java.net.URI)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.getConnection(org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetTest.testClusteredIterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fe98d0aa1442463aab404a20c22ed8b2ddf4ffdd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 6, "lines": 25, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 15, "UPD": 1, "INS": 7, "MOV": 6, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/connection/balancer"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource)", "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.balancer.LoadBalancerManager.getConnection(org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.protocol.RedisCommand,java.net.URI)"]}, {"title": "RLocalCachedMap memory leak when using EvictionPolicy.WEAK", "body": "\ufeff### Expected behavior\r\nWeak references should be cleared.\r\n\r\n### Actual behavior\r\nIt seems that even when using static Strings for keys and values and only ```fastPut``` method the OOM error occurs after several thousands of invocations.\r\n  \r\n### Steps to reproduce or test case\r\nI have created a separate repo to easier reproduce the problem:\r\nhttps://github.com/pawelgrzes/redisson-mem-leak\r\n\r\n### Redis version\r\n4.0.9\r\n\r\n### Redisson version\r\n3.7.0\r\n\r\n### Redisson configuration\r\n```\r\nRedissonClient redissonClient = Redisson.create();\r\n\r\nLocalCachedMapOptions ops = LocalCachedMapOptions.defaults()\r\n  .cacheSize(0)\r\n  .timeToLive(0)\r\n  .maxIdle(0)\r\n  .reconnectionStrategy(LocalCachedMapOptions.ReconnectionStrategy.CLEAR)\r\n  .syncStrategy(LocalCachedMapOptions.SyncStrategy.INVALIDATE)\r\n  .evictionPolicy(LocalCachedMapOptions.EvictionPolicy.WEAK);\r\n\r\nRLocalCachedMap<String, String> map = redissonClient.getLocalCachedMap(\"sample-cache\", ops);\r\n```\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1442", "user": "pawelgrzes", "labels": ["bug"], "created": "2018-05-19 13:35:54", "closed": "2018-11-05 18:13:05", "commits": {"a71460624e844335aa8d0268d411e3d3308c1445": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 170.00027777777777, "commitsDetails": [{"commitHash": "a71460624e844335aa8d0268d411e3d3308c1445", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a3fec2c062867c6a2a5a5ca778105a43b928b047"], "nameRev": "a71460624e844335aa8d0268d411e3d3308c1445 tags/redisson-2.14.1~39", "commitMessage": "Fixed - OOM when using RLocalCachedMap.fastPut and Reference based EvictionPolicy. #1442\n", "commitDateTime": "2018-11-05 21:12:05", "authoredDateTime": "2018-11-05 21:12:05", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cache/AbstractCacheMap.java", "insertions": 1, "deletions": 8, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/cache/CachedValueReference.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "redisson/src/main/java/org/redisson/cache/CachedValueSoftReference.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/cache/CachedValueWeakReference.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/cache/ReferenceCacheMap.java", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractCacheMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.AbstractCacheMap.isFull(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.AbstractCacheMap.isFull()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CachedValueReference.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CachedValueSoftReference.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.CachedValueSoftReference.getOwner()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CachedValueWeakReference.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.CachedValueWeakReference.getOwner()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReferenceCacheMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.ReferenceCacheMap.removeExpiredEntries()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.ReferenceCacheMap.isFull(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cache.ReferenceCacheMap.create(java.lang.Object,java.lang.Object,long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a71460624e844335aa8d0268d411e3d3308c1445"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 39, "deletions": 11, "lines": 50, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 8, "UPD": 2, "INS": 5, "MOV": 0, "DEL": 1, "spoonFilesChanged": 5, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cache"], "changesInPackagesSPOON": ["org.redisson.cache.AbstractCacheMap.isFull(java.lang.Object)", "org.redisson.cache.AbstractCacheMap.isFull()", "org.redisson.cache.ReferenceCacheMap.create(java.lang.Object,java.lang.Object,long,long)", "org.redisson.cache.ReferenceCacheMap.isFull(java.lang.Object)", "org.redisson.cache.ReferenceCacheMap.removeExpiredEntries()", "org.redisson.cache", "org.redisson.cache.CachedValueSoftReference.getOwner()", "org.redisson.cache.CachedValueWeakReference.getOwner()"]}, {"title": "RedisTimeoutException in RBlockingDeque", "body": "\ufeffHello.\r\nWhen I try to get a result from a blocking deque, I get RedisTimeoutException. \r\n\r\n```\r\nException in thread \"main\" org.redisson.client.RedisTimeoutException: Redis server response timeout (5000 ms) occured for command: (BRPOPLPUSH) with params: [blocking_deque, deque, 1] channel: [id: 0xd3d1c994, L:/127.0.0.1:64335 - R:/127.0.0.1:6379]\r\n\tat org.redisson.command.CommandAsyncService$11.run(CommandAsyncService.java:704)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:663)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:738)\r\n\tat io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:466)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\n### Code\r\n```\r\nConfig config = new Config();\r\nconfig.useSingleServer().setAddress(\"redis://127.0.0.1:6379\");\r\nconfig.setTransportMode(TransportMode.NIO);\r\nRedissonClient redissonClient = Redisson.create(config);\r\nfinal RBlockingDeque<RedisTask> blockingDeque = redissonClient.getBlockingDeque(\"blocking_deque\");\r\nfinal RedisTask redisTask = blockingDeque.pollLastAndOfferFirstTo(\"deque\", 1, TimeUnit.SECONDS);\r\n```\r\n\r\n\r\nI expect that after 1 second I will get null value. \r\n\r\n### Redis version\r\n3.2.100\r\n### Redisson version\r\n3.6.5\r\n### JDK \r\n1.8.0_120\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1434", "user": "vavisha", "labels": ["bug"], "created": "2018-05-11 08:29:41", "closed": "2018-05-12 06:17:46", "commits": {"29dff07e97c313d0a5dbe93cbc1ea328434617b2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "29dff07e97c313d0a5dbe93cbc1ea328434617b2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fe79bbf5f2816e4dd4f6151c063aedf205003196"], "nameRev": "29dff07e97c313d0a5dbe93cbc1ea328434617b2 tags/redisson-2.12.0~4", "commitMessage": "Fixed - RedisTimeoutException arise during blocking command execution on RBlockingQueue and RBlockingDeque objects. #1434\n", "commitDateTime": "2018-05-12 11:18:38", "authoredDateTime": "2018-05-12 11:18:38", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingDequeTest.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Long).13.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonBlockingDequeTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingDequeTest.testPollLastAndOfferFirstTo()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollWithBrokenConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["29dff07e97c313d0a5dbe93cbc1ea328434617b2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Long).13.run(io.netty.util.Timeout)"]}, {"title": "Concurrent calls to RemoteService should not result in an exception", "body": "\ufeff### Expected behavior\r\nConcurrent calls to RemoteService should not result in an exception\r\n\r\n### Actual behavior\r\nConcurrent calls to RemoteService should result in an exception\r\n\r\n### Steps to reproduce or test case\r\n\r\n```\r\npublic interface IService {\r\n  Boolean addToThreadUnsafeList(Integer element);\r\n\r\n  List<Integer> getList();\r\n\r\n  void clear();\r\n}\r\n\r\n\r\npublic class ServiceImpl implements IService {\r\n  private List<Integer> list;\r\n\r\n  public ServiceImpl() {\r\n    list = new ArrayList<>();\r\n  }\r\n\r\n  public Boolean addToThreadUnsafeList(Integer element) {\r\n    System.out.println(element);\r\n    return list.add(element);\r\n  }\r\n\r\n  @Override\r\n  public List<Integer> getList() {\r\n    return list;\r\n  }\r\n\r\n  @Override\r\n  public void clear() {\r\n    list.clear();\r\n  }\r\n\r\n}\r\n\r\n\r\n  private void parallelTestUsingExecutorServiceAndPoolSizeOf(int poolSize) {\r\n    ExecutorService executorService = Executors.newFixedThreadPool(poolSize);\r\n    IService service = redissonClient.getRemoteService().get(IService.class);\r\n\r\n    List<Future<Boolean>> futures = new ArrayList<>();\r\n\r\n    for (int i = 0; i < iterations; i++) {\r\n      final Integer element = i;\r\n      futures.add(executorService.submit(() -> service.addToThreadUnsafeList(element)));\r\n    }\r\n\r\n    while (!futures.stream().allMatch(Future::isDone)) {}\r\n\r\n    try {\r\n      Thread.sleep(10000);\r\n    } catch (InterruptedException e) {\r\n      throw new RuntimeException(e);\r\n    }\r\n    assertThat(service.getList()).hasSize(iterations);\r\n  }\r\n\r\n```\r\n### Redis version\r\n4.0.9\r\n\r\n### Redisson version\r\n3.6.5\r\n\r\n### Redisson configuration\r\n```\r\nconfig.useSingleServer().setAddress(\"redis://127.0.0.1:6379\");\r\n```", "url": "https://github.com/redisson/redisson/issues/1433", "user": "techthumb", "labels": ["bug"], "created": "2018-05-10 21:25:44", "closed": "2018-05-11 10:04:58", "commits": {"6786a22b943879306ba6d8816af6c67b76cc4185": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6786a22b943879306ba6d8816af6c67b76cc4185", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["28b0c49acbb2fb1e32612a043e3a0b2d5013aadc"], "nameRev": "6786a22b943879306ba6d8816af6c67b76cc4185 tags/redisson-2.12.0~7", "commitMessage": "Fixed - RemoteService sync invocations aren't thread safe. #1433\n", "commitDateTime": "2018-05-11 15:05:57", "authoredDateTime": "2018-05-11 15:05:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 46, "deletions": 33, "lines": 79}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceResponse.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRemoteServiceTest.java", "insertions": 37, "deletions": 0, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).7.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 45, "UPD": 10, "INS": 8, "MOV": 26, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgain(org.redisson.api.RemoteInvocationOptions,org.redisson.api.RBlockingQueue,java.lang.String)", "TOT": 22, "UPD": 8, "INS": 0, "MOV": 11, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions)", "TOT": 11, "UPD": 0, "INS": 1, "MOV": 9, "DEL": 1}]}, {"spoonFilePath": "RemoteServiceResponse.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.RemoteServiceResponse.getId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRemoteServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testConcurrentInvocations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6786a22b943879306ba6d8816af6c67b76cc4185"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 47, "deletions": 33, "lines": 80, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 79, "UPD": 18, "INS": 10, "MOV": 46, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/remote"], "changesInPackagesSPOON": ["org.redisson.BaseRemoteService.tryPollAckAgain(org.redisson.api.RemoteInvocationOptions,org.redisson.api.RBlockingQueue,java.lang.String)", "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions)", "org.redisson.remote.RemoteServiceResponse.getId()", "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).7.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"]}, {"title": "sentinel switch-master no work", "body": "Hi,I have a Redis setup with 2 nodes (master, slave) and 1 sentinels .\r\nredis version is windows 3.2.100 .\r\nredisson version is 3.6.5.\r\nWhen master is failover\uff0credisson can not failover to new master automatic.\r\nmy code:\r\n```\r\nConfig config = new Config();\r\n        config.useSentinelServers()\r\n            .setMasterName(\"master\")\r\n            .addSentinelAddress(\"redis://192.168.11.216:6679\")\r\n            .setReadMode(ReadMode.MASTER_SLAVE)\r\n            .setSubscriptionMode(SubscriptionMode.SLAVE);\r\n        System.out.println(config.toJSON());\r\n        RedissonClient client = Redisson.create(config);\r\n        ExecutorService service = Executors.newFixedThreadPool(1);\r\n        service.submit(() -> {\r\n            for (; ; ) {\r\n                try {\r\n                    SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n                    RBucket<String> a = client.getBucket(\"a\");\r\n                    String format = sdf.format(new Date());\r\n                    String value = \"sss\uff1a\" + format;\r\n                    a.set(value);\r\n                    System.out.println(\"master: \" + value + \" @Time:\" + format);\r\n                    try {\r\n                        Thread.sleep(2000);\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n```\r\n\r\nlog:\r\n```\r\n2018-05-02 22:01:59,563 DEBUG pool-1-thread-1 [ConnectionWatchdog.java:109] - reconnecting RedisConnection@616184970 [redisClient=[addr=redis://192.168.11.216:6479], channel=[id: 0xd95e42c4, L:/192.168.11.216:55079 ! R:/192.168.11.216:6479]] to /192.168.11.216:6479 \r\n2018-05-02 22:01:59,564 DEBUG pool-1-thread-1 [ConnectionWatchdog.java:109] - reconnecting RedisConnection@112185329 [redisClient=[addr=redis://192.168.11.216:6479], channel=[id: 0xe3d09124, L:/192.168.11.216:55082 ! R:/192.168.11.216:6479]] to /192.168.11.216:6479 \r\n2018-05-02 22:02:00,062 DEBUG pool-1-thread-1 [CommandAsyncService.java:797] - connection released for command (SET) and params [a, PooledUnsafeDirectByteBuf(ridx: 0, widx: 27, cap: 256)] from slot NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=org.redisson.connection.MasterSlaveEntry@34f50df2] using connection RedisConnection@1318095909 [redisClient=[addr=redis://192.168.11.216:6479], channel=[id: 0x15a974e7, L:/192.168.11.216:55077 ! R:/192.168.11.216:6479]]\r\n2018-05-02 22:02:00,062 DEBUG pool-1-thread-1 [CommandAsyncService.java:585] - attempt 2 for command (SET) and params [a, PooledUnsafeDirectByteBuf(ridx: 0, widx: 27, cap: 256)]\r\n2018-05-02 22:02:00,062 DEBUG pool-1-thread-1 [CommandAsyncService.java:628] - acquired connection for command (SET) and params [a, PooledUnsafeDirectByteBuf(ridx: 0, widx: 27, cap: 256)] from slot NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=org.redisson.connection.MasterSlaveEntry@34f50df2] using node /192.168.11.216:6479... RedisConnection@1751114064 [redisClient=[addr=redis://192.168.11.216:6479], channel=[id: 0x37e1902f, L:/192.168.11.216:55074 ! R:/192.168.11.216:6479]]\r\n2018-05-02 22:02:01,662 DEBUG pool-1-thread-1 [CommandAsyncService.java:797] - connection released for command (SET) and params [a, PooledUnsafeDirectByteBuf(ridx: 0, widx: 27, cap: 256)] from slot NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=org.redisson.connection.MasterSlaveEntry@34f50df2] using connection RedisConnection@1751114064 [redisClient=[addr=redis://192.168.11.216:6479], channel=[id: 0x37e1902f, L:/192.168.11.216:55074 ! R:/192.168.11.216:6479]]\r\n2018-05-02 22:02:01,662 DEBUG pool-1-thread-1 [CommandAsyncService.java:585] - attempt 3 for command (SET) and params [a, PooledUnsafeDirectByteBuf(ridx: 0, widx: 27, cap: 256)]\r\n2018-05-02 22:02:01,662 DEBUG pool-1-thread-1 [CommandAsyncService.java:628] - acquired connection for command (SET) and params [a, PooledUnsafeDirectByteBuf(ridx: 0, widx: 27, cap: 256)] from slot NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=org.redisson.connection.MasterSlaveEntry@34f50df2] using node /192.168.11.216:6479... RedisConnection@2062359937 [redisClient=[addr=redis://192.168.11.216:6479], channel=[id: 0x1658e94c, L:/192.168.11.216:55081 ! R:/192.168.11.216:6479]]\r\n2018-05-02 22:02:01,663 DEBUG redisson-netty-1-5 [CommandAsyncService.java:797] - connection released for command (SET) and params [a, PooledUnsafeDirectByteBuf(ridx: 0, widx: 27, cap: 256)] from slot NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=org.redisson.connection.MasterSlaveEntry@34f50df2] using connection RedisConnection@2062359937 [redisClient=[addr=redis://192.168.11.216:6479], channel=[id: 0x1658e94c, L:/192.168.11.216:55081 ! R:/192.168.11.216:6479]]\r\norg.redisson.client.WriteRedisConnectionException: Unable to send command! Node source: NodeSource [slot=null, addr=null, redisClient=null, redirect=null, entry=org.redisson.connection.MasterSlaveEntry@34f50df2], connection: [id: 0x1658e94c, L:/192.168.11.216:55081 ! R:/192.168.11.216:6479], command: (SET), params: [a, PooledUnsafeDirectByteBuf(ridx: 0, widx: 27, cap: 256)]\r\n\tat org.redisson.command.CommandAsyncService.checkWriteFuture(CommandAsyncService.java:675)\r\n\tat org.redisson.command.CommandAsyncService.access$100(CommandAsyncService.java:84)\r\n```\r\n\r\nsentinel log:\r\n```\r\n[16612] 02 May 21:59:26.623 # +sdown master master 192.168.11.216 6479\r\n[16612] 02 May 21:59:26.623 # +odown master master 192.168.11.216 6479 #quorum 1/1\r\n[16612] 02 May 21:59:26.623 # +new-epoch 50\r\n[16612] 02 May 21:59:26.623 # +try-failover master master 192.168.11.216 6479\r\n[16612] 02 May 21:59:26.626 # +vote-for-leader 9c69c98a184dc560fd72fe710241d18f3afd0406 50\r\n[16612] 02 May 21:59:26.626 # +elected-leader master master 192.168.11.216 6479\r\n[16612] 02 May 21:59:26.626 # +failover-state-select-slave master master 192.168.11.216 6479\r\n[16612] 02 May 21:59:26.692 # +selected-slave slave 192.168.11.216:6579 192.168.11.216 6579 @ master 192.168.11.216 6479\r\n\r\n[16612] 02 May 21:59:26.692 * +failover-state-send-slaveof-noone slave 192.168.11.216:6579 192.168.11.216 6579 @ master 192.168.11.216 6479\r\n[16612] 02 May 21:59:26.744 * +failover-state-wait-promotion slave 192.168.11.216:6579 192.168.11.216 6579 @ master 192.168.11.216 6479\r\n[16612] 02 May 21:59:27.692 # +promoted-slave slave 192.168.11.216:6579 192.168.11.216 6579 @ master 192.168.11.216 6479\r\n\r\n[16612] 02 May 21:59:27.692 # +failover-state-reconf-slaves master master 192.168.11.216 6479\r\n[16612] 02 May 21:59:27.742 # +failover-end master master 192.168.11.216 6479\r\n[16612] 02 May 21:59:27.742 # +switch-master master 192.168.11.216 6479 192.168.11.216 6579\r\n[16612] 02 May 21:59:27.742 * +slave slave 192.168.11.216:6479 192.168.11.216 6479 @ master 192.168.11.216 6579\r\n[16612] 02 May 21:59:32.771 # +sdown slave 192.168.11.216:6479 192.168.11.216 6479 @ master 192.168.11.216 6579\r\n```\r\nIs that my code's error or redission's bug?\r\n\r\n--- update \r\nI find out the reason.\r\nIn SentinelConnectionManager's Constructor, loop all sentinelAddress using SENTINELS command to find all sentinels. If there is only one sentinel, `List<Map<String, String>> sentinelSentinels = connection.sync(StringCodec.INSTANCE, RedisCommands.SENTINEL_SENTINELS, cfg.getMasterName());` ,the code result will be empty. \r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1424", "user": "lansuiyun", "labels": ["bug"], "created": "2018-05-02 14:09:17", "closed": "2018-05-23 11:12:54", "commits": {"db4461b772d7d3686d0fa828f6d0d253fe829648": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "db4461b772d7d3686d0fa828f6d0d253fe829648", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["510f0e1ffc26161ee2f767f75031ca4ebcd8da6f"], "nameRev": "db4461b772d7d3686d0fa828f6d0d253fe829648 tags/redisson-2.12.1~17", "commitMessage": "sentinels amount checking. #1424\n", "commitDateTime": "2018-05-23 14:14:17", "authoredDateTime": "2018-05-23 14:14:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["db4461b772d7d3686d0fa828f6d0d253fe829648"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager"]}, {"title": "SSL connection to Azure redis failed", "body": "I caught Certificate Exception same as #1296,\r\nThe issue is that \"allAddrs\" size equals to 1.\r\nCan you explain the condition?\r\n\r\nthe cluster contains 6 nodes (3 masters,  3 slaves),\r\nall of them have static IP address and a unique port.\r\nfor example:\r\n 12.34.567.89:50001 MASTER\r\n 12.34.567.89:50002 SLAVE\r\n 12.34.567.89:50003 MASTER\r\n 12.34.567.89:50004 SLAVE\r\n 12.34.567.89:50005 MASTER\r\n 12.34.567.89:50006 SLAVE\r\n\r\nfrom ClusterConnectionManager:\r\n\r\n```                    Future<List<InetSocketAddress>> addrsFuture = resolver.resolveAll(InetSocketAddress.createUnresolved(addr.getHost(), addr.getPort()));\r\n                    List<InetSocketAddress> allAddrs = addrsFuture.syncUninterruptibly().getNow();\r\n                    if (allAddrs.size() > 1) {\r\n                        configEndpointHostName = addr.getHost();\r\n                        isConfigEndpoint = true;\r\n                    } else {\r\n                        resolver.close();\r\n                    }\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1422", "user": "haiS8dn", "labels": ["bug"], "created": "2018-04-29 12:42:21", "closed": "2018-05-04 13:38:38", "commits": {"58f7ec780cc67261c044e4e66a5171e00809420d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "58f7ec780cc67261c044e4e66a5171e00809420d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f6898656e7c0b7ba88f83ae0479500d056501f25"], "nameRev": "58f7ec780cc67261c044e4e66a5171e00809420d tags/redisson-2.12.0~20", "commitMessage": "Fixed - SSL connection to Azure redis failed. #1422\n", "commitDateTime": "2018-05-04 18:39:47", "authoredDateTime": "2018-05-04 18:39:47", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 4, "deletions": 9, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 9, "UPD": 2, "INS": 1, "MOV": 5, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["58f7ec780cc67261c044e4e66a5171e00809420d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 9, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 1, "MOV": 5, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager"]}, {"title": "AWS ElastiCache ClusterServersConfig DNS rediscovery failure", "body": "We are connecting to AWS ElastiCache - Redis cluster using a Route53 DNS endpoint with Redisson v3.6.5  \r\nWhen we change the cluster in the Route53 corresponding lookup change is not happening in Redisson. It is still looking up the old cluster nodes.\r\n \r\nNetty libraries used are as follows\r\n\r\n> netty-3.10.5.Final.jar\r\n> netty-buffer-4.1.17.Final.jar\r\n> netty-codec-4.1.17.Final.jar\r\n> netty-codec-dns-4.1.17.Final.jar\r\n> netty-common-4.1.17.Final.jar\r\n> netty-handler-4.1.17.Final.jar\r\n> netty-resolver-4.1.17.Final.jar\r\n> netty-resolver-dns-4.1.17.Final.jar\r\n> netty-transport-4.1.17.Final.jar\r\n\r\nSample Code\r\n```\r\n@Bean(name = \"cacheManager\")\r\n    public CacheManager cacheManager() {\r\n        RedissonSpringCacheManager redissonSpringCacheManager = null;\r\n        try {\r\n            final Map<String, CacheConfig> config = new HashMap();\r\n            redissonSpringCacheManager = new RedissonSpringCacheManager(redisCacheClientConfiguration().\r\n                    redissonClient(), config);        \r\n        } catch (Exception e) {\r\n            //\r\n        }\r\n        return redissonSpringCacheManager;\r\n    }\r\n\r\npublic RedissonClient redissonClient() {\r\n        final Config config = new Config();\r\n        config.useClusterServers()\r\n                .setIdleConnectionTimeout(cacheConfiguration.getIdleConnectionTimeout())\r\n                .setPingTimeout(cacheConfiguration.getPingTimeout())\r\n                .setConnectTimeout(cacheConfiguration.getConnectTimeout())\r\n                .setTimeout(cacheConfiguration.getTimeout())\r\n                .setRetryAttempts(cacheConfiguration.getRetryAttempts())\r\n                .setRetryInterval(cacheConfiguration.getRetryInterval())\r\n                .setFailedSlaveReconnectionInterval(cacheConfiguration.getReconnectionTimeout())\r\n                .setFailedSlaveCheckInterval(cacheConfiguration.getFailedAttempts())\r\n                .setSubscriptionsPerConnection(cacheConfiguration.getSubscriptionsPerConnection())\r\n                .setClientName(cacheConfiguration.getClientName())\r\n                .setLoadBalancer(cacheConfiguration.getLoadBalancer())              .setMasterConnectionMinimumIdleSize(cacheConfiguration.getMasterConnectionMinimumIdleSize())\r\n                .setMasterConnectionPoolSize(cacheConfiguration.getMasterConnectionPoolSize())\r\n                .setReadMode(cacheConfiguration.getReadMode())\r\n                .addNodeAddress(cacheConfiguration.getNodeAddress());\r\n        config.setCodec(cacheConfiguration.getCodec());\r\n        config.setEventLoopGroup(cacheConfiguration.getEventLoopGroup());\r\n        config.setUseLinuxNativeEpoll(cacheConfiguration.isUseLinuxNativeEpoll());\r\n        return Redisson.create(config);\r\n    }\r\n```", "url": "https://github.com/redisson/redisson/issues/1419", "user": "midhunchn", "labels": ["bug"], "created": "2018-04-27 07:46:50", "closed": "2018-04-30 13:43:40", "commits": {"adc8fe1361c8f41f3740a18cb0bb076c395bc45f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "5f4a2988724028a7c8deabbedb48adf5cb35a6e6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "adc8fe1361c8f41f3740a18cb0bb076c395bc45f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["759841b0c3329860a93d168130f85d45904098fc"], "nameRev": "adc8fe1361c8f41f3740a18cb0bb076c395bc45f tags/redisson-2.12.0~26", "commitMessage": "New IP discovery through DNS doesn't work for cluster mode. #1419\n", "commitDateTime": "2018-04-30 18:44:30", "authoredDateTime": "2018-04-30 18:44:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 4}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).2.run()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).2.run().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5f4a2988724028a7c8deabbedb48adf5cb35a6e6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["adc8fe1361c8f41f3740a18cb0bb076c395bc45f"], "nameRev": "5f4a2988724028a7c8deabbedb48adf5cb35a6e6 tags/redisson-2.12.0~25", "commitMessage": "New IP discovery through DNS doesn't work for cluster mode. #1419\n", "commitDateTime": "2018-05-01 16:25:29", "authoredDateTime": "2018-05-01 16:25:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 27, "deletions": 2, "lines": 29}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/RedisChannelInitializer.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/misc/URIBuilder.java", "insertions": 7, "deletions": 11, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient.resolveAddr().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 7, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.createInetSocketAddress(java.net.InetSocketAddress,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.resolveAddr()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisChannelInitializer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.RedisChannelInitializer.initSsl(org.redisson.client.RedisClientConfig,io.netty.channel.Channel)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "URIBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URIBuilder", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.misc.URIBuilder.isValidIP(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.misc.URIBuilder.compare(java.net.InetSocketAddress,java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["adc8fe1361c8f41f3740a18cb0bb076c395bc45f"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 13, "UPD": 0, "INS": 7, "MOV": 1, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).2.run().1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).2.run()"]}, {"title": "setPingConnectionInterval for replicated servers configuration is not propagated to underlying MasterSlaveServersConfig", "body": "Hey,\r\n\r\nWhen I set `setPingConnectionInterval` in the replicated servers configuration it's not propagated to underlying master slave configuration:\r\n\r\n```\r\n      config.useReplicatedServers()\r\n          .setPingConnectionInterval(1000)\r\n          .addNodeAddress(nodeAddresses.toArray(new String[0]));\r\n```\r\n\r\nMy current understand that ReplicatedServersConfig is used to create MasterSlaveServersConfiguration In the MasterSlaveConnectionManager in https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java#L389.\r\n\r\nIn this method setPingConnectionInterval is not copied and default value is used in MasterSlaveServersConfiguration.", "url": "https://github.com/redisson/redisson/issues/1415", "user": "avasenin", "labels": ["bug"], "created": "2018-04-26 11:59:30", "closed": "2018-04-27 11:53:05", "commits": {"56e276f9b41528df4ce396e926d2dd38527bbae6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "56e276f9b41528df4ce396e926d2dd38527bbae6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a4b4c38a70ff31ceb5091bb0f8a7f169bc10cb0f"], "nameRev": "56e276f9b41528df4ce396e926d2dd38527bbae6 tags/redisson-2.12.0~31", "commitMessage": "Fixed - setPingConnectionInterval is not propagated #1415\n", "commitDateTime": "2018-04-27 16:52:46", "authoredDateTime": "2018-04-27 16:52:46", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["56e276f9b41528df4ce396e926d2dd38527bbae6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)"]}, {"title": "getKeysByPattern is returning less number of keys in version 3.6.1", "body": "Hi,\r\n\r\nWe were using redisson version 3.5.2 and getKeysByPattern was returning all the keys matched for a particular pattern. When we upgraded to 3.6.1, the method seems to be broken and returning less number of keys than the keys actual present in redis.\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1406", "user": "Himanshu4", "labels": ["bug"], "created": "2018-04-24 12:04:31", "closed": "2018-05-04 12:35:19", "commits": {"cc29a54eaacdd8fdacc40bf051c3acbc2b08e2e6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "cc29a54eaacdd8fdacc40bf051c3acbc2b08e2e6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b476f4d1674662068e21630414532deff9384b3c"], "nameRev": "cc29a54eaacdd8fdacc40bf051c3acbc2b08e2e6 tags/redisson-2.12.0~22", "commitMessage": "Fixed - Iterator loop and incorrect result returning. #1406 #885\n", "commitDateTime": "2018-05-04 17:35:36", "authoredDateTime": "2018-05-04 17:35:36", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseIterator.java", "insertions": 114, "deletions": 0, "lines": 114}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 3, "deletions": 134, "lines": 137}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBaseMapIterator.java", "insertions": 5, "deletions": 135, "lines": 140}, {"filePath": "redisson/src/main/java/org/redisson/RedissonKeys.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMap.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMapIterator.java", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultiMapKeysIterator.java", "insertions": 19, "deletions": 12, "lines": 31}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultimap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSet.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetCache.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimapValues.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/{RedisClientResult.java => ScanResult.java}", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ListScanResult.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/MapScanResult.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 19, "deletions": 13, "lines": 32}, {"filePath": "redisson/src/test/java/org/redisson/RedissonKeysTest.java", "insertions": 68, "deletions": 1, "lines": 69}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseIterator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseIterator.hasNext()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.isEmpty(java.util.List)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 8}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.removeAll(java.util.List,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.convert(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.tryAgain()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.remove()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.remove(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.getValue(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBaseMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseMapIterator.getValue(java.util.Map$Entry)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.put(java.util.Map$Entry,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.getValue(java.util.Map$Entry).1", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.getValue(java.util.Map$Entry).1.setValue(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator", "TOT": 11, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 10}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.hasNext()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.tryAgain()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.iterator()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.convert(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.remove()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.removeKey()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(org.redisson.connection.MasterSlaveEntry,java.lang.String,int).2.remove(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(org.redisson.connection.MasterSlaveEntry,java.lang.String,int).2.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(org.redisson.connection.MasterSlaveEntry,java.lang.String,int).2.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.keyIterator(java.lang.String).18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMap.valueIterator(java.lang.String).19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapIterator.removeKey()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapIterator", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMapIterator.put(java.util.Map$Entry,java.lang.Object)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.iterator()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMapIterator.iterator(org.redisson.client.RedisClient,long)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.remove(java.util.Map$Entry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultiMapKeysIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.removeKey()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.iterator()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.put(java.util.Map$Entry,java.lang.Object)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.iterator(org.redisson.client.RedisClient,long)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.remove(java.util.Map$Entry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultimap.KeySet.iterator().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSet.iterator(java.lang.String).1.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator(java.lang.String).1.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator(java.lang.String).1.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCache.iterator(java.lang.String).1.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator(java.lang.String).1.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator(java.lang.String).1.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapValues.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator(java.lang.String).1.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator(java.lang.String).1.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator(java.lang.String).1.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ListScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult.getPos()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult.getValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult.getRedisClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult.getPos()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult.getValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult.getRedisClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,io.netty.util.concurrent.Future,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2.removeKey()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.removeKey()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2.put(java.util.Map$Entry,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.put(Map.Entry,org.redisson.jcache.V)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2.iterator()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.iterator()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.put(java.util.Map.Entry,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.remove(Map.Entry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonKeysTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeysTest.testEmptyKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeysTest.testKeysByPattern()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped2().3.remove(java.lang.Integer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped().2.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped().2.remove(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped2().3.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped2().3.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NullPointerException for RLiveObjectService.delete?", "body": "```\r\nRLiveObjectService service = redisson.getLiveObjectService();\r\nservice.delete(Model.class, \"key\");\r\n```\r\n\r\n```\r\njava.lang.NullPointerException\r\n        at org.redisson.RedissonLiveObjectService.delete(RedissonLiveObjectService.java:483)\r\n```\r\n\r\nif there is not a model class exist for \"key\", it will throw a NullPointerException?\r\n```\r\nT proxied = instantiateLiveObject(getProxyClass(entityClass), id);\r\nreturn asLiveObject(proxied).isExists() ? proxied : null;\r\n```\r\n\r\nhere may return null.", "url": "https://github.com/redisson/redisson/issues/1401", "user": "DreamXiao", "labels": ["bug"], "created": "2018-04-20 03:51:44", "closed": "2018-04-23 12:51:15", "commits": {"b4f69ba9746f8187eb870778b6ced201136604ce": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "b4f69ba9746f8187eb870778b6ced201136604ce", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cd39e884c930e4108aefde986de7ebaa94322385"], "nameRev": "b4f69ba9746f8187eb870778b6ced201136604ce tags/redisson-2.12.0~42", "commitMessage": "RLiveObjectService.delete throws NPE if entity doesn't exist.  #1401\n", "commitDateTime": "2018-04-23 17:52:06", "authoredDateTime": "2018-04-23 17:52:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/api/RLiveObjectService.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.delete(java.lang.Class,java.lang.Object)", "TOT": 8, "UPD": 1, "INS": 4, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "RLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.api.delete(java.lang.Class,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testDeleteNotExisted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b4f69ba9746f8187eb870778b6ced201136604ce"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 4, "lines": 14, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 4, "MOV": 2, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/api"], "changesInPackagesSPOON": ["org.redisson.api.delete(java.lang.Class,java.lang.Object)", "org.redisson.RedissonLiveObjectService.delete(java.lang.Class,java.lang.Object)"]}, {"title": "RMI Garbage Collection in Redis", "body": "Each of the RMIs seems to be put in a namespace under {redisson_rs}  How are RMIs being garbage collected or do we need to run another process to do our own garbage collection for RMIs?\r\n\r\nWe are using 3.6.5 on a Redis cluster at Amazon.  \r\n\r\nWhat we appear to be seeing is that the RMI jobs are never purged from the DB.  Most of our RMIs are set and forget.\r\n\r\nOur code generally looks something like this:\r\n\r\nThe server code\r\n\r\n       import java.util.concurrent.ExecutorService;\r\n       import java.util.concurrent.Executors;\r\n       import org.redisson.api.RRemoteService;\r\n       import org.redisson.api.RedissonClient;\r\n\r\n       int viewJobSize = rmiConfig.getForecastJobPoolSize() ;\r\n       viewJobSize = validatePoolSize(\"viewJob\", viewJobSize, RmiJobConfiguration.MIN_VIEW_JOB_POOL_SIZE );\r\n\r\n       ExecutorService forecastExecutor = Executors.newFixedThreadPool(forecastSize);\r\n\r\n\r\n       remoteService.register(ForecastServices.class, injector.getInstance(ForecastServicesImpl.class), NUM_FORECAST_EXECUTORS, forecastExecutor);\r\n\r\n\r\nThe client code\r\n\r\n       import org.redisson.api.RedissonClient;\r\n       import org.redisson.api.RemoteInvocationOptions;\r\n       RedissonClient client ;\r\n\r\n\r\n       private static final RemoteInvocationOptions triggerForecastBatchJob =\r\n                     RemoteInvocationOptions.defaults().noAck().noResult();\r\n       \r\n       private void submitJob(List<Integer> gwList, String jobId) {\r\n              client.getRemoteService().get(ForecastServicesAsync.class, triggerForecastBatchJob)\r\n                     .triggerDailyForecastBatchJob(gwList, jobId);\r\n              \r\n       }\r\n\r\nWhat we are seeing \r\n\r\n![rmi](https://user-images.githubusercontent.com/1531114/38838481-1eefa568-418b-11e8-8f13-ee814657e814.jpg)\r\n\r\nThe specific key/value pairs for the RMI seem to grow unbounded, until Redis runs out of memory to process more jobs.  We have been looking for someway to delete the job once it has been completed, but are not sure how to do this.  \r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1393", "user": "bhoover10001", "labels": ["bug"], "created": "2018-04-16 23:06:15", "closed": "2018-05-16 13:29:15", "commits": {"2222e3d13462d42bad97d1c36cb37812d02ceecc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "2222e3d13462d42bad97d1c36cb37812d02ceecc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["14fe53321c2ed17485e6d8456a07530e5c6f8e63"], "nameRev": "2222e3d13462d42bad97d1c36cb37812d02ceecc tags/redisson-2.12.1~30", "commitMessage": "Fixed - Executed remote tasks are not removed from Redis. #1393\n", "commitDateTime": "2018-05-16 18:27:07", "authoredDateTime": "2018-05-16 18:27:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java", "insertions": 0, "deletions": 20, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksService.java", "insertions": 1, "deletions": 7, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRemoteServiceTest.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScheduledTasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.ScheduledTasksService.addAsync(java.lang.String,org.redisson.remote.RemoteServiceRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksService.cancelExecutionAsync(org.redisson.remote.RequestId)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "RedissonRemoteServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testInvocations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2222e3d13462d42bad97d1c36cb37812d02ceecc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 28, "lines": 30, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 4, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.executor.ScheduledTasksService.addAsync(java.lang.String,org.redisson.remote.RemoteServiceRequest)", "org.redisson.executor.TasksService.cancelExecutionAsync(org.redisson.remote.RequestId)"]}, {"title": "RScheduledExecutorService\u4f7f\u7528\u4e2d\u53d1\u73b0\u7684\u95ee\u9898", "body": "\u5f53\u6ca1\u6709registerWorkers\u7684\u65f6\u5019\uff0c\u8c03\u7528countActiveWorkers\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u963b\u585e\u5728semaphore.tryAcquire(subscribers, 10, TimeUnit.MINUTES);", "url": "https://github.com/redisson/redisson/issues/1387", "user": "justlive1", "labels": ["bug"], "created": "2018-04-12 10:06:27", "closed": "2018-05-01 13:10:23", "commits": {"b0aa6e72013861020f0c270ceeabbe70a7dfe065": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "b0aa6e72013861020f0c270ceeabbe70a7dfe065", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5f4a2988724028a7c8deabbedb48adf5cb35a6e6"], "nameRev": "b0aa6e72013861020f0c270ceeabbe70a7dfe065 tags/redisson-2.12.0~24", "commitMessage": "RExecutorService.countActiveWorkers hangs if there no registered workers.  #1387\n", "commitDateTime": "2018-05-01 18:11:13", "authoredDateTime": "2018-05-01 18:11:13", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonExecutorService.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonExecutorService.countActiveWorkers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b0aa6e72013861020f0c270ceeabbe70a7dfe065"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonExecutorService.countActiveWorkers()"]}, {"title": "[CRITICAL] Redisson cluster sync failed", "body": "In cluster mode when master goes down and slave becomes a master, Redisson picks up new master but failes to sync slaves. Cluster nodes synchronisation crashes (never scheduled again) with `IllegalArgumentException` while processing slave nodes.\r\n\r\nRedis cluster setup:\r\n - 3 masters\r\n- 3 slaves\r\n\r\nRelevant stacktrace:\r\n\r\n```\r\n\r\nApril 6th 2018, 12:58:39.000 | java.lang.IllegalStateException: Can't find redis://10.3.0.74:6379 in slaves!\r\n-- | --\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | at org.redisson.connection.balancer.LoadBalancerManager.unfreeze(LoadBalancerManager.java:120) ~[redisson-3.6.4.jar!/:na]\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | at org.redisson.connection.MasterSlaveEntry.slaveUp(MasterSlaveEntry.java:383) ~[redisson-3.6.4.jar!/:na]\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | at org.redisson.cluster.ClusterConnectionManager.upDownSlaves(ClusterConnectionManager.java:439) ~[redisson-3.6.4.jar!/:na]\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | at org.redisson.cluster.ClusterConnectionManager.checkSlaveNodesChange(ClusterConnectionManager.java:426) ~[redisson-3.6.4.jar!/:na]\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | at org.redisson.cluster.ClusterConnectionManager.access$1400(ClusterConnectionManager.java:74) ~[redisson-3.6.4.jar!/:na]\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | at org.redisson.cluster.ClusterConnectionManager$4.operationComplete(ClusterConnectionManager.java:401) ~[redisson-3.6.4.jar!/:na]\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:511) [netty-common-4.1.22.Final.jar!/:4.1.22.Final]\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:483) [netty-common-4.1.22.Final.jar!/:4.1.22.Final]\r\n\r\n\u00a0 | April 6th 2018, 12:58:39.000 | 2018-04-06 11:58:39.248 DEBUG 1 --- [isson-netty-1-1] o.r.cluster.ClusterConnectionManager     : cluster nodes state from /10.3.0.33:6379:\r\n\r\n```\r\n\r\nCode path which fails with `IllegalArgumentException` (**please note it's 3.0.0 branch**):\r\n\r\nhttps://github.com/redisson/redisson/blob/3.0.0/redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java#L401\r\n\r\n\r\n`scheduleClusterChangeCheck(cfg, null);` is never executed thus Redisson stops sync cluster state. Any subsequent cluster change leads to a service outage.\r\n\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1378", "user": "yandooo", "labels": ["bug"], "created": "2018-04-06 12:56:23", "closed": "2018-04-09 07:39:20", "commits": {"dc74a12282863d5ac18e757067f197df82c229e1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "dc74a12282863d5ac18e757067f197df82c229e1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5a8877d5fc8220732925f0d693605364d0274e4a"], "nameRev": "dc74a12282863d5ac18e757067f197df82c229e1 tags/redisson-2.11.5~2", "commitMessage": "Fixed - ClusterConnectionManager throws IllegalArgumentException. #1378\n", "commitDateTime": "2018-04-09 12:39:39", "authoredDateTime": "2018-04-09 12:39:39", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dc74a12282863d5ac18e757067f197df82c229e1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition)", "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)"]}, {"title": "Unhandled DecoderExceptions deplete Netty pool", "body": "Our web application is writing an object using Redisson 3.6.4 (Jackson codec) which Jackson cannot deserialise for whatever reason. On attempting to read the object, Redisson fails on the first few attempts and throws a `DecoderException` as expected. However, the following message is seen from Netty:\r\n\r\n```\r\nApr 06, 2018 11:54:28 AM io.netty.channel.DefaultChannelPipeline onUnhandledInboundException\r\nWARNING: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('I' (code 73)): was expecting double-quote to start field name\r\n at [Source: io.netty.buffer.ByteBufInputStream@71350fef; line: 1, column: 3]\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:422)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n...\r\n```\r\n\r\nAfter a few attempts (depending on size of Redisson connection pool), all connections are depleted. At this point Redisson is unable to execute any more commands regardless of validity.\r\n\r\nI have created a barebones test case to demonstrate the problem: https://github.com/petenattress/redisson-test/blob/master/src/main/java/com/pete/RedissonTest.java\r\n\r\nYou can checkout and run with `./gradle run` (assuming Redis is running locally). See how the first few read attempts fail immediately, but the thrown execption changes from `RedisException` to `RedisTimeoutException` and the `RedissonClient` cannot execute any more commands.", "url": "https://github.com/redisson/redisson/issues/1377", "user": "petenattress", "labels": ["bug"], "created": "2018-04-06 12:36:14", "closed": "2018-04-09 07:12:59", "commits": {"a42a20ba112d908409777e3eed177f36007e5028": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "a42a20ba112d908409777e3eed177f36007e5028", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4d9daa2e69d0c638663b5c2d9b6a8796cdbcfffc"], "nameRev": "a42a20ba112d908409777e3eed177f36007e5028 tags/redisson-2.11.5~4", "commitMessage": "Fixed - CommandDecoder doesn't remove command with failed response from commands queue. #1377\n", "commitDateTime": "2018-04-09 12:13:33", "authoredDateTime": "2018-04-09 12:13:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 19, "deletions": 6, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.ChannelHandlerContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testDecoderError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a42a20ba112d908409777e3eed177f36007e5028"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 4, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 1, "INS": 5, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "org.redisson.client.handler.CommandDecoder.sendNext(io.netty.channel.ChannelHandlerContext)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"]}, {"title": "RSet returned by RSetMultimap.get() does not update multimap correctly.", "body": "RSets returned by get() cannot be used to populate RSetMultimap. Multimap key and size information is not managed properly despite get() returning populated sets. See this example:\r\n\r\n        RedissonClient redisson = Redisson.create();\r\n\r\n        // multimap populated via put() works\r\n        RSetMultimap<String, Integer> multimap0 = redisson.getSetMultimap(\"myMultimap0\");\r\n        multimap0.put(\"1\", 1);\r\n        multimap0.put(\"1\", 2);\r\n        multimap0.put(\"1\", 3);\r\n        multimap0.put(\"2\", 5);\r\n        multimap0.put(\"2\", 6);\r\n        multimap0.put(\"4\", 7);\r\n\r\n        logger.error(\">>>>>>>>>>>>>> multimap0 - keyset: \"+multimap0.keySet());\r\n        logger.error(\">>>>>>>>>>>>>> multimap0 - keysize: \"+multimap0.keySize());\r\n        logger.error(\">>>>>>>>>>>>>> multimap0 - 1: \"+multimap0.get(\"1\"));\r\n        logger.error(\">>>>>>>>>>>>>> multimap0 - 2: \"+multimap0.get(\"2\"));\r\n        logger.error(\">>>>>>>>>>>>>> multimap0 - 4: \"+multimap0.get(\"4\"));\r\n\r\n        // multimap populated via get() does not work\r\n        RSetMultimap<String, Integer> multimap1 = redisson.getSetMultimap(\"myMultimap1\");\r\n        Set<Integer> one = multimap1.get(\"1\");\r\n        Set<Integer> two = multimap1.get(\"2\");\r\n        Set<Integer> four = multimap1.get(\"4\");\r\n        one.add(1);\r\n        one.add(2);\r\n        one.add(3);\r\n        two.add(5);\r\n        two.add(6);\r\n        four.add(7);\r\n\r\n        logger.error(\">>>>>>>>>>>>>> multimap1 - keyset: \"+multimap1.keySet());\r\n        logger.error(\">>>>>>>>>>>>>> multimap1 - keysize: \"+multimap1.keySize());\r\n        logger.error(\">>>>>>>>>>>>>> multimap1 - 1: \"+multimap1.get(\"1\"));\r\n        logger.error(\">>>>>>>>>>>>>> multimap1 - 2: \"+multimap1.get(\"2\"));\r\n        logger.error(\">>>>>>>>>>>>>> multimap1 - 4: \"+multimap1.get(\"4\"));\r\n\r\n        multimap0.delete();\r\n        multimap1.delete();\r\n\r\n        redisson.shutdown();\r\n\r\nThis generates the following output:\r\n\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap0 - keyset: [1, 2, 4]\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap0 - keysize: 3\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap0 - 1: [1, 2, 3]\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap0 - 2: [5, 6]\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap0 - 4: [7]\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap1 - keyset: []\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap1 - keysize: 0\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap1 - 1: [1, 2, 3]\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap1 - 2: [5, 6]\r\n        [main] ERROR - >>>>>>>>>>>>>> multimap1 - 4: [7]\r\n\r\nHere, multimap1 keyset and keysize are not initialized. Javadoc for the get() method claims:\r\n\r\n\"Changes to the returned collection will update the underlying multimap, and vice versa.\"", "url": "https://github.com/redisson/redisson/issues/1375", "user": "rwatler", "labels": ["bug"], "created": "2018-04-05 22:47:19", "closed": "2018-04-09 06:17:03", "commits": {"f1c7b209744161743c8535624ba948c97d5be54e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "f1c7b209744161743c8535624ba948c97d5be54e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["096155dff628c84fe04cb86bdac1623202704201"], "nameRev": "f1c7b209744161743c8535624ba948c97d5be54e tags/redisson-2.11.5~6", "commitMessage": "Fixed - RSetMultimap.get() does not update multimap correctly. #1375\n", "commitDateTime": "2018-04-09 11:15:57", "authoredDateTime": "2018-04-09 11:15:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonListMultimap.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimap.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetMultimapTest.java", "insertions": 85, "deletions": 0, "lines": 85}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonListMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimap.get(java.lang.Object).1.addAsync(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimap.get(java.lang.Object).1.addAllAsync(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimap.get(java.lang.Object).1.removeAsync(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.addAsync(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.addAllAsync(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.removeAsync(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testGetAdd()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testGetAddAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testGetRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testGetRemoveAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f1c7b209744161743c8535624ba948c97d5be54e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 48, "deletions": 0, "lines": 48, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonListMultimap.get(java.lang.Object).1.removeAsync(java.lang.Object)", "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.addAllAsync(java.util.Collection)", "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)", "org.redisson.RedissonListMultimap.get(java.lang.Object).1.addAllAsync(java.util.Collection)", "org.redisson.RedissonListMultimap.get(java.lang.Object).1.addAsync(java.lang.Object)", "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.addAsync(java.lang.Object)", "org.redisson.RedissonSetMultimap.get(java.lang.Object).1.removeAsync(java.lang.Object)", "org.redisson.RedissonListMultimap.get(java.lang.Object).1.removeAllAsync(java.util.Collection)"]}, {"title": "Redisson connected to sentinels works fine - But throws the following error", "body": "`[ERROR] MSG - o.r.c.SentinelConnectionManager Can't update cluster state`\r\n\r\nHi,\r\n\r\nI've RedissonClient connected to Redis Sentinels(Redis 4). Redis commands work fine, but throws the above error. Couldn't figure out the cause of the issue", "url": "https://github.com/redisson/redisson/issues/1366", "user": "auror", "labels": ["bug"], "created": "2018-03-29 10:22:33", "closed": "2018-03-29 10:57:22", "commits": {"bcdc19d7dbbdfa9ff52c6c7a045dad0a862e473f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bcdc19d7dbbdfa9ff52c6c7a045dad0a862e473f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4e900cb412fcc9757ed08826855639e38c8b9fb7"], "nameRev": "bcdc19d7dbbdfa9ff52c6c7a045dad0a862e473f tags/redisson-2.11.5~8", "commitMessage": "Fixed - an error shouldn't appear if Redisson successfully got the information at least from one sentinel/cluster server. #1366\n", "commitDateTime": "2018-03-29 15:54:41", "authoredDateTime": "2018-03-29 15:54:41", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.checkState(org.redisson.config.SentinelServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bcdc19d7dbbdfa9ff52c6c7a045dad0a862e473f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "org.redisson.connection.SentinelConnectionManager.checkState(org.redisson.config.SentinelServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)"]}, {"title": "Is this a bug", "body": "RedissonRemoteService.java\r\n\r\nprotected RFuture<Boolean> removeAsync(String requestQueueName, RequestId taskId) {\r\n    return commandExecutor.evalWriteAsync(name, LongCodec.INSTANCE, RedisCommands.EVAL_BOOLEAN,\r\n            \"redis.call('lrem', KEYS[1], 1, ARGV[1]); \"\r\n            + \"redis.call('hset', KEYS[2], ARGV[1]);\"   --may be \"hdel\"\r\n            + \"return 1;\",\r\n            Arrays.<Object>asList(requestQueueName, requestQueueName + \":tasks\"),\r\n            taskId.toString());\r\n}", "url": "https://github.com/redisson/redisson/issues/1363", "user": "smartbruce", "labels": ["bug"], "created": "2018-03-28 09:54:13", "closed": "2018-03-29 07:22:20", "commits": {"dece260e2b777678e0a2a5945866df9b1a2fe275": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dece260e2b777678e0a2a5945866df9b1a2fe275", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d9e57be29ebad43967cee66fbb95803a60dd4b35"], "nameRev": "dece260e2b777678e0a2a5945866df9b1a2fe275 tags/redisson-2.11.5~13", "commitMessage": "Fixed - hdel wasn't used during remote service task removal. #1363\n", "commitDateTime": "2018-03-29 11:37:11", "authoredDateTime": "2018-03-29 11:37:11", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dece260e2b777678e0a2a5945866df9b1a2fe275"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRemoteService.removeAsync(java.lang.String,org.redisson.remote.RequestId)"]}, {"title": "NPE in CommandDecoder handler while using RBatch object", "body": "io.netty.handler.codec.DecoderException: java.lang.NullPointerException\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:422)\r\n\tat io.netty.handler.codec.ReplayingDecoder.channelInputClosed(ReplayingDecoder.java:329)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:359)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75)\r\n\tat org.redisson.client.handler.CommandsQueue.channelInactive(CommandsQueue.java:83)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224)\r\n\tat org.redisson.client.handler.ConnectionWatchdog.channelInactive(ConnectionWatchdog.java:83)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1409)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:927)\r\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:822)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.redisson.client.handler.CommandDecoder.decodeCommandBatch(CommandDecoder.java:204)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:119)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)", "url": "https://github.com/redisson/redisson/issues/1350", "user": "mrniko", "labels": ["bug"], "created": "2018-03-21 07:02:35", "closed": "2018-03-21 07:04:48", "commits": {"72714dc6820379d22ef349a239b8ee636fd35a83": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "72714dc6820379d22ef349a239b8ee636fd35a83", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ed11c6000e01a07ecfd105b2dcb961dca3ab2ef8"], "nameRev": "72714dc6820379d22ef349a239b8ee636fd35a83 tags/redisson-2.11.4~10", "commitMessage": "Fixed - NPE in CommandDecoder handler while using RBatch object #1350\n", "commitDateTime": "2018-03-21 12:04:05", "authoredDateTime": "2018-03-21 12:04:05", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["72714dc6820379d22ef349a239b8ee636fd35a83"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)"]}, {"title": "redisson jcache.getAll(Set<T>) causes io.netty.util.IllegalReferenceCountException: refCnt: 0", "body": "\t\t<!-- https://mvnrepository.com/artifact/org.redisson/redisson -->\r\n\t\t<dependency>\r\n\t\t    <groupId>org.redisson</groupId>\r\n\t\t    <artifactId>redisson</artifactId>\r\n\t\t    <version>3.6.3</version>\r\n\t\t</dependency>\r\n\r\nredisson-jcache.json\r\n{\r\n   \"singleServerConfig\":{\r\n      \"idleConnectionTimeout\":10000,\r\n      \"pingTimeout\":1000,\r\n      \"connectTimeout\":10000,\r\n      \"timeout\":3000,\r\n      \"retryAttempts\":3,\r\n      \"retryInterval\":1500,\r\n      \"reconnectionTimeout\":3000,\r\n      \"failedAttempts\":3,\r\n      \"password\":\"secret\",\r\n      \"subscriptionsPerConnection\":5,\r\n      \"clientName\":null,\r\n      \"address\": \"redis://127.0.0.1:6379\",\r\n      \"subscriptionConnectionMinimumIdleSize\":1,\r\n      \"subscriptionConnectionPoolSize\":50,\r\n      \"connectionMinimumIdleSize\":32,\r\n      \"connectionPoolSize\":64,\r\n      \"database\":0,\r\n      \"dnsMonitoring\":false,\r\n      \"dnsMonitoringInterval\":5000\r\n   },\r\n   \"threads\":0,\r\n   \"nettyThreads\":0,\r\n   \"codec\":{\r\n         \"class\":\"org.redisson.codec.JsonJacksonCodec\"\r\n      },\r\n   \"transportMode\":\"NIO\"\r\n}\r\n\r\nI have also tried this with multiple serialization codecs and the result is always the same. We are attempting to convert our EHCache JCache implementation to Redis. Calling JCache.get with a key works but JCache.getAll with a set of keys fails every time. This is essential to a smooth transition for us as we don't want to redesign our application at the same time we are switching technologies. We would like to avoid using native libraries if at all possible.\r\n\r\nio.netty.util.IllegalReferenceCountException: refCnt: 0\r\n\tat io.netty.buffer.AbstractByteBuf.ensureAccessible(AbstractByteBuf.java:1408)\r\n\tat io.netty.buffer.AbstractByteBuf.checkIndex(AbstractByteBuf.java:1347)\r\n\tat io.netty.buffer.AbstractByteBuf.getInt(AbstractByteBuf.java:415)\r\n\tat io.netty.buffer.ByteBufUtil.hashCode(ByteBufUtil.java:162)\r\n\tat io.netty.buffer.AbstractByteBuf.hashCode(AbstractByteBuf.java:1306)\r\n\tat java.util.HashMap.hash(HashMap.java:339)\r\n\tat java.util.HashMap.put(HashMap.java:612)\r\n\tat org.redisson.jcache.JCache.getAll(JCache.java:642)\r\n\t\r\nThank you, any help would be appreciated.\r\n", "url": "https://github.com/redisson/redisson/issues/1349", "user": "jeff-johnston", "labels": ["bug"], "created": "2018-03-20 16:59:16", "closed": "2018-03-21 07:29:35", "commits": {"8bf791004c72edebdd484e38e339907047dd5d10": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8bf791004c72edebdd484e38e339907047dd5d10", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["41f6244ade6b450b1c4154fb1456638b920373e0"], "nameRev": "8bf791004c72edebdd484e38e339907047dd5d10 tags/redisson-2.11.4~8", "commitMessage": "Fixed - jcache.getAll(Set<T>) causes io.netty.util.IllegalReferenceCountException #1349\n", "commitDateTime": "2018-03-21 12:29:59", "authoredDateTime": "2018-03-21 12:29:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/jcache/JCacheTest.java", "insertions": 33, "deletions": 5, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.getAll(java.util.Set)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCacheTest.testGetAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8bf791004c72edebdd484e38e339907047dd5d10"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/jcache"], "changesInPackagesSPOON": ["org.redisson.jcache.JCache.getAll(java.util.Set)"]}, {"title": "RSortedSet tries to compare wrong types", "body": "I have a sorted set of longs and try to check if a value is contained.\r\n\r\nI use the LongCodec and get the following error:\r\nException in thread \"main\" java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.Long\r\n\tat java.lang.Long.compareTo(Long.java:54)\r\n\tat org.redisson.RedissonSortedSet$NaturalComparator.compare(RedissonSortedSet.java:63)\r\n\tat org.redisson.RedissonSortedSet.binarySearch(RedissonSortedSet.java:432)\r\n\tat org.redisson.RedissonSortedSet.contains(RedissonSortedSet.java:197)\r\n\r\nI debugged it and also saw that a RedissonList is created in the constructor, but the Codec is not supplied to it. May has something to do with it...\r\n\r\nThe Values in the list are typed as Integer, which they shouldn't be", "url": "https://github.com/redisson/redisson/issues/1342", "user": "Flyffies", "labels": ["bug"], "created": "2018-03-18 22:29:24", "closed": "2018-04-11 07:05:40", "commits": {"ed11c6000e01a07ecfd105b2dcb961dca3ab2ef8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "ed11c6000e01a07ecfd105b2dcb961dca3ab2ef8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3aea85ab03f0613f2234867ee12131b5f2f85d15"], "nameRev": "ed11c6000e01a07ecfd105b2dcb961dca3ab2ef8 tags/redisson-2.11.4~11", "commitMessage": "Fixed - RSortedSet tries to compare wrong types. #1342\n", "commitDateTime": "2018-03-19 13:47:28", "authoredDateTime": "2018-03-19 13:47:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonSortedSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSortedSetTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSortedSet", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSortedSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSortedSetTest.test1()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ed11c6000e01a07ecfd105b2dcb961dca3ab2ef8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSortedSet"]}, {"title": "RListMultimapCache removeAll method throw java.lang.ClassCastException: java.util.LinkedHashSet cannot be cast to java.util.List", "body": "```java\r\nRListMultimapCache<String, RuleHit> test = redissonClient.getListMultimapCache(\"test\");\r\ntest.put(\"key1\",new RuleHit(\"value1\",\"title1\",\"info1\"));\r\ntest.put(\"key1\",new RuleHit(\"value2\",\"title2\",\"info2\"));\r\n\r\nSystem.out.println(test.getAll(\"key1\").size());\r\n\r\ntest.removeAll(\"key1\");\r\n```", "url": "https://github.com/redisson/redisson/issues/1338", "user": "Wesly186", "labels": ["bug"], "created": "2018-03-15 08:09:07", "closed": "2018-03-16 10:34:08", "commits": {"53ec9f16bd0e6ab12c2c526512f0f98ea843d3c3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "53ec9f16bd0e6ab12c2c526512f0f98ea843d3c3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8b52b76e2baa30b8b7234ea8bb825a92173774b3"], "nameRev": "53ec9f16bd0e6ab12c2c526512f0f98ea843d3c3 tags/redisson-2.11.4~14", "commitMessage": "Fixed - ClassCastException in RListMultimapCache.removeAll method. #1338\n", "commitDateTime": "2018-03-16 15:34:12", "authoredDateTime": "2018-03-16 15:34:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonListMultimapCache.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBaseMultimapCacheTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonListMultimapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimapCache.removeAllAsync(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.containsKeyAsync(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.containsValueAsync(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.containsEntryAsync(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.getAllAsync(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBaseMultimapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseMultimapCacheTest.testRemoveAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["53ec9f16bd0e6ab12c2c526512f0f98ea843d3c3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 3, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 5, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonListMultimapCache.containsValueAsync(java.lang.Object)", "org.redisson.RedissonListMultimapCache.containsKeyAsync(java.lang.Object)", "org.redisson.RedissonListMultimapCache.removeAllAsync(java.lang.Object)", "org.redisson.RedissonListMultimapCache.getAllAsync(java.lang.Object)", "org.redisson.RedissonListMultimapCache.containsEntryAsync(java.lang.Object,java.lang.Object)"]}, {"title": "master-slave\u6a21\u5f0f\u4e0b\u6709bug\uff0c\u5bfc\u81f4\u83b7\u53d6\u8fde\u63a5\u7f13\u6162", "body": "# master-slave\u6709bug\r\n\r\n## \u89e6\u53d1\u6761\u4ef6\r\n\r\n* redisson \u7248\u672c\u90093.6.2\r\n\r\n* \u91c7\u7528redisson\u63a8\u8350\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5176\u4e2dretryInterval=1500\uff0c\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u4e3aRoundRobinLoadBalancer\r\n\r\n* readMode \u8bbe\u7f6e\u4e3a SLAVE\r\n\r\n* slaveAddresses\u914d\u81f3\u5c111\u4e2a\uff0cmasterAddress\u4e5f\u914d\u4e0a\r\n\r\n * JDK \u7248\u672c\u4e3a1.8x\r\n\r\n## bug\u8868\u73b0\r\n\r\n\u6709\u65f6\u5019get\u64cd\u4f5c\u975e\u5e38\u7f13\u6162\uff0c\u9700\u89811500\u6beb\u79d2\u4ee5\u4e0a\uff08\u7b491\u4e2aretryInterval\u5468\u671f\uff09\u624d\u80fd\u5b8c\u6210\r\n\r\n## bug\u53d1\u751f\u7684\u539f\u56e0\r\n\r\n* debug\u53d1\u73b0slaveConnectionPool\u4f1a\u6301\u6709\u5199\u8fde\u63a5\u6c60\uff0c\u5b83\u6301\u6709\u7684\u5199\u8fde\u63a5\u6c60\u4e3a\u51bb\u7ed3\u72b6\u6001\r\n\r\n* \u6240\u4ee5\uff0c\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u4e00\u65e6\u8d1f\u8f7d\u5747\u8861\u5230\u5199\u8fde\u63a5\u6c60\uff0c\u5c31\u4f1a\u8fdb\u5165\u629b\u5f02\u5e38\u91cd\u8bd5\u903b\u8f91\r\n\r\n* \u91cd\u8bd5\u83b7\u53d6\u8fde\u63a5\u81f3\u5c11\u89811500\u6beb\u79d2\r\n\r\n```java\r\n//\u4ee3\u7801\u4f4d\u7f6e\u4e3aorg.redisson.connection.pool.ConnectionPool#get(org.redisson.client.protocol.RedisCommand<?>)\r\n\r\n    public RFuture<T> get(RedisCommand<?> command) {\r\n        for (int j = entries.size() - 1; j >= 0; j--) {\r\n            final ClientConnectionsEntry entry = getEntry();\r\n            if ((!entry.isFreezed() || \r\n                    (entry.getFreezeReason() == FreezeReason.SYSTEM && config.getReadMode() == ReadMode.MASTER_SLAVE)) && \r\n        \t\t    tryAcquireConnection(entry)) {\r\n                return acquireConnection(command, entry);\r\n            }\r\n        }\r\n        \r\n        List<InetSocketAddress> failedAttempts = new LinkedList<InetSocketAddress>();\r\n        List<InetSocketAddress> freezed = new LinkedList<InetSocketAddress>();\r\n        for (ClientConnectionsEntry entry : entries) {\r\n            if (entry.isFreezed()) {\r\n                freezed.add(entry.getClient().getAddr());\r\n            } else {\r\n                failedAttempts.add(entry.getClient().getAddr());\r\n            }\r\n        }\r\n\r\n        StringBuilder errorMsg = new StringBuilder(getClass().getSimpleName() + \" no available Redis entries. \");\r\n        if (!freezed.isEmpty()) {\r\n            errorMsg.append(\" Disconnected hosts: \" + freezed);\r\n        }\r\n        if (!failedAttempts.isEmpty()) {\r\n            errorMsg.append(\" Hosts disconnected due to `failedAttempts` limit reached: \" + failedAttempts);\r\n        }\r\n\r\n        RedisConnectionException exception = new RedisConnectionException(errorMsg.toString());\r\n        return RedissonPromise.newFailedFuture(exception);\r\n    }\r\n```\r\n\r\n@jackygurui", "url": "https://github.com/redisson/redisson/issues/1337", "user": "konglz", "labels": ["bug"], "created": "2018-03-12 02:32:08", "closed": "2018-03-22 07:27:13", "commits": {"03ebf8f96c8487646806dc68c5b0cf7ae8f16a7f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "03ebf8f96c8487646806dc68c5b0cf7ae8f16a7f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["60fb467012c2e0b8929b135a4c9dda9aff21f773"], "nameRev": "03ebf8f96c8487646806dc68c5b0cf7ae8f16a7f tags/redisson-2.11.4~4", "commitMessage": "Fixed - race condition with load balancer node selection. #1337\n", "commitDateTime": "2018-03-22 12:27:28", "authoredDateTime": "2018-03-22 12:27:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 6, "deletions": 15, "lines": 21}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/MasterConnectionPool.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/MasterPubSubConnectionPool.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "TOT": 11, "UPD": 1, "INS": 3, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.acquireConnection(org.redisson.client.protocol.RedisCommand,org.redisson.connection.ClientConnectionsEntry)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.getEntry()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand,org.redisson.connection.ClientConnectionsEntry)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "MasterConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.MasterConnectionPool.getEntry()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.MasterConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterPubSubConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.MasterPubSubConnectionPool.getEntry()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.MasterPubSubConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.sendCommands(org.redisson.api.RedissonClient).13.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInCluster()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["03ebf8f96c8487646806dc68c5b0cf7ae8f16a7f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 21, "lines": 38, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 28, "UPD": 8, "INS": 6, "MOV": 8, "DEL": 6, "spoonFilesChanged": 3, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/pool"], "changesInPackagesSPOON": ["org.redisson.connection.pool.MasterPubSubConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.pool.MasterConnectionPool.getEntry()", "org.redisson.connection.pool.MasterPubSubConnectionPool.getEntry()", "org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand,org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.pool.ConnectionPool.getEntry()", "org.redisson.connection.pool.MasterConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.pool.ConnectionPool.acquireConnection(org.redisson.client.protocol.RedisCommand,org.redisson.connection.ClientConnectionsEntry)"]}, {"title": "Unable to connect AWS elastic Cahce over SSL in Cluster mode", "body": "I am using lib version: 3.6.2\r\nWhen trying to connect AWS Elastic cache(i.e `rediss://clustercfg.xxx-test-sample.ttt.usw2.cache.amazonaws.com:6379`) over `ssl` in `cluster` mode getting below exception:\r\n```\r\nio.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: General SSLEngine problem\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:459)\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n                at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1414)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n                at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:945)\r\n                at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:146)\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\n                at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n                at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n                at java.lang.Thread.run(Thread.java:748)\r\nCaused by: javax.net.ssl.SSLHandshakeException: General SSLEngine problem\r\n                at sun.security.ssl.Handshaker.checkThrown(Handshaker.java:1529)\r\n                at sun.security.ssl.SSLEngineImpl.checkTaskThrown(SSLEngineImpl.java:535)\r\n                at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:813)\r\n                at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:781)\r\n                at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:624)\r\n                at io.netty.handler.ssl.SslHandler$SslEngineType$3.unwrap(SslHandler.java:292)\r\n                at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1257)\r\n                at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1159)\r\n                at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1203)\r\n                at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n                ... 16 common frames omitted\r\nCaused by: javax.net.ssl.SSLHandshakeException: General SSLEngine problem\r\n                at sun.security.ssl.Alerts.getSSLException(Alerts.java:192)\r\n                at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1728)\r\n                at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:330)\r\n                at sun.security.ssl.Handshaker.fatalSE(Handshaker.java:322)\r\n                at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1614)\r\n                at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:216)\r\n                at sun.security.ssl.Handshaker.processLoop(Handshaker.java:1052)\r\n                at sun.security.ssl.Handshaker$1.run(Handshaker.java:992)\r\n                at sun.security.ssl.Handshaker$1.run(Handshaker.java:989)\r\n                at java.security.AccessController.doPrivileged(Native Method)\r\n                at sun.security.ssl.Handshaker$DelegatedTask.run(Handshaker.java:1467)\r\n                at io.netty.handler.ssl.SslHandler.runDelegatedTasks(SslHandler.java:1417)\r\n                at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1325)\r\n                ... 20 common frames omitted\r\nCaused by: java.security.cert.CertificateException: No subject alternative names matching IP address 10.82.141.245 found\r\n                at sun.security.util.HostnameChecker.matchIP(HostnameChecker.java:168)\r\n                at sun.security.util.HostnameChecker.match(HostnameChecker.java:94)\r\n                at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:455)\r\n                at sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:436)\r\n                at sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:252)\r\n                at sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:136)\r\n                at sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1601)\r\n```\r\n\r\nNot sure whats going wrong here, as per documents AWS manages the SSL certs so ideally this exception shouldn't have arrises.\r\nI see this was closed as part of the issue #1135 . How ever single server mode with SSL is working fine. Could you please help me on this?", "url": "https://github.com/redisson/redisson/issues/1334", "user": "jayarampradhan", "labels": ["bug"], "created": "2018-03-09 19:06:23", "closed": "2018-03-13 07:24:14", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[2.11.1] Unable to re-establish MasterConnectionPool after restarting redis", "body": "We are Trying to add a mechanism to re-subscribe to topics after restarting redis.\r\n\r\n**Setting UP:**\r\n1. Redis version:  2.8.17\r\n2. Redis Mode: Sentinel   1 Master, 2 Slave\r\n2. Redisson Version:  2.11.1  (Comparison With Redisson 2.9.1 see later section)\r\n3. Read.Mode: Slave, Subscribe: Slave\r\n\r\n**Steps to recreate:**\r\n1. shut down sentinel\r\n   --- --- wait 10 seconds------\r\n2. shut down server\r\n3. Redisson send multiple \"GET\" \"SET\" commands attempting more than maxFailAttemp, make sure redisson regards all the redis server box down\r\n3. restart redis server\r\n4. restart redis sentinel\r\n\r\n5. remove listener to the topic\r\n6. resubscribe to the topics\r\n\r\n> See Following Error, Redis MasterConnectionPool is not re-established.\r\n\r\n\r\norg.redisson.client.RedisTimeoutException: Subscribe timeout: (5000ms)\r\n\tat org.redisson.command.CommandAsyncService.syncSubscription(CommandAsyncService.java:130) ~[redisson-2.11.1.jar!/:?]\r\n\tat org.redisson.RedissonTopic.addListener(RedissonTopic.java:107) ~[redisson-2.11.1.jar!/:?]\r\n\tat org.redisson.RedissonTopic.addListener(RedissonTopic.java:102) ~[redisson-2.11.1.jar!/:?]\r\n\tat jibe.common.pubsub.monitor.RedisSubMonitor.reSubscribetoTopic(RedisSubMonitor.java:47) ~[jibe-common-base-4.1-SNAPSHOT.jar!/:?]\r\n\tat jibe.common.pubsub.monitor.RedisSubMonitor.checkSubscriptionStatus(RedisSubMonitor.java:76) ~[jibe-common-base-4.1-SNAPSHOT.jar!/:?]\r\n\tat sun.reflect.GeneratedMethodAccessor22.invoke(Unknown Source) ~[?:?]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_73]\r\n\tat java.lang.reflect.Method.invoke(Method.java:497) ~[?:1.8.0_73]\r\n\tat org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65) ~[spring-context-5.0.0.RC3.jar!/:5.0.0.RC3]\r\n\tat org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) [spring-context-5.0.0.RC3.jar!/:5.0.0.RC3]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_73]\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [?:1.8.0_73]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_73]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [?:1.8.0_73]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_73]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_73]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_73]\r\n[2018-03-08 22:42:48.305] [ERROR] [hydrogen-app-pool-1] TaskUtils$LoggingErrorHandler - Unexpected error occurred in scheduled task.\r\norg.redisson.client.RedisConnectionException: MasterConnectionPool no available Redis entries.  Disconnected hosts: [/10.240.24.19:6379]\r\n\tat org.redisson.connection.pool.ConnectionPool.get(ConnectionPool.java:199) ~[redisson-2.11.1.jar!/:?]\r\n\tat org.redisson.connection.pool.MasterConnectionPool.get(MasterConnectionPool.java:31) ~[redisson-2.11.1.jar!/:?]\r\n\tat org.redisson.connection.MasterSlaveEntry.connectionWriteOp(MasterSlaveEntry.java:534) ~[redisson-2.11.1.jar!/:?]\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(MasterSlaveConnectionManager.java:845) ~[redisson-2.11.1.jar!/:?]\r\n\tat org.redisson.command.CommandAsyncService.async(CommandAsyncService.java:498) ~[redisson-2.11.1.jar!/:?]\r\n\tat org.redisson.command.CommandAsyncService$8.run(CommandAsyncService.java:577) ~[redisson-2.11.1.jar!/:?]\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:663) ~[netty-all-4.1.16.Final.jar!/:4.1.16.Final]\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:738) ~[netty-all-4.1.16.Final.jar!/:4.1.16.Final]\r\n\tat io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:466) ~[netty-all-4.1.16.Final.jar!/:4.1.16.Final]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_73]\r\n\r\n\r\n=====================================================================\r\nWe were initially at Redisson version 2.9.1, but when we following the previous steps, in step 5, we encountered the same issue as in https://github.com/redisson/redisson/issues/1268, which is removeListener thread blocks forever, so make the switch to 2.11.1\r\n\r\nWe also simulate the scenario with 2.9.1 version,  without doing removeListener (we found out there is pubsub Listener leak issue with 2.9.1, that is why we remove the old listener first), the MasterConnectionPool was able to re-establish.\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1331", "user": "brother-fu", "labels": ["bug"], "created": "2018-03-09 00:02:24", "closed": "2018-03-12 12:25:27", "commits": {"6a0537cf1b348046fb68bdf7721cba855ca29237": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "6a0537cf1b348046fb68bdf7721cba855ca29237", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7d832dddf9b7aa21fb2c07c8e1dff5164a6cfe1f"], "nameRev": "6a0537cf1b348046fb68bdf7721cba855ca29237 tags/redisson-2.11.3~7", "commitMessage": "Fixed - PubSub couldn't be resubscribed during failover.  #1331\n", "commitDateTime": "2018-03-12 17:25:30", "authoredDateTime": "2018-03-12 17:25:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/config/BaseConfig.java", "insertions": 14, "deletions": 55, "lines": 69}, {"filePath": "redisson/src/main/java/org/redisson/config/BaseMasterSlaveServersConfig.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 13, "deletions": 10, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 81, "deletions": 64, "lines": 145}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 24, "deletions": 22, "lines": 46}, {"filePath": "redisson/src/main/java/org/redisson/connection/PubSubConnectionEntry.java", "insertions": 9, "deletions": 14, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancer.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/RandomLoadBalancer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 17, "deletions": 27, "lines": 44}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 47, "deletions": 2, "lines": 49}, {"filePath": "redisson/src/test/java/org/redisson/spring/support/SpringNamespaceWikiTest.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.BaseConfig", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.redisson.config.BaseConfig.setReconnectionTimeout(int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.config.BaseConfig.getReconnectionTimeout()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.config.BaseConfig.setFailedAttempts(int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.config.BaseConfig.getFailedAttempts()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BaseMasterSlaveServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.BaseMasterSlaveServersConfig", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.BaseMasterSlaveServersConfig.setFailedSlaveReconnectionInterval(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.BaseMasterSlaveServersConfig.getFailedSlaveReconnectionInterval()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.BaseMasterSlaveServersConfig.setFailedSlaveCheckInterval(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.BaseMasterSlaveServersConfig.getFailedSlaveCheckInterval()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.resetFailedAttempts()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.getFailedAttempts()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.incFailedAttempts()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.toString()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.punsubscribe(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean)", "TOT": 21, "UPD": 8, "INS": 0, "MOV": 9, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[]).3.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean).8", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initTimer(org.redisson.config.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean).8.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 6}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean)", "TOT": 12, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.RedisPubSubListener[])", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.connection.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[])", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.RedisPubSubListener[]).3.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType).9.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType).9.run().1.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType).9.run().1.run().1.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[])", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean).10.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.unfreeze()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSub(org.redisson.client.RedisPubSubConnection,boolean)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.psubscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(org.redisson.client.RedisClient,boolean,org.redisson.api.NodeType).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).9.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).7.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).7.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.psubscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.getAvailableClients()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.isSlaveUnfreezed(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,org.redisson.client.protocol.pubsub.PubSubType).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean).3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.addSubscribeListener(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType)", "TOT": 12, "UPD": 2, "INS": 0, "MOV": 7, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.getSubscribeFuture(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType)", "TOT": 11, "UPD": 0, "INS": 3, "MOV": 6, "DEL": 2}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.addSlave(java.lang.String,java.lang.String,java.lang.String).9.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.addSlave(java.lang.String,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager.create(org.redisson.config.SingleServerConfig)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "LoadBalancer.java", "spoonMethods": []}, {"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.unfreeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.isUnfreezed(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RandomLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.RandomLoadBalancer.getEntry(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.connectedSuccessful(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.checkForReconnect(org.redisson.connection.ClientConnectionsEntry,java.lang.Throwable)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.tryAcquireConnection(org.redisson.connection.ClientConnectionsEntry)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,java.lang.Throwable)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPoll()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollWithBrokenConnection()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInCluster().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInCluster().14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinelLong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInClusterLong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.sendCommands(org.redisson.api.RedissonClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinel()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInCluster()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SpringNamespaceWikiTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.support.SpringNamespaceWikiTest.testSingleWithPlaceholder()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6a0537cf1b348046fb68bdf7721cba855ca29237"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 225, "deletions": 202, "lines": 427, "gitFilesChange": 13}, "spoonStatsSummary": {"TOT": 228, "UPD": 64, "INS": 48, "MOV": 76, "DEL": 40, "spoonFilesChanged": 12, "spoonMethodsChanged": 79}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/balancer", "redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/config", "redisson/src/main/java/org/redisson/connection/pool"], "changesInPackagesSPOON": ["org.redisson.connection.balancer.RandomLoadBalancer.getEntry(java.util.List)", "org.redisson.connection.pool.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).7", "org.redisson.config.BaseConfig.getFailedAttempts()", "org.redisson.connection.MasterSlaveEntry.psubscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).6", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).7.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[])", "org.redisson.connection.PubSubConnectionEntry.getSubscribeFuture(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType)", "org.redisson.connection.ClientConnectionsEntry.resetFailedAttempts()", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.psubscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener[])", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean).10.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "org.redisson.config.BaseMasterSlaveServersConfig.getFailedSlaveReconnectionInterval()", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean).3", "org.redisson.connection.ClientConnectionsEntry.toString()", "org.redisson.connection.MasterSlaveEntry.isSlaveUnfreezed(java.net.URI)", "org.redisson.config.BaseConfig.setReconnectionTimeout(int)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType).9.run().1.run().1.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.net.InetSocketAddress)", "org.redisson.connection.MasterSlaveEntry.addSlave(org.redisson.client.RedisClient,boolean,org.redisson.api.NodeType).8", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).9", "org.redisson.connection.PubSubConnectionEntry.addSubscribeListener(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType)", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).9", "org.redisson.config.BaseMasterSlaveServersConfig.setFailedSlaveCheckInterval(int)", "org.redisson.connection.pool.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,java.lang.Throwable)", "org.redisson.config.BaseConfig.setFailedAttempts(int)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType).9.run()", "org.redisson.config.BaseMasterSlaveServersConfig", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.RedisPubSubListener[])", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[])", "org.redisson.connection.unsubscribe(java.lang.String,boolean)", "org.redisson.connection.pool.ConnectionPool.checkForReconnect(org.redisson.connection.ClientConnectionsEntry,java.lang.Throwable)", "org.redisson.config.BaseConfig", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.config.BaseConfig.getReconnectionTimeout()", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).7", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.connection.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[])", "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.client.protocol.pubsub.PubSubType).9.run().1.run()", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean)", "org.redisson.connection.ClientConnectionsEntry", "org.redisson.config.BaseMasterSlaveServersConfig.getFailedSlaveCheckInterval()", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[]).3.run()", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean).8.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "org.redisson.connection.MasterSlaveEntry.reattachPubSub(org.redisson.client.RedisPubSubConnection,boolean)", "org.redisson.config.BaseMasterSlaveServersConfig.setFailedSlaveReconnectionInterval(int)", "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.pool.ConnectionPool.tryAcquireConnection(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.SingleConnectionManager.create(org.redisson.config.SingleServerConfig)", "org.redisson.connection.balancer.LoadBalancerManager.isUnfreezed(java.net.URI)", "org.redisson.connection.MasterSlaveEntry.getAvailableClients()", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore)", "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean).5", "org.redisson.connection.ClientConnectionsEntry.getFailedAttempts()", "org.redisson.connection.MasterSlaveEntry.unfreeze()", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.client.RedisClient)", "org.redisson.connection.ClientConnectionsEntry.incFailedAttempts()", "org.redisson.connection.pool.ConnectionPool.connectedSuccessful(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).6", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,org.redisson.client.protocol.pubsub.PubSubType).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean)", "org.redisson.connection.balancer.LoadBalancerManager.unfreeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean).8", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).9.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).7.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.RedisPubSubListener[]).3.run()", "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean)", "org.redisson.connection.punsubscribe(java.lang.String,boolean)", "org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean)", "org.redisson.connection.MasterSlaveConnectionManager.initTimer(org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager.addSlave(java.lang.String,java.lang.String,java.lang.String).9.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.SentinelConnectionManager.addSlave(java.lang.String,java.lang.String,java.lang.String)"]}, {"title": "Old/stale nodes not removed from NodesGroup", "body": "When trying to implement a healthcheck for a Redis Cluster I'm using code similar to the below to get the list of nodes and ping them to see if they're up.\r\n\r\n```\r\nNodesGroup nodesGroup = redisson.getNodesGroup();\r\nCollection<Node> allNodes = nodesGroup.getNodes();\r\nfor (Node n : allNodes) {\r\n    n.ping();\r\n}\r\n```\r\n\r\nIf I redeploy a node and it gets a new IP, the new node is returned by `redisson.getNodesGroup();` but the old one remains and we get an error:\r\n\r\n`Unable to send command! Node source: NodeSource [slot=null, addr=null, redisClient=[addr=redis://OLD.IP.ADD.RESS:6379], redirect=null, entry=null], connection: [id: 0x511b46ea, L:0.0.0.0/0.0.0.0:39616], command: (PING), params: []`\r\n\r\nIf I failover a slave node then the slave node will be returned by `redisson.getNodesGroup();` as a master (which is correct) but the original master will appear twice as both a master and a slave. If I then failover back to the original master, that node will be returned as a master twice and still as a slave.\r\n\r\nWhen digging into the code it looks like this list/map lives in `MasterSlaveConnectionManager` as `clientEntries` which only gets cleared or removed from during a shutdown.\r\n\r\nWhat I'd expect is for old or stale nodes to be cleared up from this list/map.", "url": "https://github.com/redisson/redisson/issues/1330", "user": "adamdougal", "labels": ["bug"], "created": "2018-03-08 16:41:33", "closed": "2018-03-14 09:43:07", "commits": {"cdc1d164c367b82afc17ddce4651b6c1e966e7e2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "cdc1d164c367b82afc17ddce4651b6c1e966e7e2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ac5365a098f467b04eacce35c458dd3a5a382367"], "nameRev": "cdc1d164c367b82afc17ddce4651b6c1e966e7e2 tags/redisson-2.11.3~1", "commitMessage": "Fixed - Old/stale nodes not removed from NodesGroup #1330\n", "commitDateTime": "2018-03-14 14:43:25", "authoredDateTime": "2018-03-14 14:43:25", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedisNodes.java", "insertions": 41, "deletions": 10, "lines": 51}, {"filePath": "redisson/src/main/java/org/redisson/api/NodeType.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 11, "deletions": 4, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisNodes.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedisNodes.getNode(java.lang.String)", "TOT": 11, "UPD": 6, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedisNodes.getNodes(org.redisson.api.NodeType)", "TOT": 17, "UPD": 8, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.RedisNodes.pingAll()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedisNodes.getNodes()", "TOT": 6, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "NodeType.java", "spoonMethods": []}, {"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient.shutdownAsync().4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getClients()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.URI,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdownAsync(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getClients()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.getSlaveEntries()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.freeze(org.redisson.client.RedisClient,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.getEntries()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cdc1d164c367b82afc17ddce4651b6c1e966e7e2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 68, "deletions": 35, "lines": 103, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 50, "UPD": 19, "INS": 14, "MOV": 8, "DEL": 9, "spoonFilesChanged": 6, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/connection/balancer", "redisson/src/main/java/org/redisson/api", "redisson/src/main/java/org/redisson/client", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.connection.MasterSlaveEntry.getSlaveEntries()", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.URI,java.lang.String)", "org.redisson.RedisNodes.getNodes()", "org.redisson.connection.balancer.LoadBalancerManager.getEntries()", "org.redisson.connection.balancer.LoadBalancerManager.freeze(org.redisson.client.RedisClient,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.RedisNodes.getNode(java.lang.String)", "org.redisson.connection.getClients()", "org.redisson.RedisNodes.getNodes(org.redisson.api.NodeType)", "org.redisson.connection.MasterSlaveConnectionManager.shutdownAsync(org.redisson.client.RedisClient)", "org.redisson.RedisNodes.pingAll()", "org.redisson.client.RedisClient.shutdownAsync().4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.getClients()", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,java.lang.String)"]}, {"title": "Jcache - getAndRemove method is throwing an NPE", "body": "We configured a Redisson cached based on Jcr-107. Most operations are working fine but the getAndRemove implementation is throwing a null pointer exception. When removing the key with cache.remove(\"key\"); instead, it works fine. We could do it in two operations but it will lose the free Atomicity.\r\nUnfortunately, I'm not fluent in the LUA scripting used in order to propose a solution at the moment\r\n\r\n```\r\njavax.cache.CacheException: org.redisson.client.RedisException: Unexpected exception while processing command\r\n\r\n\tat org.redisson.jcache.JCache.evalWrite(JCache.java:342)\r\n\tat org.redisson.jcache.JCache.getAndRemoveValue(JCache.java:1445)\r\n\tat org.redisson.jcache.JCache.getAndRemove(JCache.java:1521)\r\n\tat com.jive.jci.cache.redisson.RedissonDefaultResourceIT.getAndRemoveTest(RedissonDefaultResourceIT.java:207)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.testcontainers.containers.FailureDetectingExternalResource$1.evaluate(FailureDetectingExternalResource.java:30)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: org.redisson.client.RedisException: Unexpected exception while processing command\r\n\tat org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:338)\r\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:169)\r\n\tat org.redisson.RedissonObject.get(RedissonObject.java:74)\r\n\tat org.redisson.jcache.JCache.evalWrite(JCache.java:340)\r\n\t... 27 more\r\nCaused by: java.lang.NullPointerException\r\n\tat org.redisson.client.handler.CommandDecoder.selectDecoder(CommandDecoder.java:401)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:302)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:345)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:329)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1414)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:945)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:141)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nCode that show the issue:\r\n``` java\r\n    String host = REDIS.getContainerIpAddress();\r\n    int port = REDIS.getMappedPort(6379);\r\n    MutableConfiguration<String, String> jcacheConfig = new MutableConfiguration<>();\r\n\r\n    Config redissonConfig = new Config();\r\n    redissonConfig.setCodec(new JsonJacksonCodec());\r\n\r\n    redissonConfig.useSingleServer()\r\n        .setAddress(\"redis://\" + host + \":\" + port);\r\n\r\n    Configuration<String, String> jConfig = RedissonConfiguration.fromConfig(\r\n        redissonConfig, jcacheConfig);\r\n\r\n\r\n    CacheManager manager = Caching.getCachingProvider(\"org.redisson.jcache.JCachingProvider\")\r\n        .getCacheManager();\r\n\r\n    try (Cache<String, String> cache = manager.createCache(\"strings\", jConfig);)\r\n    {\r\n      cache.put(\"key\", \"value\");\r\n      String result = cache.getAndRemove(\"key\");\r\n\r\n      Assert.assertEquals(\"value\", result);\r\n      Assert.assertNull(cache.get(\"key\"));\r\n\r\n      cache.put(\"key\", \"value\");\r\n      cache.remove(\"key\");\r\n      Assert.assertNull(cache.get(\"key\"));\r\n    }\r\n```\r\n\r\nDependencies:\r\nRedisson: 3.6.1\r\nRedis: Vanilla docker image version 4.0.8\r\nJDK: 1.8.0_151\r\n\r\n```[INFO] com.jive.jci:jci-cache:jar:5.1.8-SNAPSHOT\r\n[INFO] +- org.ehcache:ehcache:jar:3.4.0:compile\r\n[INFO] +- org.cache2k:cache2k-all:jar:1.0.1.Final:compile\r\n[INFO] +- org.cache2k:cache2k-api:jar:1.0.1.Final:provided\r\n[INFO] +- org.redisson:redisson:jar:3.6.1:provided\r\n[INFO] |  +- io.netty:netty-common:jar:4.1.21.Final:provided\r\n[INFO] |  +- io.netty:netty-codec:jar:4.1.21.Final:provided\r\n[INFO] |  +- io.netty:netty-buffer:jar:4.1.21.Final:provided\r\n[INFO] |  +- io.netty:netty-transport:jar:4.1.21.Final:provided\r\n[INFO] |  |  \\- io.netty:netty-resolver:jar:4.1.21.Final:provided\r\n[INFO] |  +- io.netty:netty-resolver-dns:jar:4.1.21.Final:provided\r\n[INFO] |  |  \\- io.netty:netty-codec-dns:jar:4.1.21.Final:provided\r\n[INFO] |  +- io.netty:netty-handler:jar:4.1.21.Final:provided\r\n[INFO] |  +- io.projectreactor:reactor-core:jar:3.1.1.RELEASE:provided\r\n[INFO] |  |  \\- org.reactivestreams:reactive-streams:jar:1.0.1:provided\r\n[INFO] |  +- com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:jar:2.9.1:provided\r\n[INFO] |  |  \\- org.yaml:snakeyaml:jar:1.18:provided\r\n[INFO] |  +- com.fasterxml.jackson.core:jackson-core:jar:2.9.1:compile\r\n[INFO] |  +- net.bytebuddy:byte-buddy:jar:1.7.10:provided\r\n[INFO] |  \\- org.jodd:jodd-bean:jar:3.7.1:provided\r\n[INFO] |     \\- org.jodd:jodd-core:jar:3.7.1:provided\r\n[INFO] +- javax.cache:cache-api:jar:1.0.0:compile\r\n[INFO] +- org.projectlombok:lombok:jar:1.16.18:provided\r\n[INFO] +- org.slf4j:slf4j-api:jar:1.7.25:compile\r\n[INFO] +- org.slf4j:jcl-over-slf4j:jar:1.7.25:runtime\r\n[INFO] +- org.slf4j:jul-to-slf4j:jar:1.7.25:runtime\r\n[INFO] \\- org.slf4j:log4j-over-slf4j:jar:1.7.25:runtime```", "url": "https://github.com/redisson/redisson/issues/1327", "user": "dfortier-jive", "labels": ["bug"], "created": "2018-03-07 21:00:10", "closed": "2018-03-08 05:59:40", "commits": {"918e8f54ee6db41be1ec44be16989cec81178c86": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "918e8f54ee6db41be1ec44be16989cec81178c86", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8fd4fd69b8e55676050ccb54c225d7ed9deb2dc2"], "nameRev": "918e8f54ee6db41be1ec44be16989cec81178c86 tags/redisson-2.11.3~11", "commitMessage": "Fixed - NPE in JCache.getAndRemoveValue #1327\n", "commitDateTime": "2018-03-08 10:59:45", "authoredDateTime": "2018-03-08 10:59:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/jcache/JCacheTest.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCacheTest.testRedissonConfig()", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["918e8f54ee6db41be1ec44be16989cec81178c86"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/jcache"], "changesInPackagesSPOON": ["org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)"]}, {"title": "Redisson 3.5.7 memory leak with locks", "body": "I'm using RLock and seeing memory leak via org.redisson.client.handler.CommandPubSubDecoder \r\n \r\n![image](https://user-images.githubusercontent.com/443442/37062360-0f201f60-214b-11e8-81a2-d2fab78261c4.png)\r\n\r\n\r\nRetained objects delta between heap dumps taken apart\r\n![image 1](https://user-images.githubusercontent.com/443442/37062341-01519f12-214b-11e8-8d35-4bc50413fd50.png)\r\n\r\nAround 10MB leak per day\r\n![image 2](https://user-images.githubusercontent.com/443442/37062443-5150dfdc-214b-11e8-944f-fb46ec393693.png)\r\n", "url": "https://github.com/redisson/redisson/issues/1326", "user": "kaduparag", "labels": ["bug"], "created": "2018-03-06 22:30:20", "closed": "2018-03-07 07:46:39", "commits": {"7ca8d857a8f6aeb34c3ef8b7da0c7a2bc40998d9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "8fd4fd69b8e55676050ccb54c225d7ed9deb2dc2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7ca8d857a8f6aeb34c3ef8b7da0c7a2bc40998d9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["767e0871258188044157db76112d091e3e7d399b"], "nameRev": "7ca8d857a8f6aeb34c3ef8b7da0c7a2bc40998d9 tags/redisson-2.11.3~13", "commitMessage": "Fixed - memory leak in publish subscribe. #1326\n", "commitDateTime": "2018-03-07 12:46:56", "authoredDateTime": "2018-03-07 12:46:56", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 8, "deletions": 5, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8fd4fd69b8e55676050ccb54c225d7ed9deb2dc2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7ca8d857a8f6aeb34c3ef8b7da0c7a2bc40998d9"], "nameRev": "8fd4fd69b8e55676050ccb54c225d7ed9deb2dc2 tags/redisson-2.11.3~12", "commitMessage": "Fixed - memory leak in publish subscribe. #1326\n", "commitDateTime": "2018-03-07 20:05:18", "authoredDateTime": "2018-03-07 20:05:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 12, "deletions": 7, "lines": 19}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 16, "deletions": 4, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 13, "UPD": 3, "INS": 3, "MOV": 6, "DEL": 1}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testTopicState()", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testMultiTypeConnection().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testMultiTypeConnection().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testRemoveByInstance().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattach().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattach().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinel().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinel().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInSentinel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInCluster().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testReattachInCluster().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testStatus().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testStatus().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testMultiTypeConnection().4.onMessage(java.lang.String,java.lang.Long)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testTopicState().2.onMessage(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testMultiTypeConnection().4.onMessage(java.lang.String,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testMultiTypeConnection().5.onMessage(java.lang.String,java.lang.Long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testMultiTypeConnection().3.onMessage(java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ca8d857a8f6aeb34c3ef8b7da0c7a2bc40998d9"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 5, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandPubSubDecoder.decodeResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)"]}, {"title": " Skipped slave up  for master redis://?:0 differs from current redis", "body": "After upgrading from 3.5.7 to 3.6.1 I can see a lot of warnings every 3 seconds:\r\n\r\n2018-03-05 13:12:44.197  WARN 5 --- [isson-netty-1-2] o.r.c.SentinelConnectionManager          : Skipped slave up 10.2.42.12:6379 for master redis://?:0 differs from current redis://10.2.96.31:6379\r\n\r\nI use SentinelServersConfig.", "url": "https://github.com/redisson/redisson/issues/1324", "user": "welovelain", "labels": ["bug"], "created": "2018-03-05 13:14:43", "closed": "2018-03-06 06:51:02", "commits": {"613389e8705e497760a09e60e0464e34370f63a2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "613389e8705e497760a09e60e0464e34370f63a2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e9ea77b51332f4b644029fdbe9ac150d479ba4dc"], "nameRev": "613389e8705e497760a09e60e0464e34370f63a2 tags/redisson-2.11.3~17", "commitMessage": "Fixed - warning for disconnected slaves in sentinel mode. #1324\n", "commitDateTime": "2018-03-06 11:50:34", "authoredDateTime": "2018-03-06 11:50:34", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["613389e8705e497760a09e60e0464e34370f63a2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).5.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Many exceptions and errors after sentinel failover with redisson 3.6.1", "body": "Hello, I'm re-opening the issue #1272 for me it's not fixed in 3.6.1, I get lot of errors long time after a fail-over.\r\n\r\n![redissonerrors](https://user-images.githubusercontent.com/8572808/36720443-65d46e5e-1ba8-11e8-883d-d9b598d0c476.jpeg)\r\n\r\nMy setup :\r\n- Spring boot 1.5.9 with Spring session 2.0.1 and redisson 3.6.1 like in this sample repo : https://github.com/DevWantJustHaveFun/spring-boot-session-redisson\r\n\r\nThe logs :\r\n\r\n```\r\n[2018-02-27 08:06:19,646] [WARN] [i.n.u.i.l.Slf4JLogger] [Null|127.0.0.1|Null|Null] - An exception was thrown by org.redisson.command.CommandAsyncService$15.operationComplete()\r\njava.lang.NullPointerException: null\r\n[2018-02-27 08:06:19,832] [WARN] [i.n.u.i.l.Slf4JLogger] [Null|127.0.0.1|Null|Null] - An exception was thrown by org.redisson.command.CommandAsyncService$15.operationComplete()\r\njava.lang.NullPointerException: null\r\n[2018-02-27 08:06:19,834] [WARN] [i.n.u.i.l.Slf4JLogger] [Null|127.0.0.1|Null|Null] - An exception was thrown by org.redisson.command.CommandAsyncService$15.operationComplete()\r\njava.lang.NullPointerException: null\r\n[2018-02-27 08:06:20,031] [WARN] [i.n.u.i.l.Slf4JLogger] [Null|127.0.0.1|Null|Null] - An exception was thrown by org.redisson.command.CommandAsyncService$15.operationComplete()\r\njava.lang.NullPointerException: null\r\n[2018-02-27 08:06:20,035] [WARN] [i.n.u.i.l.Slf4JLogger] [Null|127.0.0.1|Null|Null] - An exception was thrown by org.redisson.command.CommandAsyncService$15.operationComplete()\r\njava.lang.NullPointerException: null\r\n[2018-02-27 08:06:20,133] [WARN] [i.n.u.i.l.Slf4JLogger] [Null|127.0.0.1|Null|Null] - An exception was thrown by org.redisson.command.CommandAsyncService$15.operationComplete()\r\njava.lang.NullPointerException: null\r\n[2018-02-27 08:06:20,232] [WARN] [i.n.u.i.l.Slf4JLogger] [Null|127.0.0.1|Null|Null] - An exception was thrown by org.redisson.command.CommandAsyncService$15.operationComplete()\r\njava.lang.NullPointerException: null\r\n[2018-02-27 08:06:20,308] [WARN] [o.r.c.SentinelConnectionManager] [Null|127.0.0.1|Null|Null] - Skipped slave up 57.190.12.71:6399 for master redis://?:0 differs from current redis://57.190.12.72:6399\r\n\r\n[2018-02-27 08:06:14,360] [ERROR] [i.u.s.a.LoggingExceptionHandler] [651d4b3e-6b90-4ab5-909e-46120aa1bcf8|10.4.0.2|Null|UAE10] - UT005023: Exception handling request to /connect\r\njava.lang.IllegalArgumentException: session cannot be null\r\n        at org.springframework.session.web.http.HttpSessionAdapter.<init>(HttpSessionAdapter.java:51)\r\n        at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper.<init>(SessionRepositoryFilter.java:372)\r\n        at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:308)\r\n        at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:196)\r\n        at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:270)\r\n        at org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(HttpSessionSecurityContextRepository.java:110)\r\n        at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:100)\r\n        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\r\n        at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\r\n        at org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(ChannelProcessingFilter.java:157)\r\n        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)\r\n        at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)\r\n        at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)\r\n        at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)\r\n        at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)\r\n        at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n        at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n        at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n        at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n        at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n        at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n        at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n        at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n        at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n        at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n        at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:146)\r\n        at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81)\r\n        at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n        at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n        at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n        at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n        at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n        at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)\r\n        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n        at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n        at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n        at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)\r\n        at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)\r\n        at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:64)\r\n        at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)\r\n        at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)\r\n        at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)\r\n        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n        at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)\r\n        at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)\r\n        at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)\r\n        at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)\r\n        at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)\r\n        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n        at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n        at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)\r\n        at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)\r\nat io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)\r\n        at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)\r\n        at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)\r\n        at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)\r\n        at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)\r\n        at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)\r\n        at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)\r\n        at io.undertow.server.Connectors.executeRootHandler(Connectors.java:332)\r\n        at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:830)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:748)```\r\n  \r\n\r\n[2018-02-27 08:06:57,834] [ERROR] [i.u.s.a.LoggingExceptionHandler] [24b62c4f-f833-4463-bdab-ada972beeb49|10.4.0.2|Null|UAE9] - UT005023: Exception handling request to /connect/login\r\norg.redisson.client.RedisTimeoutException: Unable to send command: (HGETALL) with params: [redisson_spring_session:cb50538c-5244-4cb2-953d-77b733fe5814] after 3 retry attempts\r\n        at org.redisson.command.CommandAsyncService$8.run(CommandAsyncService.java:562)\r\n        at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:663)\r\n        at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:738)\r\n        at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:466)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n[2018-02-27 08:07:02,365] [ERROR] [o.r.c.SentinelConnectionManager$8] [Null|127.0.0.1|Null|Null] - Can't add slave: redis://57.190.12.71:6399\r\norg.redisson.client.RedisConnectionException: Unable to init enough connections amount! Only 31 from 32 were initialized. Redis server: /57.190.12.71:6399\r\n        at org.redisson.connection.pool.ConnectionPool$2$1.operationComplete(ConnectionPool.java:138)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:512)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:486)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:425)\r\n        at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:122)\r\n        at org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:108)\r\n        at org.redisson.connection.pool.ConnectionPool.promiseFailure(ConnectionPool.java:307)\r\n        at org.redisson.connection.pool.ConnectionPool.access$400(ConnectionPool.java:54)\r\n        at org.redisson.connection.pool.ConnectionPool$4.operationComplete(ConnectionPool.java:277)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:512)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:505)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:484)\r\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:425)\r\n        at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:122)\r\n        at org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:108)\r\n        at org.redisson.client.RedisClient$2$1$2.run(RedisClient.java:225)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: io.netty.channel.ConnectTimeoutException: connection timed out: /57.190.12.71:6399\r\n        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:267)\r\n        at io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n        at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:125)\r\n        ... 6 common frames omitted\r\n", "url": "https://github.com/redisson/redisson/issues/1317", "user": "DevWantJustHaveFun", "labels": ["bug"], "created": "2018-02-27 09:33:55", "closed": "2018-03-21 12:57:48", "commits": {"9a36a5badc5331a76184c7ede70ae67e38f8b3b3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "9a36a5badc5331a76184c7ede70ae67e38f8b3b3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8bf791004c72edebdd484e38e339907047dd5d10"], "nameRev": "9a36a5badc5331a76184c7ede70ae67e38f8b3b3 tags/redisson-2.11.4~7", "commitMessage": "Fixed - NPE during failover in Sentinel mode. #1317\n", "commitDateTime": "2018-03-21 16:04:39", "authoredDateTime": "2018-03-21 16:04:39", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).6.operationComplete(io.netty.util.concurrent.Future).1.onSuccess(java.lang.Void)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a36a5badc5331a76184c7ede70ae67e38f8b3b3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.SentinelConnectionManager.updateState(org.redisson.config.SentinelServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).6.operationComplete(io.netty.util.concurrent.Future).1.onSuccess(java.lang.Void)"]}, {"title": "Tomcat Session Manager issue to renew session in Load Balance environment", "body": "Hi!\r\n\r\nI'm using Redisson 3.6.0 with redisson-tomcat 3.5.6 with:\r\n\r\n1. Elasticache Redis Cluster\r\n2. Spring App deployed on two instances EC2 Tomcat (instance 1 and instance 2)\r\n3. Load Balance with non-sticky session\r\n\r\nMy session timeout is configured to 30min.\r\n\r\nThe steps to reproduce the issue:\r\na. User logged in on instance 1 (a new session is created with timeout of 30 min);\r\nb. After 15 min, an ajax request was made by the application which was managed by 'instance 2' refreshing the session to more 30min;\r\nc. After more 20min the user reload the page, and the load  balance send some requests to 'instance1' and to 'instance 2', but the instance 1 has been idle  for 35minutes and because of that, delete the session that was renewed 20 min ago!\r\n\r\nThis issue is only reproducible using at least two instances behind a load balance with non-sticky session because the action to delete the session ignores if the session was renewed by other instances.\r\n\r\nIs there anything I can do to prevent this behavior?\r\n\r\nI think this is related with https://github.com/redisson/redisson/issues/972", "url": "https://github.com/redisson/redisson/issues/1311", "user": "Leuloch", "labels": ["bug"], "created": "2018-02-19 12:03:40", "closed": "2018-02-21 06:27:07", "commits": {"b2d40e43a5661603ed20fd2ceeaeb9a1695a4ed8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "b2d40e43a5661603ed20fd2ceeaeb9a1695a4ed8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2e7dc27334b309790282999d4da3626ec93d844e"], "nameRev": "b2d40e43a5661603ed20fd2ceeaeb9a1695a4ed8 tags/redisson-2.11.2~15", "commitMessage": "Fixed - tomcat session renewal. #1311\n", "commitDateTime": "2018-02-21 06:26:50", "authoredDateTime": "2018-02-21 06:26:50", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/test/webapp/WEB-INF/web.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/webapp/WEB-INF/web.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/webapp/WEB-INF/web.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson-tomcat/redisson-tomcat-9/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 35, "deletions": 1, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.load(java.util.Map)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManagerTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.testSwitchServer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.testExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.read(int,org.apache.http.client.fluent.Executor,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b2d40e43a5661603ed20fd2ceeaeb9a1695a4ed8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 0, "lines": 28, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "org.redisson.tomcat.RedissonSession.load(java.util.Map)"]}, {"title": "Wrong classloader used by TasksRunnerService?", "body": "Today I had a lot of work to bind embedded Redisson Node with Spring Boot. [Here](http://lifeinide.com/post/2018-02-18-redisson-node-spring-fixing-classloader-problem/) are the final thoughts and conclusions. In short I believe creating own codec in `TasksRunnerService` using `TasksRunnerService` class loader is a bug. Please review the article for more details.", "url": "https://github.com/redisson/redisson/issues/1310", "user": "l0co", "labels": ["bug"], "created": "2018-02-18 23:38:09", "closed": "2018-03-06 09:17:57", "commits": {"ac79efe2af852cef8eb7679dd8f44e8d74813bf2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "ac79efe2af852cef8eb7679dd8f44e8d74813bf2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d754bec54fc2cfe8cf40126df8f4be5ff86757c3"], "nameRev": "ac79efe2af852cef8eb7679dd8f44e8d74813bf2 tags/redisson-2.11.3~15", "commitMessage": "Fixed - codec classLoader wasn't used in TasksRunnerService. #1310\n", "commitDateTime": "2018-03-06 14:18:08", "authoredDateTime": "2018-03-06 14:18:08", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cache/LocalCachedMessageCodec.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/BaseCodec.java", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/BitSetCodec.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/ByteArrayCodec.java", "insertions": 1, "deletions": 21, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/Codec.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/MapScanCodec.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/ScanCodec.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/StringCodec.java", "insertions": 1, "deletions": 21, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/codec/CompositeCodec.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/codec/FstCodec.java", "insertions": 11, "deletions": 22, "lines": 33}, {"filePath": "redisson/src/main/java/org/redisson/codec/JsonJacksonCodec.java", "insertions": 21, "deletions": 29, "lines": 50}, {"filePath": "redisson/src/main/java/org/redisson/codec/KryoCodec.java", "insertions": 17, "deletions": 22, "lines": 39}, {"filePath": "redisson/src/main/java/org/redisson/codec/LZ4Codec.java", "insertions": 2, "deletions": 21, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/codec/MapCacheEventCodec.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/codec/SerializationCodec.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/codec/SnappyCodec.java", "insertions": 7, "deletions": 21, "lines": 28}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/jcache/JCacheEventCodec.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/test/java/org/redisson/ErrorsCodec.java", "insertions": 2, "deletions": 22, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalCachedMessageCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cache.LocalCachedMessageCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.BaseCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitSetCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.BitSetCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ByteArrayCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.ByteArrayCodec.getMapValueDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.codec.ByteArrayCodec.getMapValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.codec.ByteArrayCodec.getMapKeyDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.codec.ByteArrayCodec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.codec.ByteArrayCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Codec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapScanCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.MapScanCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScanCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.ScanCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StringCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.StringCodec.getMapValueDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.codec.StringCodec.getMapValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.codec.StringCodec.getMapKeyDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.codec.StringCodec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.codec.StringCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CompositeCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.CompositeCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FstCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.FstCodec.getMapValueDecoder()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.FstCodec.getMapKeyDecoder()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.FstCodec.getMapValueEncoder()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.FstCodec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.FstCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.FstCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JsonJacksonCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.init(com.fasterxml.jackson.databind.ObjectMapper)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.getMapValueDecoder()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.getMapValueEncoder()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.getMapKeyDecoder()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.getClassLoader()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KryoCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.KryoCodec.getMapValueDecoder()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.KryoCodec.getMapKeyDecoder()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.KryoCodec.getMapValueEncoder()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.KryoCodec.getMapKeyEncoder()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.KryoCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.KryoCodec.getClassLoader()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.KryoCodec.KryoPoolImpl.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LZ4Codec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.LZ4Codec.getMapValueDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.LZ4Codec.getMapValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.LZ4Codec.getMapKeyDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.LZ4Codec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.LZ4Codec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapCacheEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SerializationCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.SerializationCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SnappyCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.SnappyCodec.getMapKeyDecoder()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.SnappyCodec.getMapValueDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.SnappyCodec.getMapValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.SnappyCodec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.SnappyCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeCallable(java.lang.String,byte[],byte[],java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService.executeRunnable(java.lang.String,byte[],byte[],java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksRunnerService", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JCacheEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCacheEventCodec.getClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ErrorsCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.ErrorsCodec.getMapValueDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.ErrorsCodec.getMapValueEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.ErrorsCodec.getMapKeyDecoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.ErrorsCodec.getMapKeyEncoder()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.ErrorsCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ac79efe2af852cef8eb7679dd8f44e8d74813bf2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 167, "deletions": 159, "lines": 326, "gitFilesChange": 18}, "spoonStatsSummary": {"TOT": 96, "UPD": 16, "INS": 28, "MOV": 18, "DEL": 34, "spoonFilesChanged": 19, "spoonMethodsChanged": 58}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec", "redisson/src/main/java/org/redisson/cache", "redisson/src/main/java/org/redisson/client/codec", "redisson/src/main/java/org/redisson/jcache", "redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.client.codec.ByteArrayCodec", "org.redisson.codec.SnappyCodec.getMapKeyDecoder()", "org.redisson.client.codec.StringCodec.getMapValueEncoder()", "org.redisson.executor.TasksRunnerService.executeCallable(java.lang.String,byte[],byte[],java.lang.String)", "org.redisson.codec.KryoCodec.getMapValueDecoder()", "org.redisson.ErrorsCodec.getMapKeyDecoder()", "org.redisson.ErrorsCodec", "org.redisson.codec.JsonJacksonCodec.init(com.fasterxml.jackson.databind.ObjectMapper)", "org.redisson.codec.LZ4Codec.getMapKeyDecoder()", "org.redisson.ErrorsCodec.getMapValueDecoder()", "org.redisson.client.codec.MapScanCodec.getClassLoader()", "org.redisson.codec.KryoCodec.getMapValueEncoder()", "org.redisson.client.codec.StringCodec.getMapKeyEncoder()", "org.redisson.client.codec.ScanCodec.getClassLoader()", "org.redisson.client.codec.BitSetCodec.getClassLoader()", "org.redisson.codec.SnappyCodec.getMapValueEncoder()", "org.redisson.codec.JsonJacksonCodec.getMapKeyDecoder()", "org.redisson.codec.KryoCodec.getMapKeyDecoder()", "org.redisson.codec.FstCodec", "org.redisson.codec.LZ4Codec.getMapKeyEncoder()", "org.redisson.codec.SnappyCodec.getMapValueDecoder()", "org.redisson.ErrorsCodec.getMapKeyEncoder()", "org.redisson.codec.FstCodec.getMapKeyDecoder()", "org.redisson.codec.KryoCodec", "org.redisson.client.codec.StringCodec.getMapValueDecoder()", "org.redisson.client.codec.ByteArrayCodec.getMapValueDecoder()", "org.redisson.client.codec.ByteArrayCodec.getMapValueEncoder()", "org.redisson.codec.SnappyCodec", "org.redisson.codec.LZ4Codec.getMapValueDecoder()", "org.redisson.client.codec.StringCodec.getMapKeyDecoder()", "org.redisson.executor.TasksRunnerService", "org.redisson.client.codec.getClassLoader()", "org.redisson.client.codec.BaseCodec", "org.redisson.cache.LocalCachedMessageCodec.getClassLoader()", "org.redisson.codec.LZ4Codec.getMapValueEncoder()", "org.redisson.codec.JsonJacksonCodec.getMapValueDecoder()", "org.redisson.codec.MapCacheEventCodec.getClassLoader()", "org.redisson.codec.CompositeCodec.getClassLoader()", "org.redisson.codec.JsonJacksonCodec.getMapKeyEncoder()", "org.redisson.client.codec.StringCodec", "org.redisson.client.codec.ByteArrayCodec.getMapKeyEncoder()", "org.redisson.codec.FstCodec.getMapValueEncoder()", "org.redisson.codec.FstCodec.getClassLoader()", "org.redisson.executor.TasksRunnerService.executeRunnable(java.lang.String,byte[],byte[],java.lang.String)", "org.redisson.codec.JsonJacksonCodec.getClassLoader()", "org.redisson.codec.FstCodec.getMapValueDecoder()", "org.redisson.ErrorsCodec.getMapValueEncoder()", "org.redisson.codec.JsonJacksonCodec.getMapValueEncoder()", "org.redisson.codec.KryoCodec.KryoPoolImpl.getClassLoader()", "org.redisson.codec.SerializationCodec.getClassLoader()", "org.redisson.codec.FstCodec.getMapKeyEncoder()", "org.redisson.codec.JsonJacksonCodec", "org.redisson.codec.KryoCodec.getMapKeyEncoder()", "org.redisson.codec.SnappyCodec.getMapKeyEncoder()", "org.redisson.codec.LZ4Codec", "org.redisson.jcache.JCacheEventCodec.getClassLoader()", "org.redisson.codec.KryoCodec.getClassLoader()", "org.redisson.client.codec.ByteArrayCodec.getMapKeyDecoder()"]}, {"title": "RBloomFilter.expire only deletes Bloom Filter string, not hash", "body": "### Problem\r\n\r\n If I initialize a bloom filter like this\r\n\r\n```\r\nRBloomFilter<String> filter = redissonClient.getBloomFilter(\"test\");\r\nfilter.tryInit(10000, 0.01);\r\nfilter.expire(1l, TimeUnit.MINUTES);\r\n```\r\n\r\nThe String `test` is the only thing that gets deleted from Redis after expiration time. The config hash `{test}:config` remains even after expiration.\r\n\r\n### Env details\r\n\r\nMac OS X 10.13.2\r\nJava version: 1.8.0_151\r\nRedis server v=4.0.7\r\nRedisson Version : 3.6.0\r\nRedis used in Single Server mode", "url": "https://github.com/redisson/redisson/issues/1305", "user": "prashantgupta24", "labels": ["bug"], "created": "2018-02-16 20:09:43", "closed": "2018-02-19 05:32:14", "commits": {"b177e94d5eca141109c08776b8d91e705034bf50": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "b177e94d5eca141109c08776b8d91e705034bf50", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["48ef91c4253149aba2747523ffa4716fc763c6e1"], "nameRev": "b177e94d5eca141109c08776b8d91e705034bf50 tags/redisson-2.11.2~26", "commitMessage": "expire, expireAt and clearExpire commands aren't implemented properly for RBloomFilter object. #1305\n", "commitDateTime": "2018-02-19 05:30:02", "authoredDateTime": "2018-02-19 05:30:02", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBloomFilter.java", "insertions": 43, "deletions": 17, "lines": 60}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBloomFilter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBloomFilter.getConfigName()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.addConfigCheck(int,long,org.redisson.command.CommandBatchService)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.count()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.deleteAsync()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.readConfig()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.tryInit(long,double)", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.getExpectedInsertions()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.getFalseProbability()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.getSize()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.getHashIterations()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonBloomFilter", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.expireAtAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBloomFilter.clearExpireAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b177e94d5eca141109c08776b8d91e705034bf50"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 43, "deletions": 17, "lines": 60, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 67, "UPD": 4, "INS": 30, "MOV": 14, "DEL": 19, "spoonFilesChanged": 1, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBloomFilter.clearExpireAsync()", "org.redisson.RedissonBloomFilter.getHashIterations()", "org.redisson.RedissonBloomFilter.count()", "org.redisson.RedissonBloomFilter.getFalseProbability()", "org.redisson.RedissonBloomFilter.tryInit(long,double)", "org.redisson.RedissonBloomFilter", "org.redisson.RedissonBloomFilter.readConfig()", "org.redisson.RedissonBloomFilter.expireAtAsync(long)", "org.redisson.RedissonBloomFilter.addConfigCheck(int,long,org.redisson.command.CommandBatchService)", "org.redisson.RedissonBloomFilter.deleteAsync()", "org.redisson.RedissonBloomFilter.getExpectedInsertions()", "org.redisson.RedissonBloomFilter.getSize()", "org.redisson.RedissonBloomFilter.getConfigName()"]}, {"title": "RedisClient does not override 'hashcode and equals' may cause  redis connections are not closed properly.", "body": "I found that in `master-slave` mode, the redis connections on slave servers may not get closed properly.\r\n[Caused by: org.redisson.client.RedisException: ERR max number of clients reached](https://github.com/redisson/redisson/issues/1288)\r\n\r\nAfter reading the source code, I found that the reason is that RedisClient does not override `hashcode` and `equals`.\r\n\r\nConsider the following situation\uff1a\r\n1. One hostname `slave-hostname` maps to two ip-addresses: `ip1`, `ip2`\r\n1. Firstly, `slave-hostname`  maps to `ip1`, client2Entry will cache new `RedisClient` and `ClientConnectionsEntry` instances: `RedisClient-ip1` and `ClientConnectionsEntry-ip1` \r\n```\r\npublic RFuture<Void> add(final ClientConnectionsEntry entry) {\r\n        RPromise<Void> result = new RedissonPromise<Void>();\r\n        \r\n        CountableListener<Void> listener = new CountableListener<Void>(result, null) {\r\n            public void operationComplete(io.netty.util.concurrent.Future<Object> future) throws Exception {\r\n                super.operationComplete(future);\r\n                if (this.result.isSuccess()) {\r\n                    client2Entry.put(entry.getClient(), entry);\r\n                }\r\n            };\r\n        };\r\n\r\n        RFuture<Void> slaveFuture = slaveConnectionPool.add(entry);\r\n        listener.incCounter();\r\n        slaveFuture.addListener(listener);\r\n        \r\n        RFuture<Void> pubSubFuture = pubSubConnectionPool.add(entry);\r\n        listener.incCounter();\r\n        pubSubFuture.addListener(listener);\r\n        return result;\r\n    }\r\n```\r\n3. DNS  changes from `ip1` to `ip2`, all the connections of `ClientConnectionsEntry-ip1` were closed properly.\r\n1. DNS  changes from `ip2` to `ip1`, client2Entry will cache another `RedisClient` and `ClientConnectionsEntry` instances: `RedisClient-ip1-1` and `ClientConnectionsEntry-ip1-1`. `RedisClient-ip1-1` was different from `RedisClient-ip1` as they were not the same instance.\r\n1. DNS  changes from `ip1` to `ip2` again, \r\nAll the connections of `ClientConnectionsEntry-ip1-1` should get closed properly.  When san client2Entry values, it is possible to find `ClientConnectionsEntry-ip1` or `ClientConnectionsEntry-ip1-1`\r\n```\r\n    protected ClientConnectionsEntry getEntry(InetSocketAddress address) {\r\n        for (ClientConnectionsEntry entry : client2Entry.values()) {\r\n            InetSocketAddress addr = entry.getClient().getAddr();\r\n            if (addr.getAddress().equals(address.getAddress()) && addr.getPort() == address.getPort()) {\r\n                return entry;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n```\r\nThe connections of `ClientConnectionsEntry-ip1-1` may not get closed properly.\r\n\r\n-------------------------------------------------------\r\nOur `master-slave` model\r\n1. one master server\r\n1. two slave servers, with one slave hostname, DNS changes every twenty seconds.", "url": "https://github.com/redisson/redisson/issues/1304", "user": "ghost", "labels": ["bug"], "created": "2018-02-16 16:53:18", "closed": "2018-02-19 06:49:20", "commits": {"9670f19b0f0a23dc6ffdb954955dfb8cf2c91731": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "9670f19b0f0a23dc6ffdb954955dfb8cf2c91731", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["89c391c9d775a14536b466add3a020cb0d0a2b93"], "nameRev": "9670f19b0f0a23dc6ffdb954955dfb8cf2c91731 tags/redisson-2.11.2~21", "commitMessage": "Fixed - clients duplication during discovering ip change of hostname. #1304\n", "commitDateTime": "2018-02-19 06:47:16", "authoredDateTime": "2018-02-19 06:46:53", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/DNSMonitor.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 18, "deletions": 2, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DNSMonitor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.DNSMonitor.monitorDnsChange().1.run().2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 10, "UPD": 0, "INS": 6, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.InetSocketAddress,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9670f19b0f0a23dc6ffdb954955dfb8cf2c91731"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 4, "lines": 31, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 15, "UPD": 0, "INS": 9, "MOV": 3, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.DNSMonitor.monitorDnsChange().1.run().2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.InetSocketAddress,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.MasterSlaveEntry.slaveUp(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)"]}, {"title": "CertificateException while connecting to Azure redis cluster.", "body": "I have got CertificateException when Redisson try to connect.\r\n\r\nCaused by: java.security.cert.CertificateException: No subject alternative names matching IP address 12.34.567.89 found\r\n\tat sun.security.util.HostnameChecker.matchIP(HostnameChecker.java:167)\r\n\tat sun.security.util.HostnameChecker.match(HostnameChecker.java:93)\r\n\tat sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:455)\r\n\tat sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:436)\r\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:252)\r\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:136)\r\n\tat sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1501)\r\n\t... 28 more\r\n\r\nWhen i disabled the setSslEnableEndpointIdentification the connection was successfully established.\r\n\r\nThe scenario is when I'm using useClusterServers config \r\nthe Redisson client sends cluster nodes command to Azure Redis, \r\nthe server responses with a list of IP and port of cluster nodes, then Redisson client try to connect to newly discovered masters, but now the target is IP and Azure doesn't sign the certificate.\r\n\r\nImportant note:\r\nall the discovered IPs are the same IP resolved by endpoint URL (which provided by Azure).\r\n\r\nI saw that other redis clients separate the endpointIdentification for the base connection and cluster node connection.\r\nIf we are able to do node cluster endpointIdentification with the base connection verification it will solve the issue.\r\n\r\nThanks", "url": "https://github.com/redisson/redisson/issues/1296", "user": "haiS8dn", "labels": ["bug"], "created": "2018-02-13 12:20:57", "closed": "2018-03-13 07:24:08", "commits": {"9a179e14cded9e20f081ce479e47af49a02f45af": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "9a179e14cded9e20f081ce479e47af49a02f45af", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0a49fdb050059420ab66da581d8a0daeaaa41897"], "nameRev": "9a179e14cded9e20f081ce479e47af49a02f45af tags/redisson-2.11.3~3", "commitMessage": "Fixed - CertificateException while connecting to Azure or AWS Elasticache config endpoint. #1296\n", "commitDateTime": "2018-03-13 12:24:20", "authoredDateTime": "2018-03-13 12:24:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClientConfig.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/RedisChannelInitializer.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 12, "deletions": 11, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 11, "deletions": 4, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/misc/URIBuilder.java", "insertions": 19, "deletions": 9, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClientConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClientConfig", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClientConfig.getSslHostname()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClientConfig.setSslHostname(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisChannelInitializer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.RedisChannelInitializer.initSsl(org.redisson.client.RedisClientConfig,io.netty.channel.Channel)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.getConfigEndpointHostName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.config.ClusterServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.createClient(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.createClient(org.redisson.api.NodeType,java.net.URI,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectToNode(org.redisson.config.BaseMasterSlaveServersConfig,java.net.URI,org.redisson.client.RedisClient,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.URI,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,int,int,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.URI)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(java.net.InetSocketAddress,java.net.URI)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(java.net.URI)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.InetSocketAddress,java.net.URI,boolean,org.redisson.api.NodeType)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.URI,boolean,org.redisson.api.NodeType)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ReplicatedConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).1.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.checkState(org.redisson.config.SentinelServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(java.net.URI,org.redisson.config.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URIBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URIBuilder", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.URIBuilder.isValidIP(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a179e14cded9e20f081ce479e47af49a02f45af"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 79, "deletions": 38, "lines": 117, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 58, "UPD": 0, "INS": 44, "MOV": 14, "DEL": 0, "spoonFilesChanged": 9, "spoonMethodsChanged": 33}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/cluster", "redisson/src/main/java/org/redisson/client", "redisson/src/main/java/org/redisson/misc", "redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.connectToNode(org.redisson.config.BaseMasterSlaveServersConfig,java.net.URI,org.redisson.client.RedisClient,java.lang.String)", "org.redisson.cluster.ClusterConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "org.redisson.connection.createClient(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "org.redisson.client.RedisClientConfig.setSslHostname(java.lang.String)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(java.net.URI,org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.createClient(org.redisson.api.NodeType,java.net.URI,java.lang.String)", "org.redisson.client.RedisClientConfig.getSslHostname()", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).1.run()", "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.InetSocketAddress,java.net.URI,boolean,org.redisson.api.NodeType)", "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.URI,boolean,org.redisson.api.NodeType)", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.URI)", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,int,int,java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.URI,java.lang.String)", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI)", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.config.ClusterServersConfig)", "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,java.lang.String)", "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(java.net.URI)", "org.redisson.misc.URIBuilder", "org.redisson.connection.MasterSlaveConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int,java.lang.String)", "org.redisson.misc.URIBuilder.isValidIP(java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int)", "org.redisson.connection.MasterSlaveEntry", "org.redisson.client.handler.RedisChannelInitializer.initSsl(org.redisson.client.RedisClientConfig,io.netty.channel.Channel)", "org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(java.net.InetSocketAddress,java.net.URI)", "org.redisson.connection.SentinelConnectionManager.checkState(org.redisson.config.SentinelServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "org.redisson.connection.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,java.lang.String)", "org.redisson.cluster.ClusterConnectionManager.getConfigEndpointHostName()", "org.redisson.connection.ReplicatedConnectionManager", "org.redisson.client.RedisClientConfig"]}, {"title": "Warning about CommandDecoder.decode() method", "body": "\r\n[redisson-netty-4-26] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: CommandDecoder.decode() must consume the inbound data or change its state if it did not decode anything.\r\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:380)\r\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1412)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:943)\r\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:141)\r\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\n    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\r\n[ajp-nio-8009-exec-10] ERROR com.personalcapital.server.change.aspect.ServerChangeAspect - getServerChangesAdvice failed due to: Unexpected exception while processing command for user :0d2ec4e0b72941c68ee665d93536712f, fromServerChangeId :72, toServerChangeId :76 failed due to: \r\n    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n    at java.lang.Thread.run(Unknown Source)", "url": "https://github.com/redisson/redisson/issues/1295", "user": "mrniko", "labels": ["bug"], "created": "2018-02-13 06:18:04", "closed": "2018-02-13 06:19:22", "commits": {"3db2deef3af0e3132adb4503ea57eb8da4a75684": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3db2deef3af0e3132adb4503ea57eb8da4a75684", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a3e8cc95a6aee1e340b5c23edc191766358cc3fc"], "nameRev": "3db2deef3af0e3132adb4503ea57eb8da4a75684 tags/redisson-2.11.1~6", "commitMessage": "Fixed - Warning about CommandDecoder.decode() method #1295\n", "commitDateTime": "2018-02-13 06:19:11", "authoredDateTime": "2018-02-13 06:19:11", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/Decoder.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Decoder.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3db2deef3af0e3132adb4503ea57eb8da4a75684"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 2, "lines": 13, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeCommandBatch(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandsData)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"]}, {"title": "RBatch throws NPE with big pipeline in atomic mode", "body": "", "url": "https://github.com/redisson/redisson/issues/1294", "user": "mrniko", "labels": ["bug"], "created": "2018-02-13 05:46:29", "closed": "2018-02-13 06:19:34", "commits": {"a3e8cc95a6aee1e340b5c23edc191766358cc3fc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a3e8cc95a6aee1e340b5c23edc191766358cc3fc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4e82a6eae67ce334c6169b0dd93b27aaf2434b5a"], "nameRev": "a3e8cc95a6aee1e340b5c23edc191766358cc3fc tags/redisson-2.11.1~7", "commitMessage": "Fixed - RBatch throws NPE with big pipeline in atomic mode. #1294\n", "commitDateTime": "2018-02-13 06:16:51", "authoredDateTime": "2018-02-13 06:16:51", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/BatchCommandData.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BatchCommandData.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.BatchCommandData", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testBigRequestAtomic()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a3e8cc95a6aee1e340b5c23edc191766358cc3fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol"], "changesInPackagesSPOON": ["org.redisson.client.protocol.BatchCommandData"]}, {"title": "RedissonRedLock.tryLock(long waitTime, long leaseTime, TimeUnit unit) still have something wrong", "body": "reference from the issue #1175 after it is closed. \r\n\r\nI change the test case in [RedissonRedLockTest.testLockSuccess()](https://github.com/redisson/redisson/blob/master/redisson/src/test/java/org/redisson/RedissonRedLockTest.java#L162) like this:\r\n```\r\n        RedisProcess redis1 = redisTestMultilockInstance();\r\n        RedisProcess redis2 = redisTestMultilockInstance();\r\n\r\n        RedissonClient client1 = createClient(redis1.getRedisServerAddressAndPort());\r\n        RedissonClient client2 = createClient(redis2.getRedisServerAddressAndPort());\r\n\r\n        RLock lock1 = client1.getLock(\"lock1\");\r\n        RLock lock2 = client1.getLock(\"lock2\");\r\n        RLock lock3 = client2.getLock(\"lock3\");\r\n        \r\n        Thread t1 = new Thread() {\r\n            public void run() {\r\n                lock2.lock();\r\n            };\r\n        };\r\n        t1.start();\r\n        t1.join();\r\n        \r\n        RedissonMultiLock lock = new RedissonRedLock(lock1, lock2, lock3);\r\n\r\n        try {\r\n            assertThat(lock.tryLock(500, 5000, TimeUnit.MILLISECONDS)).isTrue();\r\n            Thread.sleep(3000);\r\n        } catch (InterruptedException e) {\r\n        }\r\n        lock.unlock();\r\n\r\n        client1.shutdown();\r\n        client2.shutdown();\r\n        \r\n        assertThat(redis1.stop()).isEqualTo(0);\r\n        assertThat(redis2.stop()).isEqualTo(0);\r\n```\r\n\r\nThe test case above will fail in case of that lock1/lock2 is locked first in thread t1. However, it will pass in case of lock3 is locked first in thread t1.\r\n\r\nThe expected behavior is as follows:\r\n\r\n1. No matter which lock is locked first in thread t1, the Red Lock will always can be locked or cannot.\r\n2. In this case, the Red Lock should always be locked for most of the lock is available.", "url": "https://github.com/redisson/redisson/issues/1292", "user": "JackEggie", "labels": ["bug"], "created": "2018-02-12 07:43:49", "closed": "2018-03-08 06:25:42", "commits": {"d095634e6a66220f362d502ac7efe5756e913a3d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "d095634e6a66220f362d502ac7efe5756e913a3d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["918e8f54ee6db41be1ec44be16989cec81178c86"], "nameRev": "d095634e6a66220f362d502ac7efe5756e913a3d tags/redisson-2.11.3~10", "commitMessage": "Fixed - RedissonRedLock.tryLock doesn't work for some wait time values. #1292\n", "commitDateTime": "2018-03-08 11:25:53", "authoredDateTime": "2018-03-08 11:25:53", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRedLock.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRedLockTest.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRedLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRedLock.calcLockWaitTime(long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRedLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRedLockTest.testLock(org.redisson.api.RLock,org.redisson.api.RLock,org.redisson.api.RLock,org.redisson.api.RLock)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.testLock(org.redisson.api.RLock,org.redisson.api.RLock,org.redisson.api.RLock,org.redisson.api.RLock).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.testLock(org.redisson.api.RLock,org.redisson.api.RLock,org.redisson.api.RLock,org.redisson.api.RLock).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.test().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.test().7.run()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.testLockSuccess2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.testConnectionFailed()", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.testMultiThreads()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d095634e6a66220f362d502ac7efe5756e913a3d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRedLock.calcLockWaitTime(long)"]}, {"title": "Redisson Remote Service stops responding ", "body": "We have an RMI running on Redission 3.5.7.  Each RMI is fire-and-forget with no ack or completion time\r\n\r\nThis particular RMI is invoked about once every 2 minutes.  After about 3 days, the server side of the RMI simply stops processing.  The client is still producing messages.  Other Redis features such as client caches seem to still be working correctly on the same APP that is supposed to be processing the RMI calls.\r\n\r\n1-2 minutes after the last processed RMI call on the server side, we get the warning below.  This is the only error or warning that we are getting.  The rest of the java application works fine.  Once the the java application is restarted, all the remote calls are processed as expected.\r\n\r\nWe are running Redis on AWS with Redis 3.2.4 in cluster mode.\r\n\r\nWARN |redisson-netty-1-2|i.n.u.c.DefaultPromise|An exception was thrown by org.redisson.RedissonRemoteService$1$1.operationComplete()\r\njava.lang.NullPointerException: null\r\nat org.redisson.RedissonRemoteService$1$1.operationComplete(RedissonRemoteService.java:206)\r\nat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507)\r\nat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:500)\r\nat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:479)\r\nat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420)\r\nat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\r\nat org.redisson.misc.RedissonPromise.trySuccess(RedissonPromise.java:88)\r\nat org.redisson.command.CommandAsyncService.handleReference(CommandAsyncService.java:849)\r\nat org.redisson.command.CommandAsyncService.checkAttemptFuture(CommandAsyncService.java:836)\r\nat org.redisson.command.CommandAsyncService.access$200(CommandAsyncService.java:82)\r\nat org.redisson.command.CommandAsyncService$10.operationComplete(CommandAsyncService.java:629)\r\nat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507)\r\nat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:500)\r\nat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:479)\r\nat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420)\r\nat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\r\nat org.redisson.misc.RedissonPromise.trySuccess(RedissonPromise.java:88)\r\nat org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:320)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:259)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:101)\r\nat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\nat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1342)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:934)\r\nat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\nat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\nat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\nat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\nat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\nat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\nat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n", "url": "https://github.com/redisson/redisson/issues/1287", "user": "bhoover10001", "labels": ["bug"], "created": "2018-02-07 17:33:08", "closed": "2018-02-08 06:52:30", "commits": {"def3ee883bc3e21b57aa34e9164cbb39500ddd33": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "def3ee883bc3e21b57aa34e9164cbb39500ddd33", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["849da63bb9e9773e39d76a9a90fec605b2b2dc65"], "nameRev": "def3ee883bc3e21b57aa34e9164cbb39500ddd33 tags/redisson-2.11.1~17", "commitMessage": "Fixed - RedissonRemoteService NPE #1287\n", "commitDateTime": "2018-02-08 06:52:23", "authoredDateTime": "2018-02-08 06:52:23", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["def3ee883bc3e21b57aa34e9164cbb39500ddd33"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 0, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Multimap tries to keep the List/Set on the same node, but ignores Key Hash Tags in the given Key", "body": "As I described in the title, I am trying to utilize Key Hash Tags to accumulate data on the same ClusterNode.\r\nI am using a Multimap and noticed the Key for the Lists/Sets are wrapped in the Key Hash Tags and so they may be placed on another Node.\r\n\r\nFor example:\r\nThe MultiMap key is \"{multi.map}.some.key\".\r\nAn entry in it would be saved in the List/Set \"{{multi.map}.some.key}:ADJ...\".\r\nSo the Hash is not \"multi.map\" but rather \"{multi.map\".\r\n\r\nFor further information see the \"Key Hash Tag\" section on https://redis.io/topics/cluster-spec", "url": "https://github.com/redisson/redisson/issues/1286", "user": "Flyffies", "labels": ["bug"], "created": "2018-02-07 14:30:52", "closed": "2018-02-08 07:35:13", "commits": {"07131b883a346e036f0fb6087b8e1fa93affec84": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "07131b883a346e036f0fb6087b8e1fa93affec84", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["def3ee883bc3e21b57aa34e9164cbb39500ddd33"], "nameRev": "07131b883a346e036f0fb6087b8e1fa93affec84 tags/redisson-2.11.1~16", "commitMessage": "Fixed - Multimap cluster compatibility. #1286\n", "commitDateTime": "2018-02-08 07:35:06", "authoredDateTime": "2018-02-08 07:35:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonListMultimap.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/RedissonListMultimapCache.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultimap.java", "insertions": 15, "deletions": 10, "lines": 25}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultimapCache.java", "insertions": 21, "deletions": 9, "lines": 30}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimap.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimapCache.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBaseMultimapCacheTest.java", "insertions": 172, "deletions": 0, "lines": 172}, {"filePath": "redisson/src/test/java/org/redisson/RedissonListMultimapCacheTest.java", "insertions": 6, "deletions": 107, "lines": 113}, {"filePath": "redisson/src/test/java/org/redisson/RedissonListMultimapTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetMultimapCacheTest.java", "insertions": 6, "deletions": 160, "lines": 166}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonListMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimap.sizeAsync()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimap.containsValueAsync(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonListMultimapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimapCache.containsValueAsync(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.getTimeoutSetName()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultimap.clearExpireAsync()", "TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.expireAtAsync(long)", "TOT": 10, "UPD": 4, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultimap.expireAsync(long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.deleteAsync()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.getValuesName(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultimap", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultimapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultimapCache.expireAsync(long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimapCache.expireAtAsync(long)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimapCache.clearExpireAsync()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimapCache.deleteAsync()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimapCache", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimap.sizeAsync()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimap.containsValueAsync(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapCache.containsValueAsync(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCache.getTimeoutSetName()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCache", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBaseMultimapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseMultimapCacheTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonListMultimapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimapCacheTest.testScheduler()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCacheTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCacheTest.testValues()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCacheTest.testContains()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonListMultimapCacheTest.testContainsExpired()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonListMultimapCacheTest.testGetAll()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonListMultimapCacheTest.testGetAllExpired()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonListMultimapCacheTest.testValuesExpired()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonListMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimapTest.testPut()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapTest.testContainsValue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testExpire()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testValues()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testContains()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testContainsExpired()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testGetAll()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testGetAllExpired()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testValuesExpired()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testScheduler()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testExpireAt()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testClearExpire()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testDelete()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["07131b883a346e036f0fb6087b8e1fa93affec84"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 64, "deletions": 39, "lines": 103, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 55, "UPD": 20, "INS": 28, "MOV": 3, "DEL": 4, "spoonFilesChanged": 6, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMultimap", "org.redisson.RedissonListMultimapCache.containsValueAsync(java.lang.Object)", "org.redisson.RedissonMultimap.getValuesName(java.lang.String)", "org.redisson.RedissonListMultimapCache", "org.redisson.RedissonSetMultimapCache", "org.redisson.RedissonMultimap.clearExpireAsync()", "org.redisson.RedissonSetMultimap.containsValueAsync(java.lang.Object)", "org.redisson.RedissonListMultimap.containsValueAsync(java.lang.Object)", "org.redisson.RedissonListMultimap.sizeAsync()", "org.redisson.RedissonMultimapCache", "org.redisson.RedissonMultimap.expireAtAsync(long)", "org.redisson.RedissonMultimapCache.deleteAsync()", "org.redisson.RedissonMultimapCache.expireAtAsync(long)", "org.redisson.RedissonSetMultimapCache.getTimeoutSetName()", "org.redisson.RedissonMultimap.deleteAsync()", "org.redisson.RedissonSetMultimapCache.containsValueAsync(java.lang.Object)", "org.redisson.RedissonMultimapCache.clearExpireAsync()", "org.redisson.RedissonSetMultimap.sizeAsync()", "org.redisson.RedissonMultimap.expireAsync(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonListMultimapCache.getTimeoutSetName()", "org.redisson.RedissonMultimapCache.expireAsync(long,java.util.concurrent.TimeUnit)"]}, {"title": "Redisson 2.9.1 Redis 2.8.17 in sentinel mode, redisson subscriber is not self-healing after restarting all redis boxes", "body": "**Set Up**\r\nRedisson version: 2.9.1\r\nRedis Version: 2.8.17  Mode: Sentinel\r\n\r\nFound this issue in our production, not sure if self-healing is supported by redisson during disaster like all redis servers are down, if it is supported, any specific version ?\r\n\r\n**Basic Configuration**\r\n```\r\n       public RedissonClient redissonClient() { \r\n                Config config = new Config();\r\n\t\tconfig.setThreads(4);\r\n\t\tSentinelServersConfig sentinelServersConfig = config.useSentinelServers()\r\n\t\t\t\t\t.setMasterName(sentinelClusterName)\r\n\t\t\t\t\t.setTimeout(responseTimeout);\r\n\t\tfor (String addr : sentinelAddresses) {\r\n\t\t\tsentinelServersConfig.addSentinelAddress(addr);\t\t\t\r\n\t\t}\r\n\t\treturn Redisson.create(config);\r\n\t   }\r\n```\r\n\r\nWe initialize the subscriber **once** as following during server startup\r\n```\r\nprotected void init() {\r\n\t\tRTopic<HeartbeatEvent> topic = redisson.getTopic(\"test_topic\");\r\n\t\ttopic.addListener(new MessageListener<HeartbeatEvent>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onMessage(String channel, HeartbeatEvent message) {\r\n\t\t\t\tString host = (String) ((Map) \r\n                                     SerializationUtils.deserialize(message.getExtraState()))\r\n\t\t\t\t\t\t.get(CommonConstants.IMAS_SERVER_INTERNAL_ADDRESS);\r\n\t\t\t\tif (host != null) {\r\n\t\t\t\t\tSipURI imasUri = createImasSipUri(host);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n```\r\n\r\n**Steps to recreate:**\r\n\r\n_Scenario A:_ \r\n1. stop all redis-sentinel service\r\n2. stop all redis-server service\r\n3. wait for 2 min\r\n4. start all redis-server service \r\n5. start all redis-sentinel service\r\n\r\n_Scenario B:_ \r\n(order is  2, 1, 3, 5, 4)\r\n\r\nAfter this, the client is no longer listening to \"test_topic\"\r\n\r\n**Interesting Finding:** \r\n1. Redisson 2.2.27 is performing better than 2.9.1 in the sense of re-subscribe\r\n2. Even all Client in 2.9.1 version, sharing the same config as above, some clients are able to re-subscribe\r\n\r\nI went through the implementation of 2.9.1, found out that if following Scenario B, while doing `MasterSlaveEntry. reattachPubSubListeners()`, the unsubscribe and resubscribe process is trying in best-effort, which is prone to lose listener for a channel, leading clients unable to resubscribe. What is confusing is in Scenario A, some of the clients were able to reconnect somehow.\r\n\r\nIs there any way for redisson to survive a redis disaster failure like this ?\r\n\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1284", "user": "brother-fu", "labels": ["bug"], "created": "2018-02-07 02:03:30", "closed": "2018-02-13 11:41:05", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Redisson issuing undue commands with spring cache", "body": "We are using redisson 3.5.2 with spring cache.\r\n\r\n\r\nWhen I put the debug on the method,\r\n` @Override\r\n    public ValueWrapper get(Object key) {\r\n        Object value = map.get(key);\r\n        if (value == null) {\r\n            addCacheMiss();\r\n        }else{\r\n            addCacheHit();\r\n        }\r\n        return toValueWrapper(value);\r\n    }\r\n`\r\n\r\nI get the following requests when using Monitor on the redis server.\r\n\r\n1517915720.885427 [0 127.0.0.1:58162] \"HLEN\" \"client_test\"\r\n1517915720.891805 [0 127.0.0.1:58163] \"HLEN\" \"client_test\"\r\n1517915720.910285 [0 127.0.0.1:58164] \"HLEN\" \"client_test\"\r\n1517915720.914924 [0 127.0.0.1:58165] \"HLEN\" \"client_test\"\r\n1517915720.919594 [0 127.0.0.1:58167] \"HLEN\" \"client_test\"\r\n1517915720.927470 [0 127.0.0.1:58166] \"HLEN\" \"client_test\"\r\n**1517915722.923863 [0 127.0.0.1:58179] \"EVAL\" \"local value = redis.call('hget', KEYS[1], ARGV[2]); if value == false then return nil; end; local t, val = struct.unpack('dLc0', value); local expireDate = 92233720368547758; local expireDateScore = redis.call('zscore', KEYS[2], ARGV[2]); if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end; if t ~= 0 then local expireIdle = redis.call('zscore', KEYS[3], ARGV[2]); if expireIdle ~= false then if tonumber(expireIdle) > tonumber(ARGV[1]) then local value = struct.pack('dLc0', t, string.len(val), val); redis.call('hset', KEYS[1], ARGV[2], value); redis.call('zadd', KEYS[3], t + tonumber(ARGV[1]), ARGV[2]); end; expireDate = math.min(expireDate, tonumber(expireIdle)) end; end; if expireDate <= tonumber(ARGV[1]) then return nil; end; local maxSize = tonumber(redis.call('hget', KEYS[5], 'max-size')); if maxSize ~= nil and maxSize ~= 0 then    redis.call('zadd', KEYS[4], tonumber(ARGV[1]), ARGV[2]); end; return val; \" \"5\" \"client_test\" \"redisson__timeout__set:{client_test}\" \"redisson__idle__set:{client_test}\" \"redisson__map_cache__last_access__set:{client_test}\" \"{client_test}:redisson_options\" \"1517915722922\" \"\\\"ims_CLIENT_WITH_FR\\\"\"**\r\n1517915722.924041 [0 lua] \"hget\" \"client_test\" \"\\\"ims_CLIENT_WITH_FR\\\"\"\r\n1517915722.924057 [0 lua] \"zscore\" \"redisson__timeout__set:{client_test}\" \"\\\"ims_CLIENT_WITH_FR\\\"\"\r\n1517915722.924074 [0 lua] \"zscore\" \"redisson__idle__set:{client_test}\" \"\\\"ims_CLIENT_WITH_FR\\\"\"\r\n**1517915722.924090 [0 lua] \"hset\" \"client_test\" \"\\\"ims_CLIENT_WITH_FR\\\"\" \"\\x00\\x00\\x00\\x00p\\x99\\x94AR\\x01\\x00\\x00\\x00\\x00\\x00\\x00{\\\"@class\\\":\\\"com.db.qo.ClientQO\\\",\\\"createdTime\\\":[\\\"java.sql.Timestamp\\\",1511531395000],\\\"createdUserId\\\":\\\"amit\\\",\\\"description\\\":\\\"Uber JLT\\\",\\\"executorType\\\":\\\"IMS\\\",\\\"id\\\":4,\\\"imsClientId\\\":\\\"client_with_fr\\\",\\\"modifiedTime\\\":[\\\"java.sql.Timestamp\\\",1511531397000],\\\"name\\\":\\\"Uber JLT\\\",\\\"pollInterval\\\":350,\\\"productCode\\\":\\\"PS\\\",\\\"productVersion\\\":\\\"V2\\\"}\"\r\n1517915722.924167 [0 lua] \"zadd\" \"redisson__idle__set:{client_test}\" \"1518002122922\" \"\\\"ims_CLIENT_WITH_FR\\\"\"**\r\n1517915722.924185 [0 lua] \"hget\" \"{client_test}:redisson_options\" \"max-size\"\r\n\r\n\r\nI am unable to understand why the eval and hset command is sent from redisson when I am getting a key. \r\nThis is creating an issue for us to scale our services since these eval and hset calls will only go to master. Even if, we increase our redis slaves we wont be able to scale our reads since each read results into two writes to redis master.\r\nOther issues are: \r\nThe eval command is taking a lock on redis master.\r\nThe hset command is setting the same response in redis master which is being replicated by all the redis slaves. This is resulting in wastage of redis server resources since they are wasting them to replicate the exact same data.", "url": "https://github.com/redisson/redisson/issues/1282", "user": "Himanshu4", "labels": ["bug"], "created": "2018-02-06 11:30:49", "closed": "2018-02-12 11:42:10", "commits": {"8345e24c0b6b8d9be19df26a53abc5d653c32a70": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "8345e24c0b6b8d9be19df26a53abc5d653c32a70", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1b54139f3add10e0a827d46d16235402cd3e9abd"], "nameRev": "8345e24c0b6b8d9be19df26a53abc5d653c32a70 tags/redisson-2.11.1~24", "commitMessage": "Fixed - remove hset command invocation during entry loading. #1282\n", "commitDateTime": "2018-02-07 08:08:04", "authoredDateTime": "2018-02-07 08:08:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 1, "deletions": 21, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.containsKeyAsync(java.lang.Object)", "TOT": 14, "UPD": 12, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.containsValueAsync(java.lang.Object)", "TOT": 16, "UPD": 14, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.getAllOperationAsync(java.util.Set)", "TOT": 12, "UPD": 10, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.getOperationAsync(java.lang.Object)", "TOT": 15, "UPD": 13, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.addAndGetOperationAsync(java.lang.Object,java.lang.Number)", "TOT": 41, "UPD": 39, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutIfAbsentOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 17, "UPD": 15, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.readAllKeySetAsync()", "TOT": 16, "UPD": 14, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.readAll(org.redisson.client.protocol.RedisCommand)", "TOT": 17, "UPD": 15, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.readAllValuesAsync()", "TOT": 16, "UPD": 14, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.scanIteratorAsync(java.lang.String,org.redisson.client.RedisClient,long,java.lang.String).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8345e24c0b6b8d9be19df26a53abc5d653c32a70"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 21, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 170, "UPD": 150, "INS": 0, "MOV": 10, "DEL": 10, "spoonFilesChanged": 1, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.readAll(org.redisson.client.protocol.RedisCommand)", "org.redisson.RedissonMapCache.containsKeyAsync(java.lang.Object)", "org.redisson.RedissonMapCache.containsValueAsync(java.lang.Object)", "org.redisson.RedissonMapCache.scanIteratorAsync(java.lang.String,org.redisson.client.RedisClient,long,java.lang.String).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonMapCache.readAllValuesAsync()", "org.redisson.RedissonMapCache.fastPutIfAbsentOperationAsync(java.lang.Object,java.lang.Object)", "org.redisson.RedissonMapCache.getAllOperationAsync(java.util.Set)", "org.redisson.RedissonMapCache.getOperationAsync(java.lang.Object)", "org.redisson.RedissonMapCache.readAllKeySetAsync()", "org.redisson.RedissonMapCache.addAndGetOperationAsync(java.lang.Object,java.lang.Number)"]}, {"title": "Redisson client keeps running after shutdown invoked  ", "body": "I have the following code:\r\n\r\n```java\r\nRedissonClient redisson = Redisson.create();\r\n\r\nRMap<Object, Object> mymap = redisson.getMap(\"mymap\");\r\nmymap.put(\"field1\", \"value1\");\r\nmymap.put(\"field1\", \"value2\");\r\n\r\nredisson.shutdown();\r\n\r\nlogger.info(\"Here but JVM still runs after this line\");\r\n```\r\n\r\nAnd the output is:\r\n\r\n```\r\n2018-02-01 15:24:14 INFO  Version:41 - Redisson 3.6.0\r\n2018-02-01 15:24:14 INFO  MasterPubSubConnectionPool:144 - 1 connections initialized for /127.0.0.1:6379\r\n2018-02-01 15:24:14 INFO  MasterConnectionPool:144 - 10 connections initialized for /127.0.0.1:6379\r\n2018-02-01 15:24:17 INFO  RedisTest:21 - Here but JVM still runs after this line\r\n```\r\n\r\nWhat is other than shutdown needed for graceful shutdown?\r\n", "url": "https://github.com/redisson/redisson/issues/1275", "user": "mustafaakin", "labels": ["bug"], "created": "2018-02-01 12:27:25", "closed": "2018-02-07 14:37:47", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "NPE with redisson pro", "body": "I am using redisson pro trial version(3.6.0) in cluster config with elasticache(redis=3.2.6), I see NPE in get and evict operations using spring cache framework. I don't see this issue with the community version(3.6.0) and same configuration\r\n\r\nIt basically just gives this error and hangs. I think the exception is being swallowed by DefaultPromise\r\n```\r\nWARN io.netty.util.concurrent.DefaultPromise - An exception was thrown by org.redisson.command.CommandAsyncService$9.operationComplete()\r\njava.lang.NullPointerException: channel\r\n\tat io.netty.util.internal.ObjectUtil.checkNotNull(ObjectUtil.java:31)\r\n\tat io.netty.channel.DefaultChannelPromise.<init>(DefaultChannelPromise.java:53)\r\n\tat org.redisson.connection.t.b.send(ac:148)\r\n\tat org.redisson.command.CommandAsyncService$9.operationComplete(oj:389)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:481)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420)\r\n\tat io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:163)\r\n\tat org.redisson.misc.RedissonPromise.addListener(RedissonPromise.java:123)\r\n\tat org.redisson.misc.RedissonPromise.addListener(RedissonPromise.java:41)\r\n\tat org.redisson.command.CommandAsyncService.async(oj:503)\r\n\tat org.redisson.command.CommandAsyncService.evalAsync(oj:599)\r\n\tat org.redisson.command.CommandAsyncService.evalWriteAsync(oj:307)\r\n\tat org.redisson.RedissonMapCache.getOperationAsync(wf:288)\r\n\tat org.redisson.RedissonMap.getAsync(ko:800)\r\n\tat org.redisson.RedissonMap.get(ko:409)\r\n\tat org.redisson.spring.cache.RedissonCache.get(RedissonCache.java:73)\r\n\tat org.springframework.cache.interceptor.AbstractCacheInvoker.doGet(AbstractCacheInvoker.java:71)\r\n\tat org.springframework.cache.interceptor.CacheAspectSupport.findInCaches(CacheAspectSupport.java:536)\r\n\tat org.springframework.cache.interceptor.CacheAspectSupport.findCachedItem(CacheAspectSupport.java:502)\r\n\tat org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:388)\r\n\tat org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:326)\r\n\tat org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\r\n\tat com.safepage.user.data.impl.UserFeatureTypeMapDaoImpl$$EnhancerBySpringCGLIB$$8924d657.getUserFeatureTypeByUserId(<generated>)\r\n```", "url": "https://github.com/redisson/redisson/issues/1274", "user": "PC-AKumar", "labels": ["bug"], "created": "2018-02-01 04:01:46", "closed": "2018-02-01 05:57:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\"You can't write against a read only slave\" after failover with sentinel ", "body": "Hello, I have a strange issue with redisson and sentinel fail-over\r\n\r\nI have a SpringBoot application, I have multiple instance of this application, load balanced(HAproxy).\r\nMy http sessions is shared between these instances with Spring-session and Redisson.\r\nI have a Redis cluster in \"Master - Slave\" configuration with 6 sentinel.\r\n\r\nWhen I have a failure on my Redis master (I can reproduce with \"redis-cli -p 6379 DEBUG sleep 30\"), the sentinel fail-over is working well (in around 2 minutes) and the slave become a master.\r\n\r\nThis is the beginning of my problems :\r\n\r\nFirst I can see many \"org.redisson.client.RedisConnectionException\"  during 10-15 minutes\r\n\r\n```\r\nRedisConnection@232881729 [redisClient=[addr=/57.190.13.39:6399], channel=[id: 0xed64ca68, L:0.0.0.0/0.0.0.0:47232 ! R:/57.190.13.39:6399]] is not active!\r\n\r\nMasterConnectionPool no available Redis entries.  Disconnected hosts: [/57.190.13.40:6399]\r\n```\r\nI assume, it's probably due to connection switching.\r\n\r\nBut after during 1 hour, I still have lot of \"org.redisson.client.RedisException\"\r\n\r\n```\r\nREADONLY You can't write against a read only slave.. channel: [id: 0x1b28f878, L:/172.17.0.4:60686 - R:/57.190.13.39:6399] command: (PEXPIRE), params: [redisson_spring_session:3a36d767-e939-47d0-b3a0-22d120a11e0a, 1800000]\r\n```\r\nLot of user login in my application are failing and all the access to redis become slow become slow (jump from 2 ms to 100ms)\r\nAnd I restarted my Spring Boot application and everything is back to normal\r\n\r\nDo you have experienced similar issue ? or any hint ?\r\n\r\nI'm using SpringBoot 1.5.8.RELEASE\r\nRedisson 3.5.4\r\nSpring Session 1.3.1.RELEASE\r\n\r\nHere my Java configuration :\r\n```\r\n@EnableRedissonHttpSession\r\n@Configuration\r\n@ConfigurationProperties(\"redis\")\r\npublic class RedissonConfig implements BeanClassLoaderAware\r\n{\r\n    private static final int THREAD_NUMBER = 4;\r\n\r\n    @Autowired\r\n    private ICommonConfigurationService commonConfigurationService;\r\n\r\n    private ClassLoader loader;\r\n    private String addresses;\r\n    private String masterName;\r\n    private String password;\r\n\r\n    @Override\r\n    public void setBeanClassLoader(final ClassLoader classLoader)\r\n    {\r\n        this.loader = classLoader;\r\n    }\r\n\r\n    private ObjectMapper mapper()\r\n    {\r\n        final ObjectMapper mapper = new ObjectMapper();\r\n\r\n        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\r\n        mapper.disable(DeserializationFeature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE);\r\n        mapper.setSerializationInclusion(Include.NON_NULL);\r\n        mapper.addMixIn(Throwable.class, JsonJacksonCodec.ThrowableMixIn.class);\r\n        //Add mixin to save Locale with the @class into redis. Useful for LocaleResolver\r\n        mapper.addMixIn(Locale.class, LocaleMixIn.class);\r\n\r\n        mapper.registerModule(new JavaTimeModule());\r\n        mapper.registerModules(SecurityJackson2Modules.getModules(this.loader));\r\n        mapper.findAndRegisterModules();\r\n\r\n        return mapper;\r\n    }\r\n\r\n    @Bean\r\n    public CookieSerializer cookieSerializer()\r\n    {\r\n        final DefaultCookieSerializer serializer = new DefaultCookieSerializer();\r\n        serializer.setCookieName(commonConfigurationService.getSessionCookieName());\r\n        serializer.setCookiePath(commonConfigurationService.getSessionCookiePath());\r\n        return serializer;\r\n    }\r\n\r\n    @Bean(destroyMethod = \"shutdown\")\r\n    public RedissonClient redissonClient()\r\n    {\r\n        return Redisson.create(sentinelServers());\r\n    }\r\n\r\n    private Config baseConfig()\r\n    {\r\n        return new Config()\r\n                .setNettyThreads(THREAD_NUMBER)\r\n                .setThreads(THREAD_NUMBER)\r\n                .setCodec(new JsonJacksonCodec(mapper()));\r\n    }\r\n\r\n    private Config sentinelServers()\r\n    {\r\n        final Config config = baseConfig();\r\n        config.useSentinelServers()\r\n                .addSentinelAddress(split(addresses, \", \"))\r\n                .setMasterName(masterName)\r\n                .setPassword(password)\r\n                .setTimeout(30000)\r\n                .setConnectTimeout(30000);\r\n\r\n        return config;\r\n    }\r\n\r\n    public String getAddresses()\r\n    {\r\n        return addresses;\r\n    }\r\n\r\n    public void setAddresses(final String addresses)\r\n    {\r\n        this.addresses = addresses;\r\n    }\r\n\r\n    public String getMasterName()\r\n    {\r\n        return masterName;\r\n    }\r\n\r\n    public void setMasterName(final String masterName)\r\n    {\r\n        this.masterName = masterName;\r\n    }\r\n\r\n    public String getPassword()\r\n    {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(final String password)\r\n    {\r\n        this.password = password;\r\n    }\r\n\r\n}\r\n```", "url": "https://github.com/redisson/redisson/issues/1272", "user": "DevWantJustHaveFun", "labels": ["bug"], "created": "2018-01-31 17:13:32", "closed": "2018-03-21 12:53:23", "commits": {"c72e6ad943f96df8b6556a1b4360532cac4451cf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 48.000277777777775, "commitsDetails": [{"commitHash": "c72e6ad943f96df8b6556a1b4360532cac4451cf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9a36a5badc5331a76184c7ede70ae67e38f8b3b3"], "nameRev": "c72e6ad943f96df8b6556a1b4360532cac4451cf tags/redisson-2.11.4~6", "commitMessage": "Fixed - \"READONLY can't write against a read only slave\" error. #1272 #945\n", "commitDateTime": "2018-03-21 17:53:18", "authoredDateTime": "2018-03-21 17:53:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 12, "deletions": 11, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 129, "deletions": 0, "lines": 129}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.freezeMaster(org.redisson.connection.ClientConnectionsEntry$FreezeReason)", "TOT": 12, "UPD": 2, "INS": 1, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.releaseSubscribeConnection(org.redisson.client.RedisPubSubConnection)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.releaseConnection(org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.changeMaster(int,java.net.URI)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.freeze()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.InetSocketAddress,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "TOT": 11, "UPD": 5, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testFailoverInSentinel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "org.redisson.RedissonTopic.removeAllListeners got blocked on CountDownLatch.await", "body": "Hi there,\r\n\r\nWe hit an issue in one of our server using Redission as Redis Client. We do have a single thread executor handling subscribe/unsubscribe for multiple channels. But last week, we found this got blocked on one server . Below is the thread print\r\n\r\n\"pool-12-thread-1\" #67 prio=5 os_prio=0 tid=0x00007f9f6c9e1000 nid=0x5091 waiting on condition [0x00007f9f6a2f6000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n\tat sun.misc.Unsafe.park(Native Method)\r\n\t- parking to wait for  <0x00000006cc5406a8> (a java.util.concurrent.CountDownLatch$Sync)\r\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\r\n\tat java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)\r\n\tat org.redisson.pubsub.AsyncSemaphore.acquireUninterruptibly(AsyncSemaphore.java:49)\r\n\tat org.redisson.RedissonTopic.removeAllListeners(RedissonTopic.java:89)\r\n\r\nThe org.redisson.RedissonTopic.removeAllListeners is unable to respond request, and blocked in the acquireUninterruptibly FOREVER. I tried to dig into logs, there was one exception thrown before this in CommandAsyncService.syncSubscription line 125 \"Subscribe timeout 9500ms\". This is possibly related since this was the only \"Subscribe timeout\" message I saw in last 30 days logs and then this issue happened. But I still don't find prove on this. Looks like this is a rare case since we just hit once. I tried to reproduce locally but with no luck.\r\n\r\nI think the removeAllListeners should give an option to let caller pass in a timeout. But this is also not going to resolve the root cause. I am wondering if other people have observed this issue before. Please advise if you have any ideas on this, thanks.\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1268", "user": "Yipei", "labels": ["bug"], "created": "2018-01-30 07:41:52", "closed": "2018-02-13 11:41:30", "commits": {"707b419d97c20e0d86df8712ba05ed19edf628b3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "a481259aa5c83d37e3e54c3e6d2fee1b99f27bb1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "707b419d97c20e0d86df8712ba05ed19edf628b3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ed247c0ce7eb0608a2ecc807fa31c74e91aea6f5"], "nameRev": "707b419d97c20e0d86df8712ba05ed19edf628b3 tags/redisson-2.11.1~10", "commitMessage": "Fixed - org.redisson.RedissonTopic.removeAllListeners got blocked on invocation. #1268\n", "commitDateTime": "2018-02-12 07:25:15", "authoredDateTime": "2018-02-12 07:25:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonPatternTopic.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "redisson/src/main/java/org/redisson/RedissonTopic.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/AsyncSemaphore.java", "insertions": 16, "deletions": 4, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonPatternTopicReactive.java", "insertions": 11, "deletions": 1, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPatternTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPatternTopic.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPatternTopic.removeAllListeners()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPatternTopic.removeListener(org.redisson.api.listener.PatternMessageListener)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonPatternTopic.acquire(org.redisson.pubsub.AsyncSemaphore)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.removeAllListeners()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopic.removeListener(org.redisson.api.listener.MessageListener)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopic.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopic.acquire(org.redisson.pubsub.AsyncSemaphore)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AsyncSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.AsyncSemaphore.acquireUninterruptibly()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.pubsub.AsyncSemaphore.tryAcquire(long)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonPatternTopicReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonPatternTopicReactive.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.RedissonPatternTopicReactive.acquire(org.redisson.pubsub.AsyncSemaphore)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a481259aa5c83d37e3e54c3e6d2fee1b99f27bb1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["707b419d97c20e0d86df8712ba05ed19edf628b3"], "nameRev": "a481259aa5c83d37e3e54c3e6d2fee1b99f27bb1 tags/redisson-2.11.1~9", "commitMessage": "Fixed - possible pubsub listeners leak.  #1268\n", "commitDateTime": "2018-02-12 08:32:29", "authoredDateTime": "2018-02-12 08:32:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 30, "deletions": 17, "lines": 47}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[])", "TOT": 11, "UPD": 1, "INS": 1, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener[]).2.run()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[]).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.connection.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean).10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[]).3.run()", "TOT": 8, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).4.run()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener[])", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[]).2.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.connection.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).3.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.connection.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["707b419d97c20e0d86df8712ba05ed19edf628b3", "a481259aa5c83d37e3e54c3e6d2fee1b99f27bb1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 83, "deletions": 28, "lines": 111, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 80, "UPD": 28, "INS": 19, "MOV": 25, "DEL": 8, "spoonFilesChanged": 5, "spoonMethodsChanged": 33}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/pubsub", "redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/reactive"], "changesInPackagesSPOON": ["org.redisson.RedissonTopic.removeAllListeners()", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.connection.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.reactive.RedissonPatternTopicReactive.removeListener(int)", "org.redisson.reactive.RedissonPatternTopicReactive.acquire(org.redisson.pubsub.AsyncSemaphore)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[]).3.run()", "org.redisson.RedissonPatternTopic.acquire(org.redisson.pubsub.AsyncSemaphore)", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).9", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).6", "org.redisson.pubsub.AsyncSemaphore.tryAcquire(long)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.connection.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[])", "org.redisson.RedissonTopic.removeListener(org.redisson.api.listener.MessageListener)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean).8", "org.redisson.RedissonPatternTopic.removeListener(org.redisson.api.listener.PatternMessageListener)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[])", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[])", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.pubsub.AsyncSemaphore.acquireUninterruptibly()", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[])", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).4.run()", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).7", "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener[]).2.run()", "org.redisson.RedissonTopic.acquire(org.redisson.pubsub.AsyncSemaphore)", "org.redisson.RedissonPatternTopic.removeAllListeners()", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.connection.PubSubConnectionEntry,org.redisson.client.RedisPubSubListener[]).5", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[]).3", "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener[])", "org.redisson.RedissonPatternTopic.removeListener(int)", "org.redisson.RedissonTopic.removeListener(int)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).3.run()", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.protocol.pubsub.PubSubType,org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener[]).2.run()", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean).10", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.misc.RPromise,org.redisson.client.protocol.pubsub.PubSubType,org.redisson.pubsub.AsyncSemaphore,org.redisson.client.RedisPubSubListener[]).4"]}, {"title": "RLiveObjectService not support Enum", "body": "version : 3.6.0\r\n\r\nsimple code:\r\n```java\r\n\r\n@REntity()\r\n@Data\r\npublic class TestEntry {\r\n\r\n    @RId\r\n    private String id;\r\n    private String value;\r\n    private XX xx;\r\n    private int tem;\r\n\r\n    public enum XX {\r\n        A, B\r\n    }\r\n\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        RedissonClient redissonClient = Redisson.create();\r\n        RLiveObjectService liveObjectService = redissonClient.getLiveObjectService();\r\n        liveObjectService.registerClass(TestEntry.class);\r\n        TestEntry entry = new TestEntry();\r\n\r\n        entry.setXx(XX.A);\r\n        entry.setId(\"xxx\");\r\n        entry.setValue(\"value\");\r\n        entry.setTem(10);\r\n        liveObjectService.persist(entry);\r\n\r\n        TestEntry liveEntry = liveObjectService.get(TestEntry.class, \"xxx\");\r\n     //java.lang.ClassCastException: java.lang.String cannot be cast to  test.TestEntry$XX\r\n        System.out.println(liveEntry.getXx());\r\n  }\r\n\r\n```", "url": "https://github.com/redisson/redisson/issues/1267", "user": "yuchen99", "labels": ["bug"], "created": "2018-01-30 03:56:24", "closed": "2018-02-08 08:57:55", "commits": {"610cae2151f2e30cbd0e52aa49588ccefe09020f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "610cae2151f2e30cbd0e52aa49588ccefe09020f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["07131b883a346e036f0fb6087b8e1fa93affec84"], "nameRev": "610cae2151f2e30cbd0e52aa49588ccefe09020f tags/redisson-2.11.1~15", "commitMessage": "Fixed - Enum support for Live Objects. #1267\n", "commitDateTime": "2018-02-08 08:57:48", "authoredDateTime": "2018-02-08 08:57:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/liveobject/core/AccessorInterceptor.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 53, "deletions": 1, "lines": 54}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AccessorInterceptor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.intercept(java.lang.reflect.Method,java.util.concurrent.Callable,java.lang.Object[],java.lang.Object,org.redisson.api.RMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestEnum", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testEnum()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["610cae2151f2e30cbd0e52aa49588ccefe09020f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/liveobject/core"], "changesInPackagesSPOON": ["org.redisson.liveobject.core.AccessorInterceptor.intercept(java.lang.reflect.Method,java.util.concurrent.Callable,java.lang.Object[],java.lang.Object,org.redisson.api.RMap)"]}, {"title": "Reddison Spring Cache modifies exception semantics of annotated method", "body": "Regarding spring javadoc the spring `Cache` interface demands implementations to throw a `Cache.ValueRetrievalException`. \r\n\r\n> \"Wrapper exception to be thrown from `get(Object, Callable)` in case of the value loader callback failing with an exception.\"\r\n\r\nThe reddision cache implementations breaks this contract and throws a `ValueRetrievalException` that is wrapped within an `IllegalStateException`. This exception is not handled by Springs `CacheAspectSupport` and thus thrown back directly to the caller of the annotated method. \r\n\r\nLooking at `CacheAspectSupport`, it would also expect a `CacheOperationInvoker.ThrowableWrapper` as cause of the `ValueRetrievalException` which is removed within the reddison cache implementation when constructing the `ValueRetrievalException`.\r\n\r\nThis behaviour breaks the transparency of the cache abstraction and beaks code that relies on exceptions for control flow (eg. `javax.ws.rs.NotFoundException`). Can you please take a look and this and tell me if that is intended behaviour?\r\n\r\nBest Regards\r\nDaniel Selinger\r\n", "url": "https://github.com/redisson/redisson/issues/1257", "user": "sLite", "labels": ["bug"], "created": "2018-01-23 14:10:44", "closed": "2018-01-24 10:04:34", "commits": {"ff23a3fc91ce5e7ff538d9adbbce59a27ce3bc30": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ff23a3fc91ce5e7ff538d9adbbce59a27ce3bc30", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["49096634571d83d7b5b81cfa17984c7b6e21eaf6"], "nameRev": "ff23a3fc91ce5e7ff538d9adbbce59a27ce3bc30 tags/redisson-2.11.0~9", "commitMessage": "Fixed - ValueRetrievalException shouldn't be wrapped by IllegalStateException. #1257\n", "commitDateTime": "2018-01-24 10:04:06", "authoredDateTime": "2018-01-24 10:04:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/RedissonCache.java", "insertions": 14, "deletions": 1, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonCache.get(java.lang.Object,java.util.concurrent.Callable)", "TOT": 9, "UPD": 1, "INS": 7, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ff23a3fc91ce5e7ff538d9adbbce59a27ce3bc30"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 1, "lines": 15, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 1, "INS": 7, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/cache"], "changesInPackagesSPOON": ["org.redisson.spring.cache.RedissonCache.get(java.lang.Object,java.util.concurrent.Callable)"]}, {"title": "RSCRIPT LUA timeout and not consistent results", "body": "# RScript LUA timeout/Null Pointer exception\r\n\r\n**Description**\r\nWhen trying to execute EVAL LUA script using Redisson library,  We receive either null Pointer exception or timeout exception and results are not consistent.  If we execute one or two statements then it works fine but when we add a couple then it isn't giving consistent results. When ran eval Lua script directly  in REDIS client it **doesn't timeout** and gives consistent results. Please let us know what the issue is when using redisson library and how to fix it.\r\n\r\n\r\n## **REDISSON ERROR** same error even when I increased the timeout value\r\nCaused by: java.lang.NullPointerException: null\r\n\tat org.redisson.client.handler.CommandDecoder.messageDecoder(CommandDecoder.java:332) ~[redisson-3.5.6.jar:na]\r\n\r\njava.util.concurrent.ExecutionException: org.redisson.client.RedisTimeoutException: Redis server response timeout (3000 ms) occured for command: (EVAL) with paramsv\r\n\r\n## EVAL --> Below LUA script results correct values when executed in REDIS CLIENT directly\r\neval \"local d = {}; d[1] = redis.call('zrevrangebylex','ABCD17436','[DENY\\tTESTREDISSON\\t1506524856099','[DENY\\tTESTREDISSON\\t1506524856000','LIMIT',0,5);  d[2] = redis.call('zrevrangebylex','ABCD17436','[DENY\\tTESTREDISSON\\t1506524856099','[DENY\\tTESTREDISSON\\t1506524856000','LIMIT',0,15);  d[3] = redis.call('zrevrangebylex','ABCD17436','[DENY\\tTESTREDISSON\\t1506524856099','[DENY\\tTESTREDISSON\\t1506524856000','LIMIT',0,25);  return d;\" 0\r\n\r\n\r\n## \r\n**REDISSON code that is timing out or giving timeout exception**\r\n\r\n                       RedisUtil redisUtil = new RedisUtil();\r\n            RedissonClient redisson = redisUtil.getLocalRedis();;\r\n            \r\n            \r\n           RLexSortedSet idx2 = redisson.getLexSortedSet(\"ABCD17436\");\r\n            idx2.clear();\r\n\r\n            \r\n            Long l = new Long(\"1506524856000\");\r\n            for (int i = 0; i < 100; i++) {\r\n                String s = \"DENY\" + \"\\t\" + \"TESTREDISSON\" + \"\\t\"\r\n                        + Long.valueOf(l) + \"\\t\" + \"helloworld_hongqin\";\r\n                idx2.add(s);\r\n                l = l + 1;\r\n            }\r\n\r\n            StringCodec codec = new StringCodec();\r\n            String max = \"'[DENY\" + \"\\t\" + \"TESTREDISSON\" + \"\\t\" + \"1506524856099'\";\r\n            String min = \"'[DENY\" + \"\\t\" + \"TESTREDISSON\" + \"\\t\" + \"1506524856000'\";\r\n             String luaScript1= \"local d = {}; d[1] = redis.call('zrevrangebylex','ABCD17436',\" +max+\",\"+min+\",'LIMIT',0,5); \";\r\n             luaScript1=  luaScript1 + \" d[2] = redis.call('zrevrangebylex','ABCD17436',\" +max+\",\"+min+\",'LIMIT',0,15); \";\r\n             luaScript1=  luaScript1 + \" d[3] = redis.call('zrevrangebylex','ABCD17436',\" +max+\",\"+min+\",'LIMIT',0,25); \";\r\n             luaScript1 = luaScript1 + \" return d;\";\r\n         \r\n            System.err.println(luaScript1);            \r\n      \r\n            Future<Object> r1 = redisson.getScript().evalAsync(Mode.READ_ONLY, codec,\r\n                    luaScript1,\r\n                    RScript.ReturnType.MULTI, Collections.emptyList());            \r\n            Object obj1 = r1.get(5000,TimeUnit.MILLISECONDS);\r\n", "url": "https://github.com/redisson/redisson/issues/1251", "user": "ajayrayapati", "labels": ["bug"], "created": "2018-01-20 00:20:12", "closed": "2018-01-23 08:43:12", "commits": {"1c4df641853ca3e8b5840105eb88197c9cf89888": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "1c4df641853ca3e8b5840105eb88197c9cf89888", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e37729deee165108b8e5261802692f03794e2b15"], "nameRev": "1c4df641853ca3e8b5840105eb88197c9cf89888 tags/redisson-2.11.0~14", "commitMessage": "Fixed - Wrong parsing of RScript.ReturnType.MULTI result. #1251\n", "commitDateTime": "2018-01-23 11:42:34", "authoredDateTime": "2018-01-23 11:42:34", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 34, "deletions": 12, "lines": 46}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/State.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/StateLevel.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "redisson/src/test/java/org/redisson/RedissonScriptTest.java", "insertions": 35, "deletions": 0, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 19, "UPD": 1, "INS": 8, "MOV": 8, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "TOT": 10, "UPD": 0, "INS": 4, "MOV": 6, "DEL": 0}]}, {"spoonFilePath": "State.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.State.getDecoderStateCopy()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.State.toString()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.State", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.State.setDecoderStateCopy(org.redisson.client.protocol.decoder.DecoderState)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.State.resetLevel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.State.getLastLevel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StateLevel.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.StateLevel", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.getLastListSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.setLastListSize(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.getLastList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.StateLevel.setLastList(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScriptTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScriptTest.testMulti()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1c4df641853ca3e8b5840105eb88197c9cf89888"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 59, "deletions": 21, "lines": 80, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 47, "UPD": 4, "INS": 20, "MOV": 17, "DEL": 6, "spoonFilesChanged": 3, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "org.redisson.client.handler.StateLevel.getLastList()", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "org.redisson.client.handler.State.getLastLevel()", "org.redisson.client.handler.State.toString()", "org.redisson.client.handler.StateLevel.setLastListSize(long)", "org.redisson.client.handler.StateLevel", "org.redisson.client.handler.State.resetLevel()", "org.redisson.client.handler.State", "org.redisson.client.handler.StateLevel.getLastListSize()", "org.redisson.client.handler.State.setDecoderStateCopy(org.redisson.client.protocol.decoder.DecoderState)", "org.redisson.client.handler.State.getDecoderStateCopy()", "org.redisson.client.handler.StateLevel.setLastList(java.util.List)"]}, {"title": "RLocalCachedMap.putAll gets stuck", "body": "", "url": "https://github.com/redisson/redisson/issues/1245", "user": "mrniko", "labels": ["bug"], "created": "2018-01-17 07:00:24", "closed": "2018-01-17 07:06:43", "commits": {"7ead223c93198f4cb0dd93c969631d25fd444eae": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7ead223c93198f4cb0dd93c969631d25fd444eae", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["67cebd0e0f649549f9c9d8fdd4089d64faaefe63"], "nameRev": "7ead223c93198f4cb0dd93c969631d25fd444eae tags/redisson-2.11.0~24", "commitMessage": "Fixed - RLocalCachedMap.putAll gets stuck.  #1245\n", "commitDateTime": "2018-01-17 10:03:29", "authoredDateTime": "2018-01-17 10:03:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 21, "deletions": 18, "lines": 39}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLocalCachedMapTest.java", "insertions": 8, "deletions": 14, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.putAllOperationAsync(java.util.Map)", "TOT": 20, "UPD": 3, "INS": 6, "MOV": 4, "DEL": 7}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.getAllAsync(java.util.Set)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllValuesAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllMapAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllEntrySetAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.putAllOperationAsync(java.util.Map).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllMapAsync().11.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllEntrySetAsync().12.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.addListeners(java.lang.String,org.redisson.api.LocalCachedMapOptions,org.redisson.api.RedissonClient).1.onSubscribe(java.lang.String).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLocalCachedMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMapTest.testBigData()", "TOT": 17, "UPD": 4, "INS": 0, "MOV": 11, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMapTest.testBigPutAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ead223c93198f4cb0dd93c969631d25fd444eae"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 18, "lines": 39, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 32, "UPD": 3, "INS": 14, "MOV": 4, "DEL": 11, "spoonFilesChanged": 1, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap.readAllEntrySetAsync()", "org.redisson.RedissonLocalCachedMap.putAllOperationAsync(java.util.Map)", "org.redisson.RedissonLocalCachedMap.readAllMapAsync().11.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLocalCachedMap.readAllMapAsync()", "org.redisson.RedissonLocalCachedMap.putAllOperationAsync(java.util.Map).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLocalCachedMap.readAllValuesAsync()", "org.redisson.RedissonLocalCachedMap.addListeners(java.lang.String,org.redisson.api.LocalCachedMapOptions,org.redisson.api.RedissonClient).1.onSubscribe(java.lang.String).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLocalCachedMap.getAllAsync(java.util.Set)", "org.redisson.RedissonLocalCachedMap.readAllEntrySetAsync().12.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": ".setDnsMonitoringInterval(-1) doesn't actually seem to be disabling DNS Monitoring", "body": "I'm using 3.5.7 and am getting intermittent \"Unable to resolve\" DNSMonitor exceptions, using AWS ElasticCache Cluster. Here's my createConfig() code:\r\n\r\n`protected org.redisson.config.Config createConfig() {\r\n\r\n   org.redisson.config.Config config = new org.redisson.config.Config();\r\n\r\n    List<String> prefixedServers = new ArrayList<>();\r\n\r\n    for (HostAndPort server : servers) prefixedServers.add(\"redis://\" + server.toString());\r\n\r\n    config.useReplicatedServers()\r\n            .setDnsMonitoringIterval(-1)\r\n            .addNodeAddress(\r\n                    prefixedServers.toArray(new String[prefixedServers.size()]));\r\n    return config;\r\n  }`\r\n\r\nI'm still getting the UnknownHostExceptions from DNSMonitor which suggests the monitoring is not being disabled. Is this a bug or am I missing something?\r\n\r\nJust an additional FYI, this is my initialization block: \r\n\r\n`private synchronized void initialize(){\r\n    if(!initialized){\r\n      Logger.debug(LOG_INITIALIZING_CACHE.getValue());\r\n      org.redisson.config.Config config = createConfig();\r\n      redisson = Redisson.create(config);\r\n      initialized = true;\r\n    } else {\r\n      Logger.debug(LOG_CACHE_ALREADY_INITIALIZED.getValue());\r\n    }\r\n  }`\r\n\r\n  ", "url": "https://github.com/redisson/redisson/issues/1221", "user": "daniel9x", "labels": ["bug"], "created": "2018-01-05 20:41:24", "closed": "2018-01-09 10:14:47", "commits": {"e2e3e283650b19f5c303229244126eb00fa5d99a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "e2e3e283650b19f5c303229244126eb00fa5d99a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["233dafc444f60851be398acd00cee587701c7c51"], "nameRev": "e2e3e283650b19f5c303229244126eb00fa5d99a tags/redisson-2.11.0~42", "commitMessage": "setDnsMonitoringInterval(-1) doesn't allow to disable DNS monitoring. #1221\n", "commitDateTime": "2018-01-09 10:14:22", "authoredDateTime": "2018-01-09 10:14:22", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e2e3e283650b19f5c303229244126eb00fa5d99a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.config.BaseMasterSlaveServersConfig)"]}, {"title": "ReadLock not working correctly", "body": "Hi,\r\n\r\nIs this the expected behaviour of the ReadLock from ReadWriteLock?\r\n\r\nClarifying because I did not encounter this in release 3.5.4\r\n\r\nThere are multiple threads that are trying to lock and unlock the readlock concurrently but I am encountering the \"attempt to unlock lock, not locked by current thread by node id\" exception.\r\n\r\nHere is a rough code sample to replicate the issue.\r\n```java\r\nExecutorService service;\r\nRReadWriteLock rwlock;\r\nRLock rlock = rwlock.readLock();\r\n\r\nfor (int i=0; i<10; i++) {\r\n  service.submit (() -> {\r\n    for (int j=0; j<1000; j++) {\r\n      rlock.lock();\r\n      try {\r\n      } finally {\r\n         try {\r\n           rlock.unlock();\r\n         } catch(Exception e) {\r\n            e.printStackTrace();\r\n         }\r\n      }\r\n    }\r\n  });\r\n}\r\n```\r\n\r\nThe unlock part throws the following exception even though they're all read locks.\r\n```java\r\njava.lang.IllegalMonitorStateException: attempt to unlock lock, not locked by current thread by node id: e3784ec0-94c6-4138-ac2a-1865eb79c93d thread-id: 21\r\n\tat org.redisson.RedissonLock.unlock(RedissonLock.java:367)\r\n\tat Main.lambda$0(Main.java:25)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n ```\r\n  \r\n  \r\n  \r\n  ", "url": "https://github.com/redisson/redisson/issues/1219", "user": "HansChua", "labels": ["bug"], "created": "2018-01-04 03:19:00", "closed": "2019-10-28 10:21:17", "commits": {"3db1c46c420181515d054b987c10968dd23640bf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 662.0002777777778, "commitsDetails": [{"commitHash": "3db1c46c420181515d054b987c10968dd23640bf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1c4df641853ca3e8b5840105eb88197c9cf89888"], "nameRev": "3db1c46c420181515d054b987c10968dd23640bf tags/redisson-2.11.0~13", "commitMessage": "Fixed - RedissonReadLock by name with colon couldn't be unlocked properly #1219\n", "commitDateTime": "2018-01-23 12:32:15", "authoredDateTime": "2018-01-23 12:32:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonReadLock.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReadWriteLockTest.java", "insertions": 40, "deletions": 2, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonReadLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadLock.unlockInnerAsync(long)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonReadWriteLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockLeaseTimeoutDiffThreadsWRR()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockLeaseTimeoutDiffThreadsRRW()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteReadReentrancy()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3db1c46c420181515d054b987c10968dd23640bf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonReadLock.unlockInnerAsync(long)"]}, {"title": "version 2.10.6, compiler target is 1.6+,but in class BaseRemoteService use Map's putifabsent method?", "body": "compiler target which defined in pom.xml is 1.6, but in source code such as [BaseRemoteService](https://github.com/redisson/redisson/blob/redisson-2.10.6/redisson/src/main/java/org/redisson/BaseRemoteService.java) still use Map's putifabsent method.\r\n\r\n``` protected List<String> getMethodSignatures(Method method) {\r\n        List<String> result = methodSignaturesCache.get(method);\r\n        if (result == null) {\r\n            result = new ArrayList<String>(method.getParameterTypes().length);\r\n            for (Class<?> t : method.getParameterTypes()) {\r\n                result.add(t.getName());\r\n            }\r\n            List<String> oldList = methodSignaturesCache.putIfAbsent(method, result);\r\n            if (oldList != null) {\r\n                result = oldList;\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }```\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1209", "user": "haoziwlh", "labels": ["bug"], "created": "2017-12-26 08:55:43", "closed": "2018-01-04 15:06:12", "commits": {"d3b298940218d2d49b0dbf12cbc0fc6a3d0fbdb1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "d3b298940218d2d49b0dbf12cbc0fc6a3d0fbdb1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5e80baef84552d0fa5ef01218def55281905970e"], "nameRev": "d3b298940218d2d49b0dbf12cbc0fc6a3d0fbdb1 tags/redisson-2.11.0~54", "commitMessage": "JDK 1.6+ compatibility fixed. #1209\n", "commitDateTime": "2018-01-04 18:11:07", "authoredDateTime": "2018-01-04 18:11:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d3b298940218d2d49b0dbf12cbc0fc6a3d0fbdb1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.BaseRemoteService"]}, {"title": "MapCache listener not working on cross-plateform environment", "body": "Hello,\r\n\r\nI've encountered a bizarre bug when using MapCache listeners between windows and linux.\r\nMy setup:\r\nredisson 3.5.6\r\nredis 3.2.11 on ubuntu 16.04\r\n\r\n`Config config = new Config();\r\n    config.useSingleServer().setAddress(\"redis://************:6379\");\r\n    RedissonClient redisson = Redisson.create(config);\r\n    \r\n    RMapCache<String, Integer> mapCache = redisson.getMapCache(\"test\");\r\n    \r\n    mapCache.addListener((EntryCreatedListener) event -> System.out.println(\"onCreated(\" + event.getKey() + \", \" + event.getValue() + \")\"));\r\n    mapCache.addListener((EntryUpdatedListener) event -> System.out.println(\"onUpdated(\" + event.getKey() + \", \" + event.getValue() + \")\"));\r\n    mapCache.addListener((EntryRemovedListener) event -> System.out.println(\"onCreated(\" + event.getKey() + \", \" + event.getValue() + \")\"));\r\n    mapCache.addListener((EntryExpiredListener) event -> System.out.println(\"onExpired(\" + event.getKey() + \", \" + event.getValue() + \")\"));\r\n    \r\n    // with ttl = 10 seconds\r\n    Integer prevValue = mapCache.put(\"1\", 10, 10, TimeUnit.SECONDS);\r\n    // ... the rest is exactly the same code as in the class MapCacheExamples found in the redisson-examples project\r\n`\r\n\r\nWhen running the test I've got the following errors:\r\n`[redisson-netty-1-4] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: com.fasterxml.jackson.core.JsonParseException: Illegal character ((CTRL-CHAR, code 0)): only regular white space (\\r, \\n, \\t) is allowed between tokens\r\n at [Source: io.netty.buffer.ByteBufInputStream@1fd104f3; line: 1, column: 2]\r\n`\r\n(cf. the attached file for all the callstack\r\n[exception.log.txt](https://github.com/redisson/redisson/files/1584870/exception.log.txt )\r\n\r\nThe code runs correctly when connecting to a redis server running on windows.\r\n\r\nThe error seems to come from the class **MapCacheEventCodec**:\r\n`    private Object decode(ByteBuf buf, State state, Decoder<?> decoder) throws IOException {\r\n        int keyLen;\r\n        if (PlatformDependent.isWindows()) {\r\n            keyLen = buf.readIntLE();\r\n        } else {\r\n            keyLen = (int) buf.readLongLE();\r\n        }\r\n        ByteBuf keyBuf = buf.readSlice(keyLen);\r\n        Object key = decoder.decode(keyBuf, state);\r\n        return key;\r\n    }`\r\nthe line **PlatformDependent.isWindows()** should not be made regarding to the jvm running environnement but regarding to the redis server.\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1205", "user": "ZongoForSpeed", "labels": ["bug"], "created": "2017-12-24 14:23:24", "closed": "2018-01-25 07:01:39", "commits": {"f3efba98f83d88187560910e3a3cebd121e9e555": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 31.00027777777778, "commitsDetails": [{"commitHash": "f3efba98f83d88187560910e3a3cebd121e9e555", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9882f72e69e35973d7e305c2b06cce401844952c"], "nameRev": "f3efba98f83d88187560910e3a3cebd121e9e555 tags/redisson-2.11.0~5", "commitMessage": "Fixed - MapCache listener not working on cross-platform environment. #1205 #1189\n", "commitDateTime": "2018-01-25 07:00:33", "authoredDateTime": "2018-01-25 07:00:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/codec/MapCacheEventCodec.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.removeListener(int)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonMapCache.addListener(org.redisson.api.map.event.MapEntryListener)", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapCacheEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State,org.redisson.client.protocol.Decoder)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Redisson remote services can't ack when running redis in cluster mode.", "body": "To reproduce this, on 3.5.6, I updated BaseTest.java and ran the tests against a clustered Redis server running  Windows 10 with Redis Version 3.2.100 64 bit version.  \r\n\r\nCompletion appears to work fine.  It's just the ack that is throwing an error.  If I set the options to noAck, I can get a result.\r\n\r\nAck does appear to work correctly if Redis is not in cluster mode.\r\n\r\nBaseTest Modification:\r\n\r\n    public static Config createConfig() {\r\n//        String redisAddress = System.getProperty(\"redisAddress\");\r\n//        if (redisAddress == null) {\r\n//            redisAddress = \"127.0.0.1:6379\";\r\n//        }\r\n        Config config = new Config();\r\n//        config.setCodec(new MsgPackJacksonCodec());\r\n//        config.useSentinelServers().setMasterName(\"mymaster\").addSentinelAddress(\"127.0.0.1:26379\", \"127.0.0.1:26389\");\r\n        config.useClusterServers().addNodeAddress(\"redis://127.0.0.1:7001\"); // uncommented this line\r\n//        config.useSingleServer()\r\n//                .setAddress(RedisRunner.getDefaultRedisServerBindAddressAndPort()); // commented this line\r\n//        .setPassword(\"mypass1\");\r\n//        config.useMasterSlaveConnection()\r\n//        .setMasterAddress(\"127.0.0.1:6379\")\r\n//        .addSlaveAddress(\"127.0.0.1:6399\")\r\n//        .addSlaveAddress(\"127.0.0.1:6389\");\r\n        return config;\r\n    }\r\n\r\nWhen I ran the RedissonRemoteServiceTest.java against the clustered server, I received many of these errors.\r\n\r\n[redisson-netty-9-5] ERROR org.redisson.RedissonRemoteService - Can't send ack for request: RemoteServiceRequest [requestId=eed729180d9ccae3c040bb76553410c1, methodName=voidMethod, signatures=[[java.lang.String, java.lang.Long]], args=[noResult, 100], options=RemoteInvocationOptions[ackTimeoutInMillis=1000, executionTimeoutInMillis=null], date=1513171997453]\r\norg.redisson.client.RedisException: CROSSSLOT Keys in request don't hash to the same slot. channel: [id: 0x22df13ac, L:/127.0.0.1:55263 - R:/127.0.0.1:7002] command: (EVAL), params: [if redis.call('setnx', KEYS[1], 1) == 1 then redis.call('pexpire', KEYS[1], ARGV[2]);redis.call('rpu..., 2, {redisson_rs:remote}:eed729180d9ccae3c040bb76553410c1:ack, {remote_response}:44c56d88-e906-48ca-9462-6de13664ef75, PooledUnsafeDirectByteBuf(ridx: 0, widx: 89, cap: 256), 1000]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:241)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:101)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n", "url": "https://github.com/redisson/redisson/issues/1191", "user": "bhoover10001", "labels": ["bug"], "created": "2017-12-13 13:45:22", "closed": "2017-12-18 11:47:47", "commits": {"8a14faec43334e911b6c6dcf23bf933c48be23a8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "8a14faec43334e911b6c6dcf23bf933c48be23a8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["27ade052942420f7374e5a8fe1a7e7c95e338ae7"], "nameRev": "8a14faec43334e911b6c6dcf23bf933c48be23a8 tags/redisson-2.10.7~4", "commitMessage": "Fixed - Redisson remote services can't ack when running redis in cluster mode. #1191\n", "commitDateTime": "2017-12-18 14:53:00", "authoredDateTime": "2017-12-18 14:53:00", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 35, "deletions": 51, "lines": 86}, {"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 60, "deletions": 7, "lines": 67}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(boolean)", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 4}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.doCancel(boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).7.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.addAsync(java.lang.String,org.redisson.remote.RemoteServiceRequest,org.redisson.executor.RemotePromise)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,boolean,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,boolean,org.redisson.executor.RemotePromise)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 14, "UPD": 3, "INS": 5, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.addAsync(java.lang.String,org.redisson.remote.RemoteServiceRequest,org.redisson.executor.RemotePromise)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8a14faec43334e911b6c6dcf23bf933c48be23a8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 95, "deletions": 58, "lines": 153, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 55, "UPD": 6, "INS": 17, "MOV": 17, "DEL": 15, "spoonFilesChanged": 2, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.BaseRemoteService.addAsync(java.lang.String,org.redisson.remote.RemoteServiceRequest,org.redisson.executor.RemotePromise)", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(boolean)", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,boolean,org.redisson.executor.RemotePromise)", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).7.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.doCancel(boolean)", "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,boolean,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "org.redisson.RedissonRemoteService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "org.redisson.RedissonRemoteService.addAsync(java.lang.String,org.redisson.remote.RemoteServiceRequest,org.redisson.executor.RemotePromise)", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1", "org.redisson.BaseRemoteService.removeAsync(java.lang.String,org.redisson.remote.RequestId)"]}, {"title": "Redisson can not deserialize data on expiration event ", "body": "2017-12-12 14:42:32.691 DEBUG 2092 --- [isson-netty-4-6] o.redisson.command.CommandAsyncService   : acquired connection for command (EVAL) and params [if redis.call('setnx', KEYS[6], ARGV[4]) == 0 then return 0;end;redis.call('expire', KEYS[6], ARGV[3]); local expiredKeys1 = redis.call('zrangebyscore', KEYS[2], 0, ARGV[1], 'limit', 0, ARGV[2]); for i, key in ipairs(expiredKeys1) do local v = redis.call('hget', KEYS[1], key); if v ~= false then local t, val = struct.unpack('dLc0', v); local msg = struct.pack('Lc0Lc0', string.len(key), key, string.len(val), val); local listeners = redis.call('publish', KEYS[4], msg); if (listeners == 0) then break;end; end;end;if #expiredKeys1 > 0 then redis.call('zrem', KEYS[4], unpack(expiredKeys1)); redis.call('zrem', KEYS[3], unpack(expiredKeys1)); redis.call('zrem', KEYS[2], unpack(expiredKeys1)); redis.call('hdel', KEYS[1], unpack(expiredKeys1)); end; local expiredKeys2 = redis.call('zrangebyscore', KEYS[3], 0, ARGV[1], 'limit', 0, ARGV[2]); for i, key in ipairs(expiredKeys2) do local v = redis.call('hget', KEYS[1], key); if v ~= false then local t, val = struct.unpack('dLc0', v); local msg = struct.pack('Lc0Lc0', string.len(key), key, string.len(val), val); local listeners = redis.call('publish', KEYS[4], msg); if (listeners == 0) then break;end; end;end;if #expiredKeys2 > 0 then redis.call('zrem', KEYS[4], unpack(expiredKeys2)); redis.call('zrem', KEYS[3], unpack(expiredKeys2)); redis.call('zrem', KEYS[2], unpack(expiredKeys2)); redis.call('hdel', KEYS[1], unpack(expiredKeys2)); end; return #expiredKeys1 + #expiredKeys2;, 6, myMap, redisson__timeout__set:{myMap}, redisson__idle__set:{myMap}, redisson_map_cache_expired:{myMap}, redisson__map_cache__last_access__set:{myMap}, redisson__execute_task_once_latch:{myMap}, 1513089752691, 100, 5, 1] from slot NodeSource [slot=null, addr=null, redirect=null] using node memcache-0-slots/192.168.10.48:6379... RedisConnection@1478021281 [redisClient=[addr=memcache-0-slots/192.168.10.48:6379], channel=[id: 0x34bb60ae, L:/192.168.10.198:50957 - R:memcache-0-slots/192.168.10.48:6379]]\r\n2017-12-12 14:42:32.693 TRACE 2092 --- [isson-netty-4-6] o.r.client.handler.CommandEncoder        : channel: [id: 0x34bb60ae, L:/192.168.10.198:50957 - R:memcache-0-slots/192.168.10.48:6379] message: *13\r\n$4\r\nEVAL\r\n$1435\r\nif redis.call('setnx', KEYS[6], ARGV[4]) == 0 then return 0;end;redis.call('expire', KEYS[6], ARGV[3]); local expiredKeys1 = redis.call('zrangebyscore', KEYS[2], 0, ARGV[1], 'limit', 0, ARGV[2]); for i, key in ipairs(expiredKeys1) do local v = redis.call('hget', KEYS[1], key); if v ~= false then local t, val = struct.unpack('dLc0', v); local msg = struct.pack('Lc0Lc0', string.len(key), key, string.len(val), val); local listeners = redis.call('publish', KEYS[4], msg); if (listeners == 0) then break;end; end;end;if #expiredKeys1 > 0 then redis.call('zrem', KEYS[4], unpack(expiredKeys1)); redis.call('zrem', KEYS[3], unpack(expiredKeys1)); redis.call('zrem', KEYS[2], unpack(expiredKeys1)); redis.call('hdel', KEYS[1], unpack(expiredKeys1)); end; local expiredKeys2 = redis.call('zrangebyscore', KEYS[3], 0, ARGV[1], 'limit', 0, ARGV[2]); for i, key in ipairs(expiredKeys2) do local v = redis.call('hget', KEYS[1], key); if v ~= false then local t, val = struct.unpack('dLc0', v); local msg = struct.pack('Lc0Lc0', string.len(key), key, string.len(val), val); local listeners = redis.call('publish', KEYS[4], msg); if (listeners == 0) then break;end; end;end;if #expiredKeys2 > 0 then redis.call('zrem', KEYS[4], unpack(expiredKeys2)); redis.call('zrem', KEYS[3], unpack(expiredKeys2)); redis.call('zrem', KEYS[2], unpack(expiredKeys2)); redis.call('hdel', KEYS[1], unpack(expiredKeys2)); end; return #expiredKeys1 + #expiredKeys2;\r\n$1\r\n6\r\n$5\r\nmyMap\r\n$30\r\nredisson__timeout__set:{myMap}\r\n$27\r\nredisson__idle__set:{myMap}\r\n$34\r\nredisson_map_cache_expired:{myMap}\r\n$45\r\nredisson__map_cache__last_access__set:{myMap}\r\n$41\r\nredisson__execute_task_once_latch:{myMap}\r\n$13\r\n1513089752691\r\n$3\r\n100\r\n$1\r\n5\r\n$1\r\n1\r\n\r\n2017-12-12 14:42:32.695 TRACE 2092 --- [isson-netty-4-6] o.r.client.handler.CommandDecoder        : channel: [id: 0x34bb60ae, L:/192.168.10.198:50957 - R:memcache-0-slots/192.168.10.48:6379] message: :1\r\n\r\n2017-12-12 14:42:32.695 TRACE 2092 --- [isson-netty-4-7] o.r.client.handler.CommandPubSubDecoder  : channel: [id: 0xcc31d152, L:/192.168.10.198:50953 - R:memcache-0-slots/192.168.10.48:6379] message: *3\r\n$7\r\nmessage\r\n$34\r\nredisson_map_cache_expired:{myMap}\r\n$28\r\n\u0006       \"key1\"\u0006       \"val1\"\r\n\r\n2017-12-12 14:42:32.696 DEBUG 2092 --- [isson-netty-4-6] o.redisson.command.CommandAsyncService   : connection released for command (EVAL) and params [if redis.call('setnx', KEYS[6], ARGV[4]) == 0 then return 0;end;redis.call('expire', KEYS[6], ARGV[3]); local expiredKeys1 = redis.call('zrangebyscore', KEYS[2], 0, ARGV[1], 'limit', 0, ARGV[2]); for i, key in ipairs(expiredKeys1) do local v = redis.call('hget', KEYS[1], key); if v ~= false then local t, val = struct.unpack('dLc0', v); local msg = struct.pack('Lc0Lc0', string.len(key), key, string.len(val), val); local listeners = redis.call('publish', KEYS[4], msg); if (listeners == 0) then break;end; end;end;if #expiredKeys1 > 0 then redis.call('zrem', KEYS[4], unpack(expiredKeys1)); redis.call('zrem', KEYS[3], unpack(expiredKeys1)); redis.call('zrem', KEYS[2], unpack(expiredKeys1)); redis.call('hdel', KEYS[1], unpack(expiredKeys1)); end; local expiredKeys2 = redis.call('zrangebyscore', KEYS[3], 0, ARGV[1], 'limit', 0, ARGV[2]); for i, key in ipairs(expiredKeys2) do local v = redis.call('hget', KEYS[1], key); if v ~= false then local t, val = struct.unpack('dLc0', v); local msg = struct.pack('Lc0Lc0', string.len(key), key, string.len(val), val); local listeners = redis.call('publish', KEYS[4], msg); if (listeners == 0) then break;end; end;end;if #expiredKeys2 > 0 then redis.call('zrem', KEYS[4], unpack(expiredKeys2)); redis.call('zrem', KEYS[3], unpack(expiredKeys2)); redis.call('zrem', KEYS[2], unpack(expiredKeys2)); redis.call('hdel', KEYS[1], unpack(expiredKeys2)); end; return #expiredKeys1 + #expiredKeys2;, 6, myMap, redisson__timeout__set:{myMap}, redisson__idle__set:{myMap}, redisson_map_cache_expired:{myMap}, redisson__map_cache__last_access__set:{myMap}, redisson__execute_task_once_latch:{myMap}, 1513089752691, 100, 5, 1] from slot NodeSource [slot=null, addr=null, redirect=null] using connection RedisConnection@1478021281 [redisClient=[addr=memcache-0-slots/192.168.10.48:6379], channel=[id: 0x34bb60ae, L:/192.168.10.198:50957 - R:memcache-0-slots/192.168.10.48:6379]]\r\n2017-12-12 14:42:32.699  WARN 2092 --- [isson-netty-4-7] io.netty.channel.DefaultChannelPipeline  : An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\n\r\nio.netty.handler.codec.DecoderException: com.fasterxml.jackson.core.JsonParseException: Illegal character ((CTRL-CHAR, code 0)): only regular white space (\\r, \\n, \\t) is allowed between tokens\r\n at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 2]\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:422) ~[netty-codec-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) ~[netty-codec-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:138) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459) [netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) [netty-common-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) [netty-common-4.1.17.Final.jar:4.1.17.Final]\r\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_144]\r\nCaused by: com.fasterxml.jackson.core.JsonParseException: Illegal character ((CTRL-CHAR, code 0)): only regular white space (\\r, \\n, \\t) is allowed between tokens\r\n at [Source: (io.netty.buffer.ByteBufInputStream); line: 1, column: 2]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1798) ~[jackson-core-2.9.3.jar:2.9.3]\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:663) ~[jackson-core-2.9.3.jar:2.9.3]\r\n\tat com.fasterxml.jackson.core.base.ParserMinimalBase._throwInvalidSpace(ParserMinimalBase.java:614) ~[jackson-core-2.9.3.jar:2.9.3]\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd(ReaderBasedJsonParser.java:2350) ~[jackson-core-2.9.3.jar:2.9.3]\r\n\tat com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:646) ~[jackson-core-2.9.3.jar:2.9.3]\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4129) ~[jackson-databind-2.9.3.jar:2.9.3]\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3988) ~[jackson-databind-2.9.3.jar:2.9.3]\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3058) ~[jackson-databind-2.9.3.jar:2.9.3]\r\n\tat org.redisson.codec.JsonJacksonCodec$2.decode(JsonJacksonCodec.java:87) ~[redisson-3.5.6.jar:na]\r\n\tat org.redisson.codec.MapCacheEventCodec.decode(MapCacheEventCodec.java:102) ~[redisson-3.5.6.jar:na]\r\n\tat org.redisson.codec.MapCacheEventCodec.access$100(MapCacheEventCodec.java:35) ~[redisson-3.5.6.jar:na]\r\n\tat org.redisson.codec.MapCacheEventCodec$1.decode(MapCacheEventCodec.java:44) ~[redisson-3.5.6.jar:na]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:257) ~[redisson-3.5.6.jar:na]\r\n\tat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:287) ~[redisson-3.5.6.jar:na]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:276) ~[redisson-3.5.6.jar:na]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:93) ~[redisson-3.5.6.jar:na]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) ~[netty-codec-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367) ~[netty-codec-4.1.17.Final.jar:4.1.17.Final]\r\n\t... 28 common frames omitted", "url": "https://github.com/redisson/redisson/issues/1189", "user": "victor-tyrin", "labels": ["bug"], "created": "2017-12-12 14:45:26", "closed": "2018-01-25 07:01:20", "commits": {"f3efba98f83d88187560910e3a3cebd121e9e555": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "f3efba98f83d88187560910e3a3cebd121e9e555", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9882f72e69e35973d7e305c2b06cce401844952c"], "nameRev": "f3efba98f83d88187560910e3a3cebd121e9e555 tags/redisson-2.11.0~5", "commitMessage": "Fixed - MapCache listener not working on cross-platform environment. #1205 #1189\n", "commitDateTime": "2018-01-25 07:00:33", "authoredDateTime": "2018-01-25 07:00:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "redisson/src/main/java/org/redisson/codec/MapCacheEventCodec.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.removeListener(int)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonMapCache.addListener(org.redisson.api.map.event.MapEntryListener)", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapCacheEventCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.MapCacheEventCodec.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State,org.redisson.client.protocol.Decoder)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.MapCacheEventCodec", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DNSMonitor fails on bootstrap with custom event loop", "body": "redisson 3.5.6 fails on bootstrap when using custom event loop.\r\n\r\n```java\r\n    private RedissonClient createRedissonClient(int database) {\r\n        Config config = new Config();\r\n        if (redisNodes.indexOf(',') > -1) {\r\n            ReplicatedServersConfig clusterConfig = config.useReplicatedServers();\r\n            clusterConfig.setScanInterval(3000);\r\n            clusterConfig.setDatabase(database);\r\n            clusterConfig.setTcpNoDelay(true);\r\n            clusterConfig.setKeepAlive(true);\r\n            for (String addr : StringUtils.tokenizeToStringArray(redisNodes, \",\", true, true)) {\r\n                clusterConfig.addNodeAddress(addSchema(addr));\r\n            }\r\n            clusterConfig.setTimeout(8000);\r\n            if (database == redisGameDatabase) {\r\n                clusterConfig.setReadMode(ReadMode.MASTER); // consistency is crucial\r\n            } else {\r\n                clusterConfig.setReadMode(ReadMode.MASTER_SLAVE); // consider setting SLAVE when we have multiple slaves\r\n            }\r\n        } else {\r\n            SingleServerConfig singleServerConfig = config.useSingleServer();\r\n            singleServerConfig.setDatabase(database);\r\n            singleServerConfig.setTimeout(8000);\r\n            singleServerConfig.setTcpNoDelay(true);\r\n            singleServerConfig.setKeepAlive(true);\r\n            singleServerConfig.setAddress(addSchema(redisNodes));\r\n        }\r\n        config.setCodec(new SnappyCodec());\r\n        config.setThreads(redisEventLoop.getThreadPoolSize());\r\n        config.setEventLoopGroup(redisEventLoop.getWorkerGroup());\r\n        config.setUseLinuxNativeEpoll(redisEventLoop.isNativeEpoll());\r\n\r\n        return Redisson.create(config);\r\n    }\r\n```\r\n\r\n```\r\nCaused by: java.lang.IllegalStateException: channel not registered to an event loop\r\n\tat io.netty.channel.AbstractChannel.eventLoop(AbstractChannel.java:162) ~[netty-transport-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.channel.nio.AbstractNioChannel.eventLoop(AbstractNioChannel.java:119) ~[netty-transport-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.channel.nio.AbstractNioChannel.eventLoop(AbstractNioChannel.java:49) ~[netty-transport-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:316) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:295) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:791) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.internalResolve(DnsNameResolverContext.java:200) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.doSearchDomainQuery(DnsNameResolverContext.java:189) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolverContext.resolve(DnsNameResolverContext.java:136) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolver.doResolveUncached(DnsNameResolver.java:657) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolver.doResolve(DnsNameResolver.java:594) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.DnsNameResolver.doResolve(DnsNameResolver.java:527) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.SimpleNameResolver.resolve(SimpleNameResolver.java:63) ~[netty-resolver-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.InflightNameResolver.resolve(InflightNameResolver.java:100) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.InflightNameResolver.resolve(InflightNameResolver.java:66) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.dns.InflightNameResolver.resolve(InflightNameResolver.java:51) ~[netty-resolver-dns-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.InetSocketAddressResolver.doResolve(InetSocketAddressResolver.java:57) ~[netty-resolver-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.InetSocketAddressResolver.doResolve(InetSocketAddressResolver.java:32) ~[netty-resolver-4.1.18.Final.jar:4.1.18.Final]\r\n\tat io.netty.resolver.AbstractAddressResolver.resolve(AbstractAddressResolver.java:108) ~[netty-resolver-4.1.18.Final.jar:4.1.18.Final]\r\n\tat org.redisson.connection.DNSMonitor.<init>(DNSMonitor.java:65) ~[redisson-3.5.6.jar:?]\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.initSingleEntry(MasterSlaveConnectionManager.java:288) ~[redisson-3.5.6.jar:?]\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.<init>(MasterSlaveConnectionManager.java:165) ~[redisson-3.5.6.jar:?]\r\n\tat org.redisson.connection.SingleConnectionManager.<init>(SingleConnectionManager.java:32) ~[redisson-3.5.6.jar:?]\r\n\tat org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:231) ~[redisson-3.5.6.jar:?]\r\n\tat org.redisson.Redisson.<init>(Redisson.java:117) ~[redisson-3.5.6.jar:?]\r\n\tat org.redisson.Redisson.create(Redisson.java:156) ~[redisson-3.5.6.jar:?]\r\n```", "url": "https://github.com/redisson/redisson/issues/1188", "user": "johnou", "labels": ["bug"], "created": "2017-12-11 15:58:49", "closed": "2017-12-12 07:24:28", "commits": {"9b5fb39a4bcd6bfd26754a9d827e7670805f8369": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9b5fb39a4bcd6bfd26754a9d827e7670805f8369", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["62dffc2bfda728348bfae3f48ea56b3665d787d0"], "nameRev": "9b5fb39a4bcd6bfd26754a9d827e7670805f8369 tags/redisson-2.10.7~11", "commitMessage": "Fixed - DNSMonitor fails on bootstrap with custom event loop. #1188\n", "commitDateTime": "2017-12-12 10:29:39", "authoredDateTime": "2017-12-12 10:29:39", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/DNSMonitor.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DNSMonitor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.DNSMonitor", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9b5fb39a4bcd6bfd26754a9d827e7670805f8369"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.DNSMonitor"]}, {"title": "Redisson not able to detect ip changes of active node in RLEC endpoint", "body": "We are currently using Redisson 3.5.0 to connect to our Redis labs enterprise cluster(RLEC). The driver is configured to connect using single server mode (as recommended for RLEC). When the active node ip switches/changes, Redisson is not able to reconnect with the new active node. It keeps retrying to communicate with the last known active node ip from the endpoint. This behavior is consistent with either \"dns monitoring\" being set to true / false.  If we manually set the same active node ip back, it immediately reconnects, which proves the point that its unaware of the ip address changes, unless the last known ip is elected again as active.\r\n\r\nHow do we enable Redisson to detect potential ip changes of active node, while using endpoint of RLEC in single server mode?\r\n\r\nPlease let me know if you have any ideas on this one. Thanks.", "url": "https://github.com/redisson/redisson/issues/1178", "user": "sindhuvaidy", "labels": ["bug"], "created": "2017-12-05 05:47:57", "closed": "2019-12-19 08:35:41", "commits": {"b9d9f87043677aa1524f211e42dbdd704d740ef3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "09b2724c44567035c8806bfe4a79bdf355c816b8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 744.0002777777778, "commitsDetails": [{"commitHash": "b9d9f87043677aa1524f211e42dbdd704d740ef3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ecd78802b21fa12ec7ca6ad6f127df2e6dbde558"], "nameRev": "b9d9f87043677aa1524f211e42dbdd704d740ef3 tags/redisson-2.10.7~8", "commitMessage": "Fixed - IP address renew process. #1178\n", "commitDateTime": "2017-12-14 14:41:16", "authoredDateTime": "2017-12-14 14:41:16", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedisClientResult.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/RedisNodes.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBaseMapIterator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/RedissonKeys.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMap.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultiMapIterator.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultimap.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSet.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetCache.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimapValues.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/ScanIterator.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 126, "deletions": 143, "lines": 269}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisClientConfig.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisRedirectException.java", "insertions": 1, "deletions": 5, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ListScanResult.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/MapScanResult.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 26, "deletions": 20, "lines": 46}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterPartition.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncExecutor.java", "insertions": 6, "deletions": 12, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 17, "deletions": 36, "lines": 53}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandReactiveExecutor.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandReactiveService.java", "insertions": 3, "deletions": 15, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandSyncExecutor.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandSyncService.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionEventsHub.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/{CountListener.java => CountableListener.java}", "insertions": 15, "deletions": 21, "lines": 36}, {"filePath": "redisson/src/main/java/org/redisson/connection/DNSMonitor.java", "insertions": 30, "deletions": 35, "lines": 65}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 55, "deletions": 26, "lines": 81}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 75, "deletions": 31, "lines": 106}, {"filePath": "redisson/src/main/java/org/redisson/connection/NodeSource.java", "insertions": 27, "deletions": 17, "lines": 44}, {"filePath": "redisson/src/main/java/org/redisson/connection/RedisClientEntry.java", "insertions": 15, "deletions": 15, "lines": 30}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/connection/SingleEntry.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 52, "deletions": 45, "lines": 97}, {"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/misc/URIBuilder.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/reactive/ReactiveIterator.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonMapCacheReactive.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonMapReactive.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonMapReactiveIterator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonScoredSortedSetReactive.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonSetCacheReactive.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonSetReactive.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/reactive/SetReactiveIterator.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "09b2724c44567035c8806bfe4a79bdf355c816b8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9b6b7ff1f287853ce090a8c3b55184c34c11e77b"], "nameRev": "09b2724c44567035c8806bfe4a79bdf355c816b8 tags/redisson-2.10.7~1", "commitMessage": "Fixed - IP address renew process. #1178\n", "commitDateTime": "2017-12-20 14:36:20", "authoredDateTime": "2017-12-20 14:36:20", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 18, "deletions": 9, "lines": 27}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisClientConfig.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/DNSMonitor.java", "insertions": 33, "deletions": 35, "lines": 68}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 44, "deletions": 45, "lines": 89}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 76, "deletions": 16, "lines": 92}, {"filePath": "redisson/src/main/java/org/redisson/connection/NodeSource.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 36, "deletions": 1, "lines": 37}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.resolveAddr()", "TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.toString()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.connect()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.connectPubSub()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisClientConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClientConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClientConfig.getAddr()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClientConfig.setAddress(java.net.InetAddress,java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getEntry(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DNSMonitor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.DNSMonitor", "TOT": 15, "UPD": 3, "INS": 3, "MOV": 5, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.DNSMonitor.monitorDnsChange().1.run().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 30, "UPD": 13, "INS": 6, "MOV": 9, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.DNSMonitor.monitorDnsChange().1.run().2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 23, "UPD": 12, "INS": 3, "MOV": 7, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.DNSMonitor.monitorDnsChange().1.run().2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.DNSMonitor.monitorDnsChange().1.run()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "TOT": 14, "UPD": 6, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource)", "TOT": 10, "UPD": 2, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "TOT": 39, "UPD": 8, "INS": 2, "MOV": 21, "DEL": 8}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.releaseSubscribeConnection(int,org.redisson.connection.PubSubConnectionEntry)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.releaseWrite(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.releaseRead(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initSingleEntry()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.api.NodeType,java.net.InetSocketAddress,java.net.URI,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.net.InetSocketAddress)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.net.URI)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(java.net.URI)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.client.RedisClient,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 12, "UPD": 2, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,boolean)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.URI,boolean,org.redisson.api.NodeType)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(java.net.InetSocketAddress,java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.hasSlave(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.InetSocketAddress,java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.InetSocketAddress,java.net.URI,boolean,org.redisson.api.NodeType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.InetSocketAddress,java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.setupMasterEntry(org.redisson.client.RedisClient)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(org.redisson.client.RedisClient,boolean,org.redisson.api.NodeType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.net.InetSocketAddress,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI,org.redisson.connection.ClientConnectionsEntry,org.redisson.api.RFuture).9.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI).9.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "NodeSource.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.NodeSource.toString()", "TOT": 8, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.unfreeze(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.unfreeze(java.net.InetSocketAddress,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.freeze(java.net.InetSocketAddress,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.contains(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.getEntry(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.unfreeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.checkForReconnect(org.redisson.connection.ClientConnectionsEntry,java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b9d9f87043677aa1524f211e42dbdd704d740ef3"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 570, "deletions": 531, "lines": 1101, "gitFilesChange": 50}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client", "redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/reactive", "redisson/src/main/java/org/redisson/connection/balancer", "redisson/src/main/java/org/redisson/cluster", "redisson/src/main/java/org/redisson/client/protocol/decoder", "redisson/src/main/java/org/redisson/client/handler", "redisson/src/main/java/org/redisson/jcache", "redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": []}, {"title": "RedissonRedLock issue", "body": "\u4f60\u597d\uff0c\r\n\u5728\u4f7f\u7528RedissonRedLock\u53d1\u73b0\u4e86\u4e00\u4e2a\u7591\u4f3cbug\u7684\u95ee\u9898\u3002\r\n\r\n\u9996\u5148\uff0credlock\u7684\u7b97\u6cd5\u4e2d\u63d0\u5230\uff1a\r\n\r\n> \u5f53\u4e14\u4ec5\u5f53\u4ece\u5927\u591a\u6570\uff08\u8fd9\u91cc\u662f3\u4e2a\u8282\u70b9\uff09\u7684Redis\u8282\u70b9\u90fd\u53d6\u5230\u9501\uff0c\u5e76\u4e14\u4f7f\u7528\u7684\u65f6\u95f4\u5c0f\u4e8e\u9501\u5931\u6548\u65f6\u95f4\u65f6\uff0c\u9501\u624d\u7b97\u83b7\u53d6\u6210\u529f\u3002\r\n\r\n\u4f46\u662fRedissonRedLock\u5b9e\u9645\u4f7f\u7528\u4e2d\u7684\u884c\u4e3a\u4e0e\u4e0a\u9762\u4e0d\u4e00\u81f4\u3002\r\n\u5c06RedissonRedLockTest\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8btestLockSuccess\u4fee\u6539\u4e3a\u5982\u4e0b\uff1a\r\n\r\n        RLock lock1 = client1.getLock(\"lock1\");\r\n        RLock lock2 = client1.getLock(\"lock2\");\r\n        RLock lock3 = client2.getLock(\"lock3\");\r\n        \r\n        Thread t1 = new Thread() {\r\n            public void run() {\r\n                lock1.lock();\r\n            }\r\n        };\r\n        t1.start();\r\n        t1.join();\r\n\r\n        RedissonMultiLock lock = new RedissonRedLock(lock1, lock2, lock3);\r\n        assertThat(lock.tryLock(500, 5000, TimeUnit.MILLISECONDS)).isTrue();\r\n        lock.unlock();\r\n\r\n        lock1.delete();\r\n\r\n\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684assert\u53ea\u5728lock3\u88ab\u9501\u4f4f\u7684\u65f6\u5019\u80fd\u901a\u8fc7\uff0clock1\u6216\u8005lock2\u88ab\u9501\u4f4f\u65f6\u90fdassert\u5931\u8d25\u3002\r\n\r\n\u8fd9\u4e2a\u95ee\u9898\u5728\u8c03\u7528`public boolean tryLock()`\u65b9\u6cd5\u65f6\u5219\u4e0d\u4f1a\u51fa\u73b0\u3002\r\n\r\n\u67e5\u770b\u4e86\u6e90\u7801\u4ee5\u540e\u53d1\u73b0\uff0c\u51fa\u73b0\u4e0a\u8ff0\u73b0\u8c61\u7684\u539f\u56e0\u662f\uff0c\u5728\u83b7\u53d6\u5df2\u7ecf\u88ab\u9501\u4f4f\u7684lock1\u6216\u8005lock2\u65f6\uff0cwaitTime\u4e0eRedLock\u7684waitTime\u662f\u4e00\u6837\u7684\uff08\u4ee3\u7801\u5728[RedissonMultiLock](https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/RedissonMultiLock.java#L152)\uff09\u3002\u6240\u4ee5\u53ea\u8981lock1\u6216\u8005lock2\u83b7\u53d6\u8d85\u65f6\uff0cRedLock\u5c31\u83b7\u53d6\u8d85\u65f6\u8fd4\u56defalse\u4e86\u3002\r\n\r\n\u800credlock\u7684\u7b97\u6cd5\u4e2d\u63d0\u5230\uff1a\r\n\r\n> \u5982\u679c\u670d\u52a1\u5668\u7aef\u6ca1\u6709\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u54cd\u5e94\uff0c\u5ba2\u6237\u7aef\u5e94\u8be5\u5c3d\u5feb\u5c1d\u8bd5\u53e6\u5916\u4e00\u4e2aRedis\u5b9e\u4f8b\u3002\r\n\r\n\u8bf7\u5e2e\u5fd9\u770b\u4e0b\u8fd9\u4e2a\u95ee\u9898\u8be5\u5982\u4f55\u89e3\u51b3\u3002\u8c22\u8c22\u3002\r\n\r\n\u53c2\u8003\u8d44\u6599\uff1a[Redlock\u7b97\u6cd5](http://redis.cn/topics/distlock.html)", "url": "https://github.com/redisson/redisson/issues/1175", "user": "JackEggie", "labels": ["bug"], "created": "2017-12-04 07:59:23", "closed": "2018-01-29 11:22:57", "commits": {"b4cc6f994149a5072a18ed94b65a7a99ec4fe76a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "27ade052942420f7374e5a8fe1a7e7c95e338ae7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 56.000277777777775, "commitsDetails": [{"commitHash": "b4cc6f994149a5072a18ed94b65a7a99ec4fe76a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b9d9f87043677aa1524f211e42dbdd704d740ef3"], "nameRev": "b4cc6f994149a5072a18ed94b65a7a99ec4fe76a tags/redisson-2.10.7~7", "commitMessage": "Fixed - RedissonRedLock couldn't be locked in some cases. #1175\n", "commitDateTime": "2017-12-14 18:03:45", "authoredDateTime": "2017-12-14 18:03:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMultiLock.java", "insertions": 13, "deletions": 7, "lines": 20}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRedLockTest.java", "insertions": 14, "deletions": 8, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMultiLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultiLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "TOT": 8, "UPD": 1, "INS": 4, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonMultiLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMultiLock.calcLockWaitTime(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRedLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRedLockTest.testLockSuccess()", "TOT": 29, "UPD": 1, "INS": 1, "MOV": 26, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.testLockSuccess().3.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRedLockTest.testLock(org.redisson.api.RLock,org.redisson.api.RLock,org.redisson.api.RLock,org.redisson.api.RLock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "27ade052942420f7374e5a8fe1a7e7c95e338ae7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3c63cbbd42feb3e4735b9b82326afea8211cb154"], "nameRev": "27ade052942420f7374e5a8fe1a7e7c95e338ae7 tags/redisson-2.10.7~5", "commitMessage": "RedissonRedLock couldn't be locked in some cases. #1175\n", "commitDateTime": "2017-12-15 13:06:35", "authoredDateTime": "2017-12-15 13:06:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonRedLock.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRedLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRedLock.calcLockWaitTime(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b4cc6f994149a5072a18ed94b65a7a99ec4fe76a", "27ade052942420f7374e5a8fe1a7e7c95e338ae7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 18, "deletions": 7, "lines": 25, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 17, "UPD": 3, "INS": 8, "MOV": 1, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMultiLock.calcLockWaitTime(long)", "org.redisson.RedissonMultiLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonMultiLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonRedLock.calcLockWaitTime(long)"]}, {"title": "Redisson RScript eval codec is not honored", "body": "Version: 3.5.5, code:\r\n\r\n    c.getScript().eval(RScript.Mode.READ_WRITE,\r\n                    new JsonJacksonCodec(),\r\n                    \"return redis.call('SET', KEYS[1], ARGV[1]);\",\r\n                    RScript.ReturnType.BOOLEAN,\r\n                    ImmutableList.of(\"test\"), \"x\");\r\n\r\nCommand executed:\r\n\r\n    \"EVAL\" \"return redis.call('SET', KEYS[1], ARGV[1]);\" \"1\" \"test\" \"x\"\r\n\r\nExpected result: values and/or keys encoded with json codec", "url": "https://github.com/redisson/redisson/issues/1172", "user": "valodzka", "labels": ["bug"], "created": "2017-11-30 15:12:01", "closed": "2017-12-07 10:29:14", "commits": {"2ed066355cac2ccb9f0f1364ef25d5b62fcb1d9b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "2ed066355cac2ccb9f0f1364ef25d5b62fcb1d9b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a98118221ff2270cf29fc320c505da0cbe8a554a"], "nameRev": "2ed066355cac2ccb9f0f1364ef25d5b62fcb1d9b tags/redisson-2.10.6~5", "commitMessage": "Script encoding fixed. #1172\n", "commitDateTime": "2017-12-07 13:34:13", "authoredDateTime": "2017-12-07 13:34:13", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonScript.java", "insertions": 33, "deletions": 4, "lines": 37}, {"filePath": "redisson/src/test/java/org/redisson/RedissonScriptTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonScript.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScript.encode(java.util.Collection,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScript.encode(java.lang.Object,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScript.evalAsync(java.lang.String,org.redisson.Mode,org.redisson.client.codec.Codec,java.lang.String,org.redisson.ReturnType,java.util.List,java.lang.Object[])", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScript.evalShaAsync(java.lang.String,org.redisson.Mode,org.redisson.client.codec.Codec,java.lang.String,org.redisson.ReturnType,java.util.List,java.lang.Object[])", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "RedissonScriptTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScriptTest.testScriptEncoding()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2ed066355cac2ccb9f0f1364ef25d5b62fcb1d9b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 33, "deletions": 4, "lines": 37, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 12, "UPD": 0, "INS": 6, "MOV": 6, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonScript.evalShaAsync(java.lang.String,org.redisson.Mode,org.redisson.client.codec.Codec,java.lang.String,org.redisson.ReturnType,java.util.List,java.lang.Object[])", "org.redisson.RedissonScript.encode(java.lang.Object,org.redisson.client.codec.Codec)", "org.redisson.RedissonScript.encode(java.util.Collection,org.redisson.client.codec.Codec)", "org.redisson.RedissonScript.evalAsync(java.lang.String,org.redisson.Mode,org.redisson.client.codec.Codec,java.lang.String,org.redisson.ReturnType,java.util.List,java.lang.Object[])"]}, {"title": "MapLoader seems to hang if you try to check the same null key, more than once", "body": "It looks like the second time you try to get a key that was null through a map loader, the loader will simply hang.\r\n\r\nI was able to reproduce this in RedissonMapCacheTest.java with the following code\r\n\r\n    @Test\r\n    public void testMapLoaderGetMulipleNulls() {\r\n        Map<String, String> cache = new HashMap<String, String>();\r\n        cache.put(\"1\", \"11\");\r\n        cache.put(\"2\", \"22\");\r\n        cache.put(\"3\", \"33\");\r\n        \r\n        RMap<String, String> map = getLoaderTestMap(\"test\", cache);\r\n        assertThat(map.get(\"0\")).isNull();\r\n        assertThat(map.get(\"1\")).isEqualTo(\"11\");\r\n        assertThat(map.get(\"0\")).isNull(); // This line will never return anything and the test will hang\r\n    }\r\n\r\n    // This code will work fine, because the keys without values are different.\r\n    @Test\r\n    public void testMapLoaderGetMulipleNullsDifferentKeys() {\r\n        Map<String, String> cache = new HashMap<String, String>();\r\n        cache.put(\"1\", \"11\");\r\n        cache.put(\"2\", \"22\");\r\n        cache.put(\"3\", \"33\");\r\n        \r\n        RMap<String, String> map = getLoaderTestMap(\"test\", cache);\r\n        assertThat(map.get(\"0\")).isNull();\r\n        assertThat(map.get(\"1\")).isEqualTo(\"11\");\r\n        assertThat(map.get(\"-1\")).isNull(); \r\n    }\r\n\r\nI'm running Windows 10 with Redis Version 3.2.100 64 bit version.  This is happening on Redisson 3.5.5 and the current master branch.", "url": "https://github.com/redisson/redisson/issues/1170", "user": "bhoover10001", "labels": ["bug"], "created": "2017-11-29 21:04:07", "closed": "2017-11-30 09:34:50", "commits": {"a98118221ff2270cf29fc320c505da0cbe8a554a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a98118221ff2270cf29fc320c505da0cbe8a554a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["353f9aa24df14eaa6999c0b4527da8260543d670"], "nameRev": "a98118221ff2270cf29fc320c505da0cbe8a554a tags/redisson-2.10.6~6", "commitMessage": "Fixed MapLoader hangs if loaded value is null. #1170\n", "commitDateTime": "2017-11-30 12:39:52", "authoredDateTime": "2017-11-30 12:39:52", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/BaseMapTest.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.loadValue(java.lang.Object,org.redisson.misc.RPromise,org.redisson.api.RLock,long).19.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseMapTest.testMapLoaderGetMulipleNulls()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a98118221ff2270cf29fc320c505da0cbe8a554a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMap.loadValue(java.lang.Object,org.redisson.misc.RPromise,org.redisson.api.RLock,long).19.run()"]}, {"title": "OOM issue with RedissonExecutorService", "body": "Hi,\r\n\r\nWe are seeing out of memory when trying to use RedissonExecutorService. \r\nPlease find attached the file you can use to reproduce the issue.\r\nUsage:\r\nnohup java -Xmx512m -XX:MaxMetaspaceSize=80m -cp testredisscheduler-1.0-SNAPSHOT-jar-with-dependencies.jar com.test.redis.scheduler.TestRedisScheduler 120 10 10 > output.log &\r\n\r\nRunning it for about 20-30 min produces the issue.\r\n\r\n[final.zip](https://github.com/redisson/redisson/files/1493727/final.zip)\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/1158", "user": "yjain3326", "labels": ["bug"], "created": "2017-11-22 03:08:23", "closed": "2017-12-07 14:08:09", "commits": {"959cca4fe1461d80a9940caf398928281dd2e9d2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "156be4dab6c5e575733d6b5e1563197bca96233a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "4c8f966713b38a76bbbc7f21713c472bdd273678": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "353f9aa24df14eaa6999c0b4527da8260543d670": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "a5c26a13dca405b56138e6da4f4a0c36d8223346": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "959cca4fe1461d80a9940caf398928281dd2e9d2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["84f5629143586cfe9ec325916fb5f07e3512c2bb"], "nameRev": "959cca4fe1461d80a9940caf398928281dd2e9d2 tags/redisson-2.10.6~13", "commitMessage": "Fixed Out of memory problem during RedissonExecutorService usage. #1158\n", "commitDateTime": "2017-11-22 18:15:55", "authoredDateTime": "2017-11-22 18:15:55", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 53, "deletions": 24, "lines": 77}, {"filePath": "redisson/src/main/java/org/redisson/remote/ResponseEntry.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,java.lang.String)", "TOT": 16, "UPD": 3, "INS": 4, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry,java.lang.String).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 16, "UPD": 3, "INS": 2, "MOV": 9, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,java.lang.String).4.run()", "TOT": 10, "UPD": 3, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).6.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResponseEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.ResponseEntry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.remote.ResponseEntry.getTimeouts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "156be4dab6c5e575733d6b5e1563197bca96233a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["044ebebbf2a5992a1e8aa8b9e799ed31696fd673"], "nameRev": "156be4dab6c5e575733d6b5e1563197bca96233a tags/redisson-2.10.6~10", "commitMessage": "ExecutorService memory consumption optimization.  #1158\n", "commitDateTime": "2017-11-24 16:13:12", "authoredDateTime": "2017-11-24 16:13:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 11, "deletions": 9, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/remote/ResponseEntry.java", "insertions": 50, "deletions": 5, "lines": 55}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,java.lang.String)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry,java.lang.String).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,java.lang.String).4.run()", "TOT": 6, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ResponseEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.ResponseEntry.Key", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4c8f966713b38a76bbbc7f21713c472bdd273678", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8661de67f144b544f5cf93f583cca338081dd7ab"], "nameRev": "4c8f966713b38a76bbbc7f21713c472bdd273678 tags/redisson-2.10.6~8", "commitMessage": "Memory consumption reduced during scheduled tasks processing #1158\n", "commitDateTime": "2017-11-26 13:44:37", "authoredDateTime": "2017-11-26 13:44:37", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 78, "deletions": 67, "lines": 145}, {"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksService.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceRequest.java", "insertions": 0, "deletions": 5, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.getMethodSignatures(java.lang.reflect.Method)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class)", "TOT": 12, "UPD": 1, "INS": 1, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 16, "UPD": 6, "INS": 2, "MOV": 5, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.getCancelRequestMapName(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.getCancelResponseMapName(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.getResponseQueueName(java.lang.Class,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.getAckName(java.lang.Class,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.getRequestQueueName(java.lang.Class)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(boolean)", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(java.lang.Class,java.lang.String,org.redisson.remote.RemoteServiceRequest,boolean)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 5}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,java.lang.String).4.run()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry,java.lang.String).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).6.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String,java.lang.String).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,java.lang.String,org.redisson.remote.RemoteServiceRequest,boolean,java.lang.String,org.redisson.executor.RemotePromise)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.BaseRemoteService", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,org.redisson.remote.RemoteServiceRequest,boolean,org.redisson.executor.RemotePromise)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String).4.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteService.executeMethod(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService,org.redisson.remote.RemoteServiceRequest)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteService.executeMethod(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService,org.redisson.remote.RemoteServiceRequest).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "ScheduledTasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String).1.run()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksService.cancelExecutionAsync(java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.executor.TasksService.cancelExecutionAsync(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RemoteServiceRequest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.RemoteServiceRequest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "353f9aa24df14eaa6999c0b4527da8260543d670", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4c8f966713b38a76bbbc7f21713c472bdd273678"], "nameRev": "353f9aa24df14eaa6999c0b4527da8260543d670 tags/redisson-2.10.6~7", "commitMessage": "ScheduledFuture memory allocation optimization. #1158\n", "commitDateTime": "2017-11-30 12:10:29", "authoredDateTime": "2017-11-30 12:10:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 117, "deletions": 40, "lines": 157}, {"filePath": "redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/remote/ResponseEntry.java", "insertions": 26, "deletions": 9, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,java.lang.String,org.redisson.misc.RPromise).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String)", "TOT": 19, "UPD": 4, "INS": 0, "MOV": 12, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 20, "UPD": 8, "INS": 0, "MOV": 9, "DEL": 3}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).6.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String).4.run()", "TOT": 9, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,java.lang.String,org.redisson.misc.RPromise).8.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,org.redisson.remote.RemoteServiceRequest,boolean,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,org.redisson.api.RFuture).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String).8.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(java.lang.String,org.redisson.remote.RemoteServiceRequest,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,boolean).5.run()", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScheduledTasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture).1.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResponseEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.ResponseEntry", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.remote.ResponseEntry.getTimeouts()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.remote.ResponseEntry.getResponses()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.remote.ResponseEntry.Result", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a5c26a13dca405b56138e6da4f4a0c36d8223346", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6d39a91a551cacc46abdf80ad0be081f6ca775da"], "nameRev": "a5c26a13dca405b56138e6da4f4a0c36d8223346 tags/redisson-2.10.6~1", "commitMessage": "Scheduled tasks memory consumption reduced. #1158\n", "commitDateTime": "2017-12-07 17:11:08", "authoredDateTime": "2017-12-07 17:11:08", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 82, "deletions": 54, "lines": 136}, {"filePath": "redisson/src/main/java/org/redisson/RedissonExecutorService.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 84, "deletions": 61, "lines": 145}, {"filePath": "redisson/src/main/java/org/redisson/executor/RedissonExecutorFuture.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/executor/RedissonScheduledFuture.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/executor/RemotePromise.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java", "insertions": 22, "deletions": 16, "lines": 38}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksService.java", "insertions": 13, "deletions": 17, "lines": 30}, {"filePath": "redisson/src/main/java/org/redisson/remote/RequestId.java", "insertions": 84, "deletions": 0, "lines": 84}, {"filePath": "redisson/src/main/java/org/redisson/remote/ResponseEntry.java", "insertions": 2, "deletions": 49, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,org.redisson.api.RFuture)", "TOT": 13, "UPD": 3, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.generateRequestId()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.addAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest,org.redisson.executor.RemotePromise)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.removeAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,boolean)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,java.lang.String,org.redisson.misc.RPromise)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,org.redisson.remote.RemoteServiceRequest,boolean,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).7.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 8, "UPD": 3, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 9, "UPD": 3, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 10, "UPD": 3, "INS": 3, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(java.lang.String,org.redisson.remote.RemoteServiceRequest,boolean)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(boolean)", "TOT": 10, "UPD": 5, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,boolean).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,java.lang.String,boolean).5.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,org.redisson.api.RFuture).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.BaseRemoteService.getAckName(org.redisson.remote.RequestId)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.getParam(org.redisson.remote.RemoteServiceRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,java.lang.String,org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,boolean,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,org.redisson.remote.RequestId,org.redisson.misc.RPromise).9.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.api.RFuture).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.poll(long,org.redisson.remote.RequestId,boolean).5.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,java.lang.String,org.redisson.misc.RPromise).9.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonExecutorService.registerWorkers(int,java.util.concurrent.ExecutorService).1.pushTaskAsync()", "TOT": 11, "UPD": 8, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonExecutorService.cancelTask(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 16, "UPD": 4, "INS": 0, "MOV": 10, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteService.register(java.lang.Class,java.lang.Object,int,java.util.concurrent.ExecutorService)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonRemoteService.executeMethod(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService,org.redisson.remote.RemoteServiceRequest)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 9, "UPD": 0, "INS": 6, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonExecutorFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonExecutorFuture", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonExecutorFuture.getTaskId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonScheduledFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonScheduledFuture", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RedissonScheduledFuture.getTaskId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RemotePromise.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RemotePromise", "TOT": 6, "UPD": 2, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RemotePromise.getRequestId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.RemotePromise.getParam()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScheduledTasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.ScheduledTasksService", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.addAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.removeAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "TOT": 9, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.generateRequestId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.setRequestId(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture).1.run()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.getParam(org.redisson.remote.RemoteServiceRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.ScheduledTasksService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TasksRunnerService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksRunnerService.asyncScheduledServiceAtFixed(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TasksService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.TasksService.addAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest,org.redisson.executor.RemotePromise)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksService.addAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.executor.TasksService.removeAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "TOT": 12, "UPD": 8, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.TasksService.cancelExecutionAsync(java.lang.String)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.executor.TasksService.cancelExecutionAsync(org.redisson.remote.RequestId).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.executor.TasksService.cancelExecutionAsync(java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RequestId.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.RequestId", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResponseEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.ResponseEntry.Key", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["959cca4fe1461d80a9940caf398928281dd2e9d2", "156be4dab6c5e575733d6b5e1563197bca96233a", "4c8f966713b38a76bbbc7f21713c472bdd273678", "353f9aa24df14eaa6999c0b4527da8260543d670", "a5c26a13dca405b56138e6da4f4a0c36d8223346"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 5, "gitStatsSummary": {"insertions": 666, "deletions": 386, "lines": 1052, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 543, "UPD": 153, "INS": 132, "MOV": 139, "DEL": 119, "spoonFilesChanged": 12, "spoonMethodsChanged": 107}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/remote", "redisson/src/main/java/org/redisson/executor"], "changesInPackagesSPOON": ["org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry,java.lang.String).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.poll(long,java.lang.String,java.lang.String)", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.poll(long,java.lang.String,java.lang.String).4.run()", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).6.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "org.redisson.BaseRemoteService.poll(long,java.lang.String)", "org.redisson.BaseRemoteService.poll(long,java.lang.String).4.run()", "org.redisson.executor.TasksService.cancelExecutionAsync(java.lang.String)", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,org.redisson.api.RFuture).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonRemoteService.executeMethod(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService,org.redisson.remote.RemoteServiceRequest)", "org.redisson.BaseRemoteService.poll(long,java.lang.String,boolean).5.run()", "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.remote.ResponseEntry.getTimeouts()", "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture)", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(java.lang.String,org.redisson.remote.RemoteServiceRequest,boolean)", "org.redisson.executor.TasksService.cancelExecutionAsync(java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.poll(long,java.lang.String,boolean)", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,org.redisson.api.RFuture)", "org.redisson.remote.ResponseEntry", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(boolean)", "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture).1.run()", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.remote.ResponseEntry.Key", "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,org.redisson.remote.RemoteServiceRequest,boolean,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture)", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest)", "org.redisson.executor.ScheduledTasksService", "org.redisson.BaseRemoteService.getAckName(java.lang.Class,java.lang.String)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String,java.lang.String).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String).8.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.getCancelRequestMapName(java.lang.Class)", "org.redisson.executor.ScheduledTasksService.removeAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,boolean,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String).1.run()", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.api.RFuture).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry).5", "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,java.lang.String,org.redisson.misc.RPromise).8.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.executor.ScheduledTasksService.getParam(org.redisson.remote.RemoteServiceRequest)", "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String)", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class)", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,java.lang.String,org.redisson.api.RFuture)", "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String)", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).1.cancel(java.lang.Class,java.lang.String,org.redisson.remote.RemoteServiceRequest,boolean)", "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry,java.lang.String)", "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,org.redisson.remote.RemoteServiceRequest,boolean,org.redisson.executor.RemotePromise)", "org.redisson.BaseRemoteService", "org.redisson.executor.RemotePromise.getRequestId()", "org.redisson.remote.ResponseEntry.getResponses()", "org.redisson.remote.RequestId", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.getCancelResponseMapName(java.lang.Class)", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,org.redisson.api.RFuture).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.getAckName(org.redisson.remote.RequestId)", "org.redisson.BaseRemoteService.getRequestQueueName(java.lang.Class)", "org.redisson.executor.TasksService.cancelExecutionAsync(org.redisson.remote.RequestId).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonExecutorService.cancelTask(java.lang.String)", "org.redisson.executor.TasksService.addAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest,org.redisson.executor.RemotePromise)", "org.redisson.BaseRemoteService.poll(long,java.lang.String,boolean).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.poll(long,java.lang.String).4", "org.redisson.executor.ScheduledTasksService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.api.RFuture)", "org.redisson.BaseRemoteService.generateRequestId()", "org.redisson.RedissonRemoteService.register(java.lang.Class,java.lang.Object,int,java.util.concurrent.ExecutorService)", "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,java.lang.String,org.redisson.misc.RPromise).9.run(io.netty.util.Timeout)", "org.redisson.BaseRemoteService.poll(long,org.redisson.remote.RequestId,boolean).5.run()", "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,java.lang.String,org.redisson.misc.RPromise)", "org.redisson.executor.TasksRunnerService.asyncScheduledServiceAtFixed(java.lang.String,java.lang.String)", "org.redisson.BaseRemoteService.cancelExecution(org.redisson.api.RemoteInvocationOptions,java.lang.String,org.redisson.remote.RemoteServiceRequest,boolean,java.lang.String,org.redisson.executor.RemotePromise)", "org.redisson.executor.ScheduledTasksService.generateRequestId()", "org.redisson.executor.ScheduledTasksService.removeAsync(java.lang.String,org.redisson.remote.RequestId)", "org.redisson.BaseRemoteService.removeAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String,java.lang.String)", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService)", "org.redisson.executor.RedissonScheduledFuture.getTaskId()", "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).7.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "org.redisson.executor.RedissonScheduledFuture", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String).7", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry)", "org.redisson.executor.ScheduledTasksService.addAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,org.redisson.remote.RequestId,org.redisson.misc.RPromise).9.run(io.netty.util.Timeout)", "org.redisson.executor.RedissonExecutorFuture", "org.redisson.executor.TasksService.removeAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).6", "org.redisson.BaseRemoteService.scheduleCheck(java.lang.String,java.lang.String,org.redisson.misc.RPromise).8", "org.redisson.RedissonExecutorService.registerWorkers(int,java.util.concurrent.ExecutorService).1.pushTaskAsync()", "org.redisson.BaseRemoteService.awaitResultAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.executor.RemotePromise,org.redisson.remote.RemoteServiceRequest,java.lang.String,java.lang.String)", "org.redisson.BaseRemoteService.addAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest,org.redisson.executor.RemotePromise)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.executor.TasksService.addAsync(org.redisson.api.RBlockingQueue,org.redisson.remote.RemoteServiceRequest)", "org.redisson.executor.RemotePromise.getParam()", "org.redisson.remote.ResponseEntry.Result", "org.redisson.RedissonRemoteService.executeMethod(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService,org.redisson.remote.RemoteServiceRequest).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.remote.RemoteServiceRequest", "org.redisson.BaseRemoteService.getMethodSignatures(java.lang.reflect.Method)", "org.redisson.BaseRemoteService.getParam(org.redisson.remote.RemoteServiceRequest)", "org.redisson.BaseRemoteService.getResponseQueueName(java.lang.Class,java.lang.String)", "org.redisson.executor.ScheduledTasksService.setRequestId(java.lang.String)", "org.redisson.executor.RedissonExecutorFuture.getTaskId()", "org.redisson.executor.RemotePromise"]}, {"title": "user_script:1: bad argument #1 to 'len' (string expected, got boolean) ", "body": "I am using spring and redisson cache manager. Below is the issue I am running into. The thing is that if I manually cleared cache from redis-cli, the issue is gone. \r\n\r\norg.redisson.client.RedisException: ERR Error running script (call to f_f3b214e49c28f69ed888c0b1a1c0308d2676972d): @user_script:1: user_script:1: bad argument #1 to 'len' (string expected, got boolean) .  command: (EVAL), params: [local insertable = false; local value = redis.call('hget', KEYS[1], ARGV[5]); local t, val;if value ..., 8, EntityDataCache, redisson__timeout__set:{EntityDataCache}, redisson__idle__set:{EntityDataCache}, redisson_map_cache_created:{EntityDataCache}, redisson_map_cache_updated:{EntityDataCache}, redisson__map_cache__last_access__set:{EntityDataCache}, redisson_map_cache_removed:{EntityDataCache}, {EntityDataCache}:redisson_options, ...]\r\norg.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:243)\r\norg.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:103)\r\nio.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nio.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\nio.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nio.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nio.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nio.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nio.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nio.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1336)\r\nio.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1127)\r\nio.netty.handler.ssl.SslHandler.decode(SslHandler.java:1162)\r\nio.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\nio.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\nio.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nio.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\nio.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\nio.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\nio.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\r\nio.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\nio.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\r\nio.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\r\nio.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\r\nio.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\r\nio.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\nio.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\njava.lang.Thread.run(Thread.java:745)", "url": "https://github.com/redisson/redisson/issues/1152", "user": "wintersliu", "labels": ["bug"], "created": "2017-11-20 20:50:52", "closed": "2018-05-11 11:43:29", "commits": {"02d5b0ff4fa780e09074055a40f822f9f340a760": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 171.00027777777777, "commitsDetails": [{"commitHash": "02d5b0ff4fa780e09074055a40f822f9f340a760", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6786a22b943879306ba6d8816af6c67b76cc4185"], "nameRev": "02d5b0ff4fa780e09074055a40f822f9f340a760 tags/redisson-2.12.0~6", "commitMessage": "Fixed - bad argument #1 to 'len' (string expected, got boolean) #1152\n", "commitDateTime": "2018-05-11 16:36:48", "authoredDateTime": "2018-05-11 16:36:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 70, "deletions": 50, "lines": 120}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.putIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 20, "UPD": 18, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 23, "UPD": 21, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putIfAbsentOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 13, "UPD": 11, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.addAndGetOperationAsync(java.lang.Object,java.lang.Number)", "TOT": 11, "UPD": 9, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutOperationAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 21, "UPD": 19, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putOperationAsync(java.lang.Object,java.lang.Object,long,long,long)", "TOT": 25, "UPD": 23, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 24, "UPD": 22, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutIfAbsentOperationAsync(java.lang.Object,java.lang.Object)", "TOT": 42, "UPD": 40, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.fastPutIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 22, "UPD": 20, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.putAllOperationAsync(java.util.Map)", "TOT": 25, "UPD": 23, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "please help ", "body": "java.lang.NullPointerException\r\n        at org.redisson.tomcat.RedissonSession.save(RedissonSession.java:174)\r\n        at org.redisson.tomcat.RedissonSessionManager.createSession(RedissonSessionManager.java:116)\r\n        at org.apache.catalina.connector.Request.doGetSession(Request.java:2312)\r\n        at org.apache.catalina.connector.Request.getSession(Request.java:2075)\r\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:833)\r\n        at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:844)\r\n        at org.apache.jasper.runtime.PageContextImpl._initialize(PageContextImpl.java:146)\r\n        at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:124)\r\n        at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:107)\r\n        at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:63)\r\n        at org.apache.jsp.testRedis_jsp._jspService(testRedis_jsp.java:45)\r\n        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\r\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:374)\r\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:342)\r\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:267)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\r\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\r\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\r\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\r\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\r\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\r\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\r\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\r\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\r\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)\r\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\r\n        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)\r\n        at java.lang.Thread.run(Thread.java:662)\r\n\r\nredis\u642d\u5efa\u4e86\u96c6\u7fa4 3\u4e3b3\u4ece,\u7136\u540e\u9879\u76ee\u4f7f\u7528\u7684\u662fjdk1.6 tomcat6 \u5b8c\u5168\u6309\u7167\u6559\u7a0b\u7684\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528Tomcat Redis Session Manager\u7ba1\u7406session \u542f\u52a8tomcat\u4fe1\u606f:\r\n2017-11-18 21:35:11 org.apache.catalina.core.AprLifecycleListener init\r\n\u4fe1\u606f: The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: /home/jdk1.6.0_45/jre/lib/i386/server:/home/jdk1.6.0_45/jre/lib/i386:/home/jdk1.6.0_45/jre/../lib/i386:/usr/java/packages/lib/i386:/lib:/usr/lib\r\n2017-11-18 21:35:12 org.apache.coyote.http11.Http11Protocol init\r\n\u4fe1\u606f: Initializing Coyote HTTP/1.1 on http-8080\r\n2017-11-18 21:35:12 org.apache.catalina.startup.Catalina load\r\n\u4fe1\u606f: Initialization processed in 523 ms\r\n2017-11-18 21:35:12 org.apache.catalina.core.StandardService start\r\n\u4fe1\u606f: Starting service tomcat1\r\n2017-11-18 21:35:12 org.apache.catalina.core.StandardEngine start\r\n\u4fe1\u606f: Starting Servlet Engine: Apache Tomcat/6.0.18\r\n2017-11-18 21:35:12 com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector <clinit>\r\n\u8b66\u544a: Unable to load JDK7 annotation types; will have to skip\r\nWARNING: could not load Java7 Path class\r\n[main] INFO org.redisson.cluster.ClusterConnectionManager - Redis cluster nodes configuration got from /192.168.1.104:7000:\r\n9ede82afe626e38487b46edddbc3427bb6f05eac 192.168.1.104:7002 master - 0 1511012113124 3 connected 10923-16383\r\na58ca3c53d37fc1a909a8c5402da23b02d62b048 192.168.1.104:7005 slave 9ede82afe626e38487b46edddbc3427bb6f05eac 0 1511012111118 6 connected\r\n82fec9e38ec4e6ee633009cf5366408368ce497b 192.168.1.104:7003 slave 58360c20acaad16bfa651800390b9ec676db265f 0 1511012111619 4 connected\r\nea942df7f35c28e96154948f08ad214c522a2d32 192.168.1.104:7004 slave 6d4190de16cce92b47e6d38129ecf5723a7b07f3 0 1511012113124 5 connected\r\n6d4190de16cce92b47e6d38129ecf5723a7b07f3 192.168.1.104:7001 master - 0 1511012112120 2 connected 5461-10922\r\n58360c20acaad16bfa651800390b9ec676db265f 192.168.1.104:7000 myself,master - 0 0 1 connected 0-5460\r\n\r\n[redisson-netty-1-3] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7004] added for slot ranges: [[5461-10922]]\r\n[redisson-netty-1-2] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7003] added for slot ranges: [[0-5460]]\r\n[redisson-netty-1-4] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7005] added for slot ranges: [[10923-16383]]\r\n[redisson-netty-1-1] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7005\r\n[redisson-netty-1-1] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-1-3] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7001\r\n[redisson-netty-1-3] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7001 added for slot ranges: [[5461-10922]]\r\n[redisson-netty-1-3] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7000\r\n[redisson-netty-1-3] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7000 added for slot ranges: [[0-5460]]\r\n[redisson-netty-1-3] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7002\r\n[redisson-netty-1-3] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7002 added for slot ranges: [[10923-16383]]\r\n[redisson-netty-1-2] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-1-4] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-1-3] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-1-3] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7005\r\n[main] INFO org.redisson.cluster.ClusterConnectionManager - Redis cluster nodes configuration got from /192.168.1.104:7000:\r\n9ede82afe626e38487b46edddbc3427bb6f05eac 192.168.1.104:7002 master - 0 1511012113124 3 connected 10923-16383\r\na58ca3c53d37fc1a909a8c5402da23b02d62b048 192.168.1.104:7005 slave 9ede82afe626e38487b46edddbc3427bb6f05eac 0 1511012113625 6 connected\r\n82fec9e38ec4e6ee633009cf5366408368ce497b 192.168.1.104:7003 slave 58360c20acaad16bfa651800390b9ec676db265f 0 1511012111619 4 connected\r\nea942df7f35c28e96154948f08ad214c522a2d32 192.168.1.104:7004 slave 6d4190de16cce92b47e6d38129ecf5723a7b07f3 0 1511012113124 5 connected\r\n6d4190de16cce92b47e6d38129ecf5723a7b07f3 192.168.1.104:7001 master - 0 1511012112120 2 connected 5461-10922\r\n58360c20acaad16bfa651800390b9ec676db265f 192.168.1.104:7000 myself,master - 0 0 1 connected 0-5460\r\n\r\n[redisson-netty-5-2] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7003] added for slot ranges: [[0-5460]]\r\n[redisson-netty-5-3] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7004] added for slot ranges: [[5461-10922]]\r\n[redisson-netty-5-4] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7005] added for slot ranges: [[10923-16383]]\r\n[redisson-netty-5-3] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-5-2] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7005\r\n[redisson-netty-5-4] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7000\r\n[redisson-netty-5-4] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7000 added for slot ranges: [[0-5460]]\r\n[redisson-netty-5-4] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-5-3] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-5-2] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7001\r\n[redisson-netty-5-4] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7002\r\n[redisson-netty-5-4] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7002 added for slot ranges: [[10923-16383]]\r\n[redisson-netty-5-2] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7001 added for slot ranges: [[5461-10922]]\r\n[redisson-netty-5-1] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-5-4] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7005\r\n[main] INFO org.redisson.cluster.ClusterConnectionManager - Redis cluster nodes configuration got from /192.168.1.104:7000:\r\n9ede82afe626e38487b46edddbc3427bb6f05eac 192.168.1.104:7002 master - 0 1511012113124 3 connected 10923-16383\r\na58ca3c53d37fc1a909a8c5402da23b02d62b048 192.168.1.104:7005 slave 9ede82afe626e38487b46edddbc3427bb6f05eac 0 1511012113625 6 connected\r\n82fec9e38ec4e6ee633009cf5366408368ce497b 192.168.1.104:7003 slave 58360c20acaad16bfa651800390b9ec676db265f 0 1511012114127 4 connected\r\nea942df7f35c28e96154948f08ad214c522a2d32 192.168.1.104:7004 slave 6d4190de16cce92b47e6d38129ecf5723a7b07f3 0 1511012113124 5 connected\r\n6d4190de16cce92b47e6d38129ecf5723a7b07f3 192.168.1.104:7001 master - 0 1511012114127 2 connected 5461-10922\r\n58360c20acaad16bfa651800390b9ec676db265f 192.168.1.104:7000 myself,master - 0 0 1 connected 0-5460\r\n\r\n[redisson-netty-7-2] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7003] added for slot ranges: [[0-5460]]\r\n[redisson-netty-7-4] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7005] added for slot ranges: [[10923-16383]]\r\n[redisson-netty-7-3] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7004] added for slot ranges: [[5461-10922]]\r\n[redisson-netty-7-3] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-7-4] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7005\r\n[redisson-netty-7-3] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-7-3] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-7-4] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7000\r\n[redisson-netty-7-4] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7000 added for slot ranges: [[0-5460]]\r\n[redisson-netty-7-4] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7002\r\n[redisson-netty-7-3] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7001\r\n[redisson-netty-7-4] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7002 added for slot ranges: [[10923-16383]]\r\n[redisson-netty-7-3] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7001 added for slot ranges: [[5461-10922]]\r\n[redisson-netty-7-2] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-7-3] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7005\r\n[main] INFO org.redisson.cluster.ClusterConnectionManager - Redis cluster nodes configuration got from /192.168.1.104:7000:\r\n9ede82afe626e38487b46edddbc3427bb6f05eac 192.168.1.104:7002 master - 0 1511012113124 3 connected 10923-16383\r\na58ca3c53d37fc1a909a8c5402da23b02d62b048 192.168.1.104:7005 slave 9ede82afe626e38487b46edddbc3427bb6f05eac 0 1511012113625 6 connected\r\n82fec9e38ec4e6ee633009cf5366408368ce497b 192.168.1.104:7003 slave 58360c20acaad16bfa651800390b9ec676db265f 0 1511012114127 4 connected\r\nea942df7f35c28e96154948f08ad214c522a2d32 192.168.1.104:7004 slave 6d4190de16cce92b47e6d38129ecf5723a7b07f3 0 1511012113124 5 connected\r\n6d4190de16cce92b47e6d38129ecf5723a7b07f3 192.168.1.104:7001 master - 0 1511012114127 2 connected 5461-10922\r\n58360c20acaad16bfa651800390b9ec676db265f 192.168.1.104:7000 myself,master - 0 0 1 connected 0-5460\r\n\r\n[redisson-netty-9-2] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7003] added for slot ranges: [[0-5460]]\r\n[redisson-netty-9-2] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-9-3] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7004] added for slot ranges: [[5461-10922]]\r\n[redisson-netty-9-4] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7005] added for slot ranges: [[10923-16383]]\r\n[redisson-netty-9-2] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7005\r\n[redisson-netty-9-3] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7000\r\n[redisson-netty-9-4] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-9-3] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7000 added for slot ranges: [[0-5460]]\r\n[redisson-netty-9-3] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-9-4] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7002\r\n[redisson-netty-9-4] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7002 added for slot ranges: [[10923-16383]]\r\n[redisson-netty-9-3] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7001\r\n[redisson-netty-9-3] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7001 added for slot ranges: [[5461-10922]]\r\n[redisson-netty-9-3] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-9-3] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7005\r\n[main] INFO org.redisson.cluster.ClusterConnectionManager - Redis cluster nodes configuration got from /192.168.1.104:7000:\r\n9ede82afe626e38487b46edddbc3427bb6f05eac 192.168.1.104:7002 master - 0 1511012113124 3 connected 10923-16383\r\na58ca3c53d37fc1a909a8c5402da23b02d62b048 192.168.1.104:7005 slave 9ede82afe626e38487b46edddbc3427bb6f05eac 0 1511012113625 6 connected\r\n82fec9e38ec4e6ee633009cf5366408368ce497b 192.168.1.104:7003 slave 58360c20acaad16bfa651800390b9ec676db265f 0 1511012114127 4 connected\r\nea942df7f35c28e96154948f08ad214c522a2d32 192.168.1.104:7004 slave 6d4190de16cce92b47e6d38129ecf5723a7b07f3 0 1511012113124 5 connected\r\n6d4190de16cce92b47e6d38129ecf5723a7b07f3 192.168.1.104:7001 master - 0 1511012114127 2 connected 5461-10922\r\n58360c20acaad16bfa651800390b9ec676db265f 192.168.1.104:7000 myself,master - 0 0 1 connected 0-5460\r\n\r\n[main] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7003] added for slot ranges: [[0-5460]]\r\n[redisson-netty-11-3] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-11-4] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7004] added for slot ranges: [[5461-10922]]\r\n[redisson-netty-11-2] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-11-1] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7000\r\n[redisson-netty-11-4] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7001\r\n[redisson-netty-11-1] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7000 added for slot ranges: [[0-5460]]\r\n[redisson-netty-11-4] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7001 added for slot ranges: [[5461-10922]]\r\n[redisson-netty-11-4] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7005] added for slot ranges: [[10923-16383]]\r\n[redisson-netty-11-2] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7005\r\n[redisson-netty-11-4] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-11-1] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-11-4] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7002\r\n[redisson-netty-11-4] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7002 added for slot ranges: [[10923-16383]]\r\n[redisson-netty-11-1] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7005\r\n[main] INFO org.redisson.cluster.ClusterConnectionManager - Redis cluster nodes configuration got from /192.168.1.104:7000:\r\n9ede82afe626e38487b46edddbc3427bb6f05eac 192.168.1.104:7002 master - 0 1511012113124 3 connected 10923-16383\r\na58ca3c53d37fc1a909a8c5402da23b02d62b048 192.168.1.104:7005 slave 9ede82afe626e38487b46edddbc3427bb6f05eac 0 1511012113625 6 connected\r\n82fec9e38ec4e6ee633009cf5366408368ce497b 192.168.1.104:7003 slave 58360c20acaad16bfa651800390b9ec676db265f 0 1511012114127 4 connected\r\nea942df7f35c28e96154948f08ad214c522a2d32 192.168.1.104:7004 slave 6d4190de16cce92b47e6d38129ecf5723a7b07f3 0 1511012113124 5 connected\r\n6d4190de16cce92b47e6d38129ecf5723a7b07f3 192.168.1.104:7001 master - 0 1511012114127 2 connected 5461-10922\r\n58360c20acaad16bfa651800390b9ec676db265f 192.168.1.104:7000 myself,master - 0 0 1 connected 0-5460\r\n\r\n[redisson-netty-13-4] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-13-4] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7004] added for slot ranges: [[5461-10922]]\r\n[redisson-netty-13-2] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7003] added for slot ranges: [[0-5460]]\r\n[redisson-netty-13-4] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-13-1] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7001\r\n[redisson-netty-13-1] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7001 added for slot ranges: [[5461-10922]]\r\n[redisson-netty-13-4] INFO org.redisson.cluster.ClusterConnectionManager - slaves: [redis://192.168.1.104:7005] added for slot ranges: [[10923-16383]]\r\n[redisson-netty-13-4] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7004\r\n[redisson-netty-13-3] INFO org.redisson.connection.pool.PubSubConnectionPool - 1 connections initialized for /192.168.1.104:7005\r\n[redisson-netty-13-4] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7000\r\n[redisson-netty-13-4] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7000 added for slot ranges: [[0-5460]]\r\n[redisson-netty-13-1] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /192.168.1.104:7002\r\n[redisson-netty-13-1] INFO org.redisson.cluster.ClusterConnectionManager - master: redis://192.168.1.104:7002 added for slot ranges: [[10923-16383]]\r\n[redisson-netty-13-4] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7003\r\n[redisson-netty-13-4] INFO org.redisson.connection.pool.SlaveConnectionPool - 10 connections initialized for /192.168.1.104:7005\r\n2017-11-18 21:35:14 org.apache.coyote.http11.Http11Protocol start\r\n\u4fe1\u606f: Starting Coyote HTTP/1.1 on http-8080\r\n2017-11-18 21:35:14 org.apache.jk.common.ChannelSocket init\r\n\u4fe1\u606f: JK: ajp13 listening on /0.0.0.0:8009\r\n2017-11-18 21:35:14 org.apache.jk.server.JkMain start\r\n\u4fe1\u606f: Jk running ID=0 time=0/21  config=null\r\n2017-11-18 21:35:14 org.apache.catalina.startup.Catalina start\r\n\u4fe1\u606f: Server startup in 2944 ms\r\n\r\n\u4f46\u8bbf\u95ee\u9879\u76ee\u4e2d\u7684jsp\u5c31\u62a5\u5f02\u5e38\u4e86,\u8bf7\u95ee\u8c01\u77e5\u9053\u4e3a\u4ec0\u4e48,\u5728\u7ebf\u7b49,\u6025~~~~~~", "url": "https://github.com/redisson/redisson/issues/1149", "user": "prehonor", "labels": ["bug"], "created": "2017-11-18 14:15:35", "closed": "2017-11-21 07:53:28", "commits": {"65ac6f33db1d4acd49b8e483a1c3460ac702a759": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "65ac6f33db1d4acd49b8e483a1c3460ac702a759", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f034500825a8ceba015597d5ba32eb3e607e728a"], "nameRev": "65ac6f33db1d4acd49b8e483a1c3460ac702a759 tags/redisson-2.10.6~15", "commitMessage": "Fixed NPE in RedissonSession.save #1149\n", "commitDateTime": "2017-11-21 10:58:09", "authoredDateTime": "2017-11-21 10:58:09", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["65ac6f33db1d4acd49b8e483a1c3460ac702a759"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 6, "lines": 18, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession.save()"]}, {"title": "Seeing NullPointerExceptions with distributed services", "body": "We are testing the distributed services feature of redisson. We are noticing that at scale (i.e. 1000 tasks in a minute), redisson is throwing NullPointerExceptions and the tasks do not complete. \r\n\r\nRedisson Version: 3.5.5\r\nNumber of Workers: 20\r\n\r\nHere is the stack trace:\r\n\r\n```\r\n2017-11-15 15:06:01,844 [redisson-netty-1-12] WARN  concurrent.DefaultPromise  - An exception was thrown by org.redisson.BaseRemoteService$1$2$1.operationComplete()\r\nMessage: null\r\n   Line | Method\r\n->> 282 | operationComplete  in org.redisson.BaseRemoteService$1$2$1\r\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n|   507 | notifyListener0    in io.netty.util.concurrent.DefaultPromise\r\n|   481 | notifyListenersNow in     ''\r\n|   420 | notifyListeners    in     ''\r\n|   104 | trySuccess . . . . in     ''\r\n|    74 | trySuccess         in org.redisson.misc.RedissonPromise\r\n|   402 | run . . . . . . .  in org.redisson.BaseRemoteService$4\r\n|    38 | call               in io.netty.util.concurrent.PromiseTask$RunnableAdapter\r\n|   120 | run . . . . . . .  in io.netty.util.concurrent.ScheduledFutureTask\r\n|   163 | safeExecute        in io.netty.util.concurrent.AbstractEventExecutor\r\n|   403 | runAllTasks . . .  in io.netty.util.concurrent.SingleThreadEventExecutor\r\n|   463 | run                in io.netty.channel.nio.NioEventLoop\r\n|   858 | run . . . . . . .  in io.netty.util.concurrent.SingleThreadEventExecutor$5\r\n|   138 | run                in io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator\r\n^   745 | run . . . . . . .  in java.lang.Thread\r\n```\r\n\r\nLet me know what other information would be helpful to try and track this down.\r\n\r\nthanks", "url": "https://github.com/redisson/redisson/issues/1146", "user": "yspotts", "labels": ["bug"], "created": "2017-11-15 20:10:26", "closed": "2017-11-16 13:24:40", "commits": {"e4b752a33927d45c430ddb5f96c52befc1f7d853": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e4b752a33927d45c430ddb5f96c52befc1f7d853", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["42c62d4ff0f6c6ac092c283be5dcfc6201026691"], "nameRev": "e4b752a33927d45c430ddb5f96c52befc1f7d853 tags/redisson-2.10.6~17", "commitMessage": "Fixed NPE in BaseRemoteService #1146\n", "commitDateTime": "2017-11-16 16:25:22", "authoredDateTime": "2017-11-16 16:25:22", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 4, "deletions": 6, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.misc.RPromise,java.lang.String)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.misc.RPromise,java.lang.String).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String,java.lang.String).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e4b752a33927d45c430ddb5f96c52befc1f7d853"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 6, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 5, "INS": 2, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String,java.lang.String)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,java.lang.String,java.lang.String,java.lang.String).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.misc.RPromise,java.lang.String)", "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.tryPollAckAgainAsync(org.redisson.api.RemoteInvocationOptions,org.redisson.misc.RPromise,java.lang.String).7.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Snappy implementation in recent versions throws ArrayIndexOutOfBoundsException", "body": "## Summary\r\n\r\nUp to and including Redisson version 2.10.1 and 3.5.1, Redisson used the Xerial implementation of Snappy (https://github.com/xerial/snappy-java) for its SnappyCodec.\r\n\r\nIn versions 2.10.2 and 3.5.2, Redisson was changed to use the internal implementation of Snappy from Netty instead. However, this implementation seems to be designed only for Netty's use cases and cannot encode moderately-sized payloads. In this case, moderately-sized means that payloads of more than 50,000 bytes are very likely to fail.\r\n\r\nThis results in an error during the encoding step, e.g.\r\n\r\n```java\r\nException in thread \"main\" java.lang.IndexOutOfBoundsException: index: -32765, length: 4 (expected: range(0, 8388608))\r\n\tat io.netty.buffer.AbstractByteBuf.checkIndex0(AbstractByteBuf.java:1358)\r\n\tat io.netty.buffer.AbstractByteBuf.checkIndex(AbstractByteBuf.java:1353)\r\n\tat io.netty.buffer.AbstractByteBuf.getInt(AbstractByteBuf.java:417)\r\n\tat io.netty.handler.codec.compression.Snappy.encode(Snappy.java:127)\r\n\tat org.redisson.codec.SnappyCodec$4.encode(SnappyCodec.java:89)\r\n```\r\n\r\n## Steps to Reproduce\r\n\r\nI have created a repository that shows how and when this bug occurs. I take the last known good versions (2.10.1 and 3.5.1) and compare them with the most recent versions at the time of writing (2.10.5 and 3.5.4).\r\n\r\nSee the repository here: https://github.com/nebel/netty-snappy-redisson-demo\r\n\r\nTo run the examples, either run the main method for each module in your IDE, or run each module via the command line with `mvn package exec:java`.\r\n\r\nThe `redisson-*-snappy-demo` modules show the behavior in the indicated Redisson version. As you can see, the last known good versions (using the Xerial implementation of Snappy) can encode this payload without any problems, whereas the new versions (using the Netty implementation of Snappy) will fail.\r\n\r\nThe `netty-xerial-snappy-demo` module shows how increasing the size of the encoded payload will soon cause Netty's implementation to reach a breaking point after which all attempts at encoding will fail. When creating the sample data with a random seed of 0, Netty will succeed on a payload of 44,895 bytes and fail on a payload of 44,896 bytes. Changing the seed will change this number, but it will generally fail somewhere between 40,000 to 50,000 bytes.\r\n\r\nThe Xerial implementation, on the other hand, does not fail at any size I tested (up to 100 million bytes).\r\n\r\n## Fix\r\n\r\nWhile it's nice to avoid an additional dependency, I believe the Snappy implementation from Netty should probably be considered an internal implementation since this size limitation makes it unsuitable as a general compression algorithm.\r\n\r\nThe Xerial implementation seems to be more widely used by more high-profile projects (e.g. Cassanda) and is probably a safer choice.", "url": "https://github.com/redisson/redisson/issues/1145", "user": "nebel", "labels": ["bug"], "created": "2017-11-14 01:14:17", "closed": "2017-11-16 12:51:25", "commits": {"42c62d4ff0f6c6ac092c283be5dcfc6201026691": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "42c62d4ff0f6c6ac092c283be5dcfc6201026691", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a05ba3f7691b68ff73c90c95b417c75d7a2c853f"], "nameRev": "42c62d4ff0f6c6ac092c283be5dcfc6201026691 tags/redisson-2.10.6~18", "commitMessage": "Fixed SnappyCodec can't handle data more than 32K #1145\n", "commitDateTime": "2017-11-16 15:55:06", "authoredDateTime": "2017-11-16 15:55:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/SnappyCodec.java", "insertions": 20, "deletions": 4, "lines": 24}, {"filePath": "redisson/src/test/java/org/redisson/RedissonCodecTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SnappyCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.SnappyCodec.3.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.SnappyCodec.4.encode(java.lang.Object)", "TOT": 10, "UPD": 1, "INS": 2, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "RedissonCodecTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCodecTest.testSnappyBig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["42c62d4ff0f6c6ac092c283be5dcfc6201026691"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 4, "lines": 24, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 16, "UPD": 2, "INS": 3, "MOV": 8, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.SnappyCodec.3.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.codec.SnappyCodec.4.encode(java.lang.Object)"]}, {"title": "Failed to continue poll remote responses if current waiting for response has been canceled", "body": "", "url": "https://github.com/redisson/redisson/issues/1137", "user": "mrniko", "labels": ["bug"], "created": "2017-11-08 08:30:09", "closed": "2017-11-08 08:31:14", "commits": {"41548bf6e09a9fb57d8f9393d2cc9382028b9161": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "41548bf6e09a9fb57d8f9393d2cc9382028b9161", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["16d83e44381b2a1850d3eea220b71a461933ebed"], "nameRev": "41548bf6e09a9fb57d8f9393d2cc9382028b9161 tags/redisson-2.10.6~28", "commitMessage": "Fixed - Failed to continue poll remote responses if current waiting for response has been canceled. #1137\n", "commitDateTime": "2017-11-08 11:35:47", "authoredDateTime": "2017-11-08 11:35:23", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 8, "deletions": 9, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.getRequestQueueName(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry,java.lang.String).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["41548bf6e09a9fb57d8f9393d2cc9382028b9161"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 9, "lines": 17, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.BaseRemoteService.pollTasks(org.redisson.remote.ResponseEntry,java.lang.String).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseRemoteService.getRequestQueueName(java.lang.Class)"]}, {"title": "SSL it's not fully implemented", "body": "Hi,\r\n\r\nI was trying to use your library with AWS Clustered mode and figured out it does not work with SSL.\r\nI figured out the problem and fixed it in my fork  but it's a hack what I did.\r\nBasically everywhere you create an address like \"redis://\" -- you need a way to know if it's SSL and put \"rediss://\" instead. Since those places have no access to config, unfortunately I changed all to force SSL everywhere.\r\n\r\nDo you have in plan a fix for this, or I can do it if you point me to the right way. I am trying to understand your logic and how can I be least invasive to pass a config. The simplest way would be to put a static public flag somewhere -- but that's also a hack I guess, and will only allow one type at one time, or pass a jvm property ...what do you suggest?\r\n\r\nThanks in advance,\r\nFlorin Moisa", "url": "https://github.com/redisson/redisson/issues/1135", "user": "florin-moisa", "labels": ["bug"], "created": "2017-11-08 03:51:05", "closed": "2017-11-08 08:01:05", "commits": {"16d83e44381b2a1850d3eea220b71a461933ebed": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "16d83e44381b2a1850d3eea220b71a461933ebed", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b2a1f6b89d2e02b92d803b483df365c3dba90f1b"], "nameRev": "16d83e44381b2a1850d3eea220b71a461933ebed tags/redisson-2.10.6~29", "commitMessage": "Fixed SSL support for cluster mode #1135\n", "commitDateTime": "2017-11-08 11:04:33", "authoredDateTime": "2017-11-08 11:04:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ClusterNodesDecoder.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 11, "deletions": 2, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterNodesDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ClusterNodesDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ClusterNodesDecoder", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.config.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator,java.net.URI)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["16d83e44381b2a1850d3eea220b71a461933ebed"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25, "deletions": 4, "lines": 29, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 15, "UPD": 1, "INS": 11, "MOV": 0, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol/decoder", "redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.ClusterNodesDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.client.protocol.decoder.ClusterNodesDecoder", "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.config.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator,java.net.URI)", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.client.protocol"]}, {"title": "\u4ece\u8282\u70b9\u65ad\u5f00\u53c8\u6062\u590d\u65f6\uff0c\u4e0d\u4f1a\u52a0\u5165\u5230slaveBalancer", "body": "\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\u63d0\u8fc7\uff1ahttps://github.com/redisson/redisson/issues/1106\r\n\r\nredisson\u7248\u672c\uff1a3.5.4\r\n\r\n\u770b\u4e86\u4e0b\u6e90\u7801\uff0c\u4ece\u8282\u70b9\u6062\u590d\u65f6\uff0c\u4f1a\u8d70MasterSlaveEntry.slaveUp\u65b9\u6cd5\uff0c\u4f46\u662f\u5728\u5224\u65ad\u5f53\u524d\u6062\u590d\u8282\u70b9\u4e0d\u662f\u4e3b\u8282\u70b9\u540e\uff0c\u4f1a\u4eceslaveBalancer\u4e2d\u4e0b\u7ebf\u4e3b\u8282\u70b9\uff0c\u4f46\u662f\u4ee3\u7801\u5374\u4e0b\u7ebf\u4e86\u4ece\u8282\u70b9\uff08\u521a\u6062\u590d\u7684\u8282\u70b9\uff09\uff0c\u4ee3\u7801\u884c\u6570\uff1a349", "url": "https://github.com/redisson/redisson/issues/1121", "user": "liuzhaozhao", "labels": ["bug"], "created": "2017-10-31 12:16:51", "closed": "2017-11-02 13:54:20", "commits": {"9c19eda01d06f968dfda2e510c7b4e47da24a275": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "9c19eda01d06f968dfda2e510c7b4e47da24a275", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d228d4740499106ac92d9aff31e089495e8867dd"], "nameRev": "9c19eda01d06f968dfda2e510c7b4e47da24a275 tags/redisson-2.10.6~39", "commitMessage": "Master should be disabled if any slave up. #1121\n", "commitDateTime": "2017-11-02 16:58:15", "authoredDateTime": "2017-11-02 16:58:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9c19eda01d06f968dfda2e510c7b4e47da24a275"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)"]}, {"title": "Cron schedules stop after a certain time", "body": "Hi,\r\n\r\nI'm using cron schedules on an executor service but the schedules stop after a certain amount of time.\r\n\r\nI've reproduced the issue in a small standalone project.\r\n\r\nHere the scenario ;\r\n\r\n- Use latest redisson (3.5.4) with single node redis and using linux native epoll in configuration\r\n- Create a single worker for an executor service\r\n- Create the corresponding executor service\r\n- Schedule a cron task every seconds\r\n- Schedule a cron task every days at midnight\r\n\r\nAfter a certain amount of time, the cron task every seconds will stop working.\r\nWhen midnight comes, the midnight cron task works, and the every seconds task resume, but then stop again after a certain time.\r\nI did not wait midnight on the standalone project, but I have had this behaviour in my project.\r\n\r\nI looked into redis and saw that the every seconds task is still here, and the zset contains valid value for the next run in the score.\r\n\r\nNote that I also reproduced the bug with every 5 seconds or every 5 minutes task and the task every days at midnight, but I had to wait longer.\r\n\r\nI reproduced also without using the native linux epoll.\r\n\r\nRedis version : 3.2.9 from docker official image redis:3.2.9 after 1 to 2 minutes\r\nRedis version : 4.0.2 from docker official image redis:4.0.2 after around 8 minutes\r\n\r\n[redisson-issue.log](https://github.com/redisson/redisson/files/1407612/redisson-issue.log)\r\n[redisson-issue.tar.gz](https://github.com/redisson/redisson/files/1407613/redisson-issue.tar.gz)\r\n", "url": "https://github.com/redisson/redisson/issues/1112", "user": "rlamarche", "labels": ["bug"], "created": "2017-10-23 14:55:19", "closed": "2017-11-07 13:47:53", "commits": {"b2a1f6b89d2e02b92d803b483df365c3dba90f1b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "b2a1f6b89d2e02b92d803b483df365c3dba90f1b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ac1de5f6ff21d063dcece781d4da886c922f84bc"], "nameRev": "b2a1f6b89d2e02b92d803b483df365c3dba90f1b tags/redisson-2.10.6~30", "commitMessage": "Fixed - task with longer start time shouldn't overlap current task with shorter start time.  #1112\n", "commitDateTime": "2017-11-07 16:52:25", "authoredDateTime": "2017-11-07 16:52:25", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/QueueTransferTask.java", "insertions": 33, "deletions": 11, "lines": 44}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonScheduledExecutorServiceTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueueTransferTask.java", "spoonMethods": [{"spoonMethodName": "org.redisson.QueueTransferTask", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.QueueTransferTask.addListener(org.redisson.api.RFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.QueueTransferTask.scheduleTask(java.lang.Long)", "TOT": 15, "UPD": 3, "INS": 4, "MOV": 5, "DEL": 3}, {"spoonMethodName": "org.redisson.QueueTransferTask.pushTask()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.QueueTransferTask.TimeoutTask", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.QueueTransferTask.scheduleTask(java.lang.Long).3.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScheduledExecutorServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.executor.RedissonScheduledExecutorServiceTest.testCronExpressionMultipleTasks()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b2a1f6b89d2e02b92d803b483df365c3dba90f1b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 33, "deletions": 11, "lines": 44, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 23, "UPD": 5, "INS": 7, "MOV": 7, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.QueueTransferTask", "org.redisson.QueueTransferTask.pushTask()", "org.redisson.QueueTransferTask.scheduleTask(java.lang.Long).3.run(io.netty.util.Timeout)", "org.redisson.QueueTransferTask.scheduleTask(java.lang.Long)", "org.redisson.QueueTransferTask.addListener(org.redisson.api.RFuture)", "org.redisson.QueueTransferTask.TimeoutTask"]}, {"title": "RReadWriteLock reentry is incompatible", "body": "This issue is related to #891.\r\n\r\n- write lock for 10 seconds\r\n- write lock for 1 second\r\n\r\nNow after 1 second the whole lock is released. I'm not sure if this is a bug, but logically the system should not unlock the because the first lock request is done for 10 seconds.\r\n\r\n`\t\t\r\n\t\tExecutorService executor = Executors.newCachedThreadPool(new ThreadFactoryBuilder().setNameFormat(\"redis-%d\").build());\r\n\t\tRedissonClient client = Redisson.create(config);\r\n\t\t\r\n\t\tRReadWriteLock rw1 = client.getReadWriteLock(\"test2s3\");\r\n\t\t\r\n\t\tRLock l1 = rw1.writeLock();\r\n\t\tSystem.out.println(l1.tryLock(10000, 10000, TimeUnit.MILLISECONDS));\r\n\t\tRLock l2 = rw1.writeLock();\r\n\t\tSystem.out.println(l2.tryLock(1000, 1000, TimeUnit.MILLISECONDS));\r\n\t\texecutor.execute(()->{\r\n\t\t\tRReadWriteLock rw2 = client.getReadWriteLock(\"test2s3\");\r\n\t\t\ttry {\r\n\t\t\t\tif (rw2.writeLock().tryLock(3000, 1000, TimeUnit.MILLISECONDS)) {\r\n\t\t\t\t\tSystem.out.println(\"This is not expected!\");\r\n\t\t\t\t}\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t});\r\n\t\texecutor.shutdown();\r\n\t\texecutor.awaitTermination(10, TimeUnit.MINUTES);\r\n\t\tclient.shutdown();\r\n`\r\nManually calling l2.unlock() manually works as expected, that is fixed in #891 ", "url": "https://github.com/redisson/redisson/issues/1110", "user": "choeflake", "labels": ["bug"], "created": "2017-10-20 09:15:04", "closed": "2017-10-24 13:25:02", "commits": {"cbda17c6829e7da095c1f743fb1096a3ec8f037e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "cbda17c6829e7da095c1f743fb1096a3ec8f037e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["48ea96f2fefb1338510659fc83ef43a2e13c618e"], "nameRev": "cbda17c6829e7da095c1f743fb1096a3ec8f037e tags/redisson-2.10.5~14", "commitMessage": "Fixed expiration handling of reentrant write lock.  #1110\n", "commitDateTime": "2017-10-24 16:28:57", "authoredDateTime": "2017-10-24 16:28:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonWriteLock.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReadWriteLockTest.java", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonWriteLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonWriteLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "TOT": 8, "UPD": 6, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonReadWriteLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockLeaseTimeoutDiffThreadsWRR()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testReadLockLeaseTimeoutDiffThreadsRRW()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteReadReentrancy()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteLockExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cbda17c6829e7da095c1f743fb1096a3ec8f037e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 4, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 6, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonWriteLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)"]}, {"title": "RFairLock dead lock issue", "body": "Hi,\r\nI would like to report a locking issue we are seeing using redisson versions 3.3.2 to 3.5.4, using `RFairLock`.\r\nWe have 3 instances of an application competing for a fair lock. After some time, the timeout of the fair lock queue gets set to a time many hours in the future, and no thread ever gets the lock.\r\n\r\nHere is what redis is reporting during one of the occurences - both commands ran at about 9:30AM PST on 10/17/2017 (`1508257800000`):\r\n```\r\nredis > zrange \"redisson_lock_timeout:{mylock}\" 0 99 WITHSCORES\r\n1) \"3b9c4448-dfaa-4b4e-a691-cfee25458333:88\"\r\n2) \"1508278998141\"\r\n3) \"a8baa8c5-d42d-4912-9a1b-e72d0728ae88:90\"\r\n4) \"1508278998141\"\r\n5) \"17cd3d41-8ea1-44c7-b458-a530aff209f0:88\"\r\n6) \"1508279003141\"\r\n```\r\n```\r\nredis > lrange \"redisson_lock_queue:{mylock}\" 0 99\r\n1) \"17cd3d41-8ea1-44c7-b458-a530aff209f0:88\"\r\n2) \"3b9c4448-dfaa-4b4e-a691-cfee25458333:88\"\r\n3) \"a8baa8c5-d42d-4912-9a1b-e72d0728ae88:90\"\r\n```\r\n\r\nYou can see that the timeout (zscore of the timeout keys) is set about 6 hours in the future.\r\n```Current time = Tuesday, October 17, 2017 9:30:00.000 AM GMT-07:00 DST```\r\n```1508278998141 = Tuesday, October 17, 2017 3:23:18.141 PM GMT-07:00 DST```\r\n```1508279003141 = Tuesday, October 17, 2017 3:23:23.141 PM GMT-07:00 DST```\r\n\r\nSo far, we haven't been able to reproduce the issue locally, but it is happening daily in our production environment. We are suspecting the problem is happening randomly when one of the application gets killed by the operating system (kill -9), something that can happen quite often due to the way we manage the apps.\r\n\r\nWe were using redisson version 3.2.3 before, and never experienced the issue.\r\nEarlier this year, we tried updating to version 3.3.2 and started seeing the problem within a day or so. We reverted to 3.2.3, and waited for an updated version.\r\nTwo days ago, we decided to upgrade to 3.5.4 assuming the problem was fixed, but it happened again within a few hours.\r\nI will keep on trying to reproduce the issue, but any help is appreciated.\r\nThanks,\r\nMichael", "url": "https://github.com/redisson/redisson/issues/1104", "user": "mjavault", "labels": ["bug"], "created": "2017-10-18 17:16:54", "closed": "2017-10-27 09:59:26", "commits": {"3c63f97f2ad17699c0fcb03dbff3f289e9a45cb3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "3c63f97f2ad17699c0fcb03dbff3f289e9a45cb3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["901b4911069f3f6d4eb785eccf5e7833746a1321"], "nameRev": "3c63f97f2ad17699c0fcb03dbff3f289e9a45cb3 tags/redisson-2.10.5~10", "commitMessage": "Fixed timeout drift for RFairLock.  #1104\n", "commitDateTime": "2017-10-27 13:03:03", "authoredDateTime": "2017-10-27 13:03:03", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonFairLock.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "redisson/src/test/java/org/redisson/RedissonFairLockTest.java", "insertions": 103, "deletions": 1, "lines": 104}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonFairLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonFairLock.acquireFailedAsync(long)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonFairLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonFairLock", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonFairLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonFairLockTest.testTryLockNonDelayed()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonFairLockTest.testConcurrency_MultiInstance_Ordering()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonFairLockTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonFairLockTest.testTimeoutDrift()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3c63f97f2ad17699c0fcb03dbff3f289e9a45cb3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 2, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonFairLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "org.redisson.RedissonFairLock.acquireFailedAsync(long)", "org.redisson.RedissonFairLock"]}, {"title": "CROSSSLOT key error on #getMap#getReadWriteLock when clustered", "body": "#Hi,\r\n\r\nI'm encountering the CROSSSLOT keys error when I get a lock a ReadWriteLock of a map in a clustered environment. The normal Lock of a map works fine tho.\r\n\r\nor do I need the RClusteredMap instead of the normal map when clustered even if I don't need the data partitioning?", "url": "https://github.com/redisson/redisson/issues/1098", "user": "HansChua", "labels": ["bug"], "created": "2017-10-13 13:18:52", "closed": "2017-10-20 15:02:59", "commits": {"48ea96f2fefb1338510659fc83ef43a2e13c618e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "48ea96f2fefb1338510659fc83ef43a2e13c618e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b3c3fa3884646fb56b6c51f5486c27ec6e23d42e"], "nameRev": "48ea96f2fefb1338510659fc83ef43a2e13c618e tags/redisson-2.10.5~15", "commitMessage": "RReadWriteLock doesn't work in cluster.  #1098\n", "commitDateTime": "2017-10-20 18:07:15", "authoredDateTime": "2017-10-20 18:07:15", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonReadLock.java", "insertions": 14, "deletions": 7, "lines": 21}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReadWriteLockTest.java", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonReadLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadLock.unlockInnerAsync(long)", "TOT": 5, "UPD": 2, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadLock.getReadWriteTimeoutNamePrefix(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonReadWriteLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testInCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["48ea96f2fefb1338510659fc83ef43a2e13c618e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 7, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 5, "INS": 5, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonReadLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "org.redisson.RedissonReadLock.unlockInnerAsync(long)", "org.redisson.RedissonReadLock.getReadWriteTimeoutNamePrefix(long)"]}, {"title": "RedissonBlockingQueue.take() returns null in case of internal error", "body": "The take() method in RedissonBlockingQueue uses Future.getNow(), which returns null if an exception occurs. In our case, we have tons of NPEs when the application is stopped.", "url": "https://github.com/redisson/redisson/issues/1096", "user": "0x0000-dot-ru", "labels": ["bug"], "created": "2017-10-12 17:47:32", "closed": "2017-10-20 14:11:11", "commits": {"b3c3fa3884646fb56b6c51f5486c27ec6e23d42e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "b3c3fa3884646fb56b6c51f5486c27ec6e23d42e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["280b87abc46716e199aac05a4b415302da819ff5"], "nameRev": "b3c3fa3884646fb56b6c51f5486c27ec6e23d42e tags/redisson-2.10.5~16", "commitMessage": "Blocking queues are't rethrow exceptions.  #1096\n", "commitDateTime": "2017-10-20 17:15:29", "authoredDateTime": "2017-10-20 17:15:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingDeque.java", "insertions": 7, "deletions": 14, "lines": 21}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingQueue.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBoundedBlockingQueue.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBlockingDeque.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingDeque.takeLastAndOfferFirstTo(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.takeFirst()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.takeLast()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollFirstFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollLastFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollFirst(long,java.util.concurrent.TimeUnit)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollLast(long,java.util.concurrent.TimeUnit)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueue.take()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.poll(long,java.util.concurrent.TimeUnit)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.pollFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.pollLastAndOfferFirstTo(java.lang.String,long,java.util.concurrent.TimeUnit)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonBoundedBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b3c3fa3884646fb56b6c51f5486c27ec6e23d42e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 27, "lines": 40, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 39, "UPD": 13, "INS": 0, "MOV": 13, "DEL": 13, "spoonFilesChanged": 3, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBlockingDeque.pollFirstFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonBlockingDeque.pollLast(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingDeque.takeLast()", "org.redisson.RedissonBlockingDeque.takeFirst()", "org.redisson.RedissonBlockingDeque.pollFirst(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingQueue.pollLastAndOfferFirstTo(java.lang.String,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingQueue.pollFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonBlockingDeque.pollLastFromAny(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonBoundedBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)", "org.redisson.RedissonBlockingQueue.take()", "org.redisson.RedissonBlockingDeque.takeLastAndOfferFirstTo(java.lang.String)", "org.redisson.RedissonBlockingQueue.poll(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingQueue.takeLastAndOfferFirstTo(java.lang.String)"]}, {"title": "\"too many results to unpack\" when callin RMapCache::getAll on a large (10000+) keyset", "body": "I get \"too many results to unpack\" exception when calling RMapCache::getAll on a large (~10000+) keyset. Tested on both v.3.5.0 and v3.5.4.", "url": "https://github.com/redisson/redisson/issues/1089", "user": "asaf-romano", "labels": ["bug"], "created": "2017-10-08 20:23:43", "closed": "2017-10-09 07:43:47", "commits": {"830b9a1c0eb330d58b88f0c8b0a7ca0d8148fc05": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "830b9a1c0eb330d58b88f0c8b0a7ca0d8148fc05", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["11ccec323e205b9e130e4851cd8752d8cf740316"], "nameRev": "830b9a1c0eb330d58b88f0c8b0a7ca0d8148fc05 tags/redisson-2.10.5~31", "commitMessage": "RMapCache.getAll doesn't support large keySet. #1089\n", "commitDateTime": "2017-10-09 10:47:40", "authoredDateTime": "2017-10-09 10:47:40", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.getAllOperationAsync(java.util.Set)", "TOT": 35, "UPD": 33, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["830b9a1c0eb330d58b88f0c8b0a7ca0d8148fc05"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 35, "UPD": 33, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.getAllOperationAsync(java.util.Set)"]}, {"title": "Current Connection Max Out when using Distributed Schedule Service", "body": "Hi,\r\n\r\nWe are using AWS Elastic Cache (3.2.4-cache.m3.xLarge). \r\nWe are trying to solve for scheduling events using Redisson Executor Service (https://github.com/redisson/redisson/wiki/9.-distributed-services). We have a setup of 1master and 4 slave nodes.\r\n\r\nWhen we are trying to send scheduling request at rate of around 1000 request per sec for more than 1hour duration, we are seeing that current connections shoots up to max and they are never reclaimed and the app starts throwing errors.\r\n\r\nThese are our Redisson Client setting: (Replicated servers configuration)\r\nElasticache node scan interval in milliseconds=5000\r\nmasterConnectionPoolSize=5000\r\nslaveConnectionPoolSize=5000\r\nmasterConnectionMinimumIdleSize=50\r\nslaveConnectionMinimumIdleSize=50\r\nidleConnectionTimeout=30000\r\nconnectTimeout=30000\r\ntimeout=30000\r\nExecutor service workers=10\r\n\r\nWe are creating a executor service on startup and use it throughout the app. We are using the scheduleAsync function and Runnable implementation.\r\n\r\nWe have a 6node (EC2 instanceC3.xLarge) app Cluster taking to Redis. (Each node has the above configuration)\r\n\r\nCan you please help provide guidance as to what might be the issue here and how we can resolve it.\r\n\r\nThanks.\r\n  ", "url": "https://github.com/redisson/redisson/issues/1087", "user": "yjain3326", "labels": ["bug"], "created": "2017-10-06 04:29:15", "closed": "2017-10-20 13:53:54", "commits": {"8ffedea17342ae5062362033f85b8b55eb1b17a4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "8ffedea17342ae5062362033f85b8b55eb1b17a4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["dcbfe3b51d08630d0742fcb0dc91dadf004ed5ee"], "nameRev": "8ffedea17342ae5062362033f85b8b55eb1b17a4 tags/redisson-2.10.5~19", "commitMessage": "Fixed out of connections problem on high load during RemoteExecutorService/ExecutorService usage. #1087\n", "commitDateTime": "2017-10-20 16:55:48", "authoredDateTime": "2017-10-20 16:55:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 186, "deletions": 95, "lines": 281}, {"filePath": "redisson/src/main/java/org/redisson/Redisson.java", "insertions": 14, "deletions": 6, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/RedissonExecutorService.java", "insertions": 29, "deletions": 18, "lines": 47}, {"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 65, "deletions": 84, "lines": 149}, {"filePath": "redisson/src/main/java/org/redisson/executor/RemoteExecutorService.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/executor/RemoteExecutorServiceAsync.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/executor/RemotePromise.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/executor/ScheduledTasksService.java", "insertions": 22, "deletions": 13, "lines": 35}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksBatchService.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksRunnerService.java", "insertions": 24, "deletions": 35, "lines": 59}, {"filePath": "redisson/src/main/java/org/redisson/executor/TasksService.java", "insertions": 18, "deletions": 13, "lines": 31}, {"filePath": "redisson/src/main/java/org/redisson/remote/RRemoteServiceResponse.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceAck.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceCancelRequest.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceCancelResponse.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceRequest.java", "insertions": 19, "deletions": 8, "lines": 27}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceResponse.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/remote/{RemoteParams.java => ResponseEntry.java}", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRemoteServiceTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/executor/RedissonScheduledExecutorServiceTest.java", "insertions": 32, "deletions": 9, "lines": 41}, {"filePath": "redisson/src/test/java/org/redisson/executor/RunnableTask.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "redisson/src/test/java/org/redisson/executor/ScheduledLongRepeatableTask.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["8ffedea17342ae5062362033f85b8b55eb1b17a4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 460, "deletions": 306, "lines": 766, "gitFilesChange": 18}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/remote", "redisson/src/main/java/org/redisson/executor", "redisson/src/main/java/org/redisson"]}, {"title": "RedisConnection can not close", "body": "final RedisClient client = RedisClient.create(clientConfig);\r\nfinal RedisConnection con = client.connect();\r\ncon.closeAsync().addListener(l -> {\r\n            client.shutdownAsync().addListener(cl -> {\r\n                showThreas();\r\n            });\r\n        });\r\n\r\nthreads info\r\nname - id - state - daemon\r\nReference Handler - 2 - WAITING - true\r\nFinalizer - 3 - WAITING - true\r\nSignal Dispatcher - 4 - RUNNABLE - true\r\nAttach Listener - 5 - RUNNABLE - true\r\nnioEventLoopGroup-2-1 - 12 - RUNNABLE - false\r\nDestroyJavaVM - 13 - RUNNABLE - false\r\nnioEventLoopGroup-2-2 - 14 - RUNNABLE - false\r\nthreadDeathWatcher-3-1 - 15 - TIMED_WAITING - true\r\nnioEventLoopGroup-2-3 - 16 - RUNNABLE - false\r\nForkJoinPool.commonPool-worker-1 - 17 - TIMED_WAITING - true\r\nglobalEventExecutor-1-1 - 18 - RUNNABLE - false", "url": "https://github.com/redisson/redisson/issues/1076", "user": "featherfly", "labels": ["bug"], "created": "2017-09-26 08:31:23", "closed": "2017-10-27 10:40:06", "commits": {"9b300825586e79b874d1dcba4d930885af7561ac": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 31.00027777777778, "commitsDetails": [{"commitHash": "9b300825586e79b874d1dcba4d930885af7561ac", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3c63f97f2ad17699c0fcb03dbff3f289e9a45cb3"], "nameRev": "9b300825586e79b874d1dcba4d930885af7561ac tags/redisson-2.10.5~9", "commitMessage": "Fixed RedisClient can't be shutdown properly. #1076\n", "commitDateTime": "2017-10-27 13:44:16", "authoredDateTime": "2017-10-27 13:44:16", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 77, "deletions": 27, "lines": 104}, {"filePath": "redisson/src/main/java/org/redisson/client/RedisClientConfig.java", "insertions": 30, "deletions": 5, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient", "TOT": 25, "UPD": 9, "INS": 4, "MOV": 11, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisClient.create(org.redisson.client.RedisClientConfig)", "TOT": 10, "UPD": 2, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisClient.shutdown()", "TOT": 12, "UPD": 2, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisClient.shutdownAsync()", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.shutdownAsync().3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisClientConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClientConfig", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9b300825586e79b874d1dcba4d930885af7561ac"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 107, "deletions": 32, "lines": 139, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 61, "UPD": 15, "INS": 12, "MOV": 29, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisClient", "org.redisson.client.RedisClient.shutdownAsync().3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.client.RedisClient.shutdown()", "org.redisson.client.RedisClientConfig", "org.redisson.client.RedisClient.shutdownAsync()", "org.redisson.client.RedisClient.create(org.redisson.client.RedisClientConfig)"]}, {"title": "Implement proper RedisLoadingException handling during RedisClient reconnection", "body": "Code:\r\n\r\n    // redisson 3.5.3\r\n    //  <logger name=\"org.redisson\" level=\"TRACE\"/>\r\n    // config.useSingleServer().setClientName(\"local-u0\")\r\n    RPatternTopic<String> patternTopic = c.getPatternTopic(\"*\", new StringCodec());\r\n\r\n    patternTopic.addListener((pattern, channel, msg) -> {\r\n         System.err.println(pattern + \", \" + channel + \", \" +msg);\r\n    });\r\n\r\nTest\r\n\r\n    redis-cli PUBLISH aaa 111 # works\r\n\r\nRestart redis, log https://gist.github.com/valodzka/5fe65c7cb8cf66747b2850a6601d50c3\r\nTest again:\r\n\r\n     redis-cli PUBLISH aaa 111 # never works\r\n", "url": "https://github.com/redisson/redisson/issues/1075", "user": "valodzka", "labels": ["bug"], "created": "2017-09-25 12:15:01", "closed": "2017-10-27 12:38:47", "commits": {"e21b5a14443f3d5ca21baf2e9969fffa23479769": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "1a11c3047ef1d3a3d82f267dfe2307b944727677": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 32.000277777777775, "commitsDetails": [{"commitHash": "e21b5a14443f3d5ca21baf2e9969fffa23479769", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9b300825586e79b874d1dcba4d930885af7561ac"], "nameRev": "e21b5a14443f3d5ca21baf2e9969fffa23479769 tags/redisson-2.10.5~8", "commitMessage": "Added RedisLoadingException handling during re-connection process. #1075\n", "commitDateTime": "2017-10-27 15:35:22", "authoredDateTime": "2017-10-27 15:35:22", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/BaseConnectionHandler.java", "insertions": 10, "deletions": 2, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseConnectionHandler.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.BaseConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.BaseConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1a11c3047ef1d3a3d82f267dfe2307b944727677", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e21b5a14443f3d5ca21baf2e9969fffa23479769"], "nameRev": "1a11c3047ef1d3a3d82f267dfe2307b944727677 tags/redisson-2.10.5~7", "commitMessage": "In case of RedisLoadingException handling, make a new attempt to reconnect with 1 second delay. #1075\n", "commitDateTime": "2017-10-27 15:43:18", "authoredDateTime": "2017-10-27 15:43:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/BaseConnectionHandler.java", "insertions": 8, "deletions": 2, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseConnectionHandler.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.BaseConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.BaseConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e21b5a14443f3d5ca21baf2e9969fffa23479769", "1a11c3047ef1d3a3d82f267dfe2307b944727677"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 18, "deletions": 4, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 20, "UPD": 2, "INS": 5, "MOV": 9, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.BaseConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.client.handler.BaseConnectionHandler.channelActive(io.netty.channel.ChannelHandlerContext)"]}, {"title": "redisson throw exception 'Exception in thread \"redisson-3-10\" java.lang.ArrayIndexOutOfBoundsException: 1'", "body": "redisson running on tomcat.The program is working.redisson throw exception few minutes,\r\n`Exception in thread \"redisson-3-10\" java.lang.ArrayIndexOutOfBoundsException: 1\r\n\tat org.redisson.spring.session.RedissonSessionRepository.onMessage(RedissonSessionRepository.java:259)\r\n\tat org.redisson.spring.session.RedissonSessionRepository.onMessage(RedissonSessionRepository.java:50)\r\n\tat org.redisson.PubSubPatternMessageListener.onPatternMessage(PubSubPatternMessageListener.java:80)\r\n\tat org.redisson.client.RedisPubSubConnection.onMessage(RedisPubSubConnection.java:86)\r\n\tat org.redisson.client.handler.CommandDecoder$1.run(CommandDecoder.java:368)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\r\n\tat java.lang.Thread.run(Thread.java:745)`", "url": "https://github.com/redisson/redisson/issues/1069", "user": "welove312", "labels": ["bug"], "created": "2017-09-22 07:33:27", "closed": "2017-09-26 14:04:28", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Possible race-condition during write operation cancellation", "body": "", "url": "https://github.com/redisson/redisson/issues/1061", "user": "mrniko", "labels": ["bug"], "created": "2017-09-18 14:38:59", "closed": "2017-09-18 14:40:46", "commits": {"f30351f94b032658dfcc3b071b2db610f1d1b5c6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f30351f94b032658dfcc3b071b2db610f1d1b5c6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9e4767690cd5a5b309c7062949dd8a24e775b6cd"], "nameRev": "f30351f94b032658dfcc3b071b2db610f1d1b5c6 tags/redisson-2.10.4~15", "commitMessage": "Fixed possible race-condition during write operation cancellation.  #1061\n", "commitDateTime": "2017-09-18 17:43:37", "authoredDateTime": "2017-09-18 17:43:37", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandBatchEncoder.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandEncoder.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchEncoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandBatchEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandEncoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testWriteTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapTest.testWriteTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f30351f94b032658dfcc3b071b2db610f1d1b5c6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 1, "lines": 20, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)", "org.redisson.client.handler.CommandBatchEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)"]}, {"title": "[Redisson 3.5.3] MR Collator Nullpoint Error", "body": "Classes:\r\n1\u3001Main:\r\n\t\tRedissonClient redisson = Redisson.create(config);\r\n\t\tRMap<String, String> map = redisson.getMap(\"wordsMap\");\r\n\t\tmap.put(\"line1\", \"Alice was beginning to get very tired\");\r\n\t\tmap.put(\"line2\", \"of sitting by her sister on the bank and\");\r\n\t\tmap.put(\"line3\", \"of having nothing to do once or twice she\");\r\n\t\tmap.put(\"line4\", \"had peeped into the book her sister was reading\");\r\n\t\tmap.put(\"line5\", \"but it had no pictures or conversations in it\");\r\n\t\tmap.put(\"line6\", \"and what is the use of a book\");\r\n\t\tmap.put(\"line7\", \"thought Alice without pictures or conversation\");\r\n\t\tRMapReduce<String, String, String, Integer> mapReduce = map.<String, Integer>mapReduce().mapper(new WordMapper()).reducer(new WordReducer()).timeout(60, TimeUnit.MINUTES);\r\n\t\t// count occurrences of words\r\n\t\tMap<String, Integer> mapToNumber = mapReduce.execute();\r\n\t\tSystem.out.println(\"mapToNumber=\" + mapToNumber);\t\t\r\n               // count total words amount\r\n\t\tInteger totalWordsAmount = mapReduce.execute(new WordCollator());\r\n\t\tSystem.out.println(\"totalWordsAmount=\" + totalWordsAmount);\r\n\r\n2\u3001public class WordCollator implements RCollator<String, Integer, Integer> {\r\n    public Integer collate(Map<String, Integer> resultMap) {\r\n        int result = 0;\r\n        for (Integer count : resultMap.values()) {\r\n            result += count;\r\n        }\r\n        return result;\r\n    }   \r\n}\r\n3\u3001WordMapper\uff1a    \r\npublic void map(String key, String value, RCollector<String, Integer> collector) {\r\n        String[] words = value.split(\"[^a-zA-Z]\");\r\n        for (String word : words) {\r\n            collector.emit(word, 1);\r\n        }\r\n    }\r\n4\u3001WordReducer\uff1a\r\n\tpublic Integer reduce(String reducedKey, Iterator<Integer> values) {\r\n        int sum = 0;\r\n        while (values.hasNext()) {\r\n           Integer i = (Integer) values.next();\r\n           sum += i;\r\n        }\r\n        return sum;\r\n\t}\r\n\r\nResult as following: mapReduce.execute(new WordCollator()) is error.\r\n[main] INFO org.redisson.Version - Redisson 3.5.3\r\n[redisson-netty-1-5] INFO org.redisson.connection.pool.MasterPubSubConnectionPool - 1 connections initialized for /11.1.1.1:7379\r\n[redisson-netty-1-6] INFO org.redisson.connection.pool.MasterConnectionPool - 10 connections initialized for /11.1.1.1:7379\r\nmapToNumber={sitting=1, Alice=2, beginning=1, by=1, to=2, was=2, her=2, and=2, tired=1, the=3, had=2, sister=2, once=1, peeped=1, bank=1, reading=1, into=1, she=1, but=1, no=1, pictures=2, it=2, thought=1, conversations=1, what=1, without=1, in=1, conversation=1, use=1, a=1, get=1, very=1, of=3, on=1, having=1, nothing=1, do=1, or=3, twice=1, book=2, is=1}\r\nException in thread \"main\" org.redisson.client.RedisException: Unexpected exception while processing command\r\n\tat org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:322)\r\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:165)\r\n\tat org.redisson.mapreduce.MapReduceExecutor.execute(MapReduceExecutor.java:156)\r\n\tat org.redisson.mapreduce.RedissonMapReduce.execute(RedissonMapReduce.java:38)\r\n\tat org.redisson.example.mr.Test.main(Test.java:34)\r\nCaused by: java.lang.IllegalArgumentException: java.lang.NullPointerException\r\n\tat .executeCallable(TasksRunnerService.java:183)\r\n\tat .executeCallable(TasksRunnerService.java:163)\r\n\tat .invoke0(Native Method)\r\n\tat .invoke(NativeMethodAccessorImpl.java:62)\r\n\tat .invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat .invoke(Method.java:498)\r\n\tat .invokeMethod(RedissonRemoteService.java:276)\r\n\tat .access$400(RedissonRemoteService.java:59)\r\n\tat .run(RedissonRemoteService.java:239)\r\n\tat .call(Executors.java:511)\r\n\tat .run(FutureTask.java:266)\r\n\tat .runWorker(ThreadPoolExecutor.java:1142)\r\n\tat .run(ThreadPoolExecutor.java:617)\r\n\tat .run(DefaultThreadFactory.java:138)\r\n\tat .run(Thread.java:745)\r\nCaused by: java.lang.NullPointerException\r\n\tat .executeCollator(CoordinatorTask.java:147)\r\n\tat .call(CoordinatorTask.java:129)\r\n\tat .executeCallable(TasksRunnerService.java:176)\r\n\t... 14 more\r\n", "url": "https://github.com/redisson/redisson/issues/1053", "user": "Godson2017", "labels": ["bug"], "created": "2017-09-14 02:52:16", "closed": "2017-09-15 11:13:02", "commits": {"a55545558a7d2ffe9f9bc5a3330c11d1d9cdc8b3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "a55545558a7d2ffe9f9bc5a3330c11d1d9cdc8b3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c7f327d95d1ba62012679d3bc1b26eb5f3808e73"], "nameRev": "a55545558a7d2ffe9f9bc5a3330c11d1d9cdc8b3 tags/redisson-2.10.4~22", "commitMessage": "MapReduce Collator couldn't be executed if timeout was defined. #1053\n", "commitDateTime": "2017-09-15 14:16:26", "authoredDateTime": "2017-09-15 14:16:26", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonExecutorService.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "redisson/src/main/java/org/redisson/RedissonNode.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/config/RedissonNodeConfig.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/mapreduce/CoordinatorTask.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapReduceTest.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonExecutorService.java", "spoonMethods": []}, {"spoonFilePath": "RedissonNode.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonNode.create(org.redisson.config.RedissonNodeConfig,org.redisson.Redisson)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonNode.start()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedissonNodeConfig.java", "spoonMethods": []}, {"spoonFilePath": "CoordinatorTask.java", "spoonMethods": [{"spoonMethodName": "org.redisson.mapreduce.CoordinatorTask.executeCollator()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonMapReduceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapReduceTest.testCollatorTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a55545558a7d2ffe9f9bc5a3330c11d1d9cdc8b3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 10, "lines": 25, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 8, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/config", "redisson/src/main/java/org/redisson/mapreduce"], "changesInPackagesSPOON": ["org.redisson.RedissonNode.create(org.redisson.config.RedissonNodeConfig,org.redisson.Redisson)", "org.redisson.mapreduce.CoordinatorTask.executeCollator()", "org.redisson.RedissonNode.start()"]}, {"title": "Redisson hang on RBatch.execute()", "body": "Hi, we are using redisson client for our multi-threaded application.\r\n\r\nWe use RBatch to batch two commands as below:\r\n\r\n           RBatch batch = client.createBatch();\r\n            batch.timeout(1000, TimeUnit.MILLISECONDS);\r\n            RMapAsync<String, byte[]> map = batch.getMap(key, RedissonByteArrayMapValueCodec.INSTANCE);\r\n            map.putAllAsync(hashData);\r\n            map.expireAsync(ttlSeconds, TimeUnit.SECONDS);\r\n            batch.execute(); \r\n         \r\nDuring the test, we noticed the hang several time.\r\n\r\nWe first show this error first before the hang:\r\n\r\n`VYM-748304795.us-west-2.elb.amazonaws.com/m3u8/lego262346.m3u8}]', anchor='PT59.832631279S', driftMillis='0'}\r\n11 Sep 2017 18:09:43,195 [WARN]  (redisson-netty-12-6) io.netty.util.concurrent.DefaultPromise: An exception was thrown by org.redisson.command.CommandBatchService$5.operationComplete()\r\n org.redisson.client.RedisNodeNotFoundException: Node: /127.0.0.1:30003 for slot: 10928 hasn't been discovered yet\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.getEntry(MasterSlaveConnectionManager.java:684) ~[Redisson-3.x.jar:?]\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(MasterSlaveConnectionManager.java:674) ~[Redisson-3.x.jar:?]\r\n\tat org.redisson.command.CommandBatchService.execute(CommandBatchService.java:258) ~[Redisson-3.x.jar:?]\r\n\tat org.redisson.command.CommandBatchService.access$100(CommandBatchService.java:59) ~[Redisson-3.x.jar:?]\r\n\tat org.redisson.command.CommandBatchService$5.operationComplete(CommandBatchService.java:331) ~[Redisson-3.x.jar:?]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:500) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:479) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:122) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat org.redisson.misc.RedissonPromise.tryFailure(RedissonPromise.java:98) ~[Redisson-3.x.jar:?]\r\n\tat org.redisson.client.handler.CommandDecoder.decodeCommandBatch(CommandDecoder.java:207) ~[Redisson-3.x.jar:?]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:135) ~[Redisson-3.x.jar:?]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n \tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-all-4.1.jar:4.1.13.Final-SNAPSHOT]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_141]`\r\n\r\nThen our thread calling the batch hung. There is the stacktrack:\r\n\r\n`   java.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00000007bafd7438> (a java.util.concurrent.CountDownLatch$Sync)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\r\n        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)\r\n        at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:148)\r\n        at org.redisson.command.CommandBatchService.execute(CommandBatchService.java:134)\r\n        at org.redisson.RedissonBatch.execute(RedissonBatch.java:253)`\r\n\r\n\r\nI tried to set the lower lockWatchdogTimeout and set the batch timeout but this did not help.", "url": "https://github.com/redisson/redisson/issues/1048", "user": "PeterStayPool", "labels": ["bug"], "created": "2017-09-12 20:41:48", "closed": "2017-09-13 11:03:05", "commits": {"10be68bd3b0b583cf4ea53ffb6bc10f9071d7f38": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "c7f327d95d1ba62012679d3bc1b26eb5f3808e73": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "10be68bd3b0b583cf4ea53ffb6bc10f9071d7f38", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b9106619bb1903826a8f3ed73d17f9bdb97fbbb0"], "nameRev": "10be68bd3b0b583cf4ea53ffb6bc10f9071d7f38 tags/redisson-2.10.4~27", "commitMessage": "RedisNodeNotFoundException should be supplied to Failed Promise.  #1048\n", "commitDateTime": "2017-09-13 14:06:25", "authoredDateTime": "2017-09-13 14:06:25", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 30, "deletions": 13, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource)", "TOT": 19, "UPD": 4, "INS": 1, "MOV": 10, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "TOT": 15, "UPD": 2, "INS": 2, "MOV": 11, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.releaseWrite(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.releaseRead(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c7f327d95d1ba62012679d3bc1b26eb5f3808e73", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["be1ac4b30433617d98101e750f96b8c4882661d8"], "nameRev": "c7f327d95d1ba62012679d3bc1b26eb5f3808e73 tags/redisson-2.10.4~23", "commitMessage": "RedisNodeNotFoundException should be supplied to Failed Promise. #1048\n", "commitDateTime": "2017-09-13 14:14:39", "authoredDateTime": "2017-09-13 14:14:39", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 13, "deletions": 3, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.releaseSubscribeConnection(int,org.redisson.connection.PubSubConnectionEntry)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.nextPubSubConnection(int)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["10be68bd3b0b583cf4ea53ffb6bc10f9071d7f38", "c7f327d95d1ba62012679d3bc1b26eb5f3808e73"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 43, "deletions": 16, "lines": 59, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 53, "UPD": 7, "INS": 15, "MOV": 25, "DEL": 6, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.nextPubSubConnection(int)", "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.MasterSlaveConnectionManager.releaseRead(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection)", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.MasterSlaveConnectionManager.releaseWrite(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection)", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource)", "org.redisson.connection.MasterSlaveConnectionManager.releaseSubscribeConnection(int,org.redisson.connection.PubSubConnectionEntry)"]}, {"title": "Redisson 3.5.2 memory leak with pooled buffers", "body": "```text\r\n2017-09-12T20:50:34,681 ERROR [main] (io.netty.util.ResourceLeakDetector) LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.\r\nWARNING: 841 leak records were discarded because the leak record count is limited to 4. Use system property io.netty.leakDetection.maxRecords to increase the limit.\r\nRecent access records: 4\r\n#1:\r\n\tio.netty.buffer.AdvancedLeakAwareByteBuf.getInt(AdvancedLeakAwareByteBuf.java:186)\r\n\tio.netty.handler.codec.compression.Snappy.hash(Snappy.java:151)\r\n\tio.netty.handler.codec.compression.Snappy.encode(Snappy.java:97)\r\n\torg.redisson.codec.SnappyCodec$4.encode(SnappyCodec.java:84)\r\n\torg.redisson.RedissonObject.encodeMapKey(RedissonObject.java:201)\r\n\torg.redisson.RedissonMapCache.getOperationAsync(RedissonMapCache.java:486)\r\n\torg.redisson.RedissonMap.getAsync(RedissonMap.java:611)\r\n\torg.redisson.RedissonMap.get(RedissonMap.java:251)\r\n#4:\r\n\tio.netty.buffer.AdvancedLeakAwareByteBuf.getByte(AdvancedLeakAwareByteBuf.java:150)\r\n\tio.netty.handler.codec.compression.Snappy.findMatchingLength(Snappy.java:188)\r\n\tio.netty.handler.codec.compression.Snappy.encode(Snappy.java:110)\r\n\torg.redisson.codec.SnappyCodec$4.encode(SnappyCodec.java:84)\r\n\torg.redisson.RedissonObject.encodeMapValue(RedissonObject.java:216)\r\n\torg.redisson.RedissonMapCache.fastPutOperationAsync(RedissonMapCache.java:1330)\r\n\torg.redisson.RedissonMap.fastPutAsync(RedissonMap.java:837)\r\n\torg.redisson.RedissonMap.fastPut(RedissonMap.java:857)\r\nCreated at:\r\n\tio.netty.util.ResourceLeakDetector.track(ResourceLeakDetector.java:237)\r\n\tio.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:331)\r\n\tio.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:181)\r\n\tio.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:167)\r\n\tio.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:101)\r\n\torg.redisson.codec.FstCodec$2.encode(FstCodec.java:83)\r\n\torg.redisson.codec.SnappyCodec$4.encode(SnappyCodec.java:82)\r\n\torg.redisson.RedissonObject.encodeMapKey(RedissonObject.java:201)\r\n\torg.redisson.RedissonMapCache.getOperationAsync(RedissonMapCache.java:486)\r\n\torg.redisson.RedissonMap.getAsync(RedissonMap.java:611)\r\n\torg.redisson.RedissonMap.get(RedissonMap.java:251)\r\n```", "url": "https://github.com/redisson/redisson/issues/1046", "user": "johnou", "labels": ["bug"], "created": "2017-09-12 19:46:04", "closed": "2017-09-13 07:12:45", "commits": {"a45a476bd372397477d238123ecfa1137eb3d5fc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a45a476bd372397477d238123ecfa1137eb3d5fc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["45236c4b4d477336f5aef021b2eba57f96d0a12e"], "nameRev": "a45a476bd372397477d238123ecfa1137eb3d5fc tags/redisson-2.10.3~2", "commitMessage": "ByteBufs are not released properly in SnappyCodec and LZ4Codec #1046\n", "commitDateTime": "2017-09-13 10:16:11", "authoredDateTime": "2017-09-13 10:16:11", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/LZ4Codec.java", "insertions": 26, "deletions": 15, "lines": 41}, {"filePath": "redisson/src/main/java/org/redisson/codec/SnappyCodec.java", "insertions": 13, "deletions": 5, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LZ4Codec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.LZ4Codec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.LZ4Codec.2.encode(java.lang.Object)", "TOT": 14, "UPD": 0, "INS": 2, "MOV": 12, "DEL": 0}]}, {"spoonFilePath": "SnappyCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.SnappyCodec.4.encode(java.lang.Object)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.SnappyCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.SnappyCodec.3.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a45a476bd372397477d238123ecfa1137eb3d5fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 39, "deletions": 20, "lines": 59, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 23, "UPD": 2, "INS": 5, "MOV": 16, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.SnappyCodec.3.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.codec.SnappyCodec", "org.redisson.codec.LZ4Codec.2.encode(java.lang.Object)", "org.redisson.codec.LZ4Codec", "org.redisson.codec.SnappyCodec.4.encode(java.lang.Object)"]}, {"title": "NullPointerException is thrown during cache deletion", "body": "We encountered an issue during deleting cache while using RedissonKeys.delete after upgrade Redisson from 2.2.16 to 2.3.0. I have verified same issue with latest version 2.10.1 as well as 3.5.0.\r\nMy unit test was very simple, the main thread keeps deleting 40 keys while another thread keeps setting the same.\r\n\r\nI am very curious why 2.2.16 does not have this issue. The only change I could find related to this is \"switched from io.netty.util.concurrent.Future to org.redisson.api.RFuture\". \r\nWell also surprisingly I could not find any same issue reported by anyone else.\r\n       \r\nThe exception information is like this:\r\n`14:32:32.773 [nioEventLoopGroup-2-2] WARN io.netty.util.concurrent.DefaultPromise - An exception was thrown by org.redisson.RedissonKeys$5.operationComplete()\r\njava.lang.NullPointerException: null\r\n    at org.redisson.RedissonKeys$5.operationComplete(RedissonKeys.java:240)                                                                                                                                                                                                                                   at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:488)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:427)\r\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:102)\r\n    at org.redisson.misc.RedissonPromise.setSuccess(RedissonPromise.java:45)\r\n    at org.redisson.command.CommandBatchService$2.operationComplete(CommandBatchService.java:176)                                                                                                                                                                                                             at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:488)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:427)\r\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:102)\r\n    at org.redisson.misc.RedissonPromise.setSuccess(RedissonPromise.java:45)\r\n    at org.redisson.command.CommandBatchService$5.operationComplete(CommandBatchService.java:290)                                                                                                                                                                                                             at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:507)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:486)\r\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:427)\r\n    at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:111)\r\n    at org.redisson.misc.RedissonPromise.trySuccess(RedissonPromise.java:56)                                                                                                                                                                                                                                  at org.redisson.client.handler.CommandDecoder.decodeCommandBatch(CommandDecoder.java:201)\r\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:125)\r\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\r\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\r\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\r\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\r\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\r\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\r\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\r\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\r\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:572)\r\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:513)\r\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:427)\r\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:399)\r\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\r\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n    at java.lang.Thread.run(Thread.java:745)`", "url": "https://github.com/redisson/redisson/issues/1039", "user": "wsfjy19914", "labels": ["bug"], "created": "2017-09-12 05:43:09", "closed": "2017-09-13 11:05:55", "commits": {"be1ac4b30433617d98101e750f96b8c4882661d8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "be1ac4b30433617d98101e750f96b8c4882661d8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8d65ddecd13d4905486eda73a4523f5c83b0d9c6"], "nameRev": "be1ac4b30433617d98101e750f96b8c4882661d8 tags/redisson-2.10.4~24", "commitMessage": "Fixed NPE in RedissonKeys #1039\n", "commitDateTime": "2017-09-13 14:09:48", "authoredDateTime": "2017-09-13 14:09:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonKeys.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.executeAsync(org.redisson.client.protocol.RedisStrictCommand,java.lang.String[]).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["be1ac4b30433617d98101e750f96b8c4882661d8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonKeys.executeAsync(org.redisson.client.protocol.RedisStrictCommand,java.lang.String[]).7.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "class 'LoadBalancerManager' in  version 2.10.1  may cause the NullpointException in method 'returnConnection'", "body": "i updated the version to 2.10.1 in my project.\r\nwhen i use **redissonClient.getBucket(\"thekey\").isExists()**,some exception happen:\r\n`java.lang.NullPointerException\r\n\tat org.redisson.connection.pool.ConnectionPool.returnConnection(ConnectionPool.java:441)\r\n\tat org.redisson.connection.pool.SlaveConnectionPool.returnConnection(SlaveConnectionPool.java:30)\r\n\tat org.redisson.connection.balancer.LoadBalancerManager.returnConnection(LoadBalancerManager.java:210)\r\n\tat org.redisson.connection.MasterSlaveEntry.releaseRead(MasterSlaveEntry.java:459)\r\n\tat org.redisson.connection.MasterSlaveConnectionManager.releaseRead(MasterSlaveConnectionManager.java:770)\r\n\tat org.redisson.command.CommandAsyncService$14.operationComplete(CommandAsyncService.java:732)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:500)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:479)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420)\r\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\r\n\tat org.redisson.misc.RedissonPromise.trySuccess(RedissonPromise.java:65)\r\n\tat org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:322)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:261)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:103)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)`\r\n\r\ni found the code in class LoadBalancerManager\r\n\r\n```java\r\n   public void returnConnection(RedisConnection connection) {\r\n        ClientConnectionsEntry entry = ip2Entry.get(connection.getRedisClient().getAddr().getAddress().getHostAddress());\r\n        slaveConnectionPool.returnConnection(entry, connection);\r\n    }\r\n```\r\nthe code **connection.getRedisClient().getAddr().getAddress().getHostAddress()** returns ip address, but the map **ip2Entry** need the key: ip + port\u3002so null is returned", "url": "https://github.com/redisson/redisson/issues/1031", "user": "bryan31", "labels": ["bug"], "created": "2017-09-06 09:54:13", "closed": "2017-09-06 10:51:09", "commits": {"f6facf08a868739db2291cc4b31c0f36262a05df": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "39c4b295651f93e06259045a706663b56d5e28ab": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f6facf08a868739db2291cc4b31c0f36262a05df", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e606419633c66063b67c3459d68e8b69dbeff3d7"], "nameRev": "f6facf08a868739db2291cc4b31c0f36262a05df tags/redisson-2.10.2~14", "commitMessage": "Fixed NPE in LoadBalancerManager. #1031\n", "commitDateTime": "2017-09-06 13:54:43", "authoredDateTime": "2017-09-06 13:54:43", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 10, "deletions": 6, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.getConnection(org.redisson.client.protocol.RedisCommand,java.net.InetSocketAddress)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.returnPubSubConnection(org.redisson.client.RedisPubSubConnection)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.returnConnection(org.redisson.client.RedisConnection)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.changeType(java.net.InetSocketAddress,org.redisson.api.NodeType)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.contains(java.net.InetSocketAddress)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.convert(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.convert(java.net.URI)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "39c4b295651f93e06259045a706663b56d5e28ab", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3d91c7b4ad0e5b8d01e68cfbc66e60d6e149db82"], "nameRev": "39c4b295651f93e06259045a706663b56d5e28ab tags/redisson-2.10.2~12", "commitMessage": "\tFixed NPE in LoadBalancerManager. #1031\n", "commitDateTime": "2017-09-06 14:00:37", "authoredDateTime": "2017-09-06 14:00:37", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.returnPubSubConnection(org.redisson.client.RedisPubSubConnection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.returnConnection(org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f6facf08a868739db2291cc4b31c0f36262a05df", "39c4b295651f93e06259045a706663b56d5e28ab"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 12, "deletions": 8, "lines": 20, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 22, "UPD": 5, "INS": 5, "MOV": 7, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/balancer"], "changesInPackagesSPOON": ["org.redisson.connection.balancer.LoadBalancerManager.returnConnection(org.redisson.client.RedisConnection)", "org.redisson.connection.balancer.LoadBalancerManager.returnPubSubConnection(org.redisson.client.RedisPubSubConnection)", "org.redisson.connection.balancer.LoadBalancerManager.convert(java.net.InetSocketAddress)", "org.redisson.connection.balancer.LoadBalancerManager.convert(java.net.URI)", "org.redisson.connection.balancer.LoadBalancerManager.getConnection(org.redisson.client.protocol.RedisCommand,java.net.InetSocketAddress)", "org.redisson.connection.balancer.LoadBalancerManager.contains(java.net.InetSocketAddress)", "org.redisson.connection.balancer.LoadBalancerManager.changeType(java.net.InetSocketAddress,org.redisson.api.NodeType)"]}, {"title": "Connection could be in closed state during reconnection process for blocking queue", "body": "", "url": "https://github.com/redisson/redisson/issues/1021", "user": "mrniko", "labels": ["bug"], "created": "2017-09-02 08:50:15", "closed": "2017-09-02 08:51:00", "commits": {"4867eff2a4ceb81e1c9653a599db0dd5eac450bc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4867eff2a4ceb81e1c9653a599db0dd5eac450bc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8fccb51dd15bbf065d5474cac83764373e6e3e9f"], "nameRev": "4867eff2a4ceb81e1c9653a599db0dd5eac450bc tags/redisson-2.10.2~24", "commitMessage": "Connection could be in closed state during reconnection process for blocking queue #1021\n", "commitDateTime": "2017-09-02 11:54:18", "authoredDateTime": "2017-09-02 11:54:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionWatchdog.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.tryReconnect(org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4867eff2a4ceb81e1c9653a599db0dd5eac450bc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 4, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.ConnectionWatchdog.tryReconnect(org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "RAtomicDouble.decrementAndGet()\u65b9\u6cd5\u4f1a\u629b\u51fa\u5f02\u5e38RedisException: ERR value is not an integer or out of range.", "body": "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u62a5\u9519\u7684\u539f\u56e0\u5e94\u8be5\u662fredis\u6ca1\u6709\u63d0\u4f9bDECRBYFLOAT\u547d\u4ee4\u3002\r\n\u4f46\u662f\u6267\u884cgetAndDecrement()\u65b9\u6cd5\u662f\u4e0d\u4f1a\u62a5\u9519\u7684\u3002\r\n\r\n\u6211\u770b\u4e86\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u7684\u5b9e\u73b0\u5dee\u5f02\r\ndecrementAndGet()\u65b9\u6cd5\u4f7f\u7528\u7684\u662fDECR\u547d\u4ee4\r\ngetAndDecrement()\u65b9\u6cd5\u5219\u4f7f\u7528\u7684\u662fINCRBYFLOAT -1.0\u7684\u65b9\u5f0f\r\n\r\n\u60f3\u95ee\u4e00\u4e0b\u8fd9\u91cc\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e3a\u4ec0\u4e48\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u8fd9\u7b97\u4e0d\u7b97\u662f\u4e00\u4e2abug\u5462\uff1f\r\n\r\n\u6e90\u7801\u4f20\u9001\u95e8\uff1ahttps://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/RedissonAtomicDouble.java\r\ndecrementAndGet() 71-79\u884c\r\ngetAndDecrement() 137-145\u884c", "url": "https://github.com/redisson/redisson/issues/1020", "user": "JackEggie", "labels": ["bug"], "created": "2017-09-01 06:50:25", "closed": "2017-09-01 07:39:31", "commits": {"418f32f6ad9ccbe2d90d70c882684dc9446004ac": {"commitGHEventType": "closed", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "418f32f6ad9ccbe2d90d70c882684dc9446004ac", "commitGHEventType": "closed", "commitUser": "mrniko", "commitParents": ["98aa72d0465813c90c93af4dc960800d3731c7b3"], "nameRev": "418f32f6ad9ccbe2d90d70c882684dc9446004ac tags/redisson-2.10.2~31", "commitMessage": "RAtomicDouble.decrementAndGet() fixed  #1020\n", "commitDateTime": "2017-09-01 10:43:03", "authoredDateTime": "2017-09-01 10:43:03", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonAtomicDouble.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonAtomicDouble.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonAtomicDouble.decrementAndGetAsync()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["418f32f6ad9ccbe2d90d70c882684dc9446004ac"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonAtomicDouble.decrementAndGetAsync()"]}, {"title": "RemoteService invoke very fast,the remoteServer register point has a warn,what wrong is it?", "body": "I do a RemoteService invoke test,it report a warn,then the remote client wait timeout.what wrong is it?\r\n\r\n```code\r\n2017-08-11 15:43:40,699 [redisson-3-2] WARN  [io.netty.util.concurrent.DefaultPromise] - An exception was thrown by org.redisson.command.CommandAsyncService$13.operationComplete()\r\njava.lang.NullPointerException: null\r\n\tat org.redisson.command.CommandAsyncService$13.operationComplete(CommandAsyncService.java:707) ~[redisson-3.5.0.jar:?]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507) [netty-common-4.1.14.Final.jar:4.1.14.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:500) [netty-common-4.1.14.Final.jar:4.1.14.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:479) [netty-common-4.1.14.Final.jar:4.1.14.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420) [netty-common-4.1.14.Final.jar:4.1.14.Final]\r\n\tat io.netty.util.concurrent.DefaultPromise.cancel(DefaultPromise.java:315) [netty-common-4.1.14.Final.jar:4.1.14.Final]\r\n\tat org.redisson.misc.RedissonPromise.cancel(RedissonPromise.java:228) [redisson-3.5.0.jar:?]\r\n\tat org.redisson.RedissonRemoteService.invokeMethod(RedissonRemoteService.java:287) [redisson-3.5.0.jar:?]\r\n\tat org.redisson.RedissonRemoteService.access$400(RedissonRemoteService.java:59) [redisson-3.5.0.jar:?]\r\n\tat org.redisson.RedissonRemoteService$2.run(RedissonRemoteService.java:239) [redisson-3.5.0.jar:?]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_144]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_144]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_144]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_144]\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) [netty-common-4.1.14.Final.jar:4.1.14.Final]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]\r\n```", "url": "https://github.com/redisson/redisson/issues/1000", "user": "wilesun", "labels": ["bug"], "created": "2017-08-11 07:48:08", "closed": "2017-10-25 12:12:19", "commits": {}, "ttf": 75.00027777777778, "commitsDetails": []}, {"title": "Storing Redisson Live Object in RSetCache", "body": "Hi,\r\n\r\nIs it possible to store Redisson Live Object in RSetCache such that when the live object expires, it is evicted from RSetCache as well? \r\nAlso can we access the Live Objects from RSetCache?  While iterating over the live objects in RSetCache, I tried to assign the object to an instance of Live Object Class but I got an error stating that I cannot typecast object of type RedissonReference to object of type Class X. ", "url": "https://github.com/redisson/redisson/issues/998", "user": "elitalobo", "labels": ["bug"], "created": "2017-08-05 14:08:30", "closed": "2017-09-20 16:45:55", "commits": {"d9fb14051b72c21e473d4e971dc5a0bbc4c60576": {"commitGHEventType": "referenced", "commitUser": "jackygurui"}, "1664bbe777296ecc0d2cdb7c128faf25a0f10a46": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 46.000277777777775, "commitsDetails": [{"commitHash": "d9fb14051b72c21e473d4e971dc5a0bbc4c60576", "commitGHEventType": "referenced", "commitUser": "jackygurui", "commitParents": ["7d6fd352df088b1f07b79bcd1e573bad4dcb0a18"], "nameRev": "d9fb14051b72c21e473d4e971dc5a0bbc4c60576 tags/redisson-2.10.4~6^2^2", "commitMessage": "To fix issue #998\n", "commitDateTime": "2017-09-20 17:38:44", "authoredDateTime": "2017-09-20 17:38:44", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 155, "deletions": 133, "lines": 288}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReferenceTest.java", "insertions": 113, "deletions": 12, "lines": 125}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "1664bbe777296ecc0d2cdb7c128faf25a0f10a46", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7d6fd352df088b1f07b79bcd1e573bad4dcb0a18", "d9fb14051b72c21e473d4e971dc5a0bbc4c60576"], "nameRev": "1664bbe777296ecc0d2cdb7c128faf25a0f10a46 tags/redisson-2.10.4~6^2", "commitMessage": "Merge pull request #1068 from redisson/fix-RedissonReference-in-RSetCache\n\nTo fix issue #998", "commitDateTime": "2017-09-20 19:42:17", "authoredDateTime": "2017-09-20 19:42:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 155, "deletions": 133, "lines": 288}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReferenceTest.java", "insertions": 113, "deletions": 12, "lines": 125}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["d9fb14051b72c21e473d4e971dc5a0bbc4c60576"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 155, "deletions": 133, "lines": 288, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command"]}, {"title": "Class org.redisson.spring.cache.NullValue does not implement Serializable or externalizable", "body": "Hi team:\r\n\r\nredisson throw an error when I put a \"null value\" into cache with fst codec, but works fine when I use kryo codec.\r\n\r\nRedisson: 3.4.2\r\nFST: 2.51\r\nWin7 64bit\r\nOracle jdk 1.8.0_111\r\nSpring cache: 4.3.9\r\n\r\n```\r\n15:06:35.728 [redisson-netty-1-3] WARN  io.netty.channel.AbstractChannelHandlerContext - Failed to mark a promise as failure because it has failed already: DefaultChannelPromise@169f8a31(failure: io.netty.handler.codec.EncoderException: java.lang.RuntimeException: Class org.redisson.spring.cache.NullValue does not implement Serializable or externalizable), unnotified cause: io.netty.handler.codec.EncoderException: java.lang.RuntimeException: Class org.redisson.spring.cache.NullValue does not implement Serializable or externalizable\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:125)\r\n\tat org.redisson.client.handler.CommandEncoder.write(CommandEncoder.java:63)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723)\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:120)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723)\r\n\tat io.netty.channel.ChannelOutboundHandlerAdapter.write(ChannelOutboundHandlerAdapter.java:104)\r\n\tat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:76)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:801)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:814)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:794)\r\n\tat io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1027)\r\n\tat io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:301)\r\n\tat org.redisson.client.handler.CommandsQueue.sendData(CommandsQueue.java:102)\r\n\tat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:79)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.access$1900(AbstractChannelHandlerContext.java:38)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1089)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1136)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1078)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.RuntimeException: Class org.redisson.spring.cache.NullValue does not implement Serializable or externalizable\r\n\tat org.nustaq.serialization.FSTClazzInfo.<init>(FSTClazzInfo.java:142)\r\n\tat org.nustaq.serialization.FSTClazzInfoRegistry.getCLInfo(FSTClazzInfoRegistry.java:130)\r\n\tat org.nustaq.serialization.FSTObjectOutput.getFstClazzInfo(FSTObjectOutput.java:523)\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObjectWithContext(FSTObjectOutput.java:416)\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObjectInternal(FSTObjectOutput.java:327)\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObject(FSTObjectOutput.java:294)\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObject(FSTObjectOutput.java:204)\r\n\tat org.redisson.codec.FstCodec$2.encode(FstCodec.java:84)\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:103)\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:45)\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:107)\r\n\t... 32 more\r\n\r\nio.netty.handler.codec.EncoderException: java.lang.RuntimeException: Class org.redisson.spring.cache.NullValue does not implement Serializable or externalizable\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:125) ~[netty-codec-4.1.10.Final.jar:4.1.10.Final]\r\n\tat org.redisson.client.handler.CommandEncoder.write(CommandEncoder.java:63) ~[redisson-3.4.2.jar:?]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:120) ~[netty-codec-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.ChannelOutboundHandlerAdapter.write(ChannelOutboundHandlerAdapter.java:104) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:76) ~[redisson-3.4.2.jar:?]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:801) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:814) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:794) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1027) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:301) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat org.redisson.client.handler.CommandsQueue.sendData(CommandsQueue.java:102) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:79) ~[redisson-3.4.2.jar:?]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.access$1900(AbstractChannelHandlerContext.java:38) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1089) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1136) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1078) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144) ~[netty-common-4.1.10.Final.jar:4.1.10.Final]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]\r\nCaused by: java.lang.RuntimeException: Class org.redisson.spring.cache.NullValue does not implement Serializable or externalizable\r\n\tat org.nustaq.serialization.FSTClazzInfo.<init>(FSTClazzInfo.java:142) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTClazzInfoRegistry.getCLInfo(FSTClazzInfoRegistry.java:130) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.getFstClazzInfo(FSTObjectOutput.java:523) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObjectWithContext(FSTObjectOutput.java:416) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObjectInternal(FSTObjectOutput.java:327) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObject(FSTObjectOutput.java:294) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObject(FSTObjectOutput.java:204) ~[fst-2.51.jar:?]\r\n\tat org.redisson.codec.FstCodec$2.encode(FstCodec.java:84) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:103) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:45) ~[redisson-3.4.2.jar:?]\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:107) ~[netty-codec-4.1.10.Final.jar:4.1.10.Final]\r\n\t... 32 more\r\n15:06:35.728 [qtp1225358173-57] ERROR controller.handler.ControllerExceptionHandler - handle exception! { dbId: 4a8b361cdcd6e1b057c9d9a65901bd9dc6bb5d19e619108dfad4343d239c6d0a, userId: 7a5afbdf44604531957f2969e877de09 }\r\norg.redisson.client.RedisException: Unexpected exception while processing command\r\n\tat org.redisson.command.CommandAsyncService.convertException(CommandAsyncService.java:322) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:165) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.RedissonObject.get(RedissonObject.java:69) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.RedissonMapCache.fastPut(RedissonMapCache.java:477) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.spring.cache.RedissonCache.put(RedissonCache.java:97) ~[redisson-3.4.2.jar:?]\r\n\tat com.neweggtech.server.commons.spring.BufferedSpringCache.put(BufferedSpringCache.java:56) ~[neweggdbs-commons-1.0.146.0.jar:?]\r\n\tat org.springframework.cache.interceptor.AbstractCacheInvoker.doPut(AbstractCacheInvoker.java:85) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.cache.interceptor.CacheAspectSupport$CachePutRequest.apply(CacheAspectSupport.java:784) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:417) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:327) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:61) ~[spring-context-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat cache.impl.DistributedCacheImpl$$EnhancerBySpringCGLIB$$2ad062b6.getCachedGlobalItemStyle(<generated>) ~[bin/:?]\r\n\tat service.impl.FileServiceImpl.getFile(FileServiceImpl.java:239) ~[bin/:?]\r\n\tat service.impl.FileServiceImpl$$FastClassBySpringCGLIB$$e163a904.invoke(<generated>) ~[bin/:?]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat service.impl.FileServiceImpl$$EnhancerBySpringCGLIB$$928ee3ca.getFile(<generated>) ~[bin/:?]\r\n\tat controller.impl.FileControllerImpl.getFile(FileControllerImpl.java:84) ~[bin/:?]\r\n\tat controller.impl.FileControllerImpl$$FastClassBySpringCGLIB$$9e52f6d4.invoke(<generated>) ~[bin/:?]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat aop.impl.ControllerAspect.executeLocalRequest(ControllerAspect.java:161) ~[bin/:?]\r\n\tat aop.impl.ControllerAspect.processRequest(ControllerAspect.java:143) ~[bin/:?]\r\n\tat aop.impl.ControllerAspect.processRequest(ControllerAspect.java:125) ~[bin/:?]\r\n\tat aop.impl.ControllerAspect.controllerAround(ControllerAspect.java:77) ~[bin/:?]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_111]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_111]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673) ~[spring-aop-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat controller.impl.FileControllerImpl$$EnhancerBySpringCGLIB$$5a019369.getFile(<generated>) ~[bin/:?]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_111]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_111]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_111]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_111]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:755) ~[javax.servlet.jar:?]\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.9.RELEASE.jar:4.3.9.RELEASE]\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:848) ~[javax.servlet.jar:?]\r\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684) ~[?:?]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496) ~[?:?]\r\n\tat com.neweggtech.server.commons.web.filter.impl.LoggingFilter.doFilter(LoggingFilter.java:56) ~[neweggdbs-commons-web-1.0.146.0.jar:?]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) ~[?:?]\r\n\tat com.neweggtech.server.commons.web.filter.impl.CorsFilter.doFilter(CorsFilter.java:56) ~[neweggdbs-commons-web-1.0.146.0.jar:?]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) ~[?:?]\r\n\tat net.bull.javamelody.MonitoringFilter.doFilter(MonitoringFilter.java:230) ~[javamelody-core-1.67.0.jar:1.67.0]\r\n\tat net.bull.javamelody.MonitoringFilter.doFilter(MonitoringFilter.java:202) ~[javamelody-core-1.67.0.jar:1.67.0]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1467) ~[?:?]\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499) ~[?:?]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137) ~[?:?]\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557) ~[?:?]\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231) ~[?:?]\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086) ~[?:?]\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428) ~[?:?]\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193) ~[?:?]\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020) ~[?:?]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135) ~[?:?]\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116) ~[?:?]\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:370) ~[?:?]\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494) ~[?:?]\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:982) ~[?:?]\r\n\tat org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1043) ~[?:?]\r\n\tat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865) ~[?:?]\r\n\tat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240) ~[?:?]\r\n\tat org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82) ~[?:?]\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667) ~[?:?]\r\n\tat org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52) ~[?:?]\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608) ~[?:?]\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543) ~[?:?]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]\r\nCaused by: java.lang.RuntimeException: Class org.redisson.spring.cache.NullValue does not implement Serializable or externalizable\r\n\tat org.nustaq.serialization.FSTClazzInfo.<init>(FSTClazzInfo.java:142) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTClazzInfoRegistry.getCLInfo(FSTClazzInfoRegistry.java:130) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.getFstClazzInfo(FSTObjectOutput.java:523) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObjectWithContext(FSTObjectOutput.java:416) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObjectInternal(FSTObjectOutput.java:327) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObject(FSTObjectOutput.java:294) ~[fst-2.51.jar:?]\r\n\tat org.nustaq.serialization.FSTObjectOutput.writeObject(FSTObjectOutput.java:204) ~[fst-2.51.jar:?]\r\n\tat org.redisson.codec.FstCodec$2.encode(FstCodec.java:84) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:103) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.client.handler.CommandEncoder.encode(CommandEncoder.java:45) ~[redisson-3.4.2.jar:?]\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:107) ~[netty-codec-4.1.10.Final.jar:4.1.10.Final]\r\n\tat org.redisson.client.handler.CommandEncoder.write(CommandEncoder.java:63) ~[redisson-3.4.2.jar:?]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:120) ~[netty-codec-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:816) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:723) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.ChannelOutboundHandlerAdapter.write(ChannelOutboundHandlerAdapter.java:104) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:76) ~[redisson-3.4.2.jar:?]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:801) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:814) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:794) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1027) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:301) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat org.redisson.client.handler.CommandsQueue.sendData(CommandsQueue.java:102) ~[redisson-3.4.2.jar:?]\r\n\tat org.redisson.client.handler.CommandsQueue.write(CommandsQueue.java:79) ~[redisson-3.4.2.jar:?]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:738) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:730) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.access$1900(AbstractChannelHandlerContext.java:38) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:1089) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:1136) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:1078) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462) ~[netty-transport-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.10.Final.jar:4.1.10.Final]\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144) ~[netty-common-4.1.10.Final.jar:4.1.10.Final]\r\n\t... 1 more\r\n```", "url": "https://github.com/redisson/redisson/issues/981", "user": "h920526", "labels": ["bug"], "created": "2017-07-21 07:19:10", "closed": "2017-07-21 09:14:48", "commits": {"8eda8c052d84379d211b935cf55e2df86152156c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8eda8c052d84379d211b935cf55e2df86152156c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["69d7aff15ef89668952539bc107b2f13fa8590ce"], "nameRev": "8eda8c052d84379d211b935cf55e2df86152156c tags/redisson-2.10.0~6", "commitMessage": "Fixed - NullValue does not implement Serializable #981\n", "commitDateTime": "2017-07-21 12:17:25", "authoredDateTime": "2017-07-21 12:17:25", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/NullValue.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NullValue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.NullValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8eda8c052d84379d211b935cf55e2df86152156c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/cache"], "changesInPackagesSPOON": ["org.redisson.spring.cache.NullValue"]}, {"title": "RLocalCachedMap doesn't work with non-json and non-binary codecs", "body": "", "url": "https://github.com/redisson/redisson/issues/976", "user": "mrniko", "labels": ["bug"], "created": "2017-07-20 07:31:44", "closed": "2017-07-20 07:51:47", "commits": {"69d7aff15ef89668952539bc107b2f13fa8590ce": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "69d7aff15ef89668952539bc107b2f13fa8590ce", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1b89afbd6f88a9c5179e23f8cb345ca32cc76452"], "nameRev": "69d7aff15ef89668952539bc107b2f13fa8590ce tags/redisson-2.10.0~7", "commitMessage": "RLocalCachedMap doesn't work with non-json and non-binary codecs #976\n", "commitDateTime": "2017-07-20 10:54:29", "authoredDateTime": "2017-07-20 10:54:29", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 43, "deletions": 1, "lines": 44}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLocalCachedMapTest.java", "insertions": 27, "deletions": 1, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.encode(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.addListeners(java.lang.String,org.redisson.api.LocalCachedMapOptions,org.redisson.api.RedissonClient)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLocalCachedMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMapTest.testInvalidationOnUpdateNonBinaryCodec()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["69d7aff15ef89668952539bc107b2f13fa8590ce"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 43, "deletions": 1, "lines": 44, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap", "org.redisson.RedissonLocalCachedMap.addListeners(java.lang.String,org.redisson.api.LocalCachedMapOptions,org.redisson.api.RedissonClient)", "org.redisson.RedissonLocalCachedMap.encode(java.lang.Object)"]}, {"title": "tomcat session replication with non-sticky session not working, multiple issues", "body": "Hi, \r\nI'm trying to setup a Tomcat 8 cluster with 2 nodes without sticky session.\r\nIssues:\r\n1.java.lang.IllegalStateException: setAttribute: Session [F766FB4EAE8FE29451215A67300EF46A] has already been invalidated\r\n2. ```\r\nCaused by: java.io.IOException: java.lang.ClassNotFoundException: xxx.dto.PermissionDTO\r\n\tat org.redisson.codec.SerializationCodec$1.decode(SerializationCodec.java:53)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:259)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:289)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(CommandDecoder.java:154)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:101)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n```\r\n\r\n\r\n3. From RedissonSessionManager and RedissonSession i can't understand how this solution replicates in real time( no sticky sessions) the same session from one node to another.I was expecting that method getAttribute should use the map also. If someone can explain this.\r\n\r\nAnd a feature if it is possible:\r\ncan we filter some session attributes from going into RMap?\r\n\r\nThanks.\r\n ", "url": "https://github.com/redisson/redisson/issues/974", "user": "gabydinu", "labels": ["bug"], "created": "2017-07-19 13:23:45", "closed": "2017-08-29 10:27:47", "commits": {"90f1d528ca907f91b21bb1f3d595666151ce3987": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "056adfa7d5288e2864443b937cdc3cb9234cc9ae": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "b573eadd80fa8969b56fa9400e1458af6dbacc10": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "e42c9c1c2647b1ae498a479f21ca3770ad598ee7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 40.000277777777775, "commitsDetails": [{"commitHash": "90f1d528ca907f91b21bb1f3d595666151ce3987", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8eda8c052d84379d211b935cf55e2df86152156c"], "nameRev": "90f1d528ca907f91b21bb1f3d595666151ce3987 tags/redisson-2.10.0~5", "commitMessage": "Fixed - ContextClassLoader should be used by Redisson Codec for Tomcat session's object serialization. #974\n", "commitDateTime": "2017-07-25 12:22:52", "authoredDateTime": "2017-07-25 12:22:52", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "056adfa7d5288e2864443b937cdc3cb9234cc9ae", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["25468044a6dfc93c5399cd8a705919cdc33fdaff"], "nameRev": "056adfa7d5288e2864443b937cdc3cb9234cc9ae tags/redisson-2.10.1~14", "commitMessage": "RedissonSession attributes should be read in first order to avoid invalidated session exception. #974\n", "commitDateTime": "2017-07-28 16:05:23", "authoredDateTime": "2017-07-28 16:05:23", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 24, "deletions": 19, "lines": 43}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 24, "deletions": 19, "lines": 43}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 24, "deletions": 19, "lines": 43}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 11, "deletions": 1, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.load()", "TOT": 20, "UPD": 1, "INS": 0, "MOV": 12, "DEL": 7}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.load(java.util.Map)", "TOT": 22, "UPD": 0, "INS": 22, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b573eadd80fa8969b56fa9400e1458af6dbacc10", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b93cba087b80fea1c164a91e36ec6858d4234384"], "nameRev": "b573eadd80fa8969b56fa9400e1458af6dbacc10 tags/redisson-2.10.1~10", "commitMessage": "Added readMode property for RedissonSessionManager #974\n", "commitDateTime": "2017-08-11 11:19:08", "authoredDateTime": "2017-08-11 11:19:08", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 13, "deletions": 1, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.createEmptySession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.ReadMode", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.getReadMode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.setReadMode(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e42c9c1c2647b1ae498a479f21ca3770ad598ee7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5519fdec48a609da77eae07671a7972910708e5e"], "nameRev": "e42c9c1c2647b1ae498a479f21ca3770ad598ee7 tags/redisson-2.10.4~4", "commitMessage": "Fixed - RedissonSession.setValid(false) can recreate Tomcat session. Session validity checking improved. #974\n", "commitDateTime": "2017-09-26 16:56:44", "authoredDateTime": "2017-09-26 16:56:44", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.setValid(boolean)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["90f1d528ca907f91b21bb1f3d595666151ce3987", "056adfa7d5288e2864443b937cdc3cb9234cc9ae", "b573eadd80fa8969b56fa9400e1458af6dbacc10", "e42c9c1c2647b1ae498a479f21ca3770ad598ee7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 214, "deletions": 69, "lines": 283, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 67, "UPD": 2, "INS": 41, "MOV": 16, "DEL": 8, "spoonFilesChanged": 2, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSessionManager.findSession(java.lang.String)", "org.redisson.tomcat.RedissonSession.load()", "org.redisson.tomcat.RedissonSessionManager.setReadMode(java.lang.String)", "org.redisson.tomcat.RedissonSessionManager", "org.redisson.tomcat.RedissonSession", "org.redisson.tomcat.RedissonSession.load(java.util.Map)", "org.redisson.tomcat.RedissonSessionManager.getReadMode()", "org.redisson.tomcat.RedissonSession.setValid(boolean)", "org.redisson.tomcat.RedissonSessionManager.createEmptySession()", "org.redisson.tomcat.RedissonSession.getAttribute(java.lang.String)", "org.redisson.tomcat.RedissonSessionManager.startInternal()", "org.redisson.tomcat.RedissonSessionManager.ReadMode"]}, {"title": "Tomcat does not delete keys on Redis when session expires.", "body": "Hello,\r\n\r\nI'm using Redisson with two Tomcat, each one in a virtual instance behind a Load Balancer on Azure, using Azure Redis PaaS as centralized database.\r\n\r\nEverything works great, both Tomcat can create and store session on Redis (I can easily see keys/values serialized on Redis) and both can retrieve the stored session correctly.\r\n\r\nMy issue/question is: should Tomcat be able to delete keys automatically from Redis when the session expires? The sessionDestroyed() method on the SessionListener in correctly invoked, so I'm sure that Tomcat is destroying the session internally, but keys keep staying on Redis. I was assuming that Tomcat, through Redisson, whould be able to delete keys from Redis as well.\r\n\r\nThanks.\r\nIP", "url": "https://github.com/redisson/redisson/issues/972", "user": "iakko", "labels": ["bug"], "created": "2017-07-19 08:36:57", "closed": "2017-07-19 09:38:47", "commits": {"3c0449eda7d426a879a10f6121d3c214525c54aa": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3c0449eda7d426a879a10f6121d3c214525c54aa", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cd4a848a42dc78f51d4e57427f27e2e280e073bc"], "nameRev": "3c0449eda7d426a879a10f6121d3c214525c54aa tags/redisson-2.10.0~9", "commitMessage": "Fixed - Tomcat RedissonSessionManager doesn't remove session on invalidation/expiration. #972\n", "commitDateTime": "2017-07-19 12:41:45", "authoredDateTime": "2017-07-19 12:41:45", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/java/org/redisson/tomcat/RedissonSessionManagerTest.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/test/java/org/redisson/tomcat/TomcatServer.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManagerTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManagerTest.testInvalidate()", "TOT": 10, "UPD": 0, "INS": 6, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.delete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.remove(org.apache.catalina.Session)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.remove(org.apache.catalina.Session,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TomcatServer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.TomcatServer", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3c0449eda7d426a879a10f6121d3c214525c54aa"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 7, "lines": 27, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.TomcatServer", "org.redisson.tomcat.RedissonSession.delete()", "org.redisson.tomcat.RedissonSessionManager.remove(org.apache.catalina.Session)", "org.redisson.tomcat.RedissonSessionManager.remove(org.apache.catalina.Session,boolean)"]}, {"title": "reactor/fn/Supplier : Unsupported major.minor version 51.0 (unable to load class reactor.fn.Supplier)", "body": "When i use redisson 2.9.4 , i find this error in logs\r\n\r\n```\r\njava.lang.UnsupportedClassVersionError: reactor/fn/Supplier : Unsupported major.minor version 51.0 (unable to load class reactor.fn.Supplier)\r\n\tat org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:2948)\r\n\tat org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:1208)\r\n\tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1688)\r\n\tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1569)\r\n\tat org.redisson.RedissonBatch.<init>(RedissonBatch.java:68)\r\n\tat org.redisson.Redisson.createBatch(Redisson.java:571)\r\n```\r\n", "url": "https://github.com/redisson/redisson/issues/969", "user": "cbc356326350", "labels": ["bug"], "created": "2017-07-18 06:48:28", "closed": "2017-07-19 08:28:31", "commits": {"cd4a848a42dc78f51d4e57427f27e2e280e073bc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "cd4a848a42dc78f51d4e57427f27e2e280e073bc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0994aee746a2397f97a262cd6ff7cf2e6223254e"], "nameRev": "cd4a848a42dc78f51d4e57427f27e2e280e073bc tags/redisson-2.10.0~10", "commitMessage": "CommandReactiveBatchService implemented as separate batchService for Reactive objects. #969\n", "commitDateTime": "2017-07-19 11:31:34", "authoredDateTime": "2017-07-19 11:31:34", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 8, "deletions": 36, "lines": 44}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandReactiveBatchService.java", "insertions": 119, "deletions": 0, "lines": 119}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonBatchReactive.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsyncVoid(boolean,long,int,long)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsyncVoid(boolean,long,int,long).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync(long,int,long).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.checkConnectionFuture(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,org.redisson.misc.RPromise,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean,long).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.checkWriteFuture(org.redisson.misc.RPromise,org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,io.netty.channel.ChannelFuture,boolean,long).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).5.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.checkConnectionFuture(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,org.redisson.misc.RPromise,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean,long).9.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync(long,int,long).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).7.operationComplete(io.netty.util.concurrent.Future).1.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.reactive(reactor.fn.Supplier)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandBatchService.executeAsync(long,int,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandReactiveBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandReactiveBatchService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonBatchReactive", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cd4a848a42dc78f51d4e57427f27e2e280e073bc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 130, "deletions": 39, "lines": 169, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 24, "UPD": 19, "INS": 1, "MOV": 0, "DEL": 4, "spoonFilesChanged": 3, "spoonMethodsChanged": 20}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/reactive"], "changesInPackagesSPOON": ["org.redisson.command.CommandBatchService.checkWriteFuture(org.redisson.misc.RPromise,org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,io.netty.channel.ChannelFuture,boolean,long).8", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).5", "org.redisson.command.CommandBatchService", "org.redisson.command.CommandBatchService.checkConnectionFuture(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,org.redisson.misc.RPromise,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean,long).9.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.reactive.RedissonBatchReactive", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).5.run(io.netty.util.Timeout)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).7", "org.redisson.command.CommandBatchService.executeAsync(long,int,long)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).6", "org.redisson.command.CommandBatchService.executeAsync(long,int,long).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.command.CommandBatchService.executeAsyncVoid(boolean,long,int,long).2", "org.redisson.command.CommandReactiveBatchService", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.command.CommandBatchService.executeAsync(long,int,long).4", "org.redisson.command.CommandBatchService.reactive(reactor.fn.Supplier)", "org.redisson.command.CommandBatchService.checkConnectionFuture(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,org.redisson.misc.RPromise,org.redisson.command.AsyncDetails,org.redisson.api.RFuture,boolean,long).9", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).7.operationComplete(io.netty.util.concurrent.Future).1.run(io.netty.util.Timeout)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long)", "org.redisson.command.CommandBatchService.executeAsyncVoid(boolean,long,int,long)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,org.redisson.misc.RPromise,java.util.concurrent.atomic.AtomicInteger,int,boolean,long,int,long).7.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "java.net.URISyntaxException: Illegal character in scheme name at index 0: []r[]e[]d[]i[]s[]:[]/[]/[]:[]0[]", "body": "Hi team,\r\n\r\n```\r\n        Config config = new Config();\r\n        config.useClusterServers().addNodeAddress(\"redis://10.16.179.14:6379\", \"redis://10.16.179.30:6379\", \"redis://10.16.179.31:6379\",\r\n                \"redis://10.16.179.24:6379\", \"redis://10.16.179.16:6379\", \"redis://10.16.179.15:6379\");\r\n        RedissonClient redisson = Redisson.create(config);\r\n        redisson.shutdown();\r\n```\r\n\r\nRedisson 3.4.4\r\nWindows 7 64bit\r\nOracle jdk 1.8.0_111\r\n\r\nIt throw an error, but it works fine @3.4.2 without prefix (redis://)\r\n```\r\nException in thread \"main\" org.redisson.client.RedisConnectionException: Can't connect to servers!\r\n\tat org.redisson.cluster.ClusterConnectionManager.<init>(ClusterConnectionManager.java:139)\r\n\tat org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:237)\r\n\tat org.redisson.Redisson.<init>(Redisson.java:116)\r\n\tat org.redisson.Redisson.create(Redisson.java:155)\r\n\tat redis.main(redis.java:11)\r\nCaused by: org.redisson.client.RedisException: Unexpected exception while processing command\r\n\tat org.redisson.client.RedisConnection.await(RedisConnection.java:159)\r\n\tat org.redisson.client.RedisConnection.sync(RedisConnection.java:183)\r\n\tat org.redisson.client.RedisConnection.sync(RedisConnection.java:169)\r\n\tat org.redisson.cluster.ClusterConnectionManager.<init>(ClusterConnectionManager.java:93)\r\n\t... 4 more\r\nCaused by: java.lang.IllegalArgumentException: Illegal character in scheme name at index 0: []r[]e[]d[]i[]s[]:[]/[]/[]:[]0[]\r\n\tat java.net.URI.create(URI.java:852)\r\n\tat org.redisson.misc.URIBuilder.create(URIBuilder.java:37)\r\n\tat org.redisson.cluster.ClusterNodeInfo.setAddress(ClusterNodeInfo.java:56)\r\n\tat org.redisson.client.protocol.decoder.ClusterNodesDecoder.decode(ClusterNodesDecoder.java:50)\r\n\tat org.redisson.client.protocol.decoder.ClusterNodesDecoder.decode(ClusterNodesDecoder.java:35)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:259)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:103)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.net.URISyntaxException: Illegal character in scheme name at index 0: []r[]e[]d[]i[]s[]:[]/[]/[]:[]0[]\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.checkChars(URI.java:3021)\r\n\tat java.net.URI$Parser.checkChar(URI.java:3031)\r\n\tat java.net.URI$Parser.parse(URI.java:3047)\r\n\tat java.net.URI.<init>(URI.java:588)\r\n\tat java.net.URI.create(URI.java:850)\r\n\t... 32 more\r\n```", "url": "https://github.com/redisson/redisson/issues/967", "user": "h920526", "labels": ["bug"], "created": "2017-07-18 00:27:50", "closed": "2017-09-01 15:03:26", "commits": {}, "ttf": 45.000277777777775, "commitsDetails": []}, {"title": "can I use redisson with spring-session as a spring-xml config", "body": "I can't find the example how can i use redisson with spring-session as a spring-xml config \r\nthis is my spring-xml \r\n\r\n\r\n    <bean class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\" >\r\n\t\t<constructor-arg name=\"poolConfig\" ref=\"jedisPoolConfig\"></constructor-arg>\r\n\t\t<property name=\"hostName\" value=\"10.33.25.13\"></property>\r\n\t\t<property name=\"port\" value=\"6379\"></property>\r\n\t </bean>\r\n\t \r\n\t<bean id=\"redisHttpSessionConfiguration\" class=\"org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration\" />\r\n\r\n\t<redisson:client>\r\n    \t<redisson:single-server address=\"redis://10.33.25.13:6379\"/>\r\n\t</redisson:client> \r\n\r\nNow I config redis-server twice  and  i must  add spring-data-redis and jedis for the spring-session. the redisson's wiki show the code  we can config with java code to use this 2, but i don't know how can i use thsi 2 with  spring-xml config", "url": "https://github.com/redisson/redisson/issues/952", "user": "Vcgoyo", "labels": ["bug"], "created": "2017-07-06 08:40:36", "closed": "2017-07-18 05:36:03", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "RMapCache#putAll\u65b9\u6cd5\u653e\u516510w\u6570\u636e\uff0c\u62a5\u9519RedisException: ERR Error running script ", "body": "org.redisson.client.RedisException: ERR Error running script (call to f_44835d092e21a738755f49f8c3e9f6f442b617a1): @user_script:1: user_script:1: too many results to unpack . channel: [id: 0xd1cbb036, L:/172.24.142.185:52278 - R:/10.144.17.21:8100] command: CommandData [promise=org.redisson.misc.RedissonPromise@376618da[Not completed], command=(EVAL), params=[for i, value in ipairs(ARGV) do if i % 2 == 0 then local val = struct.pack('dLc0', 0, string.len(...], codec=org.redisson.codec.JsonJacksonCodec@5bafb1ee]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:267)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:127)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n23:30:13.003 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer 101 - ", "url": "https://github.com/redisson/redisson/issues/951", "user": "fsindustry", "labels": ["bug"], "created": "2017-07-05 15:32:57", "closed": "2017-07-31 08:07:32", "commits": {"2bdccfccf155765334fe9df68f427e551c11ded0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "2bdccfccf155765334fe9df68f427e551c11ded0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["907f180ac35d50ffb90a7eed23e9014c373db453"], "nameRev": "2bdccfccf155765334fe9df68f427e551c11ded0 tags/redisson-2.10.1~12", "commitMessage": "RMapCache.putAll couldn't handle map with entries amount larger than 5000. #951\n", "commitDateTime": "2017-07-31 11:10:07", "authoredDateTime": "2017-07-31 11:10:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.putAllOperationAsync(java.util.Map)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testPutAllBig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2bdccfccf155765334fe9df68f427e551c11ded0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 3, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.putAllOperationAsync(java.util.Map)"]}, {"title": "RMapCache remove, put, putIfAbsent, replace methods aren't respect entry expiration", "body": "", "url": "https://github.com/redisson/redisson/issues/949", "user": "mrniko", "labels": ["bug"], "created": "2017-06-30 10:17:31", "closed": "2017-06-30 10:18:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Redisson tries to write to a read-only slave", "body": "I have a requirement where I need to read and write from only master, so that our application gets consistent data from Redis. At the same time, we need HA and automatic failover.\r\n\r\nTo satisfy above requirements, I am using Redis master-slave setup, with sentinel, and with read mode as MASTER. The issue I am facing is, Redisson tries to write to a read-only slave and Redis throws exception. \r\n\r\nTo reproduce the issue, perform following steps:\r\n\r\n1. Start Master_1 with Sentinel_1, and Slave_1 with Sentinel_2 (Redission performs all reads & writes against Master_1)\r\n2. Shutdown Master_1 (Slave_1 becomes master now, and Redission performs all reads & writes against Slave_1)\r\n3. Start Master_1 (Master_1 becomes read-only slave, but Redisson tries to insert data into Master_1)\r\n\r\n\r\nConfiguration and other details are as follows:\r\n\r\nMaven dependency:\r\n```\r\n<dependency>\r\n            <groupId>org.redisson</groupId>\r\n            <artifactId>redisson</artifactId>\r\n            <version>3.4.3</version>\r\n</dependency>\r\n```\r\nSpring Redisson bean definition:\r\n```\r\n@Bean(destroyMethod = \"shutdown\")\r\n\tpublic RedissonClient redisson() throws IOException {\r\n\t\tConfig config = new Config();\r\n\t\tconfig.useSentinelServers()\r\n\t\t\t\t.setMasterName(\"redis-cluster\")\r\n\t\t\t\t.addSentinelAddress(\"redis://127.0.0.1:26179\")\r\n\t\t\t\t.addSentinelAddress(\"redis://127.0.0.1:26381\")\r\n\t\t\t\t.setReadMode(ReadMode.MASTER);\r\n\r\n\t\tRedissonClient redisson = Redisson.create(config);\r\n\t\treturn redisson;\r\n}\r\n```\r\nA test spring scheduled job that reads and writes dummy data:\r\n```\r\n@Component\r\npublic class OrderProcessorJob implements Job {\r\n\r\n\t@Autowired\r\n\tprivate OrderProcessorService se;\r\n\r\n\t@Autowired\r\n\tprivate RedissonClient rc;\r\n\r\n\t@Override\r\n\tpublic void execute(JobExecutionContext jc) throws JobExecutionException {\r\n\t\t// se.process();\r\n\r\n\t\tRMapCache<String, String> map = rc.getMapCache(\"123\");\r\n\t\ttry {\r\n\t\t\tmap.fastPut(\"1\", \"2\");\r\n\t\t\tString s = map.get(\"1\");\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nSpring log snippet:\r\n```\r\n2017-06-29 09:43:26.658  INFO 64974 --- [           main] org.redisson.Version                     : Redisson 3.4.3\r\n2017-06-29 09:43:26.900  INFO 64974 --- [           main] o.r.c.SentinelConnectionManager          : master: redis://127.0.0.1:6381 added\r\n2017-06-29 09:43:26.904  INFO 64974 --- [           main] o.r.c.SentinelConnectionManager          : slave: redis://127.0.0.1:6379 added\r\n2017-06-29 09:43:26.923  INFO 64974 --- [isson-netty-1-7] o.r.c.pool.MasterConnectionPool          : 10 connections initialized for /127.0.0.1:6381\r\n2017-06-29 09:43:26.931  INFO 64974 --- [sson-netty-1-11] o.r.c.SentinelConnectionManager          : sentinel: 127.0.0.1:26179 added\r\n2017-06-29 09:43:26.931  INFO 64974 --- [sson-netty-1-10] o.r.c.SentinelConnectionManager          : sentinel: 127.0.0.1:26381 added\r\n2017-06-29 09:43:26.993  INFO 64974 --- [           main] o.s.s.quartz.SchedulerFactoryBean        : Loading Quartz config from [class path resource [quartz.properties]]\r\n2017-06-29 09:43:27.003  INFO 64974 --- [           main] org.quartz.impl.StdSchedulerFactory      : Using default implementation for ThreadExecutor\r\n2017-06-29 09:43:27.008  INFO 64974 --- [           main] org.quartz.core.SchedulerSignalerImpl    : Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl\r\n2017-06-29 09:43:27.008  INFO 64974 --- [           main] org.quartz.core.QuartzScheduler          : Quartz Scheduler v.2.3.0 created.\r\n2017-06-29 09:43:27.009  INFO 64974 --- [           main] org.quartz.simpl.RAMJobStore             : RAMJobStore initialized.\r\n2017-06-29 09:43:27.009  INFO 64974 --- [           main] org.quartz.core.QuartzScheduler          : Scheduler meta-data: Quartz Scheduler (v2.3.0) 'scheduler' with instanceId 'NON_CLUSTERED'\r\n  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.\r\n  NOT STARTED.\r\n  Currently in standby mode.\r\n  Number of jobs executed: 0\r\n  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 1 threads.\r\n  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.\r\n\r\n2017-06-29 09:43:27.009  INFO 64974 --- [           main] org.quartz.impl.StdSchedulerFactory      : Quartz scheduler 'scheduler' initialized from an externally provided properties instance.\r\n2017-06-29 09:43:27.009  INFO 64974 --- [           main] org.quartz.impl.StdSchedulerFactory      : Quartz scheduler version: 2.3.0\r\n2017-06-29 09:43:27.009  INFO 64974 --- [           main] org.quartz.core.QuartzScheduler          : JobFactory set to: de.chandre.quartz.spring.AutowiringSpringBeanJobFactory@40298285\r\n2017-06-29 09:43:27.217  INFO 64974 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@61009542: startup date [Thu Jun 29 09:43:25 CDT 2017]; root of context hierarchy\r\n2017-06-29 09:43:27.260  INFO 64974 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)\r\n2017-06-29 09:43:27.261  INFO 64974 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped \"{[/error],produces=[text/html]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\r\n2017-06-29 09:43:27.281  INFO 64974 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\r\n2017-06-29 09:43:27.281  INFO 64974 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\r\n2017-06-29 09:43:27.306  INFO 64974 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\r\n2017-06-29 09:43:27.573  INFO 64974 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup\r\n2017-06-29 09:43:27.579  INFO 64974 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647\r\n2017-06-29 09:43:27.579  INFO 64974 --- [           main] o.s.s.quartz.SchedulerFactoryBean        : Starting Quartz Scheduler now\r\n2017-06-29 09:43:27.579  INFO 64974 --- [           main] org.quartz.core.QuartzScheduler          : Scheduler scheduler_$_NON_CLUSTERED started.\r\n2017-06-29 09:43:27.587  INFO 64974 --- [           main] o.e.j.s.h.ContextHandler.application     : Initializing Spring FrameworkServlet 'dispatcherServlet'\r\n2017-06-29 09:43:27.587  INFO 64974 --- [           main] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started\r\n2017-06-29 09:43:27.599  INFO 64974 --- [           main] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms\r\n2017-06-29 09:43:27.615  INFO 64974 --- [           main] o.e.jetty.server.AbstractConnector       : Started ServerConnector@54e81b21{HTTP/1.1,[http/1.1]}{0.0.0.0:8090}\r\n2017-06-29 09:43:27.617  INFO 64974 --- [           main] .s.b.c.e.j.JettyEmbeddedServletContainer : Jetty started on port(s) 8090 (http/1.1)\r\n2017-06-29 09:43:27.621  INFO 64974 --- [           main] c.k.s.p.OrderProcessorApplication        : Started OrderProcessorApplication in 2.902 seconds (JVM running for 3.259)\r\norg.redisson.client.RedisTimeoutException: Redis server response timeout (3000 ms) occured for command: (EVAL) with params: [local insertable = false; local v = redis.call('hget', KEYS[1], ARGV[2]); if v == false then inserta..., 5, 123, redisson__timeout__set:{123}, redisson__idle__set:{123}, redisson_map_cache_created:{123}, redisson_map_cache_updated:{123}, 1498747454972, [34, 49, 34], [34, 50, 34]] channel: [id: 0x041d1a59, L:/127.0.0.1:62642 - R:/127.0.0.1:6381]\r\n\tat org.redisson.command.CommandAsyncService$10.run(CommandAsyncService.java:646)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:663)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:738)\r\n\tat io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:466)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n2017-06-29 09:44:20.430  INFO 64974 --- [  redisson-3-14] o.r.c.SentinelConnectionManager          : slave: 127.0.0.1:6381 has up\r\n2017-06-29 09:44:20.431  INFO 64974 --- [  redisson-3-16] o.r.c.SentinelConnectionManager          : slave: 127.0.0.1:6381 has up\r\n2017-06-29 09:44:20.438  INFO 64974 --- [isson-netty-1-4] o.r.c.pool.MasterConnectionPool          : 10 connections initialized for /127.0.0.1:6379\r\n2017-06-29 09:44:20.438  INFO 64974 --- [  redisson-3-13] o.r.c.SentinelConnectionManager          : master redis://127.0.0.1:6381 changed to redis://127.0.0.1:6379\r\norg.redisson.client.RedisTimeoutException: Redis server response timeout (3000 ms) occured for command: (EVAL) with params: [local insertable = false; local v = redis.call('hget', KEYS[1], ARGV[2]); if v == false then inserta..., 5, 123, redisson__timeout__set:{123}, redisson__idle__set:{123}, redisson_map_cache_created:{123}, redisson_map_cache_updated:{123}, 1498747458005, [34, 49, 34], [34, 50, 34]] channel: [id: 0x641bdb90, L:/127.0.0.1:62644 - R:/127.0.0.1:6381]\r\n\tat org.redisson.command.CommandAsyncService$10.run(CommandAsyncService.java:646)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:663)\r\n\tat io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:738)\r\n\tat io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:466)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n2017-06-29 09:44:25.451  WARN 64974 --- [   redisson-3-4] o.r.c.SentinelConnectionManager          : slave: 127.0.0.1:6381 has down\r\n2017-06-29 09:44:25.456  WARN 64974 --- [   redisson-3-3] o.r.c.SentinelConnectionManager          : slave: 127.0.0.1:6381 has down\r\n2017-06-29 09:45:11.415  INFO 64974 --- [   redisson-3-2] o.r.c.SentinelConnectionManager          : slave: 127.0.0.1:6381 has up\r\n2017-06-29 09:45:11.605  INFO 64974 --- [   redisson-3-1] o.r.c.SentinelConnectionManager          : slave: 127.0.0.1:6381 has up\r\norg.redisson.client.RedisException: ERR Error running script (call to f_251ec2dd5ace5005169a1407c376c269a9838a5c): @user_script:1: @user_script: 1: -READONLY You can't write against a read only slave.   . channel: [id: 0xc6bb6b64, L:/127.0.0.1:63323 - R:/127.0.0.1:6381] command: CommandData [promise=org.redisson.misc.RedissonPromise@3c893d51[Not completed], command=(EVAL), params=[local insertable = false; local v = redis.call('hget', KEYS[1], ARGV[2]); if v == false then inserta..., 5, 123, redisson__timeout__set:{123}, redisson__idle__set:{123}, redisson_map_cache_created:{123}, redisson_map_cache_updated:{123}, 1498747532973, [34, 49, 34], [34, 50, 34]], codec=org.redisson.codec.JsonJacksonCodec@6f240f43]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:267)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:127)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\nAs you can from see in above above logs, node 127.0.0.1:6381 joined as slave (but was master in the beginning). But Redisson tries to insert data into it.\r\n\r\nPlease let me know if I am doing anything wrong in my configuration, or this is a bug with Redisson.", "url": "https://github.com/redisson/redisson/issues/945", "user": "ravi1983", "labels": ["bug"], "created": "2017-06-29 14:54:46", "closed": "2018-03-21 12:53:41", "commits": {"f24955846b6dfef25e835d57a81468749ccc2abc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "5152c66e290ab1de09f00b8b53e5e8f467f8f567": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "1212b39f5b15653eceb1887bb7c9c57a9a00d0ec": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "c72e6ad943f96df8b6556a1b4360532cac4451cf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 264.0002777777778, "commitsDetails": [{"commitHash": "f24955846b6dfef25e835d57a81468749ccc2abc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f1e4cadebc425071da858a006da6d5033d2dbcf4"], "nameRev": "f24955846b6dfef25e835d57a81468749ccc2abc tags/redisson-2.10.1~5", "commitMessage": "LoadBalancerManager should use ip only to map ClientConnectionsEntry. #945\n", "commitDateTime": "2017-08-25 17:48:04", "authoredDateTime": "2017-08-25 17:48:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 17, "deletions": 12, "lines": 29}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 15, "deletions": 6, "lines": 21}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 31, "deletions": 16, "lines": 47}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 7, "deletions": 8, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.cluster.ClusterSlotRange,java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 28, "UPD": 8, "INS": 0, "MOV": 13, "DEL": 7}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,boolean)", "TOT": 10, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.hasSlave(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.slaveUp(java.lang.String,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.config.SentinelServersConfig,java.net.URI,org.redisson.config.MasterSlaveServersConfig).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.convert(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSentinelAdded(org.redisson.config.SentinelServersConfig,java.lang.String,org.redisson.config.MasterSlaveServersConfig)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.unfreeze(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.freeze(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 16, "UPD": 4, "INS": 0, "MOV": 9, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.getAvailableClients()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.contains(java.net.InetSocketAddress)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.getConnection(org.redisson.client.protocol.RedisCommand,java.net.InetSocketAddress)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.shutdown()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.shutdownAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.returnConnection(org.redisson.client.RedisConnection)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.returnPubSubConnection(org.redisson.client.RedisPubSubConnection)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.add(org.redisson.connection.ClientConnectionsEntry).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 2, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.convert(java.net.URI)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.freeze(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.getEntry(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.contains(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.checkForReconnect(org.redisson.connection.ClientConnectionsEntry)", "TOT": 9, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.checkForReconnect(org.redisson.connection.ClientConnectionsEntry,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5152c66e290ab1de09f00b8b53e5e8f467f8f567", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f24955846b6dfef25e835d57a81468749ccc2abc"], "nameRev": "5152c66e290ab1de09f00b8b53e5e8f467f8f567 tags/redisson-2.10.1~4", "commitMessage": "Shutdown master's entry in slaveConnectionPool during master change process.  #945\n", "commitDateTime": "2017-08-28 13:00:28", "authoredDateTime": "2017-08-28 13:00:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/config/BaseMasterSlaveServersConfig.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 26, "deletions": 17, "lines": 43}, {"filePath": "redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 28, "deletions": 2, "lines": 30}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 17, "deletions": 11, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient.getIpAddr()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionWatchdog.java", "spoonMethods": []}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.config.ClusterServersConfig).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BaseMasterSlaveServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.BaseMasterSlaveServersConfig.isSkipSlavesInit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.setNodeType(org.redisson.api.NodeType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.config.MasterSlaveServersConfig)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdownAsync(org.redisson.client.RedisClient)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.URI,boolean,org.redisson.api.NodeType)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,boolean)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 12, "UPD": 1, "INS": 7, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.initSlaveBalancer(java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.protocol.RedisCommand,java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.releaseRead(org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReplicatedConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).2.run().1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.slaveUp(java.lang.String,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onMasterChange(org.redisson.config.SentinelServersConfig,java.net.URI,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.add(org.redisson.connection.ClientConnectionsEntry).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.changeType(java.net.InetSocketAddress,org.redisson.api.NodeType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.changeType(java.lang.Object,org.redisson.api.NodeType,org.redisson.connection.ClientConnectionsEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.changeType(java.net.URI,org.redisson.api.NodeType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManager.getEntry(java.net.URI)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1212b39f5b15653eceb1887bb7c9c57a9a00d0ec", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7d6fd352df088b1f07b79bcd1e573bad4dcb0a18"], "nameRev": "1212b39f5b15653eceb1887bb7c9c57a9a00d0ec tags/redisson-2.10.4~7", "commitMessage": "Remove listeners during slave down process handling. #945\n", "commitDateTime": "2017-09-22 17:52:06", "authoredDateTime": "2017-09-22 17:52:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/pubsub/AsyncSemaphore.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.reset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AsyncSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.AsyncSemaphore.removeListeners()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c72e6ad943f96df8b6556a1b4360532cac4451cf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9a36a5badc5331a76184c7ede70ae67e38f8b3b3"], "nameRev": "c72e6ad943f96df8b6556a1b4360532cac4451cf tags/redisson-2.11.4~6", "commitMessage": "Fixed - \"READONLY can't write against a read only slave\" error. #1272 #945\n", "commitDateTime": "2018-03-21 17:53:18", "authoredDateTime": "2018-03-21 17:53:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 12, "deletions": 11, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 129, "deletions": 0, "lines": 129}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.freezeMaster(org.redisson.connection.ClientConnectionsEntry$FreezeReason)", "TOT": 12, "UPD": 2, "INS": 1, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.releaseSubscribeConnection(org.redisson.client.RedisPubSubConnection)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.releaseConnection(org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.changeMaster(int,java.net.URI)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.freeze()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.InetSocketAddress,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get(org.redisson.client.protocol.RedisCommand)", "TOT": 11, "UPD": 5, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testFailoverInSentinel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f24955846b6dfef25e835d57a81468749ccc2abc", "5152c66e290ab1de09f00b8b53e5e8f467f8f567", "1212b39f5b15653eceb1887bb7c9c57a9a00d0ec"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 186, "deletions": 98, "lines": 284, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 222, "UPD": 54, "INS": 57, "MOV": 64, "DEL": 47, "spoonFilesChanged": 11, "spoonMethodsChanged": 61}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/connection/balancer", "redisson/src/main/java/org/redisson/connection/pool", "redisson/src/main/java/org/redisson/cluster", "redisson/src/main/java/org/redisson/client/handler", "redisson/src/main/java/org/redisson/config", "redisson/src/main/java/org/redisson/client", "redisson/src/main/java/org/redisson/pubsub"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,boolean)", "org.redisson.connection.MasterSlaveEntry.slaveUp(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.SentinelConnectionManager.slaveUp(java.lang.String,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.net.URI).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.balancer.LoadBalancerManager.add(org.redisson.connection.ClientConnectionsEntry).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.balancer.LoadBalancerManager.getEntry(java.net.URI)", "org.redisson.connection.balancer.LoadBalancerManager.changeType(java.lang.Object,org.redisson.api.NodeType,org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.SentinelConnectionManager.convert(java.lang.String,java.lang.String)", "org.redisson.connection.balancer.LoadBalancerManager.convert(java.net.URI)", "org.redisson.connection.balancer.LoadBalancerManager.changeType(java.net.URI,org.redisson.api.NodeType)", "org.redisson.connection.ClientConnectionsEntry.setNodeType(org.redisson.api.NodeType)", "org.redisson.connection.balancer.LoadBalancerManager.unfreeze(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.pool.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,java.lang.Throwable)", "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.pool.ConnectionPool.checkForReconnect(org.redisson.connection.ClientConnectionsEntry,java.lang.Throwable)", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.ClientConnectionsEntry.reset()", "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.balancer.LoadBalancerManager.freeze(java.net.URI,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.MasterSlaveEntry.initSlaveBalancer(java.util.Collection)", "org.redisson.pubsub.AsyncSemaphore.removeListeners()", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout)", "org.redisson.connection.balancer.LoadBalancerManager.returnConnection(org.redisson.client.RedisConnection)", "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.protocol.RedisCommand,java.net.InetSocketAddress)", "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition)", "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.cluster.ClusterSlotRange,java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.balancer.LoadBalancerManager.contains(java.net.InetSocketAddress)", "org.redisson.connection.balancer.LoadBalancerManager.changeType(java.net.InetSocketAddress,org.redisson.api.NodeType)", "org.redisson.connection.balancer.LoadBalancerManager", "org.redisson.connection.SentinelConnectionManager.onSentinelAdded(org.redisson.config.SentinelServersConfig,java.lang.String,org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.ClientConnectionsEntry", "org.redisson.connection.MasterSlaveEntry.hasSlave(java.lang.String)", "org.redisson.connection.pool.ConnectionPool.checkForReconnect(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.client.RedisClient.getIpAddr()", "org.redisson.connection.balancer.LoadBalancerManager.contains(java.lang.String)", "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)", "org.redisson.connection.MasterSlaveEntry.releaseRead(org.redisson.client.RedisConnection)", "org.redisson.connection.balancer.LoadBalancerManager.getConnection(org.redisson.client.protocol.RedisCommand,java.net.InetSocketAddress)", "org.redisson.connection.balancer.LoadBalancerManager.getAvailableClients()", "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String)", "org.redisson.connection.balancer.LoadBalancerManager.shutdown()", "org.redisson.config.BaseMasterSlaveServersConfig.isSkipSlavesInit()", "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "org.redisson.connection.pool.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.misc.RPromise,org.redisson.client.RedisConnection)", "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.config.ClusterServersConfig).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.balancer.LoadBalancerManager.shutdownAsync()", "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig).2.run().1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.addSlave(java.net.URI,boolean,org.redisson.api.NodeType)", "org.redisson.connection.balancer.LoadBalancerManager.freeze(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.MasterSlaveConnectionManager.shutdownAsync(org.redisson.client.RedisClient)", "org.redisson.connection.SentinelConnectionManager.onMasterChange(org.redisson.config.SentinelServersConfig,java.net.URI,java.lang.String)", "org.redisson.connection.pool.ConnectionPool.scheduleCheck(org.redisson.connection.ClientConnectionsEntry).5.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.balancer.LoadBalancerManager.returnPubSubConnection(org.redisson.client.RedisPubSubConnection)", "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.config.SentinelServersConfig,java.net.URI,org.redisson.config.MasterSlaveServersConfig).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Reactive Stream methods are executed immediately after Publisher object creation", "body": "Reactive Stream methods should be executed only after `Subscription.request` invocation", "url": "https://github.com/redisson/redisson/issues/939", "user": "mrniko", "labels": ["bug"], "created": "2017-06-24 06:37:11", "closed": "2017-06-24 06:38:34", "commits": {"681d5a8fcc9122b67497d2f1e7664a396bb8214d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "681d5a8fcc9122b67497d2f1e7664a396bb8214d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7ea9130f422820e38cd8515e70057d364e6e4025"], "nameRev": "681d5a8fcc9122b67497d2f1e7664a396bb8214d tags/redisson-2.9.4~33", "commitMessage": "Reactive Stream methods are executed immediately after Publisher object creation #939\n", "commitDateTime": "2017-06-24 09:40:59", "authoredDateTime": "2017-06-24 09:40:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonReactive.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandReactiveExecutor.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandReactiveService.java", "insertions": 91, "deletions": 41, "lines": 132}, {"filePath": "redisson/src/main/java/org/redisson/reactive/NettyFuturePublisher.java", "insertions": 15, "deletions": 12, "lines": 27}, {"filePath": "redisson/src/main/java/org/redisson/reactive/PublisherAdder.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonBatchReactive.java", "insertions": 15, "deletions": 5, "lines": 20}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonBitSetReactive.java", "insertions": 120, "deletions": 28, "lines": 148}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonBucketReactive.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonExpirableReactive.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonHyperLogLogReactive.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonKeysReactive.java", "insertions": 54, "deletions": 14, "lines": 68}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonLexSortedSetReactive.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonListReactive.java", "insertions": 58, "deletions": 16, "lines": 74}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonMapCacheReactive.java", "insertions": 243, "deletions": 66, "lines": 309}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonMapReactive.java", "insertions": 158, "deletions": 41, "lines": 199}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonMapReactiveIterator.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonObjectReactive.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonPatternTopicReactive.java", "insertions": 20, "deletions": 9, "lines": 29}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonScoredSortedSetReactive.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonScriptReactive.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonSetCacheReactive.java", "insertions": 52, "deletions": 14, "lines": 66}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonSetReactive.java", "insertions": 71, "deletions": 18, "lines": 89}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonTopicReactive.java", "insertions": 17, "deletions": 11, "lines": 28}, {"filePath": "redisson/src/main/java/org/redisson/reactive/SetReactiveIterator.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/BaseReactiveTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueReactiveTest.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/RedissonScoredSortedSetReactiveTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonScriptReactiveTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetCacheReactiveTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetReactiveTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["681d5a8fcc9122b67497d2f1e7664a396bb8214d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1007, "deletions": 280, "lines": 1287, "gitFilesChange": 25}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/reactive", "redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson"]}, {"title": "RBinaryStream doesn't work in Redis cluster environment", "body": "", "url": "https://github.com/redisson/redisson/issues/937", "user": "mrniko", "labels": ["bug"], "created": "2017-06-23 13:07:27", "closed": "2017-06-23 13:15:31", "commits": {"7ea9130f422820e38cd8515e70057d364e6e4025": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7ea9130f422820e38cd8515e70057d364e6e4025", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4c80f29b2a6b93be05d152d45d757b220d5c4950"], "nameRev": "7ea9130f422820e38cd8515e70057d364e6e4025 tags/redisson-2.9.4~34", "commitMessage": "Fixed RBinaryStream doesn't work in Redis cluster environment #937\n", "commitDateTime": "2017-06-23 16:17:21", "authoredDateTime": "2017-06-23 16:17:21", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBinaryStream.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBinaryStream.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBinaryStream.getPartsName()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ea9130f422820e38cd8515e70057d364e6e4025"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBinaryStream.getPartsName()"]}, {"title": "Redisson (3.x.x) failed to initialize in Replicated connection with one of the nodes is not online", "body": "A connection refused exception is been thrown at [this line](https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java#L131) when a node is offline during the initialization period. https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java#L131\r\n\r\nProblem is only related to CompletableFuture", "url": "https://github.com/redisson/redisson/issues/932", "user": "jackygurui", "labels": ["bug"], "created": "2017-06-21 21:58:13", "closed": "2017-06-22 11:19:16", "commits": {"0bff2fb2958a9b95a4bff2c840d4997f0a7ae552": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0bff2fb2958a9b95a4bff2c840d4997f0a7ae552", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f2a1b7cf1727fc5f0dcd591edf53199f55d94df8"], "nameRev": "0bff2fb2958a9b95a4bff2c840d4997f0a7ae552 tags/redisson-3.4.4~6", "commitMessage": "Fixed RFuture.getNow shouldn't throw exceptions. #932\n", "commitDateTime": "2017-06-22 14:21:09", "authoredDateTime": "2017-06-22 14:21:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/RedissonPromise.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPromise.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.RedissonPromise.getNow()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0bff2fb2958a9b95a4bff2c840d4997f0a7ae552"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.RedissonPromise.getNow()"]}, {"title": "Live Object service have issues while working with inherited classes", "body": "So i have the following use-case : \r\n\r\n```\r\n@REntity\r\nclass Child extend Parent{\r\n Child(String id){\r\n     super(id);\r\n }\r\n}\r\n\r\n```\r\n```\r\nclass Parent { \r\n  @RId\r\n  String id;\r\n  Parent(String id){\r\n     this.id = id;\r\n  }\r\n}\r\n```\r\nAnd when i make Child object as my live object as Follows : \r\n```\r\n\r\nChild child = new Child(\"1\");\r\nchild = rLiveObjectService.merge(child);\r\n```\r\nI get the following error -- \r\n\r\n         java.lang.IllegalStateException: size = 0\r\n\tat net.bytebuddy.matcher.FilterableList$AbstractBase.getOnly(FilterableList.java:108)\r\n\tat org.redisson.RedissonLiveObjectService.getRIdFieldName(RedissonLiveObjectService.java:537)\r\n\tat org.redisson.RedissonLiveObjectService.persist(RedissonLiveObjectService.java:163)\r\n\tat org.redisson.RedissonLiveObjectService.merge(RedissonLiveObjectService.java:153)\r\n", "url": "https://github.com/redisson/redisson/issues/930", "user": "13kunal", "labels": ["bug"], "created": "2017-06-21 13:48:21", "closed": "2017-09-14 12:17:35", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "When i use sentinel mode,the attribute \"database\" doesn't work", "body": "here is  my config code:\r\n\r\n> <redisson:client id=\"redissonClient\">\r\n                <redisson:sentinel-servers master-name=\"${redis.master.name}\" database=\"3\">\r\n\t        <redisson:sentinel-address value=\"${redis.sentinel.address}\" />\r\n\t    </redisson:sentinel-servers>\r\n</redisson:client>\r\n\r\nwhen i start my application,some exception happen:\r\n\r\n> Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.api.RedissonClient]: Factory method 'create' threw exception; nested exception is org.redisson.client.RedisConnectionException: Can't connect to servers!\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)\r\n\t... 37 more\r\nCaused by: org.redisson.client.RedisConnectionException: Can't connect to servers!\r\n\tat org.redisson.connection.SentinelConnectionManager.<init>(SentinelConnectionManager.java:122)\r\n\tat org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:234)\r\n\tat org.redisson.Redisson.<init>(Redisson.java:115)\r\n\tat org.redisson.Redisson.create(Redisson.java:154)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)\r\n\r\nand i track the sourecode,\r\n\r\n> for (URI addr : cfg.getSentinelAddresses()) {\r\n            RedisClient client = createClient(NodeType.SENTINEL, addr, this.config.getConnectTimeout(), this.config.getRetryInterval() * this.config.getRetryAttempts());\r\n            try {\r\n                RedisConnection connection = client.connect();\r\n                if (!connection.isActive()) {\r\n                    continue;\r\n                }\r\n....\r\n\r\nthe code `RedisConnection connection = client.connect()` throws Exception:\r\n\r\n\r\n> Caused by: org.redisson.client.RedisException: ERR unknown command 'SELECT'. channel: [id: 0x030d3a7f, L:/10.21.51.59:63744 - R:/114.55.11.93:7010] command: CommandData [promise=org.redisson.misc.RedissonPromise@9db3b5a, command=(SELECT), params=[3], codec=null]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:267)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:127)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nit's seem like execute 'select 3' in sentinel, then cause the exception\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/924", "user": "bryan31", "labels": ["bug"], "created": "2017-06-16 11:07:00", "closed": "2017-06-16 11:45:49", "commits": {"d7d94fa36cacb1f417d6d4eb161fe2f770fdaf9b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d7d94fa36cacb1f417d6d4eb161fe2f770fdaf9b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3a5fdaa66ffaffbac7f203851e445239572ff82f"], "nameRev": "d7d94fa36cacb1f417d6d4eb161fe2f770fdaf9b tags/redisson-2.9.4~47", "commitMessage": "SELECT command shouldn't be executed on Sentinel servers #924\n", "commitDateTime": "2017-06-16 14:34:44", "authoredDateTime": "2017-06-16 14:34:44", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d7d94fa36cacb1f417d6d4eb161fe2f770fdaf9b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.createRedisConfig(org.redisson.api.NodeType,java.net.URI,int,int)"]}, {"title": "Error occurred of serialization of kryo", "body": "```\r\nCaused by: com.esotericsoftware.kryo.KryoException: Class cannot be created (missing no-arg constructor): java.util.Arrays$ArrayList\r\nSerialization trace:\r\nkeyHashes (org.redisson.RedissonLocalCachedMap$LocalCachedMapInvalidate)\r\n\tat com.esotericsoftware.kryo.Kryo$DefaultInstantiatorStrategy.newInstantiatorOf(Kryo.java:1310) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.Kryo.newInstantiator(Kryo.java:1127) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.Kryo.newInstance(Kryo.java:1136) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.serializers.CollectionSerializer.create(CollectionSerializer.java:107) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:111) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:40) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:734) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:540) ~[kryo-4.0.0.jar:na]\r\n\tat com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:816) ~[kryo-4.0.0.jar:na]\r\n\tat org.redisson.codec.KryoCodec$1.decode(KryoCodec.java:112) ~[redisson-3.4.2.jar:na]\r\n\tat org.redisson.client.protocol.pubsub.PubSubMessageDecoder.decode(PubSubMessageDecoder.java:38) ~[redisson-3.4.2.jar:na]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:283) ~[redisson-3.4.2.jar:na]\r\n\tat org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:313) ~[redisson-3.4.2.jar:na]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:302) ~[redisson-3.4.2.jar:na]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:120) ~[redisson-3.4.2.jar:na]\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367) ~[netty-codec-4.1.10.Final.jar:4.1.10.Final]\r\n\t... 20 common frames omitted\r\n```\r\n\r\nSource code about org.redisson.RedissonLocalCachedMap$LocalCachedMapInvalidate:\r\n   ```\r\n public static class LocalCachedMapInvalidate implements Serializable {\r\n        \r\n        private byte[] excludedId;\r\n        private List<byte[]> keyHashes;\r\n\r\n        public LocalCachedMapInvalidate() {\r\n        }\r\n        \r\n        public LocalCachedMapInvalidate(byte[] excludedId, byte[]... keyHash) {\r\n            super();\r\n            this.keyHashes = Arrays.asList(keyHash);\r\n            this.excludedId = excludedId;\r\n        }\r\n        \r\n        public byte[] getExcludedId() {\r\n            return excludedId;\r\n        }\r\n        \r\n        public Collection<byte[]> getKeyHashes() {\r\n            return keyHashes;\r\n        }\r\n        \r\n    }\r\n```", "url": "https://github.com/redisson/redisson/issues/918", "user": "gaigeshen", "labels": ["bug"], "created": "2017-06-13 09:17:01", "closed": "2017-06-14 10:09:50", "commits": {"558f36b3af483f4334e8c1eb158d829e6277c1a6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "558f36b3af483f4334e8c1eb158d829e6277c1a6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e56e0910a926bb3c88c0d77d8a82bb4b52cc8897"], "nameRev": "558f36b3af483f4334e8c1eb158d829e6277c1a6 tags/redisson-2.9.4~54", "commitMessage": "LocalCachedMapInvalidate object can't be serialized by Kryo codec. #918\n", "commitDateTime": "2017-06-13 17:18:02", "authoredDateTime": "2017-06-13 17:18:02", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 4, "deletions": 5, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.LocalCachedMapInvalidate", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.LocalCachedMapInvalidate.getKeyHashes()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["558f36b3af483f4334e8c1eb158d829e6277c1a6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 5, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap.LocalCachedMapInvalidate", "org.redisson.RedissonLocalCachedMap.LocalCachedMapInvalidate.getKeyHashes()"]}, {"title": "RedissonBoundedBlockingQueue.pollAsync blocks if timeout is less than 1 second", "body": "In `RedissonBoundedBlockingQueue.pollAsync`, if timeout is less than 1 second, it will be round to 0. 0 is interpreted as indefinite timeout. Thus, pollAsync never returns.\r\n```\r\n    @Override\r\n    public RFuture<V> pollAsync(long timeout, TimeUnit unit) {\r\n        RFuture<V> takeFuture = commandExecutor.writeAsync(getName(), codec, RedisCommands.BLPOP_VALUE, getName(), unit.toSeconds(timeout));\r\n        return wrapTakeFuture(takeFuture);\r\n    }\r\n```\r\nI understand timeout < 1 second is not supported in  `BLPOP` command, but at least, this behavior is a surprise for me who didn't know poll is map to `BLPOP` command.\r\n\r\nI am not sure what is the best way to improve this, here are some ideas:\r\n1. default behavior should round up to 1 second if not 0\r\n2. do not allow time out less than 1 second\r\n3. just mention this behavior in the documentation\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/896", "user": "komsit37", "labels": ["bug"], "created": "2017-06-01 07:33:38", "closed": "2017-06-06 07:32:44", "commits": {"278b6d7ea17a12b49e67051fdf552e9886e6a8c8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "278b6d7ea17a12b49e67051fdf552e9886e6a8c8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["083065c332b0cad40809853a19020952179300d0"], "nameRev": "278b6d7ea17a12b49e67051fdf552e9886e6a8c8 tags/redisson-2.9.3~12", "commitMessage": "fixed RedissonBoundedBlockingQueue.pollAsync blocks if timeout is less than 1 second #896\n", "commitDateTime": "2017-06-06 10:34:07", "authoredDateTime": "2017-06-06 10:34:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBoundedBlockingQueue.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBoundedBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBoundedBlockingQueue.pollAsync(long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["278b6d7ea17a12b49e67051fdf552e9886e6a8c8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBoundedBlockingQueue.pollAsync(long,java.util.concurrent.TimeUnit)"]}, {"title": "JCache: NOAUTH Authentication required error after slave crash and restart", "body": "I'm testing Redisson JCache with following configuration:\r\n\r\n```\r\n---\r\nreplicatedServersConfig:\r\n  clientName: \"bsfapp.localdomain\"\r\n  idleConnectionTimeout: 10000\r\n  pingTimeout: 1000\r\n  connectTimeout: 10000\r\n  timeout: 3000\r\n  retryAttempts: 3\r\n  retryInterval: 1500\r\n  reconnectionTimeout: 3000\r\n  failedAttempts: 3\r\n  subscriptionsPerConnection: 5\r\n  loadBalancer: !<org.redisson.connection.balancer.RoundRobinLoadBalancer> {}\r\n  slaveConnectionMinimumIdleSize: 10\r\n  slaveConnectionPoolSize: 64\r\n  masterConnectionMinimumIdleSize: 10\r\n  masterConnectionPoolSize: 64\r\n  password: \"123456\"\r\n  readMode: \"MASTER_SLAVE\"\r\n  subscriptionMode: \"SLAVE\"\r\n  subscriptionConnectionMinimumIdleSize: 1\r\n  subscriptionConnectionPoolSize: 50\r\n  nodeAddresses: [\"redis://bsfapp.localdomain:6379\", \"redis://bsfapp2.localdomain:6379\"]\r\n  scanInterval: 2000\r\n  database: 0\r\n  slaveSubscriptionConnectionPoolSize: 50\r\n  slaveSubscriptionConnectionMinimumIdleSize: 1\r\nthreads: 0\r\nnettyThreads: 0\r\ncodec: !<org.redisson.codec.FstCodec> {}\r\ncodecProvider: !<org.redisson.codec.DefaultCodecProvider> {}\r\nresolverProvider: !<org.redisson.liveobject.provider.DefaultResolverProvider> {}\r\nredissonReferenceEnabled: true\r\nuseLinuxNativeEpoll: false\r\n\r\n```\r\n\r\nAfter crashing the slave (DEBUG SEGFAULT) the client reconnects but doesn't authenticate. I see endless errors like this:\r\n\r\n```\r\nERROR  [11:36:28.961] [redisson-netty-1-2] o.r.c.ReplicatedConnectionManager -  NOAUTH Authentication required.. channel: [id: 0xdc3558ca, L:/192.168.56.132:36320 - R:bsfapp2.localdomain/192.168.56.134:6379] command: CommandData [promise=org.redisson.misc.RedissonPromise@7325eb72[Not completed], command=(INFO REPLICATION), params=[], codec=null] \r\norg.redisson.client.RedisException: NOAUTH Authentication required.. channel: [id: 0xdc3558ca, L:/192.168.56.132:36320 - R:bsfapp2.localdomain/192.168.56.134:6379] command: CommandData [promise=org.redisson.misc.RedissonPromise@7325eb72[Not completed], command=(INFO REPLICATION), params=[], codec=null]\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:267)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:127)\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\n\r\nIs this a bug or wrong configuration?\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/895", "user": "Rincewind99", "labels": ["bug"], "created": "2017-05-30 09:57:32", "closed": "2017-06-05 18:55:40", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "RReadWriteLock is incompatible with reentry r&w op", "body": "While using RReadWriteLock, a bug (or not?) confuse me for a long time.\r\n\r\n**I described a wrong ops yesterday, and fix it now. Sorry about this.**\r\n\r\nThere is a sure logic problem if ops like this:\r\n\r\n1. write lock A (succeed)\r\n2. read lock A (succeed)\r\n3. read unlock A (succeed)\r\n4. write unlock A (not hold by current thread!!!)\r\n\r\nAssuming every unlock op is after a holding check.\r\n\r\nSo if there is no holding check and running in a concurrent environment, op4 may throw IllegalMonitorException.\r\n\r\nBut it's ok as follows:\r\n\r\n1. write lock A (succeed)\r\n4. write lock A again (succeed)\r\n5. write unlock A (succeed)\r\n6. write unlock A (succeed)\r\n\r\nI found that \"read unlock\" will delete the whole lock without checking if there is any other write lock.\r\n\r\nIs it a bug, or it just shouldn't do and need to do in another way?", "url": "https://github.com/redisson/redisson/issues/891", "user": "hsupu", "labels": ["bug"], "created": "2017-05-25 04:58:56", "closed": "2017-05-27 08:22:38", "commits": {"48ddec70e245faac95b8f27b7abca159f0eae656": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "48ddec70e245faac95b8f27b7abca159f0eae656", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["aac6de5a619c96ed22ad303bdfd2eed882b42dbb"], "nameRev": "48ddec70e245faac95b8f27b7abca159f0eae656 tags/redisson-2.9.3~16", "commitMessage": "unlocking of nested readLock deletes writeLock. #891\n", "commitDateTime": "2017-05-27 11:24:18", "authoredDateTime": "2017-05-27 11:24:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonReadLock.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReadWriteLockTest.java", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonReadLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadLock.unlockInnerAsync(long)", "TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonReadWriteLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWR()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["48ddec70e245faac95b8f27b7abca159f0eae656"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonReadLock.unlockInnerAsync(long)"]}, {"title": "Scan / getKeysByPattern infinite scan", "body": "I am using version 2.2.24 of redisson and using getKeysByPattern command. It works fine if no keys are found in the redis. But, if at least one key is found then the code returns successfully. But the scan command keeps on running on the redis server.\r\n\r\nSample code:\r\n\r\nIterator<String> keysIterator = redissonClient.getKeys().getKeysByPattern(pattern).iterator();\r\n        while (keysIterator.hasNext()) {\r\n            String key = keysIterator.next();\r\n            keysToDelete.add(key);\r\n        }\r\n\r\n\r\nRedis\r\n1495458904.136225 [0 127.0.0.1:65465] \"SCAN\" \"14\" \"MATCH\" \"*TeSt*\" \"COUNT\" \"10\"\r\n1495458904.136298 [0 127.0.0.1:65466] \"SCAN\" \"7\" \"MATCH\" \"*TeSt*\" \"COUNT\" \"10\"\r\n1495458904.136359 [0 127.0.0.1:65467] \"SCAN\" \"0\" \"MATCH\" \"*TeSt*\"\"COUNT\" \"10\"\r\n1495458904.136432 [0 127.0.0.1:65468] \"SCAN\" \"14\" \"MATCH\" \"*TeSt*\" \"COUNT\" \"10\"\r\n1495458904.136507 [0 127.0.0.1:65469] \"SCAN\" \"7\" \"MATCH\" \"*TeSt*\" \"COUNT\" \"10\"\r\n1495458904.136579 [0 127.0.0.1:65470] \"SCAN\" \"0\" \"MATCH\" \"*TeSt*\" \"COUNT\" \"10\"\r\n1495458904.136650 [0 127.0.0.1:65472] \"SCAN\" \"14\" \"MATCH\" \"*TeSt*\" \"COUNT\" \"10\"\r\n1495458904.136726 [0 127.0.0.1:65471] \"SCAN\" \"7\" \"MATCH\" \"*TeSt*\" \"COUNT\" \"10\"\r\n1495458904.136842 [0 127.0.0.1:65473] \"SCAN\" \"0\" \"MATCH\" \"*TeSt*\" \"COUNT\" \"10\"\r\n1495458904.136958 [0 127.0.0.1:65474] \"SCAN\" \"14\" \"MATCH\" \"*TeSt*\"\"COUNT\" \"10\"\r\n1495458904.137054 [0 127.0.0.1:65465] \"SCAN\" \"7\" \"MATCH\" \"*TeSt*\"\"COUNT\" \"10\"\r\n1495458904.137149 [0 127.0.0.1:65466]\r\n\r\n\r\nPlease share the sample code of getKeysByPattern command.\r\n", "url": "https://github.com/redisson/redisson/issues/885", "user": "Himanshu4", "labels": ["bug"], "created": "2017-05-22 13:30:21", "closed": "2018-05-04 12:35:11", "commits": {"4f5044995c72fad53e4c9761fe5c4b3fcd8039b5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "89689b44739cb92ff65917b6391cac6fdffe4cc7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "803fc814e88ec99e4726e0fa100534271927742a": {"commitGHEventType": "closed", "commitUser": "mrniko"}, "cc29a54eaacdd8fdacc40bf051c3acbc2b08e2e6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 346.0002777777778, "commitsDetails": [{"commitHash": "4f5044995c72fad53e4c9761fe5c4b3fcd8039b5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["946f712931fba6cbd7949747b9e2cc11063cdafc"], "nameRev": "4f5044995c72fad53e4c9761fe5c4b3fcd8039b5 tags/redisson-2.9.3~27", "commitMessage": "infinite scan fixed. #885\n", "commitDateTime": "2017-05-23 11:44:41", "authoredDateTime": "2017-05-23 11:44:41", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseIterator.hasNext()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "89689b44739cb92ff65917b6391cac6fdffe4cc7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4f5044995c72fad53e4c9761fe5c4b3fcd8039b5"], "nameRev": "89689b44739cb92ff65917b6391cac6fdffe4cc7 tags/redisson-2.9.3~26", "commitMessage": "Yet another infinite scan fix. #885\n", "commitDateTime": "2017-05-23 11:59:48", "authoredDateTime": "2017-05-23 11:59:48", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 16, "deletions": 12, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseIterator.hasNext()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "803fc814e88ec99e4726e0fa100534271927742a", "commitGHEventType": "closed", "commitUser": "mrniko", "commitParents": ["4ef3d60ac7faef3e0e241eb6a0b932fa0fe3d4b9"], "nameRev": "803fc814e88ec99e4726e0fa100534271927742a tags/redisson-2.9.3~20", "commitMessage": "Iterator infinite scan bug fixed #885\n", "commitDateTime": "2017-05-26 12:01:08", "authoredDateTime": "2017-05-26 12:01:08", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 6, "deletions": 24, "lines": 30}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBaseMapIterator.java", "insertions": 18, "deletions": 14, "lines": 32}, {"filePath": "redisson/src/test/java/org/redisson/RedissonKeysTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 41, "deletions": 2, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseIterator", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.hasNext()", "TOT": 30, "UPD": 0, "INS": 4, "MOV": 10, "DEL": 16}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.remove()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonBaseMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseMapIterator", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.hasNext()", "TOT": 19, "UPD": 0, "INS": 4, "MOV": 5, "DEL": 10}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.remove()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonKeysTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeysTest.testKeysIterable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testIterator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testConnectionListener()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testConnectionListener().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testConnectionListener().3.onDisconnect(java.net.InetSocketAddress)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testConnectionListener().3.onConnect(java.net.InetSocketAddress)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "cc29a54eaacdd8fdacc40bf051c3acbc2b08e2e6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b476f4d1674662068e21630414532deff9384b3c"], "nameRev": "cc29a54eaacdd8fdacc40bf051c3acbc2b08e2e6 tags/redisson-2.12.0~22", "commitMessage": "Fixed - Iterator loop and incorrect result returning. #1406 #885\n", "commitDateTime": "2018-05-04 17:35:36", "authoredDateTime": "2018-05-04 17:35:36", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseIterator.java", "insertions": 114, "deletions": 0, "lines": 114}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 3, "deletions": 134, "lines": 137}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBaseMapIterator.java", "insertions": 5, "deletions": 135, "lines": 140}, {"filePath": "redisson/src/main/java/org/redisson/RedissonKeys.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMap.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMapIterator.java", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultiMapKeysIterator.java", "insertions": 19, "deletions": 12, "lines": 31}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultimap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSet.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetCache.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimapValues.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/{RedisClientResult.java => ScanResult.java}", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ListScanResult.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/MapScanResult.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 19, "deletions": 13, "lines": 32}, {"filePath": "redisson/src/test/java/org/redisson/RedissonKeysTest.java", "insertions": 68, "deletions": 1, "lines": 69}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseIterator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseIterator.hasNext()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.isEmpty(java.util.List)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 8}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.removeAll(java.util.List,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.convert(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.tryAgain()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.remove()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.remove(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseIterator.getValue(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBaseMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseMapIterator.getValue(java.util.Map$Entry)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.put(java.util.Map$Entry,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.getValue(java.util.Map$Entry).1", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.getValue(java.util.Map$Entry).1.setValue(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator", "TOT": 11, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 10}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.hasNext()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.tryAgain()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.iterator()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.convert(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.remove()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.removeKey()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(org.redisson.connection.MasterSlaveEntry,java.lang.String,int).2.remove(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(org.redisson.connection.MasterSlaveEntry,java.lang.String,int).2.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(org.redisson.connection.MasterSlaveEntry,java.lang.String,int).2.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.keyIterator(java.lang.String).18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMap.valueIterator(java.lang.String).19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapIterator.removeKey()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapIterator", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMapIterator.put(java.util.Map$Entry,java.lang.Object)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.iterator()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMapIterator.iterator(org.redisson.client.RedisClient,long)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.remove(java.util.Map$Entry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultiMapKeysIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.removeKey()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.iterator()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.put(java.util.Map$Entry,java.lang.Object)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.iterator(org.redisson.client.RedisClient,long)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.remove(java.util.Map$Entry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultimap.KeySet.iterator().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSet.iterator(java.lang.String).1.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator(java.lang.String).1.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator(java.lang.String).1.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCache.iterator(java.lang.String).1.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator(java.lang.String).1.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator(java.lang.String).1.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapValues.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator(java.lang.String).1.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator(java.lang.String).1.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator(java.lang.String).1.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ListScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult.getPos()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult.getValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult.getRedisClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult.getPos()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult.getValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult.getRedisClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.checkAttemptFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,io.netty.util.concurrent.Future,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2.removeKey()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.removeKey()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2.put(java.util.Map$Entry,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.put(Map.Entry,org.redisson.jcache.V)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2.iterator()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.iterator()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.keyIterator().2.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.put(java.util.Map.Entry,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.remove(Map.Entry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonKeysTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeysTest.testEmptyKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeysTest.testKeysByPattern()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped2().3.remove(java.lang.Integer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped().2.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped().2.remove(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped2().3.iterator(org.redisson.client.RedisClient,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIteratorNotLooped2().3.remove(org.redisson.client.protocol.decoder.ScanObjectEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4f5044995c72fad53e4c9761fe5c4b3fcd8039b5", "89689b44739cb92ff65917b6391cac6fdffe4cc7", "803fc814e88ec99e4726e0fa100534271927742a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 54, "deletions": 50, "lines": 104, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 63, "UPD": 0, "INS": 11, "MOV": 20, "DEL": 32, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBaseIterator.hasNext()", "org.redisson.RedissonBaseIterator.remove()", "org.redisson.RedissonBaseMapIterator", "org.redisson.RedissonBaseMapIterator.hasNext()", "org.redisson.RedissonBaseIterator", "org.redisson.RedissonBaseMapIterator.remove()"]}, {"title": "Lcom/fasterxml/jackson/dataformat/avro/PackageVersion", "body": "```\r\n04-27 09:56:07.361 3495-3495/com.medzone.redisson E/AndroidRuntime: FATAL EXCEPTION: main\r\n                                                                    Process: com.medzone.redisson, PID: 3495\r\n                                                                    java.lang.NoClassDefFoundError: Failed resolution of: Lcom/fasterxml/jackson/dataformat/avro/PackageVersion;\r\n                                                                        at org.redisson.codec.DefenceModule.<init>(DefenceModule.java:72)\r\n                                                                        at org.redisson.codec.JsonJacksonCodec.init(JsonJacksonCodec.java:146)\r\n                                                                        at org.redisson.codec.JsonJacksonCodec.<init>(JsonJacksonCodec.java:102)\r\n                                                                        at org.redisson.codec.JsonJacksonCodec.<init>(JsonJacksonCodec.java:87)\r\n                                                                        at org.redisson.codec.JsonJacksonCodec.<clinit>(JsonJacksonCodec.java:62)\r\n                                                                        at org.redisson.config.Config.<init>(Config.java:101)\r\n                                                                        at org.redisson.Redisson.<init>(Redisson.java:113)\r\n                                                                        at org.redisson.Redisson.create(Redisson.java:154)\r\n                                                                        at com.medzone.redisson.redis.RedisActivity$2.call(RedisActivity.java:84)\r\n                                                                        at com.medzone.redisson.redis.RedisActivity$2.call(RedisActivity.java:65)\r\n                                                                        at rx.internal.util.ActionSubscriber.onNext(ActionSubscriber.java:39)\r\n                                                                        at rx.observers.SafeSubscriber.onNext(SafeSubscriber.java:134)\r\n                                                                        at com.jakewharton.rxbinding.view.ViewClickOnSubscribe$1.onClick(ViewClickOnSubscribe.java:23)\r\n                                                                        at android.view.View.performClick(View.java:5697)\r\n                                                                        at android.widget.TextView.performClick(TextView.java:10815)\r\n                                                                        at android.view.View$PerformClick.run(View.java:22526)\r\n                                                                        at android.os.Handler.handleCallback(Handler.java:739)\r\n                                                                        at android.os.Handler.dispatchMessage(Handler.java:95)\r\n                                                                        at android.os.Looper.loop(Looper.java:158)\r\n                                                                        at android.app.ActivityThread.main(ActivityThread.java:7237)\r\n                                                                        at java.lang.reflect.Method.invoke(Native Method)\r\n                                                                        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\r\n                                                                        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\r\n                                                                     Caused by: java.lang.ClassNotFoundException: Didn't find class \"com.fasterxml.jackson.dataformat.avro.PackageVersion\" on path: DexPathList[[zip file \"/data/app/com.medzone.redisson-2/base.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_dependencies_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_0_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_1_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_2_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_3_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_4_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_5_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_6_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_7_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_8_apk.apk\", zip file \"/data/app/com.medzone.redisson-2/split_lib_slice_9_apk.apk\"],nativeLibraryDirectories=[/data/app/com.medzone.redisson-2/lib/arm64, /vendor/lib64, /system/lib64]]\r\n                                                                        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\r\n                                                                        at java.lang.ClassLoader.loadClass(ClassLoader.java:511)\r\n                                                                        at java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\n                                                                        at org.redisson.codec.DefenceModule.<init>(DefenceModule.java:72)\u00a0\r\n                                                                        at org.redisson.codec.JsonJacksonCodec.init(JsonJacksonCodec.java:146)\u00a0\r\n                                                                        at org.redisson.codec.JsonJacksonCodec.<init>(JsonJacksonCodec.java:102)\u00a0\r\n                                                                        at org.redisson.codec.JsonJacksonCodec.<init>(JsonJacksonCodec.java:87)\u00a0\r\n                                                                        at org.redisson.codec.JsonJacksonCodec.<clinit>(JsonJacksonCodec.java:62)\u00a0\r\n                                                                        at org.redisson.config.Config.<init>(Config.java:101)\u00a0\r\n                                                                        at org.redisson.Redisson.<init>(Redisson.java:113)\u00a0\r\n                                                                        at org.redisson.Redisson.create(Redisson.java:154)\u00a0\r\n                                                                        at com.medzone.redisson.redis.RedisActivity$2.call(RedisActivity.java:84)\u00a0\r\n                                                                        at com.medzone.redisson.redis.RedisActivity$2.call(RedisActivity.java:65)\u00a0\r\n                                                                        at rx.internal.util.ActionSubscriber.onNext(ActionSubscriber.java:39)\u00a0\r\n                                                                        at rx.observers.SafeSubscriber.onNext(SafeSubscriber.java:134)\u00a0\r\n                                                                        at com.jakewharton.rxbinding.view.ViewClickOnSubscribe$1.onClick(ViewClickOnSubscribe.java:23)\u00a0\r\n                                                                        at android.view.View.performClick(View.java:5697)\u00a0\r\n                                                                        at android.widget.TextView.performClick(TextView.java:10815)\u00a0\r\n                                                                        at android.view.View$PerformClick.run(View.java:22526)\u00a0\r\n                                                                        at android.os.Handler.handleCallback(Handler.java:739)\u00a0\r\n                                                                        at android.os.Handler.dispatchMessage(Handler.java:95)\u00a0\r\n                                                                        at android.os.Looper.loop(Looper.java:158)\u00a0\r\n                                                                        at android.app.ActivityThread.main(ActivityThread.java:7237)\u00a0\r\n                                                                        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n                                                                        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\u00a0\r\n                                                                        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\u00a0\r\n                                                                    \tSuppressed: java.lang.ClassNotFoundException: com.fasterxml.jackson.dataformat.avro.PackageVersion\r\n                                                                        at java.lang.Class.classForName(Native Method)\r\n                                                                        at java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\n                                                                        at java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\n                                                                        at java.lang.ClassLoader.loadClass(ClassLoader.java:504)\r\n                                                                        \t\t... 24 more\r\n                                                                     Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\n```", "url": "https://github.com/redisson/redisson/issues/865", "user": "huayicheng2015", "labels": ["bug"], "created": "2017-04-27 02:10:19", "closed": "2017-04-27 13:56:14", "commits": {"5e34084161e3a0dc9599dbe04e49de02af58b6d8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5e34084161e3a0dc9599dbe04e49de02af58b6d8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["30d0074e9a5cbc789791bc87aca85a687d7492df"], "nameRev": "5e34084161e3a0dc9599dbe04e49de02af58b6d8 tags/redisson-2.9.1~3", "commitMessage": "Fixed - reference to avro module has been removed. #865\n", "commitDateTime": "2017-04-27 16:57:01", "authoredDateTime": "2017-04-27 16:57:01", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/DefenceModule.java", "insertions": 0, "deletions": 5, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefenceModule.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.DefenceModule", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5e34084161e3a0dc9599dbe04e49de02af58b6d8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 5, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.DefenceModule"]}, {"title": "java.lang.IllegalStateException: Can't decode replay", "body": "I have this message quite often in my logs. There is a `StackOverflowException` happening right before that (though I am not sure whether these two correlate). Do you have an idea what is happening? Is the message too long to be processed? (Just for the context we have a pub/sub on expired keys.)\r\n\r\n```\r\n2017-04-26T15:51:45,881 | WARN | io.netty.channel.DefaultChannelPipeline | 2017-04-26T11:55:49,825_load_twoUserCollaborate_d4bd6e09-1bab-d0ff-b03f-823eb4c9442d | An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: Can't decode replay: *4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_501134d3-f81b-4ad8-dfb9-bc63bbe830a8.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_350da5f7-3827-b630-7744-e9c7ecbf62db.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$46\r\npack_350da5f7-3827-b630-7744-e9c7ecbf62db.pack\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$85\r\nfc_gzip_b028edc1-2a3a-8d08-5c13-fe25bd1de7de_b2106b913601c201e1687aa7da9f2938b6fc2d03\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_91fd49c4-4bd0-5f78-d0e1-f3f278ba6880.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$46\r\npack_30c173d4-9f54-5532-24f4-6cca218ca8f2.pack\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$22\r\n__keyevent@0__:expired\r\n$46\r\npack_f1476d2d-d46f-506a-8f76-4e6e1a34aedd.pack\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$22\r\n__keyevent@0__:expired\r\n$85\r\nfc_gzip_dcd6dbfa-e6b5-3798-64ff-08331278ab61_b68a1cdb9552248089bb739e119929d56e1033d4\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$22\r\n__keyevent@0__:expired\r\n$46\r\npack_01fb66ff-6c32-07ef-5f15-ae7e009a1e9b.pack\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_660999bc-d87b-73a1-3700-ee494e4e629a.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$46\r\npack_8cb9d5f8-bf22-e20a-fc22-6c43c6c2209f.pack\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_7f32f80d-ef10-d9fa-0cbc-bc6907b41403.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$46\r\npack_d3c04450-7a2c-76d6-4694-d1a809373736.pack\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_edfcb536-287a-7f63-7b42-909b5f6b815c.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$46\r\npack_60cc8f0a-98de-d61c-f6bd-8a90114d41bb.pack\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$22\r\n__keyevent@0__:expired\r\n$45\r\npack_d1e992c7-ee8a-6b7a-360f-eb340e69d696.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_d1e992c7-ee8a-6b7a-360f-eb340e69d696.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_7e134dc6-9748-521c-5340-e97a1c790ed3.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_ce902045-ea2c-055d-87e2-ded21f156227.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_deba09f5-e7e0-879a-305b-fa0aaef2b12f.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$48\r\npack_775d43a6-c38e-51ff-72b8-a045871140d6.bitmap\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$22\r\n__keyevent@0__:expired\r\n$45\r\npack_436b03f5-2a47-c03a-36b5-c65df9fb830d.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$22\r\n__keyevent@0__:expired\r\n$48\r\npack_0ceea1c5-d2b3-3a28-0246-8116a1588dd8.bitmap\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_e931dc2d-de9a-696e-2c89-35ea0bd926f4.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$48\r\npack_96ebc9ff-32d9-f910-925d-911a6ac8b53a.bitmap\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$22\r\n__keyevent@0__:expired\r\n$46\r\npack_c52dee39-468b-4c5f-c9e1-337f2a8ca1be.pack\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_461227e4-88fd-9689-4c9c-f6453c3a4eca.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n__keyevent@*__:*\r\n$21\r\n__keyevent@0__:expire\r\n$45\r\npack_1a4904bc-3db3-c88b-9560-ea62d0a839c5.idx\r\n*4\r\n$8\r\npmessage\r\n$16\r\n```", "url": "https://github.com/redisson/redisson/issues/863", "user": "smigfu", "labels": ["bug"], "created": "2017-04-26 16:11:01", "closed": "2017-06-12 18:22:57", "commits": {"8cad23cdcec19aff04725659cc0af9239053af6b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "8cad23cdcec19aff04725659cc0af9239053af6b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c6d814b04804b29c8ea6deaf86284f88e2642f66"], "nameRev": "8cad23cdcec19aff04725659cc0af9239053af6b tags/redisson-2.9.4~56", "commitMessage": "Fixed Stackoverflow error arise during decoding of large amount of PubSub messages. #863\n", "commitDateTime": "2017-06-12 21:24:27", "authoredDateTime": "2017-06-12 21:21:55", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 16, "deletions": 107, "lines": 123}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandPubSubDecoder.java", "insertions": 142, "deletions": 0, "lines": 142}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandsQueue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/handler/RedisChannelInitializer.java", "insertions": 7, "deletions": 2, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handlePublishSubscribe(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.addPubSubCommand(java.lang.String,org.redisson.client.protocol.CommandData)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List)", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 3}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandPubSubDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandPubSubDecoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandsQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.Channel)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisChannelInitializer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.RedisChannelInitializer.initChannel(io.netty.channel.Channel)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8cad23cdcec19aff04725659cc0af9239053af6b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 166, "deletions": 110, "lines": 276, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 44, "UPD": 9, "INS": 6, "MOV": 13, "DEL": 16, "spoonFilesChanged": 4, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.client.handler.CommandDecoder", "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.addPubSubCommand(java.lang.String,org.redisson.client.protocol.CommandData)", "org.redisson.client.handler.CommandDecoder.handlePublishSubscribe(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "org.redisson.client.handler.CommandPubSubDecoder", "org.redisson.client.handler.RedisChannelInitializer.initChannel(io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.handler.CommandDecoder.decodeList(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List)"]}, {"title": "NoClassDefFoundError after upgrading from 3.3.1 to 3.3.2", "body": "I'm using redisson JSR107 implementation and after upgrading from version 3.3.1 to 3.3.2 I start to get following exception immediately:\r\n\r\n```\r\nCaused by: java.lang.NoClassDefFoundError: net/openhft/hashing/LongHashFunction \r\n\tat org.redisson.misc.Hash.hashToBase64(Hash.java:43) \r\n\tat org.redisson.jcache.JCache.getLockName(JCache.java:560) \r\n\tat org.redisson.jcache.JCache.getLockedLock(JCache.java:744) \r\n\tat org.redisson.jcache.JCache.put(JCache.java:809)\r\n```", "url": "https://github.com/redisson/redisson/issues/862", "user": "kubagruszka", "labels": ["bug"], "created": "2017-04-26 10:57:32", "closed": "2017-05-05 15:13:57", "commits": {"bf200044e864d634b98fb017f74a87076cd17739": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "bf200044e864d634b98fb017f74a87076cd17739", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6cb624f0ea905bfd0b7cca9ee14caa4a1425be12"], "nameRev": "bf200044e864d634b98fb017f74a87076cd17739 tags/redisson-2.9.2~6", "commitMessage": "zero-allocation-hashing, byte-buddy and jodd-bean libraries can't be optional. #862\n", "commitDateTime": "2017-05-05 18:15:37", "authoredDateTime": "2017-05-05 18:15:37", "commitGitStats": [{"filePath": "redisson/pom.xml", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bf200044e864d634b98fb017f74a87076cd17739"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "RedissonCache should put NullValue object instead of null", "body": "", "url": "https://github.com/redisson/redisson/issues/853", "user": "mrniko", "labels": ["bug"], "created": "2017-04-20 12:48:33", "closed": "2017-04-20 12:53:47", "commits": {"9e0d445ee9baa46fbfffa454fad493d19b4a6466": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "bebbe604e199c7c4b0e5430a032613304d83f614": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9e0d445ee9baa46fbfffa454fad493d19b4a6466", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4b288c7d47a8f5b791958e7e48a6df004aae5067"], "nameRev": "9e0d445ee9baa46fbfffa454fad493d19b4a6466 tags/redisson-2.9.0~24", "commitMessage": "RedissonCache should put NullValue object instead of null #853\n", "commitDateTime": "2017-04-20 15:55:07", "authoredDateTime": "2017-04-20 15:55:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/RedissonCache.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonCache.put(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.cache.RedissonCache.putIfAbsent(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "bebbe604e199c7c4b0e5430a032613304d83f614", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9e0d445ee9baa46fbfffa454fad493d19b4a6466"], "nameRev": "bebbe604e199c7c4b0e5430a032613304d83f614 tags/redisson-2.9.0~23", "commitMessage": "NullValue instance should be unwrapped in RedissonCache.get method. #853\n", "commitDateTime": "2017-04-20 17:11:04", "authoredDateTime": "2017-04-20 17:11:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/CacheConfigSupport.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/spring/cache/NullValue.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/spring/cache/RedissonCache.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheConfigSupport.java", "spoonMethods": []}, {"spoonFilePath": "NullValue.java", "spoonMethods": []}, {"spoonFilePath": "RedissonCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonCache.fromStoreValue(java.lang.Object)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.cache.RedissonCache.get(java.lang.Object,java.lang.Class)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9e0d445ee9baa46fbfffa454fad493d19b4a6466", "bebbe604e199c7c4b0e5430a032613304d83f614"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 14, "deletions": 2, "lines": 16, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 8, "UPD": 2, "INS": 4, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/cache"], "changesInPackagesSPOON": ["org.redisson.spring.cache.RedissonCache.get(java.lang.Object,java.lang.Class)", "org.redisson.spring.cache.RedissonCache.fromStoreValue(java.lang.Object)", "org.redisson.spring.cache.RedissonCache.putIfAbsent(java.lang.Object,java.lang.Object)", "org.redisson.spring.cache.RedissonCache.put(java.lang.Object,java.lang.Object)"]}, {"title": "JSR107 cache implementation should throw javax.cache.CacheException", "body": "The redisson JSR107 `org.redisson.jcache.JCache` implementation throws exception like `org.redisson.client.RedisException`. According to the JSR107 specification this exception should be wrapped into `javax.cache.CacheException` . This way when interchanging cache implementation one can expect same error handling.", "url": "https://github.com/redisson/redisson/issues/850", "user": "kubagruszka", "labels": ["bug"], "created": "2017-04-20 07:54:18", "closed": "2017-05-12 12:48:03", "commits": {"96e7baad8406ff684b744f8881169541a31ddadf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "96e7baad8406ff684b744f8881169541a31ddadf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5b3bb847121b9c40b9ab3de3e28f92935677b418"], "nameRev": "96e7baad8406ff684b744f8881169541a31ddadf tags/redisson-2.9.3~34", "commitMessage": "JSR107 cache implementation should throw javax.cache.CacheException #850\n", "commitDateTime": "2017-05-12 15:49:25", "authoredDateTime": "2017-05-12 15:49:25", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 111, "deletions": 98, "lines": 209}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.jcache.JCache.getLock(java.lang.Object)", "TOT": 15, "UPD": 8, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.clear()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getValueLocked(java.lang.Object)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.getValue(java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.load(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.putValueLocked(java.lang.Object,java.lang.Object)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.putValue(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.putIfAbsentValue(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.putIfAbsentValueLocked(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAll(java.util.Set)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.containsKey(java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValues(java.lang.Object[])", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndPutValueLocked(java.lang.Object,java.lang.Object)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndPutValue(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValue(java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValueLocked(java.lang.Object,java.lang.Object)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.removeValue(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValueLocked(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 9, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplaceValue(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplaceValueLocked(java.lang.Object,java.lang.Object)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.put(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndPut(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.putIfAbsent(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.remove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.remove(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndRemove(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replaceValueLocked(java.lang.Object,java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getAndReplace(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeAll(java.util.Set)", "TOT": 9, "UPD": 6, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.removeAll()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.putAll(java.util.Map)", "TOT": 11, "UPD": 4, "INS": 3, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.jcache.JCache.loadAll(java.util.Set,boolean,javax.cache.integration.CompletionListener).1.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.iterator().<unknown>.getValue(Map.Entry)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.getLockedLock(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.jcache.JCache.write(java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.evalWrite(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.jcache.JCache.scanIterator(java.lang.String,java.net.InetSocketAddress,long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["96e7baad8406ff684b744f8881169541a31ddadf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 111, "deletions": 98, "lines": 209, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 168, "UPD": 60, "INS": 9, "MOV": 54, "DEL": 45, "spoonFilesChanged": 1, "spoonMethodsChanged": 42}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/jcache"], "changesInPackagesSPOON": ["org.redisson.jcache.JCache.scanIterator(java.lang.String,java.net.InetSocketAddress,long)", "org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAll(java.util.Set)", "org.redisson.jcache.JCache.putValueLocked(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndReplace(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.replaceValueLocked(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndRemove(java.lang.Object)", "org.redisson.jcache.JCache.putIfAbsent(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndRemoveValue(java.lang.Object)", "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getValue(java.lang.Object)", "org.redisson.jcache.JCache.replaceValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.removeValue(java.lang.Object)", "org.redisson.jcache.JCache.remove(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndReplaceValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.iterator().<unknown>.getValue(Map.Entry)", "org.redisson.jcache.JCache.removeAll(java.util.Set)", "org.redisson.jcache.JCache.write(java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.jcache.JCache.evalWrite(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.jcache.JCache.load(java.lang.Object)", "org.redisson.jcache.JCache.replace(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.putAll(java.util.Map)", "org.redisson.jcache.JCache.getLockedLock(java.lang.Object)", "org.redisson.jcache.JCache.putIfAbsentValueLocked(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndPutValueLocked(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndPutValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.removeValueLocked(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.removeValues(java.lang.Object[])", "org.redisson.jcache.JCache.removeValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.loadAll(java.util.Set,boolean,javax.cache.integration.CompletionListener).1.run()", "org.redisson.jcache.JCache.getValueLocked(java.lang.Object)", "org.redisson.jcache.JCache.getAndPut(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.putIfAbsentValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getAndReplaceValueLocked(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.getLock(java.lang.Object)", "org.redisson.jcache.JCache.replaceValueLocked(java.lang.Object,java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.removeAll()", "org.redisson.jcache.JCache.clear()", "org.redisson.jcache.JCache.putValue(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.put(java.lang.Object,java.lang.Object)", "org.redisson.jcache.JCache.containsKey(java.lang.Object)", "org.redisson.jcache.JCache.remove(java.lang.Object)"]}, {"title": "Suspicious subtle bug in [RedissonCacheMap.putIfAbsentAsync]", "body": "I think there is some bug in [RedissonCacheMap.putIfAbsentAsync].\r\n\r\n```\r\n    @Override\r\n    public RFuture<V> putIfAbsentAsync(K key, V value, long ttl, TimeUnit ttlUnit, long maxIdleTime, TimeUnit maxIdleUnit) {\r\n        .......\r\n        .......\r\n        .......\r\n        return commandExecutor.evalWriteAsync(getName(key), codec, EVAL_PUT_TTL,\r\n                      \"if redis.call('hexists', KEYS[1], ARGV[4]) == 0 then \"\r\n                        + \"if tonumber(ARGV[1]) > 0 then \"\r\n                            + \"redis.call('zadd', KEYS[2], ARGV[1], ARGV[4]); \"\r\n                        + \"end; \"\r\n                        + \"if tonumber(ARGV[2]) > 0 then \"\r\n                            + \"redis.call('zadd', KEYS[3], ARGV[2], ARGV[4]); \"\r\n                        + \"end; \"\r\n                        + \"local value = struct.pack('dLc0', ARGV[3], string.len(ARGV[5]), ARGV[5]); \"\r\n                        + \"redis.call('hset', KEYS[1], ARGV[4], value); \"\r\n                        + \"return nil; \"\r\n                    + \"else \"\r\n                        + \"local value = redis.call('hget', KEYS[1], ARGV[4]); \"\r\n                        + \"if value == false then \"\r\n                            + \"return nil; \"\r\n                        + \"end;\"\r\n                        + \"local t, val = struct.unpack('dLc0', value); \"\r\n                        + \"return val; \"\r\n                    + \"end\",\r\n                Arrays.<Object>asList(getName(key), getTimeoutSetNameByKey(key), getIdleSetNameByKey(key)), ttlTimeout, maxIdleTimeout, maxIdleDelta, key, value);\r\n    }\r\n```\r\n\r\nAnd I made this test code.\r\n\r\n```\r\n    @Test\r\n    public void testPutIfAbsent() throws Exception {\r\n        RMapCache<SimpleKey, SimpleValue> map = redisson.getMapCache(\"simple\");\r\n        SimpleKey key = new SimpleKey(\"1\");\r\n        SimpleValue value = new SimpleValue(\"2\");\r\n        map.put(key, value);\r\n        Assert.assertEquals(value, map.putIfAbsent(key, new SimpleValue(\"3\"), 1, TimeUnit.SECONDS));\r\n        Assert.assertEquals(value, map.get(key));\r\n\r\n        map.putIfAbsent(new SimpleKey(\"4\"), new SimpleValue(\"4\"), 1, TimeUnit.SECONDS);\r\n        Assert.assertEquals(new SimpleValue(\"4\"), map.get(new SimpleKey(\"4\")));\r\n\r\n        Thread.sleep(1000);\r\n\r\n        Assert.assertNull(map.get(new SimpleKey(\"4\")));\r\n        \r\n        //\r\n        // this should be passed, but fail\r\n        map.putIfAbsent(new SimpleKey(\"4\"), new SimpleValue(\"4\"), 1, TimeUnit.SECONDS);\r\n        Assert.assertEquals(new SimpleValue(\"4\"), map.get(new SimpleKey(\"4\")));\r\n        //\r\n        // \r\n\r\n        SimpleKey key1 = new SimpleKey(\"2\");\r\n        SimpleValue value1 = new SimpleValue(\"4\");\r\n        Assert.assertNull(map.putIfAbsent(key1, value1, 2, TimeUnit.SECONDS));\r\n        Assert.assertEquals(value1, map.get(key1));\r\n    }\r\n```\r\n\r\nThis test should be passed, but failed.\r\n\r\nAs you can see, there is no code for checking ttl or idle time in [putIfAbsentAsync] method, \r\nnot like [getAsync] or [fastPutIfAbsent] I have added.\r\n\r\nIf it's alright, I'm ready to PR to fix it.\r\n\r\nPlease verify whethrer my found is right.\r\n\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/849", "user": "iamdobi", "labels": ["bug"], "created": "2017-04-20 06:50:53", "closed": "2017-04-25 09:22:47", "commits": {"f2e346bc187edc3616a6bd533dd65b8967ca3b0d": {"commitGHEventType": "closed", "commitUser": "mrniko"}, "0f2a3c6ffc1b1143a4d6a5fc40e31ef13087d4e1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "f2e346bc187edc3616a6bd533dd65b8967ca3b0d", "commitGHEventType": "closed", "commitUser": "mrniko", "commitParents": ["4b288c7d47a8f5b791958e7e48a6df004aae5067"], "nameRev": "f2e346bc187edc3616a6bd533dd65b8967ca3b0d tags/redisson-2.9.0~9^2", "commitMessage": "fix #849\n", "commitDateTime": "2017-04-21 10:00:33", "authoredDateTime": "2017-04-21 10:00:33", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 52, "deletions": 20, "lines": 72}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.putIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 32, "UPD": 15, "INS": 9, "MOV": 8, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testPutIfAbsent()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0f2a3c6ffc1b1143a4d6a5fc40e31ef13087d4e1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e76d872c7b24903dfb3e898b1e654eea0024c09f", "f2e346bc187edc3616a6bd533dd65b8967ca3b0d"], "nameRev": "0f2a3c6ffc1b1143a4d6a5fc40e31ef13087d4e1 tags/redisson-2.9.0~9", "commitMessage": "Merge pull request #857 from iamdobi/master\n\nfix #849", "commitDateTime": "2017-04-25 12:22:46", "authoredDateTime": "2017-04-25 12:22:46", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 52, "deletions": 20, "lines": 72}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.putIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "TOT": 32, "UPD": 15, "INS": 9, "MOV": 8, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testPutIfAbsent()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f2e346bc187edc3616a6bd533dd65b8967ca3b0d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 52, "deletions": 20, "lines": 72, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 33, "UPD": 15, "INS": 10, "MOV": 8, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.putIfAbsentAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonMapCache"]}, {"title": " RMap with byte[] key ?", "body": "        RMap<String, byte[]> map = redisson.getMap(\"anyMap\");\r\n        for (int i = 0; i < 10; i++) {\r\n            map.put(String.valueOf(i), String.valueOf(i).getBytes());\r\n        }\r\n        byte[] o = map.get(\"2\"); //java.lang.ClassCastException: java.lang.String cannot be cast to [B\r\n\r\n\r\nIs it wrong way  to use RMap?\r\n", "url": "https://github.com/redisson/redisson/issues/846", "user": "athinboy", "labels": ["bug"], "created": "2017-04-20 02:59:35", "closed": "2017-06-24 08:32:10", "commits": {"659fb9155c291de8b6e391a5616b90a02dfb7836": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 65.00027777777778, "commitsDetails": [{"commitHash": "659fb9155c291de8b6e391a5616b90a02dfb7836", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ecd9248f45396cc95d434c0b2d7348756ff677d1"], "nameRev": "659fb9155c291de8b6e391a5616b90a02dfb7836 tags/redisson-2.9.4~30", "commitMessage": "JsonJacksonMapCodec added. #532 #916 #846\n", "commitDateTime": "2017-06-24 11:33:34", "authoredDateTime": "2017-06-24 11:33:34", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/codec/JsonJacksonMapCodec.java", "insertions": 113, "deletions": 0, "lines": 113}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/JsonJacksonMapValueCodec.java", "insertions": 0, "deletions": 63, "lines": 63}, {"filePath": "redisson/src/test/java/org/redisson/RedissonCodecTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/client/codec/JsonJacksonMapValueCodecTest.java", "insertions": 23, "deletions": 15, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JsonJacksonMapCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.JsonJacksonMapCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JsonJacksonMapValueCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.JsonJacksonMapValueCodec", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonCodecTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCodecTest", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonCodecTest.1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JsonJacksonMapValueCodecTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.JsonJacksonMapValueCodecTest.setUp()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.codec.JsonJacksonMapValueCodecTest", "TOT": 8, "UPD": 4, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "No field factory in class Ljava/net/URL", "body": "``` Java\r\n                Config config = new Config();\r\n                SingleServerConfig singleServerConfig = config.useSingleServer();\r\n//                ReplicatedServersConfig singleServerConfig = config.useReplicatedServers();\r\n                String address = redisResult.getHost().concat(\":\").concat(redisResult.getPort());\r\n                singleServerConfig.setAddress(address);\r\n                singleServerConfig.setSubscriptionConnectionMinimumIdleSize(Constant.SUBSCRIPTION_CONNECTION_MINIMUM_IDLE_SIZE);\r\n                singleServerConfig.setSubscriptionConnectionPoolSize(Constant.SUBSCRIPTION_CONNECTION_POOL_SIZE);\r\n                singleServerConfig.setConnectionMinimumIdleSize(Constant.CONNECTION_MINIMUM_IDLE_SIZE);\r\n                singleServerConfig.setTimeout(Constant.TIME_OUT);\r\n                singleServerConfig.setRetryAttempts(Constant.RETRY_ATTEMPTS);\r\n                singleServerConfig.setRetryInterval(Constant.RETRY_INTERVAL);\r\n//                singleServerConfig.setScanInterval(Constant.SCAN_INTERVAL);\r\n                singleServerConfig.setReconnectionTimeout(Constant.RECONNECTION_TIME_OUT);\r\n                singleServerConfig.setFailedAttempts(Constant.FAILED_ATTEMPT);\r\n                singleServerConfig.setPassword(redisResult.getPassword());\r\n                singleServerConfig.setSubscriptionsPerConnection(Constant.SUBSCRIPTIONS_PER_CONNECTION);\r\n                redisson = Redisson.create(config);\r\n```\r\n\r\nConfigure as above, but raise ```java.lang.IllegalStateException: java.lang.NoSuchFieldException: No field factory in class Ljava/net/URL; (declaration of 'java.net.URL' appears in /system/framework/core-libart.jar)``` Exception.", "url": "https://github.com/redisson/redisson/issues/840", "user": "huayicheng2015", "labels": ["bug"], "created": "2017-04-13 08:06:56", "closed": "2017-04-20 06:37:24", "commits": {"91a03ecd90c5e8efa6246b241b99b9a28cff747e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "91a03ecd90c5e8efa6246b241b99b9a28cff747e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bac2e9becd4fcb121b9c318a7e11d02f1cc5ec49"], "nameRev": "91a03ecd90c5e8efa6246b241b99b9a28cff747e tags/redisson-2.9.0~28", "commitMessage": "Fixed error - No field factory in class Ljava/net/URL #840\n", "commitDateTime": "2017-04-20 09:38:35", "authoredDateTime": "2017-04-20 09:38:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/URLBuilder.java", "insertions": 17, "deletions": 2, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URLBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URLBuilder.replaceURLFactory()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.URLBuilder.getFactoryField()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.URLBuilder.restoreURLFactory()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["91a03ecd90c5e8efa6246b241b99b9a28cff747e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 2, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.URLBuilder.restoreURLFactory()", "org.redisson.misc.URLBuilder.replaceURLFactory()", "org.redisson.misc.URLBuilder.getFactoryField()"]}, {"title": "schema error in Integration with Spring  by namespack", "body": "in doc https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks,\r\nthe chart 14.1. Spring Framework\uff0cthe that:\r\nhttp://redisson.org/schema/redisson\r\nhttp://redisson.org**_/schema/redisson/redisson.xsd_**\r\nbut it comes to error, the spring can not find \"redisson.org/schema/redisson/redisson.xsd\"\r\n\r\ni unzip the redisson.jar\uff0cand find the in the file \"spring.schemas\" only that:\r\nhttp\\://redisson.org**_/schema/redisson.xsd_**=org/redisson/spring/support/redisson-1.0.xsd\r\nhttp\\://redisson.org/schema/redisson-1.0.xsd=org/redisson/spring/support/redisson-1.0.xsd\r\n\r\ni use \"redisson.org/schema/redisson.xsd\", it comes ok\r\n\r\ndifference:\r\n\r\n\"http://redisson.org/schema/redisson.xsd\"                                   in spring.schemas\r\n\"http://redisson.org/schema/redisson/redisson.xsd\"                     in online doc\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/835", "user": "shixiangweii", "labels": ["bug"], "created": "2017-04-05 06:00:45", "closed": "2017-04-14 08:28:42", "commits": {"36f875d01a2c203619e8b0a6e86ede6e08215f6e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "36f875d01a2c203619e8b0a6e86ede6e08215f6e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["242c73897fef9f1d57982ce5ae14b317e71f0bb5", "dbfe0f6958948abb4efad2bf3168dc3b7ff71631"], "nameRev": "36f875d01a2c203619e8b0a6e86ede6e08215f6e tags/redisson-2.9.0~27^2~5", "commitMessage": "Merge pull request #836 from jackygurui/schema-fix\n\nschema file corrected as suggested by #835", "commitDateTime": "2017-04-10 17:52:37", "authoredDateTime": "2017-04-10 17:52:37", "commitGitStats": [{"filePath": "redisson/src/main/resources/META-INF/spring.schemas", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "putIfAbsent followed by addAndGet causes bad argument #2 to 'unpack' (data string too short)", "body": "Hello , have peculiar situation where below works only first time around (reason for first API call is to establish \"expire\" on key as addAndGet does not allow one to specify expire)\r\n\r\nso below works fine during first run, subsequent runs Redisson throws an exception (below at the end of this post)\r\n\r\nthanks for any input on this\r\n\r\nRMapCache<String, Object> mapCache = redisClient.getMapCache(\"test_put_if_absent\");\r\nObject  currValue = mapCache.putIfAbsent(\"4\", 0L, 10000L, TimeUnit.SECONDS);\r\nObject updatedValue = mapCache.addAndGet(\"4\", 1L);\r\nSystem.out.println(\"updatedValue: \" + updatedValue);\r\n\r\n------------\r\n\r\norg.redisson.client.RedisException: ERR Error running script (call to f_04ca52da6f32fea58a7378efe5e857fbdc376470): @user_script:1: user_script:1: bad argument #2 to 'unpack' (data string too short) . channel: [id: 0xfe4a958b, /127.0.0.1:45434 => /127.0.0.1:6379] command: CommandData [promise=org.redisson.misc.RedissonPromise@34c88748[Not completed], command=(EVAL), params=[if redis.call('hexists', KEYS[1], ARGV[4]) == 0 then if tonumber(ARGV[1]) > 0 then redis.call('zadd'..., 3, test_put_if_absent, redisson__timeout__set:{test_put_if_absent}, redisson__idle__set:{test_put_if_absent}, 1490911908793, 0, 0, 4, 0], codec=org.redisson.codec.JsonJacksonCodec@7bb8b36e]\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:267)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:127)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\r\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:831)\r\n\tat io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:346)\r\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:254)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\r\n\tat java.lang.Thread.run(Thread.java:745)", "url": "https://github.com/redisson/redisson/issues/827", "user": "andrewmilkowski", "labels": ["bug"], "created": "2017-03-30 19:30:33", "closed": "2017-04-14 08:29:24", "commits": {"e35737e08bba62e92c96f801432c42438f62080c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "e35737e08bba62e92c96f801432c42438f62080c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9e0d445ee9baa46fbfffa454fad493d19b4a6466", "c9002cbd1897d057e7d5364cf96baca9a7e56d59"], "nameRev": "e35737e08bba62e92c96f801432c42438f62080c tags/redisson-2.9.0~22^2~1", "commitMessage": "Merge pull request #830 from jackygurui/add-and-get-for-mapcache\n\nfix the #827", "commitDateTime": "2017-04-20 16:39:35", "authoredDateTime": "2017-04-20 16:39:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 55, "deletions": 1, "lines": 56}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 27, "deletions": 0, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.putIfAbsentAsync(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.addAndGet(java.lang.Object,java.lang.Number)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.addAndGetAsync(java.lang.Object,java.lang.Number)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testIssue827()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "`RedissonSpringCacheManager` creates new cache on  each `getCache` call", "body": "Currently `RedissonSpringCacheManager` creates new cache on each `getCache` call. But it should reuse existing caches if there are. Otherwise, Spring cache interceptor retrieves new cache at each time.\r\n\r\nThis behaviour can be implemented by just extending from  `org.springframework.cache.support.AbstractCacheManager` and overriding `getMissingCache` method as implemented in current `getCache` method.", "url": "https://github.com/redisson/redisson/issues/819", "user": "serkan-ozal", "labels": ["bug"], "created": "2017-03-22 13:22:44", "closed": "2017-03-27 09:30:24", "commits": {"4071413b42843d45dfd24a93368f120c3208bb89": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "4071413b42843d45dfd24a93368f120c3208bb89", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4b029448f814b602224a729874157236e6d2d7d0"], "nameRev": "4071413b42843d45dfd24a93368f120c3208bb89 tags/redisson-2.9.0~58", "commitMessage": "Fixed - `RedissonSpringCacheManager` creates new cache on each `getCache` call #819\n", "commitDateTime": "2017-03-27 12:31:28", "authoredDateTime": "2017-03-27 12:31:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/RedissonSpringCacheManager.java", "insertions": 37, "deletions": 14, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSpringCacheManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonSpringCacheManager", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.spring.cache.RedissonSpringCacheManager.createMap(java.lang.String)", "TOT": 11, "UPD": 1, "INS": 7, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.cache.RedissonSpringCacheManager.createMapCache(java.lang.String)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.spring.cache.RedissonSpringCacheManager.getCache(java.lang.String)", "TOT": 21, "UPD": 0, "INS": 5, "MOV": 11, "DEL": 5}, {"spoonMethodName": "org.redisson.spring.cache.RedissonSpringCacheManager.createMapCache(java.lang.String,org.redisson.spring.cache.CacheConfig)", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4071413b42843d45dfd24a93368f120c3208bb89"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 37, "deletions": 14, "lines": 51, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 46, "UPD": 3, "INS": 21, "MOV": 15, "DEL": 7, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/spring/cache"], "changesInPackagesSPOON": ["org.redisson.spring.cache.RedissonSpringCacheManager.createMap(java.lang.String)", "org.redisson.spring.cache.RedissonSpringCacheManager", "org.redisson.spring.cache.RedissonSpringCacheManager.createMapCache(java.lang.String)", "org.redisson.spring.cache.RedissonSpringCacheManager.createMapCache(java.lang.String,org.redisson.spring.cache.CacheConfig)", "org.redisson.spring.cache.RedissonSpringCacheManager.getCache(java.lang.String)"]}, {"title": "Wrong encoder usage for value in `RedissonLocalCachedMap::fastPutAsync`", "body": "`RedissonLocalCachedMap` should use `encodeMapValue` instead of `encodeMapKey` at here https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java#L342", "url": "https://github.com/redisson/redisson/issues/818", "user": "serkan-ozal", "labels": ["bug"], "created": "2017-03-22 09:50:42", "closed": "2017-03-27 09:29:52", "commits": {"c9ddee86679cd8178a63741f518938ef96ed51cb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "c9ddee86679cd8178a63741f518938ef96ed51cb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["512f1e6f69cd4f83ba255e39170fa4815359b2dd"], "nameRev": "c9ddee86679cd8178a63741f518938ef96ed51cb tags/redisson-2.9.0~60", "commitMessage": "Wrong encoder usage for value in `RedissonLocalCachedMap::fastPutAsync. #818\n", "commitDateTime": "2017-03-27 12:29:07", "authoredDateTime": "2017-03-27 12:29:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.fastPutAsync(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c9ddee86679cd8178a63741f518938ef96ed51cb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap.fastPutAsync(java.lang.Object,java.lang.Object)"]}, {"title": "Cache @Cacheable with sync=true never expires", "body": "I am using redisson for Spring Cache.\r\nIf I set sync=true for @Cacheable then this cache never expires (cache ttl is ignored).\r\nProbably the reason of this issue is in code of function\r\n`\r\nRedissonCache#public <T> T get(Object key, Callable<T> valueLoader) \r\n` \r\nAlso no ZSET \"redisson__idle__set__{...}\" is created in Redis in this case.", "url": "https://github.com/redisson/redisson/issues/813", "user": "iholub", "labels": ["bug"], "created": "2017-03-17 15:25:28", "closed": "2017-04-20 06:40:15", "commits": {"89320d32f9b9d7951f04331a5267a3e900508fa0": {"commitGHEventType": "closed", "commitUser": "mrniko"}}, "ttf": 33.000277777777775, "commitsDetails": [{"commitHash": "89320d32f9b9d7951f04331a5267a3e900508fa0", "commitGHEventType": "closed", "commitUser": "mrniko", "commitParents": ["91a03ecd90c5e8efa6246b241b99b9a28cff747e", "0c4e788e00cb2f7ee7ba5b7246165eb68b9eaffd"], "nameRev": "89320d32f9b9d7951f04331a5267a3e900508fa0 tags/redisson-2.9.0~27", "commitMessage": "Merge pull request #843 from iamdobi/master\n\nfix #813", "commitDateTime": "2017-04-20 09:40:13", "authoredDateTime": "2017-04-20 09:40:13", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/spring/cache/RedissonCache.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/spring/cache/RedissonSpringCacheShortTTLTest.java", "insertions": 174, "deletions": 0, "lines": 174}, {"filePath": "redisson/src/test/resources/org/redisson/spring/cache/cache-config-shortTTL.json", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonCache.get(java.lang.Object,java.util.concurrent.Callable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonSpringCacheShortTTLTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.spring.cache.RedissonSpringCacheShortTTLTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NPE during RLocalCachedMap.fastRemove invocation", "body": "", "url": "https://github.com/redisson/redisson/issues/810", "user": "mrniko", "labels": ["bug"], "created": "2017-03-16 10:55:41", "closed": "2017-03-16 17:05:11", "commits": {"3a9b555a4d0c55ebca0015a3aa742aeb774bd29b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3a9b555a4d0c55ebca0015a3aa742aeb774bd29b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["93b7a60ee9c7de2cdc164b6fe0bcfbbf2c8ab080"], "nameRev": "3a9b555a4d0c55ebca0015a3aa742aeb774bd29b tags/redisson-2.8.2~12", "commitMessage": "Fixed - NPE during RLocalCachedMap.fastRemove invocation #810\n", "commitDateTime": "2017-03-16 20:05:08", "authoredDateTime": "2017-03-16 20:05:08", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 29, "deletions": 22, "lines": 51}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLocalCachedMapTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.fastRemoveAsync(java.lang.Object[])", "TOT": 19, "UPD": 2, "INS": 5, "MOV": 6, "DEL": 6}]}, {"spoonFilePath": "RedissonLocalCachedMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMapTest.testFastRemoveEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3a9b555a4d0c55ebca0015a3aa742aeb774bd29b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 22, "lines": 51, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 19, "UPD": 2, "INS": 5, "MOV": 6, "DEL": 6, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap.fastRemoveAsync(java.lang.Object[])"]}, {"title": "factory already defined error when starts tomcat with two WAR apps", "body": "Hi,\r\n\r\n    I have met an issue seems have been fixed :( \r\n\r\n- software stack info is as follows:\r\n```\r\nUsing CATALINA_BASE:   /opt/appstack/apache-tomcat\r\nUsing CATALINA_HOME:   /opt/appstack/apache-tomcat\r\nUsing CATALINA_TMPDIR: /opt/appstack/apache-tomcat/temp\r\nUsing JRE_HOME:        /opt/appstack/java\r\nUsing CLASSPATH:       /opt/appstack/apache-tomcat/bin/bootstrap.jar:/opt/appstack/apache-tomcat/bin/tomcat-juli.jar\r\nServer version: Apache Tomcat/7.0.62\r\nServer built:   May 7 2015 17:14:55 UTC\r\nServer number:  7.0.62.0\r\nOS Name:        Linux\r\nOS Version:     3.10.0-327.36.3.el7.x86_64\r\nArchitecture:   amd64\r\nJVM Version:    1.7.0_76-b13\r\nJVM Vendor:     Oracle Corporation\r\n```\r\n\r\n- Configuration  in context.xml of tomcat\r\n```\r\n    <Manager className=\"org.redisson.tomcat.RedissonSessionManager\"\r\n         configPath=\"/opt/appstack/apache-tomcat/conf/redisson.json\" />\r\n   \r\n```\r\n\r\n- Process  to reproduce this issue\r\n\r\n1. stop tomcat\r\n2. cp two app WARs built by maven to $/webapps\r\n3. start tomcat\r\n\r\nPlease note that, if I place only one war in the webapps directory, this issue won't occur ...\r\n\r\n- error  message when this issue occurs\r\n```\r\n\u4fe1\u606f: Deploying web application archive /opt/appstack/apache-tomcat/webapps/mtopc.war\r\n\u4e09\u6708 10, 2017 5:30:52 \u4e0b\u5348 org.apache.catalina.startup.HostConfig deployWAR\r\n\u4fe1\u606f: Deploying web application archive /opt/appstack/apache-tomcat/webapps/collaboration.war\r\n\u4e09\u6708 10, 2017 5:30:52 \u4e0b\u5348 org.apache.catalina.deploy.WebXml setVersion\r\n\u8b66\u544a: Unknown version string [3.1]. Default version will be used.\r\n\u4e09\u6708 10, 2017 5:30:52 \u4e0b\u5348 org.apache.catalina.deploy.WebXml setVersion\r\n\u8b66\u544a: Unknown version string [3.1]. Default version will be used.\r\n\u4e09\u6708 10, 2017 5:30:53 \u4e0b\u5348 org.apache.catalina.core.StandardContext startInternal\r\n\u4e25\u91cd: The session manager failed to start\r\norg.apache.catalina.LifecycleException: Failed to start component [org.redisson.tomcat.RedissonSessionManager[/mtopc]]\r\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)\r\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5537)\r\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)\r\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)\r\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:652)\r\n        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:1095)\r\n        at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1930)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n        at java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n        at java.lang.Thread.run(Unknown Source)\r\nCaused by: java.lang.Error: factory already defined\r\n        at java.net.URL.setURLStreamHandlerFactory(Unknown Source)\r\n        at org.redisson.misc.URLBuilder.replaceURLFactory(URLBuilder.java:85)\r\n        at org.redisson.misc.URLBuilder.create(URLBuilder.java:110)\r\n        at org.redisson.config.MasterSlaveServersConfig.setMasterAddress(MasterSlaveServersConfig.java:65)\r\n        at org.redisson.connection.SingleConnectionManager.create(SingleConnectionManager.java:72)\r\n        at org.redisson.connection.SingleConnectionManager.<init>(SingleConnectionManager.java:49)\r\n        at org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:255)\r\n        at org.redisson.Redisson.<init>(Redisson.java:115)\r\n        at org.redisson.Redisson.create(Redisson.java:154)\r\n        at org.redisson.tomcat.RedissonSessionManager.startInternal(RedissonSessionManager.java:161)\r\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n        ... 12 more\r\n```", "url": "https://github.com/redisson/redisson/issues/798", "user": "ensean", "labels": ["bug"], "created": "2017-03-10 09:54:53", "closed": "2017-03-16 07:11:00", "commits": {"98e83507079292624133c7d8fd89a4e03bf0bf1f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "98e83507079292624133c7d8fd89a4e03bf0bf1f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0129403c6bbcb345be76a6f9b231499c402d7998"], "nameRev": "98e83507079292624133c7d8fd89a4e03bf0bf1f tags/redisson-2.8.2~15", "commitMessage": "URLBuilder made synchronized #798\n", "commitDateTime": "2017-03-15 11:17:01", "authoredDateTime": "2017-03-15 11:17:01", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/URLBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URLBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URLBuilder.restoreURLFactory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.URLBuilder.replaceURLFactory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["98e83507079292624133c7d8fd89a4e03bf0bf1f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.URLBuilder.restoreURLFactory()", "org.redisson.misc.URLBuilder.replaceURLFactory()"]}, {"title": "redisson-tomcat-8-3.3.1.jar not compatible with Tomcat 8.5.2", "body": "Using `redisson-tomcat-8-3.3.1.jar` inside a TomEE 7.0.0, which in turn is based on Tomcat 8.5.2, leads to the exception below. It looks like the API has changed from Tomcat 8.0 to 8.5 by at least leaving out `org.apache.catalina.util.LifecycleSupport` as can be seen in [Tomcats repository](http://svn.apache.org/repos/asf/tomcat/tc8.5.x/tags/TOMCAT_8_5_2/java/org/apache/catalina/util/).\r\n\r\n```\r\njava.lang.ClassNotFoundException: org.apache.catalina.util.LifecycleSupport\r\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n    ... 40 common frames omitted\r\nWrapped by: java.lang.NoClassDefFoundError: org/apache/catalina/util/LifecycleSupport\r\n    at org.redisson.tomcat.RedissonSessionManager.<init>(RedissonSessionManager.java:46)\r\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n    at java.lang.Class.newInstance(Class.java:442)\r\n    at org.apache.tomcat.util.digester.ObjectCreateRule.begin(ObjectCreateRule.java:117)\r\n    at org.apache.tomcat.util.digester.Digester.startElement(Digester.java:1188)\r\n    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:509)\r\n    at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:182)\r\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1343)\r\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2786)\r\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)\r\n    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)\r\n    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)\r\n    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)\r\n    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)\r\n    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)\r\n    at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)\r\n    at org.apache.tomcat.util.digester.Digester.parse(Digester.java:1461)\r\n    at org.apache.catalina.startup.ContextConfig.processContextConfig(ContextConfig.java:536)\r\n    at org.apache.catalina.startup.OpenEJBContextConfig.processContextConfig(OpenEJBContextConfig.java:224)\r\n    at org.apache.catalina.startup.ContextConfig.contextConfig(ContextConfig.java:493)\r\n    at org.apache.catalina.startup.OpenEJBContextConfig.contextConfig(OpenEJBContextConfig.java:271)\r\n    at org.apache.catalina.startup.ContextConfig.init(ContextConfig.java:734)\r\n    at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:309)\r\n    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:94)\r\n    at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:401)\r\n    at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:115)\r\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:141)\r\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:726)\r\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:702)\r\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:734)\r\n    at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:952)\r\n    at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1823)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n    at java.lang.Thread.run(Thread.java:745)\r\n```", "url": "https://github.com/redisson/redisson/issues/797", "user": "schroenser", "labels": ["bug"], "created": "2017-03-09 13:45:30", "closed": "2017-03-15 09:08:03", "commits": {"2906d574f52aee800e72318400cd2faf30bb5fdf": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "2906d574f52aee800e72318400cd2faf30bb5fdf", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["98e83507079292624133c7d8fd89a4e03bf0bf1f"], "nameRev": "2906d574f52aee800e72318400cd2faf30bb5fdf tags/redisson-2.8.2~14", "commitMessage": "Fixed - redisson-tomcat-8 not compatible with Tomcat 8.5.2 #797\n", "commitDateTime": "2017-03-15 12:08:44", "authoredDateTime": "2017-03-15 12:08:44", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 1, "deletions": 21, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.addLifecycleListener(org.apache.catalina.LifecycleListener)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.findLifecycleListeners()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.removeLifecycleListener(org.apache.catalina.LifecycleListener)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2906d574f52aee800e72318400cd2faf30bb5fdf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 21, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSessionManager.createSession(java.lang.String)", "org.redisson.tomcat.RedissonSessionManager.findLifecycleListeners()", "org.redisson.tomcat.RedissonSessionManager.removeLifecycleListener(org.apache.catalina.LifecycleListener)", "org.redisson.tomcat.RedissonSessionManager", "org.redisson.tomcat.RedissonSessionManager.addLifecycleListener(org.apache.catalina.LifecycleListener)"]}, {"title": "DelayedQueue.remve()\uff0cDelayedQueue.remveAll() can't work\uff0cthe element has not been deleted", "body": "I deleted the element, but still can consume the element.\r\n```\r\nRBlockingFairQueue<String> blockingFairQueue = redisson.getBlockingFairQueue(\"delay_queue111\");\r\nRDelayedQueue<String> delayedQueue = redisson.getDelayedQueue(blockingFairQueue);\r\nnew Thread(){\r\n\tpublic void run() {\r\n\t\ttry {\r\n\t\t\twhile(true){\r\n\t\t\t\tSystem.out.println(\"==========take: \" + blockingFairQueue.take());\r\n\t\t\t}\r\n\t\t} catch (InterruptedException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t};\r\n}.start();\r\ndelayedQueue.offer(\"1_1_1\", 5, TimeUnit.SECONDS);\r\ndelayedQueue.offer(\"1_1_2\", 10, TimeUnit.SECONDS);\r\ndelayedQueue.remove(\"1_1_1\");\r\n```\r\n\r\n\r\nresult print:\r\n\r\n==========take: 1_1_1\r\n==========take: 1_1_2", "url": "https://github.com/redisson/redisson/issues/792", "user": "leichenlei", "labels": ["bug"], "created": "2017-03-08 10:33:12", "closed": "2017-03-15 08:10:18", "commits": {"8b49d5bec4c152e6748f17b853f77c3a3fa0319d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "8b49d5bec4c152e6748f17b853f77c3a3fa0319d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["83e7ef26db0baef2f0404b00518dd433e4507138"], "nameRev": "8b49d5bec4c152e6748f17b853f77c3a3fa0319d tags/redisson-2.8.2~18", "commitMessage": "Fixed - DelayedQueue.remove()\uff0cDelayedQueue.removeAll() don't work #792\n", "commitDateTime": "2017-03-15 11:10:56", "authoredDateTime": "2017-03-15 11:10:56", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonDelayedQueue.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "redisson/src/test/java/org/redisson/RedissonDelayedQueueTest.java", "insertions": 36, "deletions": 1, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonDelayedQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonDelayedQueue.removeAsync(java.lang.Object,int)", "TOT": 11, "UPD": 9, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonDelayedQueue.removeAllAsync(java.util.Collection)", "TOT": 13, "UPD": 9, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonDelayedQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonDelayedQueueTest.testRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonDelayedQueueTest.testRemoveAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8b49d5bec4c152e6748f17b853f77c3a3fa0319d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 4, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 24, "UPD": 18, "INS": 3, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonDelayedQueue.removeAllAsync(java.util.Collection)", "org.redisson.RedissonDelayedQueue.removeAsync(java.lang.Object,int)"]}, {"title": "Call Config.fromJson(File file) method, throws StackOverflowError", "body": "When call Config.fromJson(File file) method, throws StackOverflowError, because loop call itself.\r\n\r\nThe following java test code:\r\n\r\n```\r\npublic class RedisManager {\r\n\tpublic static void main(String[] args) {\r\n\t\tConfig config = null;\r\n\t\ttry {\r\n\t\t\tconfig = Config.fromJSON(new File(\"C:\\\\Users\\\\25817\\\\redis-config.json\"));\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tRedissonClient client = Redisson.create(config);\r\n\t\tRKeys rKeys = client.getKeys();\r\n\t\tIterable<String> iterable = rKeys.getKeys();\r\n\t\titerable.forEach(key -> `System.out.println(key));`\r\n\t}\r\n}\r\n```", "url": "https://github.com/redisson/redisson/issues/789", "user": "popboy100", "labels": ["bug"], "created": "2017-03-07 12:33:28", "closed": "2017-03-07 12:36:08", "commits": {"b8a0c6c277901ed876157fc15e46f078f3926a88": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b8a0c6c277901ed876157fc15e46f078f3926a88", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d182cd7421d67942fc86415f9bbb81c8a674bdc8"], "nameRev": "b8a0c6c277901ed876157fc15e46f078f3926a88 tags/redisson-2.8.2~26", "commitMessage": "Fixed Config.fromJson(File file) method, throws StackOverflowError #789\n", "commitDateTime": "2017-03-07 15:36:36", "authoredDateTime": "2017-03-07 15:36:36", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/config/Config.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.Config.fromYAML(java.io.File)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.config.Config.fromJSON(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b8a0c6c277901ed876157fc15e46f078f3926a88"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 3, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/config"], "changesInPackagesSPOON": ["org.redisson.config.Config.fromYAML(java.io.File)", "org.redisson.config.Config.fromJSON(java.io.File)"]}, {"title": "Using redisson as JCache implementation AND for session replication", "body": "We want to use redisson for JCache and for Tomcat session replication.\r\n\r\nHowever, if we place the two jars inside the /lib folder (as explained by the documentation), the serialization of cached objects fails (ClassNotFoundException). And if we place them in the application, the application will not start because the application context initialization cannot find the RedissonSessionManager.\r\n\r\nHow can we configure redisson for both use cases?", "url": "https://github.com/redisson/redisson/issues/784", "user": "JanDoerrenhaus", "labels": ["bug"], "created": "2017-02-27 14:51:34", "closed": "2017-02-28 15:24:02", "commits": {"204a59472552b5327bfeddb45152391527c3eff4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "204a59472552b5327bfeddb45152391527c3eff4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["da960060b02dfd39d175452b2c80a8dc403f4e7a"], "nameRev": "204a59472552b5327bfeddb45152391527c3eff4 tags/redisson-2.8.1~7", "commitMessage": "TomcatSessionManager can't be used in Tomcat if it already has been deployed in Application. #784\n", "commitDateTime": "2017-02-28 13:59:00", "authoredDateTime": "2017-02-28 13:59:00", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSessionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/config/Config.java", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "redisson/src/main/java/org/redisson/config/ConfigSupport.java", "insertions": 31, "deletions": 7, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSessionManager.startInternal()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.Config.fromJSON(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.Config.fromYAML(java.io.File,java.lang.ClassLoader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.Config.fromJSON(java.io.File,java.lang.ClassLoader)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigSupport.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.ConfigSupport", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.config.ConfigSupport.fromJSON(java.io.File,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.ConfigSupport.fromYAML(java.io.File,java.lang.Class,java.lang.ClassLoader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.ConfigSupport.fromJSON(java.io.File,java.lang.Class,java.lang.ClassLoader)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.ConfigSupport.createMapper(com.fasterxml.jackson.core.JsonFactory,java.lang.ClassLoader)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["204a59472552b5327bfeddb45152391527c3eff4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 56, "deletions": 15, "lines": 71, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 16, "UPD": 0, "INS": 14, "MOV": 0, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson/src/main/java/org/redisson/config"], "changesInPackagesSPOON": ["org.redisson.config.ConfigSupport.createMapper(com.fasterxml.jackson.core.JsonFactory,java.lang.ClassLoader)", "org.redisson.config.ConfigSupport.fromJSON(java.io.File,java.lang.Class)", "org.redisson.config.Config.fromYAML(java.io.File,java.lang.ClassLoader)", "org.redisson.config.ConfigSupport", "org.redisson.tomcat.RedissonSessionManager.startInternal()", "org.redisson.config.Config.fromJSON(java.io.File)", "org.redisson.config.ConfigSupport.fromYAML(java.io.File,java.lang.Class,java.lang.ClassLoader)", "org.redisson.config.Config.fromJSON(java.io.File,java.lang.ClassLoader)", "org.redisson.config.ConfigSupport.fromJSON(java.io.File,java.lang.Class,java.lang.ClassLoader)"]}, {"title": "Intermittent issue with MapCache", "body": "org.redisson.client.RedisException: ERR Error running script (call to f_286dd696309f4ab2005d9df55e2410a1170fe3b3): @user_script:1: user_script:1: bad argument #2 to 'unpack' (data string too short) . channel: [id: 0xafbb4b7e, L:/192.168.50.18:63163 - R:/10.10.10.14:7000] command: CommandData [promise=org.redisson.misc.RedissonPromise@3b015ec9, command=(EVAL), params=[local value = redis.call('hget', KEYS[1], ARGV[2]); if value == false then return nil; end; local t, val = struct.unpack('dLc0', value); local expireDate = 92233720368547758; local expireDateScore = redis.call('zscore', KEYS[2], ARGV[2]); if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end; if t ~= 0 then local expireIdle = redis.call('zscore', KEYS[3], ARGV[2]); if expireIdle ~= false then if tonumber(expireIdle) > tonumber(ARGV[1]) then local value = struct.pack('dLc0', t, string.len(val), val); redis.call('hset', KEYS[1], ARGV[2], value); redis.call('zadd', KEYS[3], t + tonumber(ARGV[1]), ARGV[2]); end; expireDate = math.min(expireDate, tonumber(expireIdle)) end; end; if expireDate <= tonumber(ARGV[1]) then return nil; end; return val; , 3, Flag_LoadMerTranSum2Redis, redissontimeoutset{Flag_LoadMerTranSum2Redis}, redissonidleset{Flag_LoadMerTranSum2Redis}, 1483429282335, Risk_tranSum_init_string], codec=org.redisson.codec.FstCodec@56f5fc62]", "url": "https://github.com/redisson/redisson/issues/779", "user": "China-Bill-Git", "labels": ["bug"], "created": "2017-02-21 14:45:04", "closed": "2017-03-03 12:26:33", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "StackOverflowException in URLBuilder", "body": "URIBuilder is not thread-safe. Following scenario causes infinite recursion and StackOverflowException when someone tries to create new URL:\r\n\r\n1. `URLBuilder.replaceURLFactory()` - URLBuilder.currentFactory set to null, URL.factory set to custom\r\n2. `URLBuilder.replaceURLFactory()` - URLBuilder.currentFactory set to custom, URL.factory set to custom again\r\n3. `new URL(\"http://google.com\")` fails on StackOverflowException. Following code is an infinite loop because currentFactory points to \"this\":\r\n```\r\npublic URLStreamHandler createURLStreamHandler(String protocol) {\r\n    (...)\r\n    if (currentFactory != null) {\r\n        return currentFactory.createURLStreamHandler(protocol);\r\n    }\r\n    (...)\r\n}\r\n```\r\n\r\nSample stacktrace:\r\n```\r\n15:15:06.594 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.594 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.594 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n15:15:06.595 [DEBUG] [TestEventLogger]         at org.redisson.misc.URLBuilder$1.createURLStreamHandler(URLBuilder.java:78)\r\n```\r\n\r\nAffected version: 3.3.0", "url": "https://github.com/redisson/redisson/issues/776", "user": "mabn", "labels": ["bug"], "created": "2017-02-20 14:21:46", "closed": "2017-02-22 14:37:08", "commits": {"c7798412fdb66b72ace891c0dad65db7faed5a04": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "c7798412fdb66b72ace891c0dad65db7faed5a04", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["641063c9fc4414a954eb83afeea358cd1a35207b"], "nameRev": "c7798412fdb66b72ace891c0dad65db7faed5a04 tags/redisson-2.8.1~15", "commitMessage": "StackOverflowException in URLBuilder fixed.  #776\n", "commitDateTime": "2017-02-22 17:37:18", "authoredDateTime": "2017-02-22 17:37:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/URLBuilder.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URLBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URLBuilder.replaceURLFactory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c7798412fdb66b72ace891c0dad65db7faed5a04"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.URLBuilder.replaceURLFactory()"]}, {"title": "Redisson connects to slaves of other masters", "body": "When sentinel announces a new slave:\r\n\r\n`+slave slave 1.1.1.1:6379 1.1.1.1 6379 @ redis-master-A 2.2.2.2 6379`\r\n\r\nredisson adds this slave to its configuration but it **does not** check if it's a slave of the master used by redisson. As a result redisson attempts to connect to another cluster.\r\n\r\nThe issue is in `SentinelConnectionManager.onSlaveAdded`", "url": "https://github.com/redisson/redisson/issues/774", "user": "mabn", "labels": ["bug"], "created": "2017-02-17 17:58:12", "closed": "2017-02-19 09:02:17", "commits": {"90aaaac47341f6bad9cc4e7eaa6c191c79581710": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "90aaaac47341f6bad9cc4e7eaa6c191c79581710", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cd32eec908ac6f131d58a4486be286f6918fec38"], "nameRev": "90aaaac47341f6bad9cc4e7eaa6c191c79581710 tags/redisson-2.8.0~2", "commitMessage": "Check master during new slave discovery in Sentinel mode. #774\n", "commitDateTime": "2017-02-19 12:02:40", "authoredDateTime": "2017-02-19 12:02:40", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.isUseSameMaster(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URL,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onNodeUp(java.net.URL,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["90aaaac47341f6bad9cc4e7eaa6c191c79581710"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 0, "lines": 23, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.onNodeUp(java.net.URL,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URL,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.isUseSameMaster(java.lang.String[])"]}, {"title": "RLocalCachedMap is not Redis cluster compatible", "body": "", "url": "https://github.com/redisson/redisson/issues/764", "user": "mrniko", "labels": ["bug"], "created": "2017-02-08 10:51:33", "closed": "2017-02-08 10:56:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NullPointerException on some weird Redis cluster status", "body": "Hi,\r\n\r\nI use redisson 3.2.3 on my project. I try to do some Resilience test and sometimes i had this exception : \r\n\r\n```\r\n2017-02-03 13:01:44.318  WARN   --- [redisson-netty-1-6] io.netty.util.concurrent.DefaultPromise  : An exception was thrown by org.redisson.cluster.ClusterConnectionManager$5.operationComplete()\r\n\r\njava.lang.NullPointerException: null\r\n\tat org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(ClusterConnectionManager.java:514)\r\n\tat org.redisson.cluster.ClusterConnectionManager.access$1400(ClusterConnectionManager.java:65)\r\n\tat org.redisson.cluster.ClusterConnectionManager$5.operationComplete(ClusterConnectionManager.java:394)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:500)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:479)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420)\r\n```\r\n\r\nThis is my test : \r\n insert value continously\r\n kill master\r\n wait 15s\r\n restart my node\r\n wait 5\r\n start from the begining.\r\n\r\nThe last cluster status print by ClusterConnectionManager.java:390 (log.debug(\"cluster nodes state from {}:\\n{}\", connection.getRedisClient().getAddr(), nodesValue);) is\r\n\r\n```\r\n2017-02-02 16:01:37,585|DEBUG|sogood |redisson-netty-1-91|||o.r.c.ClusterConnectionManager|cluster nodes state from /10.98.67.184:52000:\r\nb7c355273d2c09eab72bb13b0111463f6c7e82df 10.98.68.16:52000 master - 0 1486123810474 247 connected 13107-16383\r\n49f64bd7c6749a78fe20bbe8b8d4edbf8b2ed711 10.98.67.177:52000 slave 888724ee5ace06c9df65f2ea78e34df9960d3df7 0 1486123808464 254 connected\r\n2cdd5ca8c9d406469d6147c386d5ccbca8d9f771 10.98.68.14:52000 slave b7c355273d2c09eab72bb13b0111463f6c7e82df 0 1486123809472 247 connected\r\nf1a64ada3b196f0ede36f9c76f3e9b68e51d9e1f 10.98.68.15:52000 slave 888724ee5ace06c9df65f2ea78e34df9960d3df7 0 1486123812486 254 connected\r\n56b94b881bd65c2a5a4afad813e86834343c79c5 10.98.68.11:52000 slave ffccc1ce6b77f0001bdbf50c46a48a5210272517 0 1486123811480 251 connected\r\n26ffe21713c32342dc5205d6df2fe705b5a36bf9 10.98.68.13:52000 master - 0 1486123809469 253 connected 3277-6553\r\nf19eb78f3165b800f8b2189f307c1ba1d3563476 10.98.68.7:52000 slave 3f0de04cfedfbedd7d33f6e97b10651cbb33f0ef 0 1486123812481 256 connected\r\n19e401763468351ea5fd4a427e79036a622f1dfa 10.98.67.180:52000 slave ffccc1ce6b77f0001bdbf50c46a48a5210272517 0 1486123808464 251 connected\r\nffccc1ce6b77f0001bdbf50c46a48a5210272517 10.98.67.184:52000 myself,master - 0 0 251 connected 0-3276\r\n79fa0a09c3c2f49f816843fcd4e762f428d96984 10.98.67.175:52000 slave 26ffe21713c32342dc5205d6df2fe705b5a36bf9 0 1486123810474 253 connected\r\n299302f881862c83c4f4046df9da28a068b76b40 10.98.68.17:52000 slave f19eb78f3165b800f8b2189f307c1ba1d3563476 0 1486123809469 201 connected\r\n3f0de04cfedfbedd7d33f6e97b10651cbb33f0ef 10.98.68.12:52000 master - 0 1486123812481 256 connected 6554-9829\r\n888724ee5ace06c9df65f2ea78e34df9960d3df7 10.98.68.10:52000 master - 0 1486123812481 254 connected 9830-13106\r\n9377d08613f8e0717488fa383535182a561e1693 10.98.68.9:52000 slave 26ffe21713c32342dc5205d6df2fe705b5a36bf9 0 1486123810474 253 connected\r\nf20f77ed851c01ed34c9d91bbea0e512616f5430 10.98.67.182:52000 slave b7c355273d2c09eab72bb13b0111463f6c7e82df 0 1486123808464 247 connected\r\n```\r\n\r\nAs you can see, node 299302f881862c83c4f4046df9da28a068b76b40 is slave of f19eb78f3165b800f8b2189f307c1ba1d3563476 which is a another slave (Maybe a redis bug ?)\r\n\r\nSo ClusterConnectionManager.parsePartitions generate for that slave a line like that\r\n` ClusterPartition [nodeId=f19eb78f3165b800f8b2189f307c1ba1d3563476, masterFail=false, masterAddress=null, slaveAddresses=[redis://10.98.68.17:52000], failedSlaves=[], slotRanges=[]]`\r\n\r\nAnd in ClusterConnectionManager.checkMasterNodesChange we have NullPointer on that if\r\n```\r\nif (!newPart.getMasterAddress().equals(currentPart.getMasterAddress())) {\r\n                        continue;\r\n                    }\r\n```\r\n\r\nI'm not sur how, but it seem after that there is no other scheduleClusterChangeCheck and  this is a big probleme.\r\n\r\nI hope this is clear. (Sorry about my english, i'm a french guy).\r\nI'm going to to do a PR for this particular problem, but i want help to understand why this NullPoint completly kill the scheduleClusterChangeCheck thread\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/761", "user": "ylorenzati", "labels": ["bug"], "created": "2017-02-03 13:11:42", "closed": "2017-02-16 11:13:56", "commits": {"0f4d3fe04d461c6f557447d84e6801b0361d5af2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "0f4d3fe04d461c6f557447d84e6801b0361d5af2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["db7460abedc9bb05379e1bd11ddc55c67b1c5118"], "nameRev": "0f4d3fe04d461c6f557447d84e6801b0361d5af2 tags/redisson-2.8.0~6", "commitMessage": "Cluster's cascade slaves support #761\n", "commitDateTime": "2017-02-15 11:55:17", "authoredDateTime": "2017-02-15 11:55:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 47, "deletions": 14, "lines": 61}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterPartition.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.parsePartitions(java.util.List)", "TOT": 27, "UPD": 1, "INS": 3, "MOV": 21, "DEL": 2}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addCascadeSlaves(java.util.Map)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.getPartition(java.util.Map,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterPartition.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterPartition.Type", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.getParent()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.setParent(org.redisson.cluster.ClusterPartition)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.setType(org.redisson.cluster.ClusterPartition$Type)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.getType()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0f4d3fe04d461c6f557447d84e6801b0361d5af2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 69, "deletions": 14, "lines": 83, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 38, "UPD": 1, "INS": 14, "MOV": 21, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.parsePartitions(java.util.List)", "org.redisson.cluster.ClusterPartition", "org.redisson.cluster.ClusterConnectionManager.addCascadeSlaves(java.util.Map)", "org.redisson.cluster.ClusterPartition.getParent()", "org.redisson.cluster.ClusterConnectionManager.getPartition(java.util.Map,java.lang.String)", "org.redisson.cluster.ClusterPartition.getType()", "org.redisson.cluster.ClusterPartition.setParent(org.redisson.cluster.ClusterPartition)", "org.redisson.cluster.ClusterPartition.Type", "org.redisson.cluster.ClusterPartition.setType(org.redisson.cluster.ClusterPartition$Type)"]}, {"title": "Remote service registry process to consider usage of method overload scenario", "body": "", "url": "https://github.com/redisson/redisson/issues/760", "user": "jackygurui", "labels": ["bug"], "created": "2017-02-02 15:07:07", "closed": "2017-02-16 11:14:37", "commits": {"631369a3fbb2627a0e26795fee04eb7b104619d9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "631369a3fbb2627a0e26795fee04eb7b104619d9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["74d0bfeb194bebef2e453394b3a47b8d17f64959", "c5e2ddd66282f96c977dbfef2e31a16d42caf081"], "nameRev": "631369a3fbb2627a0e26795fee04eb7b104619d9 tags/redisson-2.8.0~3^2", "commitMessage": "Merge pull request #766 from jackygurui/remote-service-method-override\n\nRemote service method override for #760", "commitDateTime": "2017-02-16 14:14:12", "authoredDateTime": "2017-02-16 14:14:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/BaseRemoteService.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceKey.java", "insertions": 20, "deletions": 6, "lines": 26}, {"filePath": "redisson/src/main/java/org/redisson/remote/RemoteServiceRequest.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRemoteServiceTest.java", "insertions": 49, "deletions": 0, "lines": 49}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseRemoteService.getMethodSignatures(java.lang.reflect.Method)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.async(java.lang.Class,org.redisson.api.RemoteInvocationOptions,java.lang.Class).1.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseRemoteService.sync(java.lang.Class,org.redisson.api.RemoteInvocationOptions).4.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.register(java.lang.Class,java.lang.Object,int,java.util.concurrent.ExecutorService)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.executeMethod(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService,org.redisson.remote.RemoteServiceRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.api.RBlockingQueue,java.util.concurrent.ExecutorService).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RemoteServiceKey.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.RemoteServiceKey", "TOT": 5, "UPD": 2, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.remote.RemoteServiceKey.equals(java.lang.Object)", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.remote.RemoteServiceKey.getSignatures()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.remote.RemoteServiceKey.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RemoteServiceRequest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.remote.RemoteServiceRequest.toString()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.remote.RemoteServiceRequest", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.remote.RemoteServiceRequest.getSignatures()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRemoteServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testCancelAsync()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testAsync()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testExecutorAsync()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testExecutorsAmountConcurrency()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testTimeout()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testInvocations()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testInvocationWithServiceName()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testProxyToStringEqualsAndHashCode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testInvocationWithFstCodec()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testInvocationWithSerializationCodec()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testNoAckWithResultInvocations()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testNoAckWithResultInvocationsAsync()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testAckWithoutResultInvocations()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testNoAckWithoutResultInvocations()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.testMethodOverload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.methodOverload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.methodOverload(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.methodOverload(java.lang.Long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.methodOverload(java.lang.String,java.lang.Long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.RemoteImpl.methodOverload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.RemoteImpl.methodOverload(java.lang.Long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.RemoteImpl.methodOverload(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteServiceTest.RemoteImpl.methodOverload(java.lang.String,java.lang.Long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RReadWriteLock is not reentrant", "body": "I was expecting the RReadWriteLock to be reentrant, as the [wiki page](https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers#85-readwritelock) describes it as (emphasis mine):\r\n> Redisson distributed **reentrant** ReadWriteLock object for Java\r\n\r\nHowever, in my simple test:\r\n```\r\n        Config config = new Config();\r\n        config.useSingleServer().setAddress(redisAddress);\r\n        this.client = Redisson.create(config);\r\n        \r\n        RReadWriteLock readWriteLock = this.client.getReadWriteLock(\"TEST\");\r\n        LOGGER.warn(\"### Acquiring write lock...\");\r\n        readWriteLock.writeLock().lock();\r\n        LOGGER.warn(\"### Write lock acquired, acquiring read lock...\");\r\n        try {\r\n            boolean success = readWriteLock.readLock().tryLock(10, TimeUnit.SECONDS);\r\n            LOGGER.warn(\"### Lock success: \" + success);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n```\r\nI see:\r\n```\r\napp_1    | 16:24:28.777 [main] WARN  com.craigotis.myapp.core.lock.RedisLockService - ### Acquiring write lock...\r\napp_1    | 16:24:28.856 [main] WARN  com.craigotis.myapp.core.lock.RedisLockService - ### Write lock acquired, acquiring read lock...\r\napp_1    | 16:24:38.862 [main] WARN  com.craigotis.myapp.core.lock.RedisLockService - ### Lock success: false\r\n```\r\nThe \"reentrancy\" clause of the [ReentrantReadWriteLock Javadoc](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/ReentrantReadWriteLock.html) states:\r\n> Additionally, a writer can acquire the read lock, but not vice-versa.\r\n\r\nMy use of redisson relies on these locks being reentrant (at least within the same Thread), however this does not seem to be the case - is this a bug, or a configuration issue on my end?", "url": "https://github.com/redisson/redisson/issues/758", "user": "craigotis", "labels": ["bug"], "created": "2017-01-29 17:10:35", "closed": "2017-01-30 10:26:10", "commits": {"0ffc2ca1e7cbd83522952f061538e9ec2aad649e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0ffc2ca1e7cbd83522952f061538e9ec2aad649e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6f7f43716aa78c99ec4572685f55accc0f6816f7"], "nameRev": "0ffc2ca1e7cbd83522952f061538e9ec2aad649e tags/redisson-2.7.4~8", "commitMessage": "readLock couldn't be acquired by same thread which has already acquired writeLock #758\n", "commitDateTime": "2017-01-30 13:26:19", "authoredDateTime": "2017-01-30 13:26:19", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonReadLock.java", "insertions": 9, "deletions": 19, "lines": 28}, {"filePath": "redisson/src/main/java/org/redisson/RedissonWriteLock.java", "insertions": 9, "deletions": 15, "lines": 24}, {"filePath": "redisson/src/test/java/org/redisson/RedissonReadWriteLockTest.java", "insertions": 30, "deletions": 4, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonReadLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadLock.getHoldCount()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonReadLock.unlock()", "TOT": 20, "UPD": 18, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonReadLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadLock.isHeldByCurrentThread()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonReadLock.getWriteLockName(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonWriteLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonWriteLock.getHoldCount()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonWriteLock.unlock()", "TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonWriteLock.isHeldByCurrentThread()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonWriteLock.getLockName(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonReadWriteLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteLock()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonReadWriteLockTest.testWriteReadReentrancy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0ffc2ca1e7cbd83522952f061538e9ec2aad649e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 34, "lines": 52, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 45, "UPD": 30, "INS": 4, "MOV": 6, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonReadLock.isHeldByCurrentThread()", "org.redisson.RedissonReadLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "org.redisson.RedissonWriteLock.getLockName(long)", "org.redisson.RedissonReadLock.getWriteLockName(long)", "org.redisson.RedissonReadLock.getHoldCount()", "org.redisson.RedissonWriteLock.getHoldCount()", "org.redisson.RedissonReadLock.unlock()", "org.redisson.RedissonWriteLock.isHeldByCurrentThread()", "org.redisson.RedissonWriteLock.unlock()"]}, {"title": "Unlock does not really unlock", "body": "If you unlock a `FairLock` from some thread, there is a delay until all threads actually see that lock as available.\r\n\r\nExample test clase\r\n\r\n```java\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport org.junit.Assert;\r\nimport org.junit.Test;\r\nimport org.redisson.Redisson;\r\nimport org.redisson.api.RLock;\r\nimport org.redisson.api.RedissonClient;\r\nimport org.redisson.config.Config;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n\r\n\r\n\r\npublic class RedissonLockTest {\r\n\r\n    private static final String LOCK_NAME = \"SOME_LOCK\";\r\n    private static final Logger log =\r\n            LoggerFactory.getLogger(RedissonLockTest.class);\r\n\r\n    @Test\r\n    public void itDoesSomething() throws InterruptedException {\r\n\r\n        ExecutorService executorService = Executors.newFixedThreadPool(2);\r\n\r\n        Config config = new Config();\r\n        config.useSingleServer().setAddress(\"127.0.0.1:6379\");\r\n        RedissonClient redisson = Redisson.create(config);\r\n\r\n        executorService.execute(() -> {\r\n            log.info(\"Attempting to get lock on first executor {}\", Thread.currentThread().getId());\r\n            RLock fairLock = redisson.getFairLock(LOCK_NAME);\r\n            try {\r\n                if (fairLock.tryLock(0, TimeUnit.SECONDS)) {\r\n                    try {\r\n                        log.info(\"Sleeping lock holder thread\");\r\n                        Thread.sleep(1000L);\r\n                    }\r\n                    catch (InterruptedException e) {\r\n                        log.error(\"Thread sleep interrupted\", e);\r\n                    }\r\n                    log.info(\"Releasing lock {} from first executor\", LOCK_NAME);\r\n                }\r\n                else {\r\n                    Assert.fail(\"Unable to acquire lock for some reason\");\r\n                }\r\n            }\r\n            catch (InterruptedException e) {\r\n                log.error(\"Interrupted\", e);\r\n            }\r\n            finally {\r\n                if (fairLock.isHeldByCurrentThread()) {\r\n                    fairLock.unlock();\r\n                }\r\n            }\r\n        });\r\n\r\n        executorService.execute(() -> {\r\n            try {\r\n                Thread.sleep(200L);\r\n            }\r\n            catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n            log.info(\"Attempting to get lock on second executor {}\",\r\n                     Thread.currentThread().getId());\r\n            RLock fairLock = redisson.getFairLock(LOCK_NAME);\r\n            try {\r\n                if (fairLock.tryLock(0, TimeUnit.SECONDS)) {\r\n                    log.info(\"Inside second block\");\r\n                    Assert.fail(\"Should not be inside second block\");\r\n                    log.info(\"Releasing lock {} from second executor\", LOCK_NAME);\r\n                }\r\n                else {\r\n                    log.info(\"Second block could not get lock\");\r\n                }\r\n            }\r\n            catch (InterruptedException e) {\r\n                log.error(\"Interrupted\", e);\r\n            }\r\n            finally {\r\n                if (fairLock.isHeldByCurrentThread()) {\r\n                    fairLock.unlock();\r\n                }\r\n            }\r\n        });\r\n\r\n        executorService.awaitTermination(3L, TimeUnit.SECONDS);\r\n\r\n        log.info(\"Attempting to get lock again since it was unlocked\");\r\n\r\n        RLock fairLock = redisson.getFairLock(LOCK_NAME);\r\n        try {\r\n            if (fairLock.tryLock(0, TimeUnit.SECONDS)) {\r\n                log.info(\"Lock successfully acquired\");\r\n            }\r\n            else {\r\n                Assert.fail(\"Could not get unlocked lock \" + LOCK_NAME);\r\n            }\r\n        }\r\n        catch (InterruptedException e) {\r\n            log.error(\"Interrupted\", e);\r\n        }\r\n        finally {\r\n            if (fairLock.isHeldByCurrentThread()) {\r\n                fairLock.unlock();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n```", "url": "https://github.com/redisson/redisson/issues/757", "user": "Hartimer", "labels": ["bug"], "created": "2017-01-28 00:19:22", "closed": "2017-01-30 09:26:39", "commits": {"1b9ec19cb5ca9e26b39dd84371769761b9906185": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "1b9ec19cb5ca9e26b39dd84371769761b9906185", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f92cd4a03ed1d14b85f9c8550d6cb0f4b84a9b94"], "nameRev": "1b9ec19cb5ca9e26b39dd84371769761b9906185 tags/redisson-2.7.4~10", "commitMessage": "failed RFairLock.tryLock attempt retains caller thread in fairLock queue #757\n", "commitDateTime": "2017-01-30 12:23:28", "authoredDateTime": "2017-01-30 12:23:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonFairLock.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 39, "deletions": 11, "lines": 50}, {"filePath": "redisson/src/test/java/org/redisson/RedissonFairLockTest.java", "insertions": 58, "deletions": 3, "lines": 61}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonFairLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonFairLock.acquireFailedAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).9.operationComplete(io.netty.util.concurrent.Future)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).9.operationComplete(io.netty.util.concurrent.Future).1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit,long).8.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).9.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryAcquire(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit,long).8.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.acquireFailed(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.acquireFailedAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.trySuccessFalse(long,org.redisson.misc.RPromise)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryAcquire(long,java.util.concurrent.TimeUnit,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "TOT": 13, "UPD": 0, "INS": 7, "MOV": 6, "DEL": 0}]}, {"spoonFilePath": "RedissonFairLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonFairLockTest.testConcurrency_MultiInstance_Ordering()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonFairLockTest.testExpire().1.run()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonFairLockTest.testTryLockNonDelayed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1b9ec19cb5ca9e26b39dd84371769761b9906185"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 47, "deletions": 11, "lines": 58, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 39, "UPD": 13, "INS": 16, "MOV": 8, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long)", "org.redisson.RedissonLock.acquireFailedAsync(long)", "org.redisson.RedissonLock.tryAcquire(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).9.operationComplete(io.netty.util.concurrent.Future).1.run()", "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).9.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "org.redisson.RedissonLock.tryAcquire(long,java.util.concurrent.TimeUnit,long)", "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).9.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonFairLock.acquireFailedAsync(long)", "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit,long).8.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.trySuccessFalse(long,org.redisson.misc.RPromise)", "org.redisson.RedissonLock.acquireFailed(long)", "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit,long).8.operationComplete(io.netty.util.concurrent.Future).2.run(io.netty.util.Timeout)", "org.redisson.RedissonLock.tryLockAsync(java.util.concurrent.atomic.AtomicLong,long,java.util.concurrent.TimeUnit,org.redisson.api.RFuture,org.redisson.misc.RPromise,long).9"]}, {"title": "NoSuchFieldError", "body": "I use tomcat-8.0.23 and java7\r\n\r\nI find NoSuchFieldError\r\n\r\njava.lang.NoSuchFieldError: attributes\r\n\tat org.redisson.tomcat.RedissonSession.save(RedissonSession.java:146)", "url": "https://github.com/redisson/redisson/issues/746", "user": "expitly", "labels": ["bug"], "created": "2017-01-11 01:57:53", "closed": "2017-01-11 10:23:44", "commits": {"40c39c90e69efafbff524ce438efcf5e17ecca1a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "40c39c90e69efafbff524ce438efcf5e17ecca1a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a0aa37b1d573fb95f4a19375335a4e37169cb1b7"], "nameRev": "40c39c90e69efafbff524ce438efcf5e17ecca1a tags/redisson-2.7.3~6", "commitMessage": "NoSuchFieldError exception fixed. #746\n", "commitDateTime": "2017-01-11 13:23:12", "authoredDateTime": "2017-01-11 13:23:12", "commitGitStats": [{"filePath": "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat/RedissonSession.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSession.java", "spoonMethods": [{"spoonMethodName": "org.redisson.tomcat.RedissonSession.save()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.tomcat.RedissonSession", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["40c39c90e69efafbff524ce438efcf5e17ecca1a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 3, "lines": 32, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson-tomcat/redisson-tomcat-8/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-6/src/main/java/org/redisson/tomcat", "redisson-tomcat/redisson-tomcat-7/src/main/java/org/redisson/tomcat"], "changesInPackagesSPOON": ["org.redisson.tomcat.RedissonSession", "org.redisson.tomcat.RedissonSession.save()"]}, {"title": "Divide by zero error in RedissonBloomFilter contains() when bloom filter is empty", "body": "If a user of Redisson sets up a RBloomFilter (the bloom filter has been successfully initialized) but does not populate it with any values, a call to the contains() method will throw a Divide By Zero exception.  The exception occurs within the hash() method when an attempt is made to use the mod operation with a size of zero.  \r\n\r\n_(hash & Long.MAX_VALUE) % size;_\r\n\r\nA value of false should be returned instead.  It is reasonable that a bloom filter would be created but might be populated after application startup with values encountered by the running application.\r\n\r\nUsing Redisson 3.2.2", "url": "https://github.com/redisson/redisson/issues/739", "user": "jortman", "labels": ["bug"], "created": "2016-12-22 19:43:37", "closed": "2016-12-23 09:09:49", "commits": {"49e0303fa3b85d687cd8c041eafa2a0a71282d49": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "49e0303fa3b85d687cd8c041eafa2a0a71282d49", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["40e4d7fbb9cbe610a8347cf6e7c46fe9ee1f2d6d"], "nameRev": "49e0303fa3b85d687cd8c041eafa2a0a71282d49 tags/redisson-2.7.3~16", "commitMessage": "Added restrictions for RBloomFilter parameters during tryInit invocation. #739\n", "commitDateTime": "2016-12-23 12:09:05", "authoredDateTime": "2016-12-23 12:09:05", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBloomFilter.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBloomFilterTest.java", "insertions": 18, "deletions": 0, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBloomFilter.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBloomFilter.tryInit(long,double)", "TOT": 6, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonBloomFilterTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBloomFilterTest.testFalseProbability1()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBloomFilterTest.testFalseProbability2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBloomFilterTest.testSizeZero()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["49e0303fa3b85d687cd8c041eafa2a0a71282d49"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 2, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBloomFilter.tryInit(long,double)"]}, {"title": "URL.setURLStreamHandlerFactory(new URLStreamHandlerFactory()) causes throw new Error(\"factory already defined\");", "body": "public SingleServerConfig setAddress(String address) {\r\n        if (address != null) {\r\n            this.address = URLBuilder.create(address);\r\n        }\r\n        return this;\r\n    }\r\n\r\nwhen called setAddress(\"127.0.0.1:6379\"), it would invoke URLBuilder.init method and then URL.setURLStreamHandlerFactory(new URLStreamHandlerFactory()) which causes throw new Error(\"factory already defined\");\r\n\r\nBecause the tomcat server already registered a URLStreamHandlerFactory, and jvm did not allow a second registration for the URLStreamHandlerFactory.", "url": "https://github.com/redisson/redisson/issues/734", "user": "atouchingsong", "labels": ["bug"], "created": "2016-12-18 16:11:51", "closed": "2016-12-19 13:18:30", "commits": {"8bd1d868c568a87622571e68d5951b8ce9db4f3d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8bd1d868c568a87622571e68d5951b8ce9db4f3d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3dbf0488fdc5db3e2c5c33eaf5d3bbdb3c6619a9"], "nameRev": "8bd1d868c568a87622571e68d5951b8ce9db4f3d tags/redisson-2.7.2~5", "commitMessage": "Fixed - `factory already defined` error during Redisson initialization. #734\n", "commitDateTime": "2016-12-19 16:18:03", "authoredDateTime": "2016-12-19 16:18:03", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/URLBuilder.java", "insertions": 39, "deletions": 23, "lines": 62}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URLBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URLBuilder.init()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.URLBuilder.init().1.createURLStreamHandler(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8bd1d868c568a87622571e68d5951b8ce9db4f3d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 39, "deletions": 23, "lines": 62, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.URLBuilder.init()", "org.redisson.misc.URLBuilder.init().1.createURLStreamHandler(java.lang.String)"]}, {"title": "IndexOutOfBoundsException when reading from RMapCache", "body": "I am using Redisson 3.2.0 and currently facing a problem reading for a cached collection. The following error is thrown\r\n\r\n`\r\n\"2016-12-07 14:28:01,810 WARN  [redisson-netty-1-2] io.netty.channel.DefaultChannelPipeline   An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\n\"io.netty.handler.codec.DecoderException: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:422)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:367)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:353)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:346)\r\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:367)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:353)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:346)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:367)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:353)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:652)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:575)\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:489)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:451)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\r\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n        at java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n        at java.util.ArrayList.rangeCheck(ArrayList.java:653)\r\n        at java.util.ArrayList.get(ArrayList.java:429)\r\n        at org.redisson.client.handler.CommandDecoder.messageDecoder(CommandDecoder.java:392)\r\n        at org.redisson.client.handler.CommandDecoder.decodeList(CommandDecoder.java:317)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:301)\r\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:119)\r\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n        ... 20 common frames omitted\r\n`", "url": "https://github.com/redisson/redisson/issues/726", "user": "gamefundas", "labels": ["bug"], "created": "2016-12-07 19:32:17", "closed": "2016-12-09 08:04:49", "commits": {"5f19403ded8901fb66936b3f1b55aa73f0885c27": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "5f19403ded8901fb66936b3f1b55aa73f0885c27", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4183fa5e6690cec7f6cbef9dfcbd8f1b8dd5e163"], "nameRev": "5f19403ded8901fb66936b3f1b55aa73f0885c27 tags/redisson-2.7.1~8", "commitMessage": "CommandDecoder NPE fixed. #726\n", "commitDateTime": "2016-12-09 11:00:12", "authoredDateTime": "2016-12-09 11:00:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5f19403ded8901fb66936b3f1b55aa73f0885c27"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)"]}, {"title": "Possible PublishSubscribe race-condition", "body": "There is a rare possibility of race-condition during channel re-connection and RTopic subscription invoked first time.", "url": "https://github.com/redisson/redisson/issues/724", "user": "mrniko", "labels": ["bug"], "created": "2016-12-06 10:41:00", "closed": "2016-12-06 10:41:57", "commits": {"aa3ea158da6ed05bd99cf257f0000f449ea8d8a7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "aa3ea158da6ed05bd99cf257f0000f449ea8d8a7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a129961a5be8764658e130bb071c0d0427550d76"], "nameRev": "aa3ea158da6ed05bd99cf257f0000f449ea8d8a7 tags/redisson-2.7.1~13", "commitMessage": "Possible PublishSubscribe race-condition. #724\n", "commitDateTime": "2016-12-06 13:41:22", "authoredDateTime": "2016-12-06 13:41:22", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisPubSubConnection.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisPubSubConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisPubSubConnection.subscribe(org.redisson.client.codec.Codec,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.psubscribe(org.redisson.client.codec.Codec,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aa3ea158da6ed05bd99cf257f0000f449ea8d8a7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisPubSubConnection.subscribe(org.redisson.client.codec.Codec,java.lang.String[])", "org.redisson.client.RedisPubSubConnection.psubscribe(org.redisson.client.codec.Codec,java.lang.String[])"]}, {"title": "Exceptions during shutdown", "body": "Sometimes there are few exceptions occur during Redisson shutdown process.", "url": "https://github.com/redisson/redisson/issues/723", "user": "mrniko", "labels": ["bug"], "created": "2016-12-01 11:16:13", "closed": "2016-12-01 12:11:47", "commits": {"05cf35ce97e31d11d2970c29e64989c4e569836c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "05cf35ce97e31d11d2970c29e64989c4e569836c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f0f910b63cf6f93a269d5ccc166e212e01cc39a8"], "nameRev": "05cf35ce97e31d11d2970c29e64989c4e569836c tags/redisson-2.7.1~19", "commitMessage": "Fixed - Exceptions during shutdown. #723\n", "commitDateTime": "2016-12-01 15:09:57", "authoredDateTime": "2016-12-01 15:09:57", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.config.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator,java.net.URI).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.config.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator,java.net.URI).5.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdown(long,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["05cf35ce97e31d11d2970c29e64989c4e569836c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.config.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator,java.net.URI).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.shutdown(long,long,java.util.concurrent.TimeUnit)", "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.config.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator,java.net.URI).5.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Config can not handle underscore in host", "body": "Redisson 3.1.0\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1777211/20747762/4e6dbfc8-b726-11e6-89aa-7c6afdea0965.png)\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1777211/20747782/5cfb4c7c-b726-11e6-97de-304ba4b2da92.png)\r\n\r\n", "url": "https://github.com/redisson/redisson/issues/722", "user": "wenerme", "labels": ["bug"], "created": "2016-11-30 09:56:51", "closed": "2016-12-14 11:10:08", "commits": {"1319607059694e22539c95bdbe517def297b389e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "1319607059694e22539c95bdbe517def297b389e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4260a3d38c7a7f73d8e07b13d644f51b201c8087"], "nameRev": "1319607059694e22539c95bdbe517def297b389e tags/redisson-2.7.1~2", "commitMessage": "Fixed - Config can not handle underscore in host  #722\n", "commitDateTime": "2016-12-13 20:27:23", "authoredDateTime": "2016-12-13 20:27:23", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 27, "deletions": 27, "lines": 54}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterNodeInfo.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterPartition.java", "insertions": 19, "deletions": 14, "lines": 33}, {"filePath": "redisson/src/main/java/org/redisson/config/ClusterServersConfig.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "redisson/src/main/java/org/redisson/config/ConfigSupport.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/config/ElasticacheServersConfig.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "redisson/src/main/java/org/redisson/config/MasterSlaveServersConfig.java", "insertions": 18, "deletions": 15, "lines": 33}, {"filePath": "redisson/src/main/java/org/redisson/config/SentinelServersConfig.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "redisson/src/main/java/org/redisson/config/SingleServerConfig.java", "insertions": 8, "deletions": 10, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/ElasticacheConnectionManager.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "redisson/src/main/java/org/redisson/connection/balancer/WeightedRoundRobinBalancer.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/misc/URIBuilder.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "redisson/src/main/java/org/redisson/misc/URLBuilder.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "redisson/src/test/java/org/redisson/RedissonTest.java", "insertions": 22, "deletions": 4, "lines": 26}, {"filePath": "redisson/src/test/java/org/redisson/client/protocol/decoder/ClusterNodesDecoderTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.getLastClusterNode()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.connect(org.redisson.config.ClusterServersConfig,java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.config.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator,java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterNodeInfo.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterNodeInfo", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterNodeInfo.getAddress()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterNodeInfo.setAddress(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterPartition.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterPartition", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.getMasterAddress()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.setMasterAddress(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.addFailedSlaveAddress(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.removeFailedSlaveAddress(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.addSlaveAddress(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.removeSlaveAddress(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.setMasterAddress(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.ClusterServersConfig.addNodeAddress(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigSupport.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.ConfigSupport", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElasticacheServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.ElasticacheServersConfig.addNodeAddress(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.MasterSlaveServersConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.MasterSlaveServersConfig.getMasterAddress()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.config.MasterSlaveServersConfig.setMasterAddress(java.net.URI)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.config.MasterSlaveServersConfig.addSlaveAddress(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.MasterSlaveServersConfig.addSlaveAddress(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.MasterSlaveServersConfig.setMasterAddress(java.lang.String)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.config.MasterSlaveServersConfig.setMasterAddress(java.net.URL)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.SentinelServersConfig.addSentinelAddress(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleServerConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.config.SingleServerConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.config.SingleServerConfig.getAddress()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.config.SingleServerConfig.setAddress(java.net.URI)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.config.SingleServerConfig.setAddress(java.lang.String)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.config.SingleServerConfig.setAddress(java.net.URL)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getLastClusterNode()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElasticacheConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ElasticacheConnectionManager.connect(org.redisson.config.BaseMasterSlaveServersConfig,java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ElasticacheConnectionManager", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ElasticacheConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ElasticacheServersConfig).2.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getLastClusterNode()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.initSlaveBalancer(java.util.Collection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.config.SentinelServersConfig,java.net.URI,org.redisson.config.MasterSlaveServersConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onNodeDown(java.net.URI,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onNodeUp(java.net.URI,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onMasterChange(org.redisson.config.SentinelServersConfig,java.net.URI,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSentinelAdded(org.redisson.config.SentinelServersConfig,java.lang.String,org.redisson.config.MasterSlaveServersConfig)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WeightedRoundRobinBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.WeightedRoundRobinBalancer", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URIBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URIBuilder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "URLBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URLBuilder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testSingleConfig()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testMasterSlaveConfig()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testSingleConfigYAML()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testMasterSlaveConfigYAML()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterNodesDecoderTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ClusterNodesDecoderTest.test()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1319607059694e22539c95bdbe517def297b389e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 240, "deletions": 161, "lines": 401, "gitFilesChange": 18}, "spoonStatsSummary": {"TOT": 78, "UPD": 59, "INS": 6, "MOV": 6, "DEL": 7, "spoonFilesChanged": 18, "spoonMethodsChanged": 52}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster", "redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/config", "redisson/src/main/java/org/redisson/misc", "redisson/src/main/java/org/redisson/client", "redisson/src/main/java/org/redisson/connection/balancer"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.connect(org.redisson.config.ClusterServersConfig,java.net.URI)", "org.redisson.config.SentinelServersConfig.addSentinelAddress(java.lang.String[])", "org.redisson.connection.SentinelConnectionManager.onMasterChange(org.redisson.config.SentinelServersConfig,java.net.URI,java.lang.String)", "org.redisson.config.ConfigSupport", "org.redisson.config.MasterSlaveServersConfig.addSlaveAddress(java.net.URI)", "org.redisson.cluster.ClusterPartition.removeFailedSlaveAddress(java.net.URI)", "org.redisson.config.MasterSlaveServersConfig.setMasterAddress(java.lang.String)", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.connection.ElasticacheConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ElasticacheServersConfig).2.run()", "org.redisson.config.MasterSlaveServersConfig.setMasterAddress(java.net.URI)", "org.redisson.config.MasterSlaveServersConfig.setMasterAddress(java.net.URL)", "org.redisson.client.RedisClient", "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.config.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "org.redisson.config.SingleServerConfig.getAddress()", "org.redisson.cluster.ClusterNodeInfo", "org.redisson.connection.SentinelConnectionManager.onSentinelAdded(org.redisson.config.SentinelServersConfig,java.lang.String,org.redisson.config.MasterSlaveServersConfig)", "org.redisson.cluster.ClusterConnectionManager.getLastClusterNode()", "org.redisson.connection.SentinelConnectionManager.onNodeUp(java.net.URI,java.lang.String)", "org.redisson.cluster.ClusterPartition.setMasterAddress(java.lang.String)", "org.redisson.config.MasterSlaveServersConfig.getMasterAddress()", "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.config.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator,java.net.URI)", "org.redisson.config.MasterSlaveServersConfig.addSlaveAddress(java.lang.String[])", "org.redisson.cluster.ClusterPartition.setMasterAddress(java.net.URI)", "org.redisson.config.SingleServerConfig.setAddress(java.lang.String)", "org.redisson.config.ClusterServersConfig.addNodeAddress(java.lang.String[])", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.config.SentinelServersConfig,java.net.URI,org.redisson.config.MasterSlaveServersConfig)", "org.redisson.cluster.ClusterNodeInfo.setAddress(java.lang.String)", "org.redisson.connection.getLastClusterNode()", "org.redisson.config.ElasticacheServersConfig.addNodeAddress(java.lang.String[])", "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)", "org.redisson.cluster.ClusterPartition.removeSlaveAddress(java.net.URI)", "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.getLastClusterNode()", "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition)", "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(org.redisson.config.ClusterServersConfig,java.util.Collection)", "org.redisson.connection.ElasticacheConnectionManager", "org.redisson.connection.MasterSlaveEntry.initSlaveBalancer(java.util.Collection)", "org.redisson.cluster.ClusterPartition", "org.redisson.connection.SentinelConnectionManager.onNodeDown(java.net.URI,java.lang.String)", "org.redisson.cluster.ClusterPartition.addSlaveAddress(java.net.URI)", "org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.ElasticacheConnectionManager.connect(org.redisson.config.BaseMasterSlaveServersConfig,java.net.URI)", "org.redisson.connection.balancer.WeightedRoundRobinBalancer", "org.redisson.cluster.ClusterPartition.getMasterAddress()", "org.redisson.misc.URLBuilder", "org.redisson.cluster.ClusterNodeInfo.getAddress()", "org.redisson.config.SingleServerConfig", "org.redisson.cluster.ClusterPartition.addFailedSlaveAddress(java.net.URI)", "org.redisson.config.MasterSlaveServersConfig", "org.redisson.config.SingleServerConfig.setAddress(java.net.URI)", "org.redisson.config.SingleServerConfig.setAddress(java.net.URL)", "org.redisson.misc.URIBuilder"]}, {"title": "RedissonBaseIterator.hasNext() doesn't return false on Object based RedissonSet.", "body": "I encountered an issue on using `RedissonBaseIterator`.\r\n\r\nInside of `RedissonBaseIterator.hasNext()`, it checked the end of iteration by `lastValues.removeAll(firstValues)` when scanned result is larger than default scan count `10`.\r\n\r\nIt failed to return `true` on `lastValues.removeAll(firstValues)` when values are in custom object type since `ArrayList.removeAll()` uses `Object.equals()`. An object not implementing equals causing infinite loop while processing the iterator. \r\n\r\nI'd rather check `nextIterPos == 0 && nextIter != null && !nextIter.hasNext()` at the start of `hasNext()` method.", "url": "https://github.com/redisson/redisson/issues/718", "user": "chilicookie", "labels": ["bug"], "created": "2016-11-29 09:24:20", "closed": "2017-01-12 11:25:58", "commits": {"dffda7e41171904c7090849dfc783538603f3c60": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 44.000277777777775, "commitsDetails": [{"commitHash": "dffda7e41171904c7090849dfc783538603f3c60", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5cb8ab442c1234f199e90853a6ab11575cd6423a"], "nameRev": "dffda7e41171904c7090849dfc783538603f3c60 tags/redisson-2.7.3~3", "commitMessage": "Fixed - RedissonBaseIterator.hasNext() doesn't return false on Object based RedissonSet. #718\n", "commitDateTime": "2017-01-12 14:25:30", "authoredDateTime": "2017-01-12 14:25:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 36, "deletions": 7, "lines": 43}, {"filePath": "redisson/src/main/java/org/redisson/RedissonKeys.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMap.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/RedissonMultimap.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSet.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetCache.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "redisson/src/main/java/org/redisson/RedissonSetMultimapValues.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/MapScanCodec.java", "insertions": 100, "deletions": 0, "lines": 100}, {"filePath": "redisson/src/main/java/org/redisson/client/codec/ScanCodec.java", "insertions": 11, "deletions": 33, "lines": 44}, {"filePath": "redisson/src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 33, "deletions": 8, "lines": 41}, {"filePath": "redisson/src/main/java/org/redisson/jcache/JCache.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonMapCacheReactive.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonMapReactive.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonScoredSortedSetReactive.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonSetCacheReactive.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/main/java/org/redisson/reactive/RedissonSetReactive.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "redisson/src/main/java/org/redisson/reactive/SetReactiveIterator.java", "insertions": 83, "deletions": 28, "lines": 111}, {"filePath": "redisson/src/test/java/org/redisson/RedissonScoredSortedSetReactiveTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetCacheReactiveTest.java", "insertions": 7, "deletions": 4, "lines": 11}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["dffda7e41171904c7090849dfc783538603f3c60"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 316, "deletions": 114, "lines": 430, "gitFilesChange": 19}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/reactive", "redisson/src/main/java/org/redisson/client/codec", "redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/command", "redisson/src/main/java/org/redisson/jcache"]}, {"title": "Blocking queue/deque poll method blocks infinitely", "body": "Poll method blocks infinitely if timeout specified during invocation less than 1 second", "url": "https://github.com/redisson/redisson/issues/716", "user": "mrniko", "labels": ["bug"], "created": "2016-11-28 11:45:59", "closed": "2016-11-28 11:47:20", "commits": {"a00d3e190445b2b1989b446df39043b7e4ad4126": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a00d3e190445b2b1989b446df39043b7e4ad4126", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e29a14b9c7b29ddaa4bdf831e3433c362c343606"], "nameRev": "a00d3e190445b2b1989b446df39043b7e4ad4126 tags/redisson-2.7.1~23", "commitMessage": "Fixed - Poll method blocks infinitely if timeout specified during invocation less than 1 second #716\n", "commitDateTime": "2016-11-28 14:46:42", "authoredDateTime": "2016-11-28 14:46:42", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingDeque.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/RedissonBlockingQueue.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/RedissonQueue.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingDequeTest.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "redisson/src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBlockingDeque.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollLastFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingDeque.pollLastAsync(long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueue.pollFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.pollAsync(long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueue.pollLastAndOfferFirstToAsync(java.lang.String,long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonQueue.toSeconds(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingDequeTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingDequeTest.testShortPoll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testShortPoll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a00d3e190445b2b1989b446df39043b7e4ad4126"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 6, "lines": 21, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 11, "UPD": 10, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonQueue.toSeconds(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingDeque.pollLastAsync(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingQueue.pollAsync(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingQueue.pollFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])", "org.redisson.RedissonBlockingQueue.pollLastAndOfferFirstToAsync(java.lang.String,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonBlockingDeque.pollLastFromAnyAsync(long,java.util.concurrent.TimeUnit,java.lang.String[])"]}, {"title": "RMap.getAll doesn't not preserve the order of elements", "body": "", "url": "https://github.com/redisson/redisson/issues/712", "user": "mrniko", "labels": ["bug"], "created": "2016-11-22 13:30:13", "closed": "2016-11-22 13:31:28", "commits": {"88cb7c53f1f57cadc1135740d703bd5bc6c610a9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "88cb7c53f1f57cadc1135740d703bd5bc6c610a9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["adbca7bbf6522ac7a2214f2748dd4f719ef33cf7"], "nameRev": "88cb7c53f1f57cadc1135740d703bd5bc6c610a9 tags/redisson-2.7.0~9", "commitMessage": "Fixed - RMap.getAll doesn't not preserve the order of elements #712\n", "commitDateTime": "2016-11-22 16:31:02", "authoredDateTime": "2016-11-22 16:31:02", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/decoder/MapGetAllDecoder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapTest.java", "insertions": 25, "deletions": 0, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MapGetAllDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.decoder.MapGetAllDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapTest.testGetAllOrder()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["88cb7c53f1f57cadc1135740d703bd5bc6c610a9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection/decoder"], "changesInPackagesSPOON": ["org.redisson.connection.decoder.MapGetAllDecoder.decode(java.util.List,org.redisson.client.handler.State)"]}, {"title": "Test redisson error", "body": "\u5341\u4e00\u6708 15, 2016 1:47:28 \u4e0b\u5348 io.netty.util.concurrent.DefaultPromise notifyListener0\r\n\u8b66\u544a: An exception was thrown by org.redisson.cluster.ClusterConnectionManager$4.operationComplete()\r\njava.util.concurrent.RejectedExecutionException: event executor terminated\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:805)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.offerTask(SingleThreadEventExecutor.java:345)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:338)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:748)\r\n\tat io.netty.util.concurrent.AbstractScheduledEventExecutor.schedule(AbstractScheduledEventExecutor.java:190)\r\n\tat io.netty.util.concurrent.AbstractScheduledEventExecutor.schedule(AbstractScheduledEventExecutor.java:134)\r\n\tat org.redisson.client.RedisConnection.async(RedisConnection.java:179)\r\n\tat org.redisson.client.RedisConnection.async(RedisConnection.java:170)\r\n\tat org.redisson.client.RedisConnection.async(RedisConnection.java:162)\r\n\tat org.redisson.cluster.ClusterConnectionManager.updateClusterState(ClusterConnectionManager.java:361)\r\n\tat org.redisson.cluster.ClusterConnectionManager.access$900(ClusterConnectionManager.java:60)\r\n\tat org.redisson.cluster.ClusterConnectionManager$4.operationComplete(ClusterConnectionManager.java:355)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:514)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:488)\r\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:427)\r\n\tat io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:170)\r\n\tat org.redisson.misc.RedissonPromise.addListener(RedissonPromise.java:85)\r\n\tat org.redisson.misc.RedissonPromise.addListener(RedissonPromise.java:34)\r\n\tat org.redisson.cluster.ClusterConnectionManager.checkClusterState(ClusterConnectionManager.java:345)\r\n\tat org.redisson.cluster.ClusterConnectionManager.access$800(ClusterConnectionManager.java:60)\r\n\tat org.redisson.cluster.ClusterConnectionManager$3.run(ClusterConnectionManager.java:331)\r\n\tat io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n\tat io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:120)\r\n\tat io.netty.util.concurrent.GlobalEventExecutor$TaskRunner.run(GlobalEventExecutor.java:237)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n", "url": "https://github.com/redisson/redisson/issues/708", "user": "zhangmeng0426", "labels": ["bug"], "created": "2016-11-15 07:12:28", "closed": "2016-11-15 11:01:48", "commits": {"457c050d4f247db13b3b847fcfd5f67789166e09": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "457c050d4f247db13b3b847fcfd5f67789166e09", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3c9b79878f2346a2c648f270ede8ce4e6e08ec36"], "nameRev": "457c050d4f247db13b3b847fcfd5f67789166e09 tags/redisson-2.7.0~21", "commitMessage": "Check shutdown status of Redisson during async command invocation.  #708\n", "commitDateTime": "2016-11-15 14:01:06", "authoredDateTime": "2016-11-15 14:01:06", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisConnection.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["457c050d4f247db13b3b847fcfd5f67789166e09"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisConnection.async(long,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])"]}, {"title": "Wrong parsing nodes in result of cluster info command", "body": "Address like `192.168.234.129:7001@17001` should be converted to `192.168.234.129:7001`", "url": "https://github.com/redisson/redisson/issues/700", "user": "mrniko", "labels": ["bug"], "created": "2016-11-11 12:11:57", "closed": "2016-11-11 13:26:54", "commits": {"e98f66e9084430c9ac8cea3824539ad7f2b262b2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e98f66e9084430c9ac8cea3824539ad7f2b262b2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b8581bf0a3d6d2913b48565387602dbf80e88b32"], "nameRev": "e98f66e9084430c9ac8cea3824539ad7f2b262b2 tags/redisson-2.7.0~24", "commitMessage": "Wrong parsing nodes in result of cluster info command #700\n", "commitDateTime": "2016-11-11 16:26:30", "authoredDateTime": "2016-11-11 16:26:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/misc/URIBuilder.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "redisson/src/test/java/org/redisson/client/protocol/decoder/ClusterNodesDecoderTest.java", "insertions": 34, "deletions": 0, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URIBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URIBuilder.create(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterNodesDecoderTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ClusterNodesDecoderTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e98f66e9084430c9ac8cea3824539ad7f2b262b2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.misc.URIBuilder.create(java.lang.String)"]}, {"title": "NullPointerException in CommandDecoder.handleResult", "body": "I have experienced some ```NullPointerExceptions``` in the ```CommandDecoder``` (besides the ones reported in https://github.com/redisson/redisson/issues/667.  In the handleResult method is a check if ```data``` is null so I guess there are situations where this can be ```null```. In the bottom of the method where the NPE occurs the check is missing though. Should this be checked as well? I am using Redisson 3.0.0.\r\n\r\n```\r\n2016-11-04T00:01:09,935 | WARN | LABS | i-5dc2f5a5 | 1.0.0.0 | valid_0835907a-bf24-79f0-26e5-779d69317af6 | XXXX | io.netty.channel.DefaultChannelPipeline | 2016-11-03T09:59:13,694_twoUserCollaborate_b3a2aa58-bd2a-41de-c3d7-e41512e75e7a | An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\r\nio.netty.handler.codec.DecoderException: java.lang.NullPointerException\r\nat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:422)\r\nat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\r\nat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:351)\r\nat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:373)\r\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\nat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\nat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:1018)\r\nat io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:402)\r\nat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:307)\r\nat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:873)\r\nat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\nat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.NullPointerException\r\nat org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:384)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:232)\r\nat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:119)\r\nat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367)\r\n... 18 more\r\n```", "url": "https://github.com/redisson/redisson/issues/692", "user": "smigfu", "labels": ["bug"], "created": "2016-11-07 16:48:53", "closed": "2016-11-08 14:12:25", "commits": {"a34f0fe56cb5d22955fb04d81be12bd02f0b7c9f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a34f0fe56cb5d22955fb04d81be12bd02f0b7c9f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["065dd3ff7b33b75881f020adbf4484f07f6d0fc8"], "nameRev": "a34f0fe56cb5d22955fb04d81be12bd02f0b7c9f tags/redisson-2.7.0~30", "commitMessage": "Fixed NPE in CommandDecoder.handleResult #692\n", "commitDateTime": "2016-11-08 16:52:30", "authoredDateTime": "2016-11-08 16:52:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean,io.netty.channel.Channel)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a34f0fe56cb5d22955fb04d81be12bd02f0b7c9f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean,io.netty.channel.Channel)"]}, {"title": "RMapCache.fastPutIfAbsentAsync doesn't take in account expiration", "body": "", "url": "https://github.com/redisson/redisson/issues/678", "user": "mrniko", "labels": ["bug"], "created": "2016-10-24 13:28:16", "closed": "2016-10-26 08:56:19", "commits": {"329e7e1156787d17155e0a8b194fc73c0965e2b6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "329e7e1156787d17155e0a8b194fc73c0965e2b6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bde32406a1de916eb81b52d560fd58a40ce1b64c"], "nameRev": "329e7e1156787d17155e0a8b194fc73c0965e2b6 tags/redisson-parent-2.5.1~1", "commitMessage": "RMapCache.fastPutIfAbsentAsync doesn't take in account expiration #678\n", "commitDateTime": "2016-10-26 11:56:04", "authoredDateTime": "2016-10-26 11:56:04", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMapCache.java", "insertions": 35, "deletions": 4, "lines": 39}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.fastPutIfAbsentAsync(java.lang.Object,java.lang.Object)", "TOT": 10, "UPD": 5, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testFastPutIfAbsent()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["329e7e1156787d17155e0a8b194fc73c0965e2b6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 35, "deletions": 4, "lines": 39, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 5, "INS": 3, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.fastPutIfAbsentAsync(java.lang.Object,java.lang.Object)", "org.redisson.RedissonMapCache"]}, {"title": "ConnectionWatchdog throws NullPointerException when connection drops (Redisson 2.5.0)", "body": "When restarting the Redis server all connection threads logged the following exception.\n\n``` text\n2016-10-18 12:45:59,686 ERROR [redisson-netty-1-1] (org.redisson.client.handler.CommandsQueue) Exception occured. Channel: [id: 0xa23d4302, L:0.0.0.0/0.0.0.0:42732 ! R:xxxxxxxxxxxxxx]\njava.lang.NullPointerException: null\n    at org.redisson.client.handler.ConnectionWatchdog.reconnect(ConnectionWatchdog.java:88) ~[redisson-2.5.0.jar:?]\n    at org.redisson.client.handler.ConnectionWatchdog.channelInactive(ConnectionWatchdog.java:75) ~[redisson-2.5.0.jar:?]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:251) [netty-transport-4.0.42.Final.jar:4.0.42.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:237) [netty-transport-4.0.42.Final.jar:4.0.42.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:230) [netty-transport-4.0.42.Final.jar:4.0.42.Final]\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1289) [netty-transport-4.0.42.Final.jar:4.0.42.Final]\n```\n\nAfter the connection \"interruption\" the application starts logging the following..\n\n``` text\n2016-10-18 13:10:34,676 ERROR [globalEventExecutor-2-1] (org.redisson.connection.ElasticacheConnectionManager) Command execution timeout for xxxxxxxxxxxx\norg.redisson.client.RedisTimeoutException: Command execution timeout for xxxxxxxxxxx\n    at org.redisson.client.RedisConnection.await(RedisConnection.java:126) ~[redisson-2.5.0.jar:?]\n    at org.redisson.client.RedisConnection.sync(RedisConnection.java:158) ~[redisson-2.5.0.jar:?]\n    at org.redisson.client.RedisConnection.sync(RedisConnection.java:144) ~[redisson-2.5.0.jar:?]\n    at org.redisson.connection.ElasticacheConnectionManager$1.run(ElasticacheConnectionManager.java:134) [redisson-2.5.0.jar:?]\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_102]\n    at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:126) [netty-common-4.0.42.Final.jar:4.0.42.Final]\n    at io.netty.util.concurrent.GlobalEventExecutor$TaskRunner.run(GlobalEventExecutor.java:237) [netty-common-4.0.42.Final.jar:4.0.42.Final]\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144) [netty-common-4.0.42.Final.jar:4.0.42.Final]\n    at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]\n```\n\nThe host resolves to the same IP so that isn't a problem and I am able to telnet and issue the replication command without problems (immediate response)..\n\n``` text\nEscape character is '^]'.\nINFO replication\n$178\n# Replication\nrole:master\nconnected_slaves:0\nmaster_repl_offset:0\nrepl_backlog_active:0\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0\n```\n", "url": "https://github.com/redisson/redisson/issues/671", "user": "johnou", "labels": ["bug"], "created": "2016-10-18 12:53:01", "closed": "2016-10-18 17:13:26", "commits": {"047aa60daebaa9e5920227cbd9693e052aae85b5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "64fc4d933cc916836e4c85107f43d54325f6731c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "047aa60daebaa9e5920227cbd9693e052aae85b5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["eca9682dc985e862c0d1f75ef3b8d2d895466514"], "nameRev": "047aa60daebaa9e5920227cbd9693e052aae85b5 tags/redisson-parent-2.5.1~11", "commitMessage": "Timer initialization fixed. #671\n", "commitDateTime": "2016-10-18 17:47:12", "authoredDateTime": "2016-10-18 17:47:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/main/java/org/redisson/connection/ElasticacheConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElasticacheConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ElasticacheConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.config.MasterSlaveServersConfig)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "64fc4d933cc916836e4c85107f43d54325f6731c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["65c45d5e85dda06f13cb2d3f1c7eca524edf54e6"], "nameRev": "64fc4d933cc916836e4c85107f43d54325f6731c tags/redisson-parent-2.5.1~6", "commitMessage": "Timer initialization fixed. #671\n", "commitDateTime": "2016-10-25 17:47:00", "authoredDateTime": "2016-10-25 17:47:00", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["047aa60daebaa9e5920227cbd9693e052aae85b5"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 9, "lines": 24, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 9, "UPD": 1, "INS": 5, "MOV": 3, "DEL": 0, "spoonFilesChanged": 4, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.config.MasterSlaveServersConfig)", "org.redisson.connection.ElasticacheConnectionManager", "org.redisson.connection.MasterSlaveConnectionManager"]}, {"title": "NullPointerException in CommandDecoder", "body": "Hi,\n\nunder heavy load we experience a NPE in the CommandDecoder sometimes [1]. Do you have a guess about what could be going wrong here?\n\nThanks.\n\nCheers,\nPhilipp \n\n[1]\nAn exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.NullPointerException\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:422) [74:io.netty.codec:4.1.1.Final]\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248) [74:io.netty.codec:4.1.1.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:334) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:326) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:334) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:326) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1320) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:334) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:905) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:123) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:563) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:504) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:418) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:390) [79:io.netty.transport:4.1.1.Final]\n    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:742) [76:io.netty.common:4.1.1.Final]\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:145) [76:io.netty.common:4.1.1.Final]\n    at java.lang.Thread.run(Thread.java:745) [?:?]\nCaused by: java.lang.NullPointerException\n    at org.redisson.client.handler.CommandDecoder.selectDecoder(CommandDecoder.java:397) ~[275:redisson:2.2.24]\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:269) ~[275:redisson:2.2.24]\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:110) ~[275:redisson:2.2.24]\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:367) ~[74:io.netty.codec:4.1.1.Final]\n    ... 20 more\n", "url": "https://github.com/redisson/redisson/issues/667", "user": "smigfu", "labels": ["bug"], "created": "2016-10-16 00:54:46", "closed": "2016-10-17 08:14:51", "commits": {"5a045c742d1594425e056bcf48ce0806c3095336": {"commitGHEventType": "closed", "commitUser": "mrniko"}, "c4a4a57a6b386f342b33f197b2dd20335fe88ade": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "5a045c742d1594425e056bcf48ce0806c3095336", "commitGHEventType": "closed", "commitUser": "mrniko", "commitParents": ["a2b11396e9ddc6f55796ec186cd7930669e2f218"], "nameRev": "5a045c742d1594425e056bcf48ce0806c3095336 tags/redisson-parent-2.5.0~1", "commitMessage": "NullPointerException in CommandDecoder fixed #667\n", "commitDateTime": "2016-10-17 11:14:35", "authoredDateTime": "2016-10-17 11:14:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c4a4a57a6b386f342b33f197b2dd20335fe88ade", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8f9b27260772e38bf876860b2ae1c56de90e7c5a"], "nameRev": "c4a4a57a6b386f342b33f197b2dd20335fe88ade tags/redisson-2.2.26~1", "commitMessage": "NullPointerException in CommandDecoder fixed #667 (backported)\n", "commitDateTime": "2016-10-17 12:16:18", "authoredDateTime": "2016-10-17 12:16:18", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5a045c742d1594425e056bcf48ce0806c3095336", "c4a4a57a6b386f342b33f197b2dd20335fe88ade"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 18, "deletions": 14, "lines": 32, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 2, "MOV": 8, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler", "redisson/src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.selectDecoder(org.redisson.client.protocol.CommandData,java.util.List)"]}, {"title": "RMapCache doesn't keep entries insertion order during iteration", "body": "", "url": "https://github.com/redisson/redisson/issues/666", "user": "mrniko", "labels": ["bug"], "created": "2016-10-15 16:25:43", "closed": "2016-10-15 16:27:32", "commits": {"a2b11396e9ddc6f55796ec186cd7930669e2f218": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a2b11396e9ddc6f55796ec186cd7930669e2f218", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ccdd7f6453f9fd64ece9de11110ff60953b88a32"], "nameRev": "a2b11396e9ddc6f55796ec186cd7930669e2f218 tags/redisson-parent-2.5.0~2", "commitMessage": "RMapCache doesn't keep entries insertion order during iteration #666\n", "commitDateTime": "2016-10-15 19:27:17", "authoredDateTime": "2016-10-15 19:27:17", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ObjectMapDecoder.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/ObjectMapEntryReplayDecoder.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "redisson/src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ObjectMapDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ObjectMapDecoder.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ObjectMapEntryReplayDecoder.java", "spoonMethods": []}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testOrdering()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a2b11396e9ddc6f55796ec186cd7930669e2f218"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 3, "lines": 10, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol/decoder"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.ObjectMapDecoder.decode(java.util.List,org.redisson.client.handler.State)"]}, {"title": "Live Object: @RId is returned/overwritten by similarly named methods", "body": "Hi! \n\nFirst off, thank you for this awesome library! :)\n\nI've noticed a potential bug with Live Objects IDs. It is caused by the calls to `isGetter` and `isSetter` in the intercept() method of the `AccessorInterceptor` class (lines 102-108): \n\n```\nif (isGetter(method, getREntityIdFieldName(me))) {\n    return ((RLiveObject) me).getLiveObjectId();\n}\n\nif (isSetter(method, getREntityIdFieldName(me))) {\n    ((RLiveObject) me).setLiveObjectId(args[0]);\n    return null;\n}\n```\n\nThese helper methods only compare prefix and suffix of method name. For example, this means that an `@RId` field named `Id` is overwritten by a call to  `setSomeOtherId`.  \n\nAs a workaround, I avoid naming things get...Id and set...Id for now :)\n", "url": "https://github.com/redisson/redisson/issues/664", "user": "VictorD", "labels": ["bug"], "created": "2016-10-13 08:06:21", "closed": "2016-10-13 09:44:45", "commits": {"c6f4fce27d32a60cee6dbd6955ccbc87d1a26f15": {"commitGHEventType": "closed", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c6f4fce27d32a60cee6dbd6955ccbc87d1a26f15", "commitGHEventType": "closed", "commitUser": "mrniko", "commitParents": ["e5b996ea7d7e8eadecb7c08e9b9d5cb40909bfc9", "b6d73678f67c8288f4d052ed0212c086854b1afa"], "nameRev": "c6f4fce27d32a60cee6dbd6955ccbc87d1a26f15 tags/redisson-parent-2.5.0~5^2", "commitMessage": "Merge pull request #665 from jackygurui/fix-#664\n\nFix #664", "commitDateTime": "2016-10-13 12:44:45", "authoredDateTime": "2016-10-13 12:44:45", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/liveobject/core/AccessorInterceptor.java", "insertions": 3, "deletions": 4, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AccessorInterceptor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.isGetter(java.lang.reflect.Method,java.lang.String)", "TOT": 8, "UPD": 2, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.isSetter(java.lang.reflect.Method,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "MasterConnectionPool exhausted", "body": "redis use  Sentinel when switch master slave  where cause it\n\n2016-10-11 19:10:26.625 WARN  o.r.c.SentinelConnectionManager.onNodeDown:272 master: 10.116.192.13:7091 has down\n\n2016-10-11 19:10:27.666 WARN  o.r.c.SentinelConnectionManager.slaveDown:286 slave: 10.116.192.13:7091 has down\n\n2016-10-11 19:10:42.937 WARN  o.r.c.SentinelConnectionManager.slaveDown:286 slave: 10.116.192.13:7091 has down\n\n2016-10-11 19:12:18.385 WARN  i.n.c.DefaultChannelPipeline.warn:151 An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\norg.redisson.client.RedisConnectionException: MasterConnectionPool exhausted!  Disconnected hosts: [10.25.63.47/10.25.63.47:7091]\n", "url": "https://github.com/redisson/redisson/issues/663", "user": "pengfei-xu", "labels": ["bug"], "created": "2016-10-11 12:00:54", "closed": "2016-10-15 10:00:27", "commits": {"1173c9590c95dbb7b171d1e1cd214ca4ba93e4c2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "8f9b27260772e38bf876860b2ae1c56de90e7c5a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "1173c9590c95dbb7b171d1e1cd214ca4ba93e4c2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e5b996ea7d7e8eadecb7c08e9b9d5cb40909bfc9"], "nameRev": "1173c9590c95dbb7b171d1e1cd214ca4ba93e4c2 tags/redisson-parent-2.5.0~6", "commitMessage": "PubSub connection re-subscription doesn't work in some cases of when there are only one slave available. #663\n", "commitDateTime": "2016-10-14 18:33:28", "authoredDateTime": "2016-10-14 18:33:28", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 40, "deletions": 9, "lines": 49}, {"filePath": "redisson/src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 74, "deletions": 45, "lines": 119}, {"filePath": "redisson/src/main/java/org/redisson/connection/PubSubConnectionEntry.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 12, "deletions": 9, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.punsubscribe(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.punsubscribe(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection)", "TOT": 13, "UPD": 3, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection)", "TOT": 10, "UPD": 1, "INS": 0, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "TOT": 14, "UPD": 2, "INS": 6, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.psubscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSub(org.redisson.client.RedisPubSubConnection,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.Status", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String)", "TOT": 9, "UPD": 1, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onNodeDown(java.net.URI,java.lang.String)", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 4}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8f9b27260772e38bf876860b2ae1c56de90e7c5a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4fdbcc26eef28bdaf133430a19bd2f29ac11db4b"], "nameRev": "8f9b27260772e38bf876860b2ae1c56de90e7c5a tags/redisson-2.2.26~2", "commitMessage": "PubSub connection re-subscription doesn't work in some cases of when there are only one slave available. #663 (backported)\n", "commitDateTime": "2016-10-17 12:07:20", "authoredDateTime": "2016-10-17 12:07:20", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 40, "deletions": 8, "lines": 48}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 58, "deletions": 33, "lines": 91}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 10, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.punsubscribe(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.punsubscribe(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection)", "TOT": 13, "UPD": 3, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection)", "TOT": 10, "UPD": 1, "INS": 0, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.psubscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSub(org.redisson.client.RedisPubSubConnection,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onNodeDown(java.net.URI,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1173c9590c95dbb7b171d1e1cd214ca4ba93e4c2", "8f9b27260772e38bf876860b2ae1c56de90e7c5a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 229, "deletions": 120, "lines": 349, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 199, "UPD": 39, "INS": 73, "MOV": 64, "DEL": 23, "spoonFilesChanged": 5, "spoonMethodsChanged": 34}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager.onNodeDown(java.net.URI,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String)", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,boolean)", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection)", "org.redisson.connection.unsubscribe(java.lang.String,boolean)", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection)", "org.redisson.connection.punsubscribe(java.lang.String,boolean)", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,boolean)", "org.redisson.connection.MasterSlaveEntry.reattachPubSub(org.redisson.client.RedisPubSubConnection,boolean)", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,boolean)", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).4", "org.redisson.connection.MasterSlaveEntry.reattachBlockingQueue(org.redisson.client.RedisConnection).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String)", "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection).3", "org.redisson.connection.punsubscribe(java.lang.String)", "org.redisson.connection.MasterSlaveEntry.subscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec)", "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,boolean)", "org.redisson.connection.unsubscribe(java.lang.String)", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,boolean)", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2", "org.redisson.connection.MasterSlaveEntry.psubscribe(java.lang.String,java.util.Collection,org.redisson.client.codec.Codec)", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "org.redisson.connection.PubSubConnectionEntry.Status", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).8", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,org.redisson.pubsub.AsyncSemaphore).9", "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.net.URI,java.lang.String).2.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "RPermitExpirableSemaphore.availablePermits doesn't return actual permits account under certain conditions", "body": "", "url": "https://github.com/redisson/redisson/issues/659", "user": "mrniko", "labels": ["bug"], "created": "2016-10-10 17:13:14", "closed": "2016-10-10 17:13:44", "commits": {"47743daf03dd9d8bf9832362d1a919b1040f2e03": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "47743daf03dd9d8bf9832362d1a919b1040f2e03", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6af83a1ca0b13a1a27505f55ae06e5a693ec3c1c"], "nameRev": "47743daf03dd9d8bf9832362d1a919b1040f2e03 tags/redisson-parent-2.5.0~12", "commitMessage": "RPermitExpirableSemaphore.availablePermits doesn't return actual permits account under certain conditions #659\n", "commitDateTime": "2016-10-10 20:13:27", "authoredDateTime": "2016-10-10 20:13:27", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonPermitExpirableSemaphore.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "redisson/src/test/java/org/redisson/RedissonPermitExpirableSemaphoreTest.java", "insertions": 20, "deletions": 0, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPermitExpirableSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPermitExpirableSemaphore.availablePermitsAsync()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonPermitExpirableSemaphoreTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPermitExpirableSemaphoreTest.testAvailablePermits()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["47743daf03dd9d8bf9832362d1a919b1040f2e03"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonPermitExpirableSemaphore.availablePermitsAsync()"]}, {"title": "RLocalCacheMap.readAllValues and readAllEntrySet methods return wrong values", "body": "", "url": "https://github.com/redisson/redisson/issues/658", "user": "mrniko", "labels": ["bug"], "created": "2016-10-10 17:09:32", "closed": "2016-10-10 17:10:27", "commits": {"6af83a1ca0b13a1a27505f55ae06e5a693ec3c1c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6af83a1ca0b13a1a27505f55ae06e5a693ec3c1c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4baea4c9f6810c37146518186c863bdac987dc4d"], "nameRev": "6af83a1ca0b13a1a27505f55ae06e5a693ec3c1c tags/redisson-parent-2.5.0~13", "commitMessage": "Fixed - RLocalCacheMap.readAllValues and readAllEntrySet methods return wrong values #658\n", "commitDateTime": "2016-10-10 20:10:00", "authoredDateTime": "2016-10-10 20:10:00", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLocalCachedMapTest.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLocalCachedMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllValuesAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLocalCachedMap.readAllEntrySetAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLocalCachedMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLocalCachedMapTest.testReadValuesAndEntries()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6af83a1ca0b13a1a27505f55ae06e5a693ec3c1c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLocalCachedMap.readAllEntrySetAsync()", "org.redisson.RedissonLocalCachedMap.readAllValuesAsync()"]}, {"title": "LiveObjectService swallow exceptions during merge or persist operation", "body": "", "url": "https://github.com/redisson/redisson/issues/647", "user": "mrniko", "labels": ["bug"], "created": "2016-10-03 12:33:44", "closed": "2016-10-03 14:08:15", "commits": {"108641a23ddf4efad9c2a5ba7daea313f092e2eb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "108641a23ddf4efad9c2a5ba7daea313f092e2eb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ac7aef47063778a56e2d9767e1ae48befc74854d"], "nameRev": "108641a23ddf4efad9c2a5ba7daea313f092e2eb tags/redisson-parent-2.5.0~26", "commitMessage": "Cascade persist whole object graph #648 #647\n", "commitDateTime": "2016-10-03 16:41:09", "authoredDateTime": "2016-10-03 16:41:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 96, "deletions": 96, "lines": 192}, {"filePath": "redisson/src/main/java/org/redisson/liveobject/core/AccessorInterceptor.java", "insertions": 13, "deletions": 120, "lines": 133}, {"filePath": "redisson/src/main/java/org/redisson/liveobject/core/RedissonObjectBuilder.java", "insertions": 160, "deletions": 0, "lines": 160}, {"filePath": "redisson/src/main/java/org/redisson/liveobject/misc/AdvBeanCopy.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 24, "deletions": 3, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.copy(java.lang.Object,java.lang.Object)", "TOT": 16, "UPD": 2, "INS": 0, "MOV": 11, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.persist(java.lang.Object)", "TOT": 24, "UPD": 2, "INS": 1, "MOV": 19, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.persist(java.lang.Object,java.util.Map)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.copy(java.lang.Object,java.lang.Object,java.util.List)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.merge(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.registerClassInternal(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AccessorInterceptor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.intercept(java.lang.reflect.Method,java.util.concurrent.Callable,java.lang.Object[],java.lang.Object,org.redisson.api.RMap)", "TOT": 51, "UPD": 16, "INS": 3, "MOV": 16, "DEL": 16}, {"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.getFieldCodec(java.lang.Class,java.lang.Class,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.getFieldNamingScheme(java.lang.Class,java.lang.String,org.redisson.client.codec.Codec)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.getMappedClass(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonObjectBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.core.RedissonObjectBuilder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AdvBeanCopy.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.misc.AdvBeanCopy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testObjectShouldNotBeAttached2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testPersistList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testPersist()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RedissonSetCache TTL not updated if element already present", "body": "When using RedissonSetCache.add(value, ttl, unit) method, TTL is not updated if the element is already in the set. I think the problem is in the addAsync(value, ttl, unit) method, in the script passed to redis:\n\n\"local expireDateScore = redis.call('zscore', KEYS[1], ARGV[3]); \"\n                + \"if expireDateScore ~= false and tonumber(expireDateScore) > tonumber(ARGV[1]) then \"\n                    + \"return 0;\"\n                + \"end; \" +\n                \"redis.call('zadd', KEYS[1], ARGV[2], ARGV[3]); \" +\n                \"return 1; \"\n\nIf I'm getting it right, when the element is not expired the script returns 0 without calling ZADD and updating the TTL. I would expect 'false' return code (according to Set interface), but also TTL to be updated.\n", "url": "https://github.com/redisson/redisson/issues/646", "user": "RobyZ", "labels": ["bug"], "created": "2016-09-30 20:32:03", "closed": "2016-10-04 14:53:51", "commits": {"e663767d0f3fabe65d13629317bb240eaa486e97": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "e663767d0f3fabe65d13629317bb240eaa486e97", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3ac7eae34130967d181fd0512e3c962b4b98710a"], "nameRev": "e663767d0f3fabe65d13629317bb240eaa486e97 tags/redisson-parent-2.5.0~21", "commitMessage": "RedissonSetCache TTL not updated if element already present #646\n", "commitDateTime": "2016-10-04 17:53:35", "authoredDateTime": "2016-10-04 17:53:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonSetCache.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "redisson/src/test/java/org/redisson/RedissonSetCacheTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSetCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCache.addAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddOverrideExpiration()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e663767d0f3fabe65d13629317bb240eaa486e97"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSetCache.addAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)"]}, {"title": "LiveObjectService doesn't support protected constructors", "body": "", "url": "https://github.com/redisson/redisson/issues/645", "user": "mrniko", "labels": ["bug"], "created": "2016-09-30 15:26:15", "closed": "2016-09-30 15:27:44", "commits": {"000fb85375ebbe4b7721e23b8bc8d872e77a731d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "000fb85375ebbe4b7721e23b8bc8d872e77a731d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["87be1e3bc9542fafab3096d666e2a8d2aab8c5d1"], "nameRev": "000fb85375ebbe4b7721e23b8bc8d872e77a731d tags/redisson-parent-2.5.0~28", "commitMessage": "LiveObjectService doesn't support protected constructors #645\n", "commitDateTime": "2016-09-30 18:27:35", "authoredDateTime": "2016-09-30 18:27:35", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 195, "deletions": 17, "lines": 212}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 45, "deletions": 0, "lines": 45}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.instantiate(java.lang.Class,java.lang.Object)", "TOT": 22, "UPD": 7, "INS": 3, "MOV": 8, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.persist(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.detach(java.lang.Object,java.util.Map)", "TOT": 30, "UPD": 7, "INS": 7, "MOV": 12, "DEL": 4}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.ClassWithoutIdSetterGetter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testWithoutIdSetterGetter()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testProtectedConstructor()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestREntity", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestREntityWithRMap", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.TestREntityValueNested", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["000fb85375ebbe4b7721e23b8bc8d872e77a731d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 195, "deletions": 17, "lines": 212, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 54, "UPD": 15, "INS": 10, "MOV": 20, "DEL": 9, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLiveObjectService.detach(java.lang.Object,java.util.Map)", "org.redisson.RedissonLiveObjectService.instantiate(java.lang.Class,java.lang.Object)", "org.redisson.RedissonLiveObjectService.persist(java.lang.Object)"]}, {"title": "Cyclic dependencies during LiveObjectService.detach process lead to stackoverflow", "body": "", "url": "https://github.com/redisson/redisson/issues/642", "user": "mrniko", "labels": ["bug"], "created": "2016-09-30 11:57:30", "closed": "2016-09-30 11:57:54", "commits": {"2e9f59b2ab6b8633fb8d2a68be20383bb7e373e9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2e9f59b2ab6b8633fb8d2a68be20383bb7e373e9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5912e3a081776af53a84ce07e4b8a28aa417e4b9"], "nameRev": "2e9f59b2ab6b8633fb8d2a68be20383bb7e373e9 tags/redisson-parent-2.5.0~31", "commitMessage": "Cyclic dependencies during LiveObjectService.detach process lead to stackoverflow #642\n", "commitDateTime": "2016-09-30 14:57:47", "authoredDateTime": "2016-09-30 14:57:47", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 24, "deletions": 3, "lines": 27}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 35, "deletions": 1, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.detach(java.lang.Object)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.detach(java.lang.Object,java.util.Map)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testCyclicRefsDuringDetach()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.Order", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.Order.setCustomer(org.redisson.RedissonLiveObjectServiceTest$Customer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.Order.getCustomer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2e9f59b2ab6b8633fb8d2a68be20383bb7e373e9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 24, "deletions": 3, "lines": 27, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 16, "UPD": 0, "INS": 8, "MOV": 5, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLiveObjectService.detach(java.lang.Object)", "org.redisson.RedissonLiveObjectService.detach(java.lang.Object,java.util.Map)"]}, {"title": "Not persisted REntity object allowed to store automatically", "body": "", "url": "https://github.com/redisson/redisson/issues/641", "user": "mrniko", "labels": ["bug"], "created": "2016-09-30 10:42:22", "closed": "2016-09-30 10:42:51", "commits": {"5912e3a081776af53a84ce07e4b8a28aa417e4b9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5912e3a081776af53a84ce07e4b8a28aa417e4b9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c6bb27b95ac53f19dfad41fe34a669fd6db9fbcb"], "nameRev": "5912e3a081776af53a84ce07e4b8a28aa417e4b9 tags/redisson-parent-2.5.0~32", "commitMessage": "Not persisted REntity object allowed to store automatically #641\n", "commitDateTime": "2016-09-30 13:42:43", "authoredDateTime": "2016-09-30 13:42:43", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "redisson/src/main/java/org/redisson/liveobject/misc/ClassUtils.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "redisson/src/main/java/org/redisson/misc/RedissonObjectFactory.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 74, "deletions": 0, "lines": 74}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.getMap(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.persist(java.lang.Object)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.attach(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.instantiateDetachedObject(java.lang.Class,java.lang.Object)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.detach(java.lang.Object)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassUtils.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.misc.ClassUtils.setField(java.lang.Object,java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.liveobject.misc.ClassUtils.getField(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonObjectFactory.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.RedissonObjectFactory.toReference(org.redisson.api.RedissonClient,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.Customer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.Order", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testObjectShouldNotBeAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testObjectShouldBeAttached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5912e3a081776af53a84ce07e4b8a28aa417e4b9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 38, "deletions": 9, "lines": 47, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 19, "UPD": 16, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson", "redisson/src/main/java/org/redisson/misc", "redisson/src/main/java/org/redisson/liveobject/misc"], "changesInPackagesSPOON": ["org.redisson.liveobject.misc.ClassUtils.getField(java.lang.Object,java.lang.String)", "org.redisson.RedissonLiveObjectService.detach(java.lang.Object)", "org.redisson.RedissonLiveObjectService.instantiateDetachedObject(java.lang.Class,java.lang.Object)", "org.redisson.RedissonLiveObjectService.persist(java.lang.Object)", "org.redisson.misc.RedissonObjectFactory.toReference(org.redisson.api.RedissonClient,java.lang.Object)", "org.redisson.liveobject.misc.ClassUtils.setField(java.lang.Object,java.lang.String,java.lang.Object)", "org.redisson.RedissonLiveObjectService.attach(java.lang.Object)", "org.redisson.RedissonLiveObjectService.getMap(java.lang.Object)"]}, {"title": "RLexSortedSet.addAll(Collection) doesn't work", "body": "If I try to call addAll I get a RedisException:\n\n```\nredisson.getLexSortedSet(\"mash:active-accounts\").addAll(Arrays.asList(\"foo\"))\n```\n\nI am using 2.4.0.\n\n```\nRedisException: ERR wrong number of arguments for 'zadd' command. channel: [id: 0xf5b079ba, L:/127.0.0.1:54944 - R:/127.0.0.1:6379] command: CommandData [promise=org.redisson.misc.RedissonPromise@6cca2408, command=(ZADD), params=[mash:active-accounts, [Ljava.lang.Object;@36cc628b], codec=org.redisson.client.codec.StringCodec@4b03c104]\n->>  265 | decode    in org.redisson.client.handler.CommandDecoder\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n|    125 | decode    in     ''\n|    367 | callDecode in io.netty.handler.codec.ReplayingDecoder\n|    248 | channelRead in io.netty.handler.codec.ByteToMessageDecoder\n|    366 | invokeChannelRead in io.netty.channel.AbstractChannelHandlerContext\n|    352 | invokeChannelRead in     ''\n|    345 | fireChannelRead in     ''\n|     86 | channelRead in io.netty.channel.ChannelInboundHandlerAdapter\n|    366 | invokeChannelRead in io.netty.channel.AbstractChannelHandlerContext\n|    352 | invokeChannelRead in     ''\n|    345 | fireChannelRead in     ''\n|   1294 | channelRead in io.netty.channel.DefaultChannelPipeline$HeadContext\n|    366 | invokeChannelRead in io.netty.channel.AbstractChannelHandlerContext\n|    352 | invokeChannelRead in     ''\n|    911 | fireChannelRead in io.netty.channel.DefaultChannelPipeline\n|    131 | read      in io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe\n|    611 | processSelectedKey in io.netty.channel.nio.NioEventLoop\n|    552 | processSelectedKeysOptimized in     ''\n|    466 | processSelectedKeys in     ''\n|    438 | run       in     ''\n|    140 | run . . . in io.netty.util.concurrent.SingleThreadEventExecutor$2\n|    144 | run       in io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator\n^    744 | run . . . in java.lang.Thread\n```\n", "url": "https://github.com/redisson/redisson/issues/640", "user": "davidtinker", "labels": ["bug"], "created": "2016-09-30 07:34:17", "closed": "2016-09-30 09:14:41", "commits": {"733ac70c00bcfd3e8e3850442f494ed384764e19": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "733ac70c00bcfd3e8e3850442f494ed384764e19", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["30f7c421dba2b00aac68ebe17b27db8c90fa6be2"], "nameRev": "733ac70c00bcfd3e8e3850442f494ed384764e19 tags/redisson-parent-2.5.0~34", "commitMessage": "RLexSortedSet.addAll fixed.  #640\n", "commitDateTime": "2016-09-30 12:14:14", "authoredDateTime": "2016-09-30 12:14:14", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLexSortedSet.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLexSortedSetTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLexSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLexSortedSet.addAllAsync(java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonLexSortedSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLexSortedSetTest.testAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["733ac70c00bcfd3e8e3850442f494ed384764e19"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLexSortedSet.addAllAsync(java.util.Collection)"]}, {"title": "LiveObjectService can't detach content of List object", "body": "", "url": "https://github.com/redisson/redisson/issues/638", "user": "mrniko", "labels": ["bug"], "created": "2016-09-29 15:20:59", "closed": "2016-09-29 15:33:21", "commits": {"30f7c421dba2b00aac68ebe17b27db8c90fa6be2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "30f7c421dba2b00aac68ebe17b27db8c90fa6be2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["75db5eca7dbf1e58e008d27f3fece8b4854ef5f4"], "nameRev": "30f7c421dba2b00aac68ebe17b27db8c90fa6be2 tags/redisson-parent-2.5.0~35", "commitMessage": "LiveObjectService can't detach content of List object #638\n", "commitDateTime": "2016-09-29 18:33:12", "authoredDateTime": "2016-09-29 18:33:12", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 31, "deletions": 1, "lines": 32}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 41, "deletions": 0, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.getMap(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectService.detach(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.ObjectWithList", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testStoreInnerObject()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["30f7c421dba2b00aac68ebe17b27db8c90fa6be2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31, "deletions": 1, "lines": 32, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLiveObjectService.detach(java.lang.Object)", "org.redisson.RedissonLiveObjectService.getMap(java.lang.Object)"]}, {"title": "LiveObjectService doesn't create objects mapped to Redisson objects in runtime", "body": "Let's consider such object:\n\n``` java\n    @REntity\n    public static class TestREntityWithMap implements Comparable<TestREntityWithMap>, Serializable {\n\n        @RId\n        private String name;\n        private Map value;\n\n   }\n```\n\nFollow test doesn't work:\n\n``` java\n        TestREntityWithMap so = redisson.getLiveObjectService().create(TestREntityWithMap.class);\n        so.getValue().put(\"1\", \"2\");\n\n        so = redisson.getLiveObjectService().detach(so);\n        assertThat(so.getName()).isNotNull();\n        assertThat(so.getValue()).containsKey(\"1\");\n        assertThat(so.getValue()).containsValue(\"2\");\n\n        so = redisson.getLiveObjectService().get(TestREntityWithMap.class, so.getName());\n        assertThat(so.getName()).isNotNull();\n        assertThat(so.getValue()).containsKey(\"1\");\n        assertThat(so.getValue()).containsValue(\"2\");\n```\n", "url": "https://github.com/redisson/redisson/issues/637", "user": "mrniko", "labels": ["bug"], "created": "2016-09-28 15:39:53", "closed": "2016-09-28 15:41:11", "commits": {"75db5eca7dbf1e58e008d27f3fece8b4854ef5f4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "75db5eca7dbf1e58e008d27f3fece8b4854ef5f4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8f0c91fdbbe38c4b874573a4c38680a16ab01b74"], "nameRev": "75db5eca7dbf1e58e008d27f3fece8b4854ef5f4 tags/redisson-parent-2.5.0~36", "commitMessage": "Fixed - LiveObjectService doesn't create objects mapped to Redisson objects in runtime #637\n", "commitDateTime": "2016-09-28 18:40:59", "authoredDateTime": "2016-09-28 18:40:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/liveobject/core/AccessorInterceptor.java", "insertions": 41, "deletions": 16, "lines": 57}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AccessorInterceptor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.getMappedClass(java.lang.Object)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.liveobject.core.AccessorInterceptor.intercept(java.lang.reflect.Method,java.util.concurrent.Callable,java.lang.Object[],java.lang.Object,org.redisson.api.RMap)", "TOT": 21, "UPD": 4, "INS": 9, "MOV": 7, "DEL": 1}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testCreateObjectsInRuntime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["75db5eca7dbf1e58e008d27f3fece8b4854ef5f4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 41, "deletions": 16, "lines": 57, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 25, "UPD": 8, "INS": 9, "MOV": 7, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/liveobject/core"], "changesInPackagesSPOON": ["org.redisson.liveobject.core.AccessorInterceptor.intercept(java.lang.reflect.Method,java.util.concurrent.Callable,java.lang.Object[],java.lang.Object,org.redisson.api.RMap)", "org.redisson.liveobject.core.AccessorInterceptor.getMappedClass(java.lang.Object)"]}, {"title": "LiveObjectService doesn't work with id without setter", "body": "", "url": "https://github.com/redisson/redisson/issues/636", "user": "mrniko", "labels": ["bug"], "created": "2016-09-28 14:15:10", "closed": "2016-09-28 15:09:00", "commits": {"d4af25813c14f553d835b012f72c0021d5f5b865": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d4af25813c14f553d835b012f72c0021d5f5b865", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["af18eb09a393e862f11c6c1bad92db73c1d9b171"], "nameRev": "d4af25813c14f553d835b012f72c0021d5f5b865 tags/redisson-parent-2.5.0~39", "commitMessage": "LiveObjectService doesn't work with id without setter #636\n", "commitDateTime": "2016-09-28 17:15:59", "authoredDateTime": "2016-09-28 17:15:59", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLiveObjectService.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java", "insertions": 37, "deletions": 1, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLiveObjectService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectService.instantiateDetachedObject(java.lang.Class,java.lang.Object)", "TOT": 8, "UPD": 5, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedissonLiveObjectServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.SimpleObject", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLiveObjectServiceTest.testFieldWithoutSetterGetter()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d4af25813c14f553d835b012f72c0021d5f5b865"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 5, "INS": 1, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLiveObjectService.instantiateDetachedObject(java.lang.Class,java.lang.Object)"]}, {"title": "ClassCastException error happen when use sentinel server mode", "body": "Test code as below:\n\npublic class RedissonTest {\n\n```\npublic static void main(String[] args) {\n    Config config = new Config();\n    config.useSentinelServers()\n    .setMasterName(\"atomic_counter_dev\")\n    .addSentinelAddress(\"127.0.0.1:26379\");\n\n    Redisson.create(config);\n}\n```\n\n}\n\nRedisson 2.3.0\nJDK 1.8.0_92\n\nINFO  2016-09-26 14:45:46 [main] org.redisson.Version.logVersion:41 - Redisson 2.3.0\nINFO  2016-09-26 14:45:47 [main] o.r.c.SentinelConnectionManager.<init>:80 - master: 127.0.0.1:6379 added\nException in thread \"main\" java.lang.ClassCastException: java.util.HashMap cannot be cast to java.util.List\n    at org.redisson.connection.SentinelConnectionManager.<init>(SentinelConnectionManager.java:83)\n    at org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:169)\n    at org.redisson.Redisson.<init>(Redisson.java:103)\n    at org.redisson.Redisson.create(Redisson.java:133)\n    at com.coupang.reconciliation.configuration.RedissonTest.main(RedissonTest.java:14)\n", "url": "https://github.com/redisson/redisson/issues/632", "user": "princessd8251", "labels": ["bug"], "created": "2016-09-26 06:50:26", "closed": "2016-09-27 06:51:20", "commits": {"f657a42ef7c72e0d9ecfd1de3952d6ff095811b7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "f657a42ef7c72e0d9ecfd1de3952d6ff095811b7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a705d5d3290de8494990e680aaf71af832ff82b7"], "nameRev": "f657a42ef7c72e0d9ecfd1de3952d6ff095811b7 tags/redisson-parent-2.4.0~5", "commitMessage": "Fixed ClassCastException error when there are no slaves in sentinel mode.  #632\n", "commitDateTime": "2016-09-27 09:50:51", "authoredDateTime": "2016-09-27 09:50:51", "commitGitStats": [{"filePath": "redisson/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/FlatNestedMultiDecoder.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/decoder/NestedMultiDecoder.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FlatNestedMultiDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.FlatNestedMultiDecoder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "NestedMultiDecoder.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f657a42ef7c72e0d9ecfd1de3952d6ff095811b7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 5, "lines": 18, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol/decoder", "redisson/src/main/java/org/redisson/client/protocol"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.FlatNestedMultiDecoder", "org.redisson.client.protocol"]}, {"title": "RedissonRedLock & RedissonMultiLock lock method stuck", "body": "If more than 3 locks are supplied to RedissonRedLock or RedissonMultiLock instance then `lock` method could stuck\n", "url": "https://github.com/redisson/redisson/issues/631", "user": "mrniko", "labels": ["bug"], "created": "2016-09-25 10:32:06", "closed": "2016-09-25 10:33:56", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Incorrect RedissonRedLock.tryLock behaviour", "body": "Lock could acquired by several threads at once when `leaseTime` parameter less than `waitTime` parameter passed into `RedissonRedLock.tryLock` \n", "url": "https://github.com/redisson/redisson/issues/624", "user": "mrniko", "labels": ["bug"], "created": "2016-09-20 14:09:32", "closed": "2016-09-20 14:10:40", "commits": {"7eaf465f577e5fb38a964f0dff9bf89ff1f29384": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7eaf465f577e5fb38a964f0dff9bf89ff1f29384", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5731b9eb0b81813bdac3b38b9ec2b03c33fc2c65"], "nameRev": "7eaf465f577e5fb38a964f0dff9bf89ff1f29384 tags/redisson-parent-2.4.0~38", "commitMessage": "Fixed - Incorrect RedissonRedLock.tryLock behaviour. #624\n", "commitDateTime": "2016-09-20 17:10:30", "authoredDateTime": "2016-09-20 17:10:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonMultiLock.java", "insertions": 65, "deletions": 33, "lines": 98}, {"filePath": "redisson/src/main/java/org/redisson/RedissonRedLock.java", "insertions": 5, "deletions": 28, "lines": 33}, {"filePath": "redisson/src/test/java/org/redisson/RedissonRedLockTest.java", "insertions": 47, "deletions": 0, "lines": 47}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMultiLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultiLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "TOT": 24, "UPD": 7, "INS": 5, "MOV": 11, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultiLock.tryLock()", "TOT": 10, "UPD": 2, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMultiLock.sync(java.util.Map)", "TOT": 30, "UPD": 12, "INS": 0, "MOV": 15, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonMultiLock.failedLocksLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRedLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRedLock.sync(java.util.Map)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonRedLock.failedLocksLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRedLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRedLockTest.testTryLockLeasetime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7eaf465f577e5fb38a964f0dff9bf89ff1f29384"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 70, "deletions": 61, "lines": 131, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 71, "UPD": 23, "INS": 8, "MOV": 34, "DEL": 6, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMultiLock.tryLock()", "org.redisson.RedissonMultiLock.sync(java.util.Map)", "org.redisson.RedissonMultiLock.failedLocksLimit()", "org.redisson.RedissonMultiLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonRedLock.sync(java.util.Map)", "org.redisson.RedissonRedLock.failedLocksLimit()"]}, {"title": "Sync commands usage in connectionListener leads to connection timeout exception", "body": "", "url": "https://github.com/redisson/redisson/issues/608", "user": "mrniko", "labels": ["bug"], "created": "2016-09-08 17:15:25", "closed": "2016-09-08 17:16:14", "commits": {"beca76a527333e93d688f9ddf7f2d950fbbf3b34": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "beca76a527333e93d688f9ddf7f2d950fbbf3b34", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d1d3e9098bdc86175c5d9ee366b385ae844e310b"], "nameRev": "beca76a527333e93d688f9ddf7f2d950fbbf3b34 tags/redisson-parent-2.4.0~83", "commitMessage": "Fixed - sync commands usage in connectionListener leads to connection timeout exception #608\n", "commitDateTime": "2016-09-08 20:15:49", "authoredDateTime": "2016-09-08 20:15:49", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 20, "deletions": 5, "lines": 25}, {"filePath": "redisson/src/test/java/org/redisson/RedisClientTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient.connectAsync().2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisClient.connectPubSubAsync().3.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedisClientTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedisClientTest.testConnectAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["beca76a527333e93d688f9ddf7f2d950fbbf3b34"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 5, "lines": 25, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisClient.connectPubSubAsync().3.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.client.RedisClient.connectAsync().2.operationComplete(io.netty.channel.ChannelFuture)"]}, {"title": "Check Jackson 2.8.x compatibility", "body": "", "url": "https://github.com/redisson/redisson/issues/606", "user": "mrniko", "labels": ["bug"], "created": "2016-09-07 15:21:47", "closed": "2016-09-08 14:38:47", "commits": {"d1d3e9098bdc86175c5d9ee366b385ae844e310b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d1d3e9098bdc86175c5d9ee366b385ae844e310b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8280b417a93235baf6642ac4016b159c64ec75c6"], "nameRev": "d1d3e9098bdc86175c5d9ee366b385ae844e310b tags/redisson-parent-2.4.0~84", "commitMessage": "Jackson 2.8.x compatibility fixed. #606\n", "commitDateTime": "2016-09-08 17:38:30", "authoredDateTime": "2016-09-08 17:38:30", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/codec/JsonJacksonCodec.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JsonJacksonCodec.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d1d3e9098bdc86175c5d9ee366b385ae844e310b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/codec"]}, {"title": "Getting memory leak warnings when gracefully shutting down tomcat", "body": "I am getting warnings about potential memory leaks when gracefully shutting down tomcat:\n\n> 28-Aug-2016 18:59:01.385 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [tenant-management-webapp] created a ThreadLocal with key of type [java.lang.ThreadLocal](value [java.lang.ThreadLocal@42b3dc05]) and a value of type [io.netty.util.internal.InternalThreadLocalMap](value [io.netty.util.internal.InternalThreadLocalMap@19a704b7]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\n> 28-Aug-2016 18:59:05.211 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [user-settings-webapp] created a ThreadLocal with key of type [java.lang.ThreadLocal](value [java.lang.ThreadLocal@8117ba6]) and a value of type [io.netty.util.internal.InternalThreadLocalMap](value [io.netty.util.internal.InternalThreadLocalMap@6684e4af]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\n\nIn each webapp I configure a RedissonClient bean with a \"useSingleServer\" config:\n\n``` java\n@Configuration\npublic class RedissonConfig {\n\n    @Lazy\n    @Bean(destroyMethod = \"shutdown\")\n    public RedissonClient postConstruct() {\n        String host = \"192.168.99.100\";\n        Integer port = 6379;\n        Integer connectionMinimumIdleSize = 5;\n\n        Config config = new Config();\n\n        SingleServerConfig singleServerConfig = config.useSingleServer();\n        singleServerConfig.setAddress(host + \":\" + port);\n        singleServerConfig.setConnectionMinimumIdleSize(connectionMinimumIdleSize);\n\n        return Redisson.create(config);\n    }\n}\n```\n\nAfter that I use this bean by autowiring it in other spring beans:\n\n``` java\nimport org.redisson.RedissonClient;\nimport org.redisson.core.RLock;\n\n@Component\n@Lazy\npublic class LockingService {\n\n    @Autowired\n    private RedissonClient redissonClient;\n\n    public void lock(String resourceId) {\n        RLock lock = redissonClient.getLock(resourceId);\n        lock.lock();\n    }\n\n    public void unlock(String resourceId) {\n        RLock lock = redissonClient.getLock(resourceId);\n        lock.forceUnlock();\n    }\n}\n```\n\nversions:\nredisson 2.2.23\nspring 4.2.4.RELEASE\ntomcat 8.5.4\njava 1.8\n\nAny idea why this happens?\n", "url": "https://github.com/redisson/redisson/issues/599", "user": "yuragr", "labels": ["bug"], "created": "2016-08-29 08:25:39", "closed": "2017-10-06 14:31:41", "commits": {"11ccec323e205b9e130e4851cd8752d8cf740316": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 403.0002777777778, "commitsDetails": [{"commitHash": "11ccec323e205b9e130e4851cd8752d8cf740316", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2a24ad85b9b37eca7302deca5f21159861d9f2a0"], "nameRev": "11ccec323e205b9e130e4851cd8752d8cf740316 tags/redisson-2.10.5~32", "commitMessage": "GlobalEventExecutor usage removed. #599\n", "commitDateTime": "2017-10-06 17:34:09", "authoredDateTime": "2017-10-06 17:34:09", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/client/RedisClient.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/connection/DNSMonitor.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DNSMonitor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.DNSMonitor.monitorDnsChange()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ReplicatedConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["11ccec323e205b9e130e4851cd8752d8cf740316"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 7, "lines": 13, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 9, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 4, "spoonFilesChanged": 4, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/connection", "redisson/src/main/java/org/redisson/client", "redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.client.RedisClient", "org.redisson.connection.ReplicatedConnectionManager.scheduleMasterChangeCheck(org.redisson.config.ReplicatedServersConfig)", "org.redisson.connection.DNSMonitor.monitorDnsChange()", "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator)"]}, {"title": "Wrong object encoding during RedissonScoredSortedSet.addScore usage", "body": "", "url": "https://github.com/redisson/redisson/issues/594", "user": "mrniko", "labels": ["bug"], "created": "2016-08-26 10:32:09", "closed": "2016-08-26 10:33:36", "commits": {"1cf00d2da247fd408e463700ab34916541637886": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1cf00d2da247fd408e463700ab34916541637886", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["29c17dbb61de54706e2336287ff05ed4c00c055a"], "nameRev": "1cf00d2da247fd408e463700ab34916541637886 tags/redisson-parent-2.4.0~105", "commitMessage": "Fixed wrong object encoding during RedissonScoredSortedSet.addScore usage. #594\n", "commitDateTime": "2016-08-26 13:33:07", "authoredDateTime": "2016-08-26 13:33:07", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "redisson/src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "redisson/src/test/java/org/redisson/RedissonScoredSortedSetTest.java", "insertions": 9, "deletions": 10, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.addScoreAsync(java.lang.Object,java.lang.Number)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonScoredSortedSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSetTest.testAddAndGet()", "TOT": 8, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1cf00d2da247fd408e463700ab34916541637886"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/client/protocol", "redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonScoredSortedSet.addScoreAsync(java.lang.Object,java.lang.Number)", "org.redisson.client.protocol"]}, {"title": "can't find slaves", "body": "My program in the process of running.Occasionally, there will be no node to find!\n\n2016-08-25 03:49:46.088 [nioEventLoopGroup-2-1] WARN  io.netty.util.concurrent.DefaultPromise - An exception was thrown by org.redisson.cluster.ClusterConnectionManager$5.operationComplete()\njava.lang.IllegalStateException: Can't find /172.31.11.129:7001 in slaves!\n        at org.redisson.connection.balancer.LoadBalancerManagerImpl.unfreeze(LoadBalancerManagerImpl.java:79) ~[redisson-2.2.14.jar:na]\n        at org.redisson.connection.MasterSlaveEntry.slaveUp(MasterSlaveEntry.java:297) ~[redisson-2.2.14.jar:na]\n        at org.redisson.cluster.ClusterConnectionManager.upDownSlaves(ClusterConnectionManager.java:365) ~[redisson-2.2.14.jar:na]\n        at org.redisson.cluster.ClusterConnectionManager.checkSlaveNodesChange(ClusterConnectionManager.java:353) ~[redisson-2.2.14.jar:na]\n        at org.redisson.cluster.ClusterConnectionManager.access$1300(ClusterConnectionManager.java:54) ~[redisson-2.2.14.jar:na]\n        at org.redisson.cluster.ClusterConnectionManager$5.operationComplete(ClusterConnectionManager.java:335) ~[redisson-2.2.14.jar:na]\n        at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:683) [netty-common-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:604) [netty-common-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:564) [netty-common-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:407) [netty-common-4.0.36.Final.jar:4.0.36.Final]\n        at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:348) [redisson-2.2.14.jar:na]\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:256) [redisson-2.2.14.jar:na]\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:114) [redisson-2.2.14.jar:na]\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:376) [netty-codec-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:245) [netty-codec-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:292) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:278) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:292) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:278) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:962) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:528) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:485) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:399) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:371) [netty-transport-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112) [netty-common-4.0.36.Final.jar:4.0.36.Final]\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137) [netty-common-4.0.36.Final.jar:4.0.36.Final]\n        at java.lang.Thread.run(Thread.java:745) [na:1.7.0_60]\n\nmy redisson 2.2.14. master/slaver mode . redis cluster 3.x\n", "url": "https://github.com/redisson/redisson/issues/593", "user": "mz02606046", "labels": ["bug"], "created": "2016-08-26 06:58:53", "closed": "2016-08-31 14:47:20", "commits": {"60b1c8fa1549fa30b8de1f6e90d444c7cd980d41": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "60b1c8fa1549fa30b8de1f6e90d444c7cd980d41", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["564258db791f1308b12b861aab415b3f0a472282"], "nameRev": "60b1c8fa1549fa30b8de1f6e90d444c7cd980d41 tags/redisson-parent-2.4.0~99", "commitMessage": "Fixed - Can't find slave error in cluster mode if failed slave hasn't been added before. #593\n", "commitDateTime": "2016-08-31 17:46:52", "authoredDateTime": "2016-08-31 17:46:52", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 7, "deletions": 8, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).3.run()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlaveNodesChange(java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["60b1c8fa1549fa30b8de1f6e90d444c7cd980d41"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 8, "lines": 15, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 1, "INS": 5, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.config.ClusterServersConfig,java.util.Iterator).3.run()", "org.redisson.cluster.ClusterConnectionManager.checkSlaveNodesChange(java.util.Collection)", "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition)", "org.redisson.cluster.ClusterConnectionManager.upDownSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition,java.util.Set)"]}, {"title": "Unable to redefine RedisClient command execution timeout ", "body": "command execution timeout should be = `retryInterval * retryAttempts`\n", "url": "https://github.com/redisson/redisson/issues/570", "user": "mrniko", "labels": ["bug"], "created": "2016-08-03 08:35:48", "closed": "2016-08-03 08:36:43", "commits": {"ad515210268a15259011c9f7c55e7ebea9b9b836": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ad515210268a15259011c9f7c55e7ebea9b9b836", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d215e8f1bf1363aa77c8a8b5fba4ff7011b0eb27"], "nameRev": "ad515210268a15259011c9f7c55e7ebea9b9b836 tags/redisson-2.2.23~4", "commitMessage": "Unable to redefine RedisClient command execution timeout #570\n", "commitDateTime": "2016-08-03 11:35:56", "authoredDateTime": "2016-08-03 11:35:56", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/ElasticacheConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.connect(org.redisson.ClusterServersConfig,java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.createClient(java.lang.String,int,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElasticacheConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ElasticacheConnectionManager.connect(org.redisson.ElasticacheServersConfig,java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(java.lang.String,int,int,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.core.NodeType,java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ad515210268a15259011c9f7c55e7ebea9b9b836"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 8, "lines": 16, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0, "spoonFilesChanged": 5, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.connect(org.redisson.ClusterServersConfig,java.net.URI)", "org.redisson.connection.MasterSlaveConnectionManager.createClient(org.redisson.core.NodeType,java.lang.String,int)", "org.redisson.connection.MasterSlaveConnectionManager.createClient(java.lang.String,int,int,int)", "org.redisson.connection.createClient(java.lang.String,int,int,int)", "org.redisson.connection.ElasticacheConnectionManager.connect(org.redisson.ElasticacheServersConfig,java.net.URI)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager"]}, {"title": "Exceptions handling in CommandEncoder", "body": "Same thing as for CommandDecoder: unhandled exceptions leads to response timeout exception.\n", "url": "https://github.com/redisson/redisson/issues/568", "user": "mrniko", "labels": ["bug"], "created": "2016-08-02 17:13:02", "closed": "2016-08-03 08:12:28", "commits": {"d215e8f1bf1363aa77c8a8b5fba4ff7011b0eb27": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d215e8f1bf1363aa77c8a8b5fba4ff7011b0eb27", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["393930eff5ae2a133f11070b0e2946c5bee96163"], "nameRev": "d215e8f1bf1363aa77c8a8b5fba4ff7011b0eb27 tags/redisson-2.2.23~5", "commitMessage": "Exceptions handling in CommandEncoder #568\n", "commitDateTime": "2016-08-03 11:12:08", "authoredDateTime": "2016-08-03 11:12:08", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandEncoder.java", "insertions": 51, "deletions": 35, "lines": 86}, {"filePath": "src/test/java/org/redisson/CommandHandlersTest.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandEncoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandEncoder.encode(io.netty.channel.ChannelHandlerContext,org.redisson.client.protocol.CommandData,io.netty.buffer.ByteBuf)", "TOT": 11, "UPD": 0, "INS": 1, "MOV": 10, "DEL": 0}]}, {"spoonFilePath": "CommandHandlersTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandHandlersTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d215e8f1bf1363aa77c8a8b5fba4ff7011b0eb27"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 51, "deletions": 35, "lines": 86, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 12, "UPD": 0, "INS": 2, "MOV": 10, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandEncoder.write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)", "org.redisson.client.handler.CommandEncoder.encode(io.netty.channel.ChannelHandlerContext,org.redisson.client.protocol.CommandData,io.netty.buffer.ByteBuf)"]}, {"title": "Exceptions handling in CommandDecoder. ", "body": "Unhandled exceptions in CommandDecoder during decoding leads to response timeout exception.\n", "url": "https://github.com/redisson/redisson/issues/567", "user": "mrniko", "labels": ["bug"], "created": "2016-08-02 14:50:40", "closed": "2016-08-02 14:51:08", "commits": {"393930eff5ae2a133f11070b0e2946c5bee96163": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "393930eff5ae2a133f11070b0e2946c5bee96163", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c882694b94a158b59e066ad0ff021dc07fa52aca"], "nameRev": "393930eff5ae2a133f11070b0e2946c5bee96163 tags/redisson-2.2.23~6", "commitMessage": "Fixed exceptions handling in CommandDecoder. #567\n", "commitDateTime": "2016-08-02 17:50:53", "authoredDateTime": "2016-08-02 17:50:53", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 6, "deletions": 3, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["393930eff5ae2a133f11070b0e2946c5bee96163"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 3, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"]}, {"title": "Ack object used to prevent race-condition during ack receiving should be created per request", "body": "Because of this issue RemoteServiceAckTimeoutException could be thrown prior the end of ackTimeout\n", "url": "https://github.com/redisson/redisson/issues/559", "user": "mrniko", "labels": ["bug"], "created": "2016-07-29 15:15:45", "closed": "2016-07-29 15:15:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ConnectionListener.onConnect()/onDisconnect() are not invoked when redis server becomes active/inactive.", "body": "I am trying to utilize ConnectionListener to monitor connections to redis servers. The way I add connection listener is pretty similar to the sample code showing in wiki 9.1:\n\n```\nNodesGroup nodesGroup = redisson.getNodesGroup();\nnodesGroup.addConnectionListener(new ConnectionListener() {\n    public void onConnect(InetSocketAddress addr) {\n       // Redis server connected\n    }\n    public void onDisconnect(InetSocketAddress addr) {\n       // Redis server disconnected\n    }\n});\n```\n\nThe way I test it:\n1) start two redis server on port 6379, 6380, let server on port 6380 to be the slave\n2) setup and start redis client. I am using ElasticacheServersConfig here.\n3) Once all connections are stable, kill redis master server and check output.\n\nHowever, what I saw is onDisconnect() of my listener is never invoked after I shut down my redis server. If I restart my redis server again, I can see connectionEventHub.fireConnect() is called. But since the check `maps.get(addr) == Status.CONNECTED` always return true, my listener.onConnect() is also not invoked.\n\nCan anybody help explain why this happens? Did I misunderstand what connection listeners should be used for? Thanks in advance.\n\nThe version I am using is redisson-2.2.13\nBelow is the console output after master is down. \nDEBUG [2016-07-05 20:19:31,715] org.redisson.connection.ElasticacheConnectionManager: Current master: //127.0.0.1:6379\nDEBUG [2016-07-05 20:19:31,924] org.redisson.client.handler.ConnectionWatchdog: reconnecting RedisConnection@274136027 [redisClient=[addr=/127.0.0.1:6379], channel=[id: 0x767c23f5, 0.0.0.0/0.0.0.0:56141]] to /127.0.0.1:6379 \nDEBUG [2016-07-05 20:19:31,925] org.redisson.client.handler.ConnectionWatchdog: reconnecting RedisConnection@315015763 [redisClient=[addr=/127.0.0.1:6379], channel=[id: 0xe02beb0c, 0.0.0.0/0.0.0.0:56145]] to /127.0.0.1:6379 \nDEBUG [2016-07-05 20:19:31,925] org.redisson.client.handler.ConnectionWatchdog: reconnecting RedisConnection@37417717 [redisClient=[addr=/127.0.0.1:6379], channel=[id: 0xba92b187, 0.0.0.0/0.0.0.0:56146]] to /127.0.0.1:6379 \nDEBUG [2016-07-05 20:19:31,926] org.redisson.client.handler.ConnectionWatchdog: reconnecting RedisConnection@1396687106 [redisClient=[addr=/127.0.0.1:6379], channel=[id: 0x4d0ceba1, 0.0.0.0/0.0.0.0:56143]] to /127.0.0.1:6379 \nDEBUG [2016-07-05 20:19:31,926] org.redisson.client.handler.ConnectionWatchdog: reconnecting RedisConnection@1472480975 [redisClient=[addr=/127.0.0.1:6379], channel=[id: 0x3fa13888, 0.0.0.0/0.0.0.0:56144]] to /127.0.0.1:6379 \nDEBUG [2016-07-05 20:19:31,926] org.redisson.client.handler.ConnectionWatchdog: reconnecting RedisConnection@505461609 [redisClient=[addr=/127.0.0.1:6379], channel=[id: 0x3e7120a1, 0.0.0.0/0.0.0.0:56142]] to /127.0.0.1:6379 \nERROR [2016-07-05 20:19:32,718] org.redisson.connection.ElasticacheConnectionManager: Command execution timeout for /127.0.0.1:6379\n! org.redisson.client.RedisTimeoutException: Command execution timeout for /127.0.0.1:6379\n! at org.redisson.client.RedisConnection.await(RedisConnection.java:128) ~[redisson-2.2.13.jar:na]\n! at org.redisson.client.RedisConnection.sync(RedisConnection.java:147) ~[redisson-2.2.13.jar:na]\n! at org.redisson.connection.ElasticacheConnectionManager$1.run(ElasticacheConnectionManager.java:134) ~[redisson-2.2.13.jar:na]\n! at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_92]\n! at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:126) [netty-all-4.0.34.Final.jar:4.0.34.Final]\n! at io.netty.util.concurrent.GlobalEventExecutor$TaskRunner.run(GlobalEventExecutor.java:236) [netty-all-4.0.34.Final.jar:4.0.34.Final]\n! at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137) [netty-all-4.0.34.Final.jar:4.0.34.Final]\n! at java.lang.Thread.run(Thread.java:745) [na:1.8.0_92]\n", "url": "https://github.com/redisson/redisson/issues/547", "user": "Yipei", "labels": ["bug"], "created": "2016-07-05 20:58:53", "closed": "2016-07-12 14:42:56", "commits": {"d5b27a0248d413f83780ec34e97406ab89f3f908": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "d5b27a0248d413f83780ec34e97406ab89f3f908", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["44cdadbe4ef9abbde205bbf8900c0379cdebb80e"], "nameRev": "d5b27a0248d413f83780ec34e97406ab89f3f908 tags/redisson-2.2.18~6", "commitMessage": "ConnectionListener.onDisconnect doesn't work properly if it wasn't registered before connection creation. #547\n", "commitDateTime": "2016-07-12 17:34:17", "authoredDateTime": "2016-07-12 17:34:01", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ConnectionEventsHub.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/test/java/org/redisson/RedissonTest.java", "insertions": 3, "deletions": 4, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionEventsHub.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ConnectionEventsHub.fireConnect(java.net.InetSocketAddress)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ConnectionEventsHub.fireDisconnect(java.net.InetSocketAddress)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testConnectionListener()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d5b27a0248d413f83780ec34e97406ab89f3f908"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.ConnectionEventsHub.fireConnect(java.net.InetSocketAddress)", "org.redisson.connection.ConnectionEventsHub.fireDisconnect(java.net.InetSocketAddress)"]}, {"title": "RLock trylock blocks forever", "body": "Found this in 2.2.16, seems like this was not around in 2.2.10. But still verifying.\n\nWhen tryLock is called with 0 wait time, the thread blocks forever. I took a thread dump and it looks like the stack pasted below. \n\nA note on the environment: We are running this against an Elasticache cluster in AWS and accessing from 4 EC2 instances. We have seen a lot of command timeouts. I am not sure if that is some way leading to this.\n\n\"pool-4-thread-5\" #86 prio=5 os_prio=0 tid=0x00007f15ca23f800 nid=0xcd4 waiting for monitor entry [0x00007f15b90e5000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n    at org.redisson.pubsub.PublishSubscribe.subscribe(PublishSubscribe.java:53)\n    - waiting to lock <0x00000000dd405ea0> (a org.redisson.pubsub.LockPubSub)\n    at org.redisson.pubsub.LockPubSub.subscribe(LockPubSub.java:22)\n    at org.redisson.RedissonLock.subscribe(RedissonLock.java:311)\n    at org.redisson.RedissonLock.tryLock(RedissonLock.java:264)\n    at c.v.w.utils.caching.redis.RedisLock.tryLock(RedisLock.java:36)\n    at c.v.w.utils.caching.LeasedLock.tryLock(LeasedLock.java:19)\n    at c.v.w.eventprocessor.core.service.impl.JobProcessor.getProcessingLock(JobProcessor.java:130)\n    at c.v.w.eventprocessor.core.service.impl.JobProcessor.access$000(JobProcessor.java:47)\n    at c.v.w.webscan.eventprocessor.core.service.impl.JobProcessor$Processor.execute(JobProcessor.java:193)\n    at c.v.w.service.integration.core.DataContextAwareTask.run(DataContextAwareTask.java:59)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n", "url": "https://github.com/redisson/redisson/issues/543", "user": "arnabguptadev", "labels": ["bug"], "created": "2016-06-30 18:26:56", "closed": "2016-08-06 12:23:31", "commits": {"8fd41252b9f2bdfd47d49a65fc278706c4c2b9ad": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "1190cc5246c74f4e91d8dbb617f9a6c6712f3303": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "2c3b9337f240122ef19498c2227172d456cd925f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "f7e994975e7261d66476e36e1147101261b97992": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "8fd41252b9f2bdfd47d49a65fc278706c4c2b9ad", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7f0cc3efa0a5e4fda8559ead89b1ba0e5b081d47"], "nameRev": "8fd41252b9f2bdfd47d49a65fc278706c4c2b9ad tags/redisson-2.2.18~12", "commitMessage": "PubSub handling has been reimplemented. #543\n", "commitDateTime": "2016-07-04 14:44:08", "authoredDateTime": "2016-07-04 14:44:08", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonPatternTopic.java", "insertions": 10, "deletions": 14, "lines": 24}, {"filePath": "src/main/java/org/redisson/RedissonTopic.java", "insertions": 12, "deletions": 15, "lines": 27}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 248, "deletions": 181, "lines": 429}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 15, "deletions": 24, "lines": 39}, {"filePath": "src/main/java/org/redisson/connection/PubSubConnectionEntry.java", "insertions": 24, "deletions": 43, "lines": 67}, {"filePath": "src/main/java/org/redisson/pubsub/PublishSubscribe.java", "insertions": 17, "deletions": 14, "lines": 31}, {"filePath": "src/main/java/org/redisson/reactive/RedissonPatternTopicReactive.java", "insertions": 11, "deletions": 26, "lines": 37}, {"filePath": "src/main/java/org/redisson/reactive/RedissonTopicReactive.java", "insertions": 11, "deletions": 15, "lines": 26}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "1190cc5246c74f4e91d8dbb617f9a6c6712f3303", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1aaa941271aaeecb602a104f85582fd6a564940f"], "nameRev": "1190cc5246c74f4e91d8dbb617f9a6c6712f3303 tags/redisson-2.2.21~5", "commitMessage": "RLock, RSemaphore, RCountDownLatch can blocks forever under some conditions. #543\n", "commitDateTime": "2016-07-15 14:10:37", "authoredDateTime": "2016-07-15 14:10:37", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "src/main/java/org/redisson/pubsub/PublishSubscribe.java", "insertions": 5, "deletions": 3, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,java.util.concurrent.Semaphore).6.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,java.util.concurrent.Semaphore).7.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribe.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.unsubscribe(org.redisson.PubSubEntry,java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2c3b9337f240122ef19498c2227172d456cd925f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d9bdc55e361271c0bd23f5c7ca3bd144ef9c670f"], "nameRev": "2c3b9337f240122ef19498c2227172d456cd925f tags/redisson-2.2.24~5", "commitMessage": "Avoid netty threads blocking by Semaphore.acquire method. #543\n", "commitDateTime": "2016-08-04 22:03:41", "authoredDateTime": "2016-08-04 22:03:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonPatternTopic.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/RedissonTopic.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 41, "deletions": 24, "lines": 65}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 7, "deletions": 13, "lines": 20}, {"filePath": "src/main/java/org/redisson/pubsub/AsyncSemaphore.java", "insertions": 85, "deletions": 0, "lines": 85}, {"filePath": "src/main/java/org/redisson/pubsub/PublishSubscribe.java", "insertions": 49, "deletions": 36, "lines": 85}, {"filePath": "src/main/java/org/redisson/pubsub/TransferListener.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "src/main/java/org/redisson/reactive/RedissonPatternTopicReactive.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/reactive/RedissonTopicReactive.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonPatternTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPatternTopic.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getSemaphore(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,java.util.concurrent.Semaphore)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.punsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getSemaphore(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener)", "TOT": 17, "UPD": 2, "INS": 7, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener)", "TOT": 19, "UPD": 2, "INS": 8, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).4", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,java.util.concurrent.Semaphore).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,java.util.concurrent.Semaphore).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).2", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).3", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future).1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future).2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSub(org.redisson.client.RedisPubSubConnection)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 6}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,java.util.concurrent.Semaphore)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,java.util.concurrent.Semaphore)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "AsyncSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.AsyncSemaphore", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribe.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.subscribe(java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "TOT": 25, "UPD": 3, "INS": 7, "MOV": 13, "DEL": 2}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.createListener(java.lang.String,org.redisson.PubSubEntry).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.unsubscribe(org.redisson.PubSubEntry,java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.subscribe(java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager).2.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TransferListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.TransferListener", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonPatternTopicReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonPatternTopicReactive.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonTopicReactive.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f7e994975e7261d66476e36e1147101261b97992", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2c3b9337f240122ef19498c2227172d456cd925f"], "nameRev": "f7e994975e7261d66476e36e1147101261b97992 tags/redisson-2.2.24~4", "commitMessage": "Cancel unsuccessful subscription and remove AsyncSemaphore listener. #543\n", "commitDateTime": "2016-08-04 22:53:41", "authoredDateTime": "2016-08-04 22:53:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 10, "deletions": 7, "lines": 17}, {"filePath": "src/main/java/org/redisson/pubsub/AsyncSemaphore.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "src/main/java/org/redisson/pubsub/PublishSubscribe.java", "insertions": 14, "deletions": 4, "lines": 18}, {"filePath": "src/test/java/org/redisson/RedissonLockHeavyTest.java", "insertions": 42, "deletions": 0, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit,long).8.operationComplete(io.netty.util.concurrent.Future).2.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AsyncSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.AsyncSemaphore.acquire(java.lang.Runnable)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.pubsub.AsyncSemaphore.remove(java.lang.Runnable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribe.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.subscribe(java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "TOT": 9, "UPD": 1, "INS": 5, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.subscribe(java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.createListener(java.lang.String,org.redisson.PubSubEntry).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.subscribe(java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager).2.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLockHeavyTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockHeavyTest.tryLockUnlockRLock()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8fd41252b9f2bdfd47d49a65fc278706c4c2b9ad", "1190cc5246c74f4e91d8dbb617f9a6c6712f3303", "2c3b9337f240122ef19498c2227172d456cd925f", "f7e994975e7261d66476e36e1147101261b97992"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 641, "deletions": 444, "lines": 1085, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 167.0, "UPD": 45.0, "INS": 38.0, "MOV": 59.0, "DEL": 25.0, "spoonFilesChanged": 11, "spoonMethodsChanged": 50}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/pubsub", "src/main/java/org/redisson/connection", "src/main/java/org/redisson", "src/main/java/org/redisson/reactive"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore)", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.pubsub.PublishSubscribe.subscribe(java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager).2.run()", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "org.redisson.pubsub.PublishSubscribe.subscribe(java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "org.redisson.pubsub.PublishSubscribe.unsubscribe(org.redisson.PubSubEntry,java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future).2", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).3", "org.redisson.connection.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,java.util.concurrent.Semaphore)", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future).1", "org.redisson.pubsub.PublishSubscribe.createListener(java.lang.String,org.redisson.PubSubEntry).1", "org.redisson.reactive.RedissonTopicReactive.removeListener(int)", "org.redisson.connection.MasterSlaveEntry.reattachPubSub(org.redisson.client.RedisPubSubConnection)", "org.redisson.connection.MasterSlaveEntry.reattachPatternPubSubListeners(java.lang.String,java.util.Collection,java.util.concurrent.Semaphore)", "org.redisson.pubsub.PublishSubscribe.createListener(java.lang.String,org.redisson.PubSubEntry).3", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,java.util.concurrent.Semaphore).7", "org.redisson.RedissonTopic.removeListener(int)", "org.redisson.pubsub.PublishSubscribe.subscribe(java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager).2", "org.redisson.pubsub.TransferListener", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,java.util.concurrent.Semaphore).6.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener,java.util.concurrent.Semaphore)", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String,java.util.concurrent.Semaphore).6", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,java.util.concurrent.Semaphore)", "org.redisson.RedissonLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit,long).8.operationComplete(io.netty.util.concurrent.Future).2.run()", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonPatternTopic.removeListener(int)", "org.redisson.connection.punsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore)", "org.redisson.pubsub.AsyncSemaphore.acquire(java.lang.Runnable)", "org.redisson.connection.MasterSlaveConnectionManager.getSemaphore(java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.connect(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).5", "org.redisson.connection.unsubscribe(java.lang.String,java.util.concurrent.Semaphore)", "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection,java.util.concurrent.Semaphore)", "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).4", "org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.connection.psubscribe(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.RedisPubSubListener,java.util.concurrent.Semaphore)", "org.redisson.connection.getSemaphore(java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(org.redisson.client.codec.Codec,java.lang.String,org.redisson.client.RedisPubSubListener,io.netty.util.concurrent.Promise,org.redisson.client.protocol.pubsub.PubSubType,java.util.concurrent.Semaphore).2", "org.redisson.connection.MasterSlaveConnectionManager.punsubscribe(java.lang.String,java.util.concurrent.Semaphore).7.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "org.redisson.pubsub.AsyncSemaphore", "org.redisson.pubsub.AsyncSemaphore.remove(java.lang.Runnable)", "org.redisson.reactive.RedissonPatternTopicReactive.removeListener(int)"]}, {"title": "RMapCache with timeout leaves redisson__idle__set__ behind", "body": "If you create a RMapCache with a TTL entry then delete the map, the _idle_set_ is left behind.  This should be deleted too.\n\nE.g.  On a clean redis instance, this leaves the ZSET redisson__idle__set__{testRMapCacheValues}\n\n```\n    final RMapCache<String, String> map = redis.getMapCache( \"testRMapCacheValues\" );\n    try\n    {\n        map.put( \"1234\", \"5678\", 0, TimeUnit.MINUTES, 60, TimeUnit.MINUTES );\n\n        System.out.println( map.values() );\n    }\n    finally\n    {\n        map.delete();\n    }\n```\n", "url": "https://github.com/redisson/redisson/issues/540", "user": "neilwightman", "labels": ["bug"], "created": "2016-06-24 12:10:56", "closed": "2016-06-27 06:14:42", "commits": {"68be0a82e920bc094537afbf96a71132e9d2855a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "68be0a82e920bc094537afbf96a71132e9d2855a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bf18cddf5a3303b21faf6790fae1cba9f6fabb45"], "nameRev": "68be0a82e920bc094537afbf96a71132e9d2855a tags/redisson-2.2.17~11", "commitMessage": "Fixed - RMap doesn't delete redisson__idle__set__ #540\n", "commitDateTime": "2016-06-24 17:32:24", "authoredDateTime": "2016-06-24 17:32:24", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonMapCache.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["68be0a82e920bc094537afbf96a71132e9d2855a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.deleteAsync()"]}, {"title": "Redisson cannot recover from password protected rebooted redis server", "body": "Steps:\n1. Redis Server up. \n2. Client is up connecting and connected to Redis Server. It required AUTH password\n3. Redis Server down and passed the failedAttemps, so the server is excluded.\n4. Redis goes back up\n5. Client is trying to reconnect, but the mechanism to check if server is alive is broken for password protected server.\n\nI think the following line of code can be improved by including authentication:\nhttps://github.com/mrniko/redisson/blob/master/src/main/java/org/redisson/connection/pool/ConnectionPool.java#L329\n", "url": "https://github.com/redisson/redisson/issues/518", "user": "fransiskusx", "labels": ["bug"], "created": "2016-06-01 13:05:32", "closed": "2016-06-03 10:45:02", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "RKeys.getKeysByPattern infinite scan when no keys are present", "body": "After updating to version 2.2.14 RKeys.getKeysByPattern is doing infinite scans when there is not even 1 key by this pattern. It was working fine earlier.\n\n1464601787.027739 [0 127.0.0.1:53406] \"SCAN\" \"14\" \"MATCH\" \"XXX__\"\n1464601787.027892 [0 127.0.0.1:53405] \"SCAN\" \"0\" \"MATCH\" \"XXX__\"\n1464601787.028022 [0 127.0.0.1:53401] \"SCAN\" \"14\" \"MATCH\" \"XXX__\"\n1464601787.028161 [0 127.0.0.1:53402] \"SCAN\" \"0\" \"MATCH\" \"XXX__\"\n1464601787.028317 [0 127.0.0.1:53407] \"SCAN\" \"14\" \"MATCH\" \"XXX__\"\n1464601787.028456 [0 127.0.0.1:53406] \"SCAN\" \"0\" \"MATCH\" \"XXX__\"\n1464601787.028631 [0 127.0.0.1:53405] \"SCAN\" \"14\" \"MATCH\" \"XXX__\"\n1464601787.028775 [0 127.0.0.1:53401] \"SCAN\" \"0\" \"MATCH\" \"XXX__\"\n1464601787.028944 [0 127.0.0.1:53402] \"SCAN\" \"14\" \"MATCH\" \"XXX__\"\n1464601787.029096 [0 127.0.0.1:53407] \"SCAN\" \"0\" \"MATCH\" \"XXX__\"\n1464601787.029262 [0 127.0.0.1:53406] \"SCAN\" \"14\" \"MATCH\" \"XXX_*\"\n\nIt works fine when there is at least 1 key with this pattern\n", "url": "https://github.com/redisson/redisson/issues/515", "user": "ursbrbalaji", "labels": ["bug"], "created": "2016-05-30 09:54:38", "closed": "2016-06-08 10:50:06", "commits": {"645b1240dce40e4757eb20a85b2da165dd710fda": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "eeba238f42ed707979afe85b095d9c4e3cd0531a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "a4f0473514c654a597017cd4c10aec07c4f467ca": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "645b1240dce40e4757eb20a85b2da165dd710fda", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f8dfdb715490e3b8a3bc44a412e8df95538cc041"], "nameRev": "645b1240dce40e4757eb20a85b2da165dd710fda tags/redisson-2.2.15~4", "commitMessage": "Infinity loop with iterator fixed. #515\n", "commitDateTime": "2016-06-01 14:34:19", "authoredDateTime": "2016-06-01 14:34:19", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 12, "deletions": 6, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseIterator.hasNext()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "eeba238f42ed707979afe85b095d9c4e3cd0531a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6a263fc41ff1810691c02b77a5e2743f8f5b8886"], "nameRev": "eeba238f42ed707979afe85b095d9c4e3cd0531a tags/redisson-2.2.15~2", "commitMessage": "Map iterator fixed. #515\n", "commitDateTime": "2016-06-08 13:40:04", "authoredDateTime": "2016-06-08 13:40:04", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonBaseMapIterator.java", "insertions": 12, "deletions": 6, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBaseMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseMapIterator.hasNext()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a4f0473514c654a597017cd4c10aec07c4f467ca", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["eeba238f42ed707979afe85b095d9c4e3cd0531a"], "nameRev": "a4f0473514c654a597017cd4c10aec07c4f467ca tags/redisson-2.2.15~1", "commitMessage": "Iterator infinite scan test added.  #515\n", "commitDateTime": "2016-06-08 13:49:56", "authoredDateTime": "2016-06-08 13:49:56", "commitGitStats": [{"filePath": "src/test/java/org/redisson/RedissonTest.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testConnectionListener().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testConnectionListener().1.onDisconnect(java.net.InetSocketAddress)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testConnectionListener().1.onConnect(java.net.InetSocketAddress)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTest.testIterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["645b1240dce40e4757eb20a85b2da165dd710fda", "eeba238f42ed707979afe85b095d9c4e3cd0531a", "a4f0473514c654a597017cd4c10aec07c4f467ca"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 24, "deletions": 12, "lines": 36, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBaseIterator.hasNext()", "org.redisson.RedissonBaseMapIterator.hasNext()"]}, {"title": "RedissonSortedSet's order seems broken", "body": "Hi, we have been using RedissonSortedSet and just found that on certain cases the order can be broken and I assume RedissonSortedSet is supposedly thread safe.\n\nAssuming RedissonSortedSet of integers are added with the following integers : 103, 101, 102. RedissonSortedSet state (list in the redis server) should be: 101, 102, 103. However, there are cases when it is not. It may become 102, 101, 103 instead. And looking at RedissonSortedSet's source code, it uses binary search that requires the list/state to be always sorted. Therefore it breaks many other functionality.\n\nThe use case that breaks (in my case) is when we are adding multiple items and there is another thread that delete an item in between. Looking the source code implementation briefly, it may be because when removing an item it does not consider getCurrentVersion() (just a quick guess).\n", "url": "https://github.com/redisson/redisson/issues/514", "user": "fransiskusx", "labels": ["bug"], "created": "2016-05-30 05:45:47", "closed": "2016-06-03 10:40:03", "commits": {"2fa485a41753801abe889340d86d903ae06200d2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "2fa485a41753801abe889340d86d903ae06200d2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["80a0fbac27b8f7fc1d71add9630c47482178bb13"], "nameRev": "2fa485a41753801abe889340d86d903ae06200d2 tags/redisson-2.2.15~10", "commitMessage": "RSortedSet.remove and iterator.remove methods can break elements ordering. #514\n", "commitDateTime": "2016-05-30 13:44:51", "authoredDateTime": "2016-05-30 13:44:51", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonSortedSet.java", "insertions": 18, "deletions": 24, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSortedSet.remove(java.lang.Object,org.redisson.client.codec.Codec,org.redisson.client.RedisConnection)", "TOT": 12, "UPD": 2, "INS": 1, "MOV": 6, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonSortedSet.remove(int).4.execute(org.redisson.client.codec.Codec,org.redisson.client.RedisConnection)", "TOT": 13, "UPD": 3, "INS": 1, "MOV": 6, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2fa485a41753801abe889340d86d903ae06200d2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 24, "lines": 42, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 25, "UPD": 5, "INS": 2, "MOV": 12, "DEL": 6, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSortedSet.remove(java.lang.Object,org.redisson.client.codec.Codec,org.redisson.client.RedisConnection)", "org.redisson.RedissonSortedSet.remove(int).4.execute(org.redisson.client.codec.Codec,org.redisson.client.RedisConnection)"]}, {"title": "Possible race-condition in RemoteService", "body": "Race-condition during ack checking is possible. For example, ack timeout = 1000 ms:\n1. worker receives Request in 999 ms sends ack, but it comes in 1010ms or something like that.\n2. client checks ack in 1000 ms and throws RemoteServiceAckTimeoutException\n3. worker invokes method\n\nTo solve this problem `ackObject` was introduced. Worker or client set it to 1 via `SETNX` command. Worker set it during ack sending. Client during ack receiving.\n\nClient check ackObject only if ack timeout has occurred. If client can't set it means that worker have done it already. So client should poll an element from queue again.\n\nIf worker can't set ackObject then it means that ack timeout already occurred on client side and invocation should skipped.\n", "url": "https://github.com/redisson/redisson/issues/507", "user": "mrniko", "labels": ["bug"], "created": "2016-05-23 17:46:00", "closed": "2016-05-23 18:09:30", "commits": {"8d8aed3bf0bee3c71bd7786642311ea8a3202864": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8d8aed3bf0bee3c71bd7786642311ea8a3202864", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fb350c346d4d95e11a682dafbbfe56b71083866a"], "nameRev": "8d8aed3bf0bee3c71bd7786642311ea8a3202864 tags/redisson-2.2.14~13", "commitMessage": "Possible race-condition in RemoteService fixed. #507\n", "commitDateTime": "2016-05-23 20:48:41", "authoredDateTime": "2016-05-23 20:48:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonRemoteService.java", "insertions": 47, "deletions": 4, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonRemoteService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.RBlockingQueue).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.RBlockingQueue).1.operationComplete(io.netty.util.concurrent.Future).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.get(java.lang.Class,org.redisson.RemoteInvocationOptions).3.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonRemoteService.tryPollAckAgain(org.redisson.RemoteInvocationOptions,org.redisson.RBlockingQueue,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.RBlockingQueue).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8d8aed3bf0bee3c71bd7786642311ea8a3202864"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 47, "deletions": 4, "lines": 51, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 13, "UPD": 2, "INS": 5, "MOV": 5, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.RBlockingQueue).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.RBlockingQueue).1.operationComplete(io.netty.util.concurrent.Future).1", "org.redisson.RedissonRemoteService.subscribe(java.lang.Class,org.redisson.RBlockingQueue).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonRemoteService.get(java.lang.Class,org.redisson.RemoteInvocationOptions).3.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "org.redisson.RedissonRemoteService.tryPollAckAgain(org.redisson.RemoteInvocationOptions,org.redisson.RBlockingQueue,java.lang.String)"]}, {"title": "Dead Locks Happen in lock() Process", "body": "when heavy concurrency happens in my application, a few lock requests will \"sink\" without any responses, even after the lock lease time has passed. All of these requests wait at `RedissonLock.lockInterruptibly()`.The exact position is `RedissonLock.get()` after `RedissonLock.subscribe()`. \n\nIn my opinion, this may be due to a thread removes the netty listener which is used by another thread. It can happen in this way: \n1. Thread A is in the loop of getting the lock after subscription.\n2. Thread B has also applied subscription and waits for result.\n3. Thread A gets the lock very soon and enters  `RedissonLock.unsubscribe()`. In this step, it possibly removes all the listeners on the same channel, which includes the listener used by Thread B. It causes Thread B can never get subscription response and hang on forever.\n\nThe similar issue is at [https://github.com/mrniko/redisson/pull/93]. But I think it is not solved completely.\n\nAlso I suggest  to apply the ttl algorithm to `RedissonLock.get()` because this step can cost some time. And if it has a timeout, dead lock can be prevented in a work-around way.\n\nThis is the thread dump when dead lock happens:\n`\"http-nio-8001-exec-567\" #5935 daemon prio=5 os_prio=0 tid=0x00007f15f81ca000 nid=0x6b3e waiting on condition [0x00007f154468a000]\n   java.lang.Thread.State: WAITING (parking)\n    at sun.misc.Unsafe.park(Native Method)\n    - parking to wait for  <0x00000000bf468fc8> (a java.util.concurrent.CountDownLatch$Sync)\n    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:997)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1304)\n    at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:231)\n    at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:95)\n    at org.redisson.RedissonObject.get(RedissonObject.java:55)\n    at org.redisson.RedissonLock.lockInterruptibly(RedissonLock.java:113)\n    at org.redisson.RedissonLock.lock(RedissonLock.java:92)\n        ...`\n", "url": "https://github.com/redisson/redisson/issues/491", "user": "kajelas", "labels": ["bug"], "created": "2016-05-16 12:34:43", "closed": "2016-06-11 07:34:08", "commits": {"0227a0695d0c7ad75831e36f3c3beeeeb627cf6f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "c507014c262fc12157e43bc5c00d7fb522b660ad": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "0227a0695d0c7ad75831e36f3c3beeeeb627cf6f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["93574d4f6b883ca24a2cb5b4c4a79ef08611f789"], "nameRev": "0227a0695d0c7ad75831e36f3c3beeeeb627cf6f tags/redisson-2.2.16~18", "commitMessage": "Fixed dead lock during RLock, RSemaphore, RReadWriteLock, RCountDownLatch usage under heavy load. #491, #486, #455\n", "commitDateTime": "2016-06-09 13:09:57", "authoredDateTime": "2016-06-09 13:09:57", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 27, "deletions": 19, "lines": 46}, {"filePath": "src/main/java/org/redisson/pubsub/PublishSubscribe.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonLockHeavyTest.java", "insertions": 73, "deletions": 0, "lines": 73}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String).4.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection)", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribe.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.unsubscribe(org.redisson.PubSubEntry,java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonLockHeavyTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockHeavyTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c507014c262fc12157e43bc5c00d7fb522b660ad", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e6ccd7f3ebb884798e6a4e04647482ef27625457"], "nameRev": "c507014c262fc12157e43bc5c00d7fb522b660ad tags/redisson-2.2.16~7", "commitMessage": "Fixed cluster state managing with redis masters only. #491\n", "commitDateTime": "2016-06-10 18:21:11", "authoredDateTime": "2016-06-10 18:21:11", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c507014c262fc12157e43bc5c00d7fb522b660ad"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.addRemoveSlaves(org.redisson.connection.MasterSlaveEntry,org.redisson.cluster.ClusterPartition,org.redisson.cluster.ClusterPartition).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "expireAt(Date) use second instead of ms", "body": "```\n/**\n     * Set an expire date for object. When expire date comes\n     * the key will automatically be deleted.\n     *\n     * @param timestamp - expire date in milliseconds (Unix timestamp)\n     * @return <code>true</code> if the timeout was set and <code>false</code> if not\n     */\n    boolean expireAt(long timestamp);\n\n\n /**\n     * Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT\n     * represented by this <tt>Date</tt> object.\n     *\n     * @return  the number of milliseconds since January 1, 1970, 00:00:00 GMT\n     *          represented by this date.\n     */\n    public long getTime() {\n        return getTimeImpl();\n    }\n\n```\n\nSO\n\n```\npublic boolean expireAt(Date timestamp) {         return expireAt(timestamp.getTime() / 1000);     }\n```\n\nShould be\n\n```\npublic boolean expireAt(Date timestamp) {         return expireAt(timestamp.getTime());     }\n```\n", "url": "https://github.com/redisson/redisson/issues/490", "user": "wenerme", "labels": ["bug"], "created": "2016-05-16 06:04:45", "closed": "2016-05-16 16:58:19", "commits": {"7167b1d056a5aef42a1ae92edb762c948ef124de": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7167b1d056a5aef42a1ae92edb762c948ef124de", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["62712c656db01809e32a567020a31fdb7ddb12dc"], "nameRev": "7167b1d056a5aef42a1ae92edb762c948ef124de tags/redisson-2.2.14~30", "commitMessage": "RObject.expireAt fixed. #490\n", "commitDateTime": "2016-05-16 19:58:07", "authoredDateTime": "2016-05-16 19:58:07", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonExpirable.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonExpirable.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonExpirable.expireAt(java.util.Date)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonExpirable.expireAtAsync(java.util.Date)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7167b1d056a5aef42a1ae92edb762c948ef124de"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonExpirable.expireAtAsync(java.util.Date)", "org.redisson.RedissonExpirable.expireAt(java.util.Date)"]}, {"title": "getBlockingQueue throws IndexOutOfBoundsException", "body": "Hi:\nwhen I was using getBlockingQueue method.\n\nfollowing exception happened to me:\n[nioEventLoopGroup-2-4] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IndexOutOfBoundsException: readerIndex(0) + length(2) exceeds writerIndex(1): SlicedAbstractByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledUnsafeDirectByteBuf(ridx: 11, widx: 464, cap: 496))\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:431)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:245)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:292)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:278)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:292)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:278)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:292)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:278)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:962)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IndexOutOfBoundsException: readerIndex(0) + length(2) exceeds writerIndex(1): SlicedAbstractByteBuf(ridx: 0, widx: 1, cap: 1/1, unwrapped: UnpooledUnsafeDirectByteBuf(ridx: 11, widx: 464, cap: 496))\n    at io.netty.buffer.AbstractByteBuf.checkReadableBytes0(AbstractByteBuf.java:1178)\n    at io.netty.buffer.AbstractByteBuf.checkReadableBytes(AbstractByteBuf.java:1172)\n    at io.netty.buffer.AbstractByteBuf.skipBytes(AbstractByteBuf.java:758)\n    at org.redisson.client.protocol.decoder.KeyValueObjectDecoder.decode(KeyValueObjectDecoder.java:30)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:217)\n    at org.redisson.client.handler.CommandDecoder.decodeMulti(CommandDecoder.java:239)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:229)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:108)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:376)\n    ... 18 more\n\nand this exception will double the connection numbers with redis server.\n\nmy env:\nRedis 3.0.2\nRedisson 2.2.11\njava version \"1.8.0_25\"\nJava(TM) SE Runtime Environment (build 1.8.0_25-b17)\nJava HotSpot(TM) 64-Bit Server VM (build 25.25-b02, mixed mode)\n\nJava code looks like this:\n\npackage com.James.redis_failover_client;\n\nimport junit.framework.Test;\nimport junit.framework.TestCase;\nimport junit.framework.TestSuite;\nimport org.redisson.Config;\nimport org.redisson.Redisson;\nimport org.redisson.RedissonClient;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.util.Random;\nimport java.util.concurrent.TimeUnit;\n\n/**\n- Unit test for simple App.\n  */\n  public class blpopTest extends TestCase {\n  \n  private static final Logger logger = LoggerFactory.getLogger(blpopTest.class.getName());\n  \n  public static RedissonClient rclient;\n  \n  private static final String value = \"keyorg_token_tracker_385b678b153d44beba0eb72746e72f02,\" +\n          \" value:{\\\"token\\\":\\\"385b678b153d44beba0eb72746e72f02\\\",\\\"job_paths\\\":{},\\\"emptyRpt\\\":0,\\\"RptRequird\\\":\\\"true\\\",   \" +\n          \"\\\"org_account\\\":\\\"qufenqi\\\",\\\"RawdataRequird\\\":\\\"false\\\",\\\"Category\\\":\\\"\\\",\\\"RptVer\\\":\\\"4.0\\\",\" +\n          \"\\\"RptType\\\":\\\"token\\\",\\\"AwsNum\\\":0,\\\"Aws\\\":[],\\\"CompleteTask\\\":[],\\\"interfaceSucTask\\\":[],\\\"RptNum\\\":0,\" +\n          \"\\\"TkStatus\\\":\\\"\u672a\u5f00\u59cb\\\",\\\"accounts\\\":[],\\\"ver\\\":0,\\\"InterfaceDBStatus\\\":{}}\" ;\n  \n  public blpopTest(){\n      rclient = getPool();\n  }\n  /**\n  - Create the test case\n    *\n  - @param testName name of the test case\n    */\n    public blpopTest(String testName)\n    {\n    super( testName );\n    }\n  \n  /**\n  - @return the suite of tests being tested\n    */\n    public static Test suite()\n    {\n    return new TestSuite( blpopTest.class );\n    }\n  \n  /**\n  - Rigourous Test :-)\n    */\n    public void testApp()\n    {\n    assertTrue( true );\n    }\n  \n  public static void main(String[] args) throws Exception {\n      try {\n\n//            RedisClient.INSTATNCE.initRandomMode(\"127.0.0.1@6380@foobared,127.0.0.1@6379\",9093);\n//            RedisClient.INSTATNCE.initRandomMode(\"127.0.0.1@6380@foobared\",9093);\n            new blpopTest();\n            while(true){\n                int ran = new Random().nextInt(1000);\n                rclient.getBlockingQueue(String.valueOf(ran)).add(value);\n                rclient.getBlockingQueue(String.valueOf(ran)).expire(1, TimeUnit.SECONDS);\n                rclient.getBlockingQueue(String.valueOf(ran)).poll(1, TimeUnit.SECONDS);\n            }\n\n```\n    }catch(Exception e){\n        e.printStackTrace();\n\n    }\n\n}\n\n\nprivate RedissonClient getPool(){\n    String password = \"foobared\";\n    String redis_ip =\"127.0.0.1\";\n    String redis_port=\"6380\";\n    Config config = new Config();\n\n    if(password!=null&&!password.isEmpty()){\n        config.useSingleServer().setAddress(redis_ip.concat(\":\").concat(String.valueOf(redis_port)))\n                .setPassword(password)\n                .setIdleConnectionTimeout(5000)\n                .setConnectionMinimumIdleSize(20)\n                .setTimeout(3000).setFailedAttempts(5)\n                .setRetryAttempts(5).setClientName(\"name\");\n\n    }else{\n        config.useSingleServer().setAddress(redis_ip.concat(\":\").concat(String.valueOf(redis_port)))\n                .setIdleConnectionTimeout(5000)\n                .setConnectionMinimumIdleSize(20)\n                .setTimeout(3000).setFailedAttempts(5)\n                .setClientName(\"name\");\n    }\n\n    rclient = Redisson.create(config);\n    return rclient;\n}\n```\n\n}\n", "url": "https://github.com/redisson/redisson/issues/487", "user": "lolandkidtress", "labels": ["bug"], "created": "2016-05-12 15:40:43", "closed": "2016-05-14 09:59:58", "commits": {"6dc2f148434363a983914f430584f7acd6c3e2f0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "6dc2f148434363a983914f430584f7acd6c3e2f0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["91e44ddf9b59e77ae8979622db095967701b751b", "1190af034998ce0dcb6c48807578c5da4c4b1469"], "nameRev": "6dc2f148434363a983914f430584f7acd6c3e2f0 tags/redisson-2.2.14~31^2", "commitMessage": "Merge pull request #488 from jackygurui/fix_issue_#487\n\nFix issue #487", "commitDateTime": "2016-05-12 17:21:25", "authoredDateTime": "2016-05-12 17:21:25", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/protocol/decoder/KeyValueObjectDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "KeyValueObjectDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.KeyValueObjectDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testSingleCharAsKeyName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Rlock performance issue", "body": "Hi\n\nI am using reddison Rlock with a cluster setup , and sometimes I see latency( up to 1000ms)  when trying to acquire the lock or unlock.\nI saw this issue opened by zhxjouc  (https://github.com/mrniko/redisson/issues/455) with a similar problem  and I am working with 2.2.13 but I am still getting latency when a thread is trying  lock a key.\nMy code is running with Java thread pool for accessing redis, I notice that if I work with pool of size 1-2\nalmost no latency when getting the lock, but working with 30-50 threads cause the lock delay.\nIt could be thread overhead issue but I think that 1000ms is too long for that.\nAny help on how can I get better performance when locking an unlocking?.\n\nThanks \n", "url": "https://github.com/redisson/redisson/issues/486", "user": "yuvalamar", "labels": ["bug"], "created": "2016-05-05 11:05:17", "closed": "2016-06-11 07:34:24", "commits": {"0227a0695d0c7ad75831e36f3c3beeeeb627cf6f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "0227a0695d0c7ad75831e36f3c3beeeeb627cf6f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["93574d4f6b883ca24a2cb5b4c4a79ef08611f789"], "nameRev": "0227a0695d0c7ad75831e36f3c3beeeeb627cf6f tags/redisson-2.2.16~18", "commitMessage": "Fixed dead lock during RLock, RSemaphore, RReadWriteLock, RCountDownLatch usage under heavy load. #491, #486, #455\n", "commitDateTime": "2016-06-09 13:09:57", "authoredDateTime": "2016-06-09 13:09:57", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 27, "deletions": 19, "lines": 46}, {"filePath": "src/main/java/org/redisson/pubsub/PublishSubscribe.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonLockHeavyTest.java", "insertions": 73, "deletions": 0, "lines": 73}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String).4.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection)", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribe.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.unsubscribe(org.redisson.PubSubEntry,java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonLockHeavyTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockHeavyTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RSetCache TTL doesnt readd after expiry via RSetCache.add", "body": "I have a problem with a RSetCache with TTL.   The problem seems to be that the value is not returned from the iterator and calling readAll throws an exception.\n\nRedisson : 2.2.12\nRedis : 3.0.7 (00000000/0) 64 bit\n\nI have attached a test which reproduces the issue.\n\n[RSetCacheTest.java.txt](https://github.com/mrniko/redisson/files/236919/RSetCacheTest.java.txt)\n\nWhen I run this, it keeps adding a string into the set and it should expire but be replaced quickly, this doesn't happen and the set is empty after the 30 seconds.\n\nCalling readAll() on the set it fails with the following error.\n\nERR Error running script (call to f_288eac369e58accf826304d109d8a5d7ac3e8343): @user_script:1: @user_script: 1: Wrong number of args calling Redis command From Lua script . channel: [id: 0x9894758e, L:/127.0.0.1:54251 - R:localhost/127.0.0.1:6379] command: CommandData [promise=ImmediateEventExecutor$ImmediatePromise@1e313298(incomplete), command=(EVAL), params=[local expireHead = redis.call('zrange', KEYS[2], 0, 0, 'withscores');local keys = redis.call('hkeys', KEYS[1]); if #keys == 0 then return {}; end; local maxDate = ARGV[1]; local minExpireDate = 92233720368547758;if #expireHead == 2 and tonumber(expireHead[2]) <= tonumber(maxDate) then for i = #keys, 1, -1 do local key = keys[i]; local expireDate = redis.call('zscore', KEYS[2], key); if expireDate ~= false and tonumber(expireDate) <= tonumber(maxDate) then minExpireDate = math.min(tonumber(expireDate), minExpireDate); table.remove(keys, i); end;end;end; return redis.call('hmget', KEYS[1], unpack(keys));, 2, testRSetCacheTTL, redisson__timeout__set__{testRSetCacheTTL}, 1461683799524], codec=org.redisson.codec.JsonJacksonCodec@2ff0a8a4]\n\nUsing : \n\n> hscan testRSetCacheTTL 0\n\nshows the value in the set while its running and after (when I disable the delete() call).\n\nAlso note that removing the delete() call seems to stop the exception from readAll().  So using readAll() with no delete() works or using delete() without the readAll().   But I have a feeling that it could be timing related.\n", "url": "https://github.com/redisson/redisson/issues/481", "user": "neilwightman", "labels": ["bug"], "created": "2016-04-26 15:29:44", "closed": "2016-04-27 08:54:51", "commits": {"5675806bfbf2443c7dca2eaf16725a2330fad588": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5675806bfbf2443c7dca2eaf16725a2330fad588", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["c9ac67ea7ecebc69128196ca746cd42d5f98a9b2"], "nameRev": "5675806bfbf2443c7dca2eaf16725a2330fad588 tags/redisson-2.2.13~12", "commitMessage": "Error in RSetCache.readAll fixed. Expiration override in RSetCache.add fixed. #481\n", "commitDateTime": "2016-04-26 20:35:44", "authoredDateTime": "2016-04-26 20:35:44", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonSetCache.java", "insertions": 11, "deletions": 8, "lines": 19}, {"filePath": "src/test/java/org/redisson/RedissonSetCacheTest.java", "insertions": 18, "deletions": 0, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSetCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCache.readAllAsync()", "TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCache.addAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddOverrideExpiration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testReadAllExpired()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5675806bfbf2443c7dca2eaf16725a2330fad588"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 8, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 6, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSetCache.addAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonSetCache.readAllAsync()"]}, {"title": "A bug about RScoredSortedSet#revRank method ", "body": "```\npublic static void main(String[] args) {\n    Config config = new Config();\n\n    config.setCodec(new JsonJacksonCodec());\n            config.useSingleServer().setAddress(\"127.0.0.1:6379\");\n\n            RedissonClient redisson = Redisson.create(config);\n            RScoredSortedSet<Integer> set = redisson.getScoredSortedSet(\"test\");\n            set.add(1.0, 4);\n\n            Integer rank = set.revRank(4); // no problem \n            System.out.println(rank);\n            Integer rank1 = set.revRank(1); // throw java.lang.NullPointerException, I think rank1 should be null and not throw Exception \n            System.out.println(rank1 == null);\n\n            redisson.shutdown();\n}\n```\n", "url": "https://github.com/redisson/redisson/issues/478", "user": "damacheng009", "labels": ["bug"], "created": "2016-04-21 06:44:25", "closed": "2016-04-21 15:24:08", "commits": {"f14b794391dd7d14de09945e9a458580a3c96bd5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f14b794391dd7d14de09945e9a458580a3c96bd5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["bafeb5ab11a7b54b0670df2896bff8e6f158248e"], "nameRev": "f14b794391dd7d14de09945e9a458580a3c96bd5 tags/redisson-2.2.12~5", "commitMessage": "RScoredSortedSet rank NPE fixed.  #478\n", "commitDateTime": "2016-04-21 18:23:41", "authoredDateTime": "2016-04-21 18:23:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/core/RLexSortedSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/core/RScoredSortedSet.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "src/test/java/org/redisson/RedissonScoredSortedSetTest.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.rank(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.revRank(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RLexSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.core.rank(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.core.rank(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.core.revRank(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScoredSortedSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSetTest.testRevRank()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSetTest.testRank()", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f14b794391dd7d14de09945e9a458580a3c96bd5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 5, "lines": 22, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/core", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonScoredSortedSet.rank(java.lang.Object)", "org.redisson.core.rank(java.lang.Object)", "org.redisson.RedissonScoredSortedSet.revRank(java.lang.Object)", "org.redisson.core.rank(java.lang.String)", "org.redisson.core.revRank(java.lang.Object)"]}, {"title": "Redisson fails to recognize slave that become a master due to master down in Redis Cluster", "body": "Hi Niko, seems like problem really exists with redisson driver for cluster.\n\nHere is our configuration:\n`aa19c3c2a927384b6a4673539cd7dcdb2efa33e8 10.20.21.113:7001 slave d20242223349a4d51b30da40dad09f0dbc9a2cc8 0 1461081575219 1 connected\nd20242223349a4d51b30da40dad09f0dbc9a2cc8 10.20.21.44:7000 myself,master - 0 0 1 connected 0-5461\nba12c571516b130a9973fdc95ba8cebbfaf5ac7e 10.20.21.113:7000 master - 0 1461081576222 3 connected 5462-10922\n4a21be5ffb25369bf4243918c34467103fa9c8a4 10.20.21.59:7001 slave ba12c571516b130a9973fdc95ba8cebbfaf5ac7e 0 1461081577222 3 connected\nf6b4e5a94409ca397731165acad90f2193154c62 10.20.21.59:7000 master - 0 1461081576422 0 connected 10923-16383\n6a7c1e8510d29aed17dc1e0ca7f0e6a7278b4de5 10.20.21.44:7001 slave f6b4e5a94409ca397731165acad90f2193154c62 0 1461081576721 5 connected`\n\nI'm shutting down Redis instances on 10.20.21.113:  `ba12c571516b130a9973fdc95ba8cebbfaf5ac7e` and `aa19c3c2a927384b6a4673539cd7dcdb2efa33e8`\n\nWhen I did this Redis cluster reorganized to following:\n`aa19c3c2a927384b6a4673539cd7dcdb2efa33e8 10.20.21.113:7001 slave,fail d20242223349a4d51b30da40dad09f0dbc9a2cc8 1461081896304 1461081894700 1 disconnected\nd20242223349a4d51b30da40dad09f0dbc9a2cc8 10.20.21.44:7000 myself,master - 0 0 1 connected 0-5461\nba12c571516b130a9973fdc95ba8cebbfaf5ac7e 10.20.21.113:7000 master,fail - 1461081896204 1461081895202 3 disconnected\n4a21be5ffb25369bf4243918c34467103fa9c8a4 10.20.21.59:7001 master - 0 1461081995791 6 connected 5462-10922\nf6b4e5a94409ca397731165acad90f2193154c62 10.20.21.59:7000 master - 0 1461081994787 0 connected 10923-16383\n6a7c1e8510d29aed17dc1e0ca7f0e6a7278b4de5 10.20.21.44:7001 slave f6b4e5a94409ca397731165acad90f2193154c62 0 1461081996293 5 connected\n`\n\nAs you can see cluster is ok, but requests are failing for some reason.\nIf I restart tomcat without touching anything on Redis requests are not failing.\nVery strange.\n\nThis is the link to the redisson log: [https://www.dropbox.com/s/pluyzxtxpd0u23z/redisson.log?dl=0](url)\n\nPlease assist,\nThank you!\n", "url": "https://github.com/redisson/redisson/issues/476", "user": "ybonda", "labels": ["bug"], "created": "2016-04-19 16:30:50", "closed": "2016-04-21 13:48:29", "commits": {"13664c3153300054855a52d80b8899f3c3745b79": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "16c5df230f79a4f018d060933d0630a04698f601": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "13664c3153300054855a52d80b8899f3c3745b79", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fca186befb1946beae3d9a2d326863453b2ab91c"], "nameRev": "13664c3153300054855a52d80b8899f3c3745b79 tags/redisson-2.2.12~11", "commitMessage": "Fixed cluster initialization. #476\n", "commitDateTime": "2016-04-20 11:23:24", "authoredDateTime": "2016-04-20 11:23:24", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 17, "deletions": 4, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 6, "UPD": 2, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "16c5df230f79a4f018d060933d0630a04698f601", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["13664c3153300054855a52d80b8899f3c3745b79"], "nameRev": "16c5df230f79a4f018d060933d0630a04698f601 tags/redisson-2.2.12~10", "commitMessage": "Fixed - cluster state update manager can't try next node if current node fails. #476\n", "commitDateTime": "2016-04-21 13:25:43", "authoredDateTime": "2016-04-21 13:25:43", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 33, "deletions": 22, "lines": 55}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "src/main/java/org/redisson/connection/balancer/LoadBalancerManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/balancer/LoadBalancerManagerImpl.java", "insertions": 10, "deletions": 7, "lines": 17}, {"filePath": "src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.toString()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.ClusterServersConfig,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.close(org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.ClusterServersConfig,java.util.Iterator)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.ClusterServersConfig,java.util.Iterator).3.run()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.ClusterServersConfig).3.run()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.freeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManagerImpl.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManagerImpl.freeze(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManagerImpl.freeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get()", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["13664c3153300054855a52d80b8899f3c3745b79", "16c5df230f79a4f018d060933d0630a04698f601"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 86, "deletions": 39, "lines": 125, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 60, "UPD": 8, "INS": 29, "MOV": 21, "DEL": 2, "spoonFilesChanged": 6, "spoonMethodsChanged": 22}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/cluster", "src/main/java/org/redisson/connection", "src/main/java/org/redisson/connection/pool", "src/main/java/org/redisson/connection/balancer", "src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager", "org.redisson.connection.balancer.LoadBalancerManagerImpl.freeze(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.ClusterServersConfig,org.redisson.client.RedisConnection)", "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.ClusterServersConfig,java.util.Iterator)", "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(java.util.Collection)", "org.redisson.client.RedisConnection.toString()", "org.redisson.connection.balancer.LoadBalancerManagerImpl.freeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.connection.balancer.freeze(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.cluster.ClusterConnectionManager.close(org.redisson.client.RedisConnection)", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig).2.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.ClusterServersConfig,java.util.Iterator).3.run()", "org.redisson.cluster.ClusterConnectionManager.scheduleClusterChangeCheck(org.redisson.ClusterServersConfig).3.run()", "org.redisson.cluster.ClusterConnectionManager.updateClusterState(org.redisson.ClusterServersConfig,org.redisson.client.RedisConnection,java.util.Iterator)", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.pool.ConnectionPool.get()", "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ClientConnectionsEntry.FreezeReason)", "org.redisson.cluster.ClusterConnectionManager.checkClusterState(org.redisson.ClusterServersConfig,java.util.Iterator,java.util.concurrent.atomic.AtomicReference)", "org.redisson.connection.MasterSlaveEntry.slaveDown(org.redisson.connection.ClientConnectionsEntry,org.redisson.connection.ClientConnectionsEntry.FreezeReason)"]}, {"title": "Master change in cluster mode causes an unneccesary slots migration.", "body": "", "url": "https://github.com/redisson/redisson/issues/475", "user": "mrniko", "labels": ["bug"], "created": "2016-04-18 10:14:45", "closed": "2016-04-18 10:16:34", "commits": {"3a848c0c1d28df9d6c112a9348201b70cfc34cd5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3a848c0c1d28df9d6c112a9348201b70cfc34cd5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0d59eaea3c15d1ecdf1f23ea8a75f4d755c300b6"], "nameRev": "3a848c0c1d28df9d6c112a9348201b70cfc34cd5 tags/redisson-2.2.12~15", "commitMessage": "Fixed unnecessary slots migration in cluster mode. #475\n", "commitDateTime": "2016-04-18 13:16:12", "authoredDateTime": "2016-04-18 13:16:12", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "src/main/java/org/redisson/cluster/ClusterPartition.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsMigration(java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClusterPartition.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterPartition.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3a848c0c1d28df9d6c112a9348201b70cfc34cd5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 2, "lines": 13, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterPartition.toString()", "org.redisson.cluster.ClusterConnectionManager.checkSlotsMigration(java.util.Collection)"]}, {"title": "RMapCache.values() fails", "body": "I recently change some code to use maxIdle timeouts on a map.  I.e changed from RMap to RMapCache.   Put and gets are working as expected but the .values() call doesnt work.\n\nERR Error running script (call to f_7e9dc69eeb0d7798de8f6a1bb0f5a10381585c62): @user_script:1: @user_script: 1: Write commands not allowed after non deterministic commands . channel: [id: 0x52db1332, L:/127.0.0.1:37320 - R:localhost/127.0.0.1:6379] command: CommandData [promise=ImmediateEventExecutor$ImmediatePromise@5ba21282(incomplete), command=(EVAL), params=[local result = {}; local res = redis.call('hscan', KEYS[1], ARGV[2]); for i, value in ipairs(res[2]) do if i % 2 == 0 then local key = res[2][i-1]; local expireDate = 92233720368547758; local expireDateScore = redis.call('zscore', KEYS[2], key); if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end; local t, val = struct.unpack('dLc0', value); if t ~= 0 then local expireIdle = redis.call('zscore', KEYS[3], key); if expireIdle ~= false then if tonumber(expireIdle) > tonumber(ARGV[1]) then local value = struct.pack('dLc0', t, string.len(val), val); redis.call('hset', KEYS[1], key, value); redis.call('zadd', KEYS[3], t + tonumber(ARGV[1]), key); end; expireDate = math.min(expireDate, tonumber(expireIdle)) end; end; if expireDate > tonumber(ARGV[1]) then table.insert(result, key); table.insert(result, val); end; end; end;return {res[1], result};, 3, testRMapCacheValues, redisson__timeout__set__{testRMapCacheValues}, redisson__idle__set__{testRMapCacheValues}, 1460720927535, 0], codec=org.redisson.client.codec.ScanCodec@6d6d43cd]\n\nI have attached a test class to show this.\n", "url": "https://github.com/redisson/redisson/issues/471", "user": "neilwightman", "labels": ["bug"], "created": "2016-04-15 12:51:03", "closed": "2016-04-19 13:41:29", "commits": {"cb2a6e9736deadbba084310d0f68ded87fc2036d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "904d58d8e94814c5271ef74dac9e7a1bc925557a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "cb2a6e9736deadbba084310d0f68ded87fc2036d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4f8663f21ac0a3c2fa87280bdc5c914f6c6ee3f9", "64cf095553eb49b7a40b696aa80fdb9e3bfd7d9a"], "nameRev": "cb2a6e9736deadbba084310d0f68ded87fc2036d tags/redisson-2.2.12~18", "commitMessage": "Merge pull request #472 from jackygurui/patch-1\n\nTest case added for #471", "commitDateTime": "2016-04-15 17:11:51", "authoredDateTime": "2016-04-15 17:11:51", "commitGitStats": [{"filePath": "src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRMapCacheValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRMapCacheAllValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "904d58d8e94814c5271ef74dac9e7a1bc925557a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3a848c0c1d28df9d6c112a9348201b70cfc34cd5"], "nameRev": "904d58d8e94814c5271ef74dac9e7a1bc925557a tags/redisson-2.2.12~14", "commitMessage": "RMapCache iterator fixed. readAll methods fixed.  #471\n", "commitDateTime": "2016-04-19 11:54:36", "authoredDateTime": "2016-04-19 11:54:36", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonMapCache.java", "insertions": 135, "deletions": 18, "lines": 153}, {"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/ListMultiDecoder.java", "insertions": 115, "deletions": 0, "lines": 115}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/LongMultiDecoder.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/MapCacheScanResult.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/MapCacheScanResultReplayDecoder.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/ObjectListDecoder.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/ObjectMapDecoder.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 28, "deletions": 50, "lines": 78}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.scanIterator(java.net.InetSocketAddress,long)", "TOT": 13, "UPD": 5, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCache.getAllAsync(java.util.Set)", "TOT": 9, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMapCache.readAllEntrySetAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.readAllValuesAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeMulti(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ListMultiDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ListMultiDecoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LongMultiDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.LongMultiDecoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapCacheScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.MapCacheScanResult", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapCacheScanResultReplayDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.MapCacheScanResultReplayDecoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ObjectListDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ObjectListDecoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ObjectMapDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ObjectMapDecoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testRMapCacheAllValues()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testEntrySet()", "TOT": 22, "UPD": 5, "INS": 1, "MOV": 15, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testPutAll()", "TOT": 11, "UPD": 1, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testCacheValues()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testReadAllEntrySet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testGetAll()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["904d58d8e94814c5271ef74dac9e7a1bc925557a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 495, "deletions": 23, "lines": 518, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 39, "UPD": 16, "INS": 15, "MOV": 5, "DEL": 3, "spoonFilesChanged": 9, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/protocol/decoder", "src/main/java/org/redisson/client/handler", "src/main/java/org/redisson", "src/main/java/org/redisson/client/protocol"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decodeFromCheckpoint(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.CommandData)", "org.redisson.client.protocol.decoder.ListMultiDecoder", "org.redisson.client.protocol.decoder.MapCacheScanResultReplayDecoder", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "org.redisson.client.protocol.decoder.LongMultiDecoder", "org.redisson.RedissonMapCache.scanIterator(java.net.InetSocketAddress,long)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.client.protocol.decoder.ObjectListDecoder", "org.redisson.client.protocol.decoder.MapCacheScanResult", "org.redisson.client.protocol.decoder.ObjectMapDecoder", "org.redisson.RedissonMapCache.readAllEntrySetAsync()", "org.redisson.RedissonMapCache.getAllAsync(java.util.Set)", "org.redisson.RedissonMapCache.readAllValuesAsync()", "org.redisson.client.protocol", "org.redisson.client.handler.CommandDecoder.decodeMulti(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,long,java.util.List)", "org.redisson.RedissonMapCache"]}, {"title": "IllegalStateException while iterating over RMapCache using an iterator", "body": "While iterating over an RMapCache object with an iterator, an \"IllegalStateException\" occurs  on the second removal of an entry from the map.\nThe map structure is RMapCache<String, List<Object>>.\nThe iterator is received via cacheMap.entrySet().iterator().\nThe iterator removes successfully the first entry, but upon the second entry removal it fails with the exception mentioned above.\nPlease note this code used to work fine with a regular Java Map.\nHere is the code:\n    `   \n\n```\nprivate long clearExpiredItems(RMapCache<String, List<ItemInfo>> mapCache) {\n    long maximalExpirationTime = 0;\n    Iterator<Entry<String, List<ItemInfo>>> mapCacheIterator = mapCache.entrySet().iterator();\n    while (mapCacheIterator.hasNext()) {\n        Entry<String, List<ItemInfo>> userMapCacheEntry = mapCacheIterator.next();\n        List<ItemInfo> userMapCache = userMapCacheEntry.getValue();\n        for (Iterator<ItemInfo> iterator = userMapCache.iterator(); iterator.hasNext();) {\n            ItemInfo itemInfo = iterator.next();\n            long tempMaximalExpirationTime = itemInfo.getExpirationTime();\n            if (itemInfo.getExpirationTime() < System.currentTimeMillis() / 1000) {\n                tempMaximalExpirationTime = 0;\n                iterator.remove();\n            }\n            maximalExpirationTime = tempMaximalExpirationTime > maximalExpirationTime ? tempMaximalExpirationTime : maximalExpirationTime;\n        }\n        if (userMapCache.isEmpty()) {\n            mapCacheIterator.remove();\n        }\n    }\n    return maximalExpirationTime;\n}`\n```\n\nAnd here is the relevant stack trace:\n\n> java.lang.IllegalStateException\n>     at java.util.HashMap$HashIterator.remove(HashMap.java:1441) ~[?:1.8.0_40]\n>     at org.redisson.RedissonBaseMapIterator.remove(RedissonBaseMapIterator.java:117) ~[redisson-2.2.10.jar:?]\n>     at org.redisson.RedissonMapIterator.remove(RedissonMapIterator.java:23) ~[redisson-2.2.10.jar:?]\n", "url": "https://github.com/redisson/redisson/issues/468", "user": "nel10000", "labels": ["bug"], "created": "2016-04-11 07:15:32", "closed": "2016-04-12 17:20:33", "commits": {"9bd6a0387bf633b3cc25ceac4f5a8a48e6f96bc2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "9bd6a0387bf633b3cc25ceac4f5a8a48e6f96bc2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d03e0de847f0d5cac23cf3b916164cf74d77b51c"], "nameRev": "9bd6a0387bf633b3cc25ceac4f5a8a48e6f96bc2 tags/redisson-2.2.12~28", "commitMessage": "RMap iterator fixed.  #468\n", "commitDateTime": "2016-04-11 14:22:48", "authoredDateTime": "2016-04-11 14:22:48", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonBaseMapIterator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonMapCacheTest.java", "insertions": 44, "deletions": 0, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBaseMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseMapIterator.hasNext()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCacheTest.testIteratorRemoveHighVolume()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCacheTest.testIteratorRandomRemoveHighVolume()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9bd6a0387bf633b3cc25ceac4f5a8a48e6f96bc2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBaseMapIterator.hasNext()"]}, {"title": "Deadlock using RedissonMultiLock", "body": "I am using simple app to run on 2 clients to test locks.\nWhile using RedissonMultiLock with 3 locks both clients blocks.\n\n```\npublic class App \n{\n    public static void main( String[] args )\n    {\n        Config config = new Config();\n        config.useSingleServer().setAddress(\"127.0.0.1:6379\");\n        RedissonClient client = Redisson.create(config);\n\n        for(int i = 0; i < 100000; i++)\n        {\n            RLock lock1 = client.getLock(\"lock1\");\n            RLock lock2 = client.getLock(\"lock2\");\n            RLock lock3 = client.getLock(\"lock3\");\n\n            RedissonMultiLock lock = new RedissonMultiLock(lock1, lock2, lock3);\n            lock.lock();\n\n             RBucket<Object> bucket = client.getBucket(\"myLong\");\n             Object value = bucket.get();\n             long newValue = 1;\n             if(value != null){\n                 newValue = (Long)value;\n                 newValue++;\n             }\n             bucket.set(newValue);\n\n            lock.unlock();\n        }\n        System.exit(0);\n    }\n}\n```\n", "url": "https://github.com/redisson/redisson/issues/467", "user": "anoiio", "labels": ["bug"], "created": "2016-04-10 14:05:21", "closed": "2016-04-15 18:39:02", "commits": {"5274e762b59811997147b3b42a11fb20418c1306": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "5274e762b59811997147b3b42a11fb20418c1306", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["11eaf5d62e7996de8a26d1326c2fbb166d75c19f"], "nameRev": "5274e762b59811997147b3b42a11fb20418c1306 tags/redisson-2.2.12~24", "commitMessage": "RedissonMultiLock deadlock fixed. #467\n", "commitDateTime": "2016-04-13 14:40:37", "authoredDateTime": "2016-04-13 14:40:37", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 24, "deletions": 5, "lines": 29}, {"filePath": "src/main/java/org/redisson/core/RedissonMultiLock.java", "insertions": 51, "deletions": 34, "lines": 85}, {"filePath": "src/test/java/org/redisson/RedissonMultiLockTest.java", "insertions": 35, "deletions": 0, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.unlockAsync().4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.unlockAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.lockAsync(long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.unlockAsync(long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.lockAsync(long,java.util.concurrent.TimeUnit,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.unlockAsync(long).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultiLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit)", "TOT": 13, "UPD": 1, "INS": 0, "MOV": 9, "DEL": 3}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit).1", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 28, "UPD": 7, "INS": 0, "MOV": 17, "DEL": 4}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long).1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultiLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultiLockTest.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultiLockTest.test().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultiLockTest.test().1.run()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultiLockTest.testMultiThreads()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5274e762b59811997147b3b42a11fb20418c1306"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 75, "deletions": 39, "lines": 114, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 85, "UPD": 12, "INS": 35, "MOV": 30, "DEL": 8, "spoonFilesChanged": 2, "spoonMethodsChanged": 20}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/core", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.unlockAsync().4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.lockAsync(long,java.util.concurrent.TimeUnit,long)", "org.redisson.core.RedissonMultiLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.unlockAsync(long)", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonLock.tryLockAsync()", "org.redisson.RedissonLock.unlockAsync(long).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonLock.tryLockAsync(long)", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit).1", "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit,long)", "org.redisson.RedissonLock.unlockAsync()", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long).1", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.core.RedissonMultiLock.lock(io.netty.util.concurrent.Promise,long,long,java.util.concurrent.TimeUnit,java.util.List,long)", "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonLock.lockAsync(long,java.util.concurrent.TimeUnit)"]}, {"title": "wrong SCAN commands handling, affects Iterator objects", "body": "", "url": "https://github.com/redisson/redisson/issues/463", "user": "mrniko", "labels": ["bug"], "created": "2016-04-01 15:30:23", "closed": "2016-04-04 08:57:46", "commits": {"7c4deafc7484bb8e84b4e69c04aef842814e7049": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "5170ba8cc766b5822b22e28b4c10ce0cd84e1cb8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "7c4deafc7484bb8e84b4e69c04aef842814e7049", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["22a3dd2a09c731f54484ad47da2292aa3cc4d6d3"], "nameRev": "7c4deafc7484bb8e84b4e69c04aef842814e7049 tags/redisson-2.2.11~3", "commitMessage": "SCAN commands result handling fixed. #463\n", "commitDateTime": "2016-04-04 11:56:10", "authoredDateTime": "2016-04-04 11:56:10", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonBaseIterator.java", "insertions": 96, "deletions": 0, "lines": 96}, {"filePath": "src/main/java/org/redisson/RedissonBaseMapIterator.java", "insertions": 39, "deletions": 19, "lines": 58}, {"filePath": "src/main/java/org/redisson/RedissonKeys.java", "insertions": 7, "deletions": 44, "lines": 51}, {"filePath": "src/main/java/org/redisson/RedissonMapIterator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/RedissonMultiMapKeysIterator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 5, "deletions": 42, "lines": 47}, {"filePath": "src/main/java/org/redisson/RedissonSet.java", "insertions": 5, "deletions": 53, "lines": 58}, {"filePath": "src/main/java/org/redisson/RedissonSetCache.java", "insertions": 5, "deletions": 53, "lines": 58}, {"filePath": "src/main/java/org/redisson/RedissonSetMultimapValues.java", "insertions": 5, "deletions": 54, "lines": 59}, {"filePath": "src/test/java/org/redisson/RedissonMapTest.java", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBaseIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseIterator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBaseMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBaseMapIterator", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.next()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.hasNext()", "TOT": 12, "UPD": 2, "INS": 2, "MOV": 7, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBaseMapIterator.remove()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2.hasNext()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 5}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2.remove()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 7}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2.remove(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapIterator.iterator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultiMapKeysIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultiMapKeysIterator.iterator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.hasNext()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 6}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.remove()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.iterator(java.net.InetSocketAddress,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.remove(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSet.iterator()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1.hasNext()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 7}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1.remove()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 6}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1.remove(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCache.iterator()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator().1.hasNext()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator().1", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 7}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator().1.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator().1.remove()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 6}, {"spoonMethodName": "org.redisson.RedissonSetCache.iterator().1.remove(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapValues.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator().1.hasNext()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator().1", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 7}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator().1.next()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator().1.remove()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 6}, {"spoonMethodName": "org.redisson.RedissonSetMultimapValues.iterator().1.remove(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapTest.testIteratorRemoveHighVolume()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5170ba8cc766b5822b22e28b4c10ce0cd84e1cb8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1b225d68fd439100b9b39365fe08b8aed823dd07"], "nameRev": "5170ba8cc766b5822b22e28b4c10ce0cd84e1cb8 tags/redisson-2.2.11~1", "commitMessage": "ReactiveSet iterator fixed. #463\n", "commitDateTime": "2016-04-04 15:12:32", "authoredDateTime": "2016-04-04 15:12:32", "commitGitStats": [{"filePath": "src/main/java/org/redisson/reactive/PublisherAdder.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "src/main/java/org/redisson/reactive/SetReactiveIterator.java", "insertions": 5, "deletions": 26, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PublisherAdder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1.onComplete()", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1.onNext(java.lang.Object).1.onComplete()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1.onNext(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1.onNext(java.lang.Object).1.onNext(java.lang.Long)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "SetReactiveIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber).1.doRequest(long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber).1", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber).1.nextValues()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber).1.handle(java.util.List)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7c4deafc7484bb8e84b4e69c04aef842814e7049", "5170ba8cc766b5822b22e28b4c10ce0cd84e1cb8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 179, "deletions": 301, "lines": 480, "gitFilesChange": 11}, "spoonStatsSummary": {"TOT": 168, "UPD": 31, "INS": 30, "MOV": 27, "DEL": 80, "spoonFilesChanged": 11, "spoonMethodsChanged": 48}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson", "src/main/java/org/redisson/reactive"], "changesInPackagesSPOON": ["org.redisson.RedissonSet.iterator()", "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2.hasNext()", "org.redisson.RedissonMultiMapKeysIterator.iterator()", "org.redisson.RedissonBaseMapIterator.next()", "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2.remove()", "org.redisson.RedissonBaseMapIterator", "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1", "org.redisson.RedissonSetMultimapValues.iterator().1", "org.redisson.RedissonSetCache.iterator().1.remove(java.lang.Object)", "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1.onComplete()", "org.redisson.RedissonScoredSortedSet.iterator().1.iterator(java.net.InetSocketAddress,long)", "org.redisson.RedissonSet.iterator().1.remove()", "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2.next()", "org.redisson.RedissonBaseIterator", "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2.remove(java.lang.String)", "org.redisson.RedissonSet.iterator().1.hasNext()", "org.redisson.RedissonSetMultimapValues.iterator().1.hasNext()", "org.redisson.RedissonSetMultimapValues.iterator().1.next()", "org.redisson.RedissonScoredSortedSet.iterator().1.remove(java.lang.Object)", "org.redisson.RedissonScoredSortedSet.iterator().1.remove()", "org.redisson.RedissonScoredSortedSet.iterator()", "org.redisson.RedissonSetCache.iterator().1.next()", "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber)", "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber).1.handle(java.util.List)", "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber).1.doRequest(long)", "org.redisson.RedissonSet.iterator().1.next()", "org.redisson.RedissonSetCache.iterator().1.hasNext()", "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).2", "org.redisson.RedissonSetCache.iterator().1.remove()", "org.redisson.RedissonScoredSortedSet.iterator().1", "org.redisson.RedissonScoredSortedSet.iterator().1.next()", "org.redisson.RedissonSetMultimapValues.iterator()", "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1.onNext(java.lang.Object).1.onComplete()", "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber).1.nextValues()", "org.redisson.RedissonSetMultimapValues.iterator().1.remove()", "org.redisson.RedissonScoredSortedSet.iterator().1.hasNext()", "org.redisson.RedissonSetCache.iterator()", "org.redisson.RedissonBaseMapIterator.remove()", "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1.onNext(java.lang.Object)", "org.redisson.RedissonSet.iterator().1", "org.redisson.reactive.SetReactiveIterator.subscribe(org.reactivestreams.Subscriber).1", "org.redisson.RedissonSetCache.iterator().1", "org.redisson.RedissonMapIterator.iterator()", "org.redisson.RedissonSet.iterator().1.remove(java.lang.Object)", "org.redisson.reactive.PublisherAdder.addAll(org.reactivestreams.Publisher).1.onNext(java.lang.Object).1.onNext(java.lang.Long)", "org.redisson.RedissonBaseMapIterator.hasNext()", "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String)", "org.redisson.RedissonSetMultimapValues.iterator().1.remove(java.lang.Object)"]}, {"title": "Long latency issue while call Redis.", "body": "I use Redisson 2.2.10 to implement distributed lock in my project. And then I run load test for this distributed lock using SINGLE redis mode. But I found there are many long latency APIs and it's wired that almost all the long latency APIs are a little greater than 1000ms. The average latency and 99 percent latecy is about 15ms and 30ms respectively. And then I used `jstack` to get the call stack and found most of the threads are WAITING at the same place just as the following\n\n```\n\"Processor-35\" prio=10 tid=0x00007f61900e3800 nid=0x2614 in Object.wait() [0x00007f61027e5000]\n java.lang.Thread.State: WAITING (on object monitor)\n       at java.lang.Object.wait(Native Method)\n       at java.lang.Object.wait(Object.java:503)\n       at io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:286)\n       - locked <0x0000000600aa3e50> (a io.netty.util.concurrent.DefaultPromise)\n       at io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:32)\n       at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:84)\n       at org.redisson.RedissonObject.get(RedissonObject.java:49)\n       at org.redisson.RedissonLock.tryAcquire(RedissonLock.java:139)\n       at org.redisson.RedissonLock.tryLock(RedissonLock.java:225)\n       at com.mytest.lock.impl.redis.BaseRedisLockClientImpl.tryLock(BaseRedisLockClientImpl.java:72)\n```\n\nMeanwhile, during the test, I dumped the network packages using `tcpdump` and found that it took about 1000ms before the first package was sent to Redis. And in Redis server, I didn't find any slow query whose latency is more than 10ms. So I think, for the long latency API, most of the time might be cost in the project not the network. So can you help me to have a check or give me some suggestion about this issue?  Many thanks.\n", "url": "https://github.com/redisson/redisson/issues/455", "user": "zhxjouc", "labels": ["bug"], "created": "2016-03-29 08:42:29", "closed": "2016-06-11 07:34:29", "commits": {"d03e0de847f0d5cac23cf3b916164cf74d77b51c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "0227a0695d0c7ad75831e36f3c3beeeeb627cf6f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 73.00027777777778, "commitsDetails": [{"commitHash": "d03e0de847f0d5cac23cf3b916164cf74d77b51c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["33748b86509ff627be18ef0b62123190cdd202b4"], "nameRev": "d03e0de847f0d5cac23cf3b916164cf74d77b51c tags/redisson-2.2.12~29", "commitMessage": "Fixed probably thread blocking issues #455\n", "commitDateTime": "2016-04-08 12:02:19", "authoredDateTime": "2016-04-08 12:02:19", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonCountDownLatch.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/RedissonObject.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "src/main/java/org/redisson/RedissonSemaphore.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 27, "deletions": 13, "lines": 40}, {"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "src/main/java/org/redisson/client/handler/CommandsQueue.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/command/CommandAsyncExecutor.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 28, "deletions": 1, "lines": 29}, {"filePath": "src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCountDownLatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCountDownLatch.await()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonCountDownLatch.await(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonObject.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonObject.await(io.netty.util.concurrent.Future,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSemaphore.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSemaphore.acquire(int)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSemaphore.tryAcquire(int,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.await(io.netty.util.concurrent.Future)", "TOT": 18, "UPD": 9, "INS": 3, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "CommandsQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandsQueue", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.await(io.netty.util.concurrent.Future,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.get(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[]).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[]).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer).9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer).11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer).12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.checkConnectionFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails).13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.releaseConnection(org.redisson.connection.NodeSource,io.netty.util.concurrent.Future,boolean,io.netty.util.concurrent.Promise,org.redisson.command.AsyncDetails).14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer).10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[]).4.setSuccess(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[]).4.setFailure(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.checkConnectionFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails).13.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.releaseConnection(org.redisson.connection.NodeSource,io.netty.util.concurrent.Future,boolean,io.netty.util.concurrent.Promise,org.redisson.command.AsyncDetails).14.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1.setSuccess(java.lang.Object)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.await(io.netty.util.concurrent.Future,long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]).5.setSuccess(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]).3.setFailure(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]).3.setSuccess(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1.setFailure(java.lang.Throwable)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0227a0695d0c7ad75831e36f3c3beeeeb627cf6f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["93574d4f6b883ca24a2cb5b4c4a79ef08611f789"], "nameRev": "0227a0695d0c7ad75831e36f3c3beeeeb627cf6f tags/redisson-2.2.16~18", "commitMessage": "Fixed dead lock during RLock, RSemaphore, RReadWriteLock, RCountDownLatch usage under heavy load. #491, #486, #455\n", "commitDateTime": "2016-06-09 13:09:57", "authoredDateTime": "2016-06-09 13:09:57", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 27, "deletions": 19, "lines": 46}, {"filePath": "src/main/java/org/redisson/pubsub/PublishSubscribe.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonLockHeavyTest.java", "insertions": 73, "deletions": 0, "lines": 73}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String).4.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection)", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.reattachPubSubListeners(java.lang.String,java.util.Collection).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PublishSubscribe.java", "spoonMethods": [{"spoonMethodName": "org.redisson.pubsub.PublishSubscribe.unsubscribe(org.redisson.PubSubEntry,java.lang.String,java.lang.String,org.redisson.connection.ConnectionManager)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonLockHeavyTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockHeavyTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d03e0de847f0d5cac23cf3b916164cf74d77b51c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 76, "deletions": 28, "lines": 104, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 82, "UPD": 48, "INS": 15, "MOV": 12, "DEL": 7, "spoonFilesChanged": 10, "spoonMethodsChanged": 45}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson", "src/main/java/org/redisson/client/handler", "src/main/java/org/redisson/client", "src/main/java/org/redisson/command", "src/main/java/org/redisson/connection/pool"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[]).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonSemaphore.tryAcquire(int,long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.checkConnectionFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails).13", "org.redisson.command.CommandAsyncService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]).3.setFailure(java.lang.Throwable)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5", "org.redisson.command.CommandAsyncService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[]).2", "org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1.setFailure(java.lang.Throwable)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "org.redisson.command.CommandAsyncService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]).3", "org.redisson.RedissonCountDownLatch.await()", "org.redisson.command.await(io.netty.util.concurrent.Future,long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1", "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer).10", "org.redisson.command.CommandAsyncService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1.setSuccess(java.lang.Object)", "org.redisson.RedissonObject.await(io.netty.util.concurrent.Future,long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[]).4", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6", "org.redisson.command.CommandAsyncService.checkConnectionFuture(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails).13.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.RedissonSemaphore.acquire(int)", "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer)", "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer).9", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7", "org.redisson.command.CommandAsyncService.releaseConnection(org.redisson.connection.NodeSource,io.netty.util.concurrent.Future,boolean,io.netty.util.concurrent.Promise,org.redisson.command.AsyncDetails).14.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.pool.ConnectionPool.get()", "org.redisson.RedissonLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer).11", "org.redisson.command.CommandAsyncService.handleBlockingOperations(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection,java.lang.Integer).12", "org.redisson.command.CommandAsyncService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]).5.setSuccess(java.lang.Object)", "org.redisson.command.CommandAsyncService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[]).3.setSuccess(java.lang.Object)", "org.redisson.client.RedisConnection.await(io.netty.util.concurrent.Future)", "org.redisson.command.CommandAsyncService.releaseConnection(org.redisson.connection.NodeSource,io.netty.util.concurrent.Future,boolean,io.netty.util.concurrent.Promise,org.redisson.command.AsyncDetails).14", "org.redisson.command.CommandAsyncService.await(io.netty.util.concurrent.Future,long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[]).4.setFailure(java.lang.Throwable)", "org.redisson.RedissonCountDownLatch.await(long,java.util.concurrent.TimeUnit)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.client.handler.CommandsQueue", "org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection).8", "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).1", "org.redisson.command.CommandAsyncService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[]).4.setSuccess(java.lang.Object)", "org.redisson.command.CommandAsyncService.get(io.netty.util.concurrent.Future)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[]).2"]}, {"title": "RSetCache not checking expiration", "body": "From gitter:\nI just want to confirm but redisson.getSetCache would be appropriate for locking? That is using .add() to see if it was able to add a guid to the set (unlocked) or not (locked)\n\n@mrniko  As you can see lua-script from this method doesn't check element expiration as others do. Could you create an issue about this?\n", "url": "https://github.com/redisson/redisson/issues/454", "user": "jtrunick", "labels": ["bug"], "created": "2016-03-28 17:29:12", "closed": "2016-03-29 10:49:23", "commits": {"f2d82a8981df087e12e1ad8b71465000f3fb4831": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f2d82a8981df087e12e1ad8b71465000f3fb4831", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5cc2fb862a76a89ea633d65f3dd09e4afb63da26"], "nameRev": "f2d82a8981df087e12e1ad8b71465000f3fb4831 tags/redisson-2.2.11~16", "commitMessage": "RSetCache.add methods result fixed. #454\n", "commitDateTime": "2016-03-29 13:49:13", "authoredDateTime": "2016-03-29 13:49:13", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonSetCache.java", "insertions": 27, "deletions": 16, "lines": 43}, {"filePath": "src/test/java/org/redisson/RedissonSetCacheTest.java", "insertions": 32, "deletions": 11, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSetCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCache.addAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 14, "UPD": 5, "INS": 5, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetCache.addAsync(java.lang.Object)", "TOT": 12, "UPD": 4, "INS": 5, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "RedissonSetCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetCacheTest.testExpireOverwrite()", "TOT": 15, "UPD": 5, "INS": 4, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddExpireThenAdd()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddExpire()", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetCacheTest.testAddExpireTwise()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f2d82a8981df087e12e1ad8b71465000f3fb4831"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 16, "lines": 43, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 26, "UPD": 9, "INS": 10, "MOV": 6, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSetCache.addAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonSetCache.addAsync(java.lang.Object)"]}, {"title": "Exception on  pub / subscribe and after whole system becomes unstable", "body": "i use Reddison framework with scala and noticed very strange behavior. If I use sync. and pub \\ subscribe features all system get unstable and issue an exception listed below. Also below is the simple test which produce this behavior. Any comments ?\n`\nimport org.redisson.RedissonClient\nimport org.redisson._\n\nimport org.redisson.core.{ RTopic, MessageListener }\nimport org.scalatest._ \nimport org.slf4j.LoggerFactory\nobject RedissonTest {\n\n  val config = new Config().setUseLinuxNativeEpoll( true )\n  config.useSingleServer().setAddress(\"127.0.0.1:6379\") \n\n  val redis = Redisson.create( config  )\n  val set_test = java.util.UUID.randomUUID\n  val system_topic = \"system_bus\"\n\n  class RedissonTestSet extends FlatSpec with Matchers {\n\n```\nval logger = LoggerFactory.getLogger( this.getClass.getSimpleName )\n\nval topic:RTopic[String] = redis.getTopic( system_topic )\nval redisSet:java.util.Set[String] =  redis.getSet( set_test.toString )\n\nit should \"produce exception \" in {\n\n  val listener = new MessageListener[ String ] () {\n    override def onMessage( chanel: String, message: String ) {\n      logger.info( s\"received $chanel, $message.toString\")\n      checkSet\n    }\n  }\n  topic.addListener( listener )\n  for ( i <- 1 to 1000 ) {\n    redisSet.add( i.toString  )\n  }\n  topic.publish( new String( \"hey this is the bug\" ) )\n}\n\ndef checkSet {\n  for ( i <-1 to 1000 ) {\n    if ( redisSet.contains( i.toString ) ) {\n    }\n  }\n}\n```\n\n  }\n}\n`\n`\n\n2016-03-27 17:36:30.385  WARN  [epollEventLoopGroup-2-12] i.n.channel.DefaultChannelPipeline.warn(151) - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: io.netty.util.concurrent.BlockingOperationException: DefaultPromise@19827b5e(incomplete)\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:431) ~[netty-codec-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:244) ~[netty-codec-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:840) [netty-transport-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:830) [netty-transport-native-epoll-4.0.34.Final-linux-x86_64.jar:na]\n        at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:348) [netty-transport-native-epoll-4.0.34.Final-linux-x86_64.jar:na]\n        at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:264) [netty-transport-native-epoll-4.0.34.Final-linux-x86_64.jar:na]\n        at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112) [netty-common-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137) [netty-common-4.0.34.Final.jar:4.0.34.Final]\n        at java.lang.Thread.run(Thread.java:745) [na:1.8.0_77]\nCaused by: io.netty.util.concurrent.BlockingOperationException: DefaultPromise@19827b5e(incomplete)\n        at io.netty.util.concurrent.DefaultPromise.checkDeadLock(DefaultPromise.java:391) ~[netty-common-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:284) ~[netty-common-4.0.34.Final.jar:4.0.34.Final]\n        at io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:33) ~[netty-common-4.0.34.Final.jar:4.0.34.Final]\n        at org.redisson.command.CommandAsyncService.get(CommandAsyncService.java:84) ~[redisson-2.2.9.jar:na]\n        at org.redisson.RedissonObject.get(RedissonObject.java:49) ~[redisson-2.2.9.jar:na]\n        at org.redisson.RedissonSet.contains(RedissonSet.java:70) ~[redisson-2.2.9.jar:na]\n        at com.web3.RedissonTest$RedissonTestSet$$anonfun$checkSet$1.apply$mcVI$sp(ReddisonSetPubSubTest.scala:45) ~[test-classes/:na]\n        at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141) ~[scala-library-2.10.4.jar:na]\n        at com.web3.RedissonTest$RedissonTestSet.checkSet(ReddisonSetPubSubTest.scala:44) ~[test-classes/:na]\n        at com.web3.RedissonTest$RedissonTestSet$$anonfun$1$$anon$1.onMessage(ReddisonSetPubSubTest.scala:30) ~[test-classes/:na]\n        at com.web3.RedissonTest$RedissonTestSet$$anonfun$1$$anon$1.onMessage(ReddisonSetPubSubTest.scala:27) ~[test-classes/:na]\n        at org.redisson.PubSubMessageListener.onMessage(PubSubMessageListener.java:73) ~[redisson-2.2.9.jar:na]\n        at org.redisson.client.RedisPubSubConnection.onMessage(RedisPubSubConnection.java:68) ~[redisson-2.2.9.jar:na]\n        at org.redisson.client.handler.CommandDecoder.handleMultiResult(CommandDecoder.java:277) ~[redisson-2.2.9.jar:na]\n        at org.redisson.client.handler.CommandDecoder.decodeMulti(CommandDecoder.java:242) ~[redisson-2.2.9.jar:na]\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:217) ~[redisson-2.2.9.jar:na]\n        at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:97) ~[redisson-2.2.9.jar:na]\n        at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:376) ~[netty-codec-4.0.34.Final.jar:4.0.34.Final]\n        ... 16 common frames omitted\n `\n", "url": "https://github.com/redisson/redisson/issues/453", "user": "YuliReiri", "labels": ["bug"], "created": "2016-03-27 14:44:46", "closed": "2016-03-29 09:31:42", "commits": {"5cc2fb862a76a89ea633d65f3dd09e4afb63da26": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "5cc2fb862a76a89ea633d65f3dd09e4afb63da26", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["898fff317b1dcea66965742bb0ccd1b01c949a5b"], "nameRev": "5cc2fb862a76a89ea633d65f3dd09e4afb63da26 tags/redisson-2.2.11~17", "commitMessage": "RTopic listener execution bug fixed. Performance boost up to 43%! #453\n", "commitDateTime": "2016-03-29 12:30:51", "authoredDateTime": "2016-03-29 12:30:51", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonObject.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/client/RedisClient.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/FastCompleteFuture.java", "insertions": 0, "deletions": 75, "lines": 75}, {"filePath": "src/main/java/org/redisson/connection/FastFailedFuture.java", "insertions": 0, "deletions": 65, "lines": 65}, {"filePath": "src/main/java/org/redisson/connection/FastSuccessFuture.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonObject.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonObject.newPromise()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedisClient.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisClient.connectAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisClient.connectPubSubAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisConnection.async(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisConnection.create(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConnectionWatchdog.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.reconnect(org.redisson.client.RedisConnection,io.netty.channel.Channel)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.connect()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.connectPubSub()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FastCompleteFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.FastCompleteFuture", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FastFailedFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.FastFailedFuture", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FastSuccessFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.FastSuccessFuture", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newPromise()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newSucceededFuture(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newFailedFuture(java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.test()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testInnerPublish().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testUnsubscribe().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testHeavyLoad().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testHeavyLoad().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testLazyUnsubscribe().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testInnerPublish().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testStatus().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testStatus().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testLazyUnsubscribe().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testUnsubscribe().5", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testListenerRemove().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testSyncCommands()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testLazyUnsubscribe()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testUnsubscribe()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testHeavyLoad()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5cc2fb862a76a89ea633d65f3dd09e4afb63da26"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 204, "lines": 225, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 33, "UPD": 1, "INS": 13, "MOV": 2, "DEL": 17, "spoonFilesChanged": 9, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson/client", "src/main/java/org/redisson/client/handler", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.connection.ClientConnectionsEntry.connectPubSub()", "org.redisson.connection.FastCompleteFuture", "org.redisson.connection.MasterSlaveConnectionManager.newFailedFuture(java.lang.Throwable)", "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.client.handler.ConnectionWatchdog.reconnect(org.redisson.client.RedisConnection,io.netty.channel.Channel)", "org.redisson.connection.ClientConnectionsEntry.connect()", "org.redisson.client.RedisConnection.create(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.client.RedisClient.connectPubSubAsync()", "org.redisson.RedissonObject.newPromise()", "org.redisson.connection.FastSuccessFuture", "org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.connection.MasterSlaveConnectionManager.newSucceededFuture(java.lang.Object)", "org.redisson.connection.MasterSlaveConnectionManager.newPromise()", "org.redisson.connection.FastFailedFuture", "org.redisson.client.RedisClient.connectAsync()", "org.redisson.client.RedisConnection.async(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.client.RedisConnection"]}, {"title": "MOVED, ASK handling in cluster mode using RBatch", "body": "", "url": "https://github.com/redisson/redisson/issues/448", "user": "mrniko", "labels": ["bug"], "created": "2016-03-23 09:48:36", "closed": "2016-03-23 10:04:18", "commits": {"75ba40227df09878a709f5c814fdc2d6931e3e26": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "75ba40227df09878a709f5c814fdc2d6931e3e26", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cdd50516ac3fe64dad4c64a45729e13e85af70f0"], "nameRev": "75ba40227df09878a709f5c814fdc2d6931e3e26 tags/redisson-2.2.10~2", "commitMessage": "MOVED, ASK handling in cluster mode using RBatch. #448\n", "commitDateTime": "2016-03-23 13:03:56", "authoredDateTime": "2016-03-23 13:03:56", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleCommandsDataResponse(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.Decoder,org.redisson.client.protocol.CommandsData)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["75ba40227df09878a709f5c814fdc2d6931e3e26"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.handleCommandsDataResponse(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.Decoder,org.redisson.client.protocol.CommandsData)"]}, {"title": "Fix delete and expire Multimap methods", "body": "", "url": "https://github.com/redisson/redisson/issues/447", "user": "mrniko", "labels": ["bug"], "created": "2016-03-23 07:29:23", "closed": "2016-03-23 08:49:22", "commits": {"40d5ad5237cb9d5200248852cfcd05b0dad943dd": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "36487763c040f4581a3c3e4596ecf8732e9d57df": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "40d5ad5237cb9d5200248852cfcd05b0dad943dd", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ac3278d94b87a1a71c0aa13b0d7bc7bcf8f7e438"], "nameRev": "40d5ad5237cb9d5200248852cfcd05b0dad943dd tags/redisson-2.2.10~9", "commitMessage": "Delete and expire Multimap methods fix. #447\n", "commitDateTime": "2016-03-23 10:43:52", "authoredDateTime": "2016-03-23 10:43:52", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonMultimap.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "src/test/java/org/redisson/RedissonSetMultimapTest.java", "insertions": 54, "deletions": 1, "lines": 55}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMultimap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultimap.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.expireAsync(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.expireAtAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.clearExpireAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.fastRemove(java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMultimap.fastRemoveAsync(java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testExpireAt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testClearExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapTest.testDelete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "36487763c040f4581a3c3e4596ecf8732e9d57df", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["928898dc2d8418a6b3d53437c71daa73035301e3"], "nameRev": "36487763c040f4581a3c3e4596ecf8732e9d57df tags/redisson-2.2.10~5", "commitMessage": "Delete and expire MultimapCache methods fixed. #447\n", "commitDateTime": "2016-03-23 11:49:14", "authoredDateTime": "2016-03-23 11:49:14", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonListMultimapCache.java", "insertions": 24, "deletions": 18, "lines": 42}, {"filePath": "src/main/java/org/redisson/RedissonMultimapCache.java", "insertions": 114, "deletions": 0, "lines": 114}, {"filePath": "src/main/java/org/redisson/RedissonSetMultimapCache.java", "insertions": 24, "deletions": 18, "lines": 42}, {"filePath": "src/test/java/org/redisson/RedissonSetMultimapCacheTest.java", "insertions": 53, "deletions": 4, "lines": 57}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonListMultimapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListMultimapCache", "TOT": 10, "UPD": 2, "INS": 3, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.expireKeyAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 16, "UPD": 4, "INS": 1, "MOV": 10, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.expireAsync(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.expireAtAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonListMultimapCache.clearExpireAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMultimapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMultimapCache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapCache", "TOT": 10, "UPD": 2, "INS": 3, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCache.expireKeyAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 16, "UPD": 4, "INS": 1, "MOV": 10, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCache.deleteAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCache.expireAsync(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCache.expireAtAsync(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCache.clearExpireAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetMultimapCacheTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testExpireAt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testClearExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetMultimapCacheTest.testDelete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["40d5ad5237cb9d5200248852cfcd05b0dad943dd", "36487763c040f4581a3c3e4596ecf8732e9d57df"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 233, "deletions": 36, "lines": 269, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 67, "UPD": 12, "INS": 23, "MOV": 28, "DEL": 4, "spoonFilesChanged": 4, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonListMultimapCache.expireAsync(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonSetMultimapCache.deleteAsync()", "org.redisson.RedissonSetMultimapCache.clearExpireAsync()", "org.redisson.RedissonMultimapCache", "org.redisson.RedissonListMultimapCache.expireAtAsync(long)", "org.redisson.RedissonSetMultimapCache", "org.redisson.RedissonMultimap.fastRemoveAsync(java.lang.Object[])", "org.redisson.RedissonMultimap.expireAtAsync(long)", "org.redisson.RedissonSetMultimapCache.expireKeyAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonListMultimapCache", "org.redisson.RedissonMultimap.expireAsync(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonSetMultimapCache.expireAtAsync(long)", "org.redisson.RedissonListMultimapCache.expireKeyAsync(java.lang.Object,long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonMultimap.fastRemove(java.lang.Object[])", "org.redisson.RedissonMultimap.deleteAsync()", "org.redisson.RedissonSetMultimapCache.expireAsync(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonListMultimapCache.clearExpireAsync()", "org.redisson.RedissonListMultimapCache.deleteAsync()", "org.redisson.RedissonMultimap.clearExpireAsync()"]}, {"title": "RedisConnectionException: Can't init enough connections", "body": "Redisson version: all from 2.2.3 to 2.2.9\nRedis version: 3.0.4\nInitializaition:\n\n``` java\nredissonConfig\n.useSingleServer()\n.setAddress(config.getSingleAdress())\n.setPassword(config.getPassword())\n.setDatabase(REDIS_DATABASE)\n.setConnectionPoolSize(2);\nclient = Redisson.create(redissonConfig);\n```\n\n```\ninternal.redisson.client.RedisConnectionException: Can't init enough connections\n amount! 5 from 5 was initialized. Server: /xxx.xxx.xxx.xxx:xxxx\n        at internal.redisson.misc.ConnectionPool.initConnections(ConnectionPool.\njava:78) ~[?:?]\n        at internal.redisson.misc.ConnectionPool.add(ConnectionPool.java:63) ~[?\n:?]\n        at internal.redisson.connection.SingleEntry.setupMasterEntry(SingleEntry\n.java:57) ~[?:?]\n        at internal.redisson.connection.SingleConnectionManager.initEntry(Single\nConnectionManager.java:87) ~[?:?]\n        at internal.redisson.connection.MasterSlaveConnectionManager.init(Master\nSlaveConnectionManager.java:171) ~[?:?]\n        at internal.redisson.connection.MasterSlaveConnectionManager.<init>(Mast\nerSlaveConnectionManager.java:129) ~[?:?]\n        at internal.redisson.connection.SingleConnectionManager.<init>(SingleCon\nnectionManager.java:45) ~[?:?]\n        at internal.redisson.Redisson.<init>(Redisson.java:85) ~[?:?]\n        at internal.redisson.Redisson.create(Redisson.java:122) ~[?:?]\n```\n", "url": "https://github.com/redisson/redisson/issues/431", "user": "Master-chan", "labels": ["bug"], "created": "2016-03-11 16:02:48", "closed": "2016-03-21 12:26:28", "commits": {"a941a7f3a174a3bd2e67d5d73cd3bfa579c928ef": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "a941a7f3a174a3bd2e67d5d73cd3bfa579c928ef", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3207687300a6d5be6c375f6fca881ea08c0a8746"], "nameRev": "a941a7f3a174a3bd2e67d5d73cd3bfa579c928ef tags/redisson-2.2.10~23", "commitMessage": "Config params validation added. #431\n", "commitDateTime": "2016-03-21 15:26:14", "authoredDateTime": "2016-03-21 15:26:14", "commitGitStats": [{"filePath": "src/main/java/org/redisson/Redisson.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "src/test/java/org/redisson/RedissonTest.java", "insertions": 11, "deletions": 23, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Redisson.java", "spoonMethods": [{"spoonMethodName": "org.redisson.Redisson.validate(org.redisson.SingleServerConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.Redisson.validate(org.redisson.BaseMasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.Redisson", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testConfigValidation()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a941a7f3a174a3bd2e67d5d73cd3bfa579c928ef"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 0, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.Redisson.validate(org.redisson.SingleServerConfig)", "org.redisson.Redisson", "org.redisson.Redisson.validate(org.redisson.BaseMasterSlaveServersConfig)"]}, {"title": "An exception was thrown by org.redisson.RedissonLock$8$1.operationComplete()- java.lang.NullPointerException", "body": "An exception was thrown by org.redisson.RedissonLock$8$1.operationComplete()\njava.lang.NullPointerException\n    at org.redisson.RedissonLock$8$1.operationComplete(RedissonLock.java:580)\n    at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:683)\n    at io.netty.util.concurrent.DefaultPromise$LateListeners.run(DefaultPromise.java:854)\n    at io.netty.util.concurrent.DefaultPromise$LateListenerNotifier.run(DefaultPromise.java:882)\n    at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:358)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:357)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n\nin class RedissonLock ,row 580, futureRef.get() may be null\n", "url": "https://github.com/redisson/redisson/issues/423", "user": "AlexFastAll", "labels": ["bug"], "created": "2016-03-10 09:05:01", "closed": "2016-03-11 08:37:20", "commits": {"15574ea0c7a42523a0d9e7b4d7e0793cb3896355": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "15574ea0c7a42523a0d9e7b4d7e0793cb3896355", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cd5c219eafeee7619646e6363f9776bf4be11070"], "nameRev": "15574ea0c7a42523a0d9e7b4d7e0793cb3896355 tags/redisson-2.2.10~43", "commitMessage": "RLock.tryLockAsync NPE fixed. #423\n", "commitDateTime": "2016-03-11 11:37:00", "authoredDateTime": "2016-03-11 11:37:00", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit).8.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["15574ea0c7a42523a0d9e7b4d7e0793cb3896355"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.tryLockAsync(long,long,java.util.concurrent.TimeUnit).8.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Version.logVersion() error", "body": "version:redisson-2.2.9\nexception:\nCaused by: java.lang.NullPointerException\n    at com.simontuffs.onejar.OneJarFile.getInputStream(OneJarFile.java:116)\n    at com.simontuffs.onejar.OneJarURLConnection.getInputStream(OneJarURLConnection.java:51)\n    at java.net.URL.openStream(URL.java:1037)\n    at org.redisson.Version.logVersion(Version.java:35)\n    at org.redisson.connection.MasterSlaveConnectionManager.<init>(MasterSlaveConnectionManager.java:139)\n    at org.redisson.cluster.ClusterConnectionManager.<init>(ClusterConnectionManager.java:65)\n    at org.redisson.Redisson.<init>(Redisson.java:100)\n    at org.redisson.RedissonExt.create(RedissonExt.java:82)\n    ... 60 more\n\n**org.redisson.Version.java**\nshould catch Exception instead of IOException\n", "url": "https://github.com/redisson/redisson/issues/422", "user": "carlvine500", "labels": ["bug"], "created": "2016-03-09 07:49:54", "closed": "2016-03-09 08:25:45", "commits": {"095ae8ff0b9d19689d9cf2972a8f913892d92315": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "095ae8ff0b9d19689d9cf2972a8f913892d92315", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8e70598164bbe01fda06c8cdd3c8db91d82d7903"], "nameRev": "095ae8ff0b9d19689d9cf2972a8f913892d92315 tags/redisson-2.2.10~47", "commitMessage": "Version NPE fixed.  #422\n", "commitDateTime": "2016-03-09 11:25:31", "authoredDateTime": "2016-03-09 11:25:31", "commitGitStats": [{"filePath": "src/main/java/org/redisson/Version.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Version.java", "spoonMethods": [{"spoonMethodName": "org.redisson.Version.logVersion()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["095ae8ff0b9d19689d9cf2972a8f913892d92315"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.Version.logVersion()"]}, {"title": "orphan netty threads on connection failure", "body": "If you try to create a RedissonClient and get a timeout error, the created netty threads aren't destroyed and you can never terminate the Java program but with a `System.exit()`. For example:\n\n``` Java\n    Config config = new Config();\n    config.useSingleServer().setConnectTimeout(2);\n    RedissonClient client = Redisson.create(config); // <-- timeout exception\n```\n\nIf this code fails, then several netty threads remain in execution and they are never destroyed, because the \"client\" variable is the only point where you can \"shutdown\" those threads, but that RedissonClient instance hasn't been created (because an exception has been thrown).\n\nA possible solution is to shutdown the failed connection at `MasterSlaveConnectionManager.init()`, which is the point that all kind of connection managers run to create a connection. Surrounding:\n\n``` Java\n    initEntry(config);\n```\n\nthis way:\n\n``` Java\n    try {\n        initEntry(config);\n    } catch (Exception e) {\n        try { this.group.shutdownGracefully().await(); } catch (Exception ignore) {}\n        throw e;\n    }\n```\n", "url": "https://github.com/redisson/redisson/issues/421", "user": "candelj", "labels": ["bug"], "created": "2016-03-07 19:10:28", "closed": "2016-03-08 07:34:11", "commits": {"e4c82c4298c0c61d10c8b4c00cc84b18e44fd807": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e4c82c4298c0c61d10c8b4c00cc84b18e44fd807", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["caca8f73a39c5e795ae49c6b031f7e70f006b5e4"], "nameRev": "e4c82c4298c0c61d10c8b4c00cc84b18e44fd807 tags/redisson-2.2.10~49", "commitMessage": "Netty threads shutdown after connection error. #421\n", "commitDateTime": "2016-03-08 10:30:36", "authoredDateTime": "2016-03-08 10:30:36", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveServersConfig)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e4c82c4298c0c61d10c8b4c00cc84b18e44fd807"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 1, "lines": 16, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager", "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveServersConfig)"]}, {"title": "an exception of RedissonSpringCacheManager ", "body": "  spring config:\n\n```\n<bean id=\"cacheCodec\" class=\"org.redisson.codec.JsonJacksonCodec\"/>\n<bean id=\"redisCacheManager\" class=\"org.redisson.spring.cache.RedissonSpringCacheManager\"\n      c:_0-ref=\"redisson\"\n      c:_1=\"classpath:config/redissonCacheConfig.json\"\n      c:_2-ref=\"cacheCodec\">\n</bean>\n```\n\n> org.redisson.client.RedisException: ERR Error running script (call to f_286dd696309f4ab2005d9df55e2410a1170fe3b3): @user_script:1: @user_script: 1: -READONLY You can't write against a read only slave.   . channel: [id: 0x1fa180db, /192.168.1.112:9026 => /192.168.1.200:6380] command: CommandData [promise=DefaultPromise@2ef37b25(incomplete), command=(EVAL), params=[local value = redis.call('hget', KEYS[1], ARGV[2]); if value == false then return nil; end; local t, val = struct.unpack('dLc0', value); local expireDate = 92233720368547758; local expireDateScore = redis.call('zscore', KEYS[2], ARGV[2]); if expireDateScore ~= false then expireDate = tonumber(expireDateScore) end; if t ~= 0 then local expireIdle = redis.call('zscore', KEYS[3], ARGV[2]); if expireIdle ~= false then if tonumber(expireIdle) > tonumber(ARGV[1]) then local value = struct.pack('dLc0', t, string.len(val), val); redis.call('hset', KEYS[1], ARGV[2], value); redis.call('zadd', KEYS[3], t + tonumber(ARGV[1]), ARGV[2]); end; expireDate = math.min(expireDate, tonumber(expireIdle)) end; end; if expireDate <= tonumber(ARGV[1]) then return nil; end; return val; , 3, C:UserProfile, redisson__timeout__set__{C:UserProfile}, redisson__idle__set__{C:UserProfile}, 1455593900905, 206aa20c5a737744edb1f8e0e05084ae88], codec=org.redisson.codec.JsonJacksonCodec@6bf1e09f]\n>   at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:190)\n>   at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:105)\n>   at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:376)\n>   at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:244)\n>   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307)\n>   at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293)\n>   at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n>   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307)\n>   at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293)\n>   at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n>   at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307)\n>   at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293)\n>   at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:840)\n>   at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n>   at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n>   at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n>   at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n>   at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n>   at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n>   at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n>   at java.lang.Thread.run(Thread.java:745)\n", "url": "https://github.com/redisson/redisson/issues/405", "user": "SaroLain", "labels": ["bug"], "created": "2016-02-16 03:42:01", "closed": "2016-02-29 06:44:52", "commits": {"402a6e0aca29a50c5795bb605079cf114367b72b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "402a6e0aca29a50c5795bb605079cf114367b72b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4c9f15f8199914617904689bb22d0a7787f422ac"], "nameRev": "402a6e0aca29a50c5795bb605079cf114367b72b tags/redisson-2.2.9~15", "commitMessage": "RedissonSpringCacheManager Sentinel compatibility fixed.  #405\n", "commitDateTime": "2016-02-29 09:44:34", "authoredDateTime": "2016-02-29 09:44:16", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonMapCache.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.containsKeyAsync(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.containsValueAsync(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.getAllAsync(java.util.Set)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.getAsync(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["402a6e0aca29a50c5795bb605079cf114367b72b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.getAsync(java.lang.Object)", "org.redisson.RedissonMapCache.containsKeyAsync(java.lang.Object)", "org.redisson.RedissonMapCache.containsValueAsync(java.lang.Object)", "org.redisson.RedissonMapCache.getAllAsync(java.util.Set)"]}, {"title": "Redisson", "body": "Hi mrniko,\n\nsince upgrading to 2.2.6 from 2.1.4, suddenly the Rmap only returns 10 elements - although it reports size correctly to 1000. Below is my test scenario - please help! I have attached output log.\n\nMap<String, Object> properties = new HashMap<>();\n        properties.put(\"redis.hostname\", \"127.0.0.1\");\n        properties.put(\"redis.port\", \"6379\");\n        properties.put(\"redis.pool.size\", \"100\");\n        properties.put(\"redis.compression\", \"false\");\n        properties.put(\"redis.localslave\", \"false\");\n        properties.put(\"redis.registration\", \"true\");\n\n```\n    RedissonRepository redissonRepository = RedissonRepository.getInstance(properties);\n    RMap rMap = redissonRepository.getMap(\"123\",new JsonJacksonCodec());\n\n    for (int i = 0; i < 1000; i++) {\n        rMap.put(i,i);\n    }\n\n    int counter = 0;\n    for (Object key : rMap.keySet()) {\n        System.out.println(\"key = \" + key);\n        counter++;\n        System.out.println(counter);\n    }\n```\n\n[redisson.txt](https://github.com/mrniko/redisson/files/116908/redisson.txt)\n", "url": "https://github.com/redisson/redisson/issues/394", "user": "soelvar", "labels": ["bug"], "created": "2016-02-04 05:31:35", "closed": "2016-02-04 08:35:23", "commits": {"b0e3eb8364ae6eea6ded05c04a36d3c9cf077c80": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b0e3eb8364ae6eea6ded05c04a36d3c9cf077c80", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f622964a1d58c5fa0bcea81183d5ec1fe212bc5e"], "nameRev": "b0e3eb8364ae6eea6ded05c04a36d3c9cf077c80 tags/redisson-2.2.8~32", "commitMessage": "RMap iterator fixed. #394\n", "commitDateTime": "2016-02-04 11:34:51", "authoredDateTime": "2016-02-04 11:34:51", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonMapIterator.java", "insertions": 22, "deletions": 2, "lines": 24}, {"filePath": "src/main/java/org/redisson/client/codec/ScanCodec.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "src/test/java/org/redisson/RedissonMapTest.java", "insertions": 65, "deletions": 34, "lines": 99}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapIterator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.free(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.hasNext()", "TOT": 7, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ScanCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.ScanCodec.getMapValueDecoder().1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.codec.ScanCodec.getMapKeyDecoder().2.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapTest.testAddAndGet()", "TOT": 18, "UPD": 6, "INS": 2, "MOV": 8, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMapTest.testInteger()", "TOT": 14, "UPD": 4, "INS": 2, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMapTest.testLong()", "TOT": 14, "UPD": 4, "INS": 2, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonMapTest.testNull()", "TOT": 19, "UPD": 5, "INS": 3, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonMapTest.testRemove()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapTest.testRemoveAsync()", "TOT": 19, "UPD": 11, "INS": 1, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapTest.testFastRemoveAsync()", "TOT": 8, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapTest.testKeyIterator()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapTest.testValueIterator()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapTest.testEquals()", "TOT": 12, "UPD": 5, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapTest.testFastRemoveEmpty()", "TOT": 9, "UPD": 3, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapTest.testGetAll()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapTest.testGetAllWithStringKeys()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapTest.testFilterKeys()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapTest.testSimpleTypes()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapTest.testPutAll()", "TOT": 11, "UPD": 1, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapTest.testIterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b0e3eb8364ae6eea6ded05c04a36d3c9cf077c80"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 4, "lines": 32, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 2, "INS": 9, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/codec", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonMapIterator.hasNext()", "org.redisson.RedissonMapIterator.free(java.util.Map)", "org.redisson.RedissonMapIterator", "org.redisson.client.codec.ScanCodec.getMapValueDecoder().1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.client.codec.ScanCodec.getMapKeyDecoder().2.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)"]}, {"title": "Sentinel \"ERR unknown command 'AUTH'\" error after upgrade from 2.2.5 to 2.2.6,2.2.7", "body": "``` java\n Config config = new Config();\n            config.useSentinelServers()\n                  .setRetryInterval(redisReconnectDelay.get())\n                  .setMasterConnectionPoolSize(redisConnectionPoolSize.get())\n                  .setTimeout(redisTimeout.get())\n                  .setRetryAttempts(redisRetryCount.get())\n                  .setSlaveConnectionPoolSize(redisConnectionPoolSize.get())\n                  .setPassword(redisPassword)\n                  .setMasterName(redisMasterName.get());\n\n            // Add sentinel server addresses\n            for (String sentinelServerAddress : redisSentinelServers.get().split(\"\\\\s*,\\\\s*\")) {\n                config.useSentinelServers().addSentinelAddress(sentinelServerAddress);\n            }\n\n ...\n redisson = Redisson.create(config);\n```\n\n**Stacktrace:**\n\n``` java\n11:53:31.747-main-INFO o.r.Version:42 - Redisson 2.2.7\n\norg.redisson.client.RedisException: ERR unknown command 'AUTH'. channel: [id: 0xfa3297ed, /192.168.0.2:55117 => redis01.ops.aol.com/192.168.0.3:26379] command: CommandData [promise=DefaultPromise@4b8a3643(incomplete), command=(AUTH), params=[PASSWORD_REMOVED], codec=null]\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:190)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:105)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:376)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:244)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307)\n11:53:32.049-main-ERROR c.a.u.RedisConnectionProvider:184 - ERR unknown command 'AUTH'. channel: [id: 0xfa3297ed, /192.168.0.2:55117 => redis01.ops.aol.com/192.168.0.3:26379] command: CommandData [promise=DefaultPromise@4b8a3643(incomplete), command=(AUTH), params=[PASSWORD_REMOVED], codec=null]\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:307)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:293)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:840)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n\njava.lang.ExceptionInInitializerError\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:422)\n    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)\n    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\nCaused by: java.lang.RuntimeException: Failed to connect to redis sentinel servers redis01.ops.aol.com:26379,redis02.ops.aol.com:26379,redis03.ops.aol.com:26379\n    at com.aol.util.RedisConnectionProvider.connect(RedisConnectionProvider.java:194)\n    at com.aol.util.RedisConnectionProvider.config(RedisConnectionProvider.java:129)\n    at com.aol.util.RedisConnectionProvider.getInstance(RedisConnectionProvider.java:92)\n    at com.aol.ido.aws.config.ServiceConfig.<init>(ServiceConfig.java:82)\n    at com.aol.ido.aws.TestBase.<clinit>(TestBase.java:153)\n    ... 25 more\n```\n", "url": "https://github.com/redisson/redisson/issues/393", "user": "emoseman", "labels": ["bug"], "created": "2016-02-03 17:04:26", "closed": "2016-02-04 09:23:56", "commits": {"349f9e9efb5a975e2322c513fd9648aa4ad98c2c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "349f9e9efb5a975e2322c513fd9648aa4ad98c2c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e81f14818a30d381b4d183aade412ae953036ff5"], "nameRev": "349f9e9efb5a975e2322c513fd9648aa4ad98c2c tags/redisson-2.2.8~29", "commitMessage": "Sentinel doesn't support AUTH command. #393\n", "commitDateTime": "2016-02-04 12:23:42", "authoredDateTime": "2016-02-04 12:23:42", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/DefaultConnectionListener.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 0, "deletions": 5, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultConnectionListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.DefaultConnectionListener.doConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["349f9e9efb5a975e2322c513fd9648aa4ad98c2c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 7, "lines": 9, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 4, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.DefaultConnectionListener.doConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "org.redisson.connection.SentinelConnectionManager"]}, {"title": "RKeys.deleteByPattern in cluster mode throws error", "body": "", "url": "https://github.com/redisson/redisson/issues/392", "user": "mrniko", "labels": ["bug"], "created": "2016-01-30 10:50:54", "closed": "2016-02-01 13:22:27", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Sentinel error when no slaves", "body": "```\nConfig config = new Config();\nconfig.useSentinelServers()\n    .setMasterName(\"mymaster\")\n    .addSentinelAddress(\"127.0.0.1:26389\");\nRedisson redisson = Redisson.create(config);\n```\n\nif there are no slaves on SentinelConnectionManager:82 we have a List<Map<String, String>> sentinelSlaves = connection.sync(StringCodec.INSTANCE, RedisCommands.SENTINEL_SLAVES, cfg.getMasterName()); which returns just Map not List of Maps.\nSo, the exception I get is:\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)\n    at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:545)\n    ... 41 more\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.redisson.RedissonClient]: Factory method 'redissonClient' threw exception; nested exception is java.lang.ClassCastException: java.util.HashMap cannot be cast to java.util.List\n    at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)\n    at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)\n    ... 53 more\nCaused by: java.lang.ClassCastException: java.util.HashMap cannot be cast to java.util.List\n    at org.redisson.connection.SentinelConnectionManager.<init>(SentinelConnectionManager.java:82)\n    at org.redisson.Redisson.<init>(Redisson.java:96)\n    at org.redisson.Redisson.create(Redisson.java:131)\n    at com.atl.csc.conf.RedisConfig.redissonClient(RedisConfig.java:122)\n\nYou may argue that it is not correct if there are no slaves, but, this cut config is used on test machines and not on production (which is fully configured with slaves). So, would be nice to handle this error.\nThanks.\n", "url": "https://github.com/redisson/redisson/issues/391", "user": "usatenko", "labels": ["bug"], "created": "2016-01-29 18:02:40", "closed": "2016-02-29 05:43:42", "commits": {"897f4cc524c922ef4992a35381986b45d22d0d9e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "c619e5634a59c022f61fb1d3e7654faccfc9ee52": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "897f4cc524c922ef4992a35381986b45d22d0d9e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1723e68bed544f90738d3d0057c01a4888cba270"], "nameRev": "897f4cc524c922ef4992a35381986b45d22d0d9e tags/redisson-2.2.7~22", "commitMessage": "Sentinel offline slaves handling during Redisson start. #391\n", "commitDateTime": "2016-01-30 12:15:42", "authoredDateTime": "2016-01-30 12:15:42", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 16, "deletions": 10, "lines": 26}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 23, "deletions": 8, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 15, "UPD": 1, "INS": 3, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createMasterSlaveEntry(org.redisson.MasterSlaveServersConfig,java.util.HashSet)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.initSlaveBalancer()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.initSlaveBalancer(java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 13, "UPD": 3, "INS": 5, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.createMasterSlaveEntry(org.redisson.MasterSlaveServersConfig,java.util.HashSet)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c619e5634a59c022f61fb1d3e7654faccfc9ee52", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e95b6d6a808270256fdbce24ed436c564249525e"], "nameRev": "c619e5634a59c022f61fb1d3e7654faccfc9ee52 tags/redisson-2.2.7~17", "commitMessage": "Empty result handling for RedisCommands.SENTINEL_SLAVES command fixed. #391\n", "commitDateTime": "2016-01-30 13:43:39", "authoredDateTime": "2016-01-30 13:43:39", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/protocol/decoder/NestedMultiDecoder2.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NestedMultiDecoder2.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.NestedMultiDecoder2.decode(java.util.List,org.redisson.client.handler.State)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["897f4cc524c922ef4992a35381986b45d22d0d9e", "c619e5634a59c022f61fb1d3e7654faccfc9ee52"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 51, "deletions": 21, "lines": 72, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 36, "UPD": 4, "INS": 14, "MOV": 11, "DEL": 7, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson/client/protocol/decoder"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.NestedMultiDecoder2.decode(java.util.List,org.redisson.client.handler.State)", "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.SentinelConnectionManager.createMasterSlaveEntry(org.redisson.MasterSlaveServersConfig,java.util.HashSet)", "org.redisson.connection.MasterSlaveEntry.initSlaveBalancer()", "org.redisson.connection.MasterSlaveEntry.initSlaveBalancer(java.util.Collection)", "org.redisson.connection.MasterSlaveConnectionManager.createMasterSlaveEntry(org.redisson.MasterSlaveServersConfig,java.util.HashSet)", "org.redisson.connection.SentinelConnectionManager"]}, {"title": "An exception when upgrade from 2.2.5 to 2.2.6", "body": "Caused by: org.redisson.client.RedisException: ERR unknown command 'SELECT'. channel: [id: 0x9d9fb2c3, /192.168.1.112:7378 => /192.168.1.200:26379] command: CommandData [promise=DefaultPromise@36a98b5d(incomplete), command=(SELECT), params=[1], codec=null]\n\n---\n\ni do \"mvn clean\" before start tomcat\nredis version\uff1aRedis-x64-3.0.500\n\n```\nprivate RedissonClient createRedissonClient() {\n    Config config = new Config();\n    config.setCodec(objectCodec);\n    config.useSentinelServers()\n            .setMasterName(this.masterName)\n            .setDatabase(this.database)\n            .setMasterConnectionPoolSize(this.masterConnectionPoolSize)\n            .setSlaveConnectionPoolSize(this.slaveConnectionPoolSize)\n            .setTimeout(this.timeout)\n            .addSentinelAddress(sentinelAddress);\n    RedissonClient redisson = Redisson.create(config);\n    return redisson;\n}\n```\n", "url": "https://github.com/redisson/redisson/issues/387", "user": "SaroLain", "labels": ["bug"], "created": "2016-01-29 04:14:57", "closed": "2016-01-29 09:37:44", "commits": {"5ab7c73691f882b426053abbb348e1472a7bd286": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5ab7c73691f882b426053abbb348e1472a7bd286", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e2d2861eb3ebe635f3330c1d61db3b454b94e95d"], "nameRev": "5ab7c73691f882b426053abbb348e1472a7bd286 tags/redisson-2.2.7~26", "commitMessage": "SELECT command can't be executed with Sentinel node. #387\n", "commitDateTime": "2016-01-29 12:37:22", "authoredDateTime": "2016-01-29 12:37:22", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/DefaultConnectionListener.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.NodeType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultConnectionListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.DefaultConnectionListener.doConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5ab7c73691f882b426053abbb348e1472a7bd286"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.DefaultConnectionListener.doConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "org.redisson.connection.ClientConnectionsEntry.NodeType"]}, {"title": "Question: Does redisson handle redis clusters with password?", "body": "when i tried with codes below \n        Config config = new Config();\n        config.useClusterServers().setPassword(\"pass01\").setScanInterval(3000)\n                .addNodeAddress(\"192.22.1.189:3382\");\n        RedissonClient redisson = Redisson.create(config);\n        RList<String> strList = redisson.getList(\"strList\");\n\ni got this exception\nException in thread \"main\" org.redisson.client.RedisException: NOAUTH Authentication required.. channel: [id: 0x236ed784, /192.20.178.31:62174 => /192.22.1.189:3382] command: CommandData [promise=DefaultPromise@294633e1(incomplete), command=(CLUSTER NODES), params=[], codec=null]\n\nand i debuged into redisson code ,it seems exception is throwed when doing a sync operation while creating a ClusterConnectionManager, \n\n```\npublic ClusterConnectionManager(ClusterServersConfig cfg, Config config) {\n    isReadFromSlaves = cfg.isReadFromSlaves();\n    connectListener = new ClusterConnectionListener(cfg.isReadFromSlaves());\n    init(config);\n\n    this.config = create(cfg);\n    init(this.config);\n\n    for (URI addr : cfg.getNodeAddresses()) {\n        RedisConnection connection = connect(cfg, addr, true);\n        if (connection == null) {\n            continue;\n        }\n\n        String nodesValue = connection.sync(RedisCommands.CLUSTER_NODES);//throws here\n```\n\n....\n\nmy redisson version is 2.2.5\n\nthanks\n", "url": "https://github.com/redisson/redisson/issues/379", "user": "dfpy2332", "labels": ["bug"], "created": "2016-01-21 03:21:37", "closed": "2016-01-21 12:10:26", "commits": {"3e0f02cbf88e399986c2e52d9f75444baf107fad": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3e0f02cbf88e399986c2e52d9f75444baf107fad", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2143f1eb79db7fd3ae641d23021739307274a9ab"], "nameRev": "3e0f02cbf88e399986c2e52d9f75444baf107fad tags/redisson-2.2.6~29", "commitMessage": "Cluster configuration with password handling. ClusterConnectionManager optimization. #379\n", "commitDateTime": "2016-01-21 15:02:04", "authoredDateTime": "2016-01-21 15:02:04", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 198, "deletions": 107, "lines": 305}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["3e0f02cbf88e399986c2e52d9f75444baf107fad"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 198, "deletions": 107, "lines": 305, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/cluster"]}, {"title": "Can't init enough connections amount", "body": "Caused by: org.redisson.client.RedisConnectionException: Can't init enough connections amount! from /192.168.1.87:6379\nThis exception  appeared sometimes.\nwho can tell me how to solve this problerm?\nserver:redis-3.0.6\nclient:redisson2.2.5\n\n``` java\n public Redisson getMasterSlaveClient(String addr, String hosts) {\n        Config config = new Config();\n        String[] hostarr = hosts.split(\",\");\n        config.useMasterSlaveServers().setMasterAddress(addr).setLoadBalancer(\n            new RandomLoadBalancer()) \n.addSlaveAddress(hostarr).setMasterConnectionPoolSize(10000).setSlaveConnectionPoolSize(\n            10000).setConnectTimeout(2000);\n        Redisson redisson = (Redisson)Redisson.create(config);\n        return redisson;\n    }\n```\n\nstacktrace:\n\n```\nCaused by: org.redisson.client.RedisConnectionException: Can't init enough connections amount! from /192.168.1.87:6379\n    at org.redisson.misc.ConnectionPool$2.operationComplete(ConnectionPool.java:95)\n    at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:680)\n    at io.netty.util.concurrent.DefaultPromise$2.run(DefaultPromise.java:592)\n    at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:358)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:357)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n```\n", "url": "https://github.com/redisson/redisson/issues/375", "user": "hrwhat", "labels": ["bug"], "created": "2016-01-15 06:05:06", "closed": "2016-02-03 11:23:50", "commits": {"f843275b7f733978d75564ed062ee4699f39488a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "f843275b7f733978d75564ed062ee4699f39488a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["01be3348b54bbbaf1ca0847fb8d4e9ac9cca937f"], "nameRev": "f843275b7f733978d75564ed062ee4699f39488a tags/redisson-2.2.7~4", "commitMessage": "Minimal connections amount initialization fixed. #375\n", "commitDateTime": "2016-02-03 14:23:10", "authoredDateTime": "2016-02-03 14:23:10", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/pool/ConnectionPool.java", "insertions": 53, "deletions": 34, "lines": 87}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.connectTo(org.redisson.connection.ClientConnectionsEntry)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.initConnections(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,boolean)", "TOT": 20, "UPD": 2, "INS": 1, "MOV": 16, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.get()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.createConnection(boolean,java.util.concurrent.atomic.AtomicInteger,org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,int,java.util.concurrent.atomic.AtomicInteger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.createConnection(boolean,java.util.concurrent.atomic.AtomicInteger,org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,int,java.util.concurrent.atomic.AtomicInteger).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.pool.ConnectionPool.initConnections(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,boolean).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f843275b7f733978d75564ed062ee4699f39488a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 53, "deletions": 34, "lines": 87, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 34, "UPD": 5, "INS": 7, "MOV": 19, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection/pool"], "changesInPackagesSPOON": ["org.redisson.connection.pool.ConnectionPool.connectTo(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.connection.pool.ConnectionPool.createConnection(boolean,java.util.concurrent.atomic.AtomicInteger,org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,int,java.util.concurrent.atomic.AtomicInteger)", "org.redisson.connection.pool.ConnectionPool.get()", "org.redisson.connection.pool.ConnectionPool.createConnection(boolean,java.util.concurrent.atomic.AtomicInteger,org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,int,java.util.concurrent.atomic.AtomicInteger).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.pool.ConnectionPool.initConnections(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,boolean).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.pool.ConnectionPool.initConnections(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,boolean)"]}, {"title": "A RMap error in 2.2.5", "body": "```\nConfig config = new Config();\n    config.setCodec(StringCodec.INSTANCE);\n    config.useSentinelServers()\n            .setMasterName(\"mymaster\")\n            .setDatabase(1)\n            .setMasterConnectionPoolSize(200)\n            .setSlaveConnectionPoolSize(200)\n            .setTimeout(6000)\n            .addSentinelAddress(\"192.168.1.200:26379\");\n    RedissonClient redisson = Redisson.create(config);\n\n    RMap<String, String> rmap = redisson.getMap(\"TestRMap01\");\n    rmap.delete();\n    rmap.put(\"A\", \"1\");\n    rmap.put(\"B\", \"1\");\n\n    System.out.println(\"************** *****************\");\n    System.out.println(\"A:\" + rmap.get(\"A\"));\n    System.out.println(\"B:\" + rmap.get(\"B\"));\n\n    System.out.println(\"************** *****************\");\n    Iterator<Map.Entry<String, String>> iterator = rmap.entrySet().iterator();\n    while (iterator.hasNext()) {\n        Map.Entry<String, String> next = iterator.next();\n        System.out.println(next.getKey() + \":\" + next.getValue());\n    }\n\n    redisson.shutdown();\n```\n\nthese codes work right in 2.2.4,but  in 2.2.5 will throw Exception:\n\nException in thread \"main\" io.netty.util.IllegalReferenceCountException: refCnt: 0\n    at io.netty.buffer.AbstractByteBuf.ensureAccessible(AbstractByteBuf.java:1177)\n    at io.netty.buffer.AbstractByteBuf.checkIndex(AbstractByteBuf.java:1120)\n    at io.netty.buffer.AbstractByteBuf.getByte(AbstractByteBuf.java:337)\n    at io.netty.buffer.ByteBufUtil.hashCode(ByteBufUtil.java:188)\n    at io.netty.buffer.AbstractByteBuf.hashCode(AbstractByteBuf.java:1077)\n    at java.util.HashMap.hash(HashMap.java:338)\n    at java.util.HashMap.put(HashMap.java:611)\n    at org.redisson.RedissonMapIterator.convert(RedissonMapIterator.java:66)\n    at org.redisson.RedissonMapIterator.hasNext(RedissonMapIterator.java:53)\n", "url": "https://github.com/redisson/redisson/issues/370", "user": "SaroLain", "labels": ["bug"], "created": "2016-01-11 03:27:01", "closed": "2016-01-11 09:16:36", "commits": {"9feaae35436f458dc0b92e1d3a3b728f71dcddc4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9feaae35436f458dc0b92e1d3a3b728f71dcddc4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4296880e59250c91b3bf5d440247354391d425c7"], "nameRev": "9feaae35436f458dc0b92e1d3a3b728f71dcddc4 tags/redisson-2.2.6~47", "commitMessage": "ByteBuf read position fixed in all codecs based on StringCodec.  #370\n", "commitDateTime": "2016-01-11 12:15:44", "authoredDateTime": "2016-01-11 12:15:44", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/codec/DoubleCodec.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "src/main/java/org/redisson/client/codec/IntegerCodec.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "src/main/java/org/redisson/client/codec/LongCodec.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "src/main/java/org/redisson/client/codec/StringCodec.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DoubleCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.DoubleCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "IntegerCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.IntegerCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LongCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.LongCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "StringCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.StringCodec.2.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9feaae35436f458dc0b92e1d3a3b728f71dcddc4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 10, "lines": 28, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 19, "UPD": 3, "INS": 9, "MOV": 4, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/codec"], "changesInPackagesSPOON": ["org.redisson.client.codec.StringCodec.2.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.client.codec.DoubleCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.client.codec.IntegerCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)", "org.redisson.client.codec.LongCodec.1.decode(io.netty.buffer.ByteBuf,org.redisson.client.handler.State)"]}, {"title": "this is a bug?I can't use RBatch\u3002", "body": "these codes will throw NullPointerException. but data has save into redis\n127.0.0.1:6379[1]> keys *\n1) \"A3\":\n\n```\n    Config config = new Config();\n    //config.setCodec(StringCodec.INSTANCE);\n    config.useSentinelServers()\n            .setMasterName(\"mymaster\")\n            .setDatabase(1)\n            .setMasterConnectionPoolSize(200)\n            .setSlaveConnectionPoolSize(200)\n            .setTimeout(6000)\n            .addSentinelAddress(\"127.0.0.1:26379\");\n    RedissonClient redisson = Redisson.create(config);\n    RBatch batch = redisson.createBatch();\n    batch.getBucket(\"A1\").setAsync(\"001\");\n    batch.getBucket(\"A2\").setAsync(\"001\");\n    batch.getBucket(\"A3\").setAsync(\"001\");\n    batch.getKeys().deleteAsync(\"A1\");\n    batch.getKeys().deleteAsync(\"A2\");\n    List result = batch.execute();\n```\n\nbut these codes work properly.\uff1a\n\n```\n    redisson.getBucket(\"A1\").setAsync(\"1\");\n    redisson.getBucket(\"A2\").setAsync(\"2\");\n    redisson.getBucket(\"A3\").setAsync(\"3\");\n    redisson.getKeys().deleteAsync(\"A1\");\n    redisson.getKeys().deleteAsync(\"A2\");\n```\n\nio.netty.handler.codec.DecoderException: java.lang.NullPointerException\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:244)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NullPointerException\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:556)\n    at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:406)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:282)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:190)\n    at org.redisson.client.handler.CommandDecoder.handleCommandsDataResponse(CommandDecoder.java:136)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:117)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\nException in thread \"main\" org.redisson.client.RedisTimeoutException: Redis server response timeout during command batch execution. Channel: [id: 0xa75e9bb2, /127.0.0.1:6213 => /127.0.0.1:6379]\n    at org.redisson.command.CommandBatchService$6.run(CommandBatchService.java:319)\n    at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:581)\n    at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:655)\n    at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:367)\n    at java.lang.Thread.run(Thread.java:745)\n", "url": "https://github.com/redisson/redisson/issues/361", "user": "SaroLain", "labels": ["bug"], "created": "2016-01-07 09:13:49", "closed": "2016-01-07 19:22:50", "commits": {"696884c9cae44a5a3a95f828a55a445b0dd5549e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "696884c9cae44a5a3a95f828a55a445b0dd5549e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["04b21e92a1e97ff87268c4642251aacbcc63ed29"], "nameRev": "696884c9cae44a5a3a95f828a55a445b0dd5549e tags/redisson-2.2.5~12", "commitMessage": "testBatchNPE added.  #361\n", "commitDateTime": "2016-01-07 12:55:08", "authoredDateTime": "2016-01-07 12:55:08", "commitGitStats": [{"filePath": "src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchNPE()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["696884c9cae44a5a3a95f828a55a445b0dd5549e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "I found a bug when using RMap! infinity loop!", "body": "Here is the code:\n        RMap<String, Objcet> pool = redisson.getMap(\"test\");\n\n```\n    Iterator<String> iterator = pool.keyIterator();\n    while (iterator.hasNext()) {\n        System.out.println(key);\n    }\n```\n\nthe loop is endless!!! I am sure there is only one Object in this map because program prints same key in the console !!\nHow to deal with it!?\n", "url": "https://github.com/redisson/redisson/issues/357", "user": "Joycai", "labels": ["bug"], "created": "2016-01-05 18:43:48", "closed": "2016-01-07 10:18:12", "commits": {"084d368cfacf4053a379a7df8da48c7d73813f09": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "9e3a1a308d0a94fb5a8880e2bb8ce935a98306db": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "084d368cfacf4053a379a7df8da48c7d73813f09", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f5ec498f6b19a6dd4693aeebb16bc65e9170e4a9"], "nameRev": "084d368cfacf4053a379a7df8da48c7d73813f09 tags/redisson-2.2.5~18", "commitMessage": "RMap iterator state comparison fixed. #357\n", "commitDateTime": "2016-01-06 14:57:32", "authoredDateTime": "2016-01-06 14:57:32", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonMap.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "src/main/java/org/redisson/RedissonMapCache.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "src/main/java/org/redisson/RedissonMapIterator.java", "insertions": 31, "deletions": 10, "lines": 41}, {"filePath": "src/main/java/org/redisson/client/codec/ScanCodec.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/ScanObjectEntry.java", "insertions": 38, "deletions": 0, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.scanIterator(java.net.InetSocketAddress,long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMap.valueIterator().1.getValue(java.util.Map$Entry)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMap.keyIterator().2.getValue(java.util.Map$Entry)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonMapCache.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapCache.putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapCache.getAsync(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonMapIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapIterator.getValue(java.util.Map$Entry)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMapIterator.convert(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.remove()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.hasNext()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMapIterator.getValue(java.util.Map$Entry).1.setValue(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScanCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.codec.ScanCodec", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScanObjectEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ScanObjectEntry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9e3a1a308d0a94fb5a8880e2bb8ce935a98306db", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["084d368cfacf4053a379a7df8da48c7d73813f09"], "nameRev": "9e3a1a308d0a94fb5a8880e2bb8ce935a98306db tags/redisson-2.2.5~17", "commitMessage": "RMapReactive possible infinity loop during iterator usage. #357\n", "commitDateTime": "2016-01-06 22:35:21", "authoredDateTime": "2016-01-06 22:35:21", "commitGitStats": [{"filePath": "src/main/java/org/redisson/reactive/RedissonMapReactive.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "src/main/java/org/redisson/reactive/RedissonMapReactiveIterator.java", "insertions": 28, "deletions": 8, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMapReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonMapReactive.scanIteratorReactive(java.net.InetSocketAddress,long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.reactive.RedissonMapReactive.valueIterator().1.getValue(java.util.Map$Entry)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.RedissonMapReactive.keyIterator().2.getValue(java.util.Map$Entry)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonMapReactiveIterator.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonMapReactiveIterator.stream().1.subscribe(org.reactivestreams.Subscriber).1.nextValues().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.RedissonMapReactiveIterator.getValue(java.util.Map$Entry)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.reactive.RedissonMapReactiveIterator.stream().1.subscribe(org.reactivestreams.Subscriber).1.convert(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.reactive.RedissonMapReactiveIterator.stream().1.subscribe(org.reactivestreams.Subscriber).1.nextValues().1.onNext(org.redisson.client.protocol.decoder.MapScanResult)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["084d368cfacf4053a379a7df8da48c7d73813f09", "9e3a1a308d0a94fb5a8880e2bb8ce935a98306db"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 201, "deletions": 33, "lines": 234, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 40, "UPD": 1, "INS": 23, "MOV": 12, "DEL": 4, "spoonFilesChanged": 7, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/reactive", "src/main/java/org/redisson", "src/main/java/org/redisson/client/protocol/decoder", "src/main/java/org/redisson/client/codec"], "changesInPackagesSPOON": ["org.redisson.RedissonMapCache.getAsync(java.lang.Object)", "org.redisson.RedissonMapIterator.remove()", "org.redisson.RedissonMap.scanIterator(java.net.InetSocketAddress,long)", "org.redisson.reactive.RedissonMapReactiveIterator.stream().1.subscribe(org.reactivestreams.Subscriber).1.convert(java.util.Map)", "org.redisson.client.protocol.decoder.ScanObjectEntry", "org.redisson.reactive.RedissonMapReactive.keyIterator().2.getValue(java.util.Map$Entry)", "org.redisson.RedissonMap.keyIterator().2.getValue(java.util.Map$Entry)", "org.redisson.RedissonMapCache.putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)", "org.redisson.client.codec.ScanCodec", "org.redisson.RedissonMap.valueIterator().1.getValue(java.util.Map$Entry)", "org.redisson.RedissonMapIterator.convert(java.util.Map)", "org.redisson.reactive.RedissonMapReactiveIterator.getValue(java.util.Map$Entry)", "org.redisson.RedissonMapIterator.getValue(java.util.Map$Entry).1.setValue(java.lang.Object)", "org.redisson.RedissonMapIterator.hasNext()", "org.redisson.reactive.RedissonMapReactive.scanIteratorReactive(java.net.InetSocketAddress,long)", "org.redisson.reactive.RedissonMapReactive.valueIterator().1.getValue(java.util.Map$Entry)", "org.redisson.reactive.RedissonMapReactiveIterator.stream().1.subscribe(org.reactivestreams.Subscriber).1.nextValues().1.onNext(org.redisson.client.protocol.decoder.MapScanResult)", "org.redisson.RedissonMapIterator.getValue(java.util.Map$Entry)", "org.redisson.reactive.RedissonMapReactiveIterator.stream().1.subscribe(org.reactivestreams.Subscriber).1.nextValues().1"]}, {"title": "A problem", "body": "```\n    This is a simple code:\n\n    Config config = new Config();\nconfig.setCodec(new JsonJacksonCodec());\n    config.useSingleServer().setAddress(\"127.0.0.1:6379\");\n\n    RedissonClient redisson = Redisson.create(config);\n\n    RMap<String, Integer> map = redisson.getMap(\"getAll\");\n    map.put(\"str\", 100);\n\n    Integer res = map.addAndGet(\"str\", 12);\n    System.out.println(res);\n    res = map.get(\"str\");\n    System.out.println(res);\n\n    RMap<String, Double> map2 = redisson.getMap(\"getAll2\");\n    map2.put(\"str\", new Double(100.2));\n\n    Double res2 = map2.addAndGet(\"str\", new Double(12.1));\n    System.out.println(res2);\n    res2 = map2.get(\"str\");\n    System.out.println(res2);\n\n    redisson.shutdown();\n\n    Look at the attach picture..RMap<String, Integer> generate two key:str and \"str\", It seems to be a bug..But RMap<Integer, Integer> will be all right..\n```\n\n![problem](https://cloud.githubusercontent.com/assets/2639932/12060142/0838ff02-afa4-11e5-9371-f83f3113f4fb.png)\n", "url": "https://github.com/redisson/redisson/issues/350", "user": "damacheng009", "labels": ["bug"], "created": "2015-12-31 01:57:25", "closed": "2015-12-31 09:00:07", "commits": {"2fc7d7cf93311845bcc10f383b0474ce901a8c20": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2fc7d7cf93311845bcc10f383b0474ce901a8c20", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b5977c9eafb2312a69a174e0b9ee4e48c8b61e8f"], "nameRev": "2fc7d7cf93311845bcc10f383b0474ce901a8c20 tags/redisson-2.2.5~31", "commitMessage": "RMap.addAndGetAsync key encoding fixed. #350\n", "commitDateTime": "2015-12-31 10:05:13", "authoredDateTime": "2015-12-31 10:05:13", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonMap.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "src/main/java/org/redisson/reactive/RedissonMapReactive.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "src/test/java/org/redisson/RedissonMapReactiveTest.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "src/test/java/org/redisson/RedissonMapTest.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.addAndGetAsync(java.lang.Object,java.lang.Number)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonMapReactive.java", "spoonMethods": [{"spoonMethodName": "org.redisson.reactive.RedissonMapReactive.addAndGet(java.lang.Object,java.lang.Number)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedissonMapReactiveTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapReactiveTest.testAddAndGet()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapTest.testAddAndGet()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2fc7d7cf93311845bcc10f383b0474ce901a8c20"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 7, "lines": 25, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/protocol", "src/main/java/org/redisson", "src/main/java/org/redisson/reactive"], "changesInPackagesSPOON": ["org.redisson.reactive.RedissonMapReactive.addAndGet(java.lang.Object,java.lang.Number)", "org.redisson.RedissonMap.addAndGetAsync(java.lang.Object,java.lang.Number)", "org.redisson.client.protocol"]}, {"title": "pollLastAndOfferFirstToAsync does not block properly", "body": "`RedissonBlockingQueue#pollLastAndOfferFirstTo(String queueName, long timeout, TimeUnit unit)` does not seem to behave as defined in http://redis.io/commands/brpoplpush\n\nI'm expecting the invocation in this piece of code to block until there is an element in `myqueue`. Instead it continues after 1 second and returns null.\n\n``` java\nRBlockingQueue<Object> queue = redisson.getBlockingQueue(\"myqueue\");\nObject obj = queue.pollLastAndOfferFirstTo(\"myotherqueue\", 0, TimeUnit.SECONDS);\n// stops blocking after 1 second\nSystem.out.println(obj); // \"null\"\n```\n\na different time interval doesn't change the behavior either.\n\ni've also tried using the lower level functions:\n\n``` java\nFuture<T> res = commandExecutor.writeAsync(name, connectionManager.getCodec(), BRPOPLPUSH, name, otherName, 10);\nres.get();\n```\n\nthis should wait 10 seconds before returning null on an empty list, however it fails because of a `RedisTimeoutException`\n\n```\nCaused by: org.redisson.client.RedisTimeoutException: Redis server response timeout (1000 ms) occured for command: (BRPOPLPUSH) with params: [myqueue, myotherqueue, 10] channel: [id: 0x43d68643, /127.0.0.1:58584 => /127.0.0.1:6379]\n    at org.redisson.command.CommandAsyncService$8.run(CommandAsyncService.java:446)\n    at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:581)\n    at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:655)\n    at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:367)\n    at java.lang.Thread.run(Thread.java:745)\n```\n", "url": "https://github.com/redisson/redisson/issues/349", "user": "thrau", "labels": ["bug"], "created": "2015-12-30 18:22:24", "closed": "2015-12-31 06:35:15", "commits": {"8c96970bf0277a513c3dbd355af9a949b15111dc": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8c96970bf0277a513c3dbd355af9a949b15111dc", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cde8082493c23b87b9e82ad802da173834e1520d"], "nameRev": "8c96970bf0277a513c3dbd355af9a949b15111dc tags/redisson-2.2.5~33", "commitMessage": "pollLastAndOfferFirstToAsync does not block properly. #349\n", "commitDateTime": "2015-12-30 21:54:42", "authoredDateTime": "2015-12-30 21:54:42", "commitGitStats": [{"filePath": "src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandAsyncService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPollLastAndOfferFirstTo()", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testBlockingQueue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testBlockingQueue().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8c96970bf0277a513c3dbd355af9a949b15111dc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/command"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService", "org.redisson.command.CommandAsyncService.checkWriteFuture(org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)"]}, {"title": "Redisson cluster Read connections issue", "body": "I use Redisson 2.2 to implement distributed lock in my project and use Redis cluster.  And I found the Redisson client will create new connection and do not use the connection in the pool while invoke some readOnly methods which execute evalRead. So when I start to run the test it will produce lots of TIME_WAIT connection on my server. The followings are some logs on my server.\n`\n12/24/15 08:59:06:949: [SimpleProcessor-0]: DEBUG org.redisson.cluster.ClusterConnectionManager - slot 8978 for USER_WALLETS-test\n`\n`\n12/24/15 08:59:06:949: [nioEventLoopGroup-2-2]: DEBUG org.redisson.command.CommandSyncService - getting connection for command (EVAL) from slot NodeSource [slot=8978, addr=null, redirect=null] using node /192.168.1.51:2500\n`\n`\n12/24/15 08:59:06:950: [nioEventLoopGroup-2-6]: DEBUG org.redisson.connection.ClientConnectionsEntry - new connection created: RedisConnection [redisClient=RedisClient [addr=/168.168.1.54:2000], channel=[id: 0xc239f9bb, /192.168.1.11:43560 => /192.168.1.54:2000]]\n`\n`\n12/24/15 08:59:06:951: [nioEventLoopGroup-2-4]: DEBUG org.redisson.command.CommandSyncService - getting connection for command (EVAL) from slot NodeSource [slot=8978, addr=/192.168.1.54:2000, redirect=MOVED] using node /168.168.1.54:2000\n`\nThe codes are very spectacular and I only understand a bit. But I doubt whether the client get the connection from the pool but also create a new one?\n", "url": "https://github.com/redisson/redisson/issues/345", "user": "zhxjouc", "labels": ["bug"], "created": "2015-12-24 10:38:14", "closed": "2016-01-05 06:46:28", "commits": {"3446ec696291a3e74fae02a6fb88b2f5b3e665f7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "3446ec696291a3e74fae02a6fb88b2f5b3e665f7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["db8b2e7f7896213f0696d81e390c121207a65f25"], "nameRev": "3446ec696291a3e74fae02a6fb88b2f5b3e665f7 tags/redisson-2.2.5~25", "commitMessage": "connection handling when isReadFromSlaves = false fixed.  #345\n", "commitDateTime": "2016-01-04 11:32:45", "authoredDateTime": "2016-01-04 11:32:45", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 29, "deletions": 9, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig,boolean)", "TOT": 17, "UPD": 4, "INS": 4, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig,boolean).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3446ec696291a3e74fae02a6fb88b2f5b3e665f7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 9, "lines": 38, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 22, "UPD": 4, "INS": 8, "MOV": 9, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig,boolean)", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig,boolean).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "How to not throw an exception on connection error and retry infinitely", "body": "I'm add Redis as a non-crucial data store (application can survive without it). However, when redis is down, the application will not start and will throw `Exception in thread \"main\" org.redisson.client.RedisConnectionException: Can't init enough connections amount!`. I would like the application to continue as usual, ideally to retry infinitely. I couldn't find this setting, and it seems like there's no way to catch the exception. Any ideas?\n", "url": "https://github.com/redisson/redisson/issues/343", "user": "knguyen142", "labels": ["bug"], "created": "2015-12-23 02:49:02", "closed": "2015-12-25 08:52:09", "commits": {"bcde8ca15eb36cdc792954b930d86627401c4401": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "34812e3ce771951c9d9aa3aeeebb162ec309cf71": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "bcde8ca15eb36cdc792954b930d86627401c4401", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d3b2cb3213f9d332e6697dc4ce9b7a2525e900dd"], "nameRev": "bcde8ca15eb36cdc792954b930d86627401c4401 tags/redisson-2.2.4~6", "commitMessage": "RedisConnectionException should be throw if Redisson can't connect to servers.  #343\n", "commitDateTime": "2015-12-23 16:56:02", "authoredDateTime": "2015-12-23 16:56:02", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 20, "deletions": 10, "lines": 30}, {"filePath": "src/main/java/org/redisson/connection/ElasticacheConnectionManager.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.connect(org.redisson.ClusterServersConfig,java.net.URI)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.connect(org.redisson.ClusterServersConfig,java.net.URI,boolean)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.ClusterServersConfig,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).2.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElasticacheConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ElasticacheConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "34812e3ce771951c9d9aa3aeeebb162ec309cf71", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cfa8872bc067308a3ccde0547b14f97f8eb69008"], "nameRev": "34812e3ce771951c9d9aa3aeeebb162ec309cf71 tags/redisson-2.2.7~30", "commitMessage": "RedisConnectionException should be throw if Redisson can't connect to servers. Fix for single server and master slave modes #343\n", "commitDateTime": "2016-01-28 14:57:37", "authoredDateTime": "2016-01-28 14:57:37", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "src/main/java/org/redisson/connection/PubSubConnectionEntry.java", "insertions": 0, "deletions": 4, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.BaseMasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bcde8ca15eb36cdc792954b930d86627401c4401", "34812e3ce771951c9d9aa3aeeebb162ec309cf71"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 37, "deletions": 21, "lines": 58, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 27, "UPD": 3, "INS": 14, "MOV": 6, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterConnectionManager.connect(org.redisson.ClusterServersConfig,java.net.URI)", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.cluster.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).2.run()", "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.MasterSlaveConnectionManager.create(org.redisson.BaseMasterSlaveServersConfig)", "org.redisson.connection.ElasticacheConnectionManager", "org.redisson.cluster.ClusterConnectionManager.connect(org.redisson.ClusterServersConfig,java.net.URI,boolean)", "org.redisson.connection.PubSubConnectionEntry", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig,boolean)", "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.ClusterServersConfig,java.util.Collection)", "org.redisson.connection.SentinelConnectionManager"]}, {"title": "New version 2.1.4 or greater performance is low.", "body": "When I use redisson 2.1.3 the ubuntu's load average is 1.8 ~ 2.3; but I use 2.1.4 or greater, the load average is often greater than 3.00, my java application often overload.\n", "url": "https://github.com/redisson/redisson/issues/338", "user": "lefay1982", "labels": ["bug"], "created": "2015-12-17 13:23:43", "closed": "2016-01-09 05:31:26", "commits": {"b0d9803593f619bd14531c6a88a58e8dce18e45e": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "e17a9ce303793becf429b4223ebb931568d099f1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "ca6be04b0ee3822072185b7b2570a8845eaeb284": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "7a64333f0f209e3e3709aec3886cfe3db27f22d6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "35870151801c8a4e308164f5b401cbed55f51118": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "ae72c05b93816a5211f60ca94b3cbfe192d6c6aa": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "fac418e9f675262c9c01157a50d18a9ce6b1d0b6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "4c897806f6a84a5bc9347ff92c007ae517a03fa1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "b0d9803593f619bd14531c6a88a58e8dce18e45e", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9468dd6fc0718b6fc069f3f6aa495ce680861dad"], "nameRev": "b0d9803593f619bd14531c6a88a58e8dce18e45e tags/redisson-2.2.4~26", "commitMessage": "Object allocation optimization. #338\n", "commitDateTime": "2015-12-18 13:35:07", "authoredDateTime": "2015-12-18 13:35:07", "commitGitStats": [{"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/misc/ConnectionPool.java", "insertions": 28, "deletions": 14, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.newSucceededFuture(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newSucceededFuture()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newSucceededFuture(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise)", "TOT": 12, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.initConnections(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,boolean)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.get()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.get(org.redisson.connection.ClientConnectionsEntry)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseSuccessful(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseSuccessful(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.connectTo(org.redisson.connection.ClientConnectionsEntry)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e17a9ce303793becf429b4223ebb931568d099f1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b0d9803593f619bd14531c6a88a58e8dce18e45e"], "nameRev": "e17a9ce303793becf429b4223ebb931568d099f1 tags/redisson-2.2.4~25", "commitMessage": "Success\\Failed Future listener notification optimization. #338\n", "commitDateTime": "2015-12-18 15:12:57", "authoredDateTime": "2015-12-18 15:12:57", "commitGitStats": [{"filePath": "src/main/java/org/redisson/command/AsyncDetails.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 45, "deletions": 47, "lines": 92}, {"filePath": "src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 20, "deletions": 19, "lines": 39}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/FastCompleteFuture.java", "insertions": 75, "deletions": 0, "lines": 75}, {"filePath": "src/main/java/org/redisson/connection/FastFailedFuture.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "src/main/java/org/redisson/connection/FastSuccessFuture.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "src/main/java/org/redisson/connection/balancer/LoadBalancerManagerImpl.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AsyncDetails.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.AsyncDetails", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 12, "UPD": 10, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 25, "UPD": 8, "INS": 5, "MOV": 11, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.evalReadAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.evalReadAsync(java.net.InetSocketAddress,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.evalWriteAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.command.CommandAsyncService.evalAsync(org.redisson.connection.NodeSource,boolean,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CommandBatchService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int)", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 10, "UPD": 10, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.run(io.netty.util.Timeout)", "TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FastCompleteFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.FastCompleteFuture", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FastFailedFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.FastFailedFuture", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FastSuccessFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.FastSuccessFuture", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newSucceededFuture(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newFailedFuture(java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancerManagerImpl.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.balancer.LoadBalancerManagerImpl.getConnection(java.net.InetSocketAddress)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ca6be04b0ee3822072185b7b2570a8845eaeb284", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e17a9ce303793becf429b4223ebb931568d099f1"], "nameRev": "ca6be04b0ee3822072185b7b2570a8845eaeb284 tags/redisson-2.2.4~24", "commitMessage": "SuccessFuture allocation optimization. #338\n", "commitDateTime": "2015-12-18 16:30:26", "authoredDateTime": "2015-12-18 16:30:26", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "src/main/java/org/redisson/client/RedisPubSubConnection.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/FastSuccessFuture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/misc/ConnectionPool.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.getAcquireFuture()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisPubSubConnection.java", "spoonMethods": []}, {"spoonFilePath": "FastSuccessFuture.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.FastSuccessFuture", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseSuccessful(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7a64333f0f209e3e3709aec3886cfe3db27f22d6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ca6be04b0ee3822072185b7b2570a8845eaeb284"], "nameRev": "7a64333f0f209e3e3709aec3886cfe3db27f22d6 tags/redisson-2.2.4~23", "commitMessage": "CommandsQueue object allocations optimization. #338\n", "commitDateTime": "2015-12-18 16:40:33", "authoredDateTime": "2015-12-18 16:40:33", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/client/handler/CommandsQueue.java", "insertions": 20, "deletions": 16, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleCommandsDataResponse(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.Decoder,org.redisson.client.protocol.CommandsData)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandsQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendNextCommand(io.netty.channel.ChannelHandlerContext)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.ChannelHandlerContext)", "TOT": 10, "UPD": 5, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.CommandsQueue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.Channel)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.ChannelHandlerContext).1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.ChannelHandlerContext).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "35870151801c8a4e308164f5b401cbed55f51118", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7a64333f0f209e3e3709aec3886cfe3db27f22d6"], "nameRev": "35870151801c8a4e308164f5b401cbed55f51118 tags/redisson-2.2.4~22", "commitMessage": "Minor optimization. #338\n", "commitDateTime": "2015-12-18 16:50:00", "authoredDateTime": "2015-12-18 16:50:00", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/protocol/CommandData.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "src/main/java/org/redisson/client/protocol/CommandsData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "src/main/java/org/redisson/client/protocol/QueueCommand.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandData.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.CommandData.getPubSubOperations()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CommandsData.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.CommandsData.getPubSubOperations()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "QueueCommand.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ae72c05b93816a5211f60ca94b3cbfe192d6c6aa", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["35870151801c8a4e308164f5b401cbed55f51118"], "nameRev": "ae72c05b93816a5211f60ca94b3cbfe192d6c6aa tags/redisson-2.2.4~21", "commitMessage": "Sentinel connection optimization. #338\n", "commitDateTime": "2015-12-18 17:08:10", "authoredDateTime": "2015-12-18 17:08:10", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 52, "deletions": 35, "lines": 87}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig)", "TOT": 19, "UPD": 3, "INS": 5, "MOV": 10, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig).1.onMessage(java.lang.String,java.lang.String)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "fac418e9f675262c9c01157a50d18a9ce6b1d0b6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f45244b979f1115addad39732e6063a9b2e246d3"], "nameRev": "fac418e9f675262c9c01157a50d18a9ce6b1d0b6 tags/redisson-2.2.4~17", "commitMessage": "Memory allocation optimization. #338\n", "commitDateTime": "2015-12-21 15:41:18", "authoredDateTime": "2015-12-21 15:41:18", "commitGitStats": [{"filePath": "src/main/java/org/redisson/command/AsyncDetails.java", "insertions": 104, "deletions": 1, "lines": 105}, {"filePath": "src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 195, "deletions": 127, "lines": 322}, {"filePath": "src/main/java/org/redisson/command/CommandBatchService.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "src/main/java/org/redisson/connection/NodeSource.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "4c897806f6a84a5bc9347ff92c007ae517a03fa1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b70dd92b6d867b79e4b457040f4f355aecc6941e"], "nameRev": "4c897806f6a84a5bc9347ff92c007ae517a03fa1 tags/redisson-2.2.4~14", "commitMessage": "Connection leak fixed. #338\n", "commitDateTime": "2015-12-22 15:18:08", "authoredDateTime": "2015-12-22 15:17:56", "commitGitStats": [{"filePath": "src/main/java/org/redisson/command/CommandAsyncService.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandAsyncService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.command.CommandAsyncService.releaseConnection(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b0d9803593f619bd14531c6a88a58e8dce18e45e", "e17a9ce303793becf429b4223ebb931568d099f1", "ca6be04b0ee3822072185b7b2570a8845eaeb284", "7a64333f0f209e3e3709aec3886cfe3db27f22d6", "35870151801c8a4e308164f5b401cbed55f51118", "ae72c05b93816a5211f60ca94b3cbfe192d6c6aa", "fac418e9f675262c9c01157a50d18a9ce6b1d0b6", "4c897806f6a84a5bc9347ff92c007ae517a03fa1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 8, "gitStatsSummary": {"insertions": 757, "deletions": 293, "lines": 1050, "gitFilesChange": 21}, "spoonStatsSummary": {"TOT": 233.0, "UPD": 96.0, "INS": 47.0, "MOV": 55.0, "DEL": 35.0, "spoonFilesChanged": 18, "spoonMethodsChanged": 58}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/command", "src/main/java/org/redisson/connection", "src/main/java/org/redisson/misc", "src/main/java/org/redisson/client", "src/main/java/org/redisson/cluster", "src/main/java/org/redisson/connection/balancer", "src/main/java/org/redisson/client/protocol", "src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int)", "org.redisson.connection.FastSuccessFuture", "org.redisson.misc.ConnectionPool.promiseSuccessful(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.newSucceededFuture(java.lang.Object)", "org.redisson.connection.FastFailedFuture", "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise)", "org.redisson.client.handler.CommandsQueue.sendNextCommand(io.netty.channel.ChannelHandlerContext)", "org.redisson.connection.balancer.LoadBalancerManagerImpl.getConnection(java.net.InetSocketAddress)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).2.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.ChannelHandlerContext)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.command.CommandAsyncService.evalAsync(org.redisson.connection.NodeSource,boolean,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.command.CommandAsyncService.releaseConnection(org.redisson.connection.NodeSource,org.redisson.command.AsyncDetails,org.redisson.client.RedisConnection)", "org.redisson.misc.ConnectionPool.get(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.command.CommandAsyncService.evalWriteAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.misc.ConnectionPool.get()", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.net.InetSocketAddress)", "org.redisson.command.CommandAsyncService.evalReadAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.client.RedisConnection.getAcquireFuture()", "org.redisson.misc.ConnectionPool.initConnections(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,boolean)", "org.redisson.connection.newSucceededFuture(java.lang.Object)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.connection.FastCompleteFuture", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig).1.onMessage(java.lang.String,java.lang.String)", "org.redisson.connection.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference)", "org.redisson.client.RedisConnection", "org.redisson.command.AsyncDetails", "org.redisson.misc.ConnectionPool.connectTo(org.redisson.connection.ClientConnectionsEntry)", "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.ChannelHandlerContext).1", "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.ClientConnectionsEntry,org.redisson.client.RedisConnection)", "org.redisson.command.CommandAsyncService.evalReadAsync(java.net.InetSocketAddress,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int)", "org.redisson.client.handler.CommandsQueue", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.connection.MasterSlaveConnectionManager.newFailedFuture(java.lang.Throwable)", "org.redisson.client.protocol.CommandsData.getPubSubOperations()", "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.ChannelHandlerContext).1.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.client.protocol.CommandData.getPubSubOperations()", "org.redisson.connection.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference)", "org.redisson.connection.SentinelConnectionManager", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.run(io.netty.util.Timeout)", "org.redisson.client.protocol", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.command.CommandAsyncService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.misc.ConnectionPool.promiseSuccessful(org.redisson.connection.ClientConnectionsEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "org.redisson.command.CommandBatchService.execute(org.redisson.command.CommandBatchService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.Channel)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference)", "org.redisson.connection.MasterSlaveConnectionManager.psubscribe(java.lang.String,org.redisson.client.codec.Codec)", "org.redisson.client.handler.CommandDecoder.handleCommandsDataResponse(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.Decoder,org.redisson.client.protocol.CommandsData)", "org.redisson.connection.MasterSlaveConnectionManager.newSucceededFuture()"]}, {"title": "RLock did not work", "body": "It's very wired. I just run a very simple test case to try redisson lock. But the result is not good. \nCan anyone show me why RLock didn't work?\n\n``` java\n//here is my codes\n        for (int k = 0; k < 10; k++)\n            new Thread() {\n                public void run() {\n                    try {\n                        Thread.sleep(1000 + new Random().nextInt(100));\n                    } catch (InterruptedException e) {\n                    }\n\n                    RedissonClient redisson = Redisson.create(config);\n                    RLock lock = redisson.getLock(\"anyLock\");\n                    lock.lock();\n\n                    RAtomicLong atomicLong = redisson.getAtomicLong(\"anyAtomicLong\");\n                    long i = atomicLong.get();\n                    i++;\n                    atomicLong.set(i);\n                    System.out.println(\"number is: \" + atomicLong.get());\n\n                    lock.unlock();\n                    redisson.shutdown();\n                }\n            }.start();\n```\n\nThe results are as below. It seems the lock failed completely.\nnumber is: 1\nnumber is: 2\nnumber is: 3\nnumber is: 5\nnumber is: 5\nnumber is: 6\nnumber is: 6\nnumber is: 7\nnumber is: 8\nnumber is: 8\n", "url": "https://github.com/redisson/redisson/issues/329", "user": "monoceros", "labels": ["bug"], "created": "2015-12-15 10:40:34", "closed": "2015-12-15 16:03:42", "commits": {"54e8cc5529af955be90c450f630e6bfcd4700a16": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "54e8cc5529af955be90c450f630e6bfcd4700a16", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0b8d1ae74d615c40818a266420a79b1123c5ea82"], "nameRev": "54e8cc5529af955be90c450f630e6bfcd4700a16 tags/redisson-2.2.3~6", "commitMessage": "RLock expiration renewal task scheduling fixed (again). #329\n", "commitDateTime": "2015-12-15 19:02:43", "authoredDateTime": "2015-12-15 19:02:43", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonLockTest.java", "insertions": 17, "deletions": 3, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.tryLockInner()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockTest.testUnlockFail()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLockTest.testUnlockFail().7.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["54e8cc5529af955be90c450f630e6bfcd4700a16"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.tryLockInner()"]}, {"title": "an error in RedissonSortedSet ", "body": "RedissonSortedSet(Codec codec, CommandExecutor commandExecutor, String name) without \n\"this.commandExecutor = commandExecutor;\" \ncause throw NullPointerException at loadComparator()\u3002\n\n```\nprotected RedissonSortedSet(CommandExecutor commandExecutor, String name) {\n    super(commandExecutor, name);\n    this.commandExecutor = commandExecutor;\n\n    loadComparator();\n\n    commandExecutor.write(getName(), StringCodec.INSTANCE, RedisCommands.SETNX, getCurrentVersionKey(), 0L);\n}\n```\n\n---\n\n```\n public RedissonSortedSet(Codec codec, CommandExecutor commandExecutor, String name) {\n    super(codec, commandExecutor, name);\n\n    loadComparator();\n\n    commandExecutor.write(getName(), StringCodec.INSTANCE, RedisCommands.SETNX, getCurrentVersionKey(), 0L);\n}\n```\n", "url": "https://github.com/redisson/redisson/issues/328", "user": "SaroLain", "labels": ["bug"], "created": "2015-12-15 04:28:42", "closed": "2015-12-15 10:52:39", "commits": {"365d1fe63b19d3edecc5131bfa9f2464facd9f0b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "365d1fe63b19d3edecc5131bfa9f2464facd9f0b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3e5ea61ade4283ee4f93d6345c813089a1e35246"], "nameRev": "365d1fe63b19d3edecc5131bfa9f2464facd9f0b tags/redisson-2.2.3~9", "commitMessage": "RedissonSortedSet NPE fixed. #328\n", "commitDateTime": "2015-12-15 13:52:21", "authoredDateTime": "2015-12-15 13:52:21", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonSortedSet.java", "insertions": 1, "deletions": 4, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSortedSet", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["365d1fe63b19d3edecc5131bfa9f2464facd9f0b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 4, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSortedSet"]}, {"title": "bug! expire expireAsync use toSeconds with PEXPIRE", "body": "```\n@Override\npublic boolean expire(long timeToLive, TimeUnit timeUnit) {\n    return commandExecutor.get(expireAsync(timeToLive, timeUnit));\n}\n\n@Override\npublic Future<Boolean> expireAsync(long timeToLive, TimeUnit timeUnit) {\n    return commandExecutor.writeAsync(getName(), StringCodec.INSTANCE, RedisCommands.PEXPIRE, getName(), timeUnit.toSeconds(timeToLive));\n}\n```\n\nthe code above timeUnit.toSeconds is wrong,shoud be toMillis\n", "url": "https://github.com/redisson/redisson/issues/324", "user": "flym", "labels": ["bug"], "created": "2015-12-14 03:32:12", "closed": "2015-12-14 07:34:28", "commits": {"44f255c0b0ebb3289106166a4b4485a4b88009ee": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "44f255c0b0ebb3289106166a4b4485a4b88009ee", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["27729e9a0397add107ac91b4ec8e1c1cd662f69c"], "nameRev": "44f255c0b0ebb3289106166a4b4485a4b88009ee tags/redisson-2.2.2~5", "commitMessage": "RedissonExpirable.expireAsync timeUnit precision fixed. #324\n", "commitDateTime": "2015-12-14 10:33:25", "authoredDateTime": "2015-12-14 10:32:52", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonExpirable.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonExpirable.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonExpirable.expireAsync(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["44f255c0b0ebb3289106166a4b4485a4b88009ee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonExpirable.expireAsync(long,java.util.concurrent.TimeUnit)"]}, {"title": "\u0421heck lock existence in forceUnlockAsync method", "body": "", "url": "https://github.com/redisson/redisson/issues/305", "user": "mrniko", "labels": ["bug"], "created": "2015-11-28 08:15:39", "closed": "2015-12-03 14:16:39", "commits": {"0385443b568cf422dbe19ce743e5f5c8f9737d19": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "0385443b568cf422dbe19ce743e5f5c8f9737d19", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a9055f1c3b0feee5e478326f7d1d33d671a984e8"], "nameRev": "0385443b568cf422dbe19ce743e5f5c8f9737d19 tags/redisson-2.1.7~4", "commitMessage": "RLock.delete result fixed. #305\n", "commitDateTime": "2015-12-03 17:16:12", "authoredDateTime": "2015-12-03 17:16:12", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonCountDownLatch.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 6, "deletions": 10, "lines": 16}, {"filePath": "src/test/java/org/redisson/BaseConcurrentTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "src/test/java/org/redisson/BaseTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/test/java/org/redisson/ConcurrentRedissonSortedSetTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "src/test/java/org/redisson/RedissonConcurrentMapTest.java", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "src/test/java/org/redisson/RedissonCountDownLatchConcurrentTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonLockTest.java", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "src/test/java/org/redisson/RedissonRunnable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonTopicPatternTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "src/test/java/org/redisson/RedissonTwoLockedThread.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCountDownLatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCountDownLatch.deleteAsync()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.forceUnlockAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.delete()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BaseConcurrentTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseConcurrentTest.testSingleInstanceConcurrency(int,org.redisson.RedissonRunnable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseConcurrentTest.testMultiInstanceConcurrency(int,org.redisson.RedissonRunnable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseConcurrentTest.testMultiInstanceConcurrency(int,org.redisson.RedissonRunnable).1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseTest.createInstance()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConcurrentRedissonSortedSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.ConcurrentRedissonSortedSetTest.testAdd_SingleInstance()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.ConcurrentRedissonSortedSetTest.testAddNegative_SingleInstance()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.ConcurrentRedissonSortedSetTest.testAdd_SingleInstance().1.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.ConcurrentRedissonSortedSetTest.testAddNegative_SingleInstance().2.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonConcurrentMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.test_Multi_Replace_MultiInstance()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.testSingleReplaceOldValue_SingleInstance().1.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.testSingleRemoveValue_SingleInstance().2.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.testSingleReplace_SingleInstance().3.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.test_Multi_Replace_MultiInstance().4.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.test_Multi_RemoveValue_MultiInstance().5.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.testSinglePutIfAbsent_SingleInstance().6.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.testMultiPutIfAbsent_SingleInstance().7.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.testMultiPutIfAbsent_MultiInstance().8.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.testMultiPut_SingleInstance().9.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonConcurrentMapTest.testMultiPut_MultiInstance().10.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonCountDownLatchConcurrentTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCountDownLatchConcurrentTest.testSingleCountDownAwait_SingleInstance()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockTest.testAutoExpire().2.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLockTest.testConcurrency_SingleInstance().8.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLockTest.testConcurrencyLoop_MultiInstance().9.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLockTest.testConcurrency_MultiInstance().10.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLockTest.testDelete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonRunnable.java", "spoonMethods": [{"spoonMethodName": "org.redisson.run(org.redisson.Redisson)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest.testSer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicPatternTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicPatternTest.testUnsubscribe()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicPatternTest.testLazyUnsubscribe()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicPatternTest.test()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicPatternTest.testListenerRemove()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testInnerPublish()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testStatus()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testUnsubscribe()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testLazyUnsubscribe()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.test()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testHeavyLoad()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testListenerRemove()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTwoLockedThread.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTwoLockedThread", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0385443b568cf422dbe19ce743e5f5c8f9737d19"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 12, "lines": 23, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10, "UPD": 3, "INS": 3, "MOV": 2, "DEL": 2, "spoonFilesChanged": 4, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.run(org.redisson.Redisson)", "org.redisson.RedissonCountDownLatch.deleteAsync()", "org.redisson.RedissonLock.delete()", "org.redisson.RedissonLock.forceUnlockAsync()", "org.redisson.RedissonTwoLockedThread"]}, {"title": "Ping fails if requirePass is set", "body": "Can't ping single node either with ping or pingAll commands - getting `NOAUTH Authentication required`\n\nPiece of code\n\n``` java\nCollection<Node> nodes = redisson.getNodesGroup().getNodes();\nMap<Node, Boolean> statuses = mapToMap(nodes, k -> k, Node::ping);\nboolean dbIsReady = !statuses.values().stream().filter(bool -> !bool).findFirst().isPresent();\nif (!dbIsReady) {\n    List<InetSocketAddress> hosts = nodes.stream().map(Node::getAddr).collect(toList());\n    log.warn(\"Could not reach redis nodes : {}\", hosts);\n    return;\n}\n```\n\nFull exception\n`DefaultPromise@1409814d(failure(org.redisson.client.RedisException: NOAUTH Authentication required.. channel: [id: 0x3299d81d, /127.0.0.1:35080 => /127.0.0.1:6379] command: CommandData [promise=DefaultPromise@1409814d(incomplete), command=(PING), params=[], codec=null])`\n\n_ENV_\nServer: 3.0.3\nClient: 2.1.5\n", "url": "https://github.com/redisson/redisson/issues/304", "user": "Kindrat", "labels": ["bug"], "created": "2015-11-27 20:46:53", "closed": "2015-11-30 08:22:35", "commits": {"3d507c4fec3c5e21a83fa55b704cbda5b9ae6bd3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "3d507c4fec3c5e21a83fa55b704cbda5b9ae6bd3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ce060ef6513795cce3da62f5cee5febfbb89aced"], "nameRev": "3d507c4fec3c5e21a83fa55b704cbda5b9ae6bd3 tags/redisson-2.1.6~4", "commitMessage": "Ping fails if requirePass is set. #304\n", "commitDateTime": "2015-11-28 19:57:52", "authoredDateTime": "2015-11-28 19:57:52", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedisNodes.java", "insertions": 18, "deletions": 8, "lines": 26}, {"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionListener.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/ClientConnectionsEntry.java", "insertions": 3, "deletions": 11, "lines": 14}, {"filePath": "src/main/java/org/redisson/connection/ConnectionListener.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/DefaultConnectionListener.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "src/main/java/org/redisson/connection/RedisClientEntry.java", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "src/main/java/org/redisson/core/NodesGroup.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisNodes.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedisNodes.pingAll()", "TOT": 14, "UPD": 1, "INS": 3, "MOV": 8, "DEL": 2}, {"spoonMethodName": "org.redisson.RedisNodes.pingAll().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 16, "UPD": 1, "INS": 7, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.redisson.RedisNodes.pingAll().1", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionListener.onConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientConnectionsEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.connect(org.redisson.MasterSlaveServersConfig).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.addReconnectListener(org.redisson.MasterSlaveServersConfig,org.redisson.client.RedisConnection).2.onReconnect(org.redisson.client.RedisConnection,io.netty.util.concurrent.Promise)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.ClientConnectionsEntry.connectPubSub(org.redisson.MasterSlaveServersConfig).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 3}]}, {"spoonFilePath": "ConnectionListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.onConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.onConnect(io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.MasterSlaveServersConfig)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getConnectListener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultConnectionListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.DefaultConnectionListener.onConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.DefaultConnectionListener.onConnect(io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getConnectListener()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdownAsync(org.redisson.client.RedisClient)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisClientEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.RedisClientEntry.info()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.RedisClientEntry", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.RedisClientEntry.connect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.RedisClientEntry.ping()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "NodesGroup.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3d507c4fec3c5e21a83fa55b704cbda5b9ae6bd3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 64, "deletions": 30, "lines": 94, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 80, "UPD": 9, "INS": 27, "MOV": 29, "DEL": 15, "spoonFilesChanged": 8, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/core", "src/main/java/org/redisson/connection", "src/main/java/org/redisson", "src/main/java/org/redisson/cluster"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.getConnectListener()", "org.redisson.connection.MasterSlaveConnectionManager.createClient(java.lang.String,int)", "org.redisson.connection.ClientConnectionsEntry.connect(org.redisson.MasterSlaveServersConfig).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedisNodes.pingAll().1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.DefaultConnectionListener.onConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "org.redisson.connection.MasterSlaveConnectionManager.shutdownAsync(org.redisson.client.RedisClient)", "org.redisson.RedisNodes.pingAll()", "org.redisson.connection.DefaultConnectionListener.onConnect(io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.MasterSlaveServersConfig)", "org.redisson.RedisNodes.pingAll().1", "org.redisson.connection.RedisClientEntry", "org.redisson.connection.RedisClientEntry.info()", "org.redisson.cluster.ClusterConnectionListener.onConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "org.redisson.connection.RedisClientEntry.connect()", "org.redisson.connection.RedisClientEntry.ping()", "org.redisson.connection.getConnectListener()", "org.redisson.connection.onConnect(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.connection.FutureConnectionListener)", "org.redisson.connection.ClientConnectionsEntry.addReconnectListener(org.redisson.MasterSlaveServersConfig,org.redisson.client.RedisConnection).2.onReconnect(org.redisson.client.RedisConnection,io.netty.util.concurrent.Promise)", "org.redisson.connection.ClientConnectionsEntry.connectPubSub(org.redisson.MasterSlaveServersConfig).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.onConnect(io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection,org.redisson.connection.ClientConnectionsEntry.NodeType,org.redisson.MasterSlaveServersConfig)"]}, {"title": "What does RBatch.execute() return?", "body": "Hello. I have an RBatch variable that I've added some commands to. I noticed if I tax redis a bunch sometimes it has trouble writing a backup file (this might be the fault of my weak vm). At any rate, I'd like to detect this failure mode and tell the user about it if it ever happens. \n\nI'm trying to figure out what RBatch.execute returns. There [aren't any javadocs](https://github.com/mrniko/redisson/blob/f3a3a4a82d0e3e879943252a1a5da6d4990326ee/src/main/java/org/redisson/core/RBatch.java#L177) on this. I either get one of two responses:\n\n```\n[null, true, false, true, false ...]\n```\n\nor\n\n```\n[null, null, null, null, null ...]\n```\n\nThe second one indicates failure.\n\n[The wiki](https://github.com/mrniko/redisson/wiki/Usage-examples#multiple-commands-batch-commands-pipelining) suggests these are responses to the specific commands, which agrees with what I would assume from [`EXEC`](http://redis.io/commands/exec), but I'm not sure why I'm getting boolean results, because the commands I'm running should all be add commands (like `HSET`, `ZADD`, etc).\n\nDo you mind updating the javadoc, and do you know why I'm getting booleans back (and what they mean) instead of ints?\n", "url": "https://github.com/redisson/redisson/issues/293", "user": "joshattr", "labels": ["bug"], "created": "2015-11-20 21:43:11", "closed": "2015-11-23 13:24:02", "commits": {"e26beab46f3d4042562a6bdf13836237e0df6eca": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "68f5d604a59171fca9ff2bbe22a95fd5f2a93a27": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "e26beab46f3d4042562a6bdf13836237e0df6eca", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5a236826e7d3d9d7dc01e76587ade00d91f7077c"], "nameRev": "e26beab46f3d4042562a6bdf13836237e0df6eca tags/redisson-2.1.5~17", "commitMessage": "RBatch.execute and RBatch.executeAsync errors handling fixed. #293\n", "commitDateTime": "2015-11-21 13:31:13", "authoredDateTime": "2015-11-21 13:31:13", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 14, "deletions": 4, "lines": 18}, {"filePath": "src/main/java/org/redisson/core/RBatch.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandBatchExecutorService.executeAsync().2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.run(io.netty.util.Timeout)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RBatch.java", "spoonMethods": []}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testExceptionHandling()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "68f5d604a59171fca9ff2bbe22a95fd5f2a93a27", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["98eb4377506b842c605031bf282b32930a8facd0"], "nameRev": "68f5d604a59171fca9ff2bbe22a95fd5f2a93a27 tags/redisson-2.1.5~7", "commitMessage": "throws RedisException for RBatch.execute method. #293\n", "commitDateTime": "2015-11-23 14:25:41", "authoredDateTime": "2015-11-23 14:25:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/core/RBatch.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RBatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.core.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e26beab46f3d4042562a6bdf13836237e0df6eca", "68f5d604a59171fca9ff2bbe22a95fd5f2a93a27"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 22, "deletions": 9, "lines": 31, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 5, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/core", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.CommandBatchExecutorService.executeAsync().2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.core.execute()", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.run(io.netty.util.Timeout)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).1"]}, {"title": "RList add at index inserts data in different format causing an exception on read", "body": "Hi,\n\nI have code running against redisson 2.1.3 that was adding a value at an index and after the add is called the list can no longer read, throwing this exception:\n\n```\norg.redisson.client.RedisException: Unexpected exception while processing command\n    at org.redisson.CommandExecutorService.get(CommandExecutorService.java:185)\n    at org.redisson.RedissonObject.get(RedissonObject.java:48)\n    at org.redisson.RedissonList.getValue(RedissonList.java:291)\n    at org.redisson.RedissonList.get(RedissonList.java:287)\n    at com.senet.cache.redis.redisson.RedissonCache.main(RedissonCache.java:845)\nCaused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('b' (code 98)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\n    at [Source: io.netty.buffer.ByteBufInputStream@7b205dbd; line: 1, column: 2]\n    at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1369)\n    at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:532)\n    at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:453)\n    at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(UTF8StreamJsonParser.java:2278)\n    at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(UTF8StreamJsonParser.java:779)\n    at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:665)\n    at com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:2926)\n    at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:2873)\n    at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2080)\n    at org.redisson.codec.JsonJacksonCodec$2.decode(JsonJacksonCodec.java:59)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:179)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:110)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nI wrote a simple test to see what was going on.  The code from test1 executes without issue.  The code for test2 throws the exception on the first pass through the for loop.\n\n```\n        RList<String> test1 = redisson.getList(\"test1\");\n        test1.add(\"foo\");\n        test1.add(\"bar\");\n        for (int i=0; i < test1.size(); i++) {\n            logger.error(\"Got(\" + (i+1)+ \"): \" + test1.get(i));\n        }\n\n        RList<String> test2 = redisson.getList(\"test2\");\n        test2.add(\"foo\");\n        test2.add(0, \"bar\");\n\n        for (int i=0; i < test2.size(); i++) {\n            logger.error(\"Got(\" + (i+1)+ \"): \" + test2.get(i));\n         }\n```\n\nI queried the redis server and here are the two lists.  In test 2 you can see that bar does not get the escaped quotes around it.\n\n```\n 127.0.0.1:6379> lrange test1 0 -1\n 1) \"\\\"foo\\\"\"\n 2) \"\\\"bar\\\"\"\n 127.0.0.1:6379> lrange test2 0 -1\n 1) \"bar\"\n 2) \"\\\"foo\\\"\"\n 127.0.0.1:6379> \n```\n", "url": "https://github.com/redisson/redisson/issues/280", "user": "randyhoude72", "labels": ["bug"], "created": "2015-11-11 17:12:10", "closed": "2015-11-11 18:35:14", "commits": {"1ea916105238f70d895d06d1d0aac384279bba06": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1ea916105238f70d895d06d1d0aac384279bba06", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9174a3399424f60e6b6ad1a390cd921197159be0"], "nameRev": "1ea916105238f70d895d06d1d0aac384279bba06 tags/redisson-2.1.4~11", "commitMessage": "LPUSH conversion position fixed. #280\n", "commitDateTime": "2015-11-11 21:03:16", "authoredDateTime": "2015-11-11 21:01:13", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonListTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonListTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonListTest.testAddByIndex()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ea916105238f70d895d06d1d0aac384279bba06"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/protocol"], "changesInPackagesSPOON": ["org.redisson.client.protocol"]}, {"title": "RedissonSet iterator in Sentinel mode doesn't seem to be sticking to one slave for the lifetime of the iterator", "body": "Hi, \n\nI have a Redis setup with 3 nodes (master, slave, slave) and 3 sentinels (one per node). When I try to iterate over a set within Redis, I'm getting some odd results that are breaking the Redis SCAN guarantees - that is, I'm losing some entries.\n\nI'm pretty sure this is because the iterator isn't sticking to a single slave during its lifetime, and rather that it's using the default RoundRobinLoadBalancer switching between slaves for the same scan (which otherwise works well).\n#### Example\n\nLet's say I have a big set with 100K entries:\n\n``` java\n    for (int i=0; i<100; i++) {\n        RBatch b = redis.createBatch();\n        RSetAsync<Object> set = b.getSet(\"bigset\");\n        for (int j=0; j<1000; j++) {\n            set.addAsync(UUID.randomUUID());\n        }\n        b.execute();\n    }\n```\n\nwith all nodes up (two slaves), and when iterating over the collection, adding all my results to a java.util.Set such as below, then I'm getting some random size result sets:\n\n``` java\n    Set<String> keep = new HashSet<>();\n    RSet<String> set = redis.getSet(\"bigset\");\n    keep.addAll(set);\n    log.info(String.valueOf(keep.size()));\n```\n\n```\n[SetIterationTest] 81194\n```\n\nHowever, if I turn off a slave, I get the correct result :+1: :\n\n```\n[SetIterationTest] 100000\n```\n#### Example 2 (+Workaround)\n\nI get similar results doing the same through the RScript (In READ_ONLY mode):\n\n``` java\n    String sha1 = redis.getScript().scriptLoad(\"return redis.call('SSCAN', KEYS[1], KEYS[2], 'COUNT', KEYS[3])\");\n    Set<Object> set = new HashSet<>();\n    String cursor = \"0\";\n    do {\n        List res = redis.getScript().evalSha(RScript.Mode.READ_ONLY, sha1, RScript.ReturnType.MAPVALUELIST, Arrays.<Object>asList(\"bigset\", cursor, \"1000\"));\n        cursor = (String) res.get(0);\n        for (Object o: (List)res.get(1)) {\n            set.add(o);\n        }\n    } while(!cursor.equals(\"0\"));\n    log.info(String.valueOf(set.size()));\n```\n\n```\n[SetIterationTest] 81233\n```\n\nbut switching to READ_WRITE mode, it works fine again :+1: \n\n```\n...\n    List res = redis.getScript().evalSha(RScript.Mode.READ_WRITE, sha1, RScript.ReturnType.MAPVALUELIST, Arrays.<Object>asList(\"bigset\", cursor, \"1000\"));\n...\n```\n\n```\n[SetIterationTest] 100000\n```\n\nand I agree with the behavior of the RScript (as Redisson would never implicitly know when to stick to a single server). Incidentally, the latter use of RScript provides me with a workaround, but it'd be nice to use the inbuilt iterators for simplicity.\n\nHope that make sense - cheers!\n", "url": "https://github.com/redisson/redisson/issues/277", "user": "lucas-matt", "labels": ["bug"], "created": "2015-11-09 13:43:39", "closed": "2015-11-10 09:35:14", "commits": {"fe824978c1b480c90c0c479477c3ea119071e995": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "9b89c1a12c57809b4079f97bf7cebb0d81b987e6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "3f8e4d765a88691bef6045b74792569d2b4726b5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fe824978c1b480c90c0c479477c3ea119071e995", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["14262bd25ea1739d2a7f3788c8fd67f38ec92182"], "nameRev": "fe824978c1b480c90c0c479477c3ea119071e995 tags/redisson-2.1.4~20", "commitMessage": "SCAN iteration on same node fixed. #277\n", "commitDateTime": "2015-11-10 11:50:27", "authoredDateTime": "2015-11-10 11:50:27", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9b89c1a12c57809b4079f97bf7cebb0d81b987e6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fe824978c1b480c90c0c479477c3ea119071e995"], "nameRev": "9b89c1a12c57809b4079f97bf7cebb0d81b987e6 tags/redisson-2.1.4~19", "commitMessage": "SCAN iterator position handling #277, #230\n", "commitDateTime": "2015-11-10 12:32:14", "authoredDateTime": "2015-11-10 12:32:14", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonKeys.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "src/main/java/org/redisson/RedissonMap.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "src/main/java/org/redisson/RedissonSet.java", "insertions": 3, "deletions": 7, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).3.hasNext()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.iterator().1.hasNext()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.hasNext()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "RedissonSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSet.iterator().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1.hasNext()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3f8e4d765a88691bef6045b74792569d2b4726b5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6065a7a8e022cd47ae35e18eebd1a7e3eab27e26"], "nameRev": "3f8e4d765a88691bef6045b74792569d2b4726b5 tags/redisson-2.1.4~17", "commitMessage": "iterators infinity scroll fixed. #277\n", "commitDateTime": "2015-11-11 11:50:42", "authoredDateTime": "2015-11-11 11:50:42", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonKeys.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "src/main/java/org/redisson/RedissonLexSortedSet.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/RedissonMap.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "src/main/java/org/redisson/RedissonSet.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).3.hasNext()", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLexSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLexSortedSet.removeRangeHeadByLexAsync(java.lang.String,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLexSortedSet.removeRangeTailByLexAsync(java.lang.String,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLexSortedSet.removeRangeByLexAsync(java.lang.String,boolean,java.lang.String,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.iterator().1.hasNext()", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonMap.iterator().1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.removeRangeByRankAsync(int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.removeRangeByScoreAsync(double,boolean,double,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.hasNext()", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSet.iterator().1.hasNext()", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fe824978c1b480c90c0c479477c3ea119071e995", "3f8e4d765a88691bef6045b74792569d2b4726b5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 35, "deletions": 7, "lines": 42, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 48, "UPD": 6, "INS": 15, "MOV": 23, "DEL": 4, "spoonFilesChanged": 6, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonScoredSortedSet.iterator().1", "org.redisson.RedissonScoredSortedSet.removeRangeByRankAsync(int,int)", "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).3.hasNext()", "org.redisson.RedissonLexSortedSet.removeRangeHeadByLexAsync(java.lang.String,boolean)", "org.redisson.RedissonLexSortedSet.removeRangeTailByLexAsync(java.lang.String,boolean)", "org.redisson.RedissonMap.iterator().1.hasNext()", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "org.redisson.RedissonLexSortedSet.removeRangeByLexAsync(java.lang.String,boolean,java.lang.String,boolean)", "org.redisson.RedissonScoredSortedSet.iterator().1.hasNext()", "org.redisson.RedissonSet.iterator().1", "org.redisson.RedissonSet.iterator().1.hasNext()", "org.redisson.RedissonScoredSortedSet.removeRangeByScoreAsync(double,boolean,double,boolean)", "org.redisson.RedissonMap.iterator().1", "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).3", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).7.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "receiving multiplied PubSub messages", "body": "Little modification to the testHeavyLoad reveals the problem I encountered when having a single listener processing many messages sent at the same time (in latest version):\n\n```\nvolatile long counter;\n\n@Test\npublic void testHeavyLoad() throws InterruptedException {\n    final CountDownLatch messageRecieved = new CountDownLatch(1000);\n\n    Redisson redisson1 = BaseTest.createInstance();\n    RTopic<Message> topic1 = redisson1.getTopic(\"topic\");\n    topic1.addListener(new MessageListener<Message>() {\n        @Override\n        public void onMessage(String channel, Message msg) {\n            Assert.assertEquals(new Message(\"123\"), msg);\n            messageRecieved.countDown();\n            counter++;\n        }\n    });\n\n    Redisson redisson2 = BaseTest.createInstance();\n    RTopic<Message> topic2 = redisson2.getTopic(\"topic\");\n    topic2.addListener(new MessageListener<Message>() {\n        @Override\n        public void onMessage(String channel, Message msg) {\n            Assert.assertEquals(new Message(\"123\"), msg);\n            messageRecieved.countDown();\n        }\n    });\n\n    for (int i = 0; i < 500; i++) {\n        topic2.publish(new Message(\"123\"));\n    }\n\n    messageRecieved.await();\n\n    Thread.sleep(1000);\n\n    assertEquals(500, counter);\n\n    redisson1.shutdown();\n    redisson2.shutdown();\n}\n```\n\nRunning the test will fail for me many (but not every) time saying the listener got like 9000 messages instead of the 500 sent.\n", "url": "https://github.com/redisson/redisson/issues/276", "user": "lake4790k", "labels": ["bug"], "created": "2015-11-07 15:44:33", "closed": "2015-11-09 08:34:56", "commits": {"7ddf605385b4eba9b238e68a7fb3c6522028b4ad": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "7ddf605385b4eba9b238e68a7fb3c6522028b4ad", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2eeb592a3d1224b335aaad8698caf71c86130d6c"], "nameRev": "7ddf605385b4eba9b238e68a7fb3c6522028b4ad tags/redisson-2.1.4~25", "commitMessage": "PubSub message decoding under heavy load fixed. #276\n", "commitDateTime": "2015-11-09 11:34:30", "authoredDateTime": "2015-11-09 11:34:30", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 33, "deletions": 25, "lines": 58}, {"filePath": "src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 7, "deletions": 2, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleCommandsDataResponse(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.Decoder,org.redisson.client.protocol.CommandsData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeMulti(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder,long,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testHeavyLoad()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testHeavyLoad().11.onMessage(java.lang.String,org.redisson.RedissonTopicTest$Message)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ddf605385b4eba9b238e68a7fb3c6522028b4ad"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 33, "deletions": 25, "lines": 58, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.handleCommandsDataResponse(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,org.redisson.client.protocol.QueueCommand,org.redisson.client.protocol.Decoder,org.redisson.client.protocol.CommandsData)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.client.handler.CommandDecoder.decodeMulti(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder,long,java.util.List)"]}, {"title": "RMap.putAll not working.", "body": "I have RMap<String, String> and static map with default values which I need to save but RMap.putAll keeps throwing exception:\n\n```\nme.mc2.internal.redisson.client.RedisException: ERR wrong number of arguments for 'hmset' command. channel: [id: 0x64225355, /109.120.149.72:45005 => /109.120.149.72:6379] command: CommandData [promise=DefaultPromise@1cfa79f9(incomplete), command=RedisCommand [name=HMSET, subName=null], params=[player:d2c75e6d-f726-4433-ab71-259e04cca4de:settings, {LANGUAGE=ENGLISH}], codec=me.mc2.internal.redisson.client.codec.StringCodec@3803fe0]\n    at me.mc2.internal.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:168)\n    at me.mc2.internal.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:112)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Unknown Source)\n```\n", "url": "https://github.com/redisson/redisson/issues/265", "user": "Master-chan", "labels": ["bug"], "created": "2015-10-22 12:17:08", "closed": "2015-10-22 17:12:11", "commits": {"4ef7df4d4f3f2619269c03a45760222d0316da22": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4ef7df4d4f3f2619269c03a45760222d0316da22", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b12f49b41692cf233ae5ba615f8e9f7e2f324d8f"], "nameRev": "4ef7df4d4f3f2619269c03a45760222d0316da22 tags/redisson-2.1.4~42", "commitMessage": "RMap.putAll fixed. #265\n", "commitDateTime": "2015-10-22 20:12:02", "authoredDateTime": "2015-10-22 20:12:02", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonMap.java", "insertions": 15, "deletions": 4, "lines": 19}, {"filePath": "src/main/java/org/redisson/RedissonObject.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/core/RMapAsync.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "src/test/java/org/redisson/RedissonMapTest.java", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.putAll(java.util.Map)", "TOT": 16, "UPD": 1, "INS": 1, "MOV": 11, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonMap.putAllAsync(java.util.Map)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonObject.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonObject.newSucceededFuture(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RMapAsync.java", "spoonMethods": [{"spoonMethodName": "org.redisson.core.putAllAsync(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapTest.testPutAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4ef7df4d4f3f2619269c03a45760222d0316da22"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 5, "lines": 28, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 22, "UPD": 2, "INS": 6, "MOV": 11, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/protocol", "src/main/java/org/redisson", "src/main/java/org/redisson/core"], "changesInPackagesSPOON": ["org.redisson.core.putAllAsync(java.util.Map)", "org.redisson.client.protocol", "org.redisson.RedissonMap.putAllAsync(java.util.Map)", "org.redisson.RedissonObject.newSucceededFuture(java.lang.Object)", "org.redisson.RedissonMap.putAll(java.util.Map)"]}, {"title": "A serious mistake for redisson cluster!", "body": "hi, @mrniko \n\nwhen i execute the \"cluster nodes\" command, and displays like \"7189722a77350361478f826e549e13270499261c 127.0.0.1:6309 master - 0 1445484940172 5 connected 0-299 5761-10922\", then the redisson will go wrong:\n\norg.redisson.client.RedisEmptySlotException: No node for slot: 9842\n    at org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(MasterSlaveConnectionManager.java:481)\n    at org.redisson.CommandExecutorService.async(CommandExecutorService.java:434)\n    at org.redisson.CommandExecutorService$5.run(CommandExecutorService.java:421)\n    at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:581)\n    at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:655)\n    at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:367)\n    at java.lang.Thread.run(Thread.java:745)\n\ni review the parse() function in ClusterConnectionManager.java, and it only parses one pair start_slot and end_slot. \n\nIs it right, or my understanding is wrong?\n", "url": "https://github.com/redisson/redisson/issues/264", "user": "deep011", "labels": ["bug"], "created": "2015-10-22 05:09:52", "closed": "2015-10-30 14:28:32", "commits": {"2323e9bc020da2119848039e10df270e5b9e8de0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "070fff876af82fc3ad7d3cf7503933fa89a5561c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "f8d3b5612e63a0d77a67dea44b4d9681d5f4ba39": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "8279398720c188ddf88d4ac464444ffc55e03b1f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "2323e9bc020da2119848039e10df270e5b9e8de0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4ef7df4d4f3f2619269c03a45760222d0316da22"], "nameRev": "2323e9bc020da2119848039e10df270e5b9e8de0 tags/redisson-2.1.4~41", "commitMessage": "Cluster slots handling & master change discovery improvements. #264\n", "commitDateTime": "2015-10-24 21:03:30", "authoredDateTime": "2015-10-24 21:03:30", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 17, "deletions": 12, "lines": 29}, {"filePath": "src/main/java/org/redisson/Redisson.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/RedissonKeys.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "src/main/java/org/redisson/{connection => cluster}/ClusterConnectionManager.java", "insertions": 108, "deletions": 76, "lines": 184}, {"filePath": "src/main/java/org/redisson/{connection => cluster}/ClusterNodeInfo.java", "insertions": 13, "deletions": 33, "lines": 46}, {"filePath": "src/main/java/org/redisson/{connection => cluster}/ClusterPartition.java", "insertions": 6, "deletions": 14, "lines": 20}, {"filePath": "src/main/java/org/redisson/cluster/ClusterSlotRange.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/ElasticacheConnectionManager.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 34, "deletions": 19, "lines": 53}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 6, "deletions": 16, "lines": 22}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "src/main/java/org/redisson/connection/SingleEntry.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.convertException(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.get(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "Redisson.java", "spoonMethods": []}, {"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.getKeysByPattern(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.getKeys()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.getKeysByPattern(java.lang.String).1.iterator()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.getKeys().2.iterator()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.isActive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.checkSlotsChange(org.redisson.ClusterServersConfig,java.util.Map)", "TOT": 29, "UPD": 26, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.parsePartitions(java.lang.String)", "TOT": 19, "UPD": 11, "INS": 0, "MOV": 5, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager", "TOT": 13, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.addMasterEntry(org.redisson.connection.ClusterPartition,org.redisson.ClusterServersConfig)", "TOT": 27, "UPD": 16, "INS": 0, "MOV": 5, "DEL": 6}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.connect(org.redisson.ClusterServersConfig,java.net.URI)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig)", "TOT": 10, "UPD": 1, "INS": 0, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).1.run()", "TOT": 55, "UPD": 24, "INS": 0, "MOV": 25, "DEL": 6}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.parse(java.lang.String)", "TOT": 18, "UPD": 3, "INS": 0, "MOV": 12, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.shutdown()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.slots(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.find(java.util.Collection,org.redisson.cluster.ClusterSlotRange)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(java.util.Collection)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.ClusterServersConfig,java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.parsePartitions(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.parse(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterNodeInfo.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterNodeInfo", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.addFlag(org.redisson.connection.ClusterNodeInfo$Flag)", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.getSlaveOf()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.getStartSlot()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.setStartSlot(int)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.getEndSlot()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.setEndSlot(int)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.Flag", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.getNodeId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.getAddress()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.setNodeId(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.setAddress(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.toString()", "TOT": 10, "UPD": 7, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.getFlags()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.setSlaveOf(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterNodeInfo", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterNodeInfo.containsFlag(org.redisson.cluster.ClusterNodeInfo$Flag)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterPartition.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterPartition", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.setStartSlot(int)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.getEndSlot()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.setMasterAddress(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.isMasterFail()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.getMasterAddress()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.addSlaveAddress(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.getSlaveAddresses()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.setMasterFail(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.setMasterAddress(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.getStartSlot()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.setEndSlot(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterSlotRange.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterSlotRange", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getEntries()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElasticacheConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ElasticacheConnectionManager.monitorRoleChange(org.redisson.ElasticacheServersConfig).1.run()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 7, "UPD": 1, "INS": 4, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntries()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(int)", "TOT": 7, "UPD": 4, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.changeMaster(int,java.lang.String,int)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.removeMaster(int)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(int,java.lang.String,int)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.RedisClient)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.addMaster(org.redisson.cluster.ClusterSlotRange,org.redisson.connection.MasterSlaveEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.cluster.ClusterSlotRange,java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.removeMaster(org.redisson.cluster.ClusterSlotRange)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.getStartSlot()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.getEndSlot()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.isOwn(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onMasterChange(org.redisson.SentinelServersConfig,java.net.URI,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.SingleConnectionManager.monitorDnsChange(org.redisson.SingleServerConfig).1.run()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SingleEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleEntry", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "070fff876af82fc3ad7d3cf7503933fa89a5561c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2323e9bc020da2119848039e10df270e5b9e8de0"], "nameRev": "070fff876af82fc3ad7d3cf7503933fa89a5561c tags/redisson-2.1.4~40", "commitMessage": "Slot changes discovery optimization. #264\n", "commitDateTime": "2015-10-26 20:45:42", "authoredDateTime": "2015-10-26 20:45:42", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/client/RedisTimeoutException.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 23, "deletions": 9, "lines": 32}, {"filePath": "src/main/java/org/redisson/cluster/ClusterPartition.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/SingleEntry.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.await(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisTimeoutException.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisTimeoutException", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).1.run()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.ClusterServersConfig,java.util.Collection)", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "ClusterPartition.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterPartition", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.getSlotRanges()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.getMasterAddr()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": []}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 8, "UPD": 3, "INS": 3, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.getSlotRanges()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.removeSlotRange(org.redisson.cluster.ClusterSlotRange)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.shutdownMasterAsync()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.shutdown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SingleEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleEntry", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f8d3b5612e63a0d77a67dea44b4d9681d5f4ba39", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["070fff876af82fc3ad7d3cf7503933fa89a5561c"], "nameRev": "f8d3b5612e63a0d77a67dea44b4d9681d5f4ba39 tags/redisson-2.1.4~39", "commitMessage": "Seamless slots migration across nodes. #264\n", "commitDateTime": "2015-10-28 21:26:53", "authoredDateTime": "2015-10-28 21:26:53", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "src/main/java/org/redisson/client/protocol/RedisCommand.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 60, "deletions": 16, "lines": 76}, {"filePath": "src/main/java/org/redisson/cluster/ClusterPartition.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 11, "deletions": 22, "lines": 33}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.client.codec.Codec,int,org.redisson.SyncOperation,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisCommand.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.RedisCommand.toString()", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.ClusterServersConfig,java.util.Collection)", "TOT": 70, "UPD": 23, "INS": 4, "MOV": 39, "DEL": 4}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.parsePartitions(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlotsMigration(java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.calcSlot(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterPartition.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterPartition", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterPartition.getNodeId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.connectionReadOp(int,org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.connectionReadOp(int,org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.connectionWriteOp(int,org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.addMaster(org.redisson.cluster.ClusterSlotRange,org.redisson.connection.MasterSlaveEntry)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.RedisClient)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.calcSlot(java.lang.String)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 6}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(int,org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlotRange(org.redisson.cluster.ClusterSlotRange)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8279398720c188ddf88d4ac464444ffc55e03b1f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f8d3b5612e63a0d77a67dea44b4d9681d5f4ba39"], "nameRev": "8279398720c188ddf88d4ac464444ffc55e03b1f tags/redisson-2.1.4~38", "commitMessage": "ASK handling.  #264\n", "commitDateTime": "2015-10-30 17:28:03", "authoredDateTime": "2015-10-30 17:28:03", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 19, "deletions": 11, "lines": 30}, {"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 59, "deletions": 29, "lines": 88}, {"filePath": "src/main/java/org/redisson/RedissonPatternTopic.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/RedissonTopic.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/client/RedisAskException.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "src/main/java/org/redisson/client/{RedisEmptySlotException.java => RedisNodeNotFoundException.java}", "insertions": 2, "deletions": 9, "lines": 11}, {"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 11, "deletions": 8, "lines": 19}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 60, "deletions": 25, "lines": 85}, {"filePath": "src/main/java/org/redisson/connection/NodeSource.java", "insertions": 46, "deletions": 0, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandBatchExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).2.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.executeAsync()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.executeAsync().1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.client.codec.Codec,int,org.redisson.SyncOperation,int)", "TOT": 13, "UPD": 8, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).5.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 13, "UPD": 3, "INS": 0, "MOV": 8, "DEL": 2}, {"spoonMethodName": "org.redisson.CommandExecutorService.readAsync(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.readAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.writeAsync(java.lang.Integer,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.write(java.lang.String,org.redisson.client.codec.Codec,org.redisson.SyncOperation)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.read(java.lang.String,org.redisson.client.codec.Codec,org.redisson.SyncOperation)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.evalAsync(boolean,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.writeAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.client.codec.Codec,org.redisson.connection.NodeSource,org.redisson.SyncOperation,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonPatternTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonPatternTopic.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.removeListener(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisAskException.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisAskException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisNodeNotFoundException.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisEmptySlotException", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getEntry(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.releaseRead(int,org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.releaseWrite(int,org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.connectionReadOp(int,org.redisson.client.protocol.RedisCommand)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.connectionReadOp(int,org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.connectionWriteOp(int,org.redisson.client.protocol.RedisCommand)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.createReleaseReadListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.createReleaseWriteListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.getEntry(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(int,org.redisson.client.protocol.RedisCommand)", "TOT": 17, "UPD": 4, "INS": 0, "MOV": 10, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.protocol.RedisCommand)", "TOT": 17, "UPD": 4, "INS": 0, "MOV": 10, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.releaseWrite(int,org.redisson.client.RedisConnection)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.releaseRead(int,org.redisson.client.RedisConnection)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "TOT": 13, "UPD": 2, "INS": 0, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.net.InetSocketAddress)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NodeSource.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.NodeSource", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2323e9bc020da2119848039e10df270e5b9e8de0", "070fff876af82fc3ad7d3cf7503933fa89a5561c", "f8d3b5612e63a0d77a67dea44b4d9681d5f4ba39", "8279398720c188ddf88d4ac464444ffc55e03b1f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 700, "deletions": 349, "lines": 1049, "gitFilesChange": 27}, "spoonStatsSummary": {"TOT": 742, "UPD": 313, "INS": 137, "MOV": 203, "DEL": 89, "spoonFilesChanged": 24, "spoonMethodsChanged": 155}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson", "src/main/java/org/redisson/cluster", "src/main/java/org/redisson/client", "src/main/java/org/redisson/client/handler", "src/main/java/org/redisson/client/protocol", "src/main/java/org/redisson/{connection => cluster}"], "changesInPackagesSPOON": ["org.redisson.cluster.ClusterPartition", "org.redisson.connection.MasterSlaveConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.SingleConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "org.redisson.cluster.ClusterConnectionManager.checkSlotsChange(org.redisson.ClusterServersConfig,java.util.Collection)", "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(int,org.redisson.client.protocol.RedisCommand)", "org.redisson.CommandExecutorService.async(boolean,org.redisson.client.codec.Codec,int,org.redisson.SyncOperation,int)", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int)", "org.redisson.connection.connectionReadOp(int,org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.RedisClient)", "org.redisson.CommandExecutorService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[])", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.connectionWriteOp(int,org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.SingleEntry", "org.redisson.CommandExecutorService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.protocol.RedisCommand)", "org.redisson.CommandExecutorService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "org.redisson.cluster.ClusterConnectionManager.parsePartitions(java.lang.String)", "org.redisson.connection.connectionReadOp(int,org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "org.redisson.CommandExecutorService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[])", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.addMaster(org.redisson.cluster.ClusterSlotRange,org.redisson.connection.MasterSlaveEntry)", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "org.redisson.connection.MasterSlaveEntry", "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(int)", "org.redisson.cluster.ClusterConnectionManager.addMasterEntry(org.redisson.cluster.ClusterPartition,org.redisson.ClusterServersConfig)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).5.run(io.netty.util.Timeout)", "org.redisson.connection.SingleConnectionManager.monitorDnsChange(org.redisson.SingleServerConfig).1.run()", "org.redisson.connection.ClusterPartition.isMasterFail()", "org.redisson.connection.ClusterNodeInfo.getFlags()", "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.getEntries()", "org.redisson.connection.MasterSlaveEntry.addSlotRange(org.redisson.cluster.ClusterSlotRange)", "org.redisson.client.RedisConnection.await(io.netty.util.concurrent.Future)", "org.redisson.client.RedisTimeoutException", "org.redisson.cluster.ClusterPartition.getMasterAddr()", "org.redisson.connection.ClusterPartition.addSlaveAddress(java.net.URI)", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.getEntry(java.net.InetSocketAddress)", "org.redisson.connection.MasterSlaveEntry.isOwn(int)", "org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.ClusterNodeInfo.toString()", "org.redisson.connection.ElasticacheConnectionManager.monitorRoleChange(org.redisson.ElasticacheServersConfig).1.run()", "org.redisson.cluster.ClusterPartition.getSlotRanges()", "org.redisson.client.protocol.RedisCommand.toString()", "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(int,java.lang.String,int)", "org.redisson.connection.createReleaseReadListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.ClusterConnectionManager.connect(org.redisson.ClusterServersConfig,java.net.URI)", "org.redisson.CommandExecutorService.async(boolean,org.redisson.client.codec.Codec,org.redisson.connection.NodeSource,org.redisson.SyncOperation,int)", "org.redisson.cluster.ClusterConnectionManager.slots(java.util.Collection)", "org.redisson.connection.releaseWrite(int,org.redisson.client.RedisConnection)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).2.run(io.netty.util.Timeout)", "org.redisson.connection.ClusterPartition.setStartSlot(int)", "org.redisson.connection.ClusterConnectionManager", "org.redisson.connection.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig)", "org.redisson.connection.ClusterNodeInfo.setNodeId(java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.removeMaster(int)", "org.redisson.connection.ClusterConnectionManager.parse(java.lang.String)", "org.redisson.client.protocol", "org.redisson.CommandBatchExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "org.redisson.connection.MasterSlaveEntry.getStartSlot()", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(int)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(java.util.Collection)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.net.InetSocketAddress)", "org.redisson.connection.MasterSlaveConnectionManager.calcSlot(java.lang.String)", "org.redisson.RedissonPatternTopic.removeListener(int)", "org.redisson.CommandExecutorService.readAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.CommandExecutorService.evalAsync(boolean,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.connection.ClusterNodeInfo.setSlaveOf(java.lang.String)", "org.redisson.cluster.ClusterConnectionManager.checkSlotsMigration(java.util.Collection)", "org.redisson.connection.MasterSlaveEntry.getSlotRanges()", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource)", "org.redisson.RedissonKeys.getKeys()", "org.redisson.connection.getEntries()", "org.redisson.connection.MasterSlaveEntry.removeSlotRange(org.redisson.cluster.ClusterSlotRange)", "org.redisson.connection.ClusterNodeInfo", "org.redisson.connection.ClusterConnectionManager.parsePartitions(java.lang.String)", "org.redisson.connection.ClusterNodeInfo.getAddress()", "org.redisson.cluster.ClusterConnectionManager.calcSlot(java.lang.String)", "org.redisson.CommandBatchExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "org.redisson.CommandExecutorService.writeAsync(java.lang.Integer,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.connection.MasterSlaveConnectionManager.releaseRead(int,org.redisson.client.RedisConnection)", "org.redisson.connection.ClusterPartition.getStartSlot()", "org.redisson.connection.ClusterPartition", "org.redisson.CommandExecutorService.readAsync(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.connection.ClusterPartition.setMasterAddress(java.lang.String)", "org.redisson.connection.MasterSlaveEntry.getEndSlot()", "org.redisson.CommandExecutorService.writeAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.connection.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).1.run()", "org.redisson.connection.ClusterNodeInfo.getSlaveOf()", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,int,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.shutdownMasterAsync()", "org.redisson.connection.ClusterPartition.setMasterAddress(java.net.URI)", "org.redisson.connection.ClusterNodeInfo.getStartSlot()", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand)", "org.redisson.connection.ClusterPartition.setEndSlot(int)", "org.redisson.CommandBatchExecutorService.executeAsync()", "org.redisson.client.RedisEmptySlotException", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.changeMaster(int,java.lang.String,int)", "org.redisson.connection.ClusterConnectionManager.checkSlotsChange(org.redisson.ClusterServersConfig,java.util.Map)", "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.cluster.ClusterSlotRange,java.lang.String,int)", "org.redisson.connection.getEntry(java.lang.String)", "org.redisson.cluster.ClusterNodeInfo.containsFlag(org.redisson.cluster.ClusterNodeInfo$Flag)", "org.redisson.RedissonKeys.getKeysByPattern(java.lang.String)", "org.redisson.cluster.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig)", "org.redisson.CommandExecutorService.write(java.lang.String,org.redisson.client.codec.Codec,org.redisson.SyncOperation)", "org.redisson.connection.ClusterConnectionManager.addMasterEntry(org.redisson.connection.ClusterPartition,org.redisson.ClusterServersConfig)", "org.redisson.cluster.ClusterPartition.getNodeId()", "org.redisson.connection.createReleaseWriteListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.releaseWrite(int,org.redisson.client.RedisConnection)", "org.redisson.connection.ClusterNodeInfo.Flag", "org.redisson.connection.ClusterNodeInfo.addFlag(org.redisson.connection.ClusterNodeInfo$Flag)", "org.redisson.RedissonKeys.getKeysByPattern(java.lang.String).1.iterator()", "org.redisson.connection.MasterSlaveConnectionManager.removeMaster(org.redisson.cluster.ClusterSlotRange)", "org.redisson.CommandExecutorService.convertException(io.netty.util.concurrent.Future)", "org.redisson.connection.SentinelConnectionManager.onMasterChange(org.redisson.SentinelServersConfig,java.net.URI,java.lang.String)", "org.redisson.cluster.ClusterSlotRange", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry.shutdown()", "org.redisson.cluster.ClusterNodeInfo", "org.redisson.client.RedisConnection.isActive()", "org.redisson.connection.ClusterConnectionManager.shutdown()", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.RedissonKeys.getKeys().2.iterator()", "org.redisson.connection.ClusterPartition.getEndSlot()", "org.redisson.connection.ClusterNodeInfo.getEndSlot()", "org.redisson.connection.NodeSource", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(org.redisson.connection.NodeSource,org.redisson.client.protocol.RedisCommand,org.redisson.client.RedisClient)", "org.redisson.connection.MasterSlaveConnectionManager.getEntry(java.lang.String)", "org.redisson.cluster.ClusterConnectionManager", "org.redisson.CommandExecutorService.read(java.lang.String,org.redisson.client.codec.Codec,org.redisson.SyncOperation)", "org.redisson.CommandExecutorService.get(io.netty.util.concurrent.Future)", "org.redisson.connection.releaseRead(int,org.redisson.client.RedisConnection)", "org.redisson.connection.ClusterNodeInfo.setEndSlot(int)", "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder)", "org.redisson.connection.ClusterPartition.setMasterFail(boolean)", "org.redisson.cluster.ClusterConnectionManager.parse(java.lang.String)", "org.redisson.connection.ClusterPartition.getSlaveAddresses()", "org.redisson.cluster.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).1.run()", "org.redisson.connection.ClusterPartition.getMasterAddress()", "org.redisson.RedissonTopic.removeListener(int)", "org.redisson.connection.ClusterNodeInfo.getNodeId()", "org.redisson.CommandBatchExecutorService.executeAsync().1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.ClusterNodeInfo.setAddress(java.lang.String)", "org.redisson.connection.ClusterNodeInfo.setStartSlot(int)", "org.redisson.client.RedisAskException", "org.redisson.cluster.ClusterConnectionManager.find(java.util.Collection,org.redisson.cluster.ClusterSlotRange)"]}, {"title": "AddSentinelAddress(...) non-running instance ClosedChannelException", "body": "Hi,\n\nI have noticed something running some load tests recently.\n\nI have a 3 sentinels, 1 slave and 1 master set up.\n\nInitially I was running load tests on this exact set up and would occasionally run into `org.redisson.client.RedisConnectionException: Slave connection pool gets exhausted!` which is fine since when the load is reduced the app goes back to normal.\n\nThen I had to switch off one of the sentinels and forgot to restart it, so now I was running with 2 sentinels, 1 slave and 1 master.\n\nI would first again run into `org.redisson.client.RedisConnectionException: Slave connection pool gets exhausted!` but would also run into\n`org.redisson.client.WriteRedisConnectionException: Can't send command: RedisCommand [name=GET, subName=null], params: [Ljava.lang.Object;@44d02cc5, channel: [id: 0x08bfe466, 0.0.0.0/0.0.0.0:55173 :> /127.0.0.1:6379]` (6379 is master)\n`org.redisson.client.WriteRedisConnectionException: Can't send command: RedisCommand [name=GET, subName=null], params: [Ljava.lang.Object;@1283c11d, channel: [id: 0x05e26dda, 0.0.0.0/0.0.0.0:54360 :> /127.0.0.1:6380]` (6380 is slave)\nand\n`org.redisson.client.WriteRedisConnectionException: Can't send command: RedisCommand [name=GET, subName=null], params: [Ljava.lang.Object;@2f0f4c9c, channel: [id: 0xf38de559, 0.0.0.0/0.0.0.0:55367]`\n\nhere is one of them with full stack:\n\n```\norg.redisson.client.WriteRedisConnectionException: Can't send command: RedisCommand [name=GET, subName=null], params: [Ljava.lang.Object;@2f0f4c9c, channel: [id: 0xf38de559, 0.0.0.0/0.0.0.0:55367]\n    at org.redisson.CommandExecutorService$6.operationComplete(CommandExecutorService.java:447)\n    at org.redisson.CommandExecutorService$6.operationComplete(CommandExecutorService.java:442)\n    at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:680)\n    at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:567)\n    at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:424)\n    at io.netty.channel.AbstractChannel$AbstractUnsafe.safeSetFailure(AbstractChannel.java:801)\n    at io.netty.channel.AbstractChannel$AbstractUnsafe.write(AbstractChannel.java:699)\n    at io.netty.channel.DefaultChannelPipeline$HeadContext.write(DefaultChannelPipeline.java:1122)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:633)\n    at io.netty.channel.AbstractChannelHandlerContext.access$1900(AbstractChannelHandlerContext.java:32)\n    at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.write(AbstractChannelHandlerContext.java:908)\n    at io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.write(AbstractChannelHandlerContext.java:960)\n    at io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask.run(AbstractChannelHandlerContext.java:893)\n    at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:356)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:357)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:110)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.nio.channels.ClosedChannelException: null\n```\n\nAfter reducing the load, `org.redisson.client.RedisConnectionException: Slave connection pool gets exhausted!` disappear, but `org.redisson.client.WriteRedisConnectionException: Can't send command...` persist and appear on every couple of calls even for 0.5QPS.\n\nI tried this several times and it always was like this, 3 sentinels - all good, 2 sentinels - WriteRedisConnectionException exceptions.\n\n**Note that in both cases I passed all 3 sentinel's addresses to addSentinelAddress(...) for useSentinelConnection()**\n\nMaybe a check on the `new Redis(...)` call to ping all the sentinels would be nice\n", "url": "https://github.com/redisson/redisson/issues/262", "user": "oleg-gr", "labels": ["bug"], "created": "2015-10-19 05:56:11", "closed": "2015-12-09 00:17:18", "commits": {"73520b2049627aaf4b4d6ffa755fabea7fd558e5": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "883df409712e6429fbed444ac5d41c5ac711b259": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "a8d0614d5c936c02f2be23cce54f4e2198d98051": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "3614ca9c63bb85ea41b8428972f9cbc54b5b6a46": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "3ea1931271b10116424ae107b9e32d9c0a4d6757": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "5a236826e7d3d9d7dc01e76587ade00d91f7077c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "bbef215c11045878cda7440ff7d125d9a5c4f2c1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "531a753f5756c458b4d19bbefaed17a0cb4d27d9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 50.000277777777775, "commitsDetails": [{"commitHash": "73520b2049627aaf4b4d6ffa755fabea7fd558e5", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["24e2a8818e36d49de62cfa5426373a124d45dc81"], "nameRev": "73520b2049627aaf4b4d6ffa755fabea7fd558e5 tags/redisson-2.1.4~27", "commitMessage": "Config.slaveFailedAttempts and Config.slaveReconnectionTimeout params added. #262\n", "commitDateTime": "2015-11-07 12:59:11", "authoredDateTime": "2015-11-07 12:59:11", "commitGitStats": [{"filePath": "src/main/java/org/redisson/BaseMasterSlaveServersConfig.java", "insertions": 47, "deletions": 1, "lines": 48}, {"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "src/main/java/org/redisson/cluster/ClusterConnectionManager.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 21, "deletions": 7, "lines": 28}, {"filePath": "src/main/java/org/redisson/connection/ConnectionEntry.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/FutureConnectionListener.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "src/main/java/org/redisson/connection/LoadBalancer.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "src/main/java/org/redisson/connection/NodeSource.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/SingleEntry.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/misc/ConnectionPool.java", "insertions": 115, "deletions": 17, "lines": 132}, {"filePath": "src/main/java/org/redisson/misc/PubSubConnectionPoll.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseMasterSlaveServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseMasterSlaveServersConfig", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMasterSlaveServersConfig.setSlaveReconnectionTimeout(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMasterSlaveServersConfig.getSlaveReconnectionTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMasterSlaveServersConfig.setSlaveFailedAttempts(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseMasterSlaveServersConfig.getSlaveFailedAttempts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.isOpen()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkSlaveNodesChange(java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.unfreeze(java.lang.String,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.init(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ConnectionManager)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.init(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ConnectionManager,org.redisson.connection.MasterSlaveEntry)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.unfreeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.freeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ConnectionEntry.FreezeReason", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.getServerMode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.resetFailedAttempts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.incFailedAttempts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.setFreezeReason(org.redisson.connection.ConnectionEntry$FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.getFreezeReason()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.newFailedFuture(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.slaveDown(org.redisson.connection.MasterSlaveEntry,java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FutureConnectionListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.FutureConnectionListener.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.unfreeze(java.lang.String,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.unfreeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.freeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.init(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ConnectionManager,org.redisson.connection.MasterSlaveEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.newFailedFuture(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.connection.MasterSlaveEntry,java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.cluster.ClusterSlotRange,java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NodeSource.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.NodeSource.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.slaveUp(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleEntry", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.ConnectionPool", "TOT": 13, "UPD": 5, "INS": 6, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.get()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.get(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 6, "UPD": 2, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise)", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseSuccessful(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PubSubConnectionPoll.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.PubSubConnectionPoll", "TOT": 5, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "883df409712e6429fbed444ac5d41c5ac711b259", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7c255bc7d4ef9707db20d74e2c9c34647597f29c"], "nameRev": "883df409712e6429fbed444ac5d41c5ac711b259 tags/redisson-2.1.5~51", "commitMessage": "Reconnection handling improvements. #262\n", "commitDateTime": "2015-11-16 14:16:02", "authoredDateTime": "2015-11-16 14:16:02", "commitGitStats": [{"filePath": "src/main/java/org/redisson/misc/ConnectionPool.java", "insertions": 26, "deletions": 10, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a8d0614d5c936c02f2be23cce54f4e2198d98051", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["28205954de0da1a40706540dcd044a4750d17d04"], "nameRev": "a8d0614d5c936c02f2be23cce54f4e2198d98051 tags/redisson-2.1.5~48", "commitMessage": "Check failedAttempts value in tryAcquireConnection. #262\n", "commitDateTime": "2015-11-16 16:48:26", "authoredDateTime": "2015-11-16 16:48:26", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/ConnectionEntry.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "src/main/java/org/redisson/misc/ConnectionPool.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ConnectionEntry.getFailedAttempts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.ConnectionPool.tryAcquireConnection(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3614ca9c63bb85ea41b8428972f9cbc54b5b6a46", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b78c9df54d50a9315c2f7c280bae4ff1a6be91a8"], "nameRev": "3614ca9c63bb85ea41b8428972f9cbc54b5b6a46 tags/redisson-2.1.5~39", "commitMessage": "connectAsync bug fixed & disconnected master case handling. #262\n", "commitDateTime": "2015-11-18 16:02:40", "authoredDateTime": "2015-11-18 16:02:40", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 46, "deletions": 13, "lines": 59}, {"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 17, "deletions": 14, "lines": 31}, {"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 38, "deletions": 39, "lines": 77}, {"filePath": "src/main/java/org/redisson/connection/ConnectionEntry.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 9, "deletions": 5, "lines": 14}, {"filePath": "src/main/java/org/redisson/misc/ConnectionPool.java", "insertions": 87, "deletions": 34, "lines": 121}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 10, "UPD": 3, "INS": 3, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.run(io.netty.util.Timeout)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 12, "UPD": 0, "INS": 6, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.convertException(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.unfreeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 24, "UPD": 5, "INS": 4, "MOV": 11, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.freeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 20, "UPD": 2, "INS": 3, "MOV": 12, "DEL": 3}]}, {"spoonFilePath": "ConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ConnectionEntry.FreezeReason", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.connect(org.redisson.MasterSlaveServersConfig).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.connectPubSub(org.redisson.MasterSlaveServersConfig).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.connection.MasterSlaveEntry,java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.lang.String,int,boolean,org.redisson.connection.ConnectionEntry.NodeType)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.ConnectionPool.add(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,java.lang.Throwable)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "TOT": 20, "UPD": 1, "INS": 2, "MOV": 15, "DEL": 2}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.handleQueue(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 11, "UPD": 1, "INS": 0, "MOV": 8, "DEL": 2}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.add(org.redisson.connection.SubscribesConnectionEntry).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).3.run(io.netty.util.Timeout)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.add(org.redisson.connection.SubscribesConnectionEntry).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).3.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).3.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.freezeMaster(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.handleQueue(org.redisson.connection.SubscribesConnectionEntry,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.releaseConnection(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.initConnections(org.redisson.connection.SubscribesConnectionEntry,java.lang.Runnable,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.get(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).4.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).4.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3ea1931271b10116424ae107b9e32d9c0a4d6757", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b030d88101281e223eefec2bb9928173153b6b85"], "nameRev": "3ea1931271b10116424ae107b9e32d9c0a4d6757 tags/redisson-2.1.5~33", "commitMessage": "Connection timeout handling reimplemented. #262\n", "commitDateTime": "2015-11-19 18:26:37", "authoredDateTime": "2015-11-19 18:26:37", "commitGitStats": [{"filePath": "src/main/java/org/redisson/BaseConfig.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 50, "deletions": 25, "lines": 75}, {"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 14, "deletions": 7, "lines": 21}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "src/main/java/org/redisson/connection/SubscribesConnectionEntry.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "src/main/java/org/redisson/misc/ConnectionPool.java", "insertions": 19, "deletions": 13, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseConfig", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int)", "TOT": 12, "UPD": 3, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 21, "UPD": 4, "INS": 6, "MOV": 6, "DEL": 5}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 12, "UPD": 1, "INS": 4, "MOV": 2, "DEL": 5}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 15, "UPD": 4, "INS": 3, "MOV": 6, "DEL": 2}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": []}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveServersConfig)", "TOT": 22, "UPD": 0, "INS": 9, "MOV": 8, "DEL": 5}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout).3.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.freeze()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveDown(java.net.URI,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig).1.onMessage(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onNodeDown(java.net.URI,java.lang.String)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SubscribesConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SubscribesConnectionEntry.freezeMaster(org.redisson.connection.FreezeReason)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.misc.ConnectionPool.freezeMaster(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5a236826e7d3d9d7dc01e76587ade00d91f7077c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f3a3a4a82d0e3e879943252a1a5da6d4990326ee"], "nameRev": "5a236826e7d3d9d7dc01e76587ade00d91f7077c tags/redisson-2.1.5~18", "commitMessage": "timeout improvements. #262\n", "commitDateTime": "2015-11-21 12:52:38", "authoredDateTime": "2015-11-21 12:52:38", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 16, "deletions": 19, "lines": 35}, {"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 15, "deletions": 18, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.run(io.netty.util.Timeout)", "TOT": 19, "UPD": 3, "INS": 3, "MOV": 8, "DEL": 5}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture).1.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).5.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "TOT": 20, "UPD": 4, "INS": 3, "MOV": 8, "DEL": 5}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "bbef215c11045878cda7440ff7d125d9a5c4f2c1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["e7ca9452e2c30c043e4c6787512c5ed3b180df93"], "nameRev": "bbef215c11045878cda7440ff7d125d9a5c4f2c1 tags/redisson-2.1.6~9", "commitMessage": "ConnectionPool.get should return failed future in case of free connection absence. #262\n", "commitDateTime": "2015-11-24 22:50:26", "authoredDateTime": "2015-11-24 22:50:26", "commitGitStats": [{"filePath": "src/main/java/org/redisson/misc/ConnectionPool.java", "insertions": 6, "deletions": 3, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.ConnectionPool.get()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "531a753f5756c458b4d19bbefaed17a0cb4d27d9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a8ae0b892b8900659b5aa2217623c71a0b0c2199"], "nameRev": "531a753f5756c458b4d19bbefaed17a0cb4d27d9 tags/redisson-2.1.6~6", "commitMessage": "Idle connection condition fixed. #262\n", "commitDateTime": "2015-11-25 11:57:40", "authoredDateTime": "2015-11-25 11:57:40", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/IdleConnectionWatcher.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IdleConnectionWatcher.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.IdleConnectionWatcher.validateAmount(org.redisson.connection.IdleConnectionWatcher$Entry)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["73520b2049627aaf4b4d6ffa755fabea7fd558e5", "883df409712e6429fbed444ac5d41c5ac711b259", "a8d0614d5c936c02f2be23cce54f4e2198d98051", "3614ca9c63bb85ea41b8428972f9cbc54b5b6a46", "3ea1931271b10116424ae107b9e32d9c0a4d6757", "5a236826e7d3d9d7dc01e76587ade00d91f7077c", "bbef215c11045878cda7440ff7d125d9a5c4f2c1", "531a753f5756c458b4d19bbefaed17a0cb4d27d9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 8, "gitStatsSummary": {"insertions": 705, "deletions": 277, "lines": 982, "gitFilesChange": 21}, "spoonStatsSummary": {"TOT": 515, "UPD": 107, "INS": 185, "MOV": 156, "DEL": 67, "spoonFilesChanged": 20, "spoonMethodsChanged": 104}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/misc", "src/main/java/org/redisson", "src/main/java/org/redisson/connection", "src/main/java/org/redisson/cluster", "src/main/java/org/redisson/client", "src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).5.run(io.netty.util.Timeout)", "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).5.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.misc.ConnectionPool.promiseFailure(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,java.lang.Throwable)", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.misc.ConnectionPool", "org.redisson.misc.ConnectionPool.get(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.connection.MasterSlaveEntry,java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).3.run(io.netty.util.Timeout)", "org.redisson.connection.BaseLoadBalancer.unfreeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.connection.BaseLoadBalancer.freeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.misc.ConnectionPool.freezeMaster(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise)", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int)", "org.redisson.connection.ConnectionEntry.FreezeReason", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int)", "org.redisson.misc.ConnectionPool.get()", "org.redisson.connection.MasterSlaveConnectionManager.newFailedFuture(java.lang.Throwable)", "org.redisson.connection.MasterSlaveEntry.addSlave(java.lang.String,int,boolean,org.redisson.connection.ConnectionEntry.NodeType)", "org.redisson.misc.ConnectionPool.tryAcquireConnection(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.connection.BaseLoadBalancer.init(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ConnectionManager,org.redisson.connection.MasterSlaveEntry)", "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).3", "org.redisson.connection.ConnectionEntry.setFreezeReason(org.redisson.connection.ConnectionEntry$FreezeReason)", "org.redisson.connection.ConnectionEntry.connect(org.redisson.MasterSlaveServersConfig).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "org.redisson.connection.SubscribesConnectionEntry.freezeMaster(org.redisson.connection.FreezeReason)", "org.redisson.connection.ConnectionEntry.resetFailedAttempts()", "org.redisson.CommandBatchExecutorService.execute(org.redisson.CommandBatchExecutorService$Entry,org.redisson.connection.NodeSource,io.netty.util.concurrent.Promise,java.util.concurrent.atomic.AtomicInteger,int).4.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture).1.run(io.netty.util.Timeout)", "org.redisson.misc.ConnectionPool.handleQueue(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.BaseMasterSlaveServersConfig", "org.redisson.connection.ConnectionEntry.incFailedAttempts()", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.FutureConnectionListener.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.misc.ConnectionPool.add(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.misc.ConnectionPool.initConnections(org.redisson.connection.SubscribesConnectionEntry,java.lang.Runnable,boolean)", "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.connection.SentinelConnectionManager.slaveUp(java.lang.String,int)", "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).3.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveEntry", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,java.util.concurrent.atomic.AtomicReference).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "org.redisson.BaseMasterSlaveServersConfig.setSlaveReconnectionTimeout(int)", "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).4.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.SentinelConnectionManager.onSlaveDown(java.net.URI,java.lang.String)", "org.redisson.misc.PubSubConnectionPoll", "org.redisson.connection.ConnectionEntry.getFreezeReason()", "org.redisson.cluster.ClusterConnectionManager.checkMasterNodesChange(java.util.Collection)", "org.redisson.connection.init(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ConnectionManager,org.redisson.connection.MasterSlaveEntry)", "org.redisson.connection.IdleConnectionWatcher.validateAmount(org.redisson.connection.IdleConnectionWatcher$Entry)", "org.redisson.misc.ConnectionPool.promiseSuccessful(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise,org.redisson.client.RedisConnection)", "org.redisson.connection.unfreeze(java.lang.String,int)", "org.redisson.CommandExecutorService.convertException(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(org.redisson.cluster.ClusterSlotRange,java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.BaseConfig", "org.redisson.misc.ConnectionPool.handleQueue(org.redisson.connection.SubscribesConnectionEntry,boolean)", "org.redisson.connection.SentinelConnectionManager.onNodeDown(java.net.URI,java.lang.String)", "org.redisson.connection.ConnectionEntry.getServerMode()", "org.redisson.BaseMasterSlaveServersConfig.setSlaveFailedAttempts(int)", "org.redisson.misc.ConnectionPool.add(org.redisson.connection.SubscribesConnectionEntry).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.SingleEntry", "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).2", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).3.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.ConnectionEntry.getFailedAttempts()", "org.redisson.cluster.ClusterConnectionManager.checkSlaveNodesChange(java.util.Collection)", "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.freeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.connection.newFailedFuture(java.lang.Throwable)", "org.redisson.misc.ConnectionPool.add(org.redisson.connection.SubscribesConnectionEntry).1", "org.redisson.connection.NodeSource.toString()", "org.redisson.connection.ConnectionEntry", "org.redisson.connection.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.misc.ConnectionPool.releaseConnection(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.BaseMasterSlaveServersConfig.getSlaveReconnectionTimeout()", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int)", "org.redisson.connection.MasterSlaveEntry.freeze()", "org.redisson.connection.unfreeze(java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.connection.slaveDown(org.redisson.connection.MasterSlaveEntry,java.lang.String,int,org.redisson.connection.ConnectionEntry.FreezeReason)", "org.redisson.client.RedisConnection.asyncWithTimeout(org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI,org.redisson.MasterSlaveServersConfig).1.onMessage(java.lang.String,java.lang.String)", "org.redisson.client.RedisConnection.isOpen()", "org.redisson.BaseMasterSlaveServersConfig.getSlaveFailedAttempts()", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(org.redisson.connection.NodeSource,org.redisson.client.RedisConnection,io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.ConnectionEntry.connectPubSub(org.redisson.MasterSlaveServersConfig).3.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).4.run(io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.util.concurrent.Future).1.run()", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.misc.ConnectionPool.scheduleCheck(org.redisson.connection.SubscribesConnectionEntry).3.run(io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveServersConfig)", "org.redisson.CommandExecutorService.async(boolean,org.redisson.connection.NodeSource,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).6.operationComplete(io.netty.util.concurrent.Future).1.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.connection.BaseLoadBalancer.init(org.redisson.MasterSlaveServersConfig,org.redisson.connection.ConnectionManager)", "org.redisson.connection.BaseLoadBalancer.unfreeze(java.lang.String,int)", "org.redisson.misc.ConnectionPool.connect(org.redisson.connection.SubscribesConnectionEntry,io.netty.util.concurrent.Promise).2.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "Codec key and value decoders are opposite", "body": "When implementing my own custom code, I've found that it seems Codec key and value decoders are opposite.\n\n``` java\npublic class CustomCodec implements Codec {\n...\n    @Override\n    public Decoder<Object> getMapKeyDecoder() {\n        return getValueDecoder();\n    }\n    @Override\n    public Encoder getMapKeyEncoder() {\n        return keyEncoder;\n    }\n\n    @Override\n    public Decoder<Object> getMapValueDecoder() {\n        return keyDecoder;\n    }\n    @Override\n    public Encoder getMapValueEncoder() {\n        return getValueEncoder();\n    }\n}\n```\n\nThis works.\n\n``` java\npublic class CustomCodec implements Codec {\n...\n    @Override\n    public Decoder<Object> getMapKeyDecoder() {\n        return keyDecoder;\n    }\n    @Override\n    public Encoder getMapKeyEncoder() {\n        return keyEncoder;\n    }\n\n    @Override\n    public Decoder<Object> getMapValueDecoder() {\n        return getValueDecoder();\n    }\n    @Override\n    public Encoder getMapValueEncoder() {\n        return getValueEncoder();\n    }\n}\n```\n\nThis does not work.\n", "url": "https://github.com/redisson/redisson/issues/258", "user": "tepsl", "labels": ["bug"], "created": "2015-10-12 16:00:06", "closed": "2015-12-18 14:59:27", "commits": {"9468dd6fc0718b6fc069f3f6aa495ce680861dad": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 66.00027777777778, "commitsDetails": [{"commitHash": "9468dd6fc0718b6fc069f3f6aa495ce680861dad", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b9df357760abc3d868c69c0c9b9b969441cb4bce"], "nameRev": "9468dd6fc0718b6fc069f3f6aa495ce680861dad tags/redisson-2.2.4~27", "commitMessage": "MapKeyDecoder and MapValueDecoder called in wrong order. #258\n", "commitDateTime": "2015-12-17 21:00:56", "authoredDateTime": "2015-12-17 21:00:56", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decoder(org.redisson.client.protocol.CommandData,java.util.List,org.redisson.client.protocol.Decoder)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9468dd6fc0718b6fc069f3f6aa495ce680861dad"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decoder(org.redisson.client.protocol.CommandData,java.util.List,org.redisson.client.protocol.Decoder)"]}, {"title": "EOFException when I use RLock with SerializationCodec", "body": "I configure Redisson to use SerializationCodec instead of default JsonJacksonCodec. Then I run my code in environment with concurrent threads and use Lock object to sync thread. After that I get exception and unlock only after expiration in 30 sec. Previous major version of Redisson does't contain this issues. Similar problem I have when I use CountDown.\n\n``` text\n[nioEventLoopGroup-4-7] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.io.EOFException\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:110)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.io.EOFException\n    at java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2328)\n    at java.io.ObjectInputStream$BlockDataInputStream.readShort(ObjectInputStream.java:2797)\n    at java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:802)\n    at java.io.ObjectInputStream.<init>(ObjectInputStream.java:299)\n    at org.redisson.codec.SerializationCodec$1.decode(SerializationCodec.java:42)\n    at org.redisson.client.protocol.pubsub.PubSubMessageDecoder.decode(PubSubMessageDecoder.java:38)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:179)\n    at org.redisson.client.handler.CommandDecoder.decodeMulti(CommandDecoder.java:199)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:189)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:97)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n```\n", "url": "https://github.com/redisson/redisson/issues/254", "user": "oternovoi", "labels": ["bug"], "created": "2015-10-02 09:21:15", "closed": "2015-10-02 18:00:03", "commits": {"994bb2da4774bbc25ae6758c1b5ef16f7813ab61": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "994bb2da4774bbc25ae6758c1b5ef16f7813ab61", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4c483c6bc0d7f3e62a57d3e0e2a8a62f9a112071", "0349e5c3b0eaf665041aa4139960e1897db67bb8"], "nameRev": "994bb2da4774bbc25ae6758c1b5ef16f7813ab61 tags/redisson-2.1.4~53", "commitMessage": "Merge pull request #255 from setronica-dev/two-locked-threads\n\nfix issue EOFException when I use RLock with SerializationCodec #254", "commitDateTime": "2015-10-02 20:06:01", "authoredDateTime": "2015-10-02 20:06:01", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonCountDownLatch.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "src/main/java/org/redisson/client/protocol/RedisStrictCommand.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "src/test/java/org/redisson/BaseTest.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "src/test/java/org/redisson/RedissonTwoLockedThread.java", "insertions": 159, "deletions": 0, "lines": 159}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCountDownLatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCountDownLatch.countDown()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonCountDownLatch.trySetCount(long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonCountDownLatch.deleteAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.unlock()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.forceUnlockAsync()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisStrictCommand.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.RedisStrictCommand", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseTest.createInstance()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonTwoLockedThread.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTwoLockedThread", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NPE during load testing", "body": "Hi.\nI'm relatively new to java, so sorry if i say something stupid.\nWhen i'm storming my server with 50 concurrent requests using AB, i'm getting NPE during some channel negotiating (as i guess). The following line (CommandDecoder:267):\n\n``` java\n    private MultiDecoder<Object> messageDecoder(CommandData<Object, Object> data, List<Object> parts) {\n        if (data == null) {\n            if (Arrays.asList(\"subscribe\", \"psubscribe\", \"punsubscribe\", \"unsubscribe\").contains(parts.get(0))) {\n                String channelName = (String) parts.get(1);\n                return channels.get(channelName).getCommand().getReplayMultiDecoder(); // <<<<\n            } else if (parts.get(0).equals(\"message\")) {\n```\n\nresults in null pointer exception:\n\n```\n2015-30-09 18:28:11.271 [nioEventLoopGroup-2-2] WARN  i.n.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.NullPointerException\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425) ~[backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230) ~[backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:110) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137) [backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at java.lang.Thread.run(Thread.java:745) [na:1.8.0_60]\nCaused by: java.lang.NullPointerException: null\n    at org.redisson.client.handler.CommandDecoder.messageDecoder(CommandDecoder.java:267) ~[backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at org.redisson.client.handler.CommandDecoder.decodeMulti(CommandDecoder.java:202) ~[backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:189) ~[backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:97) ~[backend-phone-service-0.1.0-shaded-cp.jar:na]\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370) ~[backend-phone-service-0.1.0-shaded-cp.jar:na]\n    ... 18 common frames omitted\n```\n\nI'm not 100% sure where does this problem originate from, but i can tell that those requests use Redisson for inter-process locks and fetching/updating two string sets.\n\nI'm using Redisson 2.1.3 against dockerized Redis 3.0.2 (the standard docker library image)\n\nupd: debugger told me that client has received null for hannels.get() for `redisson__lock__channel__{lock:pn:phone-number:79219767095}`, which, i guess, means trouble with lock.\n", "url": "https://github.com/redisson/redisson/issues/253", "user": "etki", "labels": ["bug"], "created": "2015-09-30 15:37:29", "closed": "2015-10-22 11:17:15", "commits": {"ddf1eaa7c889e6cd1f424c0f820627b8087ac031": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "ddf1eaa7c889e6cd1f424c0f820627b8087ac031", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["df928fe20f12549d1e7b627becd99e18505a3ef1"], "nameRev": "ddf1eaa7c889e6cd1f424c0f820627b8087ac031 tags/redisson-2.1.4~45", "commitMessage": "Skip repeated SUBSCRIBE/UNSUBSCRIBE handling. #253\n", "commitDateTime": "2015-10-19 20:44:34", "authoredDateTime": "2015-10-19 20:44:34", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 8, "deletions": 3, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decodeMulti(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder,long,java.util.List)", "TOT": 11, "UPD": 1, "INS": 3, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ddf1eaa7c889e6cd1f424c0f820627b8087ac031"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 3, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 14, "UPD": 1, "INS": 5, "MOV": 6, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List)", "org.redisson.client.handler.CommandDecoder.messageDecoder(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.decodeMulti(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder,long,java.util.List)"]}, {"title": "Redis master change is not detected properly.", "body": "Redisson does not seem to be detecting Redis master change in failover scenario.  (We are using Redisson 2.1.3).\n\nI have 2 questions regarding this.\n1. After the 60-second timeout (described below) everything started working again, although not in the original configuration.  Can this timeout be changed (lowered) and done so safely?\n2. Should Redisson should be able to detect and react to this last master change back to our original configuration?  We were assuming that it should.\n\nDetails are below.  \n\nI can provide the redis commands we used to reconfigure Redis if they will help.\n\nThank you very much.\n\n--Michael\n# \n\nIn testing redis failover we have discovered that moving a master instance frmo one instance to another causes all our servers to hang.  We have reproduced the issue several times with the following process.\n\nWe are running 3 Redis servers (redis-01, redis-02, and redis-03).  Each server is running both a redis master and a redis slave.  Each master is associated with a slave on one of the other redis servers.\n\nStart multiple work sessions on our application servers running light load\n- On redis-01, get a list of the redis instances running on this server (ps -ef | grep redis)\n- kill -9 <redis process pids>\n  [At this point everything appears great - the test continues to run.  The slave instance has taken over the responsibilities for the failed redis node.  run \"redis-cli cluster nodes\" for a list of all the nodes, the reassigned master and a list of the failed shards.]\n- restart redis on the \"failed\" server - \"service redis_master start\" \"service redis_slave start\"\n  [After 60 seconds, we see our first indication of trouble - we get a redis connection timeout exception on each of the application servers.  If you look at the \"cluster node\" output you should see the two instances back in the list, however at this point they are both slave nodes.  Another server will have two master instances on it.]\n- rebalance the redis nodes - on the server that you just restarted the services, run \"redis-cli cluster failover\" this tells redis to failover the remote master to this instance.  After this step you should be back to the original configuration with one master and one slave instance on each server, with no master/slave combination on the same server.\n\nThis is where our application servers seem to hang.  From yourkit we see several of these:\n\n++++++++++\n\n http-bio-7001-exec-1 [WAITING] [DAEMON]\njava.lang.Object.wait() Object.java:503\nio.netty.util.concurrent.DefaultPromise.awaitUninterruptibly() DefaultPromise.java:286\nio.netty.util.concurrent.DefaultPromise.awaitUninterruptibly() DefaultPromise.java:32\norg.redisson.CommandExecutorService.get(Future) CommandExecutorService.java:181\norg.redisson.RedissonObject.get(Future) RedissonObject.java:48\norg.redisson.RedissonBucket.set(Object, long, TimeUnit) RedissonBucket.java:58\ncom.artfact.am2.service.MemoryManager.setValue(String, Object, long, TimeUnit) MemoryManager.java:154\n\n---\n", "url": "https://github.com/redisson/redisson/issues/250", "user": "mgreenstein", "labels": ["bug"], "created": "2015-09-21 18:32:11", "closed": "2015-10-26 17:44:34", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Resubscribe to topics when RedisPubSubConnection has been reconnected", "body": "", "url": "https://github.com/redisson/redisson/issues/248", "user": "mrniko", "labels": ["bug"], "created": "2015-09-16 12:06:25", "closed": "2015-09-16 15:02:35", "commits": {"387343e304db7d33fb054756281c5dc4f248e8d7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "387343e304db7d33fb054756281c5dc4f248e8d7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["51542946d09950f0ce533278ce378cb9a0127ee2"], "nameRev": "387343e304db7d33fb054756281c5dc4f248e8d7 tags/redisson-2.1.3~4", "commitMessage": "RedisPubSubConnection channel resubscribe. #248\n", "commitDateTime": "2015-09-16 15:09:03", "authoredDateTime": "2015-09-16 15:09:03", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/RedisPubSubConnection.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 42, "deletions": 17, "lines": 59}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisPubSubConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisPubSubConnection", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.getChannels()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.getPatternChannels()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.subscribe(org.redisson.client.codec.Codec,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.psubscribe(org.redisson.client.codec.Codec,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.unsubscribe(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisPubSubConnection.punsubscribe(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionWatchdog.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.reconnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection).1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).2.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.reconnect(org.redisson.client.RedisConnection,io.netty.channel.Channel)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.resubscribe(org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.tryReconnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1.run()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["387343e304db7d33fb054756281c5dc4f248e8d7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 67, "deletions": 17, "lines": 84, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 25, "UPD": 6, "INS": 11, "MOV": 7, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client", "src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int)", "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).2.run()", "org.redisson.client.handler.ConnectionWatchdog.reconnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection).1.run()", "org.redisson.client.RedisPubSubConnection.getPatternChannels()", "org.redisson.client.handler.ConnectionWatchdog.tryReconnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.client.RedisPubSubConnection.subscribe(org.redisson.client.codec.Codec,java.lang.String[])", "org.redisson.client.handler.ConnectionWatchdog.resubscribe(org.redisson.client.RedisConnection)", "org.redisson.client.RedisPubSubConnection", "org.redisson.client.RedisPubSubConnection.getChannels()", "org.redisson.client.RedisPubSubConnection.unsubscribe(java.lang.String[])", "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1.run()", "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).2", "org.redisson.client.RedisPubSubConnection.psubscribe(org.redisson.client.codec.Codec,java.lang.String[])", "org.redisson.client.handler.ConnectionWatchdog.reconnect(org.redisson.client.RedisConnection,io.netty.channel.Channel)", "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.client.RedisPubSubConnection.punsubscribe(java.lang.String[])"]}, {"title": "reconnection functionality doesn't work with AUTH enabled on redis", "body": "If I enable security on redis, re-connection functionality no longer works - wihout security redisson works as expected and re-connects.\n\nSteps to reproduce: enable redis security, run code below and restart redis somewhere in the middle.\n\n``` java\n        Config config = new Config();\n        config.useSingleServer().setAddress( \"127.0.0.1:6379\" ).setPassword( \"foobared\" );\n        Redisson redisson = Redisson.create( config );\n        redisson.flushdb();\n\n        for ( int i = 0; i < 100; i++ ) {\n            RAtomicLong rAtomicLong = redisson.getAtomicLong( \"x\" );\n            System.out.println( rAtomicLong.addAndGet( 1 ) );\n            Thread.sleep( 1 * 1000 );\n        }\n\n        redisson.shutdown();\n```\n\nException\n\n``` java\nException in thread \"main\" org.redisson.client.RedisException: NOAUTH Authentication required.. channel: [id: 0x1e26a078, /127.0.0.1:57780 => /127.0.0.1:6379]\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:168)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:110)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n```\n", "url": "https://github.com/redisson/redisson/issues/242", "user": "turbospaces", "labels": ["bug"], "created": "2015-09-10 13:12:03", "closed": "2015-09-10 15:01:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Subscription connection leak in PubSubConnectionEntry::removeListener", "body": "We have a production system using Redisson to handle notification. However, recently we constantly run into subscription connection exhausted issue. After investigation, I found Redisson doesn't release the subscription connection after the last listener is removed. \n\nEventually, this issue is caused by the following line. It seems ConcurrentLinedQueue doesn't fully implement equals method to compare 2 linked list. Therefore, an empty linked list will never equals to another empty linked list, which eventually leaks all subscription connections.\n\n```\npublic void removeListener(String channelName, RedisPubSubListener listener) {\n\n  channelListeners.remove(channelName, new ConcurrentLinkedQueue<RedisPubSubListener>());\n\n}\n```\n\nThis is a very urgent issue to us. Any help or workaround will be greatly appreciated.\n", "url": "https://github.com/redisson/redisson/issues/237", "user": "liuyin-ocous", "labels": ["bug"], "created": "2015-09-04 20:21:46", "closed": "2015-09-05 09:00:10", "commits": {"48dea3709e5b4f6b2389777ae4066036c08cf4f9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "48dea3709e5b4f6b2389777ae4066036c08cf4f9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2f99a27103db931b8c372b880afa3b4adcffbd8c"], "nameRev": "48dea3709e5b4f6b2389777ae4066036c08cf4f9 tags/redisson-2.1.2~1", "commitMessage": "Subscription connection leak in PubSubConnectionEntry::removeListener\n& unsubscribe process optimization. #237\n", "commitDateTime": "2015-09-05 11:59:51", "authoredDateTime": "2015-09-05 11:59:51", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/PubSubConnectionEntry.java", "insertions": 19, "deletions": 17, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.unsubscribe(java.lang.String,org.redisson.client.RedisPubSubListener).1.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 12, "UPD": 1, "INS": 2, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.removeListener(java.lang.String,org.redisson.client.RedisPubSubListener)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.punsubscribe(java.lang.String,org.redisson.client.RedisPubSubListener).2.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.removeListeners(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["48dea3709e5b4f6b2389777ae4066036c08cf4f9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 17, "lines": 36, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 25, "UPD": 2, "INS": 6, "MOV": 12, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.PubSubConnectionEntry.removeListeners(java.lang.String)", "org.redisson.connection.PubSubConnectionEntry.punsubscribe(java.lang.String,org.redisson.client.RedisPubSubListener).2.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "org.redisson.connection.PubSubConnectionEntry.unsubscribe(java.lang.String,org.redisson.client.RedisPubSubListener).1.onStatus(org.redisson.client.protocol.pubsub.PubSubType,java.lang.String)", "org.redisson.connection.PubSubConnectionEntry.removeListener(java.lang.String,org.redisson.client.RedisPubSubListener)"]}, {"title": "bug? watchdog create new channel not attr connection obj", "body": "RedisConnection.updateChannel update the new channel obj\u3002but the channel attr<CONNECTION> NOT on it, so the second time new channel is down, the watchdog channelInactive invoke method attr(RedisConnection.CONNECTION).get() can NPE.\n\ni thinkd it is a bug.\n\nversion 2.1.1\n", "url": "https://github.com/redisson/redisson/issues/235", "user": "flym", "labels": ["bug"], "created": "2015-09-04 07:08:19", "closed": "2015-09-04 14:23:36", "commits": {"f77034bb026aac11734ace7fbf75fb53a30f3eb9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f77034bb026aac11734ace7fbf75fb53a30f3eb9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["481b2e969cfc77ef0cf95cc4e099327e4c3009e9"], "nameRev": "f77034bb026aac11734ace7fbf75fb53a30f3eb9 tags/redisson-2.1.2~3", "commitMessage": "possible NPE during watchdog reconnection fixed. #235\n", "commitDateTime": "2015-09-04 17:08:28", "authoredDateTime": "2015-09-04 17:08:28", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.updateChannel(io.netty.channel.Channel)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.RedisConnection", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f77034bb026aac11734ace7fbf75fb53a30f3eb9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client"], "changesInPackagesSPOON": ["org.redisson.client.RedisConnection", "org.redisson.client.RedisConnection.updateChannel(io.netty.channel.Channel)"]}, {"title": "CommandBatchExecutor executeAsync method freezes", "body": "Hello,\n\nNice work on the redis client. \n\nI noticed that executeAsync did not complete while running a batch of rediscommands against a cluster.\n\nI noticed that in the line:\n\n```\nfor (java.util.Map.Entry<Integer, Entry> e : commands.entrySet()) {\n            execute(e.getValue(), e.getKey(), voidPromise, new AtomicInteger(commands.size()), 0);\n}\n```\n\nvoidPromise may never complete successfully because it is being re-initialized for every slot entry and its successful completion depends on the number of slots being decremented to zero after all the entries run as shown in the line below from execute(...)\n\n```\n attemptPromise.addListener(new FutureListener<Void>() {\n            @Override\n            public void operationComplete(Future<Void> future) throws Exception {\n                if (future.isCancelled()) {\n                    return;\n                }\n\n                if (future.cause() instanceof RedisMovedException) {\n                    RedisMovedException ex = (RedisMovedException)future.cause();\n                    execute(entry, ex.getSlot(), mainPromise, slots, attempt);\n                    return;\n                }\n\n                if (future.isSuccess()) {\n                    if (slots.decrementAndGet() == 0) {\n                        mainPromise.setSuccess(future.getNow());\n                    }\n                } else {\n                    mainPromise.setFailure(future.cause());\n                }\n            }\n        });\n```\n\nNote that mainPromise is voidPromise from above.\n\nPerhaps the previous line in executeAsync should have been like\n\n```\nAtomicInteger slots = new AtomicInteger(commands.size());\n\nfor (java.util.Map.Entry<Integer, Entry> e : commands.entrySet()) {\n            execute(e.getValue(), e.getKey(), voidPromise, slots, 0);\n}\n```\n", "url": "https://github.com/redisson/redisson/issues/233", "user": "o4oxide", "labels": ["bug"], "created": "2015-09-02 18:56:39", "closed": "2015-09-04 14:23:01", "commits": {"481b2e969cfc77ef0cf95cc4e099327e4c3009e9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "481b2e969cfc77ef0cf95cc4e099327e4c3009e9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8bdd6cf67a453ca60c198cb932e5de67ad3fceea"], "nameRev": "481b2e969cfc77ef0cf95cc4e099327e4c3009e9 tags/redisson-2.1.2~4", "commitMessage": "executeAsync freeze fixed. #233\n", "commitDateTime": "2015-09-04 16:52:44", "authoredDateTime": "2015-09-04 16:52:44", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandBatchExecutorService.executeAsync()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["481b2e969cfc77ef0cf95cc4e099327e4c3009e9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.CommandBatchExecutorService.executeAsync()"]}, {"title": "Major Issue: iterators that uses SCAN/SSCAN/HSCAN command are not using the same node ", "body": "Since the fact that keys/Sets/Hashes in redis does not guarantee the order of the elements within, iterators should stick to the same node when iteration was first started, to avoid duplicate and/or missing items.\n\nFor example, when you have a Set \"A\" in master node contains:\n1) \"1\"\n2) \"2\"\n3) \"3\"\n4) \"4\"\n5) \"5\"\n6) \"6\"\n7) \"7\"\n8) \"8\"\n9) \"9\"\n10) \"10\"\n11) \"11\"\n12) \"12\"\n...\n\na slave node could have it in a completely different ordering:\n1) \"8\"\n2) \"2\"\n3) \"7\"\n4) \"3\"\n5) \"9\"\n6) \"1\"\n7) \"4\"\n8) \"6\"\n9) \"5\"\n10) \"10\"\n11) \"11\"\n12) \"12\"\n...\n\nObviously, the running the command SSCAN \"A\" 0 on master, the result is going to be different to the one from the slave. Further cursor call SSCAN \"A\" n, could also be different.\n\nThe problem is, under the default setting, SentinelConnectionManager uses the RoundRobinBalancer which is utilised to read from both master and slave nodes, and when you have a for loop like this:\n\n``` java\nfor (String i : redisson.<String>getSet(\"A\")) {\n    System.out.println(i);\n}\n```\n\nThe output could contain duplicate/missing item(s), and the results could be different each time you run it.\n", "url": "https://github.com/redisson/redisson/issues/230", "user": "jackygurui", "labels": ["bug"], "created": "2015-08-25 15:56:18", "closed": "2015-09-04 14:22:50", "commits": {"8bdd6cf67a453ca60c198cb932e5de67ad3fceea": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "9b89c1a12c57809b4079f97bf7cebb0d81b987e6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "8bdd6cf67a453ca60c198cb932e5de67ad3fceea", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0f663f0c3e47543305be4ff9cf9b66b8a9682458"], "nameRev": "8bdd6cf67a453ca60c198cb932e5de67ad3fceea tags/redisson-2.1.2~5", "commitMessage": "use same node for SCAN/SSCAN/HSCAN during iteration. #230\n", "commitDateTime": "2015-09-04 16:48:06", "authoredDateTime": "2015-09-04 16:48:06", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/CommandExecutor.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 37, "deletions": 17, "lines": 54}, {"filePath": "src/main/java/org/redisson/RedisClientResult.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "src/main/java/org/redisson/RedissonMap.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "src/main/java/org/redisson/RedissonSet.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/ListScanResult.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "src/main/java/org/redisson/client/protocol/decoder/MapScanResult.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 62, "deletions": 47, "lines": 109}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/LoadBalancer.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandBatchExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandExecutor.java", "spoonMethods": [{"spoonMethodName": "org.redisson.read(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.read(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.readAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.readAsync(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.writeAsync(java.lang.Integer,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.evalAsync(boolean,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.writeAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).5.run(io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisClientResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.scanIterator(org.redisson.client.RedisClient,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMap.iterator().1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonMap.iterator().1.hasNext()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSet.scanIterator(org.redisson.client.RedisClient,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1.hasNext()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ListScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult.setRedisClient(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.ListScanResult.getRedisClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapScanResult.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult.setRedisClient(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.protocol.decoder.MapScanResult.getRedisClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.shutdownAsync()", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.add(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextConnection()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.returnSubscribeConnection(org.redisson.client.RedisPubSubConnection)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.returnConnection(org.redisson.client.RedisConnection)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.getConnection(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.retrieveConnection(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.getAvailableClients()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.unfreeze(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.freeze(java.lang.String,int)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.shutdown()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.connectionReadOp(int,org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getConnection(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.RedisClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9b89c1a12c57809b4079f97bf7cebb0d81b987e6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["fe824978c1b480c90c0c479477c3ea119071e995"], "nameRev": "9b89c1a12c57809b4079f97bf7cebb0d81b987e6 tags/redisson-2.1.4~19", "commitMessage": "SCAN iterator position handling #277, #230\n", "commitDateTime": "2015-11-10 12:32:14", "authoredDateTime": "2015-11-10 12:32:14", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonKeys.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "src/main/java/org/redisson/RedissonMap.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "src/main/java/org/redisson/RedissonScoredSortedSet.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "src/main/java/org/redisson/RedissonSet.java", "insertions": 3, "deletions": 7, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonKeys.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonKeys.createKeysIterator(int,java.lang.String).3.hasNext()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "RedissonMap.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMap.iterator().1.hasNext()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "RedissonScoredSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonScoredSortedSet.iterator().1.hasNext()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "RedissonSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSet.iterator().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSet.iterator().1.hasNext()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8bdd6cf67a453ca60c198cb932e5de67ad3fceea"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 178, "deletions": 77, "lines": 255, "gitFilesChange": 13}, "spoonStatsSummary": {"TOT": 115, "UPD": 5, "INS": 69, "MOV": 36, "DEL": 5, "spoonFilesChanged": 13, "spoonMethodsChanged": 47}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson", "src/main/java/org/redisson/client/protocol/decoder"], "changesInPackagesSPOON": ["org.redisson.client.protocol.decoder.MapScanResult.setRedisClient(org.redisson.client.RedisClient)", "org.redisson.client.protocol.decoder.MapScanResult.getRedisClient()", "org.redisson.connection.BaseLoadBalancer.shutdownAsync()", "org.redisson.RedissonSet.iterator().1.hasNext()", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).5.run(io.netty.util.Timeout)", "org.redisson.CommandExecutorService.writeAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.RedissonSet.scanIterator(org.redisson.client.RedisClient,long)", "org.redisson.CommandExecutorService.evalAllAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int)", "org.redisson.connection.MasterSlaveEntry.connectionReadOp(org.redisson.client.RedisClient)", "org.redisson.CommandExecutorService.evalAsync(boolean,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.String,java.util.List,java.lang.Object[])", "org.redisson.CommandExecutorService.writeAsync(java.lang.Integer,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.client.protocol.decoder.MapScanResult", "org.redisson", "org.redisson.connection.BaseLoadBalancer.returnSubscribeConnection(org.redisson.client.RedisPubSubConnection)", "org.redisson.connection.MasterSlaveConnectionManager.connectionReadOp(int,org.redisson.client.RedisClient)", "org.redisson.CommandExecutorService.readAllAsync(org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.client.protocol.decoder.ListScanResult.getRedisClient()", "org.redisson.RedissonMap.iterator().1", "org.redisson.CommandBatchExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "org.redisson.CommandExecutorService.retryReadRandomAsync(org.redisson.client.protocol.RedisCommand,io.netty.util.concurrent.Promise,java.util.List,java.lang.Object[])", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int)", "org.redisson.CommandExecutorService.readAsync(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.connection.BaseLoadBalancer.shutdown()", "org.redisson.connection.BaseLoadBalancer.unfreeze(java.lang.String,int)", "org.redisson.client.protocol.decoder.ListScanResult.setRedisClient(org.redisson.client.RedisClient)", "org.redisson.connection.BaseLoadBalancer", "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "org.redisson.connection.connectionReadOp(int,org.redisson.client.RedisClient)", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.BaseLoadBalancer.retrieveConnection(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.RedissonMap.iterator().1.hasNext()", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,org.redisson.client.RedisClient,int).7.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.CommandExecutorService.allAsync(boolean,org.redisson.client.protocol.RedisCommand,org.redisson.SlotCallback,java.lang.Object[])", "org.redisson.client.protocol.decoder.ListScanResult", "org.redisson.CommandExecutorService.read(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.connection.BaseLoadBalancer.getConnection(org.redisson.client.RedisClient)", "org.redisson.RedissonSet.iterator().1", "org.redisson.connection.BaseLoadBalancer.returnConnection(org.redisson.client.RedisConnection)", "org.redisson.read(org.redisson.client.RedisClient,java.lang.String,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.CommandExecutorService.readAsync(java.lang.String,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[])", "org.redisson.connection.getConnection(org.redisson.client.RedisClient)", "org.redisson.RedissonMap.scanIterator(org.redisson.client.RedisClient,long)", "org.redisson.connection.BaseLoadBalancer.freeze(java.lang.String,int)", "org.redisson.connection.BaseLoadBalancer.getAvailableClients()", "org.redisson.connection.BaseLoadBalancer.add(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.connection.BaseLoadBalancer.nextConnection()"]}, {"title": "Cluster mode \"Too many open files\" (java.net.SocketException)", "body": "Cluster mode Redisson client running out of files (sockets) in communicating with Redis.\n\nThis occurs even when the Redisson client is not receiving any requests.  It must be a problem with cluster mode connectivity.\n\nTo reproduce, I simply made two calls to my server using Redisson to set a simple value on Redis and then retrieve a simple value.  Then we did nothing at all.\n\nIt appears the Redisson in cluster mode is continually opening new socket connections but not closing existing ones.\n\nAfter about an hour, we started seeing the following exceptions in our server logs.\n\nNote:  I am may have seen a similar behavior in sentinel mode.  We recently upgraded Redisson to 2.1.0 from 1.1.5.  Could this be a more general problem?  We will upgrade to 2.1.1 and test again.\n\nThank you very much.\n\n--Michael\n# \n\ntest machine\n\nAug 14, 2015 8:49:18 AM org.apache.tomcat.util.net.JIoEndpoint$Acceptor run\nSEVERE: Socket accept failed\njava.net.SocketException: Too many open files\n        at java.net.PlainSocketImpl.socketAccept(Native Method)\n        at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n        at java.net.ServerSocket.implAccept(ServerSocket.java:530)\n        at java.net.ServerSocket.accept(ServerSocket.java:498)\n        at org.apache.tomcat.util.net.DefaultServerSocketFactory.acceptSocket(DefaultServerSocketFactory.java:60)\n        at org.apache.tomcat.util.net.JIoEndpoint$Acceptor.run(JIoEndpoint.java:220)\n        at java.lang.Thread.run(Thread.java:745)\n\nAug 14, 2015 8:49:18 AM org.apache.tomcat.util.net.JIoEndpoint$Acceptor run\nSEVERE: Socket accept failed\njava.net.SocketException: Too many open files\n        at java.net.PlainSocketImpl.socketAccept(Native Method)\n        at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n        at java.net.ServerSocket.implAccept(ServerSocket.java:530)\n        at java.net.ServerSocket.accept(ServerSocket.java:498)\n        at org.apache.tomcat.util.net.DefaultServerSocketFactory.acceptSocket(DefaultServerSocketFactory.java:60)\n        at org.apache.tomcat.util.net.JIoEndpoint$Acceptor.run(JIoEndpoint.java:220)\n        at java.lang.Thread.run(Thread.java:745)\n\nAug 14, 2015 8:49:18 AM org.apache.tomcat.util.net.JIoEndpoint$Acceptor run\n# \n\nConnections on the Redis server continually increase:\n\n[root@qa-mq01.artfact.local ~ $ date; netstat -an | grep 192.168.10.135 | wc -l\nTue Aug 18 09:55:51 EDT 2015\n2523\n\n[root@qa-mq01.artfact.local ~ $ date; netstat -an | grep 192.168.10.135 | wc -l\nTue Aug 18 09:56:04 EDT 2015\n2536\n\n[root@qa-mq01.artfact.local ~ $ date; netstat -an | grep 192.168.10.135 | wc -l\nTue Aug 18 10:12:13 EDT 2015\n3490\n# \n\nAnother instance just now from the test machine\n\nAug 18, 2015 10:29:36 AM org.apache.tomcat.util.net.JIoEndpoint$Acceptor run\nSEVERE: Socket accept failed\njava.net.SocketException: Too many open files\n        at java.net.PlainSocketImpl.socketAccept(Native Method)\n        at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n        at java.net.ServerSocket.implAccept(ServerSocket.java:530)\n        at java.net.ServerSocket.accept(ServerSocket.java:498)\n        at org.apache.tomcat.util.net.DefaultServerSocketFactory.acceptSocket(DefaultServerSocketFactory.java:60)\n        at org.apache.tomcat.util.net.JIoEndpoint$Acceptor.run(JIoEndpoint.java:220)\n        at java.lang.Thread.run(Thread.java:745)\n\nAug 18, 2015 10:29:36 AM org.apache.tomcat.util.net.JIoEndpoint$Acceptor run\nSEVERE: Socket accept failed\njava.net.SocketException: Too many open files\n        at java.net.PlainSocketImpl.socketAccept(Native Method)\n        at java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)\n        at java.net.ServerSocket.implAccept(ServerSocket.java:530)\n        at java.net.ServerSocket.accept(ServerSocket.java:498)\n        at org.apache.tomcat.util.net.DefaultServerSocketFactory.acceptSocket(DefaultServerSocketFactory.java:60)\n        at org.apache.tomcat.util.net.JIoEndpoint$Acceptor.run(JIoEndpoint.java:220)\n        at java.lang.Thread.run(Thread.java:745)\n\nAug 18, 2015 10:29:36 AM org.apache.tomcat.util.net.JIoEndpoint$Acceptor run\nSEVERE: Socket accept failed\njava.net.SocketException: Too many open files\n", "url": "https://github.com/redisson/redisson/issues/222", "user": "mgreenstein", "labels": ["bug"], "created": "2015-08-18 14:53:25", "closed": "2015-08-19 14:21:43", "commits": {"15bd810f2bd40ad87a24e60840a1d06e207e0fee": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "15bd810f2bd40ad87a24e60840a1d06e207e0fee", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["190a3bc25e4264bf7bed1e4c81f0c4470fbf7c02"], "nameRev": "15bd810f2bd40ad87a24e60840a1d06e207e0fee tags/redisson-2.1.2~13", "commitMessage": "Cluster nodes connection caching added. #222\n", "commitDateTime": "2015-08-19 10:42:15", "authoredDateTime": "2015-08-19 10:42:15", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ClusterConnectionManager.java", "insertions": 39, "deletions": 45, "lines": 84}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager", "TOT": 16, "UPD": 4, "INS": 5, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.parseInfo(java.lang.String)", "TOT": 12, "UPD": 8, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.addMasterEntry(org.redisson.connection.ClusterPartition,org.redisson.ClusterServersConfig)", "TOT": 13, "UPD": 4, "INS": 2, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.shutdown()", "TOT": 8, "UPD": 3, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).1.run()", "TOT": 22, "UPD": 3, "INS": 3, "MOV": 11, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["15bd810f2bd40ad87a24e60840a1d06e207e0fee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 39, "deletions": 45, "lines": 84, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 71, "UPD": 22, "INS": 12, "MOV": 29, "DEL": 8, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.ClusterConnectionManager.shutdown()", "org.redisson.connection.ClusterConnectionManager.addMasterEntry(org.redisson.connection.ClusterPartition,org.redisson.ClusterServersConfig)", "org.redisson.connection.ClusterConnectionManager", "org.redisson.connection.ClusterConnectionManager.parseInfo(java.lang.String)", "org.redisson.connection.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).1.run()"]}, {"title": "Warnings about serialization exceptions being swallowed (using SerializationCodec with non-Serializable class)", "body": "I wound up pulling my hair out after upgrading from 1.3.1 to 2.1.0 and starting some new projects - the root cause being my attempt to use the SerilizationCodec with objects that were not Serializable. Simplest reproduction:\n\n``` java\n    protected static class NonSerializable {\n        // empty\n    }\n\n    public void testSerializationFailure() {\n        final Redisson redisson = Redisson.create(createConfig().setCodec(new SerializationCodec()));\n        redisson.getBucket(\"serialization\").set(new NonSerializable());\n    }\n```\n\nExpected: a warning about serialization with a root cause of a java.io.NotSerializableException.\nActual: nothing in the logs, threads just hang around wait()ing on DefaultPromise.\n\nI'm not a netty expert so unfortunately I have no PR to fix this. My best guess at root cause lies in CommandExecutorService#async. If I modify the ChannelFutureListener to\n\n``` java\n            future.addListener(new ChannelFutureListener() {\n                @Override\n                public void operationComplete(ChannelFuture future) throws Exception {\n                    if (future.cause() != null) {\n                        throw new RedisConnectionException(\"Failed command \" + command, future.cause());\n                    }\n                    ...\n                }\n            });\n```\n\nI get a nice warning message:\n`[nioEventLoopGroup-3-3] WARN io.netty.util.concurrent.DefaultPromise - An exception was thrown by org.redisson.CommandExecutorService$6.operationComplete()\norg.redisson.client.RedisConnectionException: Failed command RedisCommand [name=SET, subName=null] <snip />`\n\nThe listener originated in 2019283a2edeb607d4010c77a5f84a0c9dcdb165\n", "url": "https://github.com/redisson/redisson/issues/216", "user": "scubasau", "labels": ["bug"], "created": "2015-08-11 17:53:15", "closed": "2015-08-12 06:54:31", "commits": {"2ac65d2fc24bb98724794d73ecc264accf71b63f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2ac65d2fc24bb98724794d73ecc264accf71b63f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["252493e56bc284d9684f639db526793eb2d01c4a"], "nameRev": "2ac65d2fc24bb98724794d73ecc264accf71b63f tags/redisson-2.1.1~7", "commitMessage": "Command encoding errors handling bug fixed. #216\n", "commitDateTime": "2015-08-12 09:53:26", "authoredDateTime": "2015-08-12 09:53:26", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandBatchExecutorService.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/org/redisson/client/{RedisConnectionClosedException.java => RedisConnectionWriteException.java}", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "src/main/java/org/redisson/client/handler/CommandsQueue.java", "insertions": 15, "deletions": 11, "lines": 26}, {"filePath": "src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "src/test/java/org/redisson/RedissonTest.java", "insertions": 68, "deletions": 0, "lines": 68}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandBatchExecutorService.java", "spoonMethods": []}, {"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 9, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "RedisConnectionWriteException.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnectionClosedException", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "CommandsQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandsQueue.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandsQueue.QueueCommands", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.ChannelHandlerContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2ac65d2fc24bb98724794d73ecc264accf71b63f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 26, "deletions": 24, "lines": 50, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 27, "UPD": 9, "INS": 6, "MOV": 8, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson", "src/main/java/org/redisson/client/handler", "src/main/java/org/redisson/client", "src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandsQueue.sendData(io.netty.channel.ChannelHandlerContext)", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).6.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.client.RedisConnectionClosedException", "org.redisson.connection.SingleConnectionManager", "org.redisson.client.handler.CommandsQueue.QueueCommands", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.client.handler.CommandsQueue.userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"]}, {"title": "RBatch NPE's", "body": "", "url": "https://github.com/redisson/redisson/issues/200", "user": "mrniko", "labels": ["bug"], "created": "2015-07-29 07:50:11", "closed": "2015-07-30 08:08:38", "commits": {"75b10296fe5cc65a24b7b8f9901c56f1396f11a6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "75b10296fe5cc65a24b7b8f9901c56f1396f11a6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["eba917f4f2f4c4aa35666b1339e0ba0c6eb09fed"], "nameRev": "75b10296fe5cc65a24b7b8f9901c56f1396f11a6 tags/redisson-2.1.0~14", "commitMessage": "Batch big response decoding fixed. #200\n", "commitDateTime": "2015-07-30 11:08:14", "authoredDateTime": "2015-07-30 11:08:14", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "src/test/java/org/redisson/RedissonBatchTest.java", "insertions": 26, "deletions": 0, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonBatchTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonBatchTest.testBatchBigRequest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["75b10296fe5cc65a24b7b8f9901c56f1396f11a6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"]}, {"title": "Concurrency Issues", "body": "Today I tried some tests to experiment with Redisson's performance using a build from `/master` and discovered significant concurrency issues. I'm not sure what the state of this code is, so perhaps these issues are known ones, but wanted to make sure you guys are aware of them.\n\nI have a very simple app that a) Creates a Redisson instance with a connection pool of 50 to masters and 50 to slaves, then b) creates a quick thread pool using Executors.newFixedThreadPool() and then c) feeds it Runnables, each of which generates a random string and adds it to the end of a Deque. \n\nWhenever I do any of these three things: 1) Add >1 millions of queued Runnables or 2) Increase the number of threads >20 or 3) add a .contains() call on the Deque (more on that in a sec), I get a ton of exceptions that don't include any of my code in the stack trace. Here's one such snippet:\n\n```\n[main] INFO org.redisson.connection.ClusterConnectionManager - master: //127.0.0.1:7000 for slot range: 0-5460 added\n[main] INFO org.redisson.connection.ClusterConnectionManager - master: //127.0.0.1:7004 for slot range: 5461-10922 added\n[main] INFO org.redisson.connection.ClusterConnectionManager - master: //127.0.0.1:7005 for slot range: 10923-16383 added\n[nioEventLoopGroup-2-9] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@57a2506d(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@57a2506d(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-16] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@635d00df(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@635d00df(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-5] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\n[nioEventLoopGroup-2-11] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@469068c(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@469068c(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-7] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\n[nioEventLoopGroup-2-12] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\n[nioEventLoopGroup-2-3] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@3722d627(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@3722d627(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-1] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@4f07f76b(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@4f07f76b(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@2fdf959a(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@2fdf959a(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@7cdcbd37(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@7cdcbd37(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@48ce556d(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@48ce556d(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-12] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@33a1a4e7(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@33a1a4e7(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-13] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@10b9a25a(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@10b9a25a(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-10] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@12693591(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@12693591(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-10] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@a7eb2c2(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@a7eb2c2(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-10] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@71278849(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@71278849(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n[nioEventLoopGroup-2-8] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.handler.codec.DecoderException: java.lang.IllegalStateException: complete already: DefaultPromise@6e7c07e9(failure(java.util.concurrent.CancellationException)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:425)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:230)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:308)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:294)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.IllegalStateException: complete already: DefaultPromise@6e7c07e9(failure(java.util.concurrent.CancellationException)\n    at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:400)\n    at org.redisson.client.handler.CommandDecoder.handleResult(CommandDecoder.java:245)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:162)\n    at org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:104)\n    at io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:370)\n    ... 18 more\n```\n", "url": "https://github.com/redisson/redisson/issues/199", "user": "pluttrell", "labels": ["bug"], "created": "2015-07-29 04:42:22", "closed": "2015-08-03 08:17:50", "commits": {"03246b95d667c1c26ab6ff141bd27ef13a32e31f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "0b2e304299142139c6ce9fc8a5e01d41f30162a7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "fcd72d9ba891c026918714a440352b5c5c9eaeac": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "03246b95d667c1c26ab6ff141bd27ef13a32e31f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["75b10296fe5cc65a24b7b8f9901c56f1396f11a6"], "nameRev": "03246b95d667c1c26ab6ff141bd27ef13a32e31f tags/redisson-2.1.0~13", "commitMessage": "RedissonList contains method speed optimization. #199\n", "commitDateTime": "2015-07-30 11:13:43", "authoredDateTime": "2015-07-30 11:13:43", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonList.java", "insertions": 9, "deletions": 3, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonList.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonList.indexOfAsync(java.lang.Object,org.redisson.client.protocol.convertor.Convertor)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0b2e304299142139c6ce9fc8a5e01d41f30162a7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5c1fba07046dcaca242feb6997c70c30f99b85e3"], "nameRev": "0b2e304299142139c6ce9fc8a5e01d41f30162a7 tags/redisson-2.1.0~6", "commitMessage": "NPE fixed.  #199\n", "commitDateTime": "2015-08-02 16:27:04", "authoredDateTime": "2015-08-02 16:27:04", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/ClusterConnectionManager.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "fcd72d9ba891c026918714a440352b5c5c9eaeac", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7f95eb99e960e72458522ddf5a5403eee8f90b21"], "nameRev": "fcd72d9ba891c026918714a440352b5c5c9eaeac tags/redisson-2.1.0~3", "commitMessage": "Connection timeout handling minor improvements. #199\n", "commitDateTime": "2015-08-03 16:14:57", "authoredDateTime": "2015-08-03 16:14:57", "commitGitStats": [{"filePath": "src/main/java/org/redisson/CommandExecutorService.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "src/main/java/org/redisson/client/handler/CommandDecoder.java", "insertions": 13, "deletions": 10, "lines": 23}, {"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 3, "deletions": 14, "lines": 17}, {"filePath": "src/main/java/org/redisson/connection/ConnectionEntry.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 4, "deletions": 15, "lines": 19}, {"filePath": "src/main/java/org/redisson/connection/SingleEntry.java", "insertions": 0, "deletions": 4, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandExecutorService.java", "spoonMethods": [{"spoonMethodName": "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).4.run(io.netty.util.Timeout)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "CommandDecoder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean,io.netty.channel.Channel)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.CommandDecoder.handleMultiResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextConnection()", "TOT": 9, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 6}]}, {"spoonFilePath": "ConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ConnectionEntry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.connect(org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.connectionWriteOp()", "TOT": 10, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 6}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SingleEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleEntry", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SingleEntry.acquireSubscribeConnection()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["03246b95d667c1c26ab6ff141bd27ef13a32e31f", "0b2e304299142139c6ce9fc8a5e01d41f30162a7", "fcd72d9ba891c026918714a440352b5c5c9eaeac"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 61, "deletions": 48, "lines": 109, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 56, "UPD": 11, "INS": 15, "MOV": 10, "DEL": 20, "spoonFilesChanged": 8, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client/handler", "src/main/java/org/redisson/connection", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.client.handler.CommandDecoder.decode(io.netty.buffer.ByteBuf,org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,org.redisson.client.protocol.Decoder)", "org.redisson.connection.BaseLoadBalancer.nextConnection()", "org.redisson.connection.ConnectionEntry", "org.redisson.connection.MasterSlaveEntry", "org.redisson.client.handler.CommandDecoder.handleMultiResult(org.redisson.client.protocol.CommandData,java.util.List,io.netty.channel.Channel,java.lang.Object)", "org.redisson.connection.MasterSlaveEntry.connectionWriteOp()", "org.redisson.connection.ClusterConnectionManager", "org.redisson.connection.ClusterConnectionManager.initEntry(org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.ConnectionEntry.connect(org.redisson.MasterSlaveServersConfig)", "org.redisson.RedissonList.indexOfAsync(java.lang.Object,org.redisson.client.protocol.convertor.Convertor)", "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean,io.netty.channel.Channel)", "org.redisson.client.handler.CommandDecoder.handleResult(org.redisson.client.protocol.CommandData,java.util.List,java.lang.Object,boolean)", "org.redisson.connection.SingleEntry.acquireSubscribeConnection()", "org.redisson.client.handler.CommandDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)", "org.redisson.CommandExecutorService.async(boolean,int,org.redisson.client.protocol.decoder.MultiDecoder,org.redisson.client.codec.Codec,org.redisson.client.protocol.RedisCommand,java.lang.Object[],io.netty.util.concurrent.Promise,int).4.run(io.netty.util.Timeout)", "org.redisson.connection.SingleEntry"]}, {"title": "Redisson calls do not time out and very long cache times depending on ttl setting", "body": "Hi, while developing using redisson some problems with timeouts and cache times are experienced.\n\n1) Consider the following scenario:\n\n```\ntry {\n     node = configCacheBusinessLogic.get();\n} catch (RedisException e) {\n     log.warn(\"Failed to get from cache, fall back to database\", e);\n     node = configService.get();\n}\n```\n\n2) In ConfigCacheBusinessLogic:\n\n```\n@Cacheable(value = CACHE_NAME, key = CACHE_KEY_SPEL)\npublic JsonNode get() throws AbstractCustomException {\n    //configService.get() is database logic wrapped in @Transactional\n    return configService.get();\n}\n```\n\n3) @Cacheable uses a class that extends Spring's Cache: \n\n```\n@Override\npublic ValueWrapper get(Object key) {\n   PerformanceLogHelper.startTimer(CACHE_TIME);\n   try {\n       RBucket bucket = redisson.getBucket((String) key);\n       Object value = bucket.get();\n       return toWrapper(value);\n    } finally {\n        PerformanceLogHelper.stopTimer(CACHE_TIME);\n    }\n}\n```\n\nNow there are several problems here. Timeout exceptions are being thrown, but seemingly at random times ignoring the timeout setting of redisson. It is also somehow being affected by ttl setting as the shorter ttl yields lower cache times, as well as the frequency of hitting the cache. You can see it from the following graphs of CACHE_TIME timer:\n1. Long TTL setting, and around 4-5 queries per minute (cache time goes as high as 800,000 ms):\n![long ttl not many queries](https://cloud.githubusercontent.com/assets/3584701/8947897/ba086774-35db-11e5-9314-3c844218bce6.png)\n2 . With long TTL setting and around 200 queries per minute, cache times also go as high as 800,000 ms but there are fewer spikes than in case 1 (sorry no screenshot)\n3. Short TTL setting, around 4-5 queries per minute (cache time goes as high as 800 ms):\n![short tll not many queries](https://cloud.githubusercontent.com/assets/3584701/8947906/d30ba498-35db-11e5-8491-2c5e0683e31f.png)\n4. Short TTL setting, around 200 queries per minute (cache time goes as high as 1000 ms but very rarely):\n![short ttl many queries](https://cloud.githubusercontent.com/assets/3584701/8947916/eacb9976-35db-11e5-8878-d5591f1ac113.png)\n\nSo to summarize:\n\n| TTL | Queries per minute | Max cache time | Cache time spikes | Picture in the previous list |\n| --- | --- | --- | --- | --- |\n| Long | 4-5 | 800,000 | Many | 1 |\n| Long | ~200 | 800,000 | Few | 2 (no pic) |\n| Short | 4-5 | 800 | Many | 3 |\n| Short | ~200 | 1000 | Few | 4 |\n\nIn all cases the timeout was set to 100ms, 3 attempts with 100ms interval. In all the cases in the end requests succeed to fall over to the database (either through a timeout error or through returning null). Regardless, the timeout is not being thrown according to the settings. Please let me know if you might know the cause of the issue. Thoroughly investigated the code on this side and it seems like the issue is in redisson. Let me know if you need more context\n", "url": "https://github.com/redisson/redisson/issues/198", "user": "oleg-gr", "labels": ["bug"], "created": "2015-07-29 01:53:03", "closed": "2015-10-02 00:30:45", "commits": {"1c791fd1c7bd325dd3705ff272598a5ba70bc3ca": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "4b88e8ab2b2322986885b0509fbd793f26a0b735": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "6bc5faa44286dfd1c6f916b97963355822a69d5f": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "043b2c2e099095ed42a5e907294c4f029f63ac20": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "3aced8e178bde02151b70b8fccba3f3a7a6a2936": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "429eb6691ab780be19d117a1d339067450f1b206": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "e0814eb73fa4e58ac80cef1a8f5c2760298330f9": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "7e31aad67a1e08486fbd0f9e79d1364fd426480d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "51542946d09950f0ce533278ce378cb9a0127ee2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 64.00027777777778, "commitsDetails": [{"commitHash": "1c791fd1c7bd325dd3705ff272598a5ba70bc3ca", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b2b19cd319be66fb5e86100d827d7e4dad430071"], "nameRev": "1c791fd1c7bd325dd3705ff272598a5ba70bc3ca tags/redisson-2.1.0~16", "commitMessage": "RBucket.set with timeout fixed. #198\n", "commitDateTime": "2015-07-29 14:18:26", "authoredDateTime": "2015-07-29 14:18:26", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/protocol/RedisCommands.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonBucketTest.java", "insertions": 16, "deletions": 5, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisCommands.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.protocol", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonBucketTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBucketTest.testExpire()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4b88e8ab2b2322986885b0509fbd793f26a0b735", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["b3b2629de279fb085240365b35c1e636eef65f7a"], "nameRev": "4b88e8ab2b2322986885b0509fbd793f26a0b735 tags/redisson-2.1.0~9", "commitMessage": "HashedWheelTimer while interval calculation fixed. #198\n", "commitDateTime": "2015-07-30 15:48:31", "authoredDateTime": "2015-07-30 15:48:31", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 1, "deletions": 4, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveServersConfig)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.main(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager.init(org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6bc5faa44286dfd1c6f916b97963355822a69d5f", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4b88e8ab2b2322986885b0509fbd793f26a0b735"], "nameRev": "6bc5faa44286dfd1c6f916b97963355822a69d5f tags/redisson-2.1.0~8", "commitMessage": "tickDuration fixed. #198\n", "commitDateTime": "2015-07-30 17:37:19", "authoredDateTime": "2015-07-30 17:37:19", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveServersConfig)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "043b2c2e099095ed42a5e907294c4f029f63ac20", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["abe97f75e86e925c018cec87e7739ce555ff81bd"], "nameRev": "043b2c2e099095ed42a5e907294c4f029f63ac20 tags/redisson-2.1.3~30", "commitMessage": "channel configuration during reconnection. #198\n", "commitDateTime": "2015-09-07 10:13:56", "authoredDateTime": "2015-09-07 10:13:56", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/ReconnectListener.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 1, "deletions": 14, "lines": 15}, {"filePath": "src/main/java/org/redisson/connection/ConnectionEntry.java", "insertions": 31, "deletions": 4, "lines": 35}, {"filePath": "src/main/java/org/redisson/connection/SingleEntry.java", "insertions": 1, "deletions": 13, "lines": 14}, {"filePath": "src/main/java/org/redisson/connection/SubscribesConnectionEntry.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReconnectListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.setReconnectListener(org.redisson.client.ReconnectListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.onReconnect(io.netty.channel.Channel)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.updateChannel(io.netty.channel.Channel)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionWatchdog.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "TOT": 8, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 6}]}, {"spoonFilePath": "ConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ConnectionEntry.connect(org.redisson.MasterSlaveServersConfig)", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.ConnectionEntry.connectPubSub(org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleEntry.nextPubSubConnection()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 5}]}, {"spoonFilePath": "SubscribesConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SubscribesConnectionEntry.connectPubSub(org.redisson.MasterSlaveServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3aced8e178bde02151b70b8fccba3f3a7a6a2936", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["5d0df18ec75fd305b08ae96d752c69647e82ed56"], "nameRev": "3aced8e178bde02151b70b8fccba3f3a7a6a2936 tags/redisson-2.1.3~28", "commitMessage": "license added. #198\n", "commitDateTime": "2015-09-07 10:40:38", "authoredDateTime": "2015-09-07 10:40:38", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/ReconnectListener.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReconnectListener.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "429eb6691ab780be19d117a1d339067450f1b206", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3aced8e178bde02151b70b8fccba3f3a7a6a2936"], "nameRev": "429eb6691ab780be19d117a1d339067450f1b206 tags/redisson-2.1.3~27", "commitMessage": "init reconnected channel. #198\n", "commitDateTime": "2015-09-07 16:34:44", "authoredDateTime": "2015-09-07 16:34:44", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/ReconnectListener.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 15, "deletions": 4, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReconnectListener.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.onReconnect(org.redisson.client.RedisConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.onReconnect(io.netty.channel.Channel)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.updateChannel(io.netty.channel.Channel)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionWatchdog.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 11, "UPD": 0, "INS": 5, "MOV": 5, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e0814eb73fa4e58ac80cef1a8f5c2760298330f9", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["429eb6691ab780be19d117a1d339067450f1b206"], "nameRev": "e0814eb73fa4e58ac80cef1a8f5c2760298330f9 tags/redisson-2.1.3~26", "commitMessage": "Commands decoding during reconnection fixed. #198\n", "commitDateTime": "2015-09-08 09:57:46", "authoredDateTime": "2015-09-08 09:57:46", "commitGitStats": [{"filePath": "src/main/java/org/redisson/client/handler/ConnectionWatchdog.java", "insertions": 12, "deletions": 5, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionWatchdog.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture)", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7e31aad67a1e08486fbd0f9e79d1364fd426480d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["7ea7e82e40ae4bb9e67e6ce12f33342a336ae71a"], "nameRev": "7e31aad67a1e08486fbd0f9e79d1364fd426480d tags/redisson-2.1.3~21", "commitMessage": "closeConnectionAfterFailAttempts. #198\n", "commitDateTime": "2015-09-11 19:34:49", "authoredDateTime": "2015-09-11 19:34:49", "commitGitStats": [{"filePath": "src/main/java/org/redisson/BaseConfig.java", "insertions": 27, "deletions": 9, "lines": 36}, {"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/ClusterConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseConfig", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseConfig.setCloseConnectionAfterFailAttempts(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseConfig.getCloseConnectionAfterFailAttempts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseConfig.getClientName()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseConfig.getPingTimeout()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.resetFailAttempt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.incFailAttempt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.client.RedisConnection.getFailAttempts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.returnConnection(org.redisson.client.RedisConnection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.create(org.redisson.ClusterServersConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.releaseWrite(org.redisson.client.RedisConnection)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "51542946d09950f0ce533278ce378cb9a0127ee2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["d484c1959859a97559e4e8d784fd5dfdcf9aeb11"], "nameRev": "51542946d09950f0ce533278ce378cb9a0127ee2 tags/redisson-2.1.3~5", "commitMessage": "reconnect wrapped Channel in RedisConnection when RefreshConnectionAfterFails has been reached. #198\n", "commitDateTime": "2015-09-15 18:03:47", "authoredDateTime": "2015-09-15 18:03:47", "commitGitStats": [{"filePath": "src/main/java/org/redisson/BaseConfig.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "src/main/java/org/redisson/client/RedisConnection.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/ClusterConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.BaseConfig.setCloseConnectionAfterFailAttempts(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseConfig.getCloseConnectionAfterFailAttempts()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.BaseConfig", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisConnection.java", "spoonMethods": [{"spoonMethodName": "org.redisson.client.RedisConnection.forceReconnect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.returnConnection(org.redisson.client.RedisConnection)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.create(org.redisson.ClusterServersConfig)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.releaseWrite(org.redisson.client.RedisConnection)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1c791fd1c7bd325dd3705ff272598a5ba70bc3ca", "4b88e8ab2b2322986885b0509fbd793f26a0b735", "6bc5faa44286dfd1c6f916b97963355822a69d5f", "043b2c2e099095ed42a5e907294c4f029f63ac20", "3aced8e178bde02151b70b8fccba3f3a7a6a2936", "429eb6691ab780be19d117a1d339067450f1b206", "e0814eb73fa4e58ac80cef1a8f5c2760298330f9", "7e31aad67a1e08486fbd0f9e79d1364fd426480d", "51542946d09950f0ce533278ce378cb9a0127ee2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 9, "gitStatsSummary": {"insertions": 213, "deletions": 85, "lines": 298, "gitFilesChange": 14}, "spoonStatsSummary": {"TOT": 112.0, "UPD": 28.0, "INS": 38.0, "MOV": 26.0, "DEL": 20.0, "spoonFilesChanged": 14, "spoonMethodsChanged": 38}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/client", "src/main/java/org/redisson/connection", "src/main/java/org/redisson/client/handler", "src/main/java/org/redisson", "src/main/java/org/redisson/client/protocol"], "changesInPackagesSPOON": ["org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture)", "org.redisson.BaseConfig.setCloseConnectionAfterFailAttempts(int)", "org.redisson.connection.SingleConnectionManager", "org.redisson.client.RedisConnection.updateChannel(io.netty.channel.Channel)", "org.redisson.connection.BaseLoadBalancer.returnConnection(org.redisson.client.RedisConnection)", "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.MasterSlaveEntry.releaseWrite(org.redisson.client.RedisConnection)", "org.redisson.connection.ClusterConnectionManager.create(org.redisson.ClusterServersConfig)", "org.redisson.BaseConfig.getCloseConnectionAfterFailAttempts()", "org.redisson.connection.SentinelConnectionManager", "org.redisson.BaseConfig", "org.redisson.client.RedisConnection.onReconnect(io.netty.channel.Channel)", "org.redisson.client.RedisConnection", "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2", "org.redisson.client.RedisConnection.incFailAttempt()", "org.redisson.connection.SubscribesConnectionEntry.connectPubSub(org.redisson.MasterSlaveServersConfig)", "org.redisson.client.onReconnect(org.redisson.client.RedisConnection)", "org.redisson.connection.ConnectionEntry.connect(org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.client.RedisConnection.forceReconnect()", "org.redisson.client.protocol", "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1", "org.redisson.connection.SingleConnectionManager.init(org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.SingleEntry.nextPubSubConnection()", "org.redisson.connection.MasterSlaveConnectionManager.main(java.lang.String[])", "org.redisson.connection.ConnectionEntry.connectPubSub(org.redisson.MasterSlaveServersConfig)", "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int)", "org.redisson.BaseConfig.getPingTimeout()", "org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.client.RedisConnection.getFailAttempts()", "org.redisson.client.RedisConnection.setReconnectListener(org.redisson.client.ReconnectListener)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,org.redisson.client.RedisConnection,io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.BaseConfig.getClientName()", "org.redisson.client.RedisConnection.resetFailAttempt()", "org.redisson.client.handler.ConnectionWatchdog.doReConnect(io.netty.channel.EventLoopGroup,org.redisson.client.RedisConnection,int).2.operationComplete(io.netty.channel.ChannelFuture).1.run()", "org.redisson.connection.ConnectionEntry", "org.redisson.client"]}, {"title": "NullPointerException When Using Cluster Config", "body": "With release 2.0.0, while using sample cluster setup using the create-cluster script from redis (http://redis.io/topics/cluster-tutorial) and this Redisson sample code:\n\n```\nConfig config = new Config();\n    config.useClusterServers()\n      .setScanInterval(2000) // sets cluster state scan interval\n      .addNodeAddress(\"127.0.0.1:30001\");\nRedisson redisson = Redisson.create(config);\n```\n\nI always get the following NPE:\n\n```\n[main] INFO org.redisson.connection.ClusterConnectionManager - master: //127.0.0.1:30001 for slot range: 0-5460 added\nException in thread \"main\" java.lang.NullPointerException\n    at org.redisson.connection.MasterSlaveConnectionManager.createClient(MasterSlaveConnectionManager.java:130)\n    at org.redisson.connection.MasterSlaveEntry.<init>(MasterSlaveEntry.java:61)\n    at org.redisson.connection.SingleEntry.<init>(SingleEntry.java:33)\n    at org.redisson.connection.ClusterConnectionManager.addMasterEntry(ClusterConnectionManager.java:90)\n    at org.redisson.connection.ClusterConnectionManager.<init>(ClusterConnectionManager.java:64)\n    at org.redisson.Redisson.<init>(Redisson.java:74)\n    at org.redisson.Redisson.create(Redisson.java:102)\n    ....\n```\n", "url": "https://github.com/redisson/redisson/issues/197", "user": "pluttrell", "labels": ["bug"], "created": "2015-07-27 19:48:32", "closed": "2015-07-30 08:16:50", "commits": {"69d601a5e55409f02c9c710b1ec4cc8fa674b70a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "d9d803c013fe6ee834e554da570e34a916a615b3": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "69d601a5e55409f02c9c710b1ec4cc8fa674b70a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4dfdd8013fddfe465f8a2d091a3825a7fd6444ec"], "nameRev": "69d601a5e55409f02c9c710b1ec4cc8fa674b70a tags/redisson-2.1.0~23", "commitMessage": "Cluster Config NPE fixed. #197\n", "commitDateTime": "2015-07-28 00:59:41", "authoredDateTime": "2015-07-28 00:59:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ClusterConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d9d803c013fe6ee834e554da570e34a916a615b3", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4c39fcf139d4f14549950961b0d4b506670b1335"], "nameRev": "d9d803c013fe6ee834e554da570e34a916a615b3 tags/redisson-2.1.0~18", "commitMessage": "new flags added. #197\n", "commitDateTime": "2015-07-29 09:42:41", "authoredDateTime": "2015-07-29 09:42:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ClusterNodeInfo.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterNodeInfo.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.Flag", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["69d601a5e55409f02c9c710b1ec4cc8fa674b70a", "d9d803c013fe6ee834e554da570e34a916a615b3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.ClusterConnectionManager", "org.redisson.connection.ClusterNodeInfo.Flag"]}, {"title": "can't stop via shutdown", "body": "when call shutdown(),it cause these error again and again and never stop the application.\nI single the JVM via Ctrl + D and there is a shutdown() hooked in Play's lifecycle's onShutdown() callback.\n\n``` scala\n  lazy val get: Redisson = {\n    val redissonConfig = parseRedissonConfig(config)\n    val redisson = Redisson.create(redissonConfig)\n    lifecycle.addStopHook(() => Future.successful {\n      redisson.shutdown()\n    })\n    redisson\n  }\n```\n\n```\n[warn] - io.netty.channel.AbstractChannel - Force-closing a channel whose registration task was not accepted by an event loop: [id: 0x76514d59]\njava.util.concurrent.RejectedExecutionException: event executor terminated\n    at io.netty.util.concurrent.SingleThreadEventExecutor.reject(SingleThreadEventExecutor.java:672) ~[io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.util.concurrent.SingleThreadEventExecutor.addTask(SingleThreadEventExecutor.java:264) ~[io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.util.concurrent.SingleThreadEventExecutor.execute(SingleThreadEventExecutor.java:655) ~[io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.channel.AbstractChannel$AbstractUnsafe.register(AbstractChannel.java:458) ~[io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.channel.SingleThreadEventLoop.register(SingleThreadEventLoop.java:68) [io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.channel.SingleThreadEventLoop.register(SingleThreadEventLoop.java:56) [io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.channel.MultithreadEventLoopGroup.register(MultithreadEventLoopGroup.java:75) [io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.bootstrap.AbstractBootstrap.initAndRegister(AbstractBootstrap.java:324) [io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.bootstrap.Bootstrap.doResolveAndConnect(Bootstrap.java:157) [io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at io.netty.bootstrap.Bootstrap.connect(Bootstrap.java:113) [io.netty.netty-all-4.1.0.Beta5.jar:4.1.0.Beta5]\n    at com.lambdaworks.redis.RedisClient.connect(RedisClient.java:176) [org.redisson.redisson-1.3.0.jar:na]\n    at com.lambdaworks.redis.RedisClient.connectAsync(RedisClient.java:149) [org.redisson.redisson-1.3.0.jar:na]\n    at com.lambdaworks.redis.RedisClient.connect(RedisClient.java:132) [org.redisson.redisson-1.3.0.jar:na]\n    at org.redisson.connection.MasterSlaveEntry.connectionWriteOp(MasterSlaveEntry.java:127) [org.redisson.redisson-1.3.0.jar:na]\n    at org.redisson.connection.MasterSlaveConnectionManager.connectionWriteOp(MasterSlaveConnectionManager.java:770) [org.redisson.redisson-1.3.0.jar:na]\n    at org.redisson.connection.MasterSlaveConnectionManager.writeAsync(MasterSlaveConnectionManager.java:249) [org.redisson.redisson-1.3.0.jar:na]\n    at org.redisson.connection.MasterSlaveConnectionManager.writeAsync(MasterSlaveConnectionManager.java:217) [org.redisson.redisson-1.3.0.jar:na]\n    at org.redisson.RedissonList.addAllAsync(RedissonList.java:156) [org.redisson.redisson-1.3.0.jar:na]\n    at org.redisson.RedissonList.addAll(RedissonList.java:148) [org.redisson.redisson-1.3.0.jar:na]\n    at org.redisson.RedissonList.add(RedissonList.java:96) [org.redisson.redisson-1.3.0.jar:na]\n    at org.redisson.RedissonQueue.offer(RedissonQueue.java:43) [org.redisson.redisson-1.3.0.jar:na]\n    at service.Pumper$$anonfun$receive$1.applyOrElse(StatisticService.scala:59) [cn.q-game.statisticserver-1.0-SNAPSHOT-sans-externalized.jar:na]\n    at akka.actor.Actor$class.aroundReceive(Actor.scala:475) [com.typesafe.akka.akka-actor_2.11-2.4-M2.jar:na]\n    at service.Pumper.aroundReceive(StatisticService.scala:53) [cn.q-game.statisticserver-1.0-SNAPSHOT-sans-externalized.jar:na]\n    at akka.actor.ActorCell.receiveMessage(ActorCell.scala:516) [com.typesafe.akka.akka-actor_2.11-2.4-M2.jar:na]\n    at akka.actor.ActorCell.invoke(ActorCell.scala:487) [com.typesafe.akka.akka-actor_2.11-2.4-M2.jar:na]\n    at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:256) [com.typesafe.akka.akka-actor_2.11-2.4-M2.jar:na]\n    at akka.dispatch.Mailbox.run(Mailbox.scala:223) [com.typesafe.akka.akka-actor_2.11-2.4-M2.jar:na]\n    at akka.dispatch.Mailbox.exec(Mailbox.scala:233) [com.typesafe.akka.akka-actor_2.11-2.4-M2.jar:na]\n    at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260) [org.scala-lang.scala-library-2.11.7.jar:na]\n    at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339) [org.scala-lang.scala-library-2.11.7.jar:na]\n    at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979) [org.scala-lang.scala-library-2.11.7.jar:na]\n    at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107) [org.scala-lang.scala-library-2.11.7.jar:na]\n\n```\n", "url": "https://github.com/redisson/redisson/issues/185", "user": "hepin1989", "labels": ["bug"], "created": "2015-07-10 08:15:19", "closed": "2015-07-22 08:58:19", "commits": {"29d235f717ba7caae4c3c80dab3e716860c414eb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "4d19eda1464f8889cb84af4bd6daa8837368365a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "29d235f717ba7caae4c3c80dab3e716860c414eb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["88206c2ab541760715a9f948c81102630184da46"], "nameRev": "29d235f717ba7caae4c3c80dab3e716860c414eb tags/redisson-1.3.1~4", "commitMessage": "graceful shutdown. #185\n", "commitDateTime": "2015-07-15 18:01:30", "authoredDateTime": "2015-07-15 18:01:30", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "src/main/java/org/redisson/misc/InfinitySemaphoreLatch.java", "insertions": 109, "deletions": 0, "lines": 109}, {"filePath": "src/main/java/org/redisson/misc/ReclosableLatch.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.writeAllAsync(int,org.redisson.async.AsyncOperation,java.util.concurrent.atomic.AtomicInteger,io.netty.util.concurrent.Promise,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.writeAsync(int,org.redisson.async.AsyncOperation,io.netty.util.concurrent.Promise,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.write(int,org.redisson.async.SyncInterruptedOperation,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.write(int,org.redisson.async.SyncOperation,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.read(int,org.redisson.async.SyncOperation,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.readAsync(int,org.redisson.async.AsyncOperation,io.netty.util.concurrent.Promise,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.shutdown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InfinitySemaphoreLatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.InfinitySemaphoreLatch", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReclosableLatch.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "4d19eda1464f8889cb84af4bd6daa8837368365a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["29d235f717ba7caae4c3c80dab3e716860c414eb"], "nameRev": "4d19eda1464f8889cb84af4bd6daa8837368365a tags/redisson-1.3.1~3", "commitMessage": "shutdown fixed. #185\n", "commitDateTime": "2015-07-20 10:47:08", "authoredDateTime": "2015-07-20 10:47:08", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/misc/InfinitySemaphoreLatch.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "InfinitySemaphoreLatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.InfinitySemaphoreLatch.closeAndAwaitUninterruptibly()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["29d235f717ba7caae4c3c80dab3e716860c414eb", "4d19eda1464f8889cb84af4bd6daa8837368365a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 149, "deletions": 4, "lines": 153, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 21, "UPD": 1, "INS": 16, "MOV": 3, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.write(int,org.redisson.async.SyncOperation,int)", "org.redisson.connection.MasterSlaveConnectionManager.writeAsync(int,org.redisson.async.AsyncOperation,io.netty.util.concurrent.Promise,int)", "org.redisson.connection.MasterSlaveConnectionManager.read(int,org.redisson.async.SyncOperation,int)", "org.redisson.connection.MasterSlaveConnectionManager.readAsync(int,org.redisson.async.AsyncOperation,io.netty.util.concurrent.Promise,int)", "org.redisson.connection.MasterSlaveConnectionManager.writeAllAsync(int,org.redisson.async.AsyncOperation,java.util.concurrent.atomic.AtomicInteger,io.netty.util.concurrent.Promise,int)", "org.redisson.misc.InfinitySemaphoreLatch", "org.redisson.misc.InfinitySemaphoreLatch.closeAndAwaitUninterruptibly()", "org.redisson.connection.MasterSlaveConnectionManager.write(int,org.redisson.async.SyncInterruptedOperation,int)", "org.redisson.connection.MasterSlaveConnectionManager", "org.redisson.connection.MasterSlaveConnectionManager.shutdown()"]}, {"title": "NPE when call queue.poll", "body": "``` scala\n      val bytes = queue.poll(10, TimeUnit.SECONDS)\n```\n\njava.lang.NullPointerException\n    at org.redisson.RedissonBlockingQueue$2.execute(RedissonBlockingQueue.java:74)\n    at org.redisson.connection.MasterSlaveConnectionManager.write(MasterSlaveConnectionManager.java:296)\n    at org.redisson.connection.MasterSlaveConnectionManager.write(MasterSlaveConnectionManager.java:285)\n    at org.redisson.RedissonBlockingQueue.poll(RedissonBlockingQueue.java:71)\n    at service.StatisticWorker$$anonfun$receive$1.applyOrElse(StatisticService.scala:143)\n    at akka.actor.Actor$class.aroundReceive(Actor.scala:467)\n    at service.StatisticWorker.aroundReceive(StatisticService.scala:103)\n    at akka.actor.ActorCell.receiveMessage(ActorCell.scala:516)\n    at akka.actor.ActorCell.invoke(ActorCell.scala:487)\n    at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:238)\n    at akka.dispatch.Mailbox.run(Mailbox.scala:220)\n    at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:397)\n    at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\n    at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\n    at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\n    at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\n", "url": "https://github.com/redisson/redisson/issues/181", "user": "hepin1989", "labels": ["bug"], "created": "2015-07-07 12:52:57", "closed": "2015-07-09 18:43:58", "commits": {"88206c2ab541760715a9f948c81102630184da46": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "88206c2ab541760715a9f948c81102630184da46", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3bea04edc1e24a9967303d848c1a7afd0701ead8"], "nameRev": "88206c2ab541760715a9f948c81102630184da46 tags/redisson-1.3.1~5", "commitMessage": "poll npe fixed. #181\n", "commitDateTime": "2015-07-09 09:27:27", "authoredDateTime": "2015-07-09 09:27:27", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonBlockingQueue.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "src/test/java/org/redisson/RedissonBlockingQueueTest.java", "insertions": 10, "deletions": 2, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonBlockingQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueue.poll(long,java.util.concurrent.TimeUnit).2.execute(com.lambdaworks.redis.RedisConnection)", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "RedissonBlockingQueueTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonBlockingQueueTest.testPoll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["88206c2ab541760715a9f948c81102630184da46"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonBlockingQueue.poll(long,java.util.concurrent.TimeUnit).2.execute(com.lambdaworks.redis.RedisConnection)"]}, {"title": "Reddison tries to connect to a slave which is down", "body": "Redisson library version: 1.2.1\n\nHi,\n\nWe are using SentinelServersConfig and during the tests we observed that if a slave is down, and sentinel properly reports this by putting the s_down flag, Redisson still considers it at initialization and during the operation tries to connect to it.\nThis affects badly the performance, since RoundRobin tries periodically send though that slave.\nWARN  o.r.c.RoundRobinLoadBalancer - Can't connect to /192.168.150.163:6379, trying next connection!\nAs I see, the SentinelConnectionManager constructor does not check for the \"s_down\" flag when initializes the list of available slaves, thus the Redisson snapshot of slave status does not reflects the status of slave servers.\n", "url": "https://github.com/redisson/redisson/issues/175", "user": "zsjoska", "labels": ["bug"], "created": "2015-06-22 13:41:53", "closed": "2015-06-22 17:24:47", "commits": {"186357ac6c2da1a5a12c0287a08408ac5ec6683b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "186357ac6c2da1a5a12c0287a08408ac5ec6683b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["80c6e07fa617e1a3d2334071c3bd66bd51dbd98b"], "nameRev": "186357ac6c2da1a5a12c0287a08408ac5ec6683b tags/redisson-1.3.0~18", "commitMessage": "slave status handling in Sentinel mode. #175\n", "commitDateTime": "2015-06-22 20:24:28", "authoredDateTime": "2015-06-22 20:24:28", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/protocol/CommandHandler.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 10, "deletions": 3, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandHandler.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.protocol.CommandHandler.channelRead(com.lambdaworks.redis.protocol.ChannelHandlerContext,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.lambdaworks.redis.protocol.CommandHandler.write(com.lambdaworks.redis.protocol.ChannelHandlerContext,java.lang.Object,com.lambdaworks.redis.protocol.ChannelPromise)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.createClient(java.lang.String,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createClient(java.lang.String,int,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 8, "UPD": 2, "INS": 5, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["186357ac6c2da1a5a12c0287a08408ac5ec6683b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 9, "lines": 31, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 15, "UPD": 2, "INS": 9, "MOV": 2, "DEL": 2, "spoonFilesChanged": 4, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/com/lambdaworks/redis/protocol"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager", "com.lambdaworks.redis.protocol.CommandHandler.write(com.lambdaworks.redis.protocol.ChannelHandlerContext,java.lang.Object,com.lambdaworks.redis.protocol.ChannelPromise)", "org.redisson.connection.MasterSlaveConnectionManager.createClient(java.lang.String,int,int)", "org.redisson.connection.MasterSlaveConnectionManager.createClient(java.lang.String,int)", "com.lambdaworks.redis.protocol.CommandHandler.channelRead(com.lambdaworks.redis.protocol.ChannelHandlerContext,java.lang.Object)", "org.redisson.connection.createClient(java.lang.String,int,int)"]}, {"title": "ConnectionManager call hangs forever if exception is thrown during Command processing", "body": "Bug found that can cause MasterSlaveConnectionManager to hang forever on get() call if exception is thrown anywhere in CommandHandler. \n\nTo replicate the bug, you can use RedissonMap with JsonJacksonCodec to put instance of class that doesn't have default constructor. When you try to fetch that object by using RedissonMap.get() call, deserialization of object will fail in MapOutput because of missing appropriate constructor and thread calling RedissonMap.get() will block forever. \n\nIn more details, this is happening because get() method awaits forever on Future object, which is released when Command.complete() is called. This complete() call is executed in decode() method of CommandHandler after RedisStateMachine processes Redis response. If, for example, RedisStateMachine throws an exception, complete() won't be called and result/exception will never be set to the Future object. This is causing calling thread to block forever in MasterSlaveConnectionManager.get() method. \n\nPull request with test case that is proving this bug and bug fix proposition will be published shortly.\n", "url": "https://github.com/redisson/redisson/issues/169", "user": "marko-stankovic", "labels": ["bug"], "created": "2015-05-31 22:00:50", "closed": "2015-06-10 11:03:46", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "ClassCastException with StringCodec and RSet iterator", "body": "I've got a problem with iterating over a RSet, the following code throws a ClassCastException when using the StringCodec:\n\n``` java\nRSet<Object> test = r.getSet(\"test\");\n\ntest.add(\"test1\");\ntest.add(\"test2\");\ntest.add(\"test3\");\n\ntest.forEach(System.out::println);\n```\n\nStacktrace:\n\n```\njava.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Number\n    at com.lambdaworks.redis.output.ValueSetScanOutput.set(ValueSetScanOutput.java:17)\n    at com.lambdaworks.redis.protocol.RedisStateMachine.decode(RedisStateMachine.java:112)\n    at com.lambdaworks.redis.protocol.CommandHandler.decode(CommandHandler.java:71)\n    at com.lambdaworks.redis.protocol.CommandHandler.channelRead(CommandHandler.java:52)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:339)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:324)\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:339)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:324)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:847)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nWith a List everything works.\n", "url": "https://github.com/redisson/redisson/issues/168", "user": "domkun", "labels": ["bug"], "created": "2015-05-29 12:05:35", "closed": "2015-06-12 10:50:13", "commits": {"666dd6a67badcd3a7821447fa11bb5517588eaf2": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "666dd6a67badcd3a7821447fa11bb5517588eaf2", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["196e0449c8d11d377bd47c86eb475328e4d7d453"], "nameRev": "666dd6a67badcd3a7821447fa11bb5517588eaf2 tags/redisson-1.3.0~22", "commitMessage": "String codec fixed. #168\n", "commitDateTime": "2015-06-12 11:49:17", "authoredDateTime": "2015-06-12 11:49:17", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/output/ValueSetScanOutput.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/codec/StringCodec.java", "insertions": 10, "deletions": 11, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ValueSetScanOutput.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.output.ValueSetScanOutput.set(java.nio.ByteBuffer)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StringCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.StringCodec", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.StringCodec.decodeKey(java.nio.ByteBuffer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.StringCodec.encodeKey(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.StringCodec.encodeValue(java.lang.Object)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.StringCodec.encodeMapValue(java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.StringCodec.encodeMapKey(java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.StringCodec.decodeMapValue(java.nio.ByteBuffer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.StringCodec.decodeMapKey(java.nio.ByteBuffer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.StringCodec.decodeValue(java.nio.ByteBuffer)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["666dd6a67badcd3a7821447fa11bb5517588eaf2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 12, "lines": 23, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 24, "UPD": 12, "INS": 2, "MOV": 8, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/codec", "src/main/java/com/lambdaworks/redis/output"], "changesInPackagesSPOON": ["org.redisson.codec.StringCodec.encodeMapValue(java.lang.Object)", "org.redisson.codec.StringCodec.decodeMapValue(java.nio.ByteBuffer)", "com.lambdaworks.redis.output.ValueSetScanOutput.set(java.nio.ByteBuffer)", "org.redisson.codec.StringCodec", "org.redisson.codec.StringCodec.encodeValue(java.lang.Object)", "org.redisson.codec.StringCodec.decodeMapKey(java.nio.ByteBuffer)", "org.redisson.codec.StringCodec.encodeKey(java.lang.Object)", "org.redisson.codec.StringCodec.encodeMapKey(java.lang.Object)", "org.redisson.codec.StringCodec.decodeValue(java.nio.ByteBuffer)", "org.redisson.codec.StringCodec.decodeKey(java.nio.ByteBuffer)"]}, {"title": "will redisson support ASKING when migrating slot ? ", "body": "", "url": "https://github.com/redisson/redisson/issues/164", "user": "carlvine500", "labels": ["bug"], "created": "2015-05-21 03:03:22", "closed": "2015-06-10 11:04:20", "commits": {"1a7a8437cf5448c7ce2c5d7c71a120e30bacc60d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "1a7a8437cf5448c7ce2c5d7c71a120e30bacc60d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["77b3e979e2de953028b1907f5a5f746f761b44c9"], "nameRev": "1a7a8437cf5448c7ce2c5d7c71a120e30bacc60d tags/redisson-1.3.0~25", "commitMessage": "ASKING support #164\n", "commitDateTime": "2015-06-09 11:24:08", "authoredDateTime": "2015-06-09 11:24:08", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/protocol/Command.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Command.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.protocol.Command.complete()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1a7a8437cf5448c7ce2c5d7c71a120e30bacc60d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/com/lambdaworks/redis/protocol"], "changesInPackagesSPOON": ["com.lambdaworks.redis.protocol.Command.complete()"]}, {"title": "No enum const class org.redisson.connection.ClusterNodeInfo$Flag.HANDSHAKE", "body": "redis version: redis-3.0.0\n## ./src/redis-cli -c -p 7001 cluster nodes\n\n9d97b7a1ee8cc52446a234f7f721e144aceacde3 10.126.53.98:7001 myself,slave a9b71c24f6dc8dca99969f82762904eef69947a9 0 0 2 connected\na9b71c24f6dc8dca99969f82762904eef69947a9 10.126.53.98:7004 master - 0 1431933896610 10 connected 5461-10922\n0f92aa118812a4d9f96a1e41ae81ca34313d929f 10.126.53.98:7003 slave 9dd564ac496ebb8ac68af0b2268892debd643b86 0 1431933897111 9 connected\na112df8ccae1f29a1906d6e4f3ae94c92066a507 10.126.53.98:7002 master - 0 1431933895104 3 connected 10923-16383\n8099cffcd53498ca95a17bef552ee58e09f969a0 127.0.0.1:7100 handshake - 1431933893297 0 0 disconnected\n9dd564ac496ebb8ac68af0b2268892debd643b86 10.126.53.98:7000 master - 0 1431933897111 7 connected 0-5460\n7ad08971115b10af5e3e0324582ce7e3ea361ffa 10.126.53.98:7005 slave a112df8ccae1f29a1906d6e4f3ae94c92066a507 0 1431933896109 8 connected\n## f333c6ead44fe826b1e1f9b019244e1740a47fba 10.126.53.98:7100 master,fail - 1431933882171 1431933881184 0 disconnected\n\nwhen redisson was created : \n\nException in thread \"main\" java.lang.IllegalArgumentException: No enum const class org.redisson.connection.ClusterNodeInfo$Flag.HANDSHAKE\n    at java.lang.Enum.valueOf(Enum.java:196)\n    at org.redisson.connection.ClusterNodeInfo$Flag.valueOf(ClusterNodeInfo.java:1)\n    at org.redisson.connection.ClusterConnectionManager.parse(ClusterConnectionManager.java:246)\n    at org.redisson.connection.ClusterConnectionManager.extractPartitions(ClusterConnectionManager.java:188)\n    at org.redisson.connection.ClusterConnectionManager.<init>(ClusterConnectionManager.java:62)\n    at org.redisson.Redisson.<init>(Redisson.java:53)\n    at org.redisson.Redisson.create(Redisson.java:80)\n    at com.lambdaworks.redis.ClusterTest.main(ClusterTest.java:29)\n", "url": "https://github.com/redisson/redisson/issues/159", "user": "carlvine500", "labels": ["bug"], "created": "2015-05-18 07:41:15", "closed": "2015-05-22 10:18:37", "commits": {"ca5e4a9101b3da1753c71bc56b86d90dcb6cd70b": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "ca5e4a9101b3da1753c71bc56b86d90dcb6cd70b", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a20e3fc4d421c56f15125f1eb4b9db8054269455"], "nameRev": "ca5e4a9101b3da1753c71bc56b86d90dcb6cd70b tags/redisson-1.3.0~27", "commitMessage": "missed enum value fixed. #159\n", "commitDateTime": "2015-05-18 13:19:20", "authoredDateTime": "2015-05-18 13:19:20", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ClusterNodeInfo.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterNodeInfo.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.Flag", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ca5e4a9101b3da1753c71bc56b86d90dcb6cd70b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.ClusterNodeInfo.Flag"]}, {"title": "Connection errors handling breaks redis watch/multi/exec semantics", "body": "Let's look into org.redisson.RedissonMap#replace(K, V, V)\nGood scenario:\nwatch -> ok\nhexists -> ok\nmulti -> ok\nhset -> queued\nexec -> ok\n\nBad scenario:\nwatch -> ok\nhexists -> ok\nmulti -> ok\nhset -> operation timeout or other error handled by MasterSlaveConnectionManager#readAsync , retry on new connection, result ok\nexec -> \"exec without multi\" failure\n\nImpact: in bad scenario map content can be replaced with invalid value for key K\n", "url": "https://github.com/redisson/redisson/issues/145", "user": "AndrewKolpakov", "labels": ["bug"], "created": "2015-04-16 05:58:04", "closed": "2015-07-03 19:03:34", "commits": {"3189c677f84b5fb4390ea1ac9ebd96443359eb2a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 78.00027777777778, "commitsDetails": [{"commitHash": "3189c677f84b5fb4390ea1ac9ebd96443359eb2a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["270d891b2976ae6df547aafd0adc90186dd5a923"], "nameRev": "3189c677f84b5fb4390ea1ac9ebd96443359eb2a tags/redisson-1.3.0~14", "commitMessage": "RMap script atomicity. #145 new methods replaceAsync, removeAsync, putIfAbsentAsync added\n", "commitDateTime": "2015-06-26 15:29:54", "authoredDateTime": "2015-06-26 15:29:54", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/RedisAsyncConnection.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "src/main/java/com/lambdaworks/redis/ScriptOutputType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/RedissonMap.java", "insertions": 60, "deletions": 226, "lines": 286}, {"filePath": "src/main/java/org/redisson/core/RMap.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["3189c677f84b5fb4390ea1ac9ebd96443359eb2a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 78, "deletions": 234, "lines": 312, "gitFilesChange": 4}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/com/lambdaworks/redis", "src/main/java/org/redisson/core", "src/main/java/org/redisson"]}, {"title": "Promise timeout (temporary) resource leak", "body": "When a promise has been fulfilled the timeout task should be cancelled. Currently this is not the case and means that the (potentially very large) amounts of data included in the promise will remain on the heap until the timeout fires.\n\nAn example:\n- A request is made for a large (millions of entries) dataset.\n- The promise is returned and then fulfilled\n- The data is consumed and the promise goes out of scope\n- repeat\n\nWhat should happen is that the garbage collector should clean up the promise since it is now out of scope but this can't happen since the timeout task still has a reference to it so it remains in memory for 60 secs (deadline) and very quickly you get OOM.\n\ncc @group-papa @priyeshpatel\n", "url": "https://github.com/redisson/redisson/issues/123", "user": "danielchatfield", "labels": ["bug"], "created": "2015-02-13 17:28:50", "closed": "2015-02-20 17:39:27", "commits": {"f83e4b8bd340d1f8c32a61fe93f8142362851012": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "f83e4b8bd340d1f8c32a61fe93f8142362851012", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["2cfb173e59aeff66065643e124d2a7d7f2212cc1"], "nameRev": "f83e4b8bd340d1f8c32a61fe93f8142362851012 tags/redisson-1.2.1~18", "commitMessage": "Timeout cancellation.  #123\n", "commitDateTime": "2015-02-20 20:38:01", "authoredDateTime": "2015-02-20 20:38:01", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 12, "deletions": 8, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.writeAllAsync(int,org.redisson.async.AsyncOperation,java.util.concurrent.atomic.AtomicInteger,io.netty.util.concurrent.Promise,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.writeAsync(int,org.redisson.async.AsyncOperation,io.netty.util.concurrent.Promise,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.readAsync(int,org.redisson.async.AsyncOperation,io.netty.util.concurrent.Promise,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f83e4b8bd340d1f8c32a61fe93f8142362851012"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 8, "lines": 20, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 13, "UPD": 0, "INS": 10, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.writeAsync(int,org.redisson.async.AsyncOperation,io.netty.util.concurrent.Promise,int)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseReadListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout).2.operationComplete(io.netty.util.concurrent.Future)", "org.redisson.connection.MasterSlaveConnectionManager.readAsync(int,org.redisson.async.AsyncOperation,io.netty.util.concurrent.Promise,int)", "org.redisson.connection.MasterSlaveConnectionManager.writeAllAsync(int,org.redisson.async.AsyncOperation,java.util.concurrent.atomic.AtomicInteger,io.netty.util.concurrent.Promise,int)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout)", "org.redisson.connection.MasterSlaveConnectionManager.createReleaseWriteListener(int,com.lambdaworks.redis.RedisConnection,io.netty.util.Timeout).1.operationComplete(io.netty.util.concurrent.Future)"]}, {"title": "IllegalArgumentException when hostname is the local loop back in IPv6 format \"::1\"", "body": "When the connection returns a master address that is the local loop back in IPv6 format, meaning \"::1\", it causes the following exception:\njava.lang.IllegalArgumentException: hostname can't be null\nat java.net.InetSocketAddress.checkHost(InetSocketAddress.java:149)\nat java.net.InetSocketAddress.(InetSocketAddress.java:216)\nat com.lambdaworks.redis.RedisClient.(RedisClient.java:64)\nat org.redisson.connection.MasterSlaveEntry.(MasterSlaveEntry.java:63)\nat org.redisson.connection.MasterSlaveConnectionManager.init(MasterSlaveConnectionManager.java:96)\n\nAs per http://download.java.net/jdk7/archive/b123/docs/api/java/net/URI.html#URI(java.lang.String) states:\nIPv6 addresses are permitted for the host component. An IPv6 address must be enclosed in square brackets ('[' and ']') as specified by RFC 2732.\n", "url": "https://github.com/redisson/redisson/issues/121", "user": "jackygurui", "labels": ["bug"], "created": "2015-02-10 14:29:59", "closed": "2015-03-14 10:23:09", "commits": {"fee63b39bc3f0f44a81798dba9f48c295a104570": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 31.00027777777778, "commitsDetails": [{"commitHash": "fee63b39bc3f0f44a81798dba9f48c295a104570", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a400717b126d388225037873e4414026683c02d6"], "nameRev": "fee63b39bc3f0f44a81798dba9f48c295a104570 tags/redisson-1.2.1~12", "commitMessage": "ipv6 formatting fixed. #121\n", "commitDateTime": "2015-03-14 13:22:55", "authoredDateTime": "2015-03-14 13:22:55", "commitGitStats": [{"filePath": "src/main/java/org/redisson/ClusterServersConfig.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "src/main/java/org/redisson/MasterSlaveServersConfig.java", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "src/main/java/org/redisson/SentinelServersConfig.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "src/main/java/org/redisson/SingleServerConfig.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "src/main/java/org/redisson/connection/ClusterConnectionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/ClusterNodeInfo.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "src/main/java/org/redisson/connection/ClusterPartition.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "src/main/java/org/redisson/misc/URIBuilder.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.ClusterServersConfig.addNodeAddress(java.lang.String[])", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.MasterSlaveServersConfig.addSlaveAddress(java.lang.String[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.MasterSlaveServersConfig.setMasterAddress(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.MasterSlaveServersConfig.setMasterAddress(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.SentinelServersConfig.addSentinelAddress(java.lang.String[])", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SingleServerConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.SingleServerConfig.setAddress(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).1.run()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "ClusterNodeInfo.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterNodeInfo", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.getAddress()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterNodeInfo.setAddress(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClusterPartition.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterPartition", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.getMasterAddress()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.addSlaveAddress(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.setMasterAddress(java.net.URI)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.ClusterPartition.setMasterAddress(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.toURI(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "URIBuilder.java", "spoonMethods": [{"spoonMethodName": "org.redisson.misc.URIBuilder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fee63b39bc3f0f44a81798dba9f48c295a104570"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 50, "deletions": 42, "lines": 92, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 34, "UPD": 6, "INS": 11, "MOV": 8, "DEL": 9, "spoonFilesChanged": 9, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson", "src/main/java/org/redisson/misc"], "changesInPackagesSPOON": ["org.redisson.connection.ClusterPartition.setMasterAddress(java.lang.String)", "org.redisson.connection.ClusterPartition.setMasterAddress(java.net.URI)", "org.redisson.MasterSlaveServersConfig.setMasterAddress(java.lang.String)", "org.redisson.SingleServerConfig.setAddress(java.lang.String)", "org.redisson.ClusterServersConfig.addNodeAddress(java.lang.String[])", "org.redisson.connection.ClusterConnectionManager.monitorClusterChange(org.redisson.ClusterServersConfig).1.run()", "org.redisson.connection.ClusterNodeInfo.setAddress(java.lang.String)", "org.redisson.SentinelServersConfig.addSentinelAddress(java.lang.String[])", "org.redisson.MasterSlaveServersConfig.setMasterAddress(java.net.URI)", "org.redisson.MasterSlaveServersConfig.addSlaveAddress(java.lang.String[])", "org.redisson.connection.ClusterNodeInfo", "org.redisson.connection.ClusterPartition.addSlaveAddress(java.lang.String)", "org.redisson.connection.ClusterPartition.getMasterAddress()", "org.redisson.connection.MasterSlaveConnectionManager.toURI(java.lang.String)", "org.redisson.connection.ClusterNodeInfo.getAddress()", "org.redisson.connection.ClusterPartition", "org.redisson.misc.URIBuilder"]}, {"title": "When using Redisson.getMap(\"mapName\").addAndGet() setting data, Redisson.getMap(\"mapName\").get() call will be blocked\u3002", "body": "When using Redisson.getMap(\"mapName\").addAndGet() setting data, Redisson.getMap(\"mapName\").get() call will be blocked\u3002 \n", "url": "https://github.com/redisson/redisson/issues/120", "user": "clive82", "labels": ["bug"], "created": "2015-02-09 08:51:13", "closed": "2015-03-04 13:56:59", "commits": {"35b64bebaa49460dc53a7f54ed6f56f927008822": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "35b64bebaa49460dc53a7f54ed6f56f927008822", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["742483c206f7ab740978dcaf70b204a6d86a14a7"], "nameRev": "35b64bebaa49460dc53a7f54ed6f56f927008822 tags/redisson-1.2.1~15", "commitMessage": "addAndGet serialization fixed. #120\n", "commitDateTime": "2015-03-04 16:56:41", "authoredDateTime": "2015-03-04 16:56:41", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/RedisAsyncConnection.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/test/java/org/redisson/RedissonMapTest.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisAsyncConnection.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.RedisAsyncConnection.hincrby(java.lang.Object,java.lang.Object,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.lambdaworks.redis.RedisAsyncConnection.hincrbyfloat(java.lang.Object,java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonMapTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonMapTest.testAddAndGet()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["35b64bebaa49460dc53a7f54ed6f56f927008822"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/com/lambdaworks/redis"], "changesInPackagesSPOON": ["com.lambdaworks.redis.RedisAsyncConnection.hincrbyfloat(java.lang.Object,java.lang.Object,java.lang.String)", "com.lambdaworks.redis.RedisAsyncConnection.hincrby(java.lang.Object,java.lang.Object,long)"]}, {"title": "SingleConnectionManager doesn't respect timeouts", "body": "SingleConnectionManager ignores timeouts set by the configuration, defaults to MasterSlaveConnectionManager timeouts\n", "url": "https://github.com/redisson/redisson/issues/119", "user": "ghost", "labels": ["bug"], "created": "2015-02-04 11:47:06", "closed": "2015-02-10 15:04:59", "commits": {"2cfb173e59aeff66065643e124d2a7d7f2212cc1": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "2cfb173e59aeff66065643e124d2a7d7f2212cc1", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3919308889fa13865924e3276762ca828e98ac23"], "nameRev": "2cfb173e59aeff66065643e124d2a7d7f2212cc1 tags/redisson-1.2.1~19", "commitMessage": "Few config parameters not taken into account. #119\n", "commitDateTime": "2015-02-10 11:43:30", "authoredDateTime": "2015-02-10 11:43:30", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ClusterConnectionManager.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "src/main/java/org/redisson/connection/SingleConnectionManager.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager.create(org.redisson.ClusterServersConfig)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SingleConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SingleConnectionManager", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2cfb173e59aeff66065643e124d2a7d7f2212cc1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 0, "lines": 9, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 9, "UPD": 0, "INS": 9, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.SingleConnectionManager", "org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.ClusterConnectionManager.create(org.redisson.ClusterServersConfig)"]}, {"title": "ClassCastException in RedissonCountDownLatch.trySetCount", "body": "Take a nice and clean redis server.\n\nExecute the following code twice\n\n```\npublic class RedissonTest {\n\n    public static void main(String[] args) {\n        Redisson redisson = Redisson.create();\n\n        RCountDownLatch latch = redisson.getCountDownLatch(\"testlatch\");\n        latch.trySetCount(10);\n        latch.countDown();\n\n        // latch.delete();\n        redisson.shutdown();\n    }\n\n}\n```\n\nAt the second execution you get a ClassCastException\n\n```\n13:51:53.280 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework\n13:51:53.286 [main] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple\n13:51:53.293 [main] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Buffer.address: available\n13:51:53.294 [main] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available\n13:51:53.294 [main] DEBUG i.n.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available\n13:51:53.294 [main] DEBUG i.n.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: true\n13:51:53.295 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8\n13:51:53.295 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false\n13:51:53.295 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available\n13:51:53.295 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false\n13:51:53.296 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: unavailable\n13:51:53.296 [main] DEBUG i.n.util.internal.PlatformDependent - You don't have Javassist in your class path or you don't have enough permission to load dynamically generated classes.  Please check the configuration for better performance.\n13:51:53.296 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)\n13:51:53.296 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)\n13:51:53.296 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false\n13:51:53.305 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16\n13:51:53.318 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false\n13:51:53.318 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512\n13:51:53.353 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x7680cb61c5330bfa (took 0 ms)\n13:51:53.369 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled\n13:51:53.370 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536\n13:51:53.420 [main] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144\n13:51:53.429 [nioEventLoopGroup-2-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available\nException in thread \"main\" java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.Long\n    at org.redisson.RedissonCountDownLatch$4.execute(RedissonCountDownLatch.java:252)\n    at org.redisson.RedissonCountDownLatch$4.execute(RedissonCountDownLatch.java:247)\n    at org.redisson.connection.MasterSlaveConnectionManager.write(MasterSlaveConnectionManager.java:272)\n    at org.redisson.connection.MasterSlaveConnectionManager.write(MasterSlaveConnectionManager.java:261)\n    at org.redisson.RedissonCountDownLatch.trySetCount(RedissonCountDownLatch.java:247)\n    at test.RedissonTest.main(RedissonTest.java:12)\n```\n\nAnd the redis monitor output is\n\n```\n1422020603.147820 [0 127.0.0.1:46751] \"WATCH\" \"testlatch\"\n1422020603.151582 [0 127.0.0.1:46751] \"GET\" \"testlatch\"\n1422020603.152111 [0 127.0.0.1:46751] \"MULTI\"\n1422020603.181469 [0 127.0.0.1:46751] \"SET\" \"testlatch\" \"10\"\n1422020603.181493 [0 127.0.0.1:46751] \"PUBLISH\" \"redisson_countdownlatch_{testlatch}\" \"1\"\n1422020603.181509 [0 127.0.0.1:46751] \"EXEC\"\n1422020603.183029 [0 127.0.0.1:46751] \"GET\" \"testlatch\"\n1422020603.218605 [0 127.0.0.1:46751] \"DECR\" \"testlatch\"\n\n1422020615.069218 [0 127.0.0.1:46752] \"WATCH\" \"testlatch\"\n1422020615.075969 [0 127.0.0.1:46752] \"GET\" \"testlatch\"\n```\n\nRunning on Java 8\n", "url": "https://github.com/redisson/redisson/issues/116", "user": "zkiss", "labels": ["bug"], "created": "2015-01-23 13:53:15", "closed": "2015-01-25 12:57:30", "commits": {"00d9ffe18fe6fa2b459e50032b7af7f8a3efaecb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "00d9ffe18fe6fa2b459e50032b7af7f8a3efaecb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9410f2ffb7443862f2beea1452d3bd89dfa6c052"], "nameRev": "00d9ffe18fe6fa2b459e50032b7af7f8a3efaecb tags/redisson-1.2.1~21", "commitMessage": "ClassCast exception fixed. #116\n", "commitDateTime": "2015-01-25 15:56:28", "authoredDateTime": "2015-01-25 15:56:28", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonCountDownLatch.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCountDownLatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCountDownLatch.trySetCount(long).4.execute(com.lambdaworks.redis.RedisConnection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00d9ffe18fe6fa2b459e50032b7af7f8a3efaecb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonCountDownLatch.trySetCount(long).4.execute(com.lambdaworks.redis.RedisConnection)"]}, {"title": "RedissonList's Iterator Race Conditions", "body": "RedissonList iterator as it tries to keep \"up to date\" with data has a race condition in which if between the .hasNext() and the .next() call the set is emptied the list will throw NoSuchElementException.\n\n---\n## Unit Test\n\nprivate static final String LIST_NAME = \"TEST_LIST\";\nprivate static boolean failed;\n\n```\n@Ignore\nclass Delete implements Runnable {\n\n    public void run() {\n        // remove one item\n        RList<Object> list = redisson.getList(LIST_NAME);\n        if (!list.isEmpty()) {\n            Iterator<Object> iter = list.iterator();\n            if (iter.hasNext()) {\n                iter.next();\n                iter.remove();\n            }\n        }\n    }\n}\n\n@Ignore\nclass Add implements Runnable {\n    int i = 0;\n\n    public void run() {\n        // add items up to place up to one in list\n        RList<Object> list = redisson.getList(LIST_NAME);\n        if (list.isEmpty()) {\n            list.add(\"Entry:\" + (i++));\n\n        }\n    }\n}\n\n@Ignore\nclass Loop implements Runnable {\n    public void run() {\n        try {\n            RList<Object> list = redisson.getList(LIST_NAME);\n            if (!list.isEmpty()) {\n                // implicit iterator\n                for (@SuppressWarnings(\"unused\")\n                Object o : list) {\n                }\n            }\n        } catch (Exception e) {\n            RedissonListTest.failed = true;\n            e.printStackTrace();\n        }\n    }\n}\n\nclass ThousandAndOneThread extends Thread {\n    public ThousandAndOneThread(Runnable r) {\n        this.r = r;\n    }\n\n    boolean dead = false;\n    int nightsLeft = 1001;\n    Runnable r;\n\n    public void run() {\n        // while shahrazad still is alive\n        while (!dead && nightsLeft > 0) {\n            nightsLeft--;\n\n            // do runnable\n            r.run();\n\n            // take a nap\n            try {\n                Thread.sleep(3);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n                break;\n            }\n        }\n\n        dead = true;\n    }\n\n    // Kill shahrazad\n    public void kill() {\n        dead = true;\n    }\n\n    // if i am done\n    public boolean isDone() {\n        return dead;\n    }\n}\n\n@Test\npublic void testIteratorAfterDelete() {\n    for (int i = 0; i < 4; i++) {\n        // make runnables\n        Delete d = new Delete();\n        Add a = new Add();\n        Loop l = new Loop();\n\n        // make threads\n        ThousandAndOneThread aT = new ThousandAndOneThread(a);\n        ThousandAndOneThread dT = new ThousandAndOneThread(l);\n        ThousandAndOneThread lT = new ThousandAndOneThread(d);\n\n        // start threads\n        aT.start();\n        dT.start();\n        lT.start();\n\n        // monitor threads\n        while (true) {\n            if (failed) {\n                fail(\"Exception occured, in child thread\");\n            }\n            if (lT.isDone() || dT.isDone() || aT.isDone()) {\n                System.out.println(\"All done!\" + i);\n                aT.kill();\n                dT.kill();\n                lT.kill();\n                break;\n            }\n            try {\n                Thread.sleep(10);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n                aT.kill();\n                dT.kill();\n                lT.kill();\n                fail(\"fail on \" + i);\n            }\n        }\n    }\n}\n```\n\n---\n## Additional Information\n\nThis also effects RedissonSet, but much less likely to hit the race condition. It causes RedissonSet line 96 to throw a null pointer exception. \n\nThis is akin to issue #104 \n", "url": "https://github.com/redisson/redisson/issues/106", "user": "alycecil", "labels": ["bug"], "created": "2014-12-17 21:06:55", "closed": "2014-12-18 18:49:33", "commits": {"983c34faddb513e090f5456e86bea1e301bafe41": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "5018a3c31cc2dd10b7bb5d812f75f72548e233ec": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "983c34faddb513e090f5456e86bea1e301bafe41", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1b3adef3a11636f49745defcaf42074276103190"], "nameRev": "983c34faddb513e090f5456e86bea1e301bafe41 tags/redisson-1.2.0~18", "commitMessage": "RedissonList iterator race conditions #106\n", "commitDateTime": "2014-12-18 20:37:01", "authoredDateTime": "2014-12-18 20:37:01", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonList.java", "insertions": 34, "deletions": 11, "lines": 45}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonList.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonList.get(int)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonList.listIterator(int).13.hasNext()", "TOT": 13, "UPD": 6, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonList.listIterator(int).13.hasPrevious()", "TOT": 12, "UPD": 5, "INS": 3, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonList.listIterator(int).13.remove()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonList.listIterator(int).13.next()", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonList.listIterator(int).13.previous()", "TOT": 10, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonList.listIterator(int).13", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5018a3c31cc2dd10b7bb5d812f75f72548e233ec", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4ffd260b6c42ee31116621286c9368a1d828a27f"], "nameRev": "5018a3c31cc2dd10b7bb5d812f75f72548e233ec tags/redisson-2.1.2~8", "commitMessage": "BlockingQueue.peek race-condition fixed. #106\n", "commitDateTime": "2015-09-03 14:25:51", "authoredDateTime": "2015-09-03 14:25:51", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonQueue.java", "insertions": 1, "deletions": 4, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonQueue.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonQueue.peek()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["983c34faddb513e090f5456e86bea1e301bafe41", "5018a3c31cc2dd10b7bb5d812f75f72548e233ec"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 35, "deletions": 15, "lines": 50, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 56, "UPD": 14, "INS": 19, "MOV": 17, "DEL": 6, "spoonFilesChanged": 2, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonList.listIterator(int).13.hasPrevious()", "org.redisson.RedissonQueue.peek()", "org.redisson.RedissonList.listIterator(int).13", "org.redisson.RedissonList.listIterator(int).13.next()", "org.redisson.RedissonList.listIterator(int).13.remove()", "org.redisson.RedissonList.get(int)", "org.redisson.RedissonList.listIterator(int).13.hasNext()", "org.redisson.RedissonList.listIterator(int).13.previous()"]}, {"title": "RedissonAtomicLong expiring during get causes NullPointerException", "body": "This happens on RedissonAtomicLong , line 101 \" return res.longValue(); \" as the Number res is null after async. \n\nTheres the dirty fix of wrapping with something akin to \nif(res!=null){\n        return res.longValue();\n}\nreturn 0l;\n\nAlso likely occurs in other methods. \n\n---\n\nHeres the unit test if you're interested:\n\n@Ignore\n    public void getUntilGone() {\n        long initialValue = 5l;\n\n```\n    String name = \"DEBUG_atomiclong\";\n    long now;\n    long BREAK = 100l;\n    {\n        Redisson redis = RedissonUtil.getRedissonClient();\n\n        RAtomicLong lng = redis.getAtomicLong(name);\n\n        lng.set(initialValue);\n        lng.expire(BREAK, TimeUnit.MILLISECONDS);\n        now = Calendar.getInstance().getTimeInMillis();\n    }\n\n    boolean done = false;\n    long hits = 0;\n    while (Calendar.getInstance().getTimeInMillis() < now + BREAK * 10) {\n        hits++;\n        Redisson redis = RedissonUtil.getRedissonClient();\n\n        RAtomicLong lng = redis.getAtomicLong(name);\n        long value = lng.get();\n\n        if (value != initialValue) {\n            done = true;\n            break;\n        }\n    }\n    System.out.println(\"read x\" + hits);\n    assertTrue(\"Value must have expired cleanly : read x\" + hits, done);\n}\n\n@Test\npublic void getUntilGoneMultipleTimes() {\n    int i = 0;\n    try {\n        for (i = 0; i < 10000; i++) {\n\n            getUntilGone();\n        }\n    } catch (NullPointerException npe) {\n        npe.printStackTrace();\n        fail(\"failed after \" + i + \"times, error: \" + npe.getMessage());\n    }\n}\n```\n", "url": "https://github.com/redisson/redisson/issues/104", "user": "alycecil", "labels": ["bug"], "created": "2014-12-05 15:08:41", "closed": "2014-12-05 18:11:25", "commits": {"eb450752222d303285c00358c7fce4d22f1856cb": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "eb450752222d303285c00358c7fce4d22f1856cb", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["949d90ceafe71de8c4fdc47d1e46fab9bca2caf5"], "nameRev": "eb450752222d303285c00358c7fce4d22f1856cb tags/redisson-1.1.7~7", "commitMessage": "RAtomicLong NPE fixed. #104\n", "commitDateTime": "2014-12-05 21:18:42", "authoredDateTime": "2014-12-05 21:18:42", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonAtomicLong.java", "insertions": 32, "deletions": 24, "lines": 56}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonAtomicLong.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonAtomicLong.get().5.execute(com.lambdaworks.redis.RedisAsyncConnection)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.getAndSet(long)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.set(long).8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.addAndGet(long).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.compareAndSet(long,long).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.decrementAndGet().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.getAndSet(long).6", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.incrementAndGet().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.getAndSet(long).6.execute(com.lambdaworks.redis.RedisAsyncConnection)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.compareAndSet(long,long).3.execute(com.lambdaworks.redis.RedisConnection)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonAtomicLong", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.init()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.addAndGet(long).2.execute(com.lambdaworks.redis.RedisAsyncConnection)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.get()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.incrementAndGet().7.execute(com.lambdaworks.redis.RedisAsyncConnection)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.set(long).8.execute(com.lambdaworks.redis.RedisAsyncConnection)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.getAndSet(long).4.execute(com.lambdaworks.redis.RedisConnection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.compareAndSet(long,long).2.execute(com.lambdaworks.redis.RedisConnection)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.incrementAndGet()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.init().1.execute(com.lambdaworks.redis.RedisAsyncConnection)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonAtomicLong.decrementAndGet().4.execute(com.lambdaworks.redis.RedisAsyncConnection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eb450752222d303285c00358c7fce4d22f1856cb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 32, "deletions": 24, "lines": 56, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 61, "UPD": 14, "INS": 8, "MOV": 23, "DEL": 16, "spoonFilesChanged": 1, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonAtomicLong.init().1.execute(com.lambdaworks.redis.RedisAsyncConnection)", "org.redisson.RedissonAtomicLong.compareAndSet(long,long).3", "org.redisson.RedissonAtomicLong.addAndGet(long).2.execute(com.lambdaworks.redis.RedisAsyncConnection)", "org.redisson.RedissonAtomicLong.addAndGet(long).2", "org.redisson.RedissonAtomicLong.getAndSet(long).6.execute(com.lambdaworks.redis.RedisAsyncConnection)", "org.redisson.RedissonAtomicLong.decrementAndGet().4.execute(com.lambdaworks.redis.RedisAsyncConnection)", "org.redisson.RedissonAtomicLong.compareAndSet(long,long).3.execute(com.lambdaworks.redis.RedisConnection)", "org.redisson.RedissonAtomicLong.incrementAndGet().7", "org.redisson.RedissonAtomicLong.incrementAndGet().7.execute(com.lambdaworks.redis.RedisAsyncConnection)", "org.redisson.RedissonAtomicLong.init()", "org.redisson.RedissonAtomicLong.compareAndSet(long,long).2.execute(com.lambdaworks.redis.RedisConnection)", "org.redisson.RedissonAtomicLong", "org.redisson.RedissonAtomicLong.set(long).8.execute(com.lambdaworks.redis.RedisAsyncConnection)", "org.redisson.RedissonAtomicLong.get()", "org.redisson.RedissonAtomicLong.set(long).8", "org.redisson.RedissonAtomicLong.getAndSet(long).6", "org.redisson.RedissonAtomicLong.getAndSet(long).4.execute(com.lambdaworks.redis.RedisConnection)", "org.redisson.RedissonAtomicLong.get().5.execute(com.lambdaworks.redis.RedisAsyncConnection)", "org.redisson.RedissonAtomicLong.decrementAndGet().4", "org.redisson.RedissonAtomicLong.getAndSet(long)", "org.redisson.RedissonAtomicLong.incrementAndGet()"]}, {"title": "SAdd in RedisAsyncConnection uses wrong AddValues ", "body": "line 629 uses addMapValues for sadd rather than addValues\n\nThis causes JsonJacksonCodec to fail on Longs stored with the mapObjectMapper to fail to be deparsed by objectMapper; \n\nChange line 629\n-         CommandArgs<K, V> args = new CommandArgs<K, V>(codec).addKey(key).addMapValues(members);\n-        CommandArgs<K, V> args = new CommandArgs<K, V>(codec).addKey(key).addValues(members);\n\n---\n\nTest code follows : \n\nimport org.junit.Ignore;\n\n@Ignore\npublic class SimpleBean {\n    private Long lng;\n\n```\npublic Long getLng() {\n    return lng;\n}\n```\n\n}\n\n---\n\n@Test\n    public void saveLong() {\n        SimpleBean cdb = new SimpleBean();\n        cdb.setLng(5l);\n\n```\n    String name = \"IS_DEBUG_SET\";\n\n    {\n        Redisson redis = RedissonUtil.getRedissonClient();\n        RSet<Object> set = redis.getSet(name);\n\n        set.clear();\n    }\n    {\n        Redisson redis = RedissonUtil.getRedissonClient();\n        RSet<SimpleBean> set = redis.getSet(name);\n        set.add(cdb);\n    }\n    {\n        Redisson redis = RedissonUtil.getRedissonClient();\n        RSet<SimpleBean> set = redis.getSet(name);\n\n        assertFalse(\"set may not be empty\", set.isEmpty());\n        for (SimpleBean e : set) {\n            assertEquals(\"key must be a long\", (Long.class), e.getLng());\n            assertEquals(\"keys must be identical by value\", cdb.getLng(), e.getLng());\n        }\n    }\n\n}\n```\n", "url": "https://github.com/redisson/redisson/issues/102", "user": "alycecil", "labels": ["bug"], "created": "2014-12-04 15:27:38", "closed": "2014-12-15 17:36:10", "commits": {"aec7ec18a63c1b336e279016925b283d6b7b35e0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "0401d7b811ecec1a81a2cc927aab58569b89a501": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "aec7ec18a63c1b336e279016925b283d6b7b35e0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["05d2a7cf8cf7de1c91e9ec8766eb5b3afb939152"], "nameRev": "aec7ec18a63c1b336e279016925b283d6b7b35e0 tags/redisson-1.1.7~9", "commitMessage": "RSet.add serialization fixed. #102\n", "commitDateTime": "2014-12-04 19:55:37", "authoredDateTime": "2014-12-04 19:55:37", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/RedisAsyncConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/test/java/org/redisson/RedissonSetTest.java", "insertions": 28, "deletions": 5, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisAsyncConnection.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.RedisAsyncConnection.sadd(java.lang.Object,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetTest.SimpleBean", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSetTest.testAddBean()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0401d7b811ecec1a81a2cc927aab58569b89a501", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3355310d57b1ed6d083c707616cada0fc974b7f4"], "nameRev": "0401d7b811ecec1a81a2cc927aab58569b89a501 tags/redisson-1.1.7~3", "commitMessage": "RSet iteration fixed. #102\n", "commitDateTime": "2014-12-15 16:54:25", "authoredDateTime": "2014-12-15 16:54:25", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/RedisAsyncConnection.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/com/lambdaworks/redis/output/ValueSetScanOutput.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "src/test/java/org/redisson/RedissonSetTest.java", "insertions": 18, "deletions": 0, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisAsyncConnection.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.RedisAsyncConnection.sadd(java.lang.Object,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ValueSetScanOutput.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.output.ValueSetScanOutput", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonSetTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSetTest.testAddLong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aec7ec18a63c1b336e279016925b283d6b7b35e0", "0401d7b811ecec1a81a2cc927aab58569b89a501"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 27, "deletions": 3, "lines": 30, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/com/lambdaworks/redis", "src/main/java/com/lambdaworks/redis/output"], "changesInPackagesSPOON": ["com.lambdaworks.redis.RedisAsyncConnection.sadd(java.lang.Object,java.lang.Object[])", "com.lambdaworks.redis.output.ValueSetScanOutput"]}, {"title": "when thread is interrupt...all Reference variables is locked!!", "body": "the redisson is locked!\n\nall Reference variables is locked!!\n\n```\n java.lang.Object.wait(Native Method)\njava.lang.Object.wait(Object.java:503)\nio.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:286)\nio.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:32)\norg.redisson.connection.MasterSlaveConnectionManager.write(MasterSlaveConnectionManager.java:318)\norg.redisson.RedissonList.addAll(RedissonList.java:137)\norg.redisson.RedissonList.add(RedissonList.java:90)\n```\n", "url": "https://github.com/redisson/redisson/issues/101", "user": "ansjsun", "labels": ["bug"], "created": "2014-12-02 05:27:35", "closed": "2014-12-02 07:38:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Infinite loop on connection failure", "body": "I'm using Redisson in Master/Slave configuration, and I'm running into an endless loop when using a bad address. `BaseLoadBalancer.nextConnection()` get called, catches the `RedisConnectionException`, then loops until `clientsCopy` is empty, then enters `nextConnection()` again, resulting in an infinite recursive loop.\n", "url": "https://github.com/redisson/redisson/issues/90", "user": "shmosel", "labels": ["bug"], "created": "2014-11-04 03:42:43", "closed": "2014-12-15 17:36:23", "commits": {"ef13ee93b8361a0c2defe5cb64f0ad1fe7aeed6c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "ef13ee93b8361a0c2defe5cb64f0ad1fe7aeed6c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["0401d7b811ecec1a81a2cc927aab58569b89a501"], "nameRev": "ef13ee93b8361a0c2defe5cb64f0ad1fe7aeed6c tags/redisson-1.1.7~2", "commitMessage": "Infinity loop during master/slave connection acquiring fixed. #90\n", "commitDateTime": "2014-12-15 17:39:29", "authoredDateTime": "2014-12-15 17:39:29", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/RedisConnectionException.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 2, "deletions": 12, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisConnectionException.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.RedisConnectionException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextConnection()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ef13ee93b8361a0c2defe5cb64f0ad1fe7aeed6c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 12, "lines": 18, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/com/lambdaworks/redis", "src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["com.lambdaworks.redis.RedisConnectionException", "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "org.redisson.connection.BaseLoadBalancer.nextConnection()"]}, {"title": "RedissonLock locks up", "body": "Under heavy use on production, Redisson's locks get all locked up, and the application stalls. I'm using Redisson 1.1.5\n\nI have 1 thread locked trying to release a lock:\n\n> Thread 18640: (state = BLOCKED)\n> - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n> - java.lang.Object.wait(long, int) @bci=58, line=461 (Compiled frame)\n> - io.netty.util.concurrent.DefaultPromise.await0(long, boolean) @bci=137, line=361 (Compiled frame)\n> - io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(long, java.util.concurrent.TimeUnit) @bci=7, line=312 (Compiled frame)\n> - com.lambdaworks.redis.RedisAsyncConnection.await(io.netty.util.concurrent.Future, long, java.util.concurrent.TimeUnit) @bci=4, line=1231 (Compiled frame)\n> - com.lambdaworks.redis.RedisConnection.await(io.netty.util.concurrent.Future) @bci=13, line=864 (Compiled frame)\n> - com.lambdaworks.redis.RedisConnection.multi() @bci=8, line=408 (Compiled frame)\n> - org.redisson.RedissonLock.unlock(com.lambdaworks.redis.RedisConnection) @bci=8, line=391 (Compiled frame)\n> - org.redisson.RedissonLock.access$300(org.redisson.RedissonLock, com.lambdaworks.redis.RedisConnection) @bci=2, line=45 (Compiled frame)\n> - org.redisson.RedissonLock$4.execute(com.lambdaworks.redis.RedisConnection) @bci=84, line=374 (Compiled frame)\n> - org.redisson.RedissonLock$4.execute(com.lambdaworks.redis.RedisConnection) @bci=2, line=363 (Compiled frame)\n> - org.redisson.connection.MasterSlaveConnectionManager.write(org.redisson.async.SyncOperation, int) @bci=7, line=255 (Compiled frame)\n> - org.redisson.connection.MasterSlaveConnectionManager.write(org.redisson.async.SyncOperation) @bci=3, line=248 (Compiled frame)\n> - org.redisson.RedissonLock.unlock() @bci=12, line=363 (Compiled frame)\n\nAlso of note, I have about 30 other threads locked awaiting for a lock (a different one from the one used by the previous thread).\n\nI checked the threads with jstack, here is the relevant output:\n\n> Thread 15416: (state = BLOCKED)\n> - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n> - java.lang.Object.wait() @bci=2, line=503 (Interpreted frame)\n> - io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly() @bci=31, line=292 (Interpreted frame)\n> - io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly() @bci=1, line=31 (Interpreted frame)\n> - org.redisson.RedissonLock.lockInterruptibly(long, java.util.concurrent.TimeUnit) @bci=8, line=233 (Interpreted frame)\n> - org.redisson.RedissonLock.lockInterruptibly() @bci=5, line=226 (Interpreted frame)\n> - org.redisson.RedissonLock.lock() @bci=1, line=206 (Interpreted frame)\n\nI checked Redis's state:\n\n> $ redis-cli\n> 127.0.0.1:6379> keys *\n> 1) \"\\\"betCreation\\\"\"\n\nthis key is the one corresponding to the thread blocked trying to release a lock. The other threads, that are waiting for a separate lock are locked even though there is no-one taking up such lock....\n", "url": "https://github.com/redisson/redisson/issues/89", "user": "jsotuyod", "labels": ["bug"], "created": "2014-11-03 20:18:58", "closed": "2014-11-18 17:15:59", "commits": {"bca4a172c24c85c2b6cb43b00fd3c372493422e6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "ef0d53e21d81f8009d8725c6869c2c5dd565294d": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "bca4a172c24c85c2b6cb43b00fd3c372493422e6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["3470012657bfc3ee9a0644a8dd112a5c89a31a81"], "nameRev": "bca4a172c24c85c2b6cb43b00fd3c372493422e6 tags/redisson-1.1.6~16", "commitMessage": "connectionManager sync added. #89\n", "commitDateTime": "2014-11-14 10:09:46", "authoredDateTime": "2014-11-14 10:09:46", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonCountDownLatch.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 9, "deletions": 3, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonCountDownLatch.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonCountDownLatch.release()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonCountDownLatch.await()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonCountDownLatch.await(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonCountDownLatch.subscribe()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonCountDownLatch.unsubscribe()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.subscribe()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.unsubscribe()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ef0d53e21d81f8009d8725c6869c2c5dd565294d", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["acd15498aeb72957863245d06fc096a63a213ba9", "b4a439db535483b1dcf7819d79fa0058bfeab2a1"], "nameRev": "ef0d53e21d81f8009d8725c6869c2c5dd565294d tags/redisson-1.1.6~14", "commitMessage": "Merge pull request #93 from setronica-dev/RedissonLock_locks_up_89\n\nRedisson lock locks up #89", "commitDateTime": "2014-11-18 13:47:06", "authoredDateTime": "2014-11-18 13:47:06", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 30, "deletions": 16, "lines": 46}, {"filePath": "src/main/java/org/redisson/connection/ClusterPartition.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.lockInterruptibly(long,java.util.concurrent.TimeUnit)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.redisson.RedissonLock.tryLock(long,long,java.util.concurrent.TimeUnit)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 3}]}, {"spoonFilePath": "ClusterPartition.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bca4a172c24c85c2b6cb43b00fd3c372493422e6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 9, "lines": 28, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 3, "INS": 4, "MOV": 6, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.unsubscribe()", "org.redisson.RedissonCountDownLatch.await()", "org.redisson.RedissonCountDownLatch.subscribe()", "org.redisson.RedissonCountDownLatch.await(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonCountDownLatch.unsubscribe()", "org.redisson.RedissonCountDownLatch.release()", "org.redisson.RedissonLock.subscribe()"]}, {"title": "Topic subscription: not re-subscribing after slave down or master change", "body": "Hi,\n\nRedis: 2.8.14\nRedisson: 1.1.5\nEnvironment: 1 master & 2 slaves on separate hosts (each running Redis & Redis Sentinel)\nRedisson connection: SentinelServersConfig (with 3 sentinels configured)\n\nWe subscribe to a number of topics from all our clients talking to Redis via SentinelServersConfig. If there is a Redis failover/down event, the topics aren't properly re-subscribed to and messaging stops. Unsubscription is called, but re-subcription isn't.\n\nFor a:\n- slave down (re-subscription never works)\n- sentinel initiated failover (re-subscription eventually always fails, but could work once or twice)\n", "url": "https://github.com/redisson/redisson/issues/85", "user": "timoahokas", "labels": ["bug"], "created": "2014-10-20 05:01:16", "closed": "2014-11-27 16:50:56", "commits": {"39c1477d0092732f4089554113a4e269f5fc58a8": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 38.000277777777775, "commitsDetails": [{"commitHash": "39c1477d0092732f4089554113a4e269f5fc58a8", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["37e1204c537eb316979ea1a49748973b59565b68"], "nameRev": "39c1477d0092732f4089554113a4e269f5fc58a8 tags/redisson-1.1.7~12", "commitMessage": "Topic listener re-subscribing. #85\n", "commitDateTime": "2014-11-27 16:47:28", "authoredDateTime": "2014-11-27 16:47:28", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonTopic.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "src/main/java/org/redisson/connection/PubSubConnectionEntry.java", "insertions": 11, "deletions": 6, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.removeListener(int)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.subscribe(java.lang.String).1.subscribed(java.lang.String,long)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.subscribe(java.lang.String).1.unsubscribed(java.lang.String,long)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.getListeners(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.hasListeners(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["39c1477d0092732f4089554113a4e269f5fc58a8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 8, "lines": 22, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 21, "UPD": 2, "INS": 6, "MOV": 11, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.slaveDown(java.lang.String,int)", "org.redisson.connection.PubSubConnectionEntry.subscribe(java.lang.String).1.subscribed(java.lang.String,long)", "org.redisson.RedissonTopic.removeListener(int)", "org.redisson.connection.PubSubConnectionEntry.hasListeners(java.lang.String)", "org.redisson.connection.PubSubConnectionEntry.getListeners(java.lang.String)", "org.redisson.connection.PubSubConnectionEntry.subscribe(java.lang.String).1.unsubscribed(java.lang.String,long)"]}, {"title": "Lock reentrancy race", "body": "in RedissonLock.tryLockInner(long, TimeUnit):\n\n``` java\n                String res = connection.setexnx(getName(), currentLock, time);  /* A */\n                if (\"OK\".equals(res)) {\n                    return null;\n                } else {\n                    LockValue lock = (LockValue) connection.get(getName());\n                    if (lock != null && lock.equals(currentLock)) {\n                        lock.incCounter();\n                        connection.psetex(getName(), time, lock); /* B */\n                        return null;\n                    }\n\n                    Long ttl = connection.pttl(getName());\n                    return ttl;\n                }\n```\n\nAt line A the lock key is set only if it doesn't exist (NX), but on line B it's set assuming it still exists. If the lock timeouts between A and B, another process may obtain the lock, which is then overwritten at B.\n\nHere's a test case:\n\n``` java\n    @Test\n    public void testTryLockInner() throws InterruptedException {\n        redisson.flushdb();\n        final CountDownLatch latch = new CountDownLatch(1);\n        final CountDownLatch latch2 = new CountDownLatch(1);\n        new Thread() {\n            public void run() {\n                final RLock expiringLock = redisson.getLock(\"lock\");\n                expiringLock.lock(500, TimeUnit.MILLISECONDS);\n                latch.countDown();\n                expiringLock.lock(500, TimeUnit.MILLISECONDS);\n                latch2.countDown();\n            };\n        }.start();\n        latch.await();\n        final RLock lock = redisson.getLock(\"lock\");\n        lock.lock();\n        latch2.await();\n        Assert.assertEquals(1, lock.getHoldCount());\n    }\n```\n\nThis will reliably fail if:\n- run in debug mode with a breakpoint placed in RedissonLock.tryLockInner(long, TimeUnit) on line B (line 306 for 508b9034be5f72523a0b79e40e761d6cbac1c60e). \n- the breakpoint is released after waiting at least half a second\n\nThe same problem is also present in the no-args method RedissonLock.tryLockInner(). (though a race condition is possible only if upgrading an expiring lock)\n\nI wonder if reentrancy support shouldn't be done purely in java.\n", "url": "https://github.com/redisson/redisson/issues/84", "user": "kimb", "labels": ["bug"], "created": "2014-10-18 06:21:50", "closed": "2014-11-13 06:47:34", "commits": {"a309ed15c19f2d8e54fc090c4df4ab0edb11b760": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "1ce38f389d88b32c38a4c6cd8d4f57aa95befd54": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "a309ed15c19f2d8e54fc090c4df4ab0edb11b760", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f9c2229f5d0fd82409b76bdd5d9cf41f1455c5d6"], "nameRev": "a309ed15c19f2d8e54fc090c4df4ab0edb11b760 tags/redisson-1.1.6~19", "commitMessage": "Lock reentrancy race fixed. #84\n", "commitDateTime": "2014-11-08 16:42:41", "authoredDateTime": "2014-11-08 16:42:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.tryLockInner(long,java.util.concurrent.TimeUnit).3.execute(com.lambdaworks.redis.RedisConnection)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1ce38f389d88b32c38a4c6cd8d4f57aa95befd54", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["a309ed15c19f2d8e54fc090c4df4ab0edb11b760"], "nameRev": "1ce38f389d88b32c38a4c6cd8d4f57aa95befd54 tags/redisson-1.1.6~18", "commitMessage": "Lock reentrancy race fixed. #84\n", "commitDateTime": "2014-11-08 20:31:46", "authoredDateTime": "2014-11-08 20:31:46", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "src/test/java/org/redisson/RedissonLockTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.tryLockInner().2.execute(com.lambdaworks.redis.RedisConnection)", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "RedissonLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockTest.testExpire().1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a309ed15c19f2d8e54fc090c4df4ab0edb11b760"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.tryLockInner(long,java.util.concurrent.TimeUnit).3.execute(com.lambdaworks.redis.RedisConnection)"]}, {"title": "Deadlock while obtaining lock", "body": "Thread gets stuck while obtaining lock. Running 'keys L*' in redis-cli returns an empty list.\n\n```\nINFO   | jvm 1    | 2014/10/16 17:41:57 | \"http-8080-exec-156\" daemon prio=10 tid=0x00000000022ab800 nid=0x6535 in Object.wait() [0x00007f5799130000]\nINFO   | jvm 1    | 2014/10/16 17:41:57 |    java.lang.Thread.State: WAITING (on object monitor)\nINFO   | jvm 1    | 2014/10/16 17:41:57 |       at java.lang.Object.wait(Native Method)\nINFO   | jvm 1    | 2014/10/16 17:41:57 |       at java.lang.Object.wait(Object.java:503)\nINFO   | jvm 1    | 2014/10/16 17:41:57 |       at io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:286)\nINFO   | jvm 1    | 2014/10/16 17:41:57 |       - locked <0x00000006793b7dc0> (a io.netty.util.concurrent.DefaultPromise)\nINFO   | jvm 1    | 2014/10/16 17:41:57 |       at io.netty.util.concurrent.DefaultPromise.awaitUninterruptibly(DefaultPromise.java:32)\nINFO   | jvm 1    | 2014/10/16 17:41:57 |       at org.redisson.RedissonLock.lockInterruptibly(RedissonLock.java:233)\nINFO   | jvm 1    | 2014/10/16 17:41:57 |       at org.redisson.RedissonLock.lockInterruptibly(RedissonLock.java:226)\nINFO   | jvm 1    | 2014/10/16 17:41:57 |       at org.redisson.RedissonLock.lock(RedissonLock.java:206)\n```\n\nThe same lock name was likely concurrently obtained and held by another thread possibly on another jvm, and then released.\n\nRedisson version used: 1.1.5\n", "url": "https://github.com/redisson/redisson/issues/83", "user": "kimb", "labels": ["bug"], "created": "2014-10-16 21:20:36", "closed": "2014-11-18 13:39:14", "commits": {}, "ttf": 32.000277777777775, "commitsDetails": []}, {"title": "it reached at the tail of the pipelin", "body": " i.n.channel.DefaultChannelPipeline [151] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\njava.lang.NullPointerException: null\n    at com.lambdaworks.redis.protocol.CommandOutput.decodeAscii(CommandOutput.java:110) ~[redisson-1.1.5.jar:na]\n    at com.lambdaworks.redis.output.StatusOutput.set(StatusOutput.java:26) ~[redisson-1.1.5.jar:na]\n    at com.lambdaworks.redis.protocol.RedisStateMachine.decode(RedisStateMachine.java:89) ~[redisson-1.1.5.jar:na]\n    at com.lambdaworks.redis.protocol.CommandHandler.decode(CommandHandler.java:71) ~[redisson-1.1.5.jar:na]\n    at com.lambdaworks.redis.protocol.CommandHandler.channelRead(CommandHandler.java:52) ~[redisson-1.1.5.jar:na]\n    at io.netty.channel.DefaultChannelHandlerContext.invokeChannelRead(DefaultChannelHandlerContext.java:341) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:327) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.DefaultChannelHandlerContext.invokeChannelRead(DefaultChannelHandlerContext.java:341) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:327) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:785) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:126) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:507) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:464) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:378) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:350) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:116) [netty-common-4.0.19.Final.jar:4.0.19.Final]\n    at java.lang.Thread.run(Thread.java:744) [na:1.7.0_51]\n", "url": "https://github.com/redisson/redisson/issues/78", "user": "martinou", "labels": ["bug"], "created": "2014-09-23 06:56:56", "closed": "2014-11-18 17:38:17", "commits": {}, "ttf": 56.000277777777775, "commitsDetails": []}, {"title": "StackOverflowError ", "body": "Invocation of init method failed; nested exception is java.lang.StackOverflowError\n\nWARN  [org.redisson.connection.RoundRobinLoadBalancer](localhost-startStop-1:) Can't connect to /192.168.1.203:6379, trying next connection!\n2014-08-26 14:35:21,194 WARN  [org.redisson.connection.RoundRobinLoadBalancer](localhost-startStop-1:) Slave subscribe-connection pool gets exhausted! Trying to acquire connection again...\n2014-08-26 14:36:21,197 WARN  [org.redisson.connection.RoundRobinLoadBalancer](localhost-startStop-1:) Can't connect to /192.168.1.203:6379, trying next connection!\n2014-08-26 14:36:21,197 WARN  [org.redisson.connection.RoundRobinLoadBalancer](localhost-startStop-1:) Slave subscribe-connection pool gets exhausted! Trying to acquire connection again...\n2014-08-26 14:37:21,200 WARN  [org.redisson.connection.RoundRobinLoadBalancer](localhost-startStop-1:) Can't connect to /192.168.1.203:6379, trying next connection!\n2014-08-26 14:37:21,200 WARN  [org.redisson.connection.RoundRobinLoadBalancer](localhost-startStop-1:) Slave subscribe-connection pool gets exhausted! Trying to acquire connection again...\n", "url": "https://github.com/redisson/redisson/issues/72", "user": "pprun", "labels": ["bug"], "created": "2014-08-26 07:13:51", "closed": "2014-12-15 14:32:35", "commits": {}, "ttf": 111.00027777777778, "commitsDetails": []}, {"title": "Keys adding quotes when going to data store", "body": "I was working with redisson adding data to the data store.  I was having issues, so I went to the command line to check what was in the data store and couldn't find my structures (although the program seemed to find them OK).  So I listed the keys and got this:\n\n127.0.0.1:6379> keys *\n1) \"\\\"resource\\\"\"\n2) \"\\\"processedMap\\\"\"\n3) \"\\\"agentCounter\\\"\"\n4) \"\\\"processCounter\\\"\"\n5) \"\\\"routedMap\\\"\"\n\nthen from the cli, I entered \"set foo bar\" and listed the keys again and got this:\n\n127.0.0.1:6379> keys *\n1) \"\\\"resource\\\"\"\n2) \"\\\"processedMap\\\"\"\n3) \"foo\"\n4) \"\\\"agentCounter\\\"\"\n5) \"\\\"processCounter\\\"\"\n6) \"\\\"routedMap\\\"\"\n\nit seems that redisson is surrounding the key names with quotes before storing them.\n", "url": "https://github.com/redisson/redisson/issues/70", "user": "judodan", "labels": ["bug"], "created": "2014-08-20 22:32:52", "closed": "2014-11-12 14:58:33", "commits": {"3470012657bfc3ee9a0644a8dd112a5c89a31a81": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 83.00027777777778, "commitsDetails": [{"commitHash": "3470012657bfc3ee9a0644a8dd112a5c89a31a81", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["1ce38f389d88b32c38a4c6cd8d4f57aa95befd54"], "nameRev": "3470012657bfc3ee9a0644a8dd112a5c89a31a81 tags/redisson-1.1.6~17", "commitMessage": "key encoding fixed. #70\n", "commitDateTime": "2014-11-12 18:05:38", "authoredDateTime": "2014-11-12 18:05:38", "commitGitStats": [{"filePath": "src/main/java/org/redisson/codec/JsonJacksonCodec.java", "insertions": 6, "deletions": 5, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JsonJacksonCodec.java", "spoonMethods": [{"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.createObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.decodeKey(java.nio.ByteBuffer)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.codec.JsonJacksonCodec.encodeKey(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3470012657bfc3ee9a0644a8dd112a5c89a31a81"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 5, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 3, "INS": 2, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/codec"], "changesInPackagesSPOON": ["org.redisson.codec.JsonJacksonCodec.decodeKey(java.nio.ByteBuffer)", "org.redisson.codec.JsonJacksonCodec.encodeKey(java.lang.Object)", "org.redisson.codec.JsonJacksonCodec", "org.redisson.codec.JsonJacksonCodec.createObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)"]}, {"title": "Failover in Redisson with Redis Cluster", "body": "I have created a cluster with 3 master and 3 slave.\nport 7000 seems to be myself,master.\nIf 7000 goes down I get a connection refused exception with Redisson. Ideally it should shift to its slave.\n\nI am copying the exception here\ncom.lambdaworks.redis.RedisConnectionException: Unable to connect /127.0.0.1:7000\nat com.lambdaworks.redis.RedisClient.connect(RedisClient.java:183)\nat com.lambdaworks.redis.RedisClient.connectAsync(RedisClient.java:143)\nat com.lambdaworks.redis.RedisClient.connectAsync(RedisClient.java:104)\nat org.redisson.connection.ClusterConnectionManager.(ClusterConnectionManager.java:54)\nat org.redisson.Redisson.(Redisson.java:56)\nat org.redisson.Redisson.create(Redisson.java:82)\n\nIs it a known issue?\n", "url": "https://github.com/redisson/redisson/issues/65", "user": "rekhajaya", "labels": ["bug"], "created": "2014-08-08 17:36:21", "closed": "2015-01-07 08:26:19", "commits": {"7855cd9a34b873dd0013dc8a9634a1c821c2d6b4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 151.00027777777777, "commitsDetails": [{"commitHash": "7855cd9a34b873dd0013dc8a9634a1c821c2d6b4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["8bf61cb665ab1dc901f7e351a2ec0b7cf02506d7"], "nameRev": "7855cd9a34b873dd0013dc8a9634a1c821c2d6b4 tags/redisson-1.2.0~10", "commitMessage": "RedisConnectionException handling during cluster init. #65\n", "commitDateTime": "2015-01-07 11:34:41", "authoredDateTime": "2015-01-07 11:34:41", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/ClusterConnectionManager.java", "insertions": 42, "deletions": 37, "lines": 79}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClusterConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ClusterConnectionManager", "TOT": 15, "UPD": 3, "INS": 1, "MOV": 9, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7855cd9a34b873dd0013dc8a9634a1c821c2d6b4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 42, "deletions": 37, "lines": 79, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 15, "UPD": 3, "INS": 1, "MOV": 9, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.ClusterConnectionManager"]}, {"title": "Netty NPE", "body": "Hey folks, I'm seeing this error on redisson 1.1.5 and it seems completely sporadic\n\n```\nWARN  [2014-08-04 04:10:21,672] io.netty.channel.DefaultChannelPipeline: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\n! java.lang.NullPointerException: null\n! at com.lambdaworks.redis.protocol.CommandOutput.decodeAscii(CommandOutput.java:110) ~[redisson-1.1.5.jar:na]\n! at com.lambdaworks.redis.output.StatusOutput.set(StatusOutput.java:26) ~[redisson-1.1.5.jar:na]\n! at com.lambdaworks.redis.protocol.RedisStateMachine.decode(RedisStateMachine.java:89) ~[redisson-1.1.5.jar:na]\n! at com.lambdaworks.redis.protocol.CommandHandler.decode(CommandHandler.java:71) ~[redisson-1.1.5.jar:na]\n! at com.lambdaworks.redis.protocol.CommandHandler.channelRead(CommandHandler.java:52) ~[redisson-1.1.5.jar:na]\n! at io.netty.channel.DefaultChannelHandlerContext.invokeChannelRead(DefaultChannelHandlerContext.java:341) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:327) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelHandlerContext.invokeChannelRead(DefaultChannelHandlerContext.java:341) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:327) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:785) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:126) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:507) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:464) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:378) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:350) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:116) [netty-common-4.0.19.Final.jar:4.0.19.Final]\n! at java.lang.Thread.run(Thread.java:744) [na:1.8.0]\n```\n", "url": "https://github.com/redisson/redisson/issues/62", "user": "rferreira", "labels": ["bug"], "created": "2014-08-04 04:12:17", "closed": "2014-08-04 10:16:16", "commits": {"701d1a7e558adfc429d52779f1ec77ee8aee5af4": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "701d1a7e558adfc429d52779f1ec77ee8aee5af4", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["074d1339d3043026bb2690534d0620940d145b71"], "nameRev": "701d1a7e558adfc429d52779f1ec77ee8aee5af4 tags/redisson-1.1.6~28", "commitMessage": "NPE fixed. #62\n", "commitDateTime": "2014-08-04 09:38:36", "authoredDateTime": "2014-08-04 09:38:36", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/protocol/CommandOutput.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandOutput.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.protocol.CommandOutput.decodeAscii(java.nio.ByteBuffer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["701d1a7e558adfc429d52779f1ec77ee8aee5af4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/com/lambdaworks/redis/protocol"], "changesInPackagesSPOON": ["com.lambdaworks.redis.protocol.CommandOutput.decodeAscii(java.nio.ByteBuffer)"]}, {"title": "Why RTopic.removeListener unsubscribes underlying PubSub channel", "body": "I ran into an issue in which I found if I remove a listener from an RTopic, it will unsubscribe the entire channel, which will kill the connection for all listeners and RTopic subscribed to the same channel. Following is the code in question.\n\nRedissonTopic.class\n    @Override\n    public void removeListener(int listenerId) {\n        PubSubConnectionEntry entry = connectionManager.getEntry(getName());\n        if (entry == null) {\n            return;\n        }\n        synchronized (entry) {\n            if (entry.isActive()) {\n                entry.removeListener(getName(), listenerId);\n                connectionManager.unsubscribe(getName());\n                return;\n            }\n        }\n\n```\n    // entry is inactive trying add again\n    removeListener(listenerId);\n}\n```\n\nI am not quite sure whether I am using Redisson RTopic in the right way. Would you please help me to understand what\u2019s the reason to unsubscribe the channel when removing one listener? And if I need to have multiple listeners subscribed on the same channel and the list of listeners will change dynamically (since it\u2019s used on the application server to propagate changes to clients), what\u2019s the right way to use RTopic?\n\nYour help will be greatly appreciated.\n", "url": "https://github.com/redisson/redisson/issues/61", "user": "liuyin-ocous", "labels": ["bug"], "created": "2014-08-02 07:37:37", "closed": "2014-08-06 12:42:45", "commits": {"48c26e49648bd07fc364b4eaf9e5bd2b284ea5e6": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "c9e4a0f45f5990d746223676a2b77f32b8e263c0": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "48c26e49648bd07fc364b4eaf9e5bd2b284ea5e6", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f812c059ebe8973aa8f064bd6ab5045d5068eb9a"], "nameRev": "48c26e49648bd07fc364b4eaf9e5bd2b284ea5e6 tags/redisson-1.1.6~25^2", "commitMessage": "Unsubscribing during RTopic.removeListener fixed. #61\n", "commitDateTime": "2014-08-06 16:39:18", "authoredDateTime": "2014-08-06 16:39:18", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonTopic.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.removeListener(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c9e4a0f45f5990d746223676a2b77f32b8e263c0", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f812c059ebe8973aa8f064bd6ab5045d5068eb9a"], "nameRev": "c9e4a0f45f5990d746223676a2b77f32b8e263c0 tags/redisson-1.1.6~26", "commitMessage": "Unsubscribing during RTopic.removeListener fixed. #61\n", "commitDateTime": "2014-08-06 16:39:48", "authoredDateTime": "2014-08-06 16:39:18", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonTopic.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "src/test/java/org/redisson/RedissonTopicTest.java", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonTopic.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopic.removeListener(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonTopicTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonTopicTest.testLazyUnsubscribe()", "TOT": 17, "UPD": 1, "INS": 3, "MOV": 13, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.test().3", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testListenerRemove().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.testUnsubscribe()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonTopicTest.test()", "TOT": 13, "UPD": 0, "INS": 3, "MOV": 10, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c9e4a0f45f5990d746223676a2b77f32b8e263c0"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonTopic.removeListener(int)"]}, {"title": "Exceptions handling during deserialization", "body": "", "url": "https://github.com/redisson/redisson/issues/52", "user": "mrniko", "labels": ["bug"], "created": "2014-07-20 09:09:48", "closed": "2014-07-23 07:25:36", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Two serious issues", "body": "1.Sentinel not support auth password.\uff08I have solve this problem\uff09\n2.When redis sentinel occur failover\uff0credisson can not failover to new master automatic\u3002\n", "url": "https://github.com/redisson/redisson/issues/41", "user": "lianghaijian", "labels": ["bug"], "created": "2014-07-11 08:40:31", "closed": "2015-08-15 06:16:11", "commits": {"7be459cb9d83054ef946cf0ff0577df0b32301ce": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "cf2aa02caf5fbfb530997532e0386007878e9284": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "a9675f5379a0501808a50583f1770a59c4a2a96a": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "e9c2f57b6d146b8d53ff9511fa60e2da32e38180": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "920c71d1f92fb2d521e29b864955d496287e213c": {"commitGHEventType": "referenced", "commitUser": "mrniko"}, "265cc94f503ded3559b2deb79666c27494d43879": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 399.0002777777778, "commitsDetails": [{"commitHash": "7be459cb9d83054ef946cf0ff0577df0b32301ce", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["98b33b65014211035003b4933b7c5ce3c905f7fc"], "nameRev": "7be459cb9d83054ef946cf0ff0577df0b32301ce tags/redisson-1.1.3~14", "commitMessage": "Sentinel auth support. #41\n", "commitDateTime": "2014-07-11 13:19:52", "authoredDateTime": "2014-07-11 13:19:52", "commitGitStats": [{"filePath": "src/main/java/org/redisson/SentinelServersConfig.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 13, "deletions": 10, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelServersConfig.java", "spoonMethods": [{"spoonMethodName": "org.redisson.SentinelServersConfig", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 10, "UPD": 3, "INS": 5, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.init(org.redisson.SentinelServersConfig,org.redisson.Config)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "cf2aa02caf5fbfb530997532e0386007878e9284", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["13ab778b1c1a7a7445fc6cb9fac8906ff55f98bf"], "nameRev": "cf2aa02caf5fbfb530997532e0386007878e9284 tags/redisson-1.1.4~6", "commitMessage": "All slow down server connections should be closed.  #41\n", "commitDateTime": "2014-07-14 16:55:49", "authoredDateTime": "2014-07-14 16:55:49", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 23, "deletions": 7, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.freeze(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.returnSubscribeConnection(com.lambdaworks.redis.pubsub.RedisPubSubConnection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.returnConnection(com.lambdaworks.redis.RedisConnection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextConnection()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a9675f5379a0501808a50583f1770a59c4a2a96a", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cf2aa02caf5fbfb530997532e0386007878e9284"], "nameRev": "a9675f5379a0501808a50583f1770a59c4a2a96a tags/redisson-1.1.4~5", "commitMessage": "PubSubConnections reattach fixed. #41\n", "commitDateTime": "2014-07-14 17:20:45", "authoredDateTime": "2014-07-14 17:20:45", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 17, "deletions": 3, "lines": 20}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 26, "deletions": 32, "lines": 58}, {"filePath": "src/main/java/org/redisson/connection/SlaveConnectionEntry.java", "insertions": 16, "deletions": 4, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.returnSubscribeConnection(com.lambdaworks.redis.pubsub.RedisPubSubConnection)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.freeze(java.lang.String,int)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.reattachListeners(java.util.Collection)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(java.lang.String,int)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SlaveConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SlaveConnectionEntry", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SlaveConnectionEntry.getSubscribeConnections()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SlaveConnectionEntry.registerSubscribeConnection(com.lambdaworks.redis.pubsub.RedisPubSubConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SlaveConnectionEntry.pollFreeSubscribeConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SlaveConnectionEntry.offerFreeSubscribeConnection(com.lambdaworks.redis.pubsub.RedisPubSubConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e9c2f57b6d146b8d53ff9511fa60e2da32e38180", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["6b0c25471a30442c2c7265eaff7fd9f1e88276ad"], "nameRev": "e9c2f57b6d146b8d53ff9511fa60e2da32e38180 tags/redisson-2.1.1~5", "commitMessage": "Sentinel single master handling. #41\n", "commitDateTime": "2015-08-13 17:47:46", "authoredDateTime": "2015-08-13 17:47:46", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "src/main/java/org/redisson/connection/ConnectionEntry.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "src/main/java/org/redisson/connection/LoadBalancer.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 11, "deletions": 4, "lines": 15}, {"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 19, "deletions": 17, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.getAvailableClients()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.add(org.redisson.connection.SubscribesConnectionEntry)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.ConnectionEntry.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.getAvailableClients()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.addSlave(java.lang.String,int)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.monitorMasterChange(org.redisson.SentinelServersConfig,java.util.Set)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.util.Set,java.net.URI,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveUp(java.util.Set,java.net.URI,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.monitorMasterChange(org.redisson.SentinelServersConfig,java.util.Set).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveDown(java.util.Set,java.net.URI,java.lang.String)", "TOT": 9, "UPD": 3, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.monitorMasterChange(org.redisson.SentinelServersConfig,java.util.Set).1.onPatternMessage(java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "920c71d1f92fb2d521e29b864955d496287e213c", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["4f8bc8a32d2055e90bdf6b2d181cc46679181ee6"], "nameRev": "920c71d1f92fb2d521e29b864955d496287e213c tags/redisson-2.1.1~3", "commitMessage": "Activate master as slave when no more slaves online. #41\n", "commitDateTime": "2015-08-14 09:48:04", "authoredDateTime": "2015-08-14 09:48:04", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/MasterSlaveEntry.java", "insertions": 5, "deletions": 3, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "265cc94f503ded3559b2deb79666c27494d43879", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["96c9e5c118d24e315880e4a308b04ebefe678a0f"], "nameRev": "265cc94f503ded3559b2deb79666c27494d43879 tags/redisson-2.1.1~1", "commitMessage": "Skip disconnected sentinels during startup. Slave discovery which has been down since start fixed. #41\n", "commitDateTime": "2015-08-14 17:50:45", "authoredDateTime": "2015-08-14 17:50:45", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/SentinelConnectionManager.java", "insertions": 63, "deletions": 44, "lines": 107}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SentinelConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.SentinelConnectionManager", "TOT": 21, "UPD": 5, "INS": 6, "MOV": 6, "DEL": 4}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.SentinelConnectionManager.onSlaveDown(java.net.URI,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7be459cb9d83054ef946cf0ff0577df0b32301ce", "cf2aa02caf5fbfb530997532e0386007878e9284", "a9675f5379a0501808a50583f1770a59c4a2a96a", "e9c2f57b6d146b8d53ff9511fa60e2da32e38180", "920c71d1f92fb2d521e29b864955d496287e213c", "265cc94f503ded3559b2deb79666c27494d43879"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 6, "gitStatsSummary": {"insertions": 215, "deletions": 126, "lines": 341, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 111, "UPD": 22, "INS": 44, "MOV": 35, "DEL": 10, "spoonFilesChanged": 8, "spoonMethodsChanged": 32}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.connection.SentinelConnectionManager", "org.redisson.connection.BaseLoadBalancer.returnSubscribeConnection(com.lambdaworks.redis.pubsub.RedisPubSubConnection)", "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "org.redisson.connection.BaseLoadBalancer.freeze(java.lang.String,int)", "org.redisson.connection.SlaveConnectionEntry.pollFreeSubscribeConnection()", "org.redisson.connection.SentinelConnectionManager.slaveDown(java.lang.String,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.monitorMasterChange(org.redisson.SentinelServersConfig,java.util.Set).1.onPatternMessage(java.lang.String,java.lang.String,java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.slaveDown(java.lang.String,int)", "org.redisson.connection.SlaveConnectionEntry.registerSubscribeConnection(com.lambdaworks.redis.pubsub.RedisPubSubConnection)", "org.redisson.connection.BaseLoadBalancer.nextConnection()", "org.redisson.connection.SentinelConnectionManager.onSlaveUp(java.util.Set,java.net.URI,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.monitorMasterChange(org.redisson.SentinelServersConfig,java.util.Set)", "org.redisson.connection.MasterSlaveEntry.addSlave(java.lang.String,int)", "org.redisson.connection.BaseLoadBalancer.returnConnection(com.lambdaworks.redis.RedisConnection)", "org.redisson.connection.MasterSlaveEntry.changeMaster(java.lang.String,int)", "org.redisson.connection.SlaveConnectionEntry.offerFreeSubscribeConnection(com.lambdaworks.redis.pubsub.RedisPubSubConnection)", "org.redisson.connection.BaseLoadBalancer.add(org.redisson.connection.SubscribesConnectionEntry)", "org.redisson.connection.MasterSlaveEntry.slaveDown(java.lang.String,int)", "org.redisson.connection.MasterSlaveEntry.slaveUp(java.lang.String,int)", "org.redisson.connection.SentinelConnectionManager.init(org.redisson.SentinelServersConfig,org.redisson.Config)", "org.redisson.connection.SentinelConnectionManager.registerSentinel(org.redisson.SentinelServersConfig,java.net.URI)", "org.redisson.connection.SentinelConnectionManager.onSlaveAdded(java.util.Set,java.net.URI,java.lang.String)", "org.redisson.connection.SentinelConnectionManager.onSlaveDown(java.util.Set,java.net.URI,java.lang.String)", "org.redisson.connection.SlaveConnectionEntry", "org.redisson.connection.BaseLoadBalancer.getAvailableClients()", "org.redisson.connection.SentinelConnectionManager.monitorMasterChange(org.redisson.SentinelServersConfig,java.util.Set).1", "org.redisson.connection.ConnectionEntry.toString()", "org.redisson.SentinelServersConfig", "org.redisson.connection.getAvailableClients()", "org.redisson.connection.MasterSlaveConnectionManager.reattachListeners(java.util.Collection)", "org.redisson.connection.SlaveConnectionEntry.getSubscribeConnections()", "org.redisson.connection.SentinelConnectionManager.onSlaveDown(java.net.URI,java.lang.String)"]}, {"title": "Locking on Jersey", "body": "I'm trying to use Lock and Unlock on Jersey Resource.\n1. User makes a POST request\n2. System LOCK \"A\"\n3. System does some stuff\n4. System UNLOCK \"A\"\n5. User makes another POST request\n6. System LOCK \"A\"\n7. System does some stuff\n8. System UNLOCK \"A\"\n\nThe system crashes at point 6 (view attachment).\n\nIf i try to make some LOCK-UNLOCK in a while loop it works, but when i make these LOCK-UNLOCK from different Threads it does not works.\n\nWARN  [2014-07-10 10:36:15,734] io.netty.channel.DefaultChannelPipeline: An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\n! java.lang.IllegalStateException: complete already: DefaultPromise@3c519764(incomplete)\n! at io.netty.util.concurrent.DefaultPromise.setSuccess(DefaultPromise.java:406) ~[netty-common-4.0.19.Final.jar:4.0.19.Final]\n! at org.redisson.RedissonLock$1.subscribed(RedissonLock.java:177) ~[redisson-1.1.3.jar:na]\n! at com.lambdaworks.redis.pubsub.RedisPubSubConnection.channelRead(RedisPubSubConnection.java:132) ~[redisson-1.1.3.jar:na]\n! at io.netty.channel.DefaultChannelHandlerContext.invokeChannelRead(DefaultChannelHandlerContext.java:341) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:327) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at com.lambdaworks.redis.pubsub.PubSubCommandHandler.decode(PubSubCommandHandler.java:46) [redisson-1.1.3.jar:na]\n! at com.lambdaworks.redis.protocol.CommandHandler.channelRead(CommandHandler.java:52) [redisson-1.1.3.jar:na]\n! at io.netty.channel.DefaultChannelHandlerContext.invokeChannelRead(DefaultChannelHandlerContext.java:341) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:327) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelHandlerContext.invokeChannelRead(DefaultChannelHandlerContext.java:341) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:327) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:785) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:126) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:507) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:464) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:378) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:350) [netty-transport-4.0.19.Final.jar:4.0.19.Final]\n! at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:116) [netty-common-4.0.19.Final.jar:4.0.19.Final]\n! at java.lang.Thread.run(Thread.java:722) [na:1.7.0_10-ea]\n", "url": "https://github.com/redisson/redisson/issues/39", "user": "nottix", "labels": ["bug"], "created": "2014-07-10 10:43:30", "closed": "2014-07-10 16:20:42", "commits": {"0cf87f2a75505035755feb1719a7eb4ea4942de7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0cf87f2a75505035755feb1719a7eb4ea4942de7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["f8d00c28426232cea0024e423bd44bb8d315997f"], "nameRev": "0cf87f2a75505035755feb1719a7eb4ea4942de7 tags/redisson-1.1.3~18", "commitMessage": "Multi-thread lock fixed.  #39\n", "commitDateTime": "2014-07-10 18:50:37", "authoredDateTime": "2014-07-10 18:50:37", "commitGitStats": [{"filePath": "src/main/java/com/lambdaworks/redis/pubsub/RedisPubSubConnection.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "src/main/java/org/redisson/RedissonLock.java", "insertions": 60, "deletions": 45, "lines": 105}, {"filePath": "src/main/java/org/redisson/connection/ConnectionManager.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 66, "deletions": 30, "lines": 96}, {"filePath": "src/main/java/org/redisson/connection/PubSubConnectionEntry.java", "insertions": 22, "deletions": 5, "lines": 27}, {"filePath": "src/test/java/org/redisson/RedissonLockTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisPubSubConnection.java", "spoonMethods": [{"spoonMethodName": "com.lambdaworks.redis.pubsub.RedisPubSubConnection.unsubscribe(java.lang.String[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.close()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.subscribe().2.message(java.lang.String,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.tryLock(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.unlock()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.forceUnlock()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.isLocked()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.isHeldByCurrentThread()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.getHoldCount()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.close().3.run()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.release()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.getEntryName()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.subscribe()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonLock.tryLock()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock.delete()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonLock", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonLock.lockInterruptibly()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.unsubscribe(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String)", "TOT": 11, "UPD": 2, "INS": 5, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(com.lambdaworks.redis.pubsub.RedisPubSubAdapter,java.lang.String)", "TOT": 13, "UPD": 0, "INS": 4, "MOV": 8, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "PubSubConnectionEntry.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.unsubscribe(java.lang.String)", "TOT": 11, "UPD": 1, "INS": 7, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.subscribe(com.lambdaworks.redis.pubsub.RedisPubSubAdapter,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.connection.PubSubConnectionEntry.tryClose()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedissonLockTest.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLockTest.testConcurrencyLoop_MultiInstance().7.run(org.redisson.Redisson)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0cf87f2a75505035755feb1719a7eb4ea4942de7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 153, "deletions": 83, "lines": 236, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 87, "UPD": 15, "INS": 30, "MOV": 32, "DEL": 10, "spoonFilesChanged": 5, "spoonMethodsChanged": 24}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection", "src/main/java/com/lambdaworks/redis/pubsub", "src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.forceUnlock()", "org.redisson.RedissonLock.lockInterruptibly()", "org.redisson.RedissonLock.isLocked()", "org.redisson.RedissonLock.delete()", "org.redisson.RedissonLock.getEntryName()", "org.redisson.connection.MasterSlaveConnectionManager.unsubscribe(java.lang.String)", "org.redisson.RedissonLock", "org.redisson.connection.unsubscribe(java.lang.String)", "org.redisson.RedissonLock.close()", "org.redisson.RedissonLock.subscribe().2.message(java.lang.String,java.lang.Object)", "org.redisson.RedissonLock.isHeldByCurrentThread()", "org.redisson.RedissonLock.unlock()", "com.lambdaworks.redis.pubsub.RedisPubSubConnection.unsubscribe(java.lang.String[])", "org.redisson.RedissonLock.getHoldCount()", "org.redisson.connection.PubSubConnectionEntry.subscribe(com.lambdaworks.redis.pubsub.RedisPubSubAdapter,java.lang.String)", "org.redisson.connection.PubSubConnectionEntry.tryClose()", "org.redisson.RedissonLock.close().3.run()", "org.redisson.RedissonLock.release()", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(com.lambdaworks.redis.pubsub.RedisPubSubAdapter,java.lang.String)", "org.redisson.connection.PubSubConnectionEntry.unsubscribe(java.lang.String)", "org.redisson.connection.MasterSlaveConnectionManager.subscribe(java.lang.String)", "org.redisson.RedissonLock.tryLock(long,java.util.concurrent.TimeUnit)", "org.redisson.RedissonLock.tryLock()", "org.redisson.RedissonLock.subscribe()"]}, {"title": "Auth Issue Only On Read", "body": "I just added requirepass and masterauth to my configuration for 3 slaves and a master.  Using 1.5 I am able to write just fine, but when I tried Map::get I get a RedisException: \"NOAUTH Authentication required.\"\n\nI've tried just using a single connection to the master, a 'useMasterSlaveConnection' with only 'setMasterAddress', and a 'useMasterSlaveConnection' with all hosts configured.  \n\nWhen I connect with a tool like Redis Desktop Manager I am able to view the updated values just fine.\n", "url": "https://github.com/redisson/redisson/issues/29", "user": "ghost", "labels": ["bug"], "created": "2014-06-06 22:52:56", "closed": "2014-06-07 07:46:09", "commits": {"fe5ac1669a5e2269031bbee9fa88abbf2c28e7e7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fe5ac1669a5e2269031bbee9fa88abbf2c28e7e7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["ca56f63d038b2bd537bf6228b45e249fe2e2fade"], "nameRev": "fe5ac1669a5e2269031bbee9fa88abbf2c28e7e7 tags/redisson-1.1.0~13", "commitMessage": "Password auth fixed. #29\n", "commitDateTime": "2014-06-07 11:49:37", "authoredDateTime": "2014-06-07 11:49:37", "commitGitStats": [{"filePath": "src/main/java/org/redisson/connection/BaseLoadBalancer.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "src/main/java/org/redisson/connection/LoadBalancer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/main/java/org/redisson/connection/MasterSlaveConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseLoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.BaseLoadBalancer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.init(java.util.List,com.lambdaworks.redis.codec.RedisCodec,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.redisson.connection.BaseLoadBalancer.nextConnection()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LoadBalancer.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.init(java.util.List,com.lambdaworks.redis.codec.RedisCodec,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveConnectionManager.java", "spoonMethods": [{"spoonMethodName": "org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveConnectionConfig,org.redisson.Config)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fe5ac1669a5e2269031bbee9fa88abbf2c28e7e7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 5, "lines": 22, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 14, "UPD": 0, "INS": 12, "MOV": 2, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson/connection"], "changesInPackagesSPOON": ["org.redisson.connection.MasterSlaveConnectionManager.init(org.redisson.MasterSlaveConnectionConfig,org.redisson.Config)", "org.redisson.connection.BaseLoadBalancer.nextPubSubConnection()", "org.redisson.connection.init(java.util.List,com.lambdaworks.redis.codec.RedisCodec,java.lang.String)", "org.redisson.connection.BaseLoadBalancer.init(java.util.List,com.lambdaworks.redis.codec.RedisCodec,java.lang.String)", "org.redisson.connection.BaseLoadBalancer", "org.redisson.connection.BaseLoadBalancer.nextConnection()"]}, {"title": "Sorted set scores collapsed to zeros ", "body": "After running for a week or two, the scores collapsed to zeros or nead zero (10^-300) and we encountered an infinite loop in redisson when adding (it couldnt settle on a score). So we will manage the score ourselves.\n", "url": "https://github.com/redisson/redisson/issues/28", "user": "mrniko", "labels": ["bug"], "created": "2014-06-05 05:26:03", "closed": "2014-06-07 15:17:01", "commits": {"c19ed0a64984bbafb4b54e14270ea616851fff04": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "c19ed0a64984bbafb4b54e14270ea616851fff04", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["9e6ee8dadc0ae7f4aed02df126181289a0da57eb"], "nameRev": "c19ed0a64984bbafb4b54e14270ea616851fff04 tags/redisson-1.1.0~6", "commitMessage": "Sorted set scores collapsed to zeros fixed. #28\n", "commitDateTime": "2014-06-07 19:20:55", "authoredDateTime": "2014-06-07 19:20:55", "commitGitStats": [{"filePath": "src/main/java/org/redisson/RedissonSortedSet.java", "insertions": 72, "deletions": 13, "lines": 85}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonSortedSet.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonSortedSet.getScoreAtIndex(int,com.lambdaworks.redis.RedisConnection)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.redisson.RedissonSortedSet.iterator()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSortedSet.iterator(double,double)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSortedSet.calcNewScore(int,com.lambdaworks.redis.RedisConnection)", "TOT": 18, "UPD": 7, "INS": 5, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.redisson.RedissonSortedSet.iterator(double,double).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSortedSet.iterator(double,double).1.next()", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSortedSet.iterator(double,double).1.remove()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSortedSet.iterator(double,double).1.hasNext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.redisson.RedissonSortedSet.calcIncrement(double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c19ed0a64984bbafb4b54e14270ea616851fff04"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 72, "deletions": 13, "lines": 85, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 41, "UPD": 26, "INS": 8, "MOV": 4, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonSortedSet.iterator(double,double).1.hasNext()", "org.redisson.RedissonSortedSet.iterator(double,double)", "org.redisson.RedissonSortedSet.calcIncrement(double)", "org.redisson.RedissonSortedSet.calcNewScore(int,com.lambdaworks.redis.RedisConnection)", "org.redisson.RedissonSortedSet.getScoreAtIndex(int,com.lambdaworks.redis.RedisConnection)", "org.redisson.RedissonSortedSet.iterator(double,double).1", "org.redisson.RedissonSortedSet.iterator()", "org.redisson.RedissonSortedSet.iterator(double,double).1.remove()", "org.redisson.RedissonSortedSet.iterator(double,double).1.next()"]}, {"title": "RLock.unlock() results in ERR hash value is not an integer", "body": "**Redis**: 5.0.12\r\n**Redisson**: 3.12.0\r\n\r\nThe following code snippet will successfully create and lock RLock and will throw RedisException unlocking the lock. \r\n\r\n```\r\n   RLock lock = client.getLock(\"lock-test\");\r\n   lock.lock();\r\n   lock.unlock();\r\n```\r\n\r\n```\r\norg.redisson.client.RedisException: ERR Error running script (call to f_3ffe249c16dee540ac8ab32e39bd408626b9aff7): @user_script:1: ERR hash value is not an integer . channel: [id: 0x7c579845, L:/my-ip:port - R:host/my-ip:port] command: (EVAL), params: [if (redis.call('hexists', KEYS[1], ARGV[3]) == 0) then return nil;end; local counter = redis.call('h..., 2, lock-test, redisson_lock__channel:{lock-test}, 0, 30000, 62ad3063-9ff4-4a24-bfe1-bd08254b2968:1]\r\n\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:351)\r\n\tat org.redisson.client.handler.CommandDecoder.decodeCommand(CommandDecoder.java:199)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:139)\r\n\tat org.redisson.client.handler.CommandDecoder.decode(CommandDecoder.java:114)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:502)\r\n\tat io.netty.handler.codec.ReplayingDecoder.callDecode(ReplayingDecoder.java:366)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:278)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:337)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:337)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:337)\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:337)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1408)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:359)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:345)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:930)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:677)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:612)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:529)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:491)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n```", "url": "https://github.com/redisson/redisson/issues/2551", "user": "dvysotskiy", "labels": ["redis vendor bug"], "created": "2020-01-20 20:45:27", "closed": "2020-02-20 07:19:39", "commits": {"531bd2d86535b3481fe06ee090682707a2a7d4b7": {"commitGHEventType": "referenced", "commitUser": "mrniko"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "531bd2d86535b3481fe06ee090682707a2a7d4b7", "commitGHEventType": "referenced", "commitUser": "mrniko", "commitParents": ["cfe99d32e676c279cfe9613bc97e14e7c20e8ca5"], "nameRev": "531bd2d86535b3481fe06ee090682707a2a7d4b7 tags/redisson-3.12.3~36", "commitMessage": "Fixed - RLock.unlock() results in ERR hash value if RedisLabs hosting used #2551\n", "commitDateTime": "2020-02-20 10:20:18", "authoredDateTime": "2020-02-20 10:20:18", "commitGitStats": [{"filePath": "redisson/src/main/java/org/redisson/RedissonLock.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedissonLock.java", "spoonMethods": [{"spoonMethodName": "org.redisson.RedissonLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["531bd2d86535b3481fe06ee090682707a2a7d4b7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["redisson/src/main/java/org/redisson"], "changesInPackagesSPOON": ["org.redisson.RedissonLock.tryLockInnerAsync(long,java.util.concurrent.TimeUnit,long,org.redisson.client.protocol.RedisStrictCommand)"]}]}