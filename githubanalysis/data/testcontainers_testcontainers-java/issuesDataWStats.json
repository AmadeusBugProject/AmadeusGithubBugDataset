{"projectName": "testcontainers/testcontainers-java", "bugLabels": ["type/breaking-api-change", "type/bug"], "captureTime": "Fri Jul  3 16:41:34 2020", "issues": [{"title": "Please add support for AWS SDK v2", "body": "`LocalStackContainer` uses the AWS SDK for Java v1.\r\n\r\nThe AWS SDK for Java v2 API has renamed everything. In particular, all of the packages have changed, and so the `AWSCredentialsProvider` and `AwsClientBuilder.EndpointConfiguration` returned by `LocalStackContainer` are not usable as-is in the AWS SDK for Java v2. It *is* possible to adapt them with some work (and we can share our wrapper if you like, though it is written in Kotlin) however, it would be nice if clients using one version of the AWS SDK for Java did not need to depend on artifacts from the other version, even transitively.\r\n\r\nI imagine you'll want to retain support for the v1 SDK at least until AWS deprecates it.", "url": "https://github.com/testcontainers/testcontainers-java/issues/1442", "user": "xenomachina", "labels": ["help wanted", "type/breaking-api-change"], "created": "2019-04-30 17:54:26", "closed": "2020-04-23 12:43:49", "commits": {"12de2b407238835bdc06169a6ac4b7bdcc98e028": {"commitGHEventType": "closed", "commitUser": "rnorth"}}, "ttf": 358.0002777777778, "commitsDetails": [{"commitHash": "12de2b407238835bdc06169a6ac4b7bdcc98e028", "commitGHEventType": "closed", "commitUser": "rnorth", "commitParents": ["2c20417ac07b11e3255d7ce13dd5d83f3908df10"], "nameRev": "12de2b407238835bdc06169a6ac4b7bdcc98e028 tags/1.14.1~1", "commitMessage": "Allow using LocalStackContainer with AWS SDK v2 #1442 (#2579)\n\nCloses #1442", "commitDateTime": "2020-04-23 13:43:45", "authoredDateTime": "2020-04-23 14:43:45", "commitGitStats": [{"filePath": "docs/modules/localstack.md", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "modules/localstack/build.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/localstack/src/main/java/org/testcontainers/containers/localstack/LocalStackContainer.java", "insertions": 107, "deletions": 11, "lines": 118}, {"filePath": "modules/localstack/src/test/java/org/testcontainers/containers/localstack/LocalstackContainerTest.java", "insertions": 30, "deletions": 11, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalStackContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.localstack.LocalStackContainer.getEndpointConfiguration(org.testcontainers.containers.localstack.LocalStackContainer$Service)", "TOT": 9, "UPD": 5, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.localstack.LocalStackContainer.getDefaultCredentialsProvider()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.testcontainers.containers.localstack.LocalStackContainer.getAccessKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.localstack.LocalStackContainer.getSecretKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.localstack.LocalStackContainer.getRegion()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.localstack.LocalStackContainer.getEndpointOverride(org.testcontainers.containers.localstack.LocalStackContainer$Service)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocalstackContainerTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.localstack.LocalstackContainerTest.WithoutNetwork.s3TestOverBridgeNetwork()", "TOT": 25, "UPD": 5, "INS": 7, "MOV": 5, "DEL": 8}, {"spoonMethodName": "org.testcontainers.containers.localstack.LocalstackContainerTest.WithoutNetwork.s3TestUsingAwsSdkV2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Problematic use of generic types", "body": "Using TestContainers 1.1.6, the following code produces a compile time error:\n\n``` java\nprivate static final PostgreSQLContainer postgres =\n        new PostgreSQLContainer(\"postgres:9.5.4\")\n                .withDatabaseName(\"test\")\n                .withEnv(\"PGDATA\", CONTAINER_PGDATA)\n                .withFileSystemBind(HOST_PGDATA.toString(), CONTAINER_PGDATA, BindMode.READ_WRITE);\n```\n\nCompilation error:\n\n```\n/Users/my-user-name/my-project/my/path/to/IntegrationTest.java:71: error: incompatible types: GenericContainer cannot be converted to PostgreSQLContainer\n                    .withFileSystemBind(HOST_PGDATA.toString(), CONTAINER_PGDATA, BindMode.READ_WRITE)\n```\n\nThe problem stems from the fact that the `PostgreSQLContainer` class starts like this, with a recursive bound on its generic type parameter (_\u00e0 la_ `class Enum<E extends Enum<E>>`):\n\n``` java\npublic class PostgreSQLContainer<SELF extends PostgreSQLContainer<SELF>> \n        extends JdbcDatabaseContainer<SELF>\n```\n\nSo this is a generic class, but the documentation and [example test case](https://github.com/testcontainers/testcontainers-java/blob/master/modules/postgresql/src/test/java/org/testcontainers/junit/SimplePostgreSQLTest.java) use it with no type parameter, as a raw type:\n\n``` java\n@Rule\npublic PostgreSQLContainer postgres = new PostgreSQLContainer();\n```\n\nAnd in this situation Java can't figure out that in my use of the `withFileSytemBind()` method, the `SELF` return type unifies with `PostgreSQLContainer`.\n\nMy workaround for this issue illustrates the fix:\n\n``` java\n// A dummy class whose sole purpose is to instantiate the `SELF`\n// type parameter.\nprivate static final class MyPostgreSQLContainer extends PostgreSQLContainer<MyPostgreSQLContainer> {\n    public MyPostgreSQLContainer(String dockerImageName) {\n        super(dockerImageName);\n    }\n}\n\nprivate static final MyPostgreSQLContainer postgres =\n        new MyPostgreSQLContainer(\"postgres:9.5.4\")\n                .withDatabaseName(\"test\")\n                .withEnv(\"PGDATA\", CONTAINER_PGDATA)\n                .withFileSystemBind(HOST_PGDATA.toString(), CONTAINER_PGDATA, BindMode.READ_WRITE);\n```\n\nThis argues that the existing \"end user facing\" classes like `PostgreSQLContainer` in the library ought to be split into two classes:\n\n``` java\npublic abstract class AbstractPostgreSQLContainer<SELF extends AbstractPostgreSQLContainer<SELF>> \n        extends JdbcDatabaseContainer<SELF> {\n    ...\n}\n\npublic class PostgreSQLContainer extends AbstractPostgreSQLContainer<PostgreSQLContainer> {\n    ...\n}\n```\n\nPeople who want to extend `PostgreSQLContainer` should be discouraged from doing so as well, and pointed to `AbstractPostgreSQLContainer` as the proper class for extension.  (Making `PostgreSQLContainer` a final class is one alternative here, but with the downside that it's a backwards-incompatible change.)\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/238", "user": "ldcasillas-progreso", "labels": ["stale", "type/breaking-api-change"], "created": "2016-10-25 23:53:56", "closed": "2018-11-11 04:41:18", "commits": {}, "ttf": 746.0002777777778, "commitsDetails": []}, {"title": "Type-casting issues with fluent interface", "body": "The `Container#self()` method doesn't return the correct type for subclasses of implementations. For example, the following will not compile because `withEnv` returns a `GenericContainer` not a `DockerComposeContainer`:\n\n```\n@ClassRule\npublic static DockerComposeContainer environment =\n    new DockerComposeContainer(new File(\"src/test/resources/compose-test.yml\"))\n            .withEnv(\"SOMETHING\", \"hello world\");\n```\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/151", "user": "haines", "labels": ["type/breaking-api-change"], "created": "2016-06-01 14:00:16", "closed": "2017-01-14 21:04:28", "commits": {}, "ttf": 227.00027777777777, "commitsDetails": []}, {"title": "TestNG support", "body": "Sub-task of #87 \n", "url": "https://github.com/testcontainers/testcontainers-java/issues/132", "user": "bsideup", "labels": ["area/test frameworks", "resolution/somedaymaybe", "stale", "type/breaking-api-change"], "created": "2016-04-16 09:56:52", "closed": "2018-11-05 14:47:12", "commits": {}, "ttf": 933.0002777777778, "commitsDetails": []}, {"title": "ParsedDockerfile's parsing of FROM lines doesn't handle arguments", "body": "Given a Dockerfile with a line like:\r\n\r\n```\r\nFROM --platform=linux/amd64 openjdk:8u252-jre\r\n```\r\n\r\nyou will get warnings in the log that look like:\r\n\r\n```\r\n09:06:07.355 [tc-okhttp-stream-748761773] ERROR com.github.dockerjava.api.async.ResultCallbackTemplate - Error during callback\r\ncom.github.dockerjava.api.exception.BadRequestException: {\"message\":\"invalid reference format\"}\r\n\r\n\tat com.github.dockerjava.okhttp.OkHttpInvocationBuilder.execute(OkHttpInvocationBuilder.java:283)\r\n\tat com.github.dockerjava.okhttp.OkHttpInvocationBuilder.lambda$executeAndStream$4(OkHttpInvocationBuilder.java:317)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n09:06:07.355 [main] WARN org.testcontainers.images.builder.ImageFromDockerfile - Unable to pre-fetch an image (--platform=linux/amd64) depended upon by Dockerfile - image build will continue but may fail. Exception message was: {\"message\":\"invalid reference format\"}\r\n```\r\n\r\nbecause ParsedDockerfile's regex doesn't handle parameters.", "url": "https://github.com/testcontainers/testcontainers-java/issues/2772", "user": "rdicroce", "labels": ["resolution/acknowledged", "type/bug"], "created": "2020-05-20 19:07:58", "closed": "2020-05-28 22:13:46", "commits": {"ad106404571dbcc2b2332fd59630d0442aee5d36": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "ad106404571dbcc2b2332fd59630d0442aee5d36", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "ImageFromDockerfile still fails if Dockerfile requires private base image", "body": "Hey,\r\n\r\nJust gave 1.14.0 a spin to see if it fixes my issue with Dockerfiles requiring base images hosted in a private registry.\r\nUnfortunately this is still not working.\r\nWhat I saw from debugging a little:\r\nIt seems like the new logic is trying to pull too early, \r\n\r\n```java\r\n  protected final String resolve() {\r\n        Logger logger = DockerLoggerFactory.getLogger(dockerImageName);\r\n\r\n        DockerClient dockerClient = DockerClientFactory.instance().client();\r\n\r\n        dependencyImageNames.forEach(imageName -> {\r\n            try {\r\n                log.info(\"Pre-emptively checking local images for '{}', referenced via a Dockerfile. If not available, it will be pulled.\", imageName);\r\n                DockerClientFactory.instance().checkAndPullImage(dockerClient, imageName);\r\n            } catch (Exception e) {\r\n                log.warn(\"Unable to pre-fetch an image ({}) depended upon by Dockerfile - image build will continue but may fail. Exception message was: {}\", imageName, e.getMessage());\r\n            }\r\n        });\r\n\r\n           [... ommitted for brevity]\r\n\r\n            BuildImageCmd buildImageCmd = dockerClient.buildImageCmd(in);\r\n            configure(buildImageCmd);\r\n           [...]\r\n    }\r\n```\r\n\r\nnotice how `dependencyImageNames` is iterated before the call to `configure` while configure is the method that will actually populate `dependencyImageNames`.\r\n\r\nSo running my tests after `docker system prune -a` still results in failure .\r\n\r\nWhat I also noticed is that `org.testcontainers.containers.GenericContainer#logger` will trigger a build of the image in question.\r\nThis  prevents using `.withStartupAttempts(2)` as a workaround", "url": "https://github.com/testcontainers/testcontainers-java/issues/2575", "user": "JakobFels", "labels": ["type/bug"], "created": "2020-04-14 11:31:12", "closed": "2020-05-16 20:12:09", "commits": {}, "ttf": 32.000277777777775, "commitsDetails": []}, {"title": "Duplicate image tags in local docker causing cache in LocalImagesCache", "body": "Hello!\r\n\r\nI have 5 spring batch tests I am running on a Jenkins pipeline. I am getting the following error only on ONE of the tests:\r\n\r\n```\r\n12:51:53  17 Mar 2020;17:51:41.498 [user:] [request:] [main] INFO \r\n12:51:53                  o.testcontainers.DockerClientFactory - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit\r\n12:51:53          \u001b[37m\u001b[1m\u2139\ufe0e Checking the system...\u001b[0m\u001b[0m\r\n12:51:53          \u001b[32m\u2714 Docker version should be at least 1.6.0\u001b[0m\r\n12:51:53  17 Mar 2020;17:51:41.508 [user:] [request:] [main] DEBUG\r\n12:51:53                  c.g.d.core.command.AbstrDockerCmd - Cmd: f6fc0588843eb76a458bdc25cdc942fed474945aa3cfe7b635220dd1935dbfaa,<null>,true,<null>,<null>,<null>,<null>,{df,-P},<null>,<null>,com.github.dockerjava.core.exec.ExecCreateCmdExec@5cbe877d\r\n12:51:53  17 Mar 2020;17:51:41.644 [user:] [request:] [tc-okhttp-stream-2116511124] DEBUG\r\n12:51:53                  c.g.d.c.c.ExecStartResultCallback - STDOUT: Filesystem           1024-blocks    Used Available Capacity Mounted on\r\n12:51:53  overlay              314561516  62506464 252055052  20% /\r\n12:51:53  tmpfs                    65536         0     65536   0% /dev\r\n12:51:53  tmpfs                  8132940         0   8132940   0% /sys/fs/cgroup\r\n12:51:53  shm                      65536         0     65536   0% /dev/shm\r\n12:51:53  /dev/xvdg1           314561516  62506464 252055052  20% /etc/resolv.conf\r\n12:51:53  /dev/xvdg1           314561516  62506464 252055052  20% /etc/hostname\r\n12:51:53  /dev/xvdg1           314561516  62506464 252055052  20% /etc/hosts\r\n12:51:53  tmpfs                  8132940     25132   8107808   0% /run/docker.sock\r\n12:51:53  tmpfs                  8132940         0   8132940   0% /proc/acpi\r\n12:51:53  tmpfs                    65536         0     65536   0% /proc/kcore\r\n12:51:53  tmpfs                    65536         0     65536   0% /proc/keys\r\n12:51:53  tmpfs                    65536         0     65536   0% /proc/timer_list\r\n12:51:53  tmpfs                    65536         0     65536   0% /proc/timer_stats\r\n12:51:53  tmpfs                    65536         0     65536   0% /proc/sched_debug\r\n12:51:53  tmpfs                  8132940         0   8132940   0% /proc/scsi\r\n12:51:53  tmpfs                  8132940         0   8132940   0% /sys/firmware\r\n12:51:53          \u001b[32m\u2714 Docker environment should have more than 2GB free disk space\u001b[0m\r\n12:51:53  17 Mar 2020;17:51:41.690 [user:] [request:] [main] DEBUG\r\n12:51:53                  c.g.d.core.command.AbstrDockerCmd - Cmd: ListImagesCmdImpl[imageNameFilter=<null>,showAll=false,filters=com.github.dockerjava.core.util.FiltersBuilder@0,execution=com.github.dockerjava.core.exec.ListImagesCmdExec@3ecd267f]\r\n12:51:53  [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.915 s <<< FAILURE! - in com.oranj.snowflake.account.VendorAccountTransactionSnowflakeConfigurationTest\r\n12:51:53  [ERROR] com.oranj.snowflake.account.VendorAccountTransactionSnowflakeConfigurationTest  Time elapsed: 1.914 s  <<< ERROR!\r\n12:51:53  org.testcontainers.containers.ContainerLaunchException: Container startup failed\r\n12:51:53  Caused by: org.testcontainers.containers.ContainerFetchException: Can't get Docker image: RemoteDockerImage(imageNameFuture=java.util.concurrent.CompletableFuture@37ddb69a[Completed normally], imagePullPolicy=DefaultPullPolicy(), dockerClient=LazyDockerClient.INSTANCE)\r\n12:51:53  Caused by: java.lang.IllegalStateException: Duplicate key ImageData(createdAt=1970-01-18T18:51:50.819Z)\r\n12:51:53 \r\n```\r\n\r\nIt seems like when the JVM terminates it is not properly cleaning up after itself. Thus, when it starts up again it is trying to start the container but it sees a duplicate container there. \r\n\r\nEnvironment:\r\n* Server Version: 19.03.1\r\n* API Version: 1.40\r\n* Operating System: CentOS Linux 7 (Core)\r\n* Total Memory: 15884 MB", "url": "https://github.com/testcontainers/testcontainers-java/issues/2431", "user": "ashwin-jacob", "labels": ["type/bug"], "created": "2020-03-13 18:09:28", "closed": "2020-05-13 19:34:30", "commits": {"123f13aeec72b9c7998b8b5fa32aa1de57c3b31e": {"commitGHEventType": "closed", "commitUser": "bsideup"}}, "ttf": 61.000277777777775, "commitsDetails": [{"commitHash": "123f13aeec72b9c7998b8b5fa32aa1de57c3b31e", "commitGHEventType": "closed", "commitUser": "bsideup", "commitParents": ["e6930d6ac986db1373e29b61263f61aecbfc5155"], "nameRev": "123f13aeec72b9c7998b8b5fa32aa1de57c3b31e tags/1.14.2~30", "commitMessage": "Do not fail on duplicated local image tags. Fixes #2431 (#2692)\n\n* #2431 Correction for an edge case in local image repos (duplicates repo tags) crashing the image pulling\r\n\r\n* Indentation correction\r\n\r\n* Indentation correction", "commitDateTime": "2020-05-13 21:34:26", "authoredDateTime": "2020-05-13 21:34:26", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/images/LocalImagesCache.java", "insertions": 8, "deletions": 4, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LocalImagesCache.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.images.LocalImagesCache.populateFromList(java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "OracleContainer allow custom password", "body": "Currently the withPassword method on OracleContainer changes the field value but does not actually change the password on the container.\r\n\r\nhttps://github.com/testcontainers/testcontainers-java/blob/2e9adb94ec09c074c43984e14e710daf9d1d6c20/modules/oracle-xe/src/main/java/org/testcontainers/containers/OracleContainer.java#L87-L91\r\n\r\nGiven that we are supporting the Oracle XE container we should be able to update the password by providing an environment variable to the container in the form:\r\n```\r\nORACLE_PWD=\"SecretPassword\"\r\n```\r\n\r\nSee Oracle container documentation here: https://github.com/oracle/docker-images/tree/master/OracleDatabase/SingleInstance#running-oracle-database-18c-express-edition-in-a-docker-container", "url": "https://github.com/testcontainers/testcontainers-java/issues/2356", "user": "KyleAure", "labels": ["modules/jdbc", "resolution/acknowledged", "type/bug"], "created": "2020-02-14 18:26:22", "closed": "2020-02-25 20:57:22", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Wrong gateway is detected starting with Testcontainers 1.12.4", "body": "Hi,\r\n\r\nI have a jenkins CI with a master node and two slaves. All tests are running smoothly on slaves but they fail once run on master. Master and slaves differs in terms of ubuntu version and docker version.\r\nThe master is:\r\n```Server Version: 19.03.4\r\nAPI Version: 1.40\r\nOperating System: Ubuntu 18.04.3 LTS\r\n```\r\nWhile the slaves are:\r\n```\r\nServer Version: 19.03.0\r\nAPI Version: 1.40\r\nOperating System: Ubuntu 16.04.6 LTS\r\n```\r\n\r\nI use testcontainers 1.12.4\r\n\r\nExceptions I am getting on master node:\r\n```\r\n13:11:08  [info]   org.testcontainers.containers.ContainerLaunchException: Container startup failed\r\n13:11:08  [info]   at org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:322)\r\n13:11:08  [info]   at org.testcontainers.containers.GenericContainer.start(GenericContainer.java:302)\r\n13:11:08  [info]   at com.dimafeng.testcontainers.SingleContainer.start(Container.scala:42)\r\n13:11:08  [info]   ...\r\n13:11:08  [info]   Cause: org.testcontainers.containers.ContainerFetchException: Can't get Docker image: RemoteDockerImage(imageNameFuture=java.util.concurrent.CompletableFuture@687cf499[Completed normally], imagePullPolicy=DefaultPullPolicy(), dockerClient=LazyDockerClient.INSTANCE)\r\n13:11:08  [info]   at org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:1265)\r\n13:11:08  [info]   at org.testcontainers.containers.GenericContainer.logger(GenericContainer.java:600)\r\n13:11:08  [info]   at org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:311)\r\n13:11:08  [info]   at org.testcontainers.containers.GenericContainer.start(GenericContainer.java:302)\r\n13:11:08  [info]   at com.dimafeng.testcontainers.SingleContainer.start(Container.scala:42)\r\n13:11:08  [info]   ...\r\n13:11:08  [info]   Cause: java.lang.IllegalStateException: Can not connect to Ryuk\r\n13:11:08  [info]   at org.testcontainers.utility.ResourceReaper.start(ResourceReaper.java:150)\r\n13:11:08  [info]   at org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:135)\r\n13:11:08  [info]   at org.testcontainers.LazyDockerClient.getDockerClient(LazyDockerClient.java:14)\r\n13:11:08  [info]   at org.testcontainers.LazyDockerClient.listImagesCmd(LazyDockerClient.java:12)\r\n13:11:08  [info]   at org.testcontainers.images.LocalImagesCache.maybeInitCache(LocalImagesCache.java:68)\r\n13:11:08  [info]   at org.testcontainers.images.LocalImagesCache.get(LocalImagesCache.java:32)\r\n13:11:08  [info]   at org.testcontainers.images.AbstractImagePullPolicy.shouldPull(AbstractImagePullPolicy.java:18)\r\n13:11:08  [info]   at org.testcontainers.images.RemoteDockerImage.resolve(RemoteDockerImage.java:62)\r\n13:11:08  [info]   at org.testcontainers.images.RemoteDockerImage.resolve(RemoteDockerImage.java:25)\r\n13:11:08  [info]   at org.testcontainers.utility.LazyFuture.getResolvedValue(LazyFuture.java:20)\r\n```\r\n\r\nand\r\n```\r\n12:11:37.140 [testcontainers-ryuk] WARN  o.t.u.ResourceReaper - Can not connect to Ryuk at localhost:32965\r\n13:11:37  java.net.SocketException: Connection reset\r\n13:11:37  \tat java.net.SocketInputStream.read(SocketInputStream.java:210)\r\n13:11:37  \tat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n13:11:37  \tat sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)\r\n13:11:37  \tat sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)\r\n13:11:37  \tat sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)\r\n13:11:37  \tat java.io.InputStreamReader.read(InputStreamReader.java:184)\r\n13:11:37  \tat java.io.BufferedReader.fill(BufferedReader.java:161)\r\n13:11:37  \tat java.io.BufferedReader.readLine(BufferedReader.java:324)\r\n13:11:37  \tat java.io.BufferedReader.readLine(BufferedReader.java:389)\r\n13:11:37  \tat org.testcontainers.utility.ResourceReaper$FilterRegistry.waitForAcknowledgment(ResourceReaper.java:406)\r\n13:11:37  \tat org.testcontainers.utility.ResourceReaper$FilterRegistry.register(ResourceReaper.java:402)\r\n13:11:37  \tat org.testcontainers.utility.ResourceReaper.lambda$start$1(ResourceReaper.java:128)\r\n13:11:37  \tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nAlthough when I call docker logs on master node \r\n```\r\n+ docker ps\r\nCONTAINER ID        IMAGE                               COMMAND             CREATED             STATUS              PORTS                     NAMES\r\n7b115c90863a        quay.io/testcontainers/ryuk:0.2.3   \"/app\"              32 seconds ago      Up 31 seconds       0.0.0.0:32965->8080/tcp   testcontainers-ryuk-75c3e431-6dd5-4faf-9b54-df86d395ff4e\r\n++ docker ps -q\r\n+ docker logs 7b115c90863a\r\n2020/01/12 10:08:16 Starting on port 8080...\r\n```\r\nI can see that ryuk has started.\r\n\r\nI assume that this is not a fault of ubuntu neither of docker version (mainly because I use similar versions on my local machine and it all works), but rather some specific configuration of master node. Unfortunately I have no idea how to debug it further, so any help would be appreciated.\r\n\r\nCheers! ", "url": "https://github.com/testcontainers/testcontainers-java/issues/2239", "user": "ghostbuster91", "labels": ["resolution/acknowledged", "type/bug"], "created": "2020-01-12 10:17:25", "closed": "2020-03-25 10:44:10", "commits": {"0c4606d2e476cf18393d1f147ed63bd9b002c02b": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "d4f894f081838de96f0053312b08dc2f9a365a64": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 73.00027777777778, "commitsDetails": [{"commitHash": "0c4606d2e476cf18393d1f147ed63bd9b002c02b", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d4f894f081838de96f0053312b08dc2f9a365a64", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["4f8f8b143d6d462257500959be9fa0eb37f2fa12"], "nameRev": "d4f894f081838de96f0053312b08dc2f9a365a64 tags/1.14.0~45", "commitMessage": "Fallback to `getDefaultGateway()` if \"bridge\" is unavailable. (#2429)\n\nFixes #2239", "commitDateTime": "2020-03-25 11:44:09", "authoredDateTime": "2020-03-25 11:44:09", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.DockerClientProviderStrategy.resolveDockerHostIpAddress(com.github.dockerjava.api.DockerClient,java.net.URI)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DockerComposeContainer not starting up specific services", "body": "Hi,\r\n\r\n**Problem:** \r\nDockerComposeContainer starts up all the services in compose.yml even using `withServices` to select services I want to start up.\r\n\r\n\r\n**Investigation:** \r\nI found that (#1528) introduced the ability to start up specific services by adding services name after `docker-compose up -d [services_names]`\r\nbut it was removed accidentally in (#1847) when adding scale related settings.\r\n\r\nIn (#1847), it replaced `[services_names]` entirely by  `--scale [service=n]`,\r\nbut `docker-compose up --scale [service=n]` means start up **ALL** services in compose.yml with default 1 instance and the mentioned services with [n] instance.\r\n\r\n\r\n**Suggestion:**\r\nI think the correct way is adding the services name after the scale attribute.\r\n`docker-compose up [scale setting] [services_name]`\r\ni.e.\r\n`docker-compose up --scale service_b=2  service_a service_b`\r\n\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/2191", "user": "E4Edwards", "labels": ["area/docker-compose", "type/bug"], "created": "2019-12-17 11:23:12", "closed": "2020-06-24 07:32:01", "commits": {}, "ttf": 189.00027777777777, "commitsDetails": []}, {"title": "NullPointerException in DockerClientFactory.dockerHostIpAddress with localstack container on 1.12.4", "body": "We use static init and catching NPE on 1.12.4 release\r\n\r\n```\r\nCaused by: java.lang.NullPointerException\r\n\tat org.testcontainers.DockerClientFactory.dockerHostIpAddress(DockerClientFactory.java:240)\r\n\tat org.testcontainers.containers.ContainerState.getContainerIpAddress(ContainerState.java:29)\r\n\tat org.testcontainers.containers.localstack.LocalStackContainer.configure(LocalStackContainer.java:64)\r\n\tat org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:307)\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/2120", "user": "lanwen", "labels": ["type/bug"], "created": "2019-11-30 09:00:12", "closed": "2020-01-26 16:02:01", "commits": {}, "ttf": 57.000277777777775, "commitsDetails": []}, {"title": "Stop publishing sources after applying Delombok", "body": "As I understand, Testcontainers project uses Lombok library:\r\n* The sources are compiled using Lombok annotation-processor\r\n* Source files are passed through Delombok tool before publishing.\r\n\r\nIt breaks debugging, as the IDE can't match lines in bytecode with line in the source files.\r\n\r\nI see two solutions:\r\n1. First delombok the sources and only then run compilations\r\n1. Publish true sources without applying Delombok tool\r\nIMHO the second solution is more preferable, as Delombok tool sometimes produces sources that can't be compiles.", "url": "https://github.com/testcontainers/testcontainers-java/issues/1966", "user": "remal", "labels": ["resolution/acknowledged", "type/bug"], "created": "2019-10-11 12:23:55", "closed": "2019-11-27 20:09:14", "commits": {"6b158463141e70ce7b9cf05c0998401fd6660adb": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "6b158463141e70ce7b9cf05c0998401fd6660adb", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["23235833edfb1ae6c6c1147309aad4c067394728"], "nameRev": "6b158463141e70ce7b9cf05c0998401fd6660adb tags/1.12.4~16", "commitMessage": "Switch to publishing non-delomboked sources (#1788)\n\n* Fixes #762, #1966: Switch to publishing non-delomboked sources\r\nDelomboked sources are available under the 'sources-delomboked' classifier\r\n\r\n* Remove publication of delomboked sources JAR\r\n", "commitDateTime": "2019-11-27 20:08:23", "authoredDateTime": "2019-11-27 20:08:23", "commitGitStats": [{"filePath": "build.gradle", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "gradle/publishing.gradle", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Copy should create folder structure", "body": "After #1814, a user reported a regression (https://github.com/spring-projects/spring-session/issues/1527).\r\n\r\nBefore, `withClasspathResourceMapping` was using the mount API, and it creates the folders automatically.\r\nWith copy-style API, one has to make sure that the folders are present before copying into them.", "url": "https://github.com/testcontainers/testcontainers-java/issues/1954", "user": "bsideup", "labels": ["type/bug"], "created": "2019-10-06 14:51:56", "closed": "2019-10-08 19:57:37", "commits": {"93c4c47e04fd3dc138e7441c787fd29d2862fbf2": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "b08308f46f5d0403d779f785cef5a84e1569658b": {"commitGHEventType": "closed", "commitUser": "rnorth"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "93c4c47e04fd3dc138e7441c787fd29d2862fbf2", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b08308f46f5d0403d779f785cef5a84e1569658b", "commitGHEventType": "closed", "commitUser": "rnorth", "commitParents": ["a46f3021135cb5a69bcd3948141d10bfe4b56f5d"], "nameRev": "b08308f46f5d0403d779f785cef5a84e1569658b tags/1.12.3~23", "commitMessage": "Always copy to \"/\" (root). Fixes #1954 (#1956)\n\n", "commitDateTime": "2019-10-08 20:57:34", "authoredDateTime": "2019-10-08 14:57:34", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "core/src/test/java/org/testcontainers/junit/CopyFileToContainerTest.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.copyFileToContainer(org.testcontainers.images.builder.Transferable,java.lang.String)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "CopyFileToContainerTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.CopyFileToContainerTest.shouldCreateFoldersStructureWithCopy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Dockerhub credentials logged on startup", "body": "Oops?\r\n\r\n```\r\n2019-09-25 15:13:19.443 [main] INFO  o.t.d.DockerClientProviderStrategy - Found Docker environment with Environment variables, system properties and defaults. Resolved: \r\n    dockerHost=unix:///var/run/docker.sock\r\n    apiVersion='{UNKNOWN_VERSION}'\r\n    registryUrl='https://index.docker.io/v1/'\r\n    registryUsername='...'\r\n    registryPassword='...'\r\n    registryEmail='...'\r\n    dockerConfig='DefaultDockerClientConfig[dockerHost=unix:///var/run/docker.sock,registryUsername=...,registryPassword=<...>,registryEmail=<...>,registryUrl=https://index.docker.io/v1/,dockerConfigPath=/home/dsyer/.docker,sslConfig=<null>,apiVersion={UNKNOWN_VERSION},dockerConfig=<null>]'\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/1912", "user": "dsyer", "labels": ["resolution/acknowledged", "security", "type/bug"], "created": "2019-09-25 14:16:03", "closed": "2019-09-26 07:06:32", "commits": {"29cae0db860d7c4fe66ed9d463720b9340cf37b8": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "94f73f8e327a2704419699f6e6e08ecd7b6a256a": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "d3ba8428d7494a522b49792bc04d528fb70fea4f": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "29cae0db860d7c4fe66ed9d463720b9340cf37b8", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "94f73f8e327a2704419699f6e6e08ecd7b6a256a", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d3ba8428d7494a522b49792bc04d528fb70fea4f", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["ec0ab6f1e0c2a826ee21bb06a88508081484892d"], "nameRev": "d3ba8428d7494a522b49792bc04d528fb70fea4f tags/1.12.2", "commitMessage": "Reduce logs in EnvironmentAndSystemPropertyClientProviderStrate\u2026 (#1913)\n\nFixes #1912", "commitDateTime": "2019-09-26 08:06:31", "authoredDateTime": "2019-09-26 08:06:31", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/dockerclient/EnvironmentAndSystemPropertyClientProviderStrategy.java", "insertions": 2, "deletions": 17, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnvironmentAndSystemPropertyClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy.getDescription()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy.stringRepresentation(com.github.dockerjava.core.DockerClientConfig)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "ConnectionWrapper#rollback(Savepoint) delegates to wrong method", "body": "`ConnectionWrapper#rollback(Savepoint)` delegates to `Connection#rollback()` instead of `Connection#rollback(Savepoint)`: https://github.com/testcontainers/testcontainers-java/blob/b6a5248365acb240cd6f6c7d3c1ae38c6c5b3ed7/modules/jdbc/src/main/java/org/testcontainers/jdbc/ConnectionWrapper.java#L165-L168", "url": "https://github.com/testcontainers/testcontainers-java/issues/1909", "user": "knutwannheden", "labels": ["good first issue", "hacktoberfest", "modules/jdbc", "resolution/awaiting-release", "type/bug"], "created": "2019-09-24 05:56:45", "closed": "2019-10-03 06:16:07", "commits": {"ca8a35dc5ccf31142919c5fb5635c664d4f89302": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "ca8a35dc5ccf31142919c5fb5635c664d4f89302", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["232e9b03f199299f8e01cc60e8fa3e5ca0c549ed"], "nameRev": "ca8a35dc5ccf31142919c5fb5635c664d4f89302 tags/1.12.3~39", "commitMessage": "ConnectionWrapper#rollback(Savepoint) delegates to wrong method #1909 (#1937)\n\n* ConnectionWrapper#rollback(Savepoint) delegates to wrong method #1909\r\n\r\n* fix whitespaces and use @AllArgsConstructor\r\n\r\n* Update ConnectionDelegate.java\r\n", "commitDateTime": "2019-10-03 08:16:06", "authoredDateTime": "2019-10-03 08:16:06", "commitGitStats": [{"filePath": "modules/jdbc/src/main/java/org/testcontainers/jdbc/ConnectionDelegate.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "modules/jdbc/src/main/java/org/testcontainers/jdbc/ConnectionWrapper.java", "insertions": 10, "deletions": 280, "lines": 290}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Cannot start BrowserWebDriverContainer with flags", "body": "Seems like flags in `ChromeOptions` are ignored by the container.\r\n\r\nFor example, the GeoLocation API needs a secure origin; to test it, Chrome has the `unsafely-treat-insecure-origin-as-secure` flag to be set.\r\n\r\nUnfortunately, this:\r\n\r\n```java\r\nChromeOptions options = new ChromeOptions()\r\n    .addArguments(\"--unsafely-treat-insecure-origin-as-secure=http://host.docker.internal:8080\");\r\nBrowserWebDriverContainer browser = new BrowserWebDriverContainer()\r\n    .withCapabilities(options)\r\n    .start();\r\nWebDriver driver = browser.getWebDriver();\r\ndriver.get(\"http://host.docker.internal:8080\");\r\n```\r\n\r\nraises a client error: \"Only secure origins are allowed\".\r\n\r\nUsing `ChromeDriver` instead, works well:\r\n\r\n```java\r\nChromeOptions options = new ChromeOptions()\r\n    .addArguments(\"--unsafely-treat-insecure-origin-as-secure=http://host.docker.internal:8080\");\r\nChromeDriver driver = new ChromeDriver(options);\r\ndriver.get(\"http://host.docker.internal:8080\");\r\n```\r\n\r\nIs it possible that the container somehow starts the driver without the specified flags?", "url": "https://github.com/testcontainers/testcontainers-java/issues/1853", "user": "heruan", "labels": ["modules/selenium", "type/bug"], "created": "2019-09-10 08:53:50", "closed": "2019-09-11 09:13:03", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "@Testcontainers is not found in parentclass", "body": "i am currently trying to upgrade from testcontainers version 1.11.4 to 1.12.1\r\nit looks there might be an regression between that versions.\r\n\r\nour current code (using v 1.11.4 looks like that). It uses an abstract base class that contains the @Testcontainers annotation. \r\n```\r\n@Testcontainers\r\nabstract class MongoTests {\r\n  ...\r\n}\r\n\r\nclass MongoRepositoryIT(\r\n...\r\n) : MongoTests() {\r\n  ...\r\n}\r\n```\r\n\r\nthis setup causes an runtime exception when upgrading to v 1.12.1:\r\n\r\n```\r\nCaused by: org.junit.platform.commons.PreconditionViolationException: Illegal state: required test class is not present in the current ExtensionContext\r\n\tat org.junit.platform.commons.util.Preconditions.condition(Preconditions.java:281)\r\n\tat org.junit.platform.commons.util.Preconditions.notNull(Preconditions.java:54)\r\n\tat org.junit.jupiter.api.extension.ExtensionContext.getRequiredTestClass(ExtensionContext.java:141)\r\n\tat org.testcontainers.junit.jupiter.TestcontainersExtension.findTestcontainers(TestcontainersExtension.java:62)\r\n\tat org.testcontainers.junit.jupiter.TestcontainersExtension.evaluateExecutionCondition(TestcontainersExtension.java:55)\r\n\tat org.junit.jupiter.engine.execution.ConditionEvaluator.evaluate(ConditionEvaluator.java:64)\r\n\t... 41 more\r\n```\r\n\r\ni can work around that by putting the @Testcontainers annotation directly into the concrete test class:\r\n```\r\n@Testcontainers\r\nclass MongoRepositoryIT(...) \r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/1843", "user": "ghost", "labels": ["good first issue", "help wanted", "modules/jupiter", "resolution/acknowledged", "type/bug"], "created": "2019-09-09 08:20:57", "closed": "2019-10-26 08:36:01", "commits": {"92f0a4f7ffb9d46023ec77e6588e74831ee8e29f": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "92f0a4f7ffb9d46023ec77e6588e74831ee8e29f", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["43a76abb5d27f322a6a7a30ffc148beb31cd5736"], "nameRev": "92f0a4f7ffb9d46023ec77e6588e74831ee8e29f tags/1.12.3", "commitMessage": "Allow @Testcontainers to be inherited from superclass (#1843) (#2001)\n\n* Updated existing test with now expected behaviour\r\n* @Testcontainers is now @Inherited", "commitDateTime": "2019-10-26 11:35:38", "authoredDateTime": "2019-10-26 10:35:38", "commitGitStats": [{"filePath": "modules/junit-jupiter/src/main/java/org/testcontainers/junit/jupiter/Testcontainers.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "modules/junit-jupiter/src/test/java/org/testcontainers/junit/jupiter/inheritance/AbstractTestBase.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "modules/junit-jupiter/src/test/java/org/testcontainers/junit/jupiter/inheritance/InheritedTests.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Testcontainers.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.jupiter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractTestBase.java", "spoonMethods": []}, {"spoonFilePath": "InheritedTests.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.jupiter.inheritance.InheritedTests", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "getFirstMappedPort() might not consider default ports of special container implementations", "body": "If I create a test container just using the default port for that container: \r\n\r\n```java\r\nMSSQLServerContainer<?> sqlservercontainer = new MSSQLServerContainer<>().withLogConsumer(DatabaseContainerFactory::log);\r\n```\r\n\r\nThen `sqlservercontainer.getFirstMappedPort();` will return the port that is mapped to `1433`\r\n\r\nIf I create a test container and then later expose additional ports:\r\n\r\n```java\r\nMSSQLServerContainer<?> sqlservercontainer = new MSSQLServerContainer<>()\r\n\t.withEnv(\"MSSQL_RPC_PORT\", \"135\")\r\n\t.withEnv(\"MSSQL_DTC_TCP_PORT\",\"51000\")\r\n\t.withEnv(\"MSSQL_AGENT_ENABLED\", \"true\")\r\n\t.withLogConsumer(DatabaseContainerFactory::log);\r\n\t\t\t\r\nsqlservercontainer.addExposedPort(135);\r\nsqlservercontainer.addExposedPort(51000);\r\n\r\nLog.info(c, \"setupDataSourceProperties\", \"Port 1433 mapped to: \" + sqlservercontainer.getMappedPort(1433));\r\nLog.info(c, \"setupDataSourceProperties\", \"First mapped port: \" + sqlservercontainer.getFirstMappedPort());\r\n```\r\nI would expect that `sqlservercontainer.getFirstMappedPort();` and `sqlservercontainer.getMappedPort(1433);` would return the same value.  But the result is:\r\n\r\n```\r\nsetupDataSourceProperties      I Port 1433 mapped to: 33867\r\nsetupDataSourceProperties      I First mapped port: 33868\r\n``` \r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/1807", "user": "KyleAure", "labels": ["modules/jdbc", "resolution/invalid", "type/bug"], "created": "2019-08-28 18:46:13", "closed": "2019-09-09 13:45:03", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "ScriptUtils parsing failed when using field name with 'end' keyword", "body": "I'm using `runInitScript` and it seems to falsely parse the sql:\r\n\r\n```sql\r\ncreate database if not exists ttt;\r\n\r\nuse ttt;\r\n\r\ncreate table aaa\r\n(\r\n    id                  bigint auto_increment   primary key,\r\n    end_time            datetime     null       COMMENT 'end_time',\r\n    data_status         varchar(16)  not null\r\n) comment 'aaa';\r\n\r\ncreate table bbb\r\n(\r\n    id                  bigint auto_increment   primary key\r\n) comment 'bbb';\r\n```\r\n\r\nI've stepped into the code and found that `splitSqlScript` in `ScriptUtils` thinks there are 3 statements: `create database`, `use` and combined 2 `create table`. The last statement, of course, throws sql syntax error.\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/1547", "user": "skyline75489", "labels": ["modules/jdbc", "resolution/acknowledged", "type/bug"], "created": "2019-06-13 01:49:49", "closed": "2019-07-23 10:53:36", "commits": {"a3fff01520706e77dcdf77b97267b09b8570e30d": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "fcfff1a675d3e211b969584e842ba07f603b12ea": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 40.000277777777775, "commitsDetails": [{"commitHash": "a3fff01520706e77dcdf77b97267b09b8570e30d", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fcfff1a675d3e211b969584e842ba07f603b12ea", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["64dcf7aa632b388cc5d20da2286b3eea99b003a1"], "nameRev": "fcfff1a675d3e211b969584e842ba07f603b12ea tags/1.12.0~7", "commitMessage": "Improve splitting of SQL scripts into statements (#1627)\n\nFixes #1547", "commitDateTime": "2019-07-23 11:53:35", "authoredDateTime": "2019-07-23 11:53:35", "commitGitStats": [{"filePath": "modules/database-commons/build.gradle", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "modules/database-commons/src/main/java/org/testcontainers/ext/ScriptUtils.java", "insertions": 41, "deletions": 10, "lines": 51}, {"filePath": "modules/database-commons/src/test/java/org/testcontainers/ext/ScriptSplittingTest.java", "insertions": 294, "deletions": 0, "lines": 294}, {"filePath": "modules/database-commons/src/test/java/org/testcontainers/ext/ScriptUtilsTest.java", "insertions": 0, "deletions": 48, "lines": 48}, {"filePath": "modules/database-commons/src/test/resources/splittable.sql", "insertions": 0, "deletions": 45, "lines": 45}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "docker-compose logging at WARN", "body": "if there a reason why these log entries are configured at ERROR ? This looks more like a DEBUG level to me\u2026\r\n\r\n\r\n2569 [Thread-7] ERROR \ud83d\udc33 [docker-compose] - Pulling zookeeper       ...  \r\n2569 [Thread-7] ERROR \ud83d\udc33 [docker-compose] - Pulling broker          ...  \r\n2569 [Thread-7] ERROR \ud83d\udc33 [docker-compose] - Pulling schema-registry ...  \r\n3392 [Thread-7] ERROR \ud83d\udc33 [docker-compose] -  \r\n3393 [Thread-7] ERROR \ud83d\udc33 [docker-compose] - Pulling zookeeper       ... pulling from confluentinc/cp-zook... \r\n3393 [Thread-7] ERROR \ud83d\udc33 [docker-compose] -  \r\n3393 [Thread-7] ERROR \ud83d\udc33 [docker-compose] - Pulling zookeeper       ... digest: sha256:a0577899f62e17d195... \r\n3393 [Thread-7] ERROR \ud83d\udc33 [docker-compose] -  \r\n3393 [Thread-7] ERROR \ud83d\udc33 [docker-compose] - Pulling zookeeper       ... status: image is up to date for c... \r\n3393 [Thread-7] ERROR \ud83d\udc33 [docker-compose] -  \r\n3393 [Thread-7] ERROR \ud83d\udc33 [docker-compose] - Pulling zookeeper       ... done \r\n3942 [Thread-7] ERROR \ud83d\udc33 [docker-compose] -  \r\n\r\n### thread on slack:\r\n![image](https://user-images.githubusercontent.com/221462/57855300-537e8880-77b8-11e9-847e-3ef59b6e1a33.png)\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/1472", "user": "ftardif", "labels": ["area/docker-compose", "good first issue", "hacktoberfest", "resolution/acknowledged", "resolution/pr-submitted", "type/bug"], "created": "2019-05-16 12:55:21", "closed": "2019-05-21 15:53:45", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Incorrect Auth encoding", "body": "I think there is potential bug when parsing/decoding a custom auth config (e.g. for gcr).\r\nWe have create a `config.json` which looks like this:\r\n\r\n```json\r\n{\r\n  \"auths\": {\r\n    \"eu.gcr.io\": {\r\n      \"auth\": \"BASE64-ENCODED-JSON\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe decoded `auth` contains a [json key file](https://cloud.google.com/container-registry/docs/advanced-authentication?hl=en#json_key_file):\r\n\r\n```json\r\n_json_key:{\r\n  \"type\": \"service_account\",\r\n  \"project_id\": \"XXX\",\r\n  \"private_key_id\": \"XXX\",\r\n  \"private_key\": \"XXX\",\r\n  \"client_email\": \"XXX\",\r\n  \"client_id\": \"XXX\",\r\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\r\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\r\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/...\",\r\n  \"client_x509_cert_url\": \"https://www.googleapis.com/...\"\r\n}\u23ce \r\n```\r\n\r\nIn [RegistryAuthLocator#findExistingAuthConfig](https://github.com/testcontainers/testcontainers-java/blob/master/core/src/main/java/org/testcontainers/utility/RegistryAuthLocator.java#L157) the decoded string is splitted and checked if there are two parts (username & password). This fails for the above json, such that you are not able to pull from a private gcr registry. \r\n\r\n[Docker java](https://github.com/docker-java/docker-java/blob/master/src/main/java/com/github/dockerjava/core/DockerConfigFile.java#L208) has similar logic, but limits the amount of splits to two, which results in having `_json_key` as username and the complete json key file definition as password. I have implemented the same splitting in testcontainers and tested it in our environment (using gitlab ci with dind) and pulling from our private gcr registry works just fine. \r\nIf you are okay with that change I can provide a PR for that. \r\n ", "url": "https://github.com/testcontainers/testcontainers-java/issues/1466", "user": "atomfrede", "labels": ["resolution/acknowledged", "type/bug"], "created": "2019-05-14 11:56:10", "closed": "2019-05-27 21:30:09", "commits": {"b0b3f9a1205037906838f6643594f27a79c8a734": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "b0b3f9a1205037906838f6643594f27a79c8a734", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["9fd199d39183798c046ae0f8de2d8340cc5f8584"], "nameRev": "b0b3f9a1205037906838f6643594f27a79c8a734 tags/1.11.4~52", "commitMessage": "Fix docker registry auth parsing of GCR json key format credentials (#1492)\n\ncloses #1466", "commitDateTime": "2019-05-27 22:30:08", "authoredDateTime": "2019-05-27 23:30:08", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/utility/RegistryAuthLocator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/org/testcontainers/utility/RegistryAuthLocatorTest.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "core/src/test/resources/auth-config/config-with-json-key.json", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegistryAuthLocator.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.RegistryAuthLocator.findExistingAuthConfig(com.fasterxml.jackson.databind.JsonNode,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegistryAuthLocatorTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.RegistryAuthLocatorTest.lookupAuthConfigWithJsonKeyCredentials()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Init script parsing issue of line endings on windows", "body": "Hi guyz,\r\n\r\nI'm working on a windows machine and the files of the project have windows line endings. We have a script which should initialize our oracle database - so we added the \"withInitScript\" option on container start.\r\n\r\nAs soon as the initialization starts we get the following error:\r\njava.sql.SQLException: Invalid SQL type: sqlKind = UNINITIALIZED\r\n\r\nSo I tried just a little test statement:\r\n`CREATE TABLE Persons (\r\n    PersonID int,\r\n    LastName varchar(255),\r\n    FirstName varchar(255),\r\n    Address varchar(255),\r\n    City varchar(255) \r\n);`\r\n\r\nStill the same error. So I debugged into the code and found the Problem:\r\nThe last statement which should be executed was:\r\n`\\r` \r\nand so the init script failed.\r\n\r\nAfter switching from CRLF to LF everything works, but I would say also Windows line endings should be handled properly?\r\n\r\nIt should be just a small change in ScriptUtils.java Line 186 ?", "url": "https://github.com/testcontainers/testcontainers-java/issues/1465", "user": "Mawster", "labels": ["modules/jdbc", "os/windows", "type/bug"], "created": "2019-05-14 11:11:20", "closed": "2019-05-21 20:32:39", "commits": {"e4ce8f578d09a29c3dbddc9be47a92ee6f06d9cd": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "e4ce8f578d09a29c3dbddc9be47a92ee6f06d9cd", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["03f8caa3a9dabc6dedd7caa4541a235b1f73a0a3"], "nameRev": "e4ce8f578d09a29c3dbddc9be47a92ee6f06d9cd tags/1.11.3~3", "commitMessage": "Fix ScriptUtils splitting with Windows EOF (#1467, #1465)\n\n", "commitDateTime": "2019-05-18 22:07:47", "authoredDateTime": "2019-05-18 23:07:47", "commitGitStats": [{"filePath": "modules/database-commons/src/main/java/org/testcontainers/ext/ScriptUtils.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/database-commons/src/test/java/org/testcontainers/ext/ScriptUtilsTest.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptUtils.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.ext.ScriptUtils.splitSqlScript(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ScriptUtilsTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.ext.ScriptUtilsTest.testSplitWithWidnwosLineEnding()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Whitespaces are truncated from text values in init script in presence of C style comments", "body": "Hi, I noticed, that test-containers removes whitespace characters from VARCHAR values in init script when C style comments are present.\r\n\r\nPlease check sample project demonstrating a problem: https://github.com/ParafeniukMikalaj/testcontainers-jdbc-test", "url": "https://github.com/testcontainers/testcontainers-java/issues/1452", "user": "ParafeniukMikalaj", "labels": ["modules/jdbc", "resolution/pr-submitted", "type/bug"], "created": "2019-05-06 09:05:02", "closed": "2019-09-07 18:36:50", "commits": {"a2267a3540a26d2e5387a702d10bb63578f17dff": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "b1cb06d7524ce44c56c7050f06e4aafb222c17fd": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 124.00027777777778, "commitsDetails": [{"commitHash": "a2267a3540a26d2e5387a702d10bb63578f17dff", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b1cb06d7524ce44c56c7050f06e4aafb222c17fd", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["4fbef4b66b2af7658792402db4523c4eba398fd9"], "nameRev": "b1cb06d7524ce44c56c7050f06e4aafb222c17fd tags/1.12.1~1", "commitMessage": "Add test to demonstrate fix for #1452 (loss of whitespace in sp\u2026 (#1702)\n\n(probably fixed by #1627)", "commitDateTime": "2019-09-07 19:36:50", "authoredDateTime": "2019-09-07 19:36:50", "commitGitStats": [{"filePath": "modules/database-commons/src/test/java/org/testcontainers/ext/ScriptSplittingTest.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScriptSplittingTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.ext.ScriptSplittingTest.testIssue1452Case()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "OracleContainer extends JdbcDatabaseContainer without generic type", "body": "It means I need explicit cast when using methods from super type, eg:\r\n```java\r\n@ClassRule\r\npublic static OracleContainer db = (OracleContainer) new OracleContainer(\"foo\")\r\n        .withLogConsumer(new Slf4jLogConsumer(LoggerFactory.getLogger(\"db container logger\")));\r\n```\r\nFollowing screams compilation errors, because `#withLogConsumer` returns `GenericContainer`:\r\n```java\r\n@ClassRule\r\npublic static OracleContainer db = new OracleContainer(\"foo\")\r\n        .withLogConsumer(new Slf4jLogConsumer(LoggerFactory.getLogger(\"db container logger\")));\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/1423", "user": "el-dot", "labels": ["modules/jdbc", "type/bug"], "created": "2019-04-25 13:19:34", "closed": "2019-04-27 20:09:58", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "ResourceReaper.stopContainer sometimes fails to kill what is dead", "body": "One of my testcontainers integration tests (ran by JUnit 5 in Maven) failed because `ResourceReaper.stopContainer` threw an exception, which I don't expect. If I interpret the failure right, the essence of the complaint is it \"Cannot kill container\" because it \"is not running\". But killing should be idempotent: killing something that is already dead (not running) should be considered a success, and not throw an exception. So I guess this is either a problem in the use of `com.github.dockerjava.api` by `ResourceReaper.stopContainer`, or a problem in `com.github.dockerjava.api` itself.\r\n\r\nI should point out that this particular integration test is unusual in that I *expect* the container to exit quickly; it is a test of error handling and shutdown in the case of a fatal configuration error.\r\n\r\nSomewhat related to [allowing graceful stopping of containers (issue 1000)](https://github.com/testcontainers/testcontainers-java/issues/1000), I think.\r\n\r\nHere is the log and stacktrace:\r\n```\r\n[INFO] Running com.XXXX.WrongUsageIT\r\n...\r\n14:20:35.235 [main] INFO  \ud83d\udc33 [testcontainers/8y6zrds9fbg4sb4z] - Starting container with ID: c69c45b039ed0a4d13105834b6aaa6d264cf295589ea291f89a2d33b10efbf17\r\n14:20:35.818 [main] INFO  \ud83d\udc33 [testcontainers/8y6zrds9fbg4sb4z] - Container testcontainers/8y6zrds9fbg4sb4z is starting: c69c45b039ed0a4d13105834b6aaa6d264cf295589ea291f89a2d33b10efbf17\r\n14:20:35.824 [main] INFO  \ud83d\udc33 [testcontainers/8y6zrds9fbg4sb4z] - Container testcontainers/8y6zrds9fbg4sb4z started\r\nApr 10, 2019 2:20:36 PM org.junit.jupiter.engine.execution.JupiterEngineExecutionContext close\r\nSEVERE: Caught exception while closing extension context: org.junit.jupiter.engine.descriptor.MethodExtensionContext@1bb1fde8\r\njava.lang.reflect.UndeclaredThrowableException\r\n\tat com.sun.proxy.$Proxy26.exec(Unknown Source)\r\n\tat org.testcontainers.utility.ResourceReaper.stopContainer(ResourceReaper.java:232)\r\n\tat org.testcontainers.utility.ResourceReaper.stopAndRemoveContainer(ResourceReaper.java:211)\r\n\tat org.testcontainers.containers.GenericContainer.stop(GenericContainer.java:322)\r\n\tat org.testcontainers.junit.jupiter.TestcontainersExtension$StoreAdapter.close(TestcontainersExtension.java:140)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.execution.ExtensionValuesStore.closeAllStoredCloseableValues(ExtensionValuesStore.java:61)\r\n\tat org.junit.jupiter.engine.descriptor.AbstractExtensionContext.close(AbstractExtensionContext.java:73)\r\n\tat org.junit.jupiter.engine.execution.JupiterEngineExecutionContext.close(JupiterEngineExecutionContext.java:53)\r\n\tat org.junit.jupiter.engine.descriptor.JupiterTestDescriptor.cleanUp(JupiterTestDescriptor.java:191)\r\n\tat org.junit.jupiter.engine.descriptor.JupiterTestDescriptor.cleanUp(JupiterTestDescriptor.java:54)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$cleanUp$9(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.cleanUp(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:83)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testcontainers.dockerclient.AuditLoggingDockerClient.lambda$wrappedCommand$14(AuditLoggingDockerClient.java:98)\r\n\t... 49 more\r\nCaused by: com.github.dockerjava.api.exception.ConflictException: {\"message\":\"Cannot kill container: c69c45b039ed0a4d13105834b6aaa6d264cf295589ea291f89a2d33b10efbf17: Container c69c45b039ed0a4d13105834b6aaa6d264cf295589ea291f89a2d33b10efbf17 is not running\"}\r\n\r\n\tat org.testcontainers.dockerclient.transport.okhttp.OkHttpInvocationBuilder.execute(OkHttpInvocationBuilder.java:274)\r\n\tat org.testcontainers.dockerclient.transport.okhttp.OkHttpInvocationBuilder.execute(OkHttpInvocationBuilder.java:254)\r\n\tat org.testcontainers.dockerclient.transport.okhttp.OkHttpInvocationBuilder.post(OkHttpInvocationBuilder.java:115)\r\n\tat com.github.dockerjava.core.exec.KillContainerCmdExec.execute(KillContainerCmdExec.java:30)\r\n\tat com.github.dockerjava.core.exec.KillContainerCmdExec.execute(KillContainerCmdExec.java:11)\r\n\tat com.github.dockerjava.core.exec.AbstrSyncDockerCmdExec.exec(AbstrSyncDockerCmdExec.java:21)\r\n\tat com.github.dockerjava.core.command.AbstrDockerCmd.exec(AbstrDockerCmd.java:35)\r\n\tat com.github.dockerjava.core.command.KillContainerCmdImpl.exec(KillContainerCmdImpl.java:50)\r\n\t... 54 more\r\n\r\n[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.742 s <<< FAILURE! - in com.XXXX.WrongUsageIT\r\n[ERROR] starts  Time elapsed: 1.4 s  <<< ERROR!\r\njava.lang.reflect.UndeclaredThrowableException\r\nCaused by: java.lang.reflect.InvocationTargetException\r\nCaused by: com.github.dockerjava.api.exception.ConflictException: \r\n{\"message\":\"Cannot kill container: c69c45b039ed0a4d13105834b6aaa6d264cf295589ea291f89a2d33b10efbf17: Container c69c45b039ed0a4d13105834b6aaa6d264cf295589ea291f89a2d33b10efbf17 is not running\"}\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/1379", "user": "KantarBenedictAdamson", "labels": ["good first issue", "type/bug"], "created": "2019-04-10 14:04:17", "closed": "2019-07-16 10:13:53", "commits": {"371b32566ddb76e8779c802ae1ffa9afafdf5b59": {"commitGHEventType": "closed", "commitUser": "bsideup"}, "04932a3d3e60efc1737893103c6c6da8c1046632": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "4d1ba9e7095483c0636138aff7831935a8b8e5d9": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 96.00027777777778, "commitsDetails": [{"commitHash": "371b32566ddb76e8779c802ae1ffa9afafdf5b59", "commitGHEventType": "closed", "commitUser": "bsideup", "commitParents": ["3dc9d9dc3a1d03b87707d6bff6a95e0fbf0a4510"], "nameRev": "371b32566ddb76e8779c802ae1ffa9afafdf5b59 tags/1.12.0~30", "commitMessage": "catch exception when try to kill dead container (#1420)\n\nFixes #1379", "commitDateTime": "2019-07-16 12:13:44", "authoredDateTime": "2019-07-16 17:13:44", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/utility/ResourceReaper.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResourceReaper.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.ResourceReaper.stopContainer(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "04932a3d3e60efc1737893103c6c6da8c1046632", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4d1ba9e7095483c0636138aff7831935a8b8e5d9", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["28b2032afa97c9e8e2787d3d771a4342574c97a0"], "nameRev": "4d1ba9e7095483c0636138aff7831935a8b8e5d9 tags/1.12.1~65", "commitMessage": "Amend container shutdown to catch and log for all Exception cla\u2026 (#1663)\n\n* Amend container shutdown to catch and log for all Exception classes\r\nReplacement for #1420 to fix incomplete error handling\r\nRefs #1379\r\n\r\n* Log root cause exception message rather than immediate exception's message\r\n", "commitDateTime": "2019-08-10 20:33:33", "authoredDateTime": "2019-08-10 20:33:33", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/utility/ResourceReaper.java", "insertions": 17, "deletions": 23, "lines": 40}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResourceReaper.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.ResourceReaper.stopContainer(java.lang.String,java.lang.String)", "TOT": 19, "UPD": 7, "INS": 4, "MOV": 6, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Same dependencies and java code, but use Gradle will start fail with: Unrecognized field \"ID\" (class com.github.dockerjava.api.model.Info), Maven is fine", "body": "### Expected Behavior\r\nI use gradle to manage dependencies, recently I learned use com.playtika.testcontainers:embedded-redis to run redis test tasks, it can connect to docker container and redis instance. The original article was maven project, so I convert it to Gradle syntax and run it.\r\n\r\nI create a Java in src/test/java/StartApplication.java, It should be run just fine and connect to docker and start the container, and not exception occurred.\r\n\r\nCorrect logs:\r\n\r\n~~~~\r\n2019-04-06 22:51:02.079  INFO 20072 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fbb30aa3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\r\n2019-04-06 22:51:02.120  INFO 20072 --- [           main] .t.r.EmbeddedRedisBootstrapConfiguration : Starting redis server. Docker image: redis:4.0.2\r\n2019-04-06 22:51:02.768  INFO 20072 --- [           main] o.t.d.DockerClientProviderStrategy       : Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first\r\n2019-04-06 22:51:02.801  INFO 20072 --- [           main] o.t.d.DockerClientProviderStrategy       : Will use 'okhttp' transport\r\n2019-04-06 22:51:03.764  INFO 20072 --- [           main] o.t.d.NpipeSocketClientProviderStrategy  : Accessing docker with local Npipe socket (npipe:////./pipe/docker_engine)\r\n2019-04-06 22:51:03.764  INFO 20072 --- [           main] o.t.d.DockerClientProviderStrategy       : Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)\r\n2019-04-06 22:51:03.765  INFO 20072 --- [           main] org.testcontainers.DockerClientFactory   : Docker host IP address is localhost\r\n2019-04-06 22:51:03.898  INFO 20072 --- [           main] org.testcontainers.DockerClientFactory   : Connected to docker: \r\n  Server Version: 18.09.3\r\n  API Version: 1.39\r\n  Operating System: Docker Desktop\r\n  Total Memory: 1980 MB\r\n2019-04-06 22:51:04.046  INFO 20072 --- [           main] o.t.utility.RegistryAuthLocator          : Credentials not found for host (quay.io) when using credential helper/store (docker-credential-wincred)\r\n2019-04-06 22:51:05.103  INFO 20072 --- [           main] org.testcontainers.DockerClientFactory   : Ryuk started - will monitor and terminate Testcontainers containers on JVM exit\r\n        \u2139\ufe0e Checking the system...\r\n        \u2714 Docker version should be at least 1.6.0\r\n        \u2714 Docker environment should have more than 2GB free disk space\r\n2019-04-06 22:51:05.206  INFO 20072 --- [           main] \ud83d\udc33 [redis:4.0.2]                         : Creating container for image: redis:4.0.2\r\n2019-04-06 22:51:05.245  INFO 20072 --- [           main] o.t.utility.RegistryAuthLocator          : Credentials not found for host (index.docker.io) when using credential helper/store (docker-credential-wincred)\r\n2019-04-06 22:51:05.369  INFO 20072 --- [           main] \ud83d\udc33 [redis:4.0.2]                         : Starting container with ID: c48b5a8b3ebb8bb34215707ff611b527ca7062a54cdf82f76b29fc0c997d00dc\r\n2019-04-06 22:51:06.263  INFO 20072 --- [           main] \ud83d\udc33 [redis:4.0.2]                         : Container redis:4.0.2 is starting: c48b5a8b3ebb8bb34215707ff611b527ca7062a54cdf82f76b29fc0c997d00dc\r\n2019-04-06 22:51:06.463  INFO 20072 --- [           main] \ud83d\udc33 [redis:4.0.2]                         : Container redis:4.0.2 started\r\n~~~~\r\n\r\n\r\n### Current Behavior\r\nWhen I run StartApplication.java in Gradle project, It failed with below message: \r\n~~~~\r\n23:52:15: Executing task 'StartApplication.main()'...\r\n\r\n> Task :app:generateLombokConfig UP-TO-DATE\r\n> Task :app:processResources UP-TO-DATE\r\n> Task :app:compileJava UP-TO-DATE\r\n> Task :app:classes UP-TO-DATE\r\n> Task :app:compileTestJava UP-TO-DATE\r\n> Task :app:processTestResources UP-TO-DATE\r\n> Task :app:testClasses UP-TO-DATE\r\n\r\n> Task :app:StartApplication.main()\r\n2019-04-06 23:52:22.040  INFO 14224 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7f1d128a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\r\n2019-04-06 23:52:22.080  INFO 14224 --- [           main] .t.r.EmbeddedRedisBootstrapConfiguration : Starting Redis server. Docker image: redis:4.0.12\r\n2019-04-06 23:52:22.685  INFO 14224 --- [           main] o.t.d.DockerClientProviderStrategy       : Loaded org.testcontainers.dockerclient.NpipeSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first\r\n2019-04-06 23:52:22.717  INFO 14224 --- [           main] o.t.d.DockerClientProviderStrategy       : Will use 'okhttp' transport\r\n2019-04-06 23:52:23.722  INFO 14224 --- [           main] o.t.d.NpipeSocketClientProviderStrategy  : Accessing docker with local Npipe socket (npipe:////./pipe/docker_engine)\r\n2019-04-06 23:52:23.722  INFO 14224 --- [           main] o.t.d.DockerClientProviderStrategy       : Found Docker environment with local Npipe socket (npipe:////./pipe/docker_engine)\r\n2019-04-06 23:52:23.723  INFO 14224 --- [           main] org.testcontainers.DockerClientFactory   : Docker host IP address is localhost\r\n2019-04-06 23:52:23.809  WARN 14224 --- [           main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'embeddedRedis' defined in class path resource [com/playtika/test/redis/EmbeddedRedisBootstrapConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.testcontainers.containers.GenericContainer]: Factory method 'redis' threw exception; nested exception is org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"ID\" (class com.github.dockerjava.api.model.Info), not marked as ignorable (48 known properties: \"systemStatus\", \"ipv4Forwarding\", \"httpsProxy\", \"discoveryBackend\", \"httpProxy\", \"clusterStore\", \"cpuCfsPeriod\", \"dockerRootDir\", \"containersRunning\", \"operatingSystem\", \"containers\", \"architecture\", \"initPath\", \"cpuSet\", \"containersStopped\", \"systemTime\", \"oomKillDisable\", \"registryConfig\", \"containersPaused\", \"oomScoreAdj\", \"experimentalBuild\", \"loggingDriver\", \"driver\", \"nfd\", \"noProxy\", \"memTotal\", \"cpuCfsQuota\", \"bridgeNfIp6tables\", \"initSha1\", \"images\", \"memoryLimit\", \"cpuShares\", \"osType\", \"indexServerAddress\", \"name\", \"bridgeNfIptables\", \"debug\", \"serverVersion\", \"id\", \"plugins\", \"driverStatuses\", \"ncpu\", \"labels\", \"executionDriver\", \"kernelVersion\", \"sockets\", \"swapLimit\", \"clusterAdvertise\"])\r\n at [Source: buffer(org.testcontainers.shaded.okhttp3.internal.http1.Http1Codec$ChunkedSource@6492fab5).inputStream(); line: 1, column: 8] (through reference chain: com.github.dockerjava.api.model.Info[\"ID\"])\r\n2019-04-06 23:52:23.813  INFO 14224 --- [           main] ConditionEvaluationReportLoggingListener : \r\n\r\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.\r\n2019-04-06 23:52:23.818 ERROR 14224 --- [           main] o.s.boot.SpringApplication               : Application run failed\r\n\r\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'embeddedRedis' defined in class path resource [com/playtika/test/redis/EmbeddedRedisBootstrapConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.testcontainers.containers.GenericContainer]: Factory method 'redis' threw exception; nested exception is org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"ID\" (class com.github.dockerjava.api.model.Info), not marked as ignorable (48 known properties: \"systemStatus\", \"ipv4Forwarding\", \"httpsProxy\", \"discoveryBackend\", \"httpProxy\", \"clusterStore\", \"cpuCfsPeriod\", \"dockerRootDir\", \"containersRunning\", \"operatingSystem\", \"containers\", \"architecture\", \"initPath\", \"cpuSet\", \"containersStopped\", \"systemTime\", \"oomKillDisable\", \"registryConfig\", \"containersPaused\", \"oomScoreAdj\", \"experimentalBuild\", \"loggingDriver\", \"driver\", \"nfd\", \"noProxy\", \"memTotal\", \"cpuCfsQuota\", \"bridgeNfIp6tables\", \"initSha1\", \"images\", \"memoryLimit\", \"cpuShares\", \"osType\", \"indexServerAddress\", \"name\", \"bridgeNfIptables\", \"debug\", \"serverVersion\", \"id\", \"plugins\", \"driverStatuses\", \"ncpu\", \"labels\", \"executionDriver\", \"kernelVersion\", \"sockets\", \"swapLimit\", \"clusterAdvertise\"])\r\n at [Source: buffer(org.testcontainers.shaded.okhttp3.internal.http1.Http1Codec$ChunkedSource@6492fab5).inputStream(); line: 1, column: 8] (through reference chain: com.github.dockerjava.api.model.Info[\"ID\"])\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:203) [spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:114) [spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:71) [spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) [spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) [spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) [spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127) [spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:75) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:347) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:306) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat StartApplication.main(StartApplication.java:7) [test/:na]\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.testcontainers.containers.GenericContainer]: Factory method 'redis' threw exception; nested exception is org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"ID\" (class com.github.dockerjava.api.model.Info), not marked as ignorable (48 known properties: \"systemStatus\", \"ipv4Forwarding\", \"httpsProxy\", \"discoveryBackend\", \"httpProxy\", \"clusterStore\", \"cpuCfsPeriod\", \"dockerRootDir\", \"containersRunning\", \"operatingSystem\", \"containers\", \"architecture\", \"initPath\", \"cpuSet\", \"containersStopped\", \"systemTime\", \"oomKillDisable\", \"registryConfig\", \"containersPaused\", \"oomScoreAdj\", \"experimentalBuild\", \"loggingDriver\", \"driver\", \"nfd\", \"noProxy\", \"memTotal\", \"cpuCfsQuota\", \"bridgeNfIp6tables\", \"initSha1\", \"images\", \"memoryLimit\", \"cpuShares\", \"osType\", \"indexServerAddress\", \"name\", \"bridgeNfIptables\", \"debug\", \"serverVersion\", \"id\", \"plugins\", \"driverStatuses\", \"ncpu\", \"labels\", \"executionDriver\", \"kernelVersion\", \"sockets\", \"swapLimit\", \"clusterAdvertise\"])\r\n at [Source: buffer(org.testcontainers.shaded.okhttp3.internal.http1.Http1Codec$ChunkedSource@6492fab5).inputStream(); line: 1, column: 8] (through reference chain: com.github.dockerjava.api.model.Info[\"ID\"])\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\t... 30 common frames omitted\r\nCaused by: org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"ID\" (class com.github.dockerjava.api.model.Info), not marked as ignorable (48 known properties: \"systemStatus\", \"ipv4Forwarding\", \"httpsProxy\", \"discoveryBackend\", \"httpProxy\", \"clusterStore\", \"cpuCfsPeriod\", \"dockerRootDir\", \"containersRunning\", \"operatingSystem\", \"containers\", \"architecture\", \"initPath\", \"cpuSet\", \"containersStopped\", \"systemTime\", \"oomKillDisable\", \"registryConfig\", \"containersPaused\", \"oomScoreAdj\", \"experimentalBuild\", \"loggingDriver\", \"driver\", \"nfd\", \"noProxy\", \"memTotal\", \"cpuCfsQuota\", \"bridgeNfIp6tables\", \"initSha1\", \"images\", \"memoryLimit\", \"cpuShares\", \"osType\", \"indexServerAddress\", \"name\", \"bridgeNfIptables\", \"debug\", \"serverVersion\", \"id\", \"plugins\", \"driverStatuses\", \"ncpu\", \"labels\", \"executionDriver\", \"kernelVersion\", \"sockets\", \"swapLimit\", \"clusterAdvertise\"])\r\n at [Source: buffer(org.testcontainers.shaded.okhttp3.internal.http1.Http1Codec$ChunkedSource@6492fab5).inputStream(); line: 1, column: 8] (through reference chain: com.github.dockerjava.api.model.Info[\"ID\"])\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:51) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(DeserializationContext.java:839) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1045) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1352) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1330) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:264) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:125) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3736) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2803) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.dockerclient.transport.okhttp.OkHttpInvocationBuilder.get(OkHttpInvocationBuilder.java:101) ~[testcontainers-1.9.1.jar:na]\r\n\tat com.github.dockerjava.core.exec.InfoCmdExec.exec(InfoCmdExec.java:24) ~[testcontainers-1.9.1.jar:na]\r\n\tat com.github.dockerjava.core.exec.InfoCmdExec.exec(InfoCmdExec.java:14) ~[testcontainers-1.9.1.jar:na]\r\n\tat com.github.dockerjava.core.command.AbstrDockerCmd.exec(AbstrDockerCmd.java:35) ~[docker-java-3.0.14.jar:na]\r\n\tat org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:112) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:162) ~[testcontainers-1.9.1.jar:na]\r\n\tat com.playtika.test.redis.EmbeddedRedisBootstrapConfiguration.redis(EmbeddedRedisBootstrapConfiguration.java:66) ~[embedded-redis-1.19.jar:1.19]\r\n\tat com.playtika.test.redis.EmbeddedRedisBootstrapConfiguration$$EnhancerBySpringCGLIB$$8633c73e.CGLIB$redis$0(<generated>) ~[embedded-redis-1.19.jar:1.19]\r\n\tat com.playtika.test.redis.EmbeddedRedisBootstrapConfiguration$$EnhancerBySpringCGLIB$$8633c73e$$FastClassBySpringCGLIB$$909cab91.invoke(<generated>) ~[embedded-redis-1.19.jar:1.19]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat com.playtika.test.redis.EmbeddedRedisBootstrapConfiguration$$EnhancerBySpringCGLIB$$8633c73e.redis(<generated>) ~[embedded-redis-1.19.jar:1.19]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\t... 31 common frames omitted\r\n\r\n2019-04-06 23:52:23.822 ERROR 14224 --- [           main] o.s.boot.SpringApplication               : Application run failed\r\n\r\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'embeddedRedis' defined in class path resource [com/playtika/test/redis/EmbeddedRedisBootstrapConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.testcontainers.containers.GenericContainer]: Factory method 'redis' threw exception; nested exception is org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"ID\" (class com.github.dockerjava.api.model.Info), not marked as ignorable (48 known properties: \"systemStatus\", \"ipv4Forwarding\", \"httpsProxy\", \"discoveryBackend\", \"httpProxy\", \"clusterStore\", \"cpuCfsPeriod\", \"dockerRootDir\", \"containersRunning\", \"operatingSystem\", \"containers\", \"architecture\", \"initPath\", \"cpuSet\", \"containersStopped\", \"systemTime\", \"oomKillDisable\", \"registryConfig\", \"containersPaused\", \"oomScoreAdj\", \"experimentalBuild\", \"loggingDriver\", \"driver\", \"nfd\", \"noProxy\", \"memTotal\", \"cpuCfsQuota\", \"bridgeNfIp6tables\", \"initSha1\", \"images\", \"memoryLimit\", \"cpuShares\", \"osType\", \"indexServerAddress\", \"name\", \"bridgeNfIptables\", \"debug\", \"serverVersion\", \"id\", \"plugins\", \"driverStatuses\", \"ncpu\", \"labels\", \"executionDriver\", \"kernelVersion\", \"sockets\", \"swapLimit\", \"clusterAdvertise\"])\r\n at [Source: buffer(org.testcontainers.shaded.okhttp3.internal.http1.Http1Codec$ChunkedSource@6492fab5).inputStream(); line: 1, column: 8] (through reference chain: com.github.dockerjava.api.model.Info[\"ID\"])\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:139) ~[spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:203) ~[spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:114) ~[spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]\r\n\tat org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:71) ~[spring-cloud-context-2.1.1.RELEASE.jar:2.1.1.RELEASE]\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:75) ~[spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:54) ~[spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:347) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:306) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.4.RELEASE.jar:2.1.4.RELEASE]\r\n\tat StartApplication.main(StartApplication.java:7) [test/:na]\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.testcontainers.containers.GenericContainer]: Factory method 'redis' threw exception; nested exception is org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"ID\" (class com.github.dockerjava.api.model.Info), not marked as ignorable (48 known properties: \"systemStatus\", \"ipv4Forwarding\", \"httpsProxy\", \"discoveryBackend\", \"httpProxy\", \"clusterStore\", \"cpuCfsPeriod\", \"dockerRootDir\", \"containersRunning\", \"operatingSystem\", \"containers\", \"architecture\", \"initPath\", \"cpuSet\", \"containersStopped\", \"systemTime\", \"oomKillDisable\", \"registryConfig\", \"containersPaused\", \"oomScoreAdj\", \"experimentalBuild\", \"loggingDriver\", \"driver\", \"nfd\", \"noProxy\", \"memTotal\", \"cpuCfsQuota\", \"bridgeNfIp6tables\", \"initSha1\", \"images\", \"memoryLimit\", \"cpuShares\", \"osType\", \"indexServerAddress\", \"name\", \"bridgeNfIptables\", \"debug\", \"serverVersion\", \"id\", \"plugins\", \"driverStatuses\", \"ncpu\", \"labels\", \"executionDriver\", \"kernelVersion\", \"sockets\", \"swapLimit\", \"clusterAdvertise\"])\r\n at [Source: buffer(org.testcontainers.shaded.okhttp3.internal.http1.Http1Codec$ChunkedSource@6492fab5).inputStream(); line: 1, column: 8] (through reference chain: com.github.dockerjava.api.model.Info[\"ID\"])\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\t... 30 common frames omitted\r\nCaused by: org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"ID\" (class com.github.dockerjava.api.model.Info), not marked as ignorable (48 known properties: \"systemStatus\", \"ipv4Forwarding\", \"httpsProxy\", \"discoveryBackend\", \"httpProxy\", \"clusterStore\", \"cpuCfsPeriod\", \"dockerRootDir\", \"containersRunning\", \"operatingSystem\", \"containers\", \"architecture\", \"initPath\", \"cpuSet\", \"containersStopped\", \"systemTime\", \"oomKillDisable\", \"registryConfig\", \"containersPaused\", \"oomScoreAdj\", \"experimentalBuild\", \"loggingDriver\", \"driver\", \"nfd\", \"noProxy\", \"memTotal\", \"cpuCfsQuota\", \"bridgeNfIp6tables\", \"initSha1\", \"images\", \"memoryLimit\", \"cpuShares\", \"osType\", \"indexServerAddress\", \"name\", \"bridgeNfIptables\", \"debug\", \"serverVersion\", \"id\", \"plugins\", \"driverStatuses\", \"ncpu\", \"labels\", \"executionDriver\", \"kernelVersion\", \"sockets\", \"swapLimit\", \"clusterAdvertise\"])\r\n at [Source: buffer(org.testcontainers.shaded.okhttp3.internal.http1.Http1Codec$ChunkedSource@6492fab5).inputStream(); line: 1, column: 8] (through reference chain: com.github.dockerjava.api.model.Info[\"ID\"])\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:51) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(DeserializationContext.java:839) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1045) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1352) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1330) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:264) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:125) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3736) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.shaded.com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2803) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.dockerclient.transport.okhttp.OkHttpInvocationBuilder.get(OkHttpInvocationBuilder.java:101) ~[testcontainers-1.9.1.jar:na]\r\n\tat com.github.dockerjava.core.exec.InfoCmdExec.exec(InfoCmdExec.java:24) ~[testcontainers-1.9.1.jar:na]\r\n\tat com.github.dockerjava.core.exec.InfoCmdExec.exec(InfoCmdExec.java:14) ~[testcontainers-1.9.1.jar:na]\r\n\tat com.github.dockerjava.core.command.AbstrDockerCmd.exec(AbstrDockerCmd.java:35) ~[docker-java-3.0.14.jar:na]\r\n\tat org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:112) ~[testcontainers-1.9.1.jar:na]\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:162) ~[testcontainers-1.9.1.jar:na]\r\n\tat com.playtika.test.redis.EmbeddedRedisBootstrapConfiguration.redis(EmbeddedRedisBootstrapConfiguration.java:66) ~[embedded-redis-1.19.jar:1.19]\r\n\tat com.playtika.test.redis.EmbeddedRedisBootstrapConfiguration$$EnhancerBySpringCGLIB$$8633c73e.CGLIB$redis$0(<generated>) ~[embedded-redis-1.19.jar:1.19]\r\n\tat com.playtika.test.redis.EmbeddedRedisBootstrapConfiguration$$EnhancerBySpringCGLIB$$8633c73e$$FastClassBySpringCGLIB$$909cab91.invoke(<generated>) ~[embedded-redis-1.19.jar:1.19]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat com.playtika.test.redis.EmbeddedRedisBootstrapConfiguration$$EnhancerBySpringCGLIB$$8633c73e.redis(<generated>) ~[embedded-redis-1.19.jar:1.19]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\t... 31 common frames omitted\r\n\r\n\r\n> Task :app:StartApplication.main() FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':app:StartApplication.main()'.\r\n> Process 'command 'C:/Program Files/Java/jdk1.8.0_181/bin/java.exe'' finished with non-zero exit value 1\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\r\n\r\n* Get more help at https://help.gradle.org\r\n\r\nDeprecated Gradle features were used in this build, making it incompatible with Gradle 6.0.\r\nUse '--warning-mode all' to show the individual deprecation warnings.\r\nSee https://docs.gradle.org/5.3.1/userguide/command_line_interface.html#sec:command_line_warnings\r\n\r\nBUILD FAILED in 7s\r\n6 actionable tasks: 1 executed, 5 up-to-date\r\nProcess 'command 'C:/Program Files/Java/jdk1.8.0_181/bin/java.exe'' finished with non-zero exit value 1\r\n23:52:23: Task execution finished 'StartApplication.main()'.\r\n~~~~\r\n\r\n### Context\r\n\r\nSo I create two projects, Gradle and Maven projects, has same dependencies and java code, but when I run gradle project(run src/test/java/StartApplication.java), it will fail. But Maven project will success connect to Docker and start the redis container.\r\n\r\nAnd I checked all the Gradle dependencies, but when I remove this dependency:\r\n~~~~\r\ncommons-io:commons-io:2.6\r\n~~~~\r\n\r\nStartApplication will success, and will connect to docker normally, but I need commons-io, so I can't remove it from dependencies.\r\n\r\nIt's so weird about this issue, so I upload the code, you can easily run from your IDE, both Maven and Gradle project has been uploaded. Please help!\r\n\r\n\r\n### Environment\r\n\r\n#### Docker\r\n\r\n~~~~\r\nClient: Docker Engine - Community\r\n Version:           18.09.3\r\n API version:       1.39\r\n Go version:        go1.10.8\r\n Git commit:        774a1f4\r\n Built:             Thu Feb 28 06:32:50 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.3\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.8\r\n  Git commit:       774a1f4\r\n  Built:            Thu Feb 28 06:40:58 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n~~~~\r\n\r\n#### Gradle Version\r\n\r\n~~~~\r\ngradle-5.3.1-all\r\n~~~~\r\n\r\n#### IDE\r\n\r\n~~~~\r\nIntelliJ IDEA 2019.1\r\n~~~~\r\n\r\n#### JDK\r\n\r\n~~~~\r\n> java -version\r\njava version \"11\" 2018-09-25\r\nJava(TM) SE Runtime Environment 18.9 (build 11+28)\r\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11+28, mixed mode)\r\n~~~~\r\n\r\n#### Maven Wrapper\r\n\r\n~~~~properties\r\ndistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.0/apache-maven-3.6.0-bin.zip\r\n~~~~\r\n\r\n#### Maven pom\r\n\r\n~~~~xml\r\n<dependencies>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-data-redis-reactive</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-webflux</artifactId>\r\n\t</dependency>\r\n\r\n\t<dependency>\r\n\t\t<groupId>org.projectlombok</groupId>\r\n\t\t<artifactId>lombok</artifactId>\r\n\t\t<optional>true</optional>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.apache.commons</groupId>\r\n\t\t<artifactId>commons-lang3</artifactId>\r\n\t\t<version>3.8.1</version>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t<scope>test</scope>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>com.playtika.testcontainers</groupId>\r\n\t\t<artifactId>embedded-redis</artifactId>\r\n\t\t<version>1.12</version>\r\n\t\t<scope>test</scope>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t<artifactId>spring-cloud-starter</artifactId>\r\n\t\t<scope>test</scope>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>io.projectreactor</groupId>\r\n\t\t<artifactId>reactor-test</artifactId>\r\n\t\t<scope>test</scope>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>commons-io</groupId>\r\n\t\t<artifactId>commons-io</artifactId>\r\n\t\t<version>2.6</version>\r\n\t</dependency>\r\n</dependencies>\r\n\r\n<dependencyManagement>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t<version>Greenwich.SR1</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n</dependencyManagement>\r\n\r\n<build>\r\n\t<plugins>\r\n\t\t<plugin>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t</plugin>\r\n\t</plugins>\r\n</build>\r\n~~~~\r\n\r\n#### Gradle config\r\n\r\n~~~~\r\nbuildscript {\r\n\trepositories { maven { url \"https://maven.aliyun.com/repository/public\" } }\r\n}\r\n\r\nplugins {\r\n\tid 'org.springframework.boot' version '2.1.4.RELEASE'\r\n\tid 'java'\r\n}\r\n\r\napply plugin: 'io.spring.dependency-management'\r\n\r\ngroup = 'com.example'\r\nversion = '0.0.1-SNAPSHOT'\r\nsourceCompatibility = '1.8'\r\n\r\nconfigurations {\r\n\tcompileOnly {\r\n\t\textendsFrom annotationProcessor\r\n\t}\r\n}\r\n\r\nrepositories { maven { url \"https://maven.aliyun.com/repository/public\" } }\r\n\r\ndependencyManagement {\r\n    imports {\r\n        mavenBom \"org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR1\"\r\n    }\r\n}\r\n\r\ndependencies {\r\n\timplementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'\r\n\timplementation 'org.springframework.boot:spring-boot-starter-webflux'\r\n\tcompileOnly 'org.projectlombok:lombok'\r\n\tannotationProcessor 'org.projectlombok:lombok'\r\n\ttestImplementation 'org.springframework.boot:spring-boot-starter-test'\r\n\ttestImplementation 'io.projectreactor:reactor-test'\r\n\ttestImplementation('com.playtika.testcontainers:embedded-redis:1.19')\r\n\ttestImplementation('org.springframework.cloud:spring-cloud-starter')\r\n\timplementation('commons-io:commons-io:2.6')\r\n\timplementation('org.apache.commons:commons-lang3:3.8.1')\r\n}\r\n~~~~\r\n\r\n#### StartApplication.java\r\n\r\nsrc/test/java/StartApplication.java\r\n\r\n~~~~java\r\npublic class StartApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(BootGradleApplication.class, args);\r\n    }\r\n}\r\n~~~~\r\n\r\n### Step to reproduce\r\n\r\nSource code, contains both maven and gradle projects.\r\n[source-code.zip](https://github.com/testcontainers/testcontainers-java/files/3050670/source-code.zip)\r\n\r\nReference post (The shortener maven project): https://github.com/spring-academy/reactive-link-shortener-sample-app", "url": "https://github.com/testcontainers/testcontainers-java/issues/1360", "user": "ethnchao", "labels": ["area/shading", "resolution/acknowledged", "type/bug"], "created": "2019-04-06 16:13:37", "closed": "2019-05-09 05:00:23", "commits": {}, "ttf": 32.000277777777775, "commitsDetails": []}, {"title": "java.lang.NoClassDefFoundError after upgrading mysql to 1.11.1", "body": "I am creating a `MySQLContainer` with an init script\r\n```\r\npublic static MySQLContainer mysql = (MySQLContainer) new MySQLContainer().withInitScript(\"sql/create_schema.sql\");\r\n```\r\n\r\nThis results in the following exception\r\n```\r\nCaused by: java.lang.ClassNotFoundException: org.apache.commons.lang.StringUtils\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\t... 24 more\r\n```\r\n\r\nThis instantiation worked fine on 1.10.7\r\n\r\nI checked with Slack and they suggested I report this as the shading changing in 1.11", "url": "https://github.com/testcontainers/testcontainers-java/issues/1342", "user": "rrhartjr", "labels": ["area/shading", "type/bug"], "created": "2019-03-26 16:35:57", "closed": "2019-04-11 15:51:29", "commits": {"3b9e61e2b69db264db4e3f18dce8194d4debd2cf": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "3b9e61e2b69db264db4e3f18dce8194d4debd2cf", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["8a8548affca2dab87478677215283817ce3bbd46"], "nameRev": "3b9e61e2b69db264db4e3f18dce8194d4debd2cf tags/1.11.2~9", "commitMessage": "Fix shading of modules (#1342, #1390)\n\n", "commitDateTime": "2019-04-11 17:51:28", "authoredDateTime": "2019-04-11 17:51:28", "commitGitStats": [{"filePath": "build.gradle", "insertions": 26, "deletions": 8, "lines": 34}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "OneShotStartupCheckStrategy fails if the container is already gone", "body": "Consider the following test:\r\n\r\n```java\r\n    @Test(timeout = 5_000)\r\n    public void testExitingContainer() {\r\n        try (\r\n            GenericContainer container = new GenericContainer<>()\r\n                .withCreateContainerCmdModifier(it -> it.getHostConfig().withAutoRemove(true))\r\n                .withStartupCheckStrategy(new OneShotStartupCheckStrategy())\r\n        ) {\r\n            container.start();\r\n        }\r\n    }\r\n```\r\n\r\nIt will fail because the container exits immediately and `OneShotStartupCheckStrategy` receives `NotFoundException`.\r\n\r\nThe question is - what should we do? `StartupStatus.SUCCESSFUL` or `StartupStatus.FAILED`?", "url": "https://github.com/testcontainers/testcontainers-java/issues/1331", "user": "bsideup", "labels": ["stale", "type/bug"], "created": "2019-03-21 17:31:25", "closed": "2019-07-04 10:21:23", "commits": {}, "ttf": 104.00027777777778, "commitsDetails": []}, {"title": "MountableFile.forClasspathResource with file mode seems to work incorrect", "body": "I try to mount an executable file into a docker container using following method:\r\n```java\r\nprivate void addClasspathResourceMappingAsExceutable(final String resourcePath, final String containerPath) {\r\n   MountableFile mountableFile = MountableFile.forClasspathResource(resourcePath, 775);\r\n   addFileSystemBind(mountableFile.getResolvedPath(), containerPath, BindMode.READ_WRITE);\r\n}\r\n```\r\nThe file in the docker container only has following rights: `-rw-rw-r--`.", "url": "https://github.com/testcontainers/testcontainers-java/issues/1237", "user": "farodin91", "labels": ["os/linux", "resolution/waiting-for-info", "stale", "type/bug"], "created": "2019-02-13 16:34:57", "closed": "2019-06-17 15:06:52", "commits": {}, "ttf": 123.00027777777778, "commitsDetails": []}, {"title": "getTestHostIpAddress not working", "body": "Hi again,\r\n\r\nunfortunatelly this code fails with an exception:\r\n\r\n```\r\npackage testcontainers;\r\n\r\nimport org.junit.Rule;\r\nimport org.junit.Test;\r\nimport org.openqa.selenium.firefox.FirefoxOptions;\r\nimport org.testcontainers.containers.BrowserWebDriverContainer;\r\n\r\npublic class TestContainerWebdriveHostIpAddress {\r\n\r\n\t@Rule\r\n\tpublic BrowserWebDriverContainer<?> firefox = new BrowserWebDriverContainer<>()\r\n          .withCapabilities(new FirefoxOptions());\r\n\t\r\n\t@Test\r\n\tpublic void test() {\r\n\t  String testHostIpAddress = firefox.getTestHostIpAddress();\r\n\t}\r\n\r\n}\r\n```\r\nException:\r\n\r\n```\r\njava.lang.RuntimeException: org.testcontainers.utility.CommandLine$ShellCommandException: Exception when executing docker-machine ssh  echo $SSH_CONNECTION\r\n\tat org.testcontainers.containers.GenericContainer.getTestHostIpAddress(GenericContainer.java:1001)\r\n\tat testcontainers.TestContainerWebdriveHostIpAddress.test(TestContainerWebdriveHostIpAddress.java:17)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.testcontainers.containers.FailureDetectingExternalResource$1.evaluate(FailureDetectingExternalResource.java:30)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\r\nCaused by: org.testcontainers.utility.CommandLine$ShellCommandException: Exception when executing docker-machine ssh  echo $SSH_CONNECTION\r\n\tat org.testcontainers.utility.CommandLine.runShellCommand(CommandLine.java:47)\r\n\tat org.testcontainers.containers.GenericContainer.getTestHostIpAddress(GenericContainer.java:989)\r\n\t... 26 more\r\nCaused by: org.testcontainers.shaded.org.zeroturnaround.exec.InvalidExitValueException: Unexpected exit value: 1, allowed exit values: [0], executed command [docker-machine, ssh, \"\", echo $SSH_CONNECTION], output was 122 bytes:\r\nDocker machine \"\" does not exist. Use \"docker-machine ls\" to list machines. Use \"docker-machine create\" to add a new one.\r\n\tat org.testcontainers.shaded.org.zeroturnaround.exec.InvalidExitUtil.checkExit(InvalidExitUtil.java:27)\r\n\tat org.testcontainers.shaded.org.zeroturnaround.exec.WaitForProcess.call(WaitForProcess.java:114)\r\n\tat org.testcontainers.shaded.org.zeroturnaround.exec.ProcessExecutor.waitFor(ProcessExecutor.java:1097)\r\n\tat org.testcontainers.shaded.org.zeroturnaround.exec.ProcessExecutor.execute(ProcessExecutor.java:925)\r\n\tat org.testcontainers.utility.CommandLine.runShellCommand(CommandLine.java:43)\r\n\t... 27 more\r\n```\r\nI'am on Windows and use Hyper-V. I found a [Post](https://stackoverflow.com/questions/46005207/is-empty-docker-machine-ls-output-valid-when-docker-ps-shows-running-contain) saying that `docker-machine ls` is not working with Hyper-V.\r\nI'am guessing thats the reason why getTestHostIpAddress is not working.\r\n\r\nAny thoughts on this (except using virtual box instead :-))\r\n\r\nThanky you", "url": "https://github.com/testcontainers/testcontainers-java/issues/1236", "user": "bopi-", "labels": ["client/docker-machine", "os/windows", "stale", "type/bug"], "created": "2019-02-12 17:48:02", "closed": "2019-06-30 16:32:19", "commits": {}, "ttf": 137.00027777777777, "commitsDetails": []}, {"title": "Checks fail if Docker version contains a non-numeric classifier.", "body": "On one of my Linux system the version `from docker version` is reported as `18.06.0-dev`. This causes the version check to fail as it assumes that the version should be purely dots and numbers.\r\n\r\n*Edit*:  The correct fix for this should be the following:\r\n\r\n- [ ] Have the ability to turn off the version check (either on it's own or as part of `checks.disable=true`\r\n- [ ] Only compare numerical parts of the version and remove and non-numeric classifiers. (For instance this is how Grolifant does version comparisons: https://gitlab.com/ysb33rOrg/grolifant/blob/master/src/main/groovy/org/ysb33r/grolifant/api/Version.groovy#L234)\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/1220", "user": "ysb33r", "labels": ["good first issue", "resolution/awaiting-release", "type/bug"], "created": "2019-02-06 15:59:32", "closed": "2019-02-12 06:51:39", "commits": {"375bdaea6e47b79b9bf75fc023455d98e258a23e": {"commitGHEventType": "closed", "commitUser": "kiview"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "375bdaea6e47b79b9bf75fc023455d98e258a23e", "commitGHEventType": "closed", "commitUser": "kiview", "commitParents": ["c5ce1cbbdf3ee209d89fa69a5ef6824664c6761b"], "nameRev": "375bdaea6e47b79b9bf75fc023455d98e258a23e tags/1.10.7~45", "commitMessage": "Check Docker version according to checksEnabled flag (#1231)\n\nFixes #1220 ", "commitDateTime": "2019-02-12 07:51:32", "authoredDateTime": "2019-02-12 13:51:32", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerClientFactory.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.DockerClientFactory.client()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Docker for Mac 2.0.0.2: empty logs for short-lived containers", "body": "I've noticed an issue that I can reliably reproduce on Docker for Mac 2.0.0.2, but which does not appear on CI.\r\n\r\n`org.testcontainers.utility.DirectoryTarResourceTest#simpleRecursiveFileTest` will fail ~80% of the time for me. This particular test uses a short-lived container comprising a `cat` CMD and with `OneShotStartupCheckStrategy`. The test attaches a `ToStringConsumer` to logs and waits for the end of stdout logs to be reached.\r\n\r\nSome of the time, when the test passes, the log stream callback events are `onStart`, `onNext` (containing the desired stdout line) and `onComplete`.\r\n\r\nAfter adding a little extra instrumentation, it appears that most of the time the log stream callback events are `onStart`, `onComplete`. `onNext` is never fired.\r\n\r\nIn this situation the test fails. However, when attempting to read the logs _later_, the correct log message is found.\r\n\r\nMy hypothesis is that this version of Docker automatically triggers the `onComplete` event at container exit _even if_ there are unflushed stdout/stderr frames.\r\n\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/1205", "user": "rnorth", "labels": ["resolution/acknowledged", "type/bug"], "created": "2019-02-02 22:12:34", "closed": "2019-03-24 21:16:19", "commits": {"356b84ad4297fd80351fbd9a87722549f1ede6b9": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "12da2334d2a239677189e366e1921984deb84097": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "ddcb7aa90930112e3c17d4369723f6d95b3998bb": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "783aaeb2b4bfe5488b7e3a96f87dae98683d3179": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "2c5f274d73317257efa99d359357856c076c24b7": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 49.000277777777775, "commitsDetails": [{"commitHash": "356b84ad4297fd80351fbd9a87722549f1ede6b9", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "12da2334d2a239677189e366e1921984deb84097", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["4bafa99dbc7b1cb9dc0e27b1a0b1e01e287f6e1f"], "nameRev": "12da2334d2a239677189e366e1921984deb84097 remotes/origin/cirrus_ci", "commitMessage": "Fix #1205 in Cirrus CI branch (#1245)\n\n* Start log consumers after startup checks are passing\r\nFixes #1205\r\n\r\n* Add getLogs() method to GenericContainer, and use it for tests\r\n\r\n* Fix missing passthrough of output types\r\n\r\n* Restore previous behaviour\r\n", "commitDateTime": "2019-02-15 12:21:07", "authoredDateTime": "2019-02-15 12:21:07", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 19, "deletions": 4, "lines": 23}, {"filePath": "core/src/main/java/org/testcontainers/containers/output/WaitingConsumer.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "core/src/main/java/org/testcontainers/utility/LogUtils.java", "insertions": 73, "deletions": 13, "lines": 86}, {"filePath": "core/src/test/java/org/testcontainers/containers/output/ContainerLogsTest.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "core/src/test/java/org/testcontainers/junit/WorkingDirectoryTest.java", "insertions": 2, "deletions": 12, "lines": 14}, {"filePath": "core/src/test/java/org/testcontainers/utility/DirectoryTarResourceTest.java", "insertions": 9, "deletions": 34, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.getLogs()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.getLogs(org.testcontainers.containers.output.OutputFrame[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.tryStart()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "WaitingConsumer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.output.WaitingConsumer.waitUntilEnd()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LogUtils.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.LogUtils.followOutput(com.github.dockerjava.api.DockerClient,java.lang.String,java.util.function.Consumer,org.testcontainers.containers.output.OutputFrame[])", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.testcontainers.utility.LogUtils.getOutput(com.github.dockerjava.api.DockerClient,java.lang.String,org.testcontainers.containers.output.OutputFrame[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.utility.LogUtils.getOutput(com.github.dockerjava.api.DockerClient,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.utility.LogUtils.attachConsumer(com.github.dockerjava.api.DockerClient,java.lang.String,java.util.function.Consumer,boolean,org.testcontainers.containers.output.OutputFrame[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ContainerLogsTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.output.ContainerLogsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WorkingDirectoryTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.WorkingDirectoryTest.checkOutput()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.WorkingDirectoryTest", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 4}]}, {"spoonFilePath": "DirectoryTarResourceTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.DirectoryTarResourceTest.simpleRecursiveFileTest()", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 5}, {"spoonMethodName": "org.testcontainers.utility.DirectoryTarResourceTest.simpleRecursiveFileWithPermissionTest()", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 5}, {"spoonMethodName": "org.testcontainers.utility.DirectoryTarResourceTest.simpleRecursiveClasspathResourceTest()", "TOT": 10, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 6}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ddcb7aa90930112e3c17d4369723f6d95b3998bb", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "783aaeb2b4bfe5488b7e3a96f87dae98683d3179", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2c5f274d73317257efa99d359357856c076c24b7", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["672523057bd2f2a7ad716e9648dde7a526dd64ea"], "nameRev": "2c5f274d73317257efa99d359357856c076c24b7 tags/1.11.1", "commitMessage": "Add getLogs() to GenericContainer, allowing all logs to be retrieved (#1206)\n\nFixes #1205", "commitDateTime": "2019-03-24 21:16:19", "authoredDateTime": "2019-03-24 21:16:19", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/testcontainers/containers/ContainerState.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 10, "deletions": 19, "lines": 29}, {"filePath": "core/src/main/java/org/testcontainers/containers/output/WaitingConsumer.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "core/src/main/java/org/testcontainers/utility/LogUtils.java", "insertions": 68, "deletions": 13, "lines": 81}, {"filePath": "core/src/test/java/org/testcontainers/containers/output/ContainerLogsTest.java", "insertions": 72, "deletions": 0, "lines": 72}, {"filePath": "core/src/test/java/org/testcontainers/junit/WorkingDirectoryTest.java", "insertions": 2, "deletions": 12, "lines": 14}, {"filePath": "core/src/test/java/org/testcontainers/utility/DirectoryTarResourceTest.java", "insertions": 9, "deletions": 34, "lines": 43}, {"filePath": "docs/features/container_logs.md", "insertions": 29, "deletions": 5, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ContainerState.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.getLogs()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.getLogs(org.testcontainers.containers.output.OutputFrame[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.tryStart()", "TOT": 19, "UPD": 6, "INS": 1, "MOV": 7, "DEL": 5}]}, {"spoonFilePath": "WaitingConsumer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.output.WaitingConsumer.waitUntilEnd()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LogUtils.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.LogUtils.followOutput(com.github.dockerjava.api.DockerClient,java.lang.String,java.util.function.Consumer,org.testcontainers.containers.output.OutputFrame[])", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.testcontainers.utility.LogUtils.getOutput(com.github.dockerjava.api.DockerClient,java.lang.String,org.testcontainers.containers.output.OutputFrame[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.utility.LogUtils.attachConsumer(com.github.dockerjava.api.DockerClient,java.lang.String,java.util.function.Consumer,boolean,org.testcontainers.containers.output.OutputFrame[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ContainerLogsTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.output.ContainerLogsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WorkingDirectoryTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.WorkingDirectoryTest.checkOutput()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.WorkingDirectoryTest", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 4}]}, {"spoonFilePath": "DirectoryTarResourceTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.DirectoryTarResourceTest.simpleRecursiveFileTest()", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 5}, {"spoonMethodName": "org.testcontainers.utility.DirectoryTarResourceTest.simpleRecursiveFileWithPermissionTest()", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 5}, {"spoonMethodName": "org.testcontainers.utility.DirectoryTarResourceTest.simpleRecursiveClasspathResourceTest()", "TOT": 10, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 6}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "docker-compose entry container_name not supported", "body": "I just tried to run a `DockerComposeContainer` with a docker-compose file that contained `container_name` entries. Running it just fails like this:\r\n\r\n```\r\n22:33:13.389 [main] INFO  \ud83d\udc33 [alpine/socat:latest] - Creating container for image: alpine/socat:latest\r\n22:33:13.545 [main] ERROR \ud83d\udc33 [alpine/socat:latest] - Could not start container\r\norg.testcontainers.containers.ContainerLaunchException: Aborting attempt to link to container zhq16mnbjgg6_api_1 as it is not running\r\n    at org.testcontainers.containers.GenericContainer.applyConfiguration(GenericContainer.java:477)\r\n    at org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:232)\r\n    at org.testcontainers.containers.GenericContainer.lambda$doStart$0(GenericContainer.java:216)\r\n    at org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:76)\r\n    at org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:214)\r\n    at org.testcontainers.containers.GenericContainer.start(GenericContainer.java:203)\r\n    at org.testcontainers.containers.DockerComposeContainer.startAmbassadorContainers(DockerComposeContainer.java:242)\r\n    at org.testcontainers.containers.DockerComposeContainer.start(DockerComposeContainer.java:153)\r\n    at com.brandwatch.integrationtests.testhelpers.DockerComposeEnvironment.start(DockerComposeEnvironment.java:80)\r\n    at com.brandwatch.integrationtests.testhelpers.DockerComposeEnvironment.<init>(DockerComposeEnvironment.java:64)\r\n    at com.brandwatch.integrationtests.testhelpers.DockerComposeEnvironment.<clinit>(DockerComposeEnvironment.java:29)\r\n    at com.brandwatch.integrationtests.SignalControllerIT.<clinit>(SignalControllerIT.java:40)\r\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)\r\n    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)\r\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n    at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)\r\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n    at org.junit.runners.Suite.runChild(Suite.java:128)\r\n    at org.junit.runners.Suite.runChild(Suite.java:27)\r\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n    at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\r\n    at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\r\n    at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\r\n    at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\r\n    at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\r\n    at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:159)\r\n    at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)\r\n    at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)\r\n    at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)\r\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)\r\n```\r\n\r\nI could imagine that in parts `container_name` is ignored, in parts it isn't, which leads to the container being referenced to as `zhq16mnbjgg6_api_1` in some parts, and as `api` (the `container_name`) in other parts. This might lead to this error, although I haven't checked.\r\n\r\nThis same issue was raised before:\r\nhttps://github.com/testcontainers/testcontainers-java/issues/265#issuecomment-272618508\r\n\r\nIt would help if testcontainers would either add proper support for this, or fail fast with a useful error message saying that this field is not supported.", "url": "https://github.com/testcontainers/testcontainers-java/issues/1151", "user": "YNedderhoff", "labels": ["area/docker-compose", "good first issue", "help wanted", "resolution/acknowledged", "type/bug"], "created": "2019-01-16 09:17:42", "closed": "2019-07-19 13:22:34", "commits": {}, "ttf": 184.00027777777777, "commitsDetails": []}, {"title": "Release of 1.10.4 of junit-jupiter module contains wrong classes - REPUBLISHED AS 1.10.5", "body": "I was investigating why https://github.com/testcontainers/testcontainers-java/issues/1019 still fails me even if https://github.com/testcontainers/testcontainers-java/pull/1020 was merged. \r\n\r\nThe test in the project works (I have checked it several times), so I tried to build super plain reproducers (for [Maven](https://github.com/testcontainers/testcontainers-java/files/2720487/tcjunit5.zip) and [Gradle](https://github.com/testcontainers/testcontainers-java/files/2720488/tcjunit5gradle.zip)), which both fail with 1.10.4.\r\n\r\nSo I finally ended up debugging and make my way through the delomboked sources and in 1.10.4  `TestcontainersExtension` still only implements `BeforeEachCallback` and *not* `BeforeAllCallback`.\r\n\r\nPlease see the sources from central: \r\nhttps://search.maven.org/remotecontent?filepath=org/testcontainers/junit-jupiter/1.10.4/junit-jupiter-1.10.4-sources.jar\r\n\r\nI think one solution would be just drafting a new release in time. Being able to use the shared container in a `BeforeAll` seems to be crucial (at least from my perspective).\r\n\r\nThanks.", "url": "https://github.com/testcontainers/testcontainers-java/issues/1111", "user": "michael-simons", "labels": ["blocker", "resolution/acknowledged", "type/bug"], "created": "2019-01-02 10:44:46", "closed": "2019-01-21 20:11:45", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "Set HOSTNAME_EXTERNAL env variable for localstack test container", "body": "Right now localstack container does not override hostname property that leads to issues with aws responses that contains url. All works when container could be reached by localhost (127.0.0.1) but fails when running in docker env with another IP address resolved.\r\n```kotlin\r\nval sqsEndpoint = localstack.getEndpointConfiguration(SQS)\r\nval sqsClient = AmazonSQSAsyncClient.asyncBuilder().withEndpointConfiguration(sqsEndpoint)\r\n                .withCredentials(localstack.defaultCredentialsProvider).build()\r\nval queueUrl = sqsClient.createQueue(\"aQueue\").queueUrl\r\n\r\nprintln(sqsEndpoint.serviceEndpoint)\r\nprintln(queueUrl)\r\n```\r\nThis would print something like \r\n```\r\nhttp://127.0.0.1.nip.io:33161\r\nhttp://localhost:33161/queue/aQueue\r\n```\r\nAs you can see if service endpoint would be resolved to another IP it would break\r\n\r\nCurrent workaround - extract host/port from serviceEndpoint info and use it in queueUrl, but as localstack can be configured to adjust host, I believe it could be done on testcontainers side", "url": "https://github.com/testcontainers/testcontainers-java/issues/1102", "user": "zeldigas", "labels": ["good first issue", "help wanted", "resolution/pr-submitted", "type/bug"], "created": "2018-12-27 11:51:40", "closed": "2019-12-04 17:20:06", "commits": {"7bdfebc00df9b4a8db55545504da8ad1b88ef48a": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "ecd933fe48d580e73f3078a5603cc9d0aa1ef66b": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 342.0002777777778, "commitsDetails": [{"commitHash": "7bdfebc00df9b4a8db55545504da8ad1b88ef48a", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ecd933fe48d580e73f3078a5603cc9d0aa1ef66b", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "JUnit 5 extension starts container to late.", "body": "I'd like to use a container shared among tests as early in a `BeforeAll` method like this:\r\n\r\n```\r\nimport org.junit.jupiter.api.Assertions;\r\nimport org.junit.jupiter.api.BeforeAll;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.testcontainers.containers.GenericContainer;\r\nimport org.testcontainers.junit.jupiter.Container;\r\nimport org.testcontainers.junit.jupiter.Testcontainers;\r\n\r\n@Testcontainers\r\npublic class SomeTest {\r\n\t@Container\r\n\tprivate static final GenericContainer aContainer = new GenericContainer(\"postgres:9\");\r\n\r\n\t@BeforeAll\r\n\tstatic void doSomethingWithAContainer() {\r\n\r\n\t\tAssertions.assertTrue(aContainer.isRunning());\r\n\t}\r\n\r\n\t@Test\r\n\tvoid aTest() {\r\n\t\tAssertions.assertTrue(aContainer.isRunning());\r\n\t}\r\n}\r\n```\r\n\r\nI deliberately used a generic container here, but the result is the same with dedicated once, too.\r\n\r\nThe use case is providing fixtures etc. I wonder if implementing the `BeforeAllCallback` as it was done beforehand in #887 would have been the better approach, as it should have kept the order (first extensions, than concrete `BeforeAll`).", "url": "https://github.com/testcontainers/testcontainers-java/issues/1019", "user": "michael-simons", "labels": ["resolution/awaiting-release", "type/bug"], "created": "2018-12-18 20:10:13", "closed": "2018-12-26 20:44:26", "commits": {"bbdd172d7e8cb30118071aa657a5470e5e7d7cf8": {"commitGHEventType": "referenced", "commitUser": "kiview"}, "bf3b7bcc9a40996c39aa667585ec21391eb662d1": {"commitGHEventType": "referenced", "commitUser": "kiview"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "bbdd172d7e8cb30118071aa657a5470e5e7d7cf8", "commitGHEventType": "referenced", "commitUser": "kiview", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bf3b7bcc9a40996c39aa667585ec21391eb662d1", "commitGHEventType": "referenced", "commitUser": "kiview", "commitParents": ["9ef39d5bc54f55bf20c82a2e9fbbf91b7498f190"], "nameRev": "bf3b7bcc9a40996c39aa667585ec21391eb662d1 tags/1.10.5~14", "commitMessage": "Start shared containers in beforeAll callback (Jupiter) (#1020)\n\nFixes #1019", "commitDateTime": "2018-12-26 21:44:25", "authoredDateTime": "2018-12-26 21:44:25", "commitGitStats": [{"filePath": "modules/junit-jupiter/src/main/java/org/testcontainers/junit/jupiter/TestcontainersExtension.java", "insertions": 14, "deletions": 9, "lines": 23}, {"filePath": "modules/junit-jupiter/src/test/java/org/testcontainers/junit/jupiter/TestcontainersSharedContainerTests.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestcontainersExtension.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.findSharedContainers(java.lang.Object)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.postProcessTestInstance(java.lang.Object,org.junit.jupiter.api.extension.ExtensionContext)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.beforeEach(org.junit.jupiter.api.extension.ExtensionContext)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.collectParentTestInstances(org.junit.jupiter.api.extension.ExtensionContext)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.isContainer()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.getContainerInstance(java.lang.Object,java.lang.reflect.Field)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.beforeAll(org.testcontainers.junit.jupiter.ExtensionContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.postProcessTestInstance(java.lang.Object,org.testcontainers.junit.jupiter.ExtensionContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersExtension.findSharedContainers(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestcontainersSharedContainerTests.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.jupiter.TestcontainersSharedContainerTests.doSomethingWithAContainer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Controlling execution order of JUnit 5 extension relative to other extensions not possible", "body": "I am trying to use this extension together with `@SpringBootTest`. How to ensure testcontainer starts first before executing `SpringBootTest` extension?\r\n\r\nThis issue is not limited to Spring, but rather an issue as soon as multiple extensions are used at the same time and a certain ordering is required.\r\n\r\n**Context**\r\n\r\nFrom what I see in the JUnit 5 documentation [the annotation order matters](https://junit.org/junit5/docs/current/user-guide/#extensions). Since Java sorts annotations in bytecode alphabetically Spring will always run first unless it is possible to explicitly import `@ExtendWith(TestcontainersExtension.class)`. Currently, this cannot be done due to `TestcontainersExtension` being package-private.\r\n\r\n**Possible solution**\r\n\r\nI believe making `TestcontainersExtension` public is all that's needed for users to be able to explicitly define the order of multiple extensions.\r\n\r\n---\r\n\r\nBased on https://github.com/testcontainers/testcontainers-java/pull/887#issuecomment-447815105 and https://github.com/testcontainers/testcontainers-java/pull/887#issuecomment-447818414.", "url": "https://github.com/testcontainers/testcontainers-java/issues/1017", "user": "jrehwaldt", "labels": ["resolution/pr-submitted", "type/bug"], "created": "2018-12-18 08:05:38", "closed": "2018-12-21 08:25:18", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "ElasticsearchContainer doesn't implement generics for GenericContainer methods", "body": "Versions used:\r\n- **testcontainers**: `1.10.0`\r\n- **Elasticsearch**: `5.5.3`\r\n\r\n**Error:** `No signature of method: static org.elasticsearch.client.RestClient.builder() is applicable for argument types: (org.testcontainers.shaded.org.apache.http.HttpHost)`\r\n\r\nIn the following code, `container.getHost()` is not usable in the Elasticsearch `RestClient.builder(...)` because you are using a shaded dependency:\r\n\r\n`org.testcontainers.shaded.org.apache.http.HttpHost`\r\n\r\nOf course, I could just do as I was before `1.10.0` and `ElasticsearchContainer`:\r\n\r\n```\r\nHttpHost host = new HttpHost(\r\n  container.getContainerIpAddress(),\r\n  container.getMappedPort(9200)\r\n)\r\n```\r\n\r\nThis defeats the utility of your new module and the `getHost()` method and forces me to assume the default port set by `ElasticsearchContainer`.\r\n\r\n```groovy\r\nimport org.elasticsearch.client.RestClient\r\nimport org.springframework.beans.factory.annotation.Value\r\nimport org.springframework.boot.test.context.TestConfiguration\r\nimport org.springframework.context.annotation.Bean\r\nimport org.springframework.context.annotation.DependsOn\r\nimport org.springframework.context.annotation.Profile\r\nimport org.testcontainers.elasticsearch.ElasticsearchContainer\r\nimport org.testcontainers.shaded.org.apache.http.HttpHost\r\n\r\n@Profile(\"integration\")\r\n@TestConfiguration\r\nclass IntegrationTestConfig {\r\n\r\n  @Value('${elasticsearch.version}')\r\n  String esVersion\r\n\r\n  @Bean(name = 'esContainer', initMethod = 'start', destroyMethod = 'stop')\r\n  ElasticsearchContainer esContainer() {\r\n    String dockerImageName = \"docker.elastic.co/elasticsearch/elasticsearch:${esVersion}\"\r\n    ElasticsearchContainer container = new ElasticsearchContainer(dockerImageName)\r\n    return container\r\n  }\r\n\r\n  @Bean(destroyMethod = 'close')\r\n  @DependsOn('esContainer')\r\n  RestClient restClient() {\r\n    ElasticsearchContainer container = esContainer()\r\n    HttpHost host = container.getHost()\r\n    RestClient restClient = RestClient.builder(host).setPathPrefix('/').build()\r\n    return restClient\r\n  }\r\n}\r\n```\r\nI will also point out that I do not have the ability to supply additional configuration with `ElasticsearchContainer` as you might expect or want:\r\n\r\nIf I attempt to extend the container configuration with `.withEnv(\"ES_JAVA_OPTS\", \"-Xms1g -Xmx1g\")`, for example, I get the following problem:\r\n\r\n`Cannot assign 'GenericContainer' to 'ElasticsearchContainer'`", "url": "https://github.com/testcontainers/testcontainers-java/issues/962", "user": "forgo", "labels": ["resolution/acknowledged", "resolution/pr-submitted", "type/bug"], "created": "2018-11-07 04:19:03", "closed": "2018-11-07 22:30:12", "commits": {"867eb3011629cc650ec71177c2ef58789af052fa": {"commitGHEventType": "referenced", "commitUser": "kiview"}, "62b270d0fedbecc72de08e43501b6b05fe07a612": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "867eb3011629cc650ec71177c2ef58789af052fa", "commitGHEventType": "referenced", "commitUser": "kiview", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "62b270d0fedbecc72de08e43501b6b05fe07a612", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["53e2657d2c75d06f3295492d3b8e5874dadf8cd0"], "nameRev": "62b270d0fedbecc72de08e43501b6b05fe07a612 tags/1.10.1", "commitMessage": "Add self-typing generics to ElasticsearchContainer (#963)\n\nFixes #962", "commitDateTime": "2018-11-07 22:30:11", "authoredDateTime": "2018-11-07 23:30:11", "commitGitStats": [{"filePath": "modules/elasticsearch/src/main/java/org/testcontainers/elasticsearch/ElasticsearchContainer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ElasticsearchContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.elasticsearch.ElasticsearchContainer", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElasticsearchContainerTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.elasticsearch.ElasticsearchContainerTest.elasticsearchDefaultTest()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Elasticsearch container should not shade org.apache.http.HttpHost", "body": "Hello.\r\n\r\nI've tested elasticsearch container, but test code compile failed by shaded `org.apache.http.HttpHost`.\r\n\r\n```sh\r\n> Task :compileTestJava\r\n/elasticsearch-poc/src/test/java/ElasticsearchTest.java:15: error: no suitable method found for builder(org.testcontainers.shaded.org.apache.http.HttpHost)\r\n        RestClient client = RestClient.builder(container.getHost()).build();\r\n                                      ^\r\n    method RestClient.builder(Node...) is not applicable\r\n      (varargs mismatch; org.testcontainers.shaded.org.apache.http.HttpHost cannot be converted to Node)\r\n    method RestClient.builder(org.apache.http.HttpHost...) is not applicable\r\n      (varargs mismatch; org.testcontainers.shaded.org.apache.http.HttpHost cannot be converted to org.apache.http.HttpHost)\r\n```\r\n\r\njust for proof of concepts, i created repository showing this issue.\r\n\r\nhttps://github.com/herblover/testcontainer-elasticsearch-poc\r\n\r\nyou can reproduce uncommenting `compile files('libs/elasticsearch-jar.jar')`  in `build.gradle` file.\r\n\r\nin my test, testcontainers elasticsearch module should not shade **org.apache.http.HttpHost** related library. (in case of `./gradlew elasticsearch:jar` everything works fine. and `./gradlew elasticsearch:shadow` generated jar file fails.)\r\n\r\nthank you.", "url": "https://github.com/testcontainers/testcontainers-java/issues/958", "user": "herblover", "labels": ["resolution/acknowledged", "type/bug"], "created": "2018-11-06 06:23:51", "closed": "2018-11-06 10:26:17", "commits": {"524bd10ac4f25512cbd93aea6cbbd4a272a3a105": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "53e2657d2c75d06f3295492d3b8e5874dadf8cd0": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "524bd10ac4f25512cbd93aea6cbbd4a272a3a105", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["921726df423b1d532e85cd68571ebc357bad4ffd"], "nameRev": "524bd10ac4f25512cbd93aea6cbbd4a272a3a105 tags/1.10.1~3", "commitMessage": "Disable shading of Apache HTTP Components/Core libs (#959)\n\nFixes #958 \r\n", "commitDateTime": "2018-11-06 10:26:16", "authoredDateTime": "2018-11-06 10:26:16", "commitGitStats": [{"filePath": "build.gradle", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "circle.yml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "core/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "53e2657d2c75d06f3295492d3b8e5874dadf8cd0", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["a5ce2449d920d1fd66859c7fc3969b491d7d22c0"], "nameRev": "53e2657d2c75d06f3295492d3b8e5874dadf8cd0 tags/1.10.1~1", "commitMessage": "Reshade httphost (#964)\n\nFYI @dadoonet, relating to #958 \r\n\r\nAs httpcore is a transitive dependency that we don't want to conflict with user's libs, we unfortunately need to:\r\n\r\n* roll back #959, where we disabled the shading of this module. As is, we're at risk of internal breakage when transitive deps clash.\r\n* in turn, stop exposing `HttpHost` in our public API. We should take a general stance of keeping our public APIs free of transitive deps (especially shaded ones)\r\n\r\nThe API method in ElasticsearchContainer will thus change, from:\r\n```java\r\npublic HttpHost getHost()\r\n```\r\nto:\r\n```java\r\npublic String getHttpHostAddress()\r\n```\r\n\r\nUsage in turn changes from:\r\n```java\r\nRestClient client = RestClient.builder(container.getHost()).build();\r\n```\r\nto the slightly more verbose but equivalent:\r\n```java\r\nRestClient client = RestClient.builder(HttpHost.create(container.getHttpHostAddress())).build();\r\n```\r\n\r\n@bsideup, @kiview and I have discussed at length and concluded that this is the only approach that we're comfortable with - despite the fact that this raises an unfortunate breaking change in the API of the Elasticsearch module, which we reluctantly have to do.\r\n\r\nWe are sorry that we did not catch this particular issue at PR stage - we're going to upgrade our static analysis to guard against inadvertent leakage of shaded dependencies. In the longer term we also, obviously, wish to reduce the weight of our dependency chain, both unshaded and shaded, so that this does not happen again.\r\n\r\nWe intend for this change to go out as 1.10.1.\r\n\r\nI hope this is OK with you @dadoonet - our apologies again for not catching this before release.", "commitDateTime": "2018-11-07 21:53:19", "authoredDateTime": "2018-11-07 21:53:19", "commitGitStats": [{"filePath": "build.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/elasticsearch/src/main/java/org/testcontainers/elasticsearch/ElasticsearchContainer.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ElasticsearchContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.elasticsearch.ElasticsearchContainer.getHost()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.testcontainers.elasticsearch.ElasticsearchContainer.getHttpHostAddress()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElasticsearchContainerTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.elasticsearch.ElasticsearchContainerTest.getClient(org.testcontainers.elasticsearch.ElasticsearchContainer)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "ScriptUtils.executeDatabaseScript does not support PostgreSQL create function", "body": "The utility will fail on a PostgreSQL script, that creates a function.\r\nWhy ? Because it splits script by `;` separator into a list of invalid statements.\r\nExample:\r\n```\r\nCREATE FUNCTION jsonb_contains_any(jsonb, CHARACTER VARYING) RETURNS BOOLEAN AS $$\r\n    SELECT $1 ?| string_to_array($2, ',');\r\n$$ LANGUAGE SQL;\r\n```\r\n\r\n```\r\nFailed to execute database script from resource [\r\n...\r\n]\r\n\tat org.testcontainers.ext.ScriptUtils.executeDatabaseScript(ScriptUtils.java:276)\r\n\tat org.testcontainers.ext.ScriptUtils.executeDatabaseScript(ScriptUtils.java:214)\r\n...\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException\r\n\tat java.lang.System.arraycopy(Native Method)\r\n\tat java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:570)\r\n\tat java.lang.StringBuilder.append(StringBuilder.java:190)\r\n\tat org.postgresql.core.Parser.parseSql(Parser.java:1020)\r\n\tat org.postgresql.core.Parser.replaceProcessing(Parser.java:974)\r\n\tat org.postgresql.core.CachedQueryCreateAction.create(CachedQueryCreateAction.java:43)\r\n\tat org.postgresql.core.QueryExecutorBase.createQueryByKey(QueryExecutorBase.java:304)\r\n\tat org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:283)\r\n\tat org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:269)\r\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:265)\r\n\tat org.testcontainers.jdbc.JdbcDatabaseDelegate.execute(JdbcDatabaseDelegate.java:42)\r\n\tat org.testcontainers.delegate.AbstractDatabaseDelegate.execute(AbstractDatabaseDelegate.java:34)\r\n\tat org.testcontainers.ext.ScriptUtils.executeDatabaseScript(ScriptUtils.java:263)\r\n\t... 34 more\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/946", "user": "lwielek", "labels": ["modules/jdbc", "resolution/acknowledged", "resolution/pr-submitted", "type/bug"], "created": "2018-10-31 08:26:31", "closed": "2018-12-28 19:43:11", "commits": {}, "ttf": 58.000277777777775, "commitsDetails": []}, {"title": "PostgreSQLContainer does not honor withCommand", "body": "The postgres container does not honor `withCommand` because it is overridden in `configure()`:\r\n\r\n```\r\n    protected void configure() {\r\n\r\n        addExposedPort(POSTGRESQL_PORT);\r\n        addEnv(\"POSTGRES_DB\", databaseName);\r\n        addEnv(\"POSTGRES_USER\", username);\r\n        addEnv(\"POSTGRES_PASSWORD\", password);\r\n        setCommand(\"postgres\");\r\n    }\r\n```\r\n\r\nThis seems like it would also be a problem for several other containers using `setCommand` in `configure`, including `NginxContainer`, `BrowserWebDriverContainer`, and `VncRecordingContainer`.\r\n\r\nIn the case of `PostgreSQLContainer`, the command can just be removed, but in these other cases I'm not sure what the best behavior would be; possibly moving the default `setCommand` to the constructor or calling it whenever the container's internal configuration changes (e.g. when setting the `vncPassword`).", "url": "https://github.com/testcontainers/testcontainers-java/issues/937", "user": "kellen", "labels": ["modules/jdbc", "resolution/awaiting-release", "type/bug"], "created": "2018-10-26 16:27:05", "closed": "2019-07-24 09:34:59", "commits": {}, "ttf": 270.0002777777778, "commitsDetails": []}, {"title": "docker-credential-osxkeychain error on OS X", "body": "Getting this error with TestContainer 1.9.1 (reproduced on 1.9.0 as well)\r\n\r\n```\r\n2018-10-15 11:18:43.097 [main] ERROR o.t.s.o.z.exec.ProcessExecutor -  - Could not start process:\r\njava.io.IOException: Cannot run program \"docker-credential-osxkeychain\": error=2, No such file or directory\r\n\tat java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)\r\n\tat org.testcontainers.shaded.org.zeroturnaround.exec.ProcessExecutor.invokeStart(ProcessExecutor.java:1016)\r\n\tat org.testcontainers.shaded.org.zeroturnaround.exec.ProcessExecutor.startInternal(ProcessExecutor.java:989)\r\n\tat org.testcontainers.shaded.org.zeroturnaround.exec.ProcessExecutor.execute(ProcessExecutor.java:925)\r\n\tat org.testcontainers.utility.RegistryAuthLocator.runCredentialProgram(RegistryAuthLocator.java:323)\r\n\tat org.testcontainers.utility.RegistryAuthLocator.runCredentialProvider(RegistryAuthLocator.java:219)\r\n\tat org.testcontainers.utility.RegistryAuthLocator.authConfigUsingStore(RegistryAuthLocator.java:186)\r\n\tat org.testcontainers.utility.RegistryAuthLocator.lookupAuthConfig(RegistryAuthLocator.java:120)\r\n...\r\n```\r\nwhen revert back to 1.8.3 version - everything starts working again and I don't see this error anymore.\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/921", "user": "mobiletoly", "labels": ["help wanted", "type/bug"], "created": "2018-10-15 18:22:52", "closed": "2019-03-22 21:44:59", "commits": {"c03a22b548c972a80e8cafeaef20fe70fe7872ee": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 158.00027777777777, "commitsDetails": [{"commitHash": "c03a22b548c972a80e8cafeaef20fe70fe7872ee", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["43e971f43a87f25a75c4410d3199cf576d157c92"], "nameRev": "c03a22b548c972a80e8cafeaef20fe70fe7872ee tags/1.11.0~18", "commitMessage": "CredsStore validation for RegistryAuthLocator (#1303)\n\n ## Fixes\r\n`RegistryAuthLocator` : Add additional validation for existing key `credsStore` but empty value\r\n\r\n## Purpose\r\nDefine behaviour for RegistryAuthLocator on empty values in config\r\n\r\nOffer: \r\n - fail on empty value\r\n - ignore field with empty value & log -> return null;\r\n\r\n## Background Context\r\nCurrently experienced problems using testcontainers, I found existing issue for my problem and decided to help. \r\nPotentially, put checks for all existing `keys` with empty strings\r\n\r\n## References\r\nref: #921 ", "commitDateTime": "2019-03-18 20:18:21", "authoredDateTime": "2019-03-18 21:18:21", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/utility/RegistryAuthLocator.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/test/java/org/testcontainers/utility/RegistryAuthLocatorTest.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "core/src/test/resources/auth-config/config-with-store-empty.json", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegistryAuthLocator.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.RegistryAuthLocator.authConfigUsingStore(com.fasterxml.jackson.databind.JsonNode,java.lang.String)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "RegistryAuthLocatorTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.RegistryAuthLocatorTest.lookupAuthConfigWithCredStoreEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "starting test-containers hangs ", "body": "starting test-containers version 1.9.x sometimes hangs on server with multiple repositoris defined in config.json\r\n\r\nlog from failed attempt\r\n```\r\n10:58:01.331 [main] DEBUG org.testcontainers.utility.TestcontainersConfiguration - Testcontainers configuration overrides will be loaded from file:/var/lib/jenkins/jobs/wejit-backend-mr/workspace/target/test-classes/testcontainers.properties\r\n10:58:01.340 [main] DEBUG org.testcontainers.utility.TestcontainersConfiguration - Testcontainers configuration overrides will be loaded from file:/var/lib/jenkins/jobs/wejit-backend-mr/workspace/target/test-classes/testcontainers.properties\r\n10:58:01.340 [main] DEBUG org.testcontainers.utility.TestcontainersConfiguration - Testcontainers configuration overrides will be loaded from file:/root/.testcontainers.properties\r\n10:58:01.341 [main] DEBUG org.testcontainers.utility.TestcontainersConfiguration - Testcontainers configuration overrides loaded from TestcontainersConfiguration(properties={docker.client.strategy=org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy, ryuk.container.privileged=true})\r\n10:58:01.404 [main] INFO  org.testcontainers.dockerclient.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy from ~/.testcontainers.properties, will try it first\r\n10:58:01.531 [main] INFO  org.testcontainers.dockerclient.DockerClientProviderStrategy - Will use 'okhttp' transport\r\n10:58:02.020 [ducttape-0] DEBUG org.testcontainers.dockerclient.DockerClientProviderStrategy - Pinging docker daemon...\r\n10:58:02.547 [ducttape-0] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: org.testcontainers.dockerclient.transport.okhttp.OkHttpDockerCmdExecFactory$1@ee75499\r\n10:58:02.706 [main] INFO  org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy - Found docker client settings from environment\r\n10:58:02.726 [main] INFO  org.testcontainers.dockerclient.DockerClientProviderStrategy - Found Docker environment with Environment variables, system properties and defaults. Resolved: \r\n    dockerHost=unix:///var/run/docker.sock\r\n    apiVersion='{UNKNOWN_VERSION}'\r\n    registryUrl='https://index.docker.io/v1/'\r\n    registryUsername='root'\r\n    registryPassword='null'\r\n    registryEmail='null'\r\n    dockerConfig='DefaultDockerClientConfig[dockerHost=unix:///var/run/docker.sock,registryUsername=root,registryPassword=<null>,registryEmail=<null>,registryUrl=https://index.docker.io/v1/,dockerConfigPath=/root/.docker,sslConfig=<null>,apiVersion={UNKNOWN_VERSION},dockerConfig=<null>]'\r\n\r\n10:58:02.734 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: ListImagesCmdImpl[imageNameFilter=alpine:3.5,showAll=false,filters=com.github.dockerjava.core.util.FiltersBuilder@0,execution=com.github.dockerjava.core.exec.ListImagesCmdExec@797f97e3]\r\n10:58:02.941 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - Looking up auth config for image: alpine:3.5\r\n10:58:02.942 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - RegistryAuthLocator has configFile: /root/.docker/config.json (exists) and commandPathPrefix: \r\n10:58:02.950 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - registryName [index.docker.io] for dockerImageName [alpine:3.5]\r\n10:58:02.951 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - no matching Auth Configs - falling back to defaultAuthConfig [null]\r\n10:58:02.951 [main] DEBUG org.testcontainers.dockerclient.auth.AuthDelegatingDockerClientConfig - Effective auth config [null]\r\n10:58:02.977 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: com.github.dockerjava.core.command.CreateContainerCmdImpl@5d94ac8a[name=<null>,hostName=<null>,domainName=<null>,user=<null>,attachStdin=<null>,attachStdout=<null>,attachStderr=<null>,portSpecs=<null>,tty=<null>,stdinOpen=<null>,stdInOnce=<null>,env=<null>,cmd={sh,-c,ip route|awk '/default/ { print $3 }'},entrypoint=<null>,image=alpine:3.5,volumes=com.github.dockerjava.api.model.Volumes@2bc8caa7,workingDir=<null>,macAddress=<null>,networkDisabled=<null>,exposedPorts=com.github.dockerjava.api.model.ExposedPorts@582ea164,stopSignal=<null>,hostConfig=com.github.dockerjava.api.model.HostConfig@2fccf49e[binds=<null>,blkioWeight=<null>,blkioWeightDevice=<null>,blkioDeviceReadBps=<null>,blkioDeviceReadIOps=<null>,blkioDeviceWriteBps=<null>,blkioDeviceWriteIOps=<null>,memorySwappiness=<null>,capAdd=<null>,capDrop=<null>,containerIDFile=<null>,cpuPeriod=<null>,cpuShares=<null>,cpuQuota=<null>,cpusetCpus=<null>,cpusetMems=<null>,devices=<null>,diskQuota=<null>,dns=<null>,dnsSearch=<null>,extraHosts=<null>,links=<null>,logConfig=<null>,lxcConf=<null>,memory=<null>,memorySwap=<null>,memoryReservation=<null>,kernelMemory=<null>,networkMode=<null>,oomKillDisable=<null>,autoRemove=<null>,oomScoreAdj=<null>,portBindings=<null>,privileged=<null>,publishAllPorts=<null>,readonlyRootfs=<null>,restartPolicy=<null>,ulimits=<null>,volumesFrom=<null>,pidMode=<null>,securityOpts=<null>,cgroupParent=<null>,volumeDriver=<null>,shmSize=<null>,pidsLimit=<null>,runtime=<null>,tmpFs=<null>],labels={org.testcontainers=true, org.testcontainers.sessionId=95d81324-95d9-434e-80eb-ea96ae4137ad},networkingConfig=<null>,ipv4Address=<null>,ipv6Address=<null>,aliases=<null>,authConfig=<null>,execution=com.github.dockerjava.core.exec.CreateContainerCmdExec@31de27c]\r\n10:58:03.530 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: 5a621d03dac6ed4acc5fcb40949eba41a3066e4d7082521121307f86d207c45a,com.github.dockerjava.core.exec.StartContainerCmdExec@6d45dd4\r\n10:58:04.025 [tc-okhttp-stream-968448640] DEBUG com.github.dockerjava.core.command.LogContainerResultCallback - STDOUT: 172.17.0.1\r\n```\r\n\r\nlogs from successful attempt \r\n```\r\n10:56:13.321 [main] DEBUG org.testcontainers.utility.TestcontainersConfiguration - Testcontainers configuration overrides will be loaded from file:/var/lib/jenkins/jobs/wejit-backend-mr/workspace/target/test-classes/testcontainers.properties\r\n10:56:13.330 [main] DEBUG org.testcontainers.utility.TestcontainersConfiguration - Testcontainers configuration overrides will be loaded from file:/var/lib/jenkins/jobs/wejit-backend-mr/workspace/target/test-classes/testcontainers.properties\r\n10:56:13.330 [main] DEBUG org.testcontainers.utility.TestcontainersConfiguration - Testcontainers configuration overrides will be loaded from file:/root/.testcontainers.properties\r\n10:56:13.330 [main] DEBUG org.testcontainers.utility.TestcontainersConfiguration - Testcontainers configuration overrides loaded from TestcontainersConfiguration(properties={docker.client.strategy=org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy, ryuk.container.privileged=true})\r\n10:56:13.384 [main] INFO  org.testcontainers.dockerclient.DockerClientProviderStrategy - Loaded org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy from ~/.testcontainers.properties, will try it first\r\n10:56:13.499 [main] INFO  org.testcontainers.dockerclient.DockerClientProviderStrategy - Will use 'okhttp' transport\r\n10:56:13.873 [ducttape-0] DEBUG org.testcontainers.dockerclient.DockerClientProviderStrategy - Pinging docker daemon...\r\n10:56:14.407 [ducttape-0] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: org.testcontainers.dockerclient.transport.okhttp.OkHttpDockerCmdExecFactory$1@28ed8a8a\r\n10:56:14.579 [main] INFO  org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy - Found docker client settings from environment\r\n10:56:14.602 [main] INFO  org.testcontainers.dockerclient.DockerClientProviderStrategy - Found Docker environment with Environment variables, system properties and defaults. Resolved: \r\n    dockerHost=unix:///var/run/docker.sock\r\n    apiVersion='{UNKNOWN_VERSION}'\r\n    registryUrl='https://index.docker.io/v1/'\r\n    registryUsername='root'\r\n    registryPassword='null'\r\n    registryEmail='null'\r\n    dockerConfig='DefaultDockerClientConfig[dockerHost=unix:///var/run/docker.sock,registryUsername=root,registryPassword=<null>,registryEmail=<null>,registryUrl=https://index.docker.io/v1/,dockerConfigPath=/root/.docker,sslConfig=<null>,apiVersion={UNKNOWN_VERSION},dockerConfig=<null>]'\r\n\r\n10:56:14.610 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: ListImagesCmdImpl[imageNameFilter=alpine:3.5,showAll=false,filters=com.github.dockerjava.core.util.FiltersBuilder@0,execution=com.github.dockerjava.core.exec.ListImagesCmdExec@797f97e3]\r\n10:56:14.855 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - Looking up auth config for image: alpine:3.5\r\n10:56:14.856 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - RegistryAuthLocator has configFile: /root/.docker/config.json (exists) and commandPathPrefix: \r\n10:56:14.871 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - registryName [index.docker.io] for dockerImageName [alpine:3.5]\r\n10:56:14.872 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - no matching Auth Configs - falling back to defaultAuthConfig [null]\r\n10:56:14.873 [main] DEBUG org.testcontainers.dockerclient.auth.AuthDelegatingDockerClientConfig - Effective auth config [null]\r\n10:56:14.906 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: com.github.dockerjava.core.command.CreateContainerCmdImpl@5d94ac8a[name=<null>,hostName=<null>,domainName=<null>,user=<null>,attachStdin=<null>,attachStdout=<null>,attachStderr=<null>,portSpecs=<null>,tty=<null>,stdinOpen=<null>,stdInOnce=<null>,env=<null>,cmd={sh,-c,ip route|awk '/default/ { print $3 }'},entrypoint=<null>,image=alpine:3.5,volumes=com.github.dockerjava.api.model.Volumes@2bc8caa7,workingDir=<null>,macAddress=<null>,networkDisabled=<null>,exposedPorts=com.github.dockerjava.api.model.ExposedPorts@582ea164,stopSignal=<null>,hostConfig=com.github.dockerjava.api.model.HostConfig@2fccf49e[binds=<null>,blkioWeight=<null>,blkioWeightDevice=<null>,blkioDeviceReadBps=<null>,blkioDeviceReadIOps=<null>,blkioDeviceWriteBps=<null>,blkioDeviceWriteIOps=<null>,memorySwappiness=<null>,capAdd=<null>,capDrop=<null>,containerIDFile=<null>,cpuPeriod=<null>,cpuShares=<null>,cpuQuota=<null>,cpusetCpus=<null>,cpusetMems=<null>,devices=<null>,diskQuota=<null>,dns=<null>,dnsSearch=<null>,extraHosts=<null>,links=<null>,logConfig=<null>,lxcConf=<null>,memory=<null>,memorySwap=<null>,memoryReservation=<null>,kernelMemory=<null>,networkMode=<null>,oomKillDisable=<null>,autoRemove=<null>,oomScoreAdj=<null>,portBindings=<null>,privileged=<null>,publishAllPorts=<null>,readonlyRootfs=<null>,restartPolicy=<null>,ulimits=<null>,volumesFrom=<null>,pidMode=<null>,securityOpts=<null>,cgroupParent=<null>,volumeDriver=<null>,shmSize=<null>,pidsLimit=<null>,runtime=<null>,tmpFs=<null>],labels={org.testcontainers=true, org.testcontainers.sessionId=718c7e37-bc40-48d3-adca-3976aa7459c8},networkingConfig=<null>,ipv4Address=<null>,ipv6Address=<null>,aliases=<null>,authConfig=<null>,execution=com.github.dockerjava.core.exec.CreateContainerCmdExec@31de27c]\r\n10:56:15.519 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: 57f7356d26280a7b0ae72c3297a05359b596751d7054991b3373f2f6facfd449,com.github.dockerjava.core.exec.StartContainerCmdExec@6d45dd4\r\n10:56:15.959 [tc-okhttp-stream-968448640] DEBUG com.github.dockerjava.core.command.LogContainerResultCallback - STDOUT: 172.17.0.1\r\n10:56:15.967 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: 57f7356d26280a7b0ae72c3297a05359b596751d7054991b3373f2f6facfd449,true,true,com.github.dockerjava.core.exec.RemoveContainerCmdExec@31a4db4f\r\n10:56:16.222 [main] INFO  org.testcontainers.DockerClientFactory - Docker host IP address is 172.17.0.1\r\n10:56:16.224 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: com.github.dockerjava.core.exec.InfoCmdExec@691eb389\r\n10:56:16.386 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: com.github.dockerjava.core.exec.VersionCmdExec@1adfb5b8\r\n10:56:16.392 [main] INFO  org.testcontainers.DockerClientFactory - Connected to docker: \r\n  Server Version: 1.12.6\r\n  API Version: 1.24\r\n  Operating System: CentOS Linux 7 (Core)\r\n  Total Memory: 32012 MB\r\n10:56:16.396 [main] DEBUG com.github.dockerjava.core.command.AbstrDockerCmd - Cmd: ListImagesCmdImpl[imageNameFilter=quay.io/testcontainers/ryuk:0.2.2,showAll=false,filters=com.github.dockerjava.core.util.FiltersBuilder@0,execution=com.github.dockerjava.core.exec.ListImagesCmdExec@364c93e6]\r\n10:56:16.454 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - Looking up auth config for image: quay.io/testcontainers/ryuk:0.2.2\r\n10:56:16.454 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - RegistryAuthLocator has configFile: /root/.docker/config.json (exists) and commandPathPrefix: \r\n10:56:16.455 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - registryName [quay.io] for dockerImageName [quay.io/testcontainers/ryuk:0.2.2]\r\n10:56:16.455 [main] DEBUG org.testcontainers.utility.RegistryAuthLocator - no matching Auth Configs - falling back to defaultAuthConfig [null]\r\n10:56:16.455 [main] DEBUG org.testcontainers.dockerclient.auth.AuthDelegatingDockerClientConfig - Effective auth config [null]\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/908", "user": "kamkie", "labels": ["type/bug"], "created": "2018-10-10 10:59:56", "closed": "2019-03-31 07:41:37", "commits": {}, "ttf": 171.00027777777777, "commitsDetails": []}, {"title": "HttpWaitStrategy.forStatusCodeMatching always expect 200 code", "body": "I did a mistake while implementing #630.\r\n\r\nWe have by default this predicate:\r\n\r\n```java\r\n    private Predicate<Integer> statusCodePredicate = responseCode -> {\r\n        // If we did not provide any status code, we assume by default HttpURLConnection.HTTP_OK\r\n        if (statusCodes.isEmpty() && HttpURLConnection.HTTP_OK == responseCode) return true;\r\n        return statusCodes.contains(responseCode);\r\n    };\r\n```\r\n\r\nThen we test the status code using:\r\n\r\n```java\r\n    public HttpWaitStrategy forStatusCodeMatching(Predicate<Integer> statusCodePredicate) {\r\n        this.statusCodePredicate = this.statusCodePredicate.or(statusCodePredicate);\r\n        return this;\r\n    }\r\n```\r\n\r\nThis means that code 200 is always considered as a \"good\" status code.\r\nWhere I'd expect the developper to provide it explicitly.\r\n\r\nI mean that:\r\n\r\n```java\r\nnew HttpWaitStrategy().forStatusCodeMatching(response -> response == HTTP_UNAUTHORIZED);\r\n```\r\n\r\nShould only match `HTTP_UNAUTHORIZED` and not `HTTP_OK`.\r\n\r\nI'll come with a fix.", "url": "https://github.com/testcontainers/testcontainers-java/issues/880", "user": "dadoonet", "labels": ["type/bug"], "created": "2018-09-24 14:59:54", "closed": "2018-09-25 08:07:34", "commits": {"ef9b592d95d7ccd3ab024833f7875ec53a8d11ff": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ef9b592d95d7ccd3ab024833f7875ec53a8d11ff", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["e13f7817818aabbf7bd241ff956d8f1f5eefcca3"], "nameRev": "ef9b592d95d7ccd3ab024833f7875ec53a8d11ff tags/1.9.1~1", "commitMessage": "Fix HttpWaitStrategy.forStatusCodeMatching used with HttpWaitStrategy.forStatusCode (#881)\n\nIn #630 we introduced predicates but with a default one which is always present whatever is passed in the `forStatusCodeMatching()` method.\r\n\r\nThis commit adds a test that demonstrates the issue:\r\n\r\n* We have a service returning `200 OK`\r\n* The predicate expects anything which is a code >= to `300`\r\n* The test should throw a Timeout as this condition is never reached but without the current fix, the test never throws the Timeout as 200 matches the default builtin predicate.\r\n\r\nThis commit fixes the problem by checking at startup time what is/are the predicates that needs to be applied.\r\n\r\nNote that in most cases, an HTTP service is expected to throw a `200 OK` status so that fix might not fix actually any real problem and might be a theory only. But I'd prefer to have code that actually implements what is supposed to work.\r\n\r\nCloses #880.", "commitDateTime": "2018-09-25 09:07:34", "authoredDateTime": "2018-09-25 10:07:34", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "insertions": 18, "deletions": 7, "lines": 25}, {"filePath": "core/src/test/java/org/testcontainers/junit/wait/strategy/HttpWaitStrategyTest.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpWaitStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.strategy.HttpWaitStrategy", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.containers.wait.strategy.HttpWaitStrategy.forStatusCodeMatching(java.util.function.Predicate)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.containers.wait.strategy.HttpWaitStrategy.waitUntilReady()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpWaitStrategyTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.wait.strategy.HttpWaitStrategyTest.testWaitUntilReadyWithTimeoutAndWithLambdaShouldNotMatchOk()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Using BouncyCastle results in 'testcontainers-1.7.3.jar has unsigned entries'", "body": "Hi there\r\n\r\n### Versions\r\n- JDK 8u181\r\n- testconainers:1.8.3\r\n- BouncyCastle:1.58 | bcprov-jdk15on (my project dependency)\r\n- Maven 3.5.2\r\n\r\n### Problem\r\nAfter adding/using testconainers:1.8.3 to existing tests I get:\r\n```java.util.jar.JarException``` w.r.t. ```testcontainers-1.7.3.jar has unsigned entries - org/testcontainers/utility/DockerLoggerFactory.class```.\r\n\r\n### Cause\r\n\r\n#### Short\r\nWhen executing a test using BouncyCastle:1.58 after having executed a test using testcontainers:1.8.3 the ```java.util.jar.JarException``` is thrown.\r\n\r\n#### Long\r\nThis happens when I execute an existing test which exercises code that encrypts and decrypts some data using the BouncyCastle:1.58 library's PGP implementation. Whereas my implementation requires the BouncyCastle provider ```org.bouncycastle.jce.provider.BouncyCastleProvider```.\r\nThe corresponding test doesn't depend on testcontainers, and executing it alone works.\r\n\r\nNow, when that test is run after another test which uses testconstainers:1.8.3 the ```java.util.jar.JarException``` is thrown (see shortened sample stacktrace below for reference).\r\n\r\n### \"Analysis\" (my guess)\r\nThe testcontainers-1.7.3.jar (testconainers:1.8.3 seems to depend on it) shaded in the BouncyCastle library (version 1.54D).\r\n***My guess: Shading it in resulted in either stripped off or invalid signatures.*** (Because of [Stackoverflow](https://stackoverflow.com/a/13726570)).\r\n\r\n### Workaround\r\nI found that no code change to my tests could resolve the problem. In particular, I tried ```Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider());```.\r\n\r\nI also couldn't find a way to somehow exclude the ```testcontainers-1.7.3.jar``` from the testcontainers:1.8.3 Maven dependency.\r\n\r\n***What resolved the problem for me was adding*** ```security.provider.11=org.bouncycastle.jce.provider.BouncyCastleProvider```\r\nto the used JDK 8, ```/jre/lib/security/java.security```.\r\n\r\n### Wish\r\nI'd be cool if adding testconainers would not conflict with any existing use of BouncyCastle in a project.\r\nOr it'd be clear what needs to be adapted in such a project to make them work side-by-side without changing the ```java.security``` configuration of the Java installation.\r\n\r\n##### Proposed solution\r\nInstead of shading in the BouncyCastle library make it a dependency, so that it can be excluded in a Maven build. I'd imagine something like\r\n```\r\n        <dependency>\r\n            <groupId>org.testcontainers</groupId>\r\n            <artifactId>testcontainers</artifactId>\r\n            <version>${testcontainers.version}</version>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <groupId>org.bouncycastle</groupId>\r\n                    <artifactId>bcprov-jdk15on</artifactId>\r\n                </exclusion>\r\n            </exclusions>\r\n            <scope>test</scope>\r\n        </dependency>\r\n```\r\nThere may be better approaches, but I don't see them.\r\n\r\n### Stacktrace\r\n```\r\norg.bouncycastle.openpgp.PGPException: Exception decrypting key\r\n\r\nCaused by: org.bouncycastle.openpgp.PGPException: Exception decrypting key\r\n\tat org.bouncycastle.openpgp.PGPSecretKey.extractKeyData(Unknown Source)\r\n\tat org.bouncycastle.openpgp.PGPSecretKey.extractPrivateKey(Unknown Source)\r\n\t... 34 more\r\nCaused by: java.lang.SecurityException: JCE cannot authenticate the provider BC\r\n\tat javax.crypto.Cipher.getInstance(Cipher.java:656)\r\n\tat javax.crypto.Cipher.getInstance(Cipher.java:595)\r\n\tat org.bouncycastle.jcajce.util.NamedJcaJceHelper.createCipher(Unknown Source)\r\n\tat org.bouncycastle.openpgp.operator.jcajce.OperatorHelper.createCipher(Unknown Source)\r\n\tat org.bouncycastle.openpgp.operator.jcajce.JcePBESecretKeyDecryptorBuilder$1.recoverKeyData(Unknown Source)\r\n\t... 37 more\r\nCaused by: java.util.jar.JarException: file:/C:/Users/user/.m2/repository/org/testcontainers/testcontainers/1.7.3/testcontainers-1.7.3.jar has unsigned entries - org/testcontainers/utility/DockerLoggerFactory.class\r\n\tat javax.crypto.JarVerifier.verifySingleJar(JarVerifier.java:502)\r\n\tat javax.crypto.JarVerifier.verifyJars(JarVerifier.java:363)\r\n\tat javax.crypto.JarVerifier.verify(JarVerifier.java:289)\r\n\tat javax.crypto.JceSecurity.verifyProviderJar(JceSecurity.java:164)\r\n\tat javax.crypto.JceSecurity.getVerificationResult(JceSecurity.java:190)\r\n\tat javax.crypto.Cipher.getInstance(Cipher.java:652)\r\n\t... 41 more\r\n```\r\n\r\nCheers,\r\nYves", "url": "https://github.com/testcontainers/testcontainers-java/issues/839", "user": "incyg", "labels": ["area/shading", "resolution/acknowledged", "type/bug"], "created": "2018-08-17 09:17:30", "closed": "2018-09-27 09:30:23", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "Broken Pipe when sending label to ryuk container", "body": "In some cases I get this error when trying to make java integration tests with mysql.\r\nThis only happens on our teamcity server with debian jessie. \r\n\r\nTeamcity calls the task `gradle test`\r\n\r\nThis is the output\r\n\r\n`2018-07-11 17:43:54.346 DEBUG   --- [    Test worker] o.t.utility.TestcontainersConfiguration  : Testcontainers configuration overrides loaded from TestcontainersConfiguration(properties={docker.client.strategy=org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy, ryuk.container.timeout=90})\r\n2018-07-11 17:43:54.380  INFO   --- [    Test worker] o.t.d.DockerClientProviderStrategy       : Loaded org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy from ~/.testcontainers.properties, will try it first\r\n2018-07-11 17:43:54.412  INFO   --- [    Test worker] o.t.d.DockerClientProviderStrategy       : Will use 'netty' transport\r\n2018-07-11 17:43:55.424  INFO   --- [    Test worker] tAndSystemPropertyClientProviderStrategy : Found docker client settings from environment\r\n2018-07-11 17:43:55.452  INFO   --- [    Test worker] o.t.d.DockerClientProviderStrategy       : Found Docker environment with Environment variables, system properties and defaults. Resolved: \r\n    dockerHost=unix:///var/run/docker.sock\r\n    apiVersion='{UNKNOWN_VERSION}'\r\n    registryUrl='https://index.docker.io/v1/'\r\n    registryUsername='teamcity'\r\n    registryPassword='null'\r\n    registryEmail='null'\r\n    dockerConfig='DefaultDockerClientConfig[dockerHost=unix:///var/run/docker.sock,registryUsername=teamcity,registryPassword=<null>,registryEmail=<null>,registryUrl=https://index.docker.io/v1/,dockerConfigPath=/home/teamcity/.docker,sslConfig=<null>,apiVersion={UNKNOWN_VERSION},dockerConfig=<null>]'\r\n\r\n2018-07-11 17:43:55.455  INFO   --- [    Test worker] org.testcontainers.DockerClientFactory   : Docker host IP address is localhost\r\n2018-07-11 17:43:56.072  INFO   --- [    Test worker] org.testcontainers.DockerClientFactory   : Connected to docker: \r\n  Server Version: 18.03.1-ce\r\n  API Version: 1.37\r\n  Operating System: Debian GNU/Linux 8 (jessie)\r\n  Total Memory: 15773 MB\r\n2018-07-11 17:43:56.192 DEBUG   --- [    Test worker] o.testcontainers.utility.MountableFile   : Copying classpath resource(s) from jar:file:/home/teamcity/.gradle/caches/modules-2/files-2.1/org.testcontainers/testcontainers/1.8.0/bc413912f7044f9f12aa0782853aef0a067ee52a/testcontainers-1.8.0.jar!/org/testcontainers/utility/ResourceReaper.class to /tmp/.testcontainers-tmp-4999372261342671633 to permit Docker to bind\r\n2018-07-11 17:43:56.193 DEBUG   --- [    Test worker] o.testcontainers.utility.MountableFile   : Copying resource org/testcontainers/utility/ResourceReaper.class from JAR file /home/teamcity/.gradle/caches/modules-2/files-2.1/org.testcontainers/testcontainers/1.8.0/bc413912f7044f9f12aa0782853aef0a067ee52a/testcontainers-1.8.0.jar\r\n2018-07-11 17:44:08.056 TRACE   --- [    Test worker] org.testcontainers.utility.AuditLogger   : START action with image: null, containerId: 93ab21705ef235522090263413115e36ad5ed52f3bca2c74b2b49065cf04951e\r\n2018-07-11 17:44:08.181 DEBUG   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Sending 'label=org.testcontainers%3Dtrue&label=org.testcontainers.sessionId%3D4b81df97-9d4d-444d-be99-42b4c7f26904' to Ryuk\r\n2018-07-11 17:44:08.182  WARN   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Can not connect to Ryuk at localhost:32772\r\n\r\njava.net.SocketException: Broken pipe (Write failed)\r\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\r\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)\r\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:132)\r\n\tat org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n2018-07-11 17:44:08.183 DEBUG   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Sending 'label=org.testcontainers%3Dtrue&label=org.testcontainers.sessionId%3D4b81df97-9d4d-444d-be99-42b4c7f26904' to Ryuk\r\n2018-07-11 17:44:08.184  WARN   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Can not connect to Ryuk at localhost:32772\r\n\r\njava.net.SocketException: Broken pipe (Write failed)\r\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\r\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)\r\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:132)\r\n\tat org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n2018-07-11 17:44:08.185 DEBUG   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Sending 'label=org.testcontainers%3Dtrue&label=org.testcontainers.sessionId%3D4b81df97-9d4d-444d-be99-42b4c7f26904' to Ryuk\r\n2018-07-11 17:44:08.185  WARN   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Can not connect to Ryuk at localhost:32772\r\n\r\njava.net.SocketException: Broken pipe (Write failed)\r\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\r\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)\r\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:132)\r\n\tat org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n2018-07-11 17:44:08.186 DEBUG   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Sending 'label=org.testcontainers%3Dtrue&label=org.testcontainers.sessionId%3D4b81df97-9d4d-444d-be99-42b4c7f26904' to Ryuk\r\n2018-07-11 17:44:08.187  WARN   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Can not connect to Ryuk at localhost:32772\r\n\r\njava.net.SocketException: Broken pipe (Write failed)\r\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\r\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)\r\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:132)\r\n\tat org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n2018-07-11 17:44:08.187 DEBUG   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Sending 'label=org.testcontainers%3Dtrue&label=org.testcontainers.sessionId%3D4b81df97-9d4d-444d-be99-42b4c7f26904' to Ryuk\r\n2018-07-11 17:44:08.188  WARN   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Can not connect to Ryuk at localhost:32772\r\n\r\njava.net.SocketException: Broken pipe (Write failed)\r\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\r\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)\r\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:132)\r\n\tat org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n2018-07-11 17:44:08.188 DEBUG   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Sending 'label=org.testcontainers%3Dtrue&label=org.testcontainers.sessionId%3D4b81df97-9d4d-444d-be99-42b4c7f26904' to Ryuk\r\n2018-07-11 17:44:08.189  WARN   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Can not connect to Ryuk at localhost:32772\r\n\r\njava.net.SocketException: Broken pipe (Write failed)\r\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\r\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)\r\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:132)\r\n\tat org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n2018-07-11 17:44:08.189 DEBUG   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Sending 'label=org.testcontainers%3Dtrue&label=org.testcontainers.sessionId%3D4b81df97-9d4d-444d-be99-42b4c7f26904' to Ryuk\r\n2018-07-11 17:44:08.189  WARN   --- [containers-ryuk] o.testcontainers.utility.ResourceReaper  : Can not connect to Ryuk at localhost:32772\r\n\r\njava.net.SocketException: Broken pipe (Write failed)\r\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\r\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)\r\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:132)\r\n\tat org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)`\r\n\r\nI have already increased the timeout in the container.properties: `ryuk.container.timeout=90`", "url": "https://github.com/testcontainers/testcontainers-java/issues/780", "user": "thorstenwitt", "labels": ["resolution/pr-submitted", "type/bug"], "created": "2018-07-12 08:26:36", "closed": "2018-10-01 09:36:19", "commits": {}, "ttf": 81.00027777777778, "commitsDetails": []}, {"title": "Tests are failing on elasticsearch module after upgrade to 1.7 or 1.8", "body": "I just try to upgrade my project from 1.6.0 to 1.7 and 1.8 but this is failing my tests. And I'm not sure why.\r\n\r\nHere is my branch: https://github.com/dadoonet/testcontainers-java-module-elasticsearch/tree/pr/tc-1.8.0 and the associated PR https://github.com/dadoonet/testcontainers-java-module-elasticsearch/pull/34/\r\n\r\nWhen changing this line: https://github.com/dadoonet/testcontainers-java-module-elasticsearch/blob/pr/tc-1.8.0/pom.xml#L21 from\r\n\r\n```xml\r\n<testcontainer.version>1.6.0</testcontainer.version>\r\n```\r\n\r\nto \r\n\r\n```xml\r\n<testcontainer.version>1.7.3</testcontainer.version>\r\n```\r\n\r\nor\r\n\r\n```xml\r\n<testcontainer.version>1.8.0</testcontainer.version>\r\n```\r\n\r\nAnd then run `mvn clean install`, I'm getting some errors in tests:\r\n\r\n```\r\nfr.pilato.elasticsearch.containers.ElasticsearchResourceWithPluginsTest  Time elapsed: 28.462 sec  <<< ERROR!\r\norg.testcontainers.containers.ContainerLaunchException: Container startup failed\r\n        at org.testcontainers.containers.GenericContainer.start(GenericContainer.java:214)\r\n        at fr.pilato.elasticsearch.containers.ElasticsearchResource.before(ElasticsearchResource.java:166)\r\n        at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46)\r\n        at org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:564)\r\n        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\r\n        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\r\n        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\r\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\r\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\r\nCaused by: org.testcontainers.containers.ContainerFetchException: Can't get Docker image: org.testcontainers.images.builder.ImageFromDockerfile@53667cbe\r\n        at org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:841)\r\n        at org.testcontainers.containers.GenericContainer.logger(GenericContainer.java:311)\r\n        at org.testcontainers.containers.GenericContainer.start(GenericContainer.java:203)\r\n        ... 16 more\r\nCaused by: com.github.dockerjava.api.exception.DockerClientException: Could not build image\r\n        at com.github.dockerjava.core.command.BuildImageResultCallback.getImageId(BuildImageResultCallback.java:76)\r\n        at com.github.dockerjava.core.command.BuildImageResultCallback.awaitImageId(BuildImageResultCallback.java:51)\r\n        at org.testcontainers.images.builder.ImageFromDockerfile.resolve(ImageFromDockerfile.java:141)\r\n        at org.testcontainers.images.builder.ImageFromDockerfile.resolve(ImageFromDockerfile.java:30)\r\n        at org.testcontainers.utility.LazyFuture.getResolvedValue(LazyFuture.java:20)\r\n        at org.testcontainers.utility.LazyFuture.get(LazyFuture.java:27)\r\n        at org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:839)\r\n        ... 18 more\r\n```\r\n\r\nReverting to 1.6.0 and all tests are OK again. \r\n\r\nAlso another side effect is about logger. I might be missing some pieces as I'm now having:\r\n\r\n```\r\nlog4j:WARN No appenders could be found for logger (org.apache.http.impl.nio.client.MainClientExec).\r\nlog4j:WARN Please initialize the log4j system properly.\r\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\r\n```\r\n\r\nI tried various things like adding log4j 1 lib as one of first dependencies with no luck.\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/754", "user": "dadoonet", "labels": ["resolution/acknowledged", "type/bug"], "created": "2018-06-15 05:22:46", "closed": "2018-07-31 09:55:51", "commits": {}, "ttf": 46.000277777777775, "commitsDetails": []}, {"title": "log4j in the classpath", "body": "Not a problem with version 1.7.2, but 1.7.3 and 1.8.0 bring in org.rnorth:tcp-unix-socket-proxy:1.0.2 which indirectly drags in log4j.  Here's how (via `$ gradle dependencies`)\r\n```\r\n     +--- org.rnorth:tcp-unix-socket-proxy:1.0.2\r\n     |    +--- com.kohlschutter.junixsocket:junixsocket-native-common:2.0.4\r\n     |    |    +--- com.kohlschutter.junixsocket:junixsocket-common:2.0.4\r\n     |    |    |    \\--- log4j:log4j:1.2.17\r\n     |    |    +--- org.scijava:native-lib-loader:2.0.2\r\n     |    |    \\--- log4j:log4j:1.2.17\r\n     |    +--- com.kohlschutter.junixsocket:junixsocket-common:2.0.4 (*)\r\n```\r\njunixsocket has already fixed the problem [here](https://github.com/kohlschutter/junixsocket/pull/12), but I'm pretty sure no version 2.0.5 has been released.  I asked [awhile ago](https://github.com/kohlschutter/junixsocket/issues/38), but no dice.\r\n\r\nThis creates a classpath conflict for me because slf4j (really log4j-over-slf4j) and log4j both contain e.g. org/apache/log4j/Appender.class.\r\n\r\nI can exclude log4j myself but here maybe might be better because we use slf4j here.", "url": "https://github.com/testcontainers/testcontainers-java/issues/753", "user": "dbyron0", "labels": ["resolution/acknowledged", "type/bug"], "created": "2018-06-14 22:05:44", "closed": "2018-07-12 07:43:38", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "InternalCommandPortListeningCheck not working when linux kernel lists ports as hexadecimal", "body": "Kernel details:\r\nLinux jenkins-v2 3.10.0-693.21.1.el7.x86_64 #1 SMP Fri Feb 23 18:54:16 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nCommand that should fix the issue:\r\n`{\"/bin/sh\", \"-c\", format(\"cat /proc/net/tcp6 | awk \u2018{print $2}\u2019 | awk --non-decimal-data -F: \u2018{print (\u201c0x\u201d$2)+0}\u2019 | grep -i %x && echo %s\", internalPort, SUCCESS_MARKER)}`\r\n\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/749", "user": "stevewoodsdd", "labels": ["resolution/acknowledged", "type/bug"], "created": "2018-06-13 15:31:55", "closed": "2018-06-19 13:08:33", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Cannot Use testcontainers with Isolated Containers", "body": "I do have a docker setup, [providing container isolation with a user namespace](https://docs.docker.com/engine/security/userns-remap/). Following configuration:\r\n\r\n`/etc/docker/daemon.json`\r\n```json\r\n{\r\n    \"userns-remap\": \"default\"\r\n}\r\n```\r\n\r\n`/etc/subuid`\r\n```\r\ndockremap:1476256:65536\r\n```\r\n\r\n`/etc/subgid`\r\n```\r\ndockremap:1476256:65536\r\n```\r\n\r\nWhen I use `mvn test` which tries to start containers, I get following error (cannot connect to Ryuk): \r\n\r\n```\r\n[main] INFO org.testcontainers.DockerClientFactory - Docker host IP address is localhost\r\n[main] INFO org.testcontainers.DockerClientFactory - Connected to docker: \r\n  Server Version: 18.05.0-ce\r\n  API Version: 1.37\r\n  Operating System: Arch Linux\r\n  Total Memory: 3948 MB\r\n[testcontainers-ryuk] WARN org.testcontainers.utility.ResourceReaper - Can not connect to Ryuk at localhost:32770\r\njava.net.ConnectException: Verbindungsaufbau abgelehnt (Connection refused)\r\n        at java.net.PlainSocketImpl.socketConnect(Native Method)\r\n        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n        at java.net.Socket.connect(Socket.java:589)\r\n        at java.net.Socket.connect(Socket.java:538)\r\n        at java.net.Socket.<init>(Socket.java:434)\r\n        at java.net.Socket.<init>(Socket.java:211)\r\n        at org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:119)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n[testcontainers-ryuk] WARN org.testcontainers.utility.ResourceReaper - Can not connect to Ryuk at localhost:32770\r\njava.net.ConnectException: Verbindungsaufbau abgelehnt (Connection refused)\r\n        at java.net.PlainSocketImpl.socketConnect(Native Method)\r\n        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n        at java.net.Socket.connect(Socket.java:589)\r\n        at java.net.Socket.connect(Socket.java:538)\r\n        at java.net.Socket.<init>(Socket.java:434)\r\n        at java.net.Socket.<init>(Socket.java:211)\r\n        at org.testcontainers.utility.ResourceReaper.lambda$start$2(ResourceReaper.java:119)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nI assume that the [ryuk container](https://github.com/testcontainers/testcontainers-java/blob/aca9a935b85710824bd1e293da1dc64cd4a881c0/core/src/main/java/org/testcontainers/utility/ResourceReaper.java#L90) must be started with the command line option `--userns=host` (docker ignores user namespaces). \r\n\r\nIs it possible to integrate this commandline option?", "url": "https://github.com/testcontainers/testcontainers-java/issues/712", "user": "schrieveslaach", "labels": ["os/linux", "type/bug"], "created": "2018-05-29 10:04:07", "closed": "2018-12-15 16:22:51", "commits": {}, "ttf": 200.00027777777777, "commitsDetails": []}, {"title": "Not working in Bitbucket pipeline: \"authorization denied by plugin pipelines: Command not supported.\"", "body": "It seems to be both docker and testcontainers issue:\r\n```\r\nRunning name.antonsmirnov.apptogether.dao.DeveloperDaoTest\r\n08:08:56.040 [main] INFO  EnvironmentAndSystemPropertyClientProviderStrategy - Found docker client settings from environment\r\n08:08:56.060 [main] INFO  DockerClientProviderStrategy - Found Docker environment with Environment variables, system properties and defaults. Resolved: \r\n    dockerHost=tcp://localhost:2375\r\n    apiVersion='{UNKNOWN_VERSION}'\r\n    registryUrl='https://index.docker.io/v1/'\r\n    registryUsername='root'\r\n    registryPassword='null'\r\n    registryEmail='null'\r\n    dockerConfig='DefaultDockerClientConfig[dockerHost=tcp://localhost:2375,registryUsername=root,registryPassword=<null>,registryEmail=<null>,registryUrl=https://index.docker.io/v1/,dockerConfigPath=/root/.docker,sslConfig=<null>,apiVersion={UNKNOWN_VERSION},dockerConfig=<null>]'\r\n\r\n08:08:56.066 [main] INFO  DockerClientFactory - Docker host IP address is localhost\r\n08:08:56.227 [main] INFO  DockerClientFactory - Connected to docker: \r\n  Server Version: 17.12.0-ce\r\n  API Version: 1.35\r\n  Operating System: Alpine Linux v3.7 (containerized)\r\n  Total Memory: 32171 MB\r\n08:08:57.182 [testcontainers-netty-1-6] ERROR ResultCallbackTemplate - Error during callback\r\ncom.github.dockerjava.api.exception.DockerException: {\"message\":\"authorization denied by plugin pipelines: Command not supported.\"}\r\n\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:111) [testcontainers-1.7.2.jar:na]\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1342) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:934) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) [testcontainers-1.7.2.jar:na]\r\n\tat org.testcontainers.shaded.io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) [testcontainers-1.7.2.jar:na]\r\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_121]\r\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 2.211 sec <<< FAILURE!\r\n```\r\n\r\nFabric docker plugin had the same issue and they were able to fix it with relatively small changes in plugin. See issues:\r\n\r\n* https://bitbucket.org/site/master/issues/15844/bug-in-authorization-plugin#comment-45553072\r\n* https://bitbucket.org/site/master/issues/15505/maven-fabric8-plugin-fails-to-run-docker\r\n\r\nThis is blocker issue and can be easily fixed.\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/700", "user": "4ntoine", "labels": ["area/bitbucket-pipelines", "resolution/acknowledged", "type/bug"], "created": "2018-05-17 06:24:09", "closed": "2019-01-30 11:58:07", "commits": {}, "ttf": 258.0002777777778, "commitsDetails": []}, {"title": "Setting ryuk.container.timeout causes a ClassCastException", "body": "Tried setting `ryuk.container.timeout` by creating a `testcontainers.properties` that contains the following:\r\n```\r\nryuk.container.timeout=120\r\n```\r\n\r\nThis is successfully picked up, but when [TestcontainersConfiguration#getRyukTimeout](https://github.com/testcontainers/testcontainers-java/blob/master/core/src/main/java/org/testcontainers/utility/TestcontainersConfiguration.java#L54) is called is calls `properties.getOrDefault`, which returns a string \"120\" which is attempted to be cast to an `Integer`. This results in the following error:\r\n\r\n```\r\njava.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer\r\n```\r\n\r\nA fix for this is to change [TestcontainersConfiguration#getRyukTimeout](https://github.com/testcontainers/testcontainers-java/blob/master/core/src/main/java/org/testcontainers/utility/TestcontainersConfiguration.java#L54) to\r\n```\r\npublic Integer getRyukTimeout() {\r\n    return Integer.parseInt((String) properties.getOrDefault(\"ryuk.container.timeout\", \"30\"));\r\n}\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/684", "user": "jamieswogger", "labels": ["type/bug"], "created": "2018-05-08 22:41:33", "closed": "2018-05-17 05:34:14", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "copyFileFromContainer returns an empty file if file permissions inside docker container don't have w for owner user", "body": "Whenever I copyFileFromContainer I always get an empty file, even though the same command using `docker cp` executes correctly.\r\n\r\nI'm not sure how to provide more information, so here goes my configuration:\r\n\r\nI have a docker image with the following start script, that generates the file server_pub.pem:\r\n```\r\nset -e\r\npd=`pwd`\r\ncd src/main/resources/\r\nopenssl ecparam -name secp256k1 -genkey -noout -out server_prv.pem\r\nopenssl ec -in server_prv.pem -pubout -out server_pub.pem\r\ncd $pd\r\njava -jar server.jar\r\n```\r\n\r\nAnd when I run outside this image the copyFileFromContainer I get an empty file:\r\n```\r\nserver = new GenericContainer(\"gennsecserver:latest\").withExposedPorts(8080).waitingFor(Wait.forHttp(\"/api/ping\"));\r\nserver.start();\r\nPath tempDirectory = Files.createTempDirectory(\"\");\r\nString targetPubKeyPath = tempDirectory.toAbsolutePath().toString() + \"/server_pub.pem\";\r\nString baseurl = \"http://\" + server.getContainerIpAddress() + \":\" + server.getMappedPort(8080);\r\nserver.copyFileFromContainer(\"/home/secserv/src/main/resources/server_pub.pem\", targetPubKeyPath);\r\n```\r\n\r\nBut if I run docker cp I get a valid file:\r\n```\r\ndocker cp 5dea99a39571:/home/secserv/src/main/resources/server_pub.pem ./\r\n```\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/681", "user": "xtrm0", "labels": ["resolution/acknowledged", "type/bug"], "created": "2018-05-03 22:32:43", "closed": "2018-08-05 06:09:00", "commits": {}, "ttf": 93.00027777777778, "commitsDetails": []}, {"title": "MySQLContainer junit Rule hangs if there is no jdbc-driver on classpath", "body": "This is clearly a user-error, but silent hanging without any errors is not an expected behavior. ", "url": "https://github.com/testcontainers/testcontainers-java/issues/678", "user": "isopov", "labels": ["modules/jdbc", "type/bug"], "created": "2018-05-02 19:02:12", "closed": "2019-07-21 09:01:38", "commits": {"ea918230355ed2e27e438ee7c89135d2e3e3d69c": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 444.0002777777778, "commitsDetails": [{"commitHash": "ea918230355ed2e27e438ee7c89135d2e3e3d69c", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "NPE when no image tag is specified", "body": "This is my current GenericContainer declaration:\r\n```java\r\n    @Shared\r\n    GenericContainer container = new GenericContainer(\"my-local-image\")\r\n            .withEnv(\"CONFLUENCE_VERSION\", \"6.8.2\")\r\n            .withExposedPorts(1990)\r\n            .waitingFor(Wait.forListeningPort())\r\n```\r\nand I get the following error:\r\n```\r\njava.lang.NullPointerException\r\n\tat org.testcontainers.utility.DockerImageName.toString(DockerImageName.java:97)\r\n\tat java.lang.String.valueOf(String.java:2994)\r\n\tat java.lang.StringBuilder.append(StringBuilder.java:131)\r\n\tat org.testcontainers.images.RemoteDockerImage.toString(RemoteDockerImage.java:25)\r\n\tat java.lang.String.valueOf(String.java:2994)\r\n\tat java.lang.StringBuilder.append(StringBuilder.java:131)\r\n\tat org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:841)\r\n\tat org.testcontainers.containers.GenericContainer.setDockerImageName(GenericContainer.java:829)\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:185)\r\n\tat com.comalatech.confluence.test.poc.PocSpec.$spock_initializeSharedFields(PocSpec.groovy:25)\r\n```\r\n\r\nFYI, the image exists locally and I am able to use it to launch containers using Docker for Mac", "url": "https://github.com/testcontainers/testcontainers-java/issues/676", "user": "aruizca", "labels": ["resolution/awaiting-release", "type/bug"], "created": "2018-05-01 17:01:21", "closed": "2018-06-13 07:49:44", "commits": {"360702aafe71abd60a9693a047b3cbe9eeb39715": {"commitGHEventType": "referenced", "commitUser": "kiview"}}, "ttf": 42.000277777777775, "commitsDetails": [{"commitHash": "360702aafe71abd60a9693a047b3cbe9eeb39715", "commitGHEventType": "referenced", "commitUser": "kiview", "commitParents": ["5cdd8dc55565d3a47aaf01f8348b73f836409c95"], "nameRev": "360702aafe71abd60a9693a047b3cbe9eeb39715 tags/1.8.0~14", "commitMessage": "Use latest tag as default if no tag is specified (#744)\n\nFixes #676 \r\n", "commitDateTime": "2018-06-13 09:49:43", "authoredDateTime": "2018-06-13 09:49:43", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/utility/DockerImageName.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/org/testcontainers/dockerclient/ImagePullTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/test/java/org/testcontainers/utility/DockerImageNameTest.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerImageName.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.DockerImageName", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ImagePullTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.ImagePullTest.parameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DockerImageNameTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.DockerImageNameTest.invalidNames()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Using DockerComposeContainer with a local image does not work", "body": "Hi there,\r\n\r\nI am just trying out TestContainers to launch a container with Atlassian Confluence inside which I know it works when using Dokcer for Mac the usual way.\r\n\r\nMy docker-compose.yml file looks like this:\r\n```YAML\r\nversion: \"3\"\r\nservices:\r\n  confluence:\r\n    image: confluence-4-testing\r\n    volumes:\r\n      - \"docker-maven-repo:/root/.m2\"\r\n    ports:\r\n      - \"1990:1990\"\r\n    networks:\r\n      - confluence-test-network\r\n    environment:\r\n      - CONFLUENCE_VERSION\r\n\r\nnetworks:\r\n  confluence-test-network:\r\n    driver: bridge\r\n\r\nvolumes:\r\n  docker-maven-repo:\r\n```\r\nplease not the image which is a local one and it is not available in any docker hub.\r\n\r\nMy TestContainer is declared as per the following sentence:\r\n```java\r\n    @Shared\r\n    DockerComposeContainer compose = new DockerComposeContainer(new File(\"docker-compose.yml\"))\r\n            .withEnv(\"CONFLUENCE_VERSION\", \"6.8.2\")\r\n            .withExposedService(\"confluence_1\",1990)\r\n            .withLocalCompose(true)\r\n            .waitingFor(\"confluence_1\", Wait.forListeningPort())\r\n```\r\nand the error I am getting is:\r\n```\r\norg.testcontainers.containers.ContainerLaunchException: Local Docker Compose exited abnormally with code 1 whilst running command: pull\r\n```\r\nIMO it should not be pulling the image remotely. As I said this work just running `docker-compose run --rm --service-ports -e CONFLUENCE_VERSION=6.8.2 confluence`\r\n\r\nThanks for your help!", "url": "https://github.com/testcontainers/testcontainers-java/issues/674", "user": "aruizca", "labels": ["area/docker-compose", "resolution/awaiting-release", "type/bug"], "created": "2018-05-01 16:39:49", "closed": "2018-07-26 09:38:46", "commits": {}, "ttf": 85.00027777777778, "commitsDetails": []}, {"title": ".start() should be idempotent", "body": "Currently, GenericContainer doesn't check if it was already started inside `.start()`", "url": "https://github.com/testcontainers/testcontainers-java/issues/667", "user": "bsideup", "labels": ["type/bug"], "created": "2018-04-27 10:59:58", "closed": "2018-10-01 12:21:49", "commits": {}, "ttf": 157.00027777777777, "commitsDetails": []}, {"title": "No value present", "body": "Hi,\r\n\r\nin my test I want to create a GenericContainer with:\r\n\r\npublic static final GenericContainer c = new GenericContainer(\"nginx:1.13-alpine\");\r\n\r\nwhen i run mvn test I get the error \r\n\r\n`by: java.util.NoSuchElementException: No value present\r\n\tat java.util.Optional.get(Optional.java:135)\r\n\tat org.testcontainers.utility.ResourceReaper.start(ResourceReaper.java:102)\r\n\tat org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:119)\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:142)`\r\n\r\nOf course i have the import\r\n\r\n`import org.testcontainers.containers.GenericContainer;`\r\n\r\nDo you have an idea how to solve this issue?\r\n\r\nI also had the error \"cannot connect to ryuk\". Now I run a moby-ryuk container, hope it solves the problem?!\r\n\r\nThank you", "url": "https://github.com/testcontainers/testcontainers-java/issues/666", "user": "HeadHunter747", "labels": ["resolution/invalid", "type/bug"], "created": "2018-04-27 09:10:06", "closed": "2018-05-22 07:54:13", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "MountableFile fails when path contains + (plus)", "body": "As seen in https://github.com/elastic/apm-agent-java/pull/57, file mounting doesn't work when path containers `+` (plus) character. It got replaced with ` ` (space)", "url": "https://github.com/testcontainers/testcontainers-java/issues/664", "user": "bsideup", "labels": ["type/bug"], "created": "2018-04-26 09:56:27", "closed": "2018-04-30 19:04:17", "commits": {"b625e62ffeeffb647f5fbe77ed644fa62ba6a33e": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "0b645e871329e319cdea8e199a7b505cefa0c2f4": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "988e16a839f98dd7956825c32037ecd3261d8217": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "b625e62ffeeffb647f5fbe77ed644fa62ba6a33e", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0b645e871329e319cdea8e199a7b505cefa0c2f4", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "988e16a839f98dd7956825c32037ecd3261d8217", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["bead0b3bbd93aeb5b53e1187ba8037b005400d21"], "nameRev": "988e16a839f98dd7956825c32037ecd3261d8217 tags/1.7.2~3", "commitMessage": "#664 Fixed handling of the paths with `+` in them (#665)\n\n", "commitDateTime": "2018-04-29 22:50:05", "authoredDateTime": "2018-04-29 22:50:05", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/testcontainers/utility/MountableFile.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/org/testcontainers/utility/MountableFileTest.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MountableFile.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.MountableFile.unencodeResourceURIToFilePath(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MountableFileTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.MountableFileTest.forHostPathWithPlus()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RemoteDockerImage does not retry when retrieval fails due to IO timeout", "body": "As discussed with @bsideup in https://github.com/spring-projects/spring-boot/issues/12821#issuecomment-384337646, `RemoteDockerImage` does not retry image retrieval when it fails due to an IO timeout. This is the failure:\r\n\r\n```\r\norg.testcontainers.containers.ContainerFetchException: Can't get Docker image: RemoteDockerImage(imageName=redis:4.0.6)\r\n\tat org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:841)\r\n\tat org.testcontainers.containers.GenericContainer.setDockerImageName(GenericContainer.java:829)\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:185)\r\n\tat org.springframework.boot.testsupport.testcontainers.Container.lambda$new$0(Container.java:53)\r\n\tat org.springframework.boot.testsupport.testcontainers.Container.apply(Container.java:70)\r\n\tat org.springframework.boot.testsupport.testcontainers.RedisContainer.apply(RedisContainer.java:27)\r\n\tat org.junit.rules.RunRules.applyAll(RunRules.java:26)\r\n\tat org.junit.rules.RunRules.<init>(RunRules.java:15)\r\n\tat org.junit.runners.ParentRunner.withClassRules(ParentRunner.java:245)\r\n\tat org.junit.runners.ParentRunner.classBlock(ParentRunner.java:194)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:362)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)\r\nCaused by: com.github.dockerjava.api.exception.InternalServerErrorException: {\"message\":\"Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker.io on 10.192.2.10:53: read udp 10.254.0.230:58499->10.192.2.10:53: i/o timeout\"}\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:109)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat org.testcontainers.shaded.io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat org.testcontainers.shaded.io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\r\n\tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat org.testcontainers.shaded.io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:997)\r\n\tat org.testcontainers.shaded.io.netty.channel.epoll.EpollDomainSocketChannel$EpollDomainUnsafe.epollInReady(EpollDomainSocketChannel.java:138)\r\n\tat org.testcontainers.shaded.io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:401)\r\n\tat org.testcontainers.shaded.io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:306)\r\n\tat org.testcontainers.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat org.testcontainers.shaded.io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/662", "user": "wilkinsona", "labels": ["type/bug"], "created": "2018-04-26 08:16:52", "closed": "2018-04-30 19:04:42", "commits": {"899235c694bc85b0d1d9cf1fa1dcae8802b3f11d": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "67cde07c401ef3f98420f9d794b574c5bf3e3845": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "899235c694bc85b0d1d9cf1fa1dcae8802b3f11d", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "67cde07c401ef3f98420f9d794b574c5bf3e3845", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["2b483067563943a99c065a668d44fffbcbabb84f"], "nameRev": "67cde07c401ef3f98420f9d794b574c5bf3e3845 tags/1.7.2~5", "commitMessage": "#662 Retry any exceptions (not just `DockerClientException`) on image pull (#663)\n\n", "commitDateTime": "2018-04-28 23:00:37", "authoredDateTime": "2018-04-28 23:00:37", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/testcontainers/images/RemoteDockerImage.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RemoteDockerImage.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.images.RemoteDockerImage.resolve()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Problem with shaded dependencies after upgrade from 1.6.0 to 1.7.1", "body": "Hi! I've just upgraded my testcontainers for postgres from 1.6.0 to 1.7.1 and there is problem with resolving commons-io and commons-lang dependencies wich are required in testcontainers.\r\nThey are shaded in build.gradle of testcontainers, so I have:\r\n\r\n`Caused by: java.lang.NoClassDefFoundError: org/apache/commons/io/IOUtils\r\n        at org.testcontainers.jdbc.ContainerDatabaseDriver.runInitScriptIfRequired(ContainerDatabaseDriver.java:234)\r\n        at org.testcontainers.jdbc.ContainerDatabaseDriver.connect(ContainerDatabaseDriver.java:158)\r\n        at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:117)\r\n        at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:123)\r\n`\r\n\r\nIf I add these deps in my pom, problem is solved.\r\n \r\nWhy are these deps shaded?", "url": "https://github.com/testcontainers/testcontainers-java/issues/656", "user": "eksd", "labels": ["area/shading", "type/bug"], "created": "2018-04-23 17:42:18", "closed": "2018-05-15 19:59:38", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Problems with maven-enforcer-plugin and testcontainers 1.7.0", "body": "I'm trying to integrate testcontainers into `janusgraph`. The build process checks the dependencies and maven-enforcer-plugin shows this error:\r\n```\r\nDependency convergence error for org.jetbrains:annotations:15.0 paths to dependency are:\r\n+-org.janusgraph:janusgraph-cassandra:0.3.0-SNAPSHOT\r\n  +-org.testcontainers:testcontainers:1.7.0\r\n    +-org.jetbrains:annotations:15.0\r\nand\r\n+-org.janusgraph:janusgraph-cassandra:0.3.0-SNAPSHOT\r\n  +-org.testcontainers:testcontainers:1.7.0\r\n    +-org.rnorth.duct-tape:duct-tape:1.0.6\r\n      +-org.jetbrains:annotations:13.0\r\n```\r\n\r\nIt would be cool to check the dependency consistency.", "url": "https://github.com/testcontainers/testcontainers-java/issues/652", "user": "farodin91", "labels": ["resolution/acknowledged", "type/bug"], "created": "2018-04-23 08:03:03", "closed": "2018-07-12 07:44:29", "commits": {"b927d7cbaaab4b7021ed85954967828549e5bdef": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "9eef9b39493664611f23cc25e12be1f572ed6b68": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 79.00027777777778, "commitsDetails": [{"commitHash": "b927d7cbaaab4b7021ed85954967828549e5bdef", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9eef9b39493664611f23cc25e12be1f572ed6b68", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["860193aa5239757f92f04dd7f6dc4a22226f1e52"], "nameRev": "9eef9b39493664611f23cc25e12be1f572ed6b68 tags/1.7.2~1", "commitMessage": "Updated docker-java to 3.1.0-rc-3, enforced `org.jetbrains:annotations:15.0` (#652) (#672)\n\n", "commitDateTime": "2018-04-30 11:17:46", "authoredDateTime": "2018-04-30 11:17:46", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/build.gradle", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Connection refused to Postgres container", "body": "I'm trying to use TestContainers with Postgres, using the sample Postgres test [here](https://github.com/testcontainers/testcontainers-java/blob/master/modules/jdbc-test/src/test/java/org/testcontainers/junit/SimplePostgreSQLTest.java) gives me connection errors.\r\n\r\nI have Docker for Mac installed, but TestContainers doesn't seem to be using that, instead it started a new docker-machine VM.\r\n\r\nI'm also confused that the test passes successfully; given the connection errors shouldn't it be failing?\r\n\r\n```\r\n[2018-04-10 12:43:46.218] INFO   [main] o.t.d.DockerMachineClientProviderStrategy -  - Found docker-machine, and will use machine named default \r\n[2018-04-10 12:43:47.050] INFO   [main] o.t.d.DockerMachineClientProviderStrategy -  - Docker daemon IP address for docker machine default is 192.168.99.100 \r\n[2018-04-10 12:43:48.441] INFO   [main] o.t.d.DockerClientProviderStrategy -  - Found Docker environment with docker-machine \r\n[2018-04-10 12:43:48.443] INFO   [main] o.t.DockerClientFactory -  - Docker host IP address is 192.168.99.100 \r\n[2018-04-10 12:43:48.684] INFO   [main] o.t.DockerClientFactory -  - Connected to docker: \r\n  Server Version: 1.11.2\r\n  API Version: 1.23\r\n  Operating System: Boot2Docker 1.11.2 (TCL 7.1); HEAD : a6645c3 - Wed Jun  1 22:59:51 UTC 2016\r\n  Total Memory: 3950 MB \r\n[2018-04-10 12:43:49.630] INFO   [main] o.t.DockerClientFactory -  - Ryuk started - will monitor and terminate Testcontainers containers on JVM exit \r\n        \u2139\ufe0e Checking the system...\r\n        \u2714 Docker version should be at least 1.6.0\r\n        \u2714 Docker environment should have more than 2GB free disk space\r\n        \u2714 File should be mountable\r\n[2018-04-10 12:43:50.202] INFO   [main] \ud83d\udc33 [postgres:latest] -  - Creating container for image: postgres:latest \r\n[2018-04-10 12:43:50.325] INFO   [main] \ud83d\udc33 [postgres:latest] -  - Starting container with ID: 024bc36f4f55be337ec8f40319f3551a7ff5342cf7753826995c8d9c07ab6975 \r\n[2018-04-10 12:43:50.657] INFO   [main] \ud83d\udc33 [postgres:latest] -  - Container postgres:latest is starting: 024bc36f4f55be337ec8f40319f3551a7ff5342cf7753826995c8d9c07ab6975 \r\n[2018-04-10 12:43:52.650] INFO   [main] \ud83d\udc33 [postgres:latest] -  - Container postgres:latest started \r\n[2018-04-10 12:43:52.656] INFO   [main] c.z.h.HikariDataSource -  - HikariPool-1 - Starting... \r\n[2018-04-10 12:43:52.766] INFO   [main] c.z.h.HikariDataSource -  - HikariPool-1 - Start completed. \r\nApr 10, 2018 12:43:52 PM org.postgresql.core.v3.ConnectionFactoryImpl log\r\nWARNING: ConnectException occurred while connecting to 192.168.99.100:32771\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.postgresql.core.PGStream.<init>(PGStream.java:69)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:158)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:452)\r\n\tat org.postgresql.Driver.connect(Driver.java:254)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:95)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:101)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:443)\r\n\tat com.zaxxer.hikari.pool.HikariPool.access$200(HikariPool.java:70)\r\n\tat com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:630)\r\n\tat com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:616)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nApr 10, 2018 12:43:52 PM org.postgresql.Driver connect\r\nSEVERE: Connection error: \r\norg.postgresql.util.PSQLException: Connection to 192.168.99.100:32771 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:247)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:452)\r\n\tat org.postgresql.Driver.connect(Driver.java:254)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:95)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:101)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:443)\r\n\tat com.zaxxer.hikari.pool.HikariPool.access$200(HikariPool.java:70)\r\n\tat com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:630)\r\n\tat com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:616)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.postgresql.core.PGStream.<init>(PGStream.java:69)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:158)\r\n\t... 16 more\r\n\r\nApr 10, 2018 12:43:53 PM org.postgresql.core.v3.ConnectionFactoryImpl log\r\nWARNING: ConnectException occurred while connecting to 192.168.99.100:32771\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.postgresql.core.PGStream.<init>(PGStream.java:69)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:158)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:452)\r\n\tat org.postgresql.Driver.connect(Driver.java:254)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:95)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:101)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:443)\r\n\tat com.zaxxer.hikari.pool.HikariPool.access$200(HikariPool.java:70)\r\n\tat com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:630)\r\n\tat com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:616)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nApr 10, 2018 12:43:53 PM org.postgresql.Driver connect\r\nSEVERE: Connection error: \r\norg.postgresql.util.PSQLException: Connection to 192.168.99.100:32771 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:247)\r\n\tat org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)\r\n\tat org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)\r\n\tat org.postgresql.Driver.makeConnection(Driver.java:452)\r\n\tat org.postgresql.Driver.connect(Driver.java:254)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:95)\r\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:101)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)\r\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)\r\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:443)\r\n\tat com.zaxxer.hikari.pool.HikariPool.access$200(HikariPool.java:70)\r\n\tat com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:630)\r\n\tat com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:616)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.postgresql.core.PGStream.<init>(PGStream.java:69)\r\n\tat org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:158)\r\n\t... 16 more\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/639", "user": "yissachar", "labels": ["area/shading", "client/docker-for-mac", "client/docker-machine", "os/macOS", "resolution/answered", "type/bug"], "created": "2018-04-10 16:53:28", "closed": "2018-12-04 14:10:35", "commits": {}, "ttf": 237.00027777777777, "commitsDetails": []}, {"title": "Spock extension does not create video recordings of failed BrowserWebDriverContainer tests", "body": "`BrowserWebDriverContainer` leverages JUnit's `failed()` and `succeeded()` callbacks. These methods are not called if used with the Spock extension.", "url": "https://github.com/testcontainers/testcontainers-java/issues/631", "user": "kiview", "labels": ["modules/selenium", "modules/spock", "resolution/awaiting-release", "type/bug", "type/feature"], "created": "2018-04-02 11:34:52", "closed": "2020-04-12 18:08:19", "commits": {"631a3f46971156e65f3f9843624acd4188768b71": {"commitGHEventType": "referenced", "commitUser": "kiview"}}, "ttf": 741.0002777777778, "commitsDetails": [{"commitHash": "631a3f46971156e65f3f9843624acd4188768b71", "commitGHEventType": "referenced", "commitUser": "kiview", "commitParents": ["8dede0455827f89c03e753ee75dc70326303de68"], "nameRev": "631a3f46971156e65f3f9843624acd4188768b71 tags/1.14.0~5", "commitMessage": "Support VNC recording with BrowserWebdriverContainer in Spock-Extension (#2548)\n\nInitially done as part of the Hackergarten at Gr8ConfEU 2018.\r\nThanks to Tamer Shahin, Marcin Erdmann and Dawid Kublik for working on this!\r\n\r\nFixes #631.", "commitDateTime": "2020-04-12 20:08:18", "authoredDateTime": "2020-04-12 20:08:18", "commitGitStats": [{"filePath": "modules/spock/build.gradle", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "modules/spock/src/main/groovy/org/testcontainers/spock/SpockTestDescription.groovy", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "modules/spock/src/main/groovy/org/testcontainers/spock/TestcontainersExtension.groovy", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "modules/spock/src/main/groovy/org/testcontainers/spock/TestcontainersMethodInterceptor.groovy", "insertions": 22, "deletions": 3, "lines": 25}, {"filePath": "modules/spock/src/test/groovy/org/testcontainers/spock/BrowserVncRecordingIT.groovy", "insertions": 88, "deletions": 0, "lines": 88}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "BrowserWebDriverContainer fails to determine Selenium version for Selenium v3.9.1", "body": "When starting a `BrowserWebDriverContainer` it tries to determine Selenium version from classpath, looking for the Manifest file from **selenium-api.jar**.\r\n\r\nUsing Selenium 3.9.1, the detection fails and it uses the default 2.45.0 version, thus pulling a **selenium/standalone-chrome-debug:2.45.0** for Chrome.\r\n\r\nLooking at the code of `SeleniumUtils` class, we can see that it reads `Selenium-Version` value of the `Build-Info` section in the Manifest file to infere the version to use.\r\n\r\nThat is ok in **selenium-api-2.45.0.jar**:\r\n```\r\nManifest-Version: 1.0\r\nBuilt-By: linman\r\nBuild-Jdk: 1.7.0_65\r\nCreated-By: Apache Maven 3.1.1\r\nArchiver-Version: Plexus Archiver\r\n\r\nName: Build-Info\r\nSelenium-Revision: 5017cb8e7ca8e37638dc3091b2440b90a1d8686f\r\nSelenium-Version: 2.45.0\r\nSelenium-Build-Time: 2015-02-27 09:10:26\r\n```\r\nBut in **selenium-api-3.9.1.jar**, the format is not the same:\r\n```\r\nManifest-Version: 1.0\r\n\r\nName: Build-Info\r\nBuild-Revision: 63f7b50\r\nBuild-Time: 2018-02-07T22:25:02.294Z\r\nBuild-User: shs\r\n\r\nName: Selenium\r\nSelenium-Version: 3.9.1\r\n```\r\nThus, reading `Build-Info` section, the `Selenium-Version` attribute can't be found.\r\n\r\nHowever, looking at **selenium-api-3.10.0** & **selenium-api-3.11.0**, the `Selenium-Version` is back in the `Build-Info` section... I didn't check all **selenium-api** version, but it looks like the format of the Manifest file is not really a standard.\r\n\r\nTo be more adaptable to format change, I think the code should check for the `Selenium-Version` entry in all the sections of the Manifest file and not only the `Build-Info` section, hoping we can at least rely on the fact the `Selenium-Version` will be present somewhere...\r\n\r\n\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/611", "user": "jvalloire", "labels": ["modules/selenium", "resolution/acknowledged", "type/bug"], "created": "2018-03-15 10:30:25", "closed": "2018-04-06 08:06:37", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "db extra connection params are only passed to the first connection in a pool ", "body": "if you attempt to use a datasource url with extra params like:\r\n\r\njdbc:tc:postgresql://somehostname:someport/databasename?stringtype=unspecified\r\n\r\nthe stringtype=unspecified only gets assigned to the very first connection in the pool, all the rest get nothing.\r\n\r\nhere's a fix:\r\nhttps://github.com/testcontainers/testcontainers-java/pull/609", "url": "https://github.com/testcontainers/testcontainers-java/issues/610", "user": "jeacott1", "labels": ["modules/jdbc", "resolution/awaiting-release", "type/bug"], "created": "2018-03-14 23:07:46", "closed": "2018-06-13 20:22:45", "commits": {}, "ttf": 90.00027777777778, "commitsDetails": []}, {"title": "postgresql init script parsing breaks with functions", "body": "\r\nI'm trying to use the testcontainers postgres module with the TC_INITSCRIPT option, but am running into this issue\r\n\r\nhttps://groups.google.com/forum/#!topic/mybatis-user/2WFKfpHub30\r\n\r\nfor statements like (taken from the ibatis example above)\r\n```\r\nCREATE FUNCTION update_family_timestamp() RETURNS trigger AS $$ \r\nBEGIN \r\n    NEW.time_updated := current_timestamp; \r\n    RETURN new; \r\nEND; \r\n$$ LANGUAGE plpgsql; \r\n```\r\n\r\nmanifests an exception like:\r\n```\r\n\tat org.testcontainers.jdbc.ext.ScriptUtils.executeSqlScript(ScriptUtils.java:309) ~[jdbc-1.6.0.jar:na]\r\n\tat org.testcontainers.jdbc.ext.ScriptUtils.executeSqlScript(ScriptUtils.java:216) ~[jdbc-1.6.0.jar:na]\r\n\tat org.testcontainers.jdbc.ContainerDatabaseDriver.runInitScriptIfRequired(ContainerDatabaseDriver.java:233) ~[jdbc-1.6.0.jar:na]\r\n\tat org.testcontainers.jdbc.ContainerDatabaseDriver.connect(ContainerDatabaseDriver.java:156) ~[jdbc-1.6.0.jar:na]\r\n\tat org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:310) ~[tomcat-jdbc-8.5.23.jar:na]\r\n\t... 98 common frames omitted\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: null\r\n\tat java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:597) ~[na:1.8.0_131]\r\n\tat java.lang.StringBuilder.append(StringBuilder.java:190) ~[na:1.8.0_131]\r\n\tat org.postgresql.core.Parser.parseSql(Parser.java:1020) ~[postgresql-9.4.1212.jre7.jar:9.4.1212.jre7]\r\n\tat org.postgresql.core.Parser.replaceProcessing(Parser.java:972) ~[postgresql-9.4.1212.jre7.jar:9.4.1212.jre7]\r\n\tat org.postgresql.core.CachedQueryCreateAction.create(CachedQueryCreateAction.java:40) ~[postgresql-9.4.1212.jre7.jar:9.4.1212.jre7]\r\n\tat org.postgresql.core.QueryExecutorBase.createQueryByKey(QueryExecutorBase.java:309) ~[postgresql-9.4.1212.jre7.jar:9.4.1212.jre7]\r\n\tat org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:281) ~[postgresql-9.4.1212.jre7.jar:9.4.1212.jre7]\r\n\tat org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:266) ~[postgresql-9.4.1212.jre7.jar:9.4.1212.jre7]\r\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:262) ~[postgresql-9.4.1212.jre7.jar:9.4.1212.jre7]\r\n\tat org.testcontainers.jdbc.ext.ScriptUtils.executeSqlScript(ScriptUtils.java:270) ~[jdbc-1.6.0.jar:na]\r\n\t... 102 common frames omitted\r\n```\r\n\r\nThere needs to be a sendFullScript or similar option.\r\n\r\nthis code works and could be a simple drop in replacement https://github.com/mybatis/mybatis-3/blob/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/608", "user": "jeacott1", "labels": ["modules/jdbc", "resolution/acknowledged", "type/bug"], "created": "2018-03-14 00:29:01", "closed": "2018-12-28 19:44:40", "commits": {}, "ttf": 289.0002777777778, "commitsDetails": []}, {"title": "Disable request for volume sharing in Windows 10", "body": "Let's consider a simple test on Windows 10 with `testcontainers-1.6.0` which looks like the following:\r\n\r\n```\r\npublic class FoobarTest {\r\n\r\n\t@ClassRule\r\n\tpublic static GenericContainer<?> broker = new GenericContainer<>(\"ubuntu:latest\").withExposedPorts(80);\r\n\t\r\n\t@Test\r\n\tpublic void returnsRealFoo() {\r\n\t\tassertTrue(true);\r\n\t}\r\n}\r\n```\r\n\r\nThen on test execution, Docker displays a pop up and asks for granting access to disk `C:`.\r\n\r\nWhy? How can I disable it?", "url": "https://github.com/testcontainers/testcontainers-java/issues/602", "user": "synergiator", "labels": ["os/windows", "type/bug"], "created": "2018-03-09 15:27:28", "closed": "2018-03-16 17:35:07", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Ryuk container in Docker-Toolbox on Windows 7", "body": "I ran into an issue on Windows 7 using testcontainers 1.6.0 \r\n\r\nThe issue presented the same as  #84, specifically [issue-84-comment](https://github.com/testcontainers/testcontainers-java/issues/84#issuecomment-366187090)\r\n\r\n> So the error comes when testcontainers makes the startup checks and tries to mount C:\\Users\\user\\AppData\\Local\\Temp\\.testcontainers-tmp-6153256460751889885:/dummy:ro\r\n> Error from docker daemon is:\r\n> \r\n> {\"message\":\"invalid volume specification: 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp\\\\.testcontainers-tmp-6153256460751889885:/dummy:ro'\"}\r\n\r\nDisabling checks was the proposed workaround, however t seems like the problem is that the ryuk container attempts to mount the volume regardless of whether or not the checks are run:\r\nhttps://github.com/testcontainers/testcontainers-java/blob/87e22ec774e4c6b3899166eb27f262c721e0895f/core/src/main/java/org/testcontainers/utility/ResourceReaper.java#L80-L81\r\n\r\nhttps://github.com/testcontainers/testcontainers-java/blob/87e22ec774e4c6b3899166eb27f262c721e0895f/core/src/main/java/org/testcontainers/DockerClientFactory.java#L116-L126\r\n\r\nThe workaround is to downgrade to version 1.5.1 (before the ryuk container) and disable the checks.", "url": "https://github.com/testcontainers/testcontainers-java/issues/599", "user": "trevorpgray", "labels": ["client/docker-machine", "os/windows", "resolution/awaiting-release", "type/bug"], "created": "2018-03-05 15:41:19", "closed": "2018-04-07 17:05:43", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "Oracle Connection String is not accepted by JDBC Container", "body": "\r\nContainer Database Driver is matching the connection url against a [regex pattern](https://github.com/testcontainers/testcontainers-java/blob/master/modules/jdbc/src/main/java/org/testcontainers/jdbc/ContainerDatabaseDriver.java#L40) - `jdbc:tc:([a-z]+)(:([^:]+))?://[^\\\\?]+(\\\\?.*)?` .\r\n\r\nThis is not accepting Oracle JDBC Connection String of the format - `jdbc:oracle:thin:@myhost:1521:orcl`\r\n\r\nThis is preventing to use Oracle container with JDBC URL.\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/596", "user": "manikmagar", "labels": ["modules/jdbc", "resolution/awaiting-release", "type/bug"], "created": "2018-03-01 02:16:52", "closed": "2018-06-13 20:22:45", "commits": {}, "ttf": 104.00027777777778, "commitsDetails": []}, {"title": "withClasspathResourceMapping copies empty file", "body": "Hi, as title says - I'm using a `withClasspathResourceMapping` functionality, and as I can see - library copies empty file to container filesystem\r\n\r\nI've made a small reproducible example here https://github.com/IgorPerikov/testcontainers-file-issue\r\nsteps to reproduce:\r\n\r\n- clone repo\r\n- put a debug point [here](https://github.com/IgorPerikov/testcontainers-file-issue/blob/master/src/test/java/com/github/igorperikov/issue/MovingFileToContainerTest.java#L14)\r\n- launch test with default debug config\r\n- when debug point achieved check container name with `docker ps -a`\r\n- get container fs `docker export your_container_name > ~/log.tar`\r\n- open archive, check `/tmp/myfile`\r\n\r\nI've checked it with 1.6.0 and 1.5.1 versions, both copies empty file\r\n\r\n```\r\n\u279c  ~ docker -v\r\nDocker version 17.12.0-ce, build c97c6d6\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/591", "user": "IgorPerikov", "labels": ["type/bug"], "created": "2018-02-25 13:28:50", "closed": "2018-03-02 14:25:27", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Compose is not pulling from private repo", "body": "If I use private repo in `compose.yml` file, then containerized compose if failing to pull images. The fix, I think, is to mount `$HOME/.docker` to `/root/.docker` in compose container", "url": "https://github.com/testcontainers/testcontainers-java/issues/536", "user": "yurybubnov", "labels": ["type/bug"], "created": "2018-01-08 23:11:22", "closed": "2018-01-29 11:19:39", "commits": {"f602d82d12923cd3741ac7a8decce7c168f1bf1a": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "f602d82d12923cd3741ac7a8decce7c168f1bf1a", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["d7551de0e82e911b9758a1fe13e1cf90d19d5039"], "nameRev": "f602d82d12923cd3741ac7a8decce7c168f1bf1a tags/1.6.0~12", "commitMessage": "fix for https://github.com/testcontainers/testcontainers-java/issues/536\n", "commitDateTime": "2018-01-28 18:19:06", "authoredDateTime": "2018-01-08 16:42:26", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerComposeContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.ContainerisedDockerCompose", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f602d82d12923cd3741ac7a8decce7c168f1bf1a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 0, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/testcontainers/containers"], "changesInPackagesSPOON": ["org.testcontainers.containers.ContainerisedDockerCompose"]}, {"title": "Docker-compose v3 format is not supported", "body": "TestContainers 1.5.1\r\n```\r\n18:47:36.971 [main] ERROR ? [docker/compose:1.8.0] - Could not start container\r\njava.lang.IllegalStateException: Container did not start correctly.\r\n\tat org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:241) [testcontainers-1.5.1.jar:na]\r\n\tat org.testcontainers.containers.GenericContainer.lambda$start$0(GenericContainer.java:194) [testcontainers-1.5.1.jar:na]\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:76) ~[duct-tape-1.0.6.jar:na]\r\n\tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:192) [testcontainers-1.5.1.jar:na]\r\n\tat org.testcontainers.containers.ContainerisedDockerCompose.invoke(DockerComposeContainer.java:442) ~[testcontainers-1.5.1.jar:na]\r\n\tat org.testcontainers.containers.DockerComposeContainer.runWithCompose(DockerComposeContainer.java:152) ~[testcontainers-1.5.1.jar:na]\r\n\tat org.testcontainers.containers.DockerComposeContainer.finished(DockerComposeContainer.java:245) ~[testcontainers-1.5.1.jar:na]\r\n\tat org.testcontainers.containers.FailureDetectingExternalResource$1.evaluate(FailureDetectingExternalResource.java:36) ~[testcontainers-1.5.1.jar:na]\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20) ~[junit-4.11.jar:na]\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309) ~[junit-4.11.jar:na]\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160) ~[junit-4.11.jar:na]\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) ~[junit-rt.jar:na]\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234) ~[junit-rt.jar:na]\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74) ~[junit-rt.jar:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_112]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_112]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_112]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_112]\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:144) ~[idea_rt.jar:na]\r\n18:47:36.972 [main] ERROR ? [docker/compose:1.8.0] - Container log output (if any) will follow:\r\n18:47:36.974 [dockerjava-netty-1-7] INFO  ? [docker/compose:1.8.0] - STDERR: Version in \"[...]docker-compose.yml\" is unsupported. You might be seeing this error because you're using the wrong Compose file version. Either specify a version of \"2\" (or \"2.0\") and place your service definitions under the `services` key, or omit the `version` key and place your service definitions at the root of the file to use version 1.\r\n18:47:36.975 [dockerjava-netty-1-7] INFO  ? [docker/compose:1.8.0] - STDERR: For more on the Compose file format versions, see https://docs.docker.com/compose/compose-file/\r\n----\r\n```\r\n\r\nAnd I use docker-compose.yml with version: \"3\"", "url": "https://github.com/testcontainers/testcontainers-java/issues/531", "user": "alexcase52", "labels": ["area/docker-compose", "resolution/acknowledged", "type/bug"], "created": "2017-12-22 14:55:17", "closed": "2019-12-07 13:29:52", "commits": {"f986243b2381eb71a8600e1bd920f4005e0ee74f": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "e55080c2367e074127b5a257ef202741a1b83f42": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "b7565275eba1009b0db1d1cde0979420459555b6": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 714.0002777777778, "commitsDetails": [{"commitHash": "f986243b2381eb71a8600e1bd920f4005e0ee74f", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["1d03cbacf398f82758bd4c8d71d609c155b40fa5"], "nameRev": "f986243b2381eb71a8600e1bd920f4005e0ee74f tags/1.10.5~35", "commitMessage": "Bump influxdb-java from 2.10 to 2.14 in /modules/influxdb (#1070)\n\nBumps [influxdb-java](https://github.com/influxdata/influxdb-java) from 2.10 to 2.14.\r\n<details>\r\n<summary>Changelog</summary>\r\n\r\n*Sourced from [influxdb-java's changelog](https://github.com/influxdata/influxdb-java/blob/master/CHANGELOG.md).*\r\n\r\n> ## 2.14 [2018-10-12]\r\n> \r\n> ### Fixes\r\n> \r\n> - Fixed chunked query exception handling [Issue #523](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/523)\r\n> - Memory leak in StringBuilder cache for Point.lineprotocol() [Issue #526](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/521)\r\n> \r\n> ## 2.13 [2018-09-12]\r\n> \r\n> ### Fixes\r\n> - MessagePack queries: Exception during parsing InfluxDB version [macOS] [PR #487](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/487)\r\n> - The InfluxDBResultMapper is able to handle results with a different time precision [PR #501](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/501)\r\n> - UDP target host address is cached [PR #502](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/502)\r\n> - Error messages from server not parsed correctly when using msgpack [PR #506](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/506)\r\n> - Response body must be closed properly in case of JSON response [PR #514](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/514)\r\n> - Time is serialized not consistently in MsgPack and Json, missing millis and nanos in MsgPack[PR #517](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/517)\r\n> \r\n> ### Features\r\n> \r\n> - Support for Basic Authentication [PR #492](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/492)\r\n> - Added possibility to reuse client as a core part of [influxdb-java-reactive](https://github.com/bonitoo-io/influxdb-java-reactive) client [PR #493](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/493)\r\n> - Retry capability for writing of BatchPoints [PR #503](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/503)\r\n> - Added `BiConsumer` with capability to discontinue a streaming query [Issue #515](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/515)\r\n> - Added `onComplete` action that is invoked after successfully end of streaming query [Issue #515](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/515)\r\n> \r\n> ## 2.12 [2018-07-31]\r\n> \r\n> ### Fixes\r\n> \r\n> - Remove code which checks for unsupported influxdb versions [PR #474](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/474)\r\n> - Unpredictable errors when OkHttpClient.Builder instance is reused [PR #478](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/478)\r\n> \r\n> ### Features\r\n> \r\n> - Support for MessagePack [PR #471](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/471)\r\n> - Cache version per influxdb instance and reduce ping() calls for every query call [PR #472](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/472)\r\n> - FAQ list for influxdb-java [PR #475](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/475)\r\n> \r\n> ### Improvements\r\n> \r\n> - Test: Unit test to ensure tags should be sorted by key in line protocol (to reduce db server overheads) [PR #476](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/476)\r\n> \r\n> ## 2.11 [2018-07-02]\r\n> \r\n> ### Features\r\n> \r\n> - Allow write precision of TimeUnit other than Nanoseconds [PR #321](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/321)\r\n> - Support dynamic measurement name in InfluxDBResultMapper [PR #423](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/423)\r\n> - Debug mode which allows HTTP requests being sent to the database to be logged [PR #450](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/450)\r\n> - Fix problem of connecting to the influx api with URL which does not points to the url root (e.g. localhots:80/influx-api/) [PR #400] (https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/400)\r\n></table> ... (truncated)\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n\r\n- [`91d0f09`](https://github.com/influxdata/influxdb-java/commit/91d0f09f0c19bf5142d4c2e246155b80fc3f8ade) [maven-release-plugin] prepare release influxdb-java-2.14\r\n- [`8ffaeb9`](https://github.com/influxdata/influxdb-java/commit/8ffaeb9c290983916e5aff196dede98126f2c128) Revert \"[maven-release-plugin] prepare release influxdb-java-2.14\"\r\n- [`2781da2`](https://github.com/influxdata/influxdb-java/commit/2781da2d1b988ca414e04acbd630c16134266b0d) [maven-release-plugin] prepare release influxdb-java-2.14\r\n- [`19c69ed`](https://github.com/influxdata/influxdb-java/commit/19c69ed70d3e8d6322a6c0b5d7ff2bc9e378e3da) [maven-release-plugin] prepare for next development iteration\r\n- [`c6d7f25`](https://github.com/influxdata/influxdb-java/commit/c6d7f25b70fd498afc0d5dc46d1f7ca1adeb88e3) [maven-release-plugin] prepare release influxdb-java-2.14\r\n- [`2f4c594`](https://github.com/influxdata/influxdb-java/commit/2f4c594fdc429e044e4ed614570d26898896f467) Merge pull request [#531](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/531) from heshengbang/master\r\n- [`f653e62`](https://github.com/influxdata/influxdb-java/commit/f653e620ac191cdca57c9cfaf9b859f734df6256) Easy to use try-with-resources, add README.md\r\n- [`c7be9b0`](https://github.com/influxdata/influxdb-java/commit/c7be9b0fe146a6a28bca75b8dfc5129cf84bdcd7) Easy to use try-with-resources\r\n- [`4590d18`](https://github.com/influxdata/influxdb-java/commit/4590d1873ee3b49bfe1162dbd0bbfb3a5f784f65) - added automated SNAPSHOT publishing to Maven Central repository\r\n- [`ce65a41`](https://github.com/influxdata/influxdb-java/commit/ce65a4111021dfabc5ab0dcecff13b32a0ce0401) - added automated SNAPSHOT publishing to Maven Central repository\r\n- Additional commits viewable in [compare view](https://github.com/influxdata/influxdb-java/compare/influxdb-java-2.10...influxdb-java-2.14)\r\n</details>\r\n<br />\r\n\r\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.influxdb:influxdb-java&package-manager=gradle&previous-version=2.10&new-version=2.14)](https://dependabot.com/compatibility-score.html?dependency-name=org.influxdb:influxdb-java&package-manager=gradle&previous-version=2.10&new-version=2.14)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n**Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.\r\n\r\nYou can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\r\n\r\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\r\n- Update frequency (including time of day and day of week)\r\n- Automerge options (never/patch/minor, and dev/runtime dependencies)\r\n- Pull request limits (per update run and/or open at any time)\r\n- Out-of-range updates (receive only lockfile updates, if desired)\r\n- Security updates (receive only security updates, if desired)\r\n\r\nFinally, you can contact us by mentioning @dependabot.\r\n\r\n</details>", "commitDateTime": "2018-12-24 11:10:05", "authoredDateTime": "2018-12-24 11:10:05", "commitGitStats": [{"filePath": "modules/influxdb/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e55080c2367e074127b5a257ef202741a1b83f42", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b7565275eba1009b0db1d1cde0979420459555b6", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["f1e9883bcf50fdeebcbd93cbc0f55f721b2e4330"], "nameRev": "b7565275eba1009b0db1d1cde0979420459555b6 tags/1.12.4~22", "commitMessage": "Upgrade docker-compose image to latest version and perform dire\u2026 (#1847)\n\n* Upgrade docker-compose image to latest version and perform direct image pull\r\n\r\nTogether with using Compose file 2.1 syntax, this is a solution to network cleanup issue described in:\r\n * #1767\r\n * #739\r\n * https://github.com/testcontainers/moby-ryuk/issues/2\r\n * https://github.com/docker/compose/issues/6636\r\n\r\nSolution to general credential helper authenticated pull issues in:\r\n * https://github.com/docker/compose/issues/5854\r\n\r\nTangentially should add support for v3 syntax (not yet tested) re #531\r\n", "commitDateTime": "2019-11-23 16:40:15", "authoredDateTime": "2019-11-23 16:40:15", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "insertions": 36, "deletions": 134, "lines": 170}, {"filePath": "core/src/main/java/org/testcontainers/containers/ParsedDockerComposeFile.java", "insertions": 95, "deletions": 0, "lines": 95}, {"filePath": "core/src/main/java/org/testcontainers/utility/TestcontainersConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/org/testcontainers/containers/DockerComposeFileValidationTest.java", "insertions": 0, "deletions": 70, "lines": 70}, {"filePath": "core/src/test/java/org/testcontainers/containers/ParsedDockerComposeFileValidationTest.java", "insertions": 88, "deletions": 0, "lines": 88}, {"filePath": "core/src/test/java/org/testcontainers/junit/DockerComposeErrorHandlingTest.java", "insertions": 3, "deletions": 12, "lines": 15}, {"filePath": "core/src/test/resources/compose-test.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/resources/docker-compose-base.yml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/resources/docker-compose-imagename-parsing-v1.yml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/test/resources/docker-compose-imagename-parsing-v2.yml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "core/src/test/resources/docker-compose-non-default-override.yml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/resources/local-compose-test.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/resources/v2-compose-test-passthrough.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/resources/v2-compose-test-with-network.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/resources/v2-compose-test.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/junit-jupiter/src/test/resources/docker-compose.yml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/spock/src/test/resources/docker-compose.yml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerComposeContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.ContainerisedDockerCompose", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 5}, {"spoonMethodName": "org.testcontainers.containers.ContainerisedDockerCompose.determineDockerConfigPath()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ParsedDockerComposeFile.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.ParsedDockerComposeFile", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestcontainersConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.TestcontainersConfiguration.getDockerComposeContainerImage()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DockerComposeFileValidationTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.DockerComposeFileValidationTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ParsedDockerComposeFileValidationTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.ParsedDockerComposeFileValidationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DockerComposeErrorHandlingTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.DockerComposeErrorHandlingTest.simpleTest()", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "wait until container started - doesn't end and in the meantime creates multiple containers (MySQLContainer)", "body": "I tried this simple code:\r\n`        try (MySQLContainer mySQLContainer = new MySQLContainer()) {\r\n            mySQLContainer.start();\r\n            mySQLContainer.stop();\r\n        }\r\n`\r\nIn the log I get:\r\n[INFO] 2017-12-05 16:50:48,709 [main]  \ud83d\udc33 [mysql:latest] waitUntilContainerStarted - Waiting for database connection to become available at jdbc:mysql://localhost:32770/test using query 'SELECT 1'\r\n\r\nAnd in the meantime containers are created every 2 min:\r\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS\r\n7504e73de3d5        mysql:latest        \"docker-entrypoint...\"   11 minutes ago      Up 11 minutes       0.0.0.0:32770->3306/tcp\r\n1ae62c3a699c        mysql:latest        \"docker-entrypoint...\"   13 minutes ago      Up 13 minutes       0.0.0.0:32769->3306/tcp\r\n\r\nAm I doing something wrong. Tries both on docker on windows and docker on ubuntu and got the same results", "url": "https://github.com/testcontainers/testcontainers-java/issues/511", "user": "ori-n", "labels": ["type/bug"], "created": "2017-12-05 15:03:54", "closed": "2019-10-01 19:35:35", "commits": {}, "ttf": 665.0002777777778, "commitsDetails": []}, {"title": "Problem with docker-compose ", "body": "Tried to write some integration test with TestContainers, I faced following issue\r\n```java\r\n    @ClassRule\r\n            public static DockerComposeContainer environment =\r\n                new DockerComposeContainer(new File(\"src/test/resources/docker-compose.yml\"))\r\n                    .withLocalCompose(true);\r\n```\r\n\r\nProduces the following output \r\n\r\n```\r\n15:29:58.578 [main] INFO \ud83d\udc33 [docker-compose] - Local Docker Compose is running command: pull\r\n15:29:58.628 [main] DEBUG org.zeroturnaround.exec.ProcessExecutor - Executing [docker-compose, pull] in /Users/Projects/someProject/src/test/resources with environment {COMPOSE_PROJECT_NAME=byrvc2, COMPOSE_FILE=/Users/Projects/someProject/src/test/resources/docker-compose.yml}.\r\n15:29:58.638 [main] DEBUG org.zeroturnaround.exec.ProcessExecutor - Started java.lang.UNIXProcess@1bae316d\r\n15:29:59.212 [Thread-2] ERROR \ud83d\udc33 [docker-compose] - Pulling mongodb (mongo:latest)...\r\n15:30:01.185 [Thread-1] INFO \ud83d\udc33 [docker-compose] - latest: Pulling from library/mongo\r\n15:30:01.779 [Thread-1] INFO \ud83d\udc33 [docker-compose] - Digest: sha256:2c55bcc870c269771aeade05fc3dd3657800540e0a48755876a1dc70db1e76d9\r\n15:30:01.779 [Thread-1] INFO \ud83d\udc33 [docker-compose] - Status: Image is up to date for mongo:latest\r\n15:30:01.780 [Thread-2] ERROR \ud83d\udc33 [docker-compose] - Pulling mnemonic (tag/project:latest)...\r\n15:30:03.445 [Thread-2] ERROR \ud83d\udc33 [docker-compose] - pull access denied for tag/project, repository does not exist or may require 'docker login'\r\n15:30:03.472 [main] DEBUG org.zeroturnaround.exec.WaitForProcess - java.lang.UNIXProcess@1bae316d stopped with exit code 1\r\n15:30:03.475 [main] INFO \ud83d\udc33 [docker-compose] - Local Docker Compose is running command: down -v\r\n15:30:03.475 [main] DEBUG org.zeroturnaround.exec.ProcessExecutor - Executing [docker-compose, down, -v] in\r\n```\r\n\r\n\r\nIt seems that it is not direct issue of TestContainers but looks similar to https://github.com/docker/compose/issues/3660.\r\nI've verified this on my machine and execution of `docker-compose pull` also  fails because of docker login was never executed. \r\n\r\nAlso, possibly some workaround required to be implemented. \r\n\r\n\r\nAdditional info:\r\n\r\nOS: Mac OS 10.12.6\r\n$ docker -v \r\nDocker version 17.09.0-ce, build afdb6d4\r\n\r\n$ docker-compose -v\r\ndocker-compose version 1.16.1, build 6d1ac21\r\n\r\n$ docker-machine -v \r\ndocker-machine version 0.12.2, build 9371605\r\n\r\nTestContainers v 1.4.3", "url": "https://github.com/testcontainers/testcontainers-java/issues/484", "user": "kronar", "labels": ["area/docker-compose", "stale", "type/bug"], "created": "2017-11-10 12:51:05", "closed": "2018-11-11 04:41:26", "commits": {}, "ttf": 365.0002777777778, "commitsDetails": []}, {"title": "Cannot start a container on windows because of mount error", "body": "All worked fine, and from some reason stopped working. \r\nI cannot start a container, and windows restart did not work. This is the error:\r\nCaused by: com.github.dockerjava.api.exception.InternalServerErrorException: {\"message\":\"error while creating mount source path '/c/mydir/myproject/.testcontainers-tmp-XVoe9': chown /c/mydir/myproject/.testcontainers-tmp-XVoe9: no such file or directory\"}\r\n\r\nany help will be appreciated ", "url": "https://github.com/testcontainers/testcontainers-java/issues/481", "user": "ori-n", "labels": ["type/bug"], "created": "2017-11-02 13:04:52", "closed": "2017-12-10 10:32:40", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "Running from maven causes cannot access class jdk.internal.misc.Unsafe exception", "body": "I'm using intellij - when I'm running a unit test using PostgreContainer from the IDE all is OK, but from maven as part of build I get the below error. Thanks\r\n\r\n15:30:58.834 [main] DEBUG org.testcontainers.shaded.io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable\r\njava.lang.IllegalAccessException: class org.testcontainers.shaded.io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @38b27cdc\r\n\tat java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/480", "user": "ori-n", "labels": ["area/java9", "type/bug"], "created": "2017-11-01 13:41:42", "closed": "2017-11-06 14:35:16", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Error in test execution", "body": "I'm trying to execute the test containers inside an web application deployed on glassfish\r\nMy test call is \r\n\r\n> public Result run(Test test) {\r\n        this.test = test;\r\n        logger.info(\"Running test {}\", test.getTestName());\r\n        JUnitCore runner = new JUnitCore();\r\n        Result result = runner.run(TestBrowser.class);\r\n        logger.info(\"{} run complete\", test.getTestName());\r\n        logger.info(\"It was successfull test? {}\", result.wasSuccessful());\r\n        return result;\r\n    }\r\n\r\nWhen I run this I got the exception above\r\n`Informa\u00e7\u00f5es:   java.lang.RuntimeException: java.lang.NoSuchMethodError: com.google.common.collect.ImmutableSet.toImmutableSet()Ljava/util/stream/Collector;\r\n\tat org.rnorth.ducttape.timeouts.Timeouts.callFuture(Timeouts.java:57)\r\n\tat org.rnorth.ducttape.timeouts.Timeouts.getWithTimeout(Timeouts.java:32)\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:38)\r\n\tat org.testcontainers.containers.BrowserWebDriverContainer.containerIsStarted(BrowserWebDriverContainer.java:166)\r\n\tat org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:238)\r\n\tat org.testcontainers.containers.GenericContainer.lambda$start$0(GenericContainer.java:184)\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:76)\r\n\tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:182)\r\n\tat org.testcontainers.containers.GenericContainer.starting(GenericContainer.java:544)\r\n\tat org.testcontainers.containers.FailureDetectingExternalResource$1.evaluate(FailureDetectingExternalResource.java:29)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)`\r\n\r\nIn maven test scope it works perfectly, but this test works before on glassfish. Can anyone help me?", "url": "https://github.com/testcontainers/testcontainers-java/issues/472", "user": "vtroliveira", "labels": ["stale", "type/bug"], "created": "2017-10-16 03:31:03", "closed": "2018-11-11 02:41:02", "commits": {"f986243b2381eb71a8600e1bd920f4005e0ee74f": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 390.0002777777778, "commitsDetails": [{"commitHash": "f986243b2381eb71a8600e1bd920f4005e0ee74f", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["1d03cbacf398f82758bd4c8d71d609c155b40fa5"], "nameRev": "f986243b2381eb71a8600e1bd920f4005e0ee74f tags/1.10.5~35", "commitMessage": "Bump influxdb-java from 2.10 to 2.14 in /modules/influxdb (#1070)\n\nBumps [influxdb-java](https://github.com/influxdata/influxdb-java) from 2.10 to 2.14.\r\n<details>\r\n<summary>Changelog</summary>\r\n\r\n*Sourced from [influxdb-java's changelog](https://github.com/influxdata/influxdb-java/blob/master/CHANGELOG.md).*\r\n\r\n> ## 2.14 [2018-10-12]\r\n> \r\n> ### Fixes\r\n> \r\n> - Fixed chunked query exception handling [Issue #523](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/523)\r\n> - Memory leak in StringBuilder cache for Point.lineprotocol() [Issue #526](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/521)\r\n> \r\n> ## 2.13 [2018-09-12]\r\n> \r\n> ### Fixes\r\n> - MessagePack queries: Exception during parsing InfluxDB version [macOS] [PR #487](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/487)\r\n> - The InfluxDBResultMapper is able to handle results with a different time precision [PR #501](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/501)\r\n> - UDP target host address is cached [PR #502](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/502)\r\n> - Error messages from server not parsed correctly when using msgpack [PR #506](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/506)\r\n> - Response body must be closed properly in case of JSON response [PR #514](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/514)\r\n> - Time is serialized not consistently in MsgPack and Json, missing millis and nanos in MsgPack[PR #517](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/517)\r\n> \r\n> ### Features\r\n> \r\n> - Support for Basic Authentication [PR #492](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/492)\r\n> - Added possibility to reuse client as a core part of [influxdb-java-reactive](https://github.com/bonitoo-io/influxdb-java-reactive) client [PR #493](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/493)\r\n> - Retry capability for writing of BatchPoints [PR #503](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/503)\r\n> - Added `BiConsumer` with capability to discontinue a streaming query [Issue #515](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/515)\r\n> - Added `onComplete` action that is invoked after successfully end of streaming query [Issue #515](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/515)\r\n> \r\n> ## 2.12 [2018-07-31]\r\n> \r\n> ### Fixes\r\n> \r\n> - Remove code which checks for unsupported influxdb versions [PR #474](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/474)\r\n> - Unpredictable errors when OkHttpClient.Builder instance is reused [PR #478](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/478)\r\n> \r\n> ### Features\r\n> \r\n> - Support for MessagePack [PR #471](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/471)\r\n> - Cache version per influxdb instance and reduce ping() calls for every query call [PR #472](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/472)\r\n> - FAQ list for influxdb-java [PR #475](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/475)\r\n> \r\n> ### Improvements\r\n> \r\n> - Test: Unit test to ensure tags should be sorted by key in line protocol (to reduce db server overheads) [PR #476](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/476)\r\n> \r\n> ## 2.11 [2018-07-02]\r\n> \r\n> ### Features\r\n> \r\n> - Allow write precision of TimeUnit other than Nanoseconds [PR #321](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/321)\r\n> - Support dynamic measurement name in InfluxDBResultMapper [PR #423](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/423)\r\n> - Debug mode which allows HTTP requests being sent to the database to be logged [PR #450](https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/450)\r\n> - Fix problem of connecting to the influx api with URL which does not points to the url root (e.g. localhots:80/influx-api/) [PR #400] (https://github-redirect.dependabot.com/influxdata/influxdb-java/pull/400)\r\n></table> ... (truncated)\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n\r\n- [`91d0f09`](https://github.com/influxdata/influxdb-java/commit/91d0f09f0c19bf5142d4c2e246155b80fc3f8ade) [maven-release-plugin] prepare release influxdb-java-2.14\r\n- [`8ffaeb9`](https://github.com/influxdata/influxdb-java/commit/8ffaeb9c290983916e5aff196dede98126f2c128) Revert \"[maven-release-plugin] prepare release influxdb-java-2.14\"\r\n- [`2781da2`](https://github.com/influxdata/influxdb-java/commit/2781da2d1b988ca414e04acbd630c16134266b0d) [maven-release-plugin] prepare release influxdb-java-2.14\r\n- [`19c69ed`](https://github.com/influxdata/influxdb-java/commit/19c69ed70d3e8d6322a6c0b5d7ff2bc9e378e3da) [maven-release-plugin] prepare for next development iteration\r\n- [`c6d7f25`](https://github.com/influxdata/influxdb-java/commit/c6d7f25b70fd498afc0d5dc46d1f7ca1adeb88e3) [maven-release-plugin] prepare release influxdb-java-2.14\r\n- [`2f4c594`](https://github.com/influxdata/influxdb-java/commit/2f4c594fdc429e044e4ed614570d26898896f467) Merge pull request [#531](https://github-redirect.dependabot.com/influxdata/influxdb-java/issues/531) from heshengbang/master\r\n- [`f653e62`](https://github.com/influxdata/influxdb-java/commit/f653e620ac191cdca57c9cfaf9b859f734df6256) Easy to use try-with-resources, add README.md\r\n- [`c7be9b0`](https://github.com/influxdata/influxdb-java/commit/c7be9b0fe146a6a28bca75b8dfc5129cf84bdcd7) Easy to use try-with-resources\r\n- [`4590d18`](https://github.com/influxdata/influxdb-java/commit/4590d1873ee3b49bfe1162dbd0bbfb3a5f784f65) - added automated SNAPSHOT publishing to Maven Central repository\r\n- [`ce65a41`](https://github.com/influxdata/influxdb-java/commit/ce65a4111021dfabc5ab0dcecff13b32a0ce0401) - added automated SNAPSHOT publishing to Maven Central repository\r\n- Additional commits viewable in [compare view](https://github.com/influxdata/influxdb-java/compare/influxdb-java-2.10...influxdb-java-2.14)\r\n</details>\r\n<br />\r\n\r\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.influxdb:influxdb-java&package-manager=gradle&previous-version=2.10&new-version=2.14)](https://dependabot.com/compatibility-score.html?dependency-name=org.influxdb:influxdb-java&package-manager=gradle&previous-version=2.10&new-version=2.14)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n**Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.\r\n\r\nYou can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\r\n\r\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\r\n- Update frequency (including time of day and day of week)\r\n- Automerge options (never/patch/minor, and dev/runtime dependencies)\r\n- Pull request limits (per update run and/or open at any time)\r\n- Out-of-range updates (receive only lockfile updates, if desired)\r\n- Security updates (receive only security updates, if desired)\r\n\r\nFinally, you can contact us by mentioning @dependabot.\r\n\r\n</details>", "commitDateTime": "2018-12-24 11:10:05", "authoredDateTime": "2018-12-24 11:10:05", "commitGitStats": [{"filePath": "modules/influxdb/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Network instances can't be used with ClassRule", "body": "From here:\r\nhttps://stackoverflow.com/questions/46562926/no-such-network-error-when-trying-to-re-use-testcontainers-rules-with-network", "url": "https://github.com/testcontainers/testcontainers-java/issues/469", "user": "bsideup", "labels": ["type/bug"], "created": "2017-10-04 11:19:16", "closed": "2017-11-06 10:15:41", "commits": {"6d8524dba179236e1ab7149fae33fd5a70148607": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "1c66a143e6513d25b4d60044303b2fabf1c6c0fb": {"commitGHEventType": "closed", "commitUser": "bsideup"}}, "ttf": 32.000277777777775, "commitsDetails": [{"commitHash": "6d8524dba179236e1ab7149fae33fd5a70148607", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1c66a143e6513d25b4d60044303b2fabf1c6c0fb", "commitGHEventType": "closed", "commitUser": "bsideup", "commitParents": ["635f13737216b0cbea379d1bda36500eea42ddab"], "nameRev": "1c66a143e6513d25b4d60044303b2fabf1c6c0fb tags/1.5.0~18", "commitMessage": "Make Network instances reusable. Closes #469 (#470)\n\n* Make Network instances reusable. Closes #469\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md\r\n", "commitDateTime": "2017-11-06 13:15:39", "authoredDateTime": "2017-11-06 13:15:39", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/testcontainers/containers/Network.java", "insertions": 21, "deletions": 9, "lines": 30}, {"filePath": "core/src/test/java/org/testcontainers/containers/NetworkTest.java", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Network.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.close()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.testcontainers.containers.NetworkImpl", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.testcontainers.containers.NetworkImpl.getId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.NetworkImpl.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NetworkTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.NetworkTest.WithoutRules.testReusability()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "VNC recorder for selenium container creates empty video files", "body": "Hello. Tried selenium example test with chrome recording. No networks and links, just this standard \"open wikipedia\" behavior. Produces 144 bytes long empty broken video files. Container log reports connection problem. Linux. Containers 1.4.2. Webdriver 3.4.0\r\nI was told in slack it is some kind of known issue, but can't find it here.\r\n\r\nAny info? Thnx.", "url": "https://github.com/testcontainers/testcontainers-java/issues/466", "user": "glebsts", "labels": ["type/bug"], "created": "2017-09-29 07:45:09", "closed": "2017-12-10 08:28:38", "commits": {"2b2bc6a5cff33acd280ee543f097f49c8dce7682": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "9be995fcf074222a76646f27a8d29a01bdd1b11e": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "f1ce2b139233da7e6932778944f376ef6e6e7743": {"commitGHEventType": "closed", "commitUser": "rnorth"}}, "ttf": 72.00027777777778, "commitsDetails": [{"commitHash": "2b2bc6a5cff33acd280ee543f097f49c8dce7682", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9be995fcf074222a76646f27a8d29a01bdd1b11e", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f1ce2b139233da7e6932778944f376ef6e6e7743", "commitGHEventType": "closed", "commitUser": "rnorth", "commitParents": ["6620d23de67e839fc98d1d6b37aa7791af9c1bf5"], "nameRev": "f1ce2b139233da7e6932778944f376ef6e6e7743 tags/1.5.0~2", "commitMessage": "Wait robustness (#504)\n\nRefactor port awaits for improved robustness:\r\n* We now allow a list of multiple startup liveness check ports to be defined for a container. This helps, e.g. for the browser containers, and lets us wait for both Selenium and VNC ports to be listening. I think this will help eliminate random flapping tests in this area and should fix #466\r\n* For exposed/bound ports, we now check that the port is accepting connections both (1) from within the container, and (2) from the testcontainers host. Previously, the internal check was done for Docker on Mac/Win and the external check for Linux. Now both are used for all environments, which simplifies the logic and gives a solid guarantee that the port truly is listening. (For reference, the internal check was done due to issues with the Docker networking stack opening a listening socket before the containerized service itself was listening).\r\n* Also, we now have a WaitAllStrategy that lets more than one wait strategy be used. For browser containers, we now wait for (a) a log message, and (b) the listening ports to be available.\r\n* Broken out some aspects of the wait strategies/port detection into separate classes and used this to help improve test coverage.\r\n* Refactored/tidied some code in network link configuration that was redundant, using Docker API filters instead of streamed filtering of containers\r\n\r\n\r\n", "commitDateTime": "2017-12-10 08:28:36", "authoredDateTime": "2017-12-10 08:28:36", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 71, "deletions": 20, "lines": 91}, {"filePath": "core/src/main/java/org/testcontainers/containers/VncRecordingSidekickContainer.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "core/src/main/java/org/testcontainers/containers/wait/HostPortWaitStrategy.java", "insertions": 21, "deletions": 69, "lines": 90}, {"filePath": "core/src/main/java/org/testcontainers/containers/wait/WaitAllStrategy.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "core/src/main/java/org/testcontainers/containers/wait/internal/ExternalPortListeningCheck.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "core/src/main/java/org/testcontainers/containers/wait/internal/InternalCommandPortListeningCheck.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "core/src/test/java/org/testcontainers/containers/wait/WaitAllStrategyTest.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "core/src/test/java/org/testcontainers/containers/wait/internal/ExternalPortListeningCheckTest.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "core/src/test/java/org/testcontainers/containers/wait/internal/InternalCommandPortListeningCheckTest.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "modules/jdbc/src/main/java/org/testcontainers/containers/JdbcDatabaseContainer.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "modules/mysql/src/main/java/org/testcontainers/containers/MySQLContainer.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "modules/nginx/src/main/java/org/testcontainers/containers/NginxContainer.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "modules/postgresql/src/main/java/org/testcontainers/containers/PostgreSQLContainer.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java", "insertions": 17, "deletions": 6, "lines": 23}, {"filePath": "modules/selenium/src/test/java/org/testcontainers/junit/FirefoxWebDriverContainerTest.java", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.applyConfiguration(com.github.dockerjava.api.command.CreateContainerCmd)", "TOT": 21, "UPD": 7, "INS": 2, "MOV": 9, "DEL": 3}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.getLivenessCheckPorts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.getExposedPortNumbers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.getBoundPortNumbers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.findLinksFromThisContainer(java.lang.String,org.testcontainers.containers.traits.LinkableContainer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.findAllNetworksForLinkedContainers(org.testcontainers.containers.traits.LinkableContainer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.getLivenessCheckPort()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.AbstractWaitStrategy.getLivenessCheckPorts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.AbstractWaitStrategy.getLivenessCheckPort()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VncRecordingSidekickContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.VncRecordingSidekickContainer.getLivenessCheckPort()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.containers.VncRecordingSidekickContainer.getLivenessCheckPorts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HostPortWaitStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.HostPortWaitStrategy.shouldCheckWithCommand()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.wait.HostPortWaitStrategy.waitUntilReady()", "TOT": 32, "UPD": 15, "INS": 6, "MOV": 7, "DEL": 4}, {"spoonMethodName": "org.testcontainers.containers.wait.HostPortWaitStrategy", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "WaitAllStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.WaitAllStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExternalPortListeningCheck.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.internal.ExternalPortListeningCheck", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InternalCommandPortListeningCheck.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.internal.InternalCommandPortListeningCheck", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WaitAllStrategyTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.WaitAllStrategyTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExternalPortListeningCheckTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.internal.ExternalPortListeningCheckTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InternalCommandPortListeningCheckTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.internal.InternalCommandPortListeningCheckTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcDatabaseContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.JdbcDatabaseContainer.getLivenessCheckPort()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MySQLContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.MySQLContainer.getLivenessCheckPort()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.MySQLContainer.getLivenessCheckPorts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NginxContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.NginxContainer.getLivenessCheckPort()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.NginxContainer.getLivenessCheckPorts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.PostgreSQLContainer.getLivenessCheckPort()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.PostgreSQLContainer.getLivenessCheckPorts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BrowserWebDriverContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.BrowserWebDriverContainer.getLivenessCheckPort()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.BrowserWebDriverContainer.containerIsStarted(com.github.dockerjava.api.command.InspectContainerResponse)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.testcontainers.containers.BrowserWebDriverContainer", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.BrowserWebDriverContainer.getLivenessCheckPorts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FirefoxWebDriverContainerTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.FirefoxWebDriverContainerTest.simpleTest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.junit.FirefoxWebDriverContainerTest.simpleExploreTest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "LogMessageWaitStrategy for PostgreSQLContainer times out", "body": "When waiting for Postgres to start up, PostgreSQLContainer looks for the String `\".*database system is ready to accept connections.*\\\\s\"`.\r\n\r\nThe database though has already started when PostgreSQLContainer is ready for waiting and thus will never find the String.\r\n\r\nThis issues seems to appear only on Windows machines - on Linux it was not observable.\r\n\r\nThe new PostgreSQLContainer wait behaviour was introduced in #327.", "url": "https://github.com/testcontainers/testcontainers-java/issues/455", "user": "gbtec-markusmeier", "labels": ["client/docker-for-windows", "modules/jdbc", "resolution/acknowledged", "type/bug"], "created": "2017-09-14 07:25:54", "closed": "2018-10-09 15:51:43", "commits": {}, "ttf": 390.0002777777778, "commitsDetails": []}, {"title": "DockerComposeContainer doesn't seem to work", "body": "Hi,\r\n  I am trying to run DockerComposeContainer from a JUnit test, but it doesn't work. The application itself seems fine, as I can run it with no problem from command line:\r\n\r\n` docker-compose up`\r\n\r\nI set up   DockerComposeContainer  in my test with (in Kotlin):\r\n\r\n```\r\ncompanion object {\r\n\r\n        class KDockerComposeContainer(path: File) : DockerComposeContainer<KDockerComposeContainer>(path)\r\n\r\n        @ClassRule @JvmField\r\n        val env = KDockerComposeContainer(File(\"../docker-compose.yml\"))\r\n    }\r\n```\r\n\r\nThe test fails at initialization, with the following stack trace that does not really say much about what is wrong:\r\n```\r\nConnected to the target VM, address: '127.0.0.1:53858', transport: 'socket'\r\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\r\nSLF4J: Defaulting to no-operation (NOP) logger implementation\r\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\r\n        \u2139\ufe0e Checking the system...\r\n        \u2714 Docker version is newer than 1.6.0\r\n        \u2714 Docker environment has more than 2GB free\r\n        \u2714 File should be mountable\r\n        \u2714 Exposed port is accessible\r\n\r\nTest ignored.\r\n\r\norg.testcontainers.containers.ContainerLaunchException: Container startup failed\r\n\r\n\tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:189)\r\n\tat org.testcontainers.containers.ContainerisedDockerCompose.invoke(DockerComposeContainer.java:431)\r\n\tat org.testcontainers.containers.DockerComposeContainer.runWithCompose(DockerComposeContainer.java:151)\r\n\tat org.testcontainers.containers.DockerComposeContainer.pullImages(DockerComposeContainer.java:121)\r\n\tat org.testcontainers.containers.DockerComposeContainer.starting(DockerComposeContainer.java:108)\r\n\tat org.testcontainers.containers.FailureDetectingExternalResource$1.evaluate(FailureDetectingExternalResource.java:29)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: org.rnorth.ducttape.RetryCountExceededException: Retry limit hit with exception\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:83)\r\n\tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:182)\r\n\t... 12 more\r\nCaused by: org.testcontainers.containers.ContainerLaunchException: Could not create/start container\r\n\tat org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:256)\r\n\tat org.testcontainers.containers.GenericContainer.lambda$start$0(GenericContainer.java:184)\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:76)\r\n\t... 13 more\r\nCaused by: java.lang.IllegalStateException: Container did not start correctly.\r\n\tat org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:231)\r\n\t... 15 more\r\n```\r\n\r\nBy using a debugger, I can see it fails to start `docker/compose:1.8.0`. Note: I am using Windows 10, with Docker version 17.06.0-ce-win18 (12627), and TestContainers 1.4.2. TestContainers work fines in the other tests in which I have single Docker images (i.e., no Compose).\r\n\r\nIs this a bug, or am I missing something? (In this latter case, more info in the thrown exceptions would be useful)\r\n\r\n\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/439", "user": "arcuri82", "labels": ["area/docker-compose", "client/docker-for-windows", "type/bug"], "created": "2017-08-11 13:17:54", "closed": "2017-10-19 15:51:28", "commits": {"357d5752a134bc340b1054acedf2eb78f7f24e64": {"commitGHEventType": "referenced", "commitUser": "kiview"}}, "ttf": 69.00027777777778, "commitsDetails": [{"commitHash": "357d5752a134bc340b1054acedf2eb78f7f24e64", "commitGHEventType": "referenced", "commitUser": "kiview", "commitParents": ["c42599ff51fa9143bce919d890b8472d2f46faa0"], "nameRev": "357d5752a134bc340b1054acedf2eb78f7f24e64 tags/1.5.0~20", "commitMessage": "Fix regression when using Docker Compose on Windows (#474)\n\nFixes #439", "commitDateTime": "2017-10-19 17:51:27", "authoredDateTime": "2017-10-19 16:51:27", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "insertions": 1, "deletions": 9, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerComposeContainer.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Shading org.apache.commons.io", "body": "I'm using org.testcontainers.postgresql version 1.4.2 and docker for windows\r\n\r\nGetting this error:\r\nCaused by: java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;\r\n\tat org.testcontainers.DockerClientFactory.checkExposedPort(DockerClientFactory.java:190)\r\n\tat org.testcontainers.DockerClientFactory.lambda$client$1(DockerClientFactory.java:129)\r\n\tat org.testcontainers.DockerClientFactory.runInsideDocker(DockerClientFactory.java:230)\r\n\tat org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:118)\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:116)\r\n\tat org.testcontainers.containers.JdbcDatabaseContainer.<init>(JdbcDatabaseContainer.java:35)\r\n\tat org.testcontainers.containers.PostgreSQLContainer.<init>(PostgreSQLContainer.java:25)\r\n\tat org.testcontainers.containers.PostgreSQLContainer.<init>(PostgreSQLContainer.java:21)\r\n\r\nI checked dependencies using  mvn dependency:tree and found this:\r\n+- commons-fileupload:commons-fileupload:jar:1.3.3:compile\r\n     \\- commons-io:commons-io:jar:2.2:compile\r\n\r\nProbably it helps.\r\n\r\n\r\nPS Used exclusions as workaround, but anyway it's better to report :)\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/421", "user": "mumukiller", "labels": ["stale", "type/bug"], "created": "2017-08-01 10:02:30", "closed": "2018-11-11 04:41:27", "commits": {}, "ttf": 466.0002777777778, "commitsDetails": []}, {"title": "FileAlreadyExistsException thrown by MountableFile", "body": "Hi all,\r\n\r\nI have a rather obscure issue with how MountableFile is generating the temporary file for copying classpath resources. I occasionally see the following error in my log files -\r\n\r\n`2017-07-25 18:09:53,920 - [ERROR] - from org.testcontainers.utility.MountableFile in main \r\nFailed to extract classpath resource org/testcontainers/DockerClientFactory.class from JAR file /qc/my-app/lib/org.testcontainers.testcontainers-1.4.2.jar\r\njava.nio.file.FileAlreadyExistsException: .testcontainers-tmp-wYxDE\r\n\tat sun.nio.fs.UnixException.translateToIOException(UnixException.java:88)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)\r\n\tat sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)\r\n\tat java.nio.file.spi.FileSystemProvider.newOutputStream(FileSystemProvider.java:434)\r\n\tat java.nio.file.Files.newOutputStream(Files.java:216)\r\n\tat java.nio.file.Files.copy(Files.java:3016)\r\n\tat org.testcontainers.utility.MountableFile.copyFromJarToLocation(MountableFile.java:191)\r\n\tat org.testcontainers.utility.MountableFile.extractClassPathResourceToTempLocation(MountableFile.java:157)\r\n\tat org.testcontainers.utility.MountableFile.resolvePath(MountableFile.java:120)\r\n\tat org.testcontainers.utility.MountableFile.getResolvedPath(MountableFile.java:38)\r\n\tat org.testcontainers.DockerClientFactory.lambda$client$0(DockerClientFactory.java:122)\r\n\tat org.testcontainers.DockerClientFactory$$Lambda$32/976810274.accept(Unknown Source)\r\n\tat org.testcontainers.DockerClientFactory.runInsideDocker(DockerClientFactory.java:225)\r\n\tat org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:118)\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:116)\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:156)\r\n\tat org.testcontainers.containers.BrowserWebDriverContainer.<init>(BrowserWebDriverContainer.java:59)\r\n\tat org.testcontainers.containers.BrowserWebDriverContainer.<init>(BrowserWebDriverContainer.java:70)`\r\n\r\nI'm running CentOS 7 on an EC2 instance, with Java 8u31.\r\n\r\nThe code causing the exception is [here](https://github.com/testcontainers/testcontainers-java/blob/master/core/src/main/java/org/testcontainers/utility/MountableFile.java#L186). Having debugged the issue, it looks like in some cases the temporary directory is created, but fails to be deleted. I'm not sure what the exact cause is. It's possible there's another process watching the directory, causing the directory generated to fail to be deleted, or it's some obscure permissioning issue I've not been able to get to the bottom of.\r\n\r\nI'm wondering why it's necessary to call mkdirs() prior to generating the temporary file? Would it make sense to call mkdirs on the parent directory instead, and avoid having to delete the directory generated? Why is it necessary to create the parent directory, given that it's the same directory the application is executing in? I'm assuming the MountableFile has to be in the current directory (rather than a temporary directory) for some Docker reason. Is that correct?\r\n\r\nI'm working on a fix for this issue, and I'll submit once I've verified.\r\n\r\nThanks,\r\nDamien.\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/419", "user": "dpapworth", "labels": ["type/bug"], "created": "2017-07-27 14:25:48", "closed": "2017-09-16 18:21:33", "commits": {}, "ttf": 51.000277777777775, "commitsDetails": []}, {"title": "Unable to use static MySqlContainer in multiple test classes", "body": "The [example here](https://github.com/testcontainers/testcontainers-java-examples/tree/master/spring-boot/src/test/java/com/example) suggests that a container can be created in an `abstract` class and used by multiple test classes. While this is possible with the `redis` container, it is not with a `MySqlContainer`.\r\n\r\n```java\r\npublic abstract class AbstractIntegrationTest {\r\n    @ClassRule\r\n    public static MySQLContainer mysql = new MySQLContainer();\r\n}\r\n```\r\n\r\n```java\r\npublic class ExampleTestOne extends AbstractIntegrationTest {\r\n    @Test\r\n    public void someTest() {\r\n        assertTrue(true);\r\n    }\r\n}\r\n```\r\n\r\n```java\r\npublic class ExampleTestTwo extends AbstractIntegrationTest {\r\n    @Test\r\n    public void someTest() {\r\n        assertTrue(true);\r\n    }\r\n}\r\n```\r\n\r\nOne test passes, but the second fails due to \"Duplicate mount point '/etc/mysql/conf.d'\".\r\n\r\nComplete stack trace:\r\n\r\n```\r\norg.testcontainers.containers.ContainerLaunchException: Container startup failed\r\n\r\n\tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:189)\r\n\tat org.testcontainers.containers.GenericContainer.starting(GenericContainer.java:544)\r\n\tat org.testcontainers.containers.FailureDetectingExternalResource$1.evaluate(FailureDetectingExternalResource.java:29)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: org.rnorth.ducttape.RetryCountExceededException: Retry limit hit with exception\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:83)\r\n\tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:182)\r\n\t... 17 more\r\nCaused by: org.testcontainers.containers.ContainerLaunchException: Could not create/start container\r\n\tat org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:256)\r\n\tat org.testcontainers.containers.GenericContainer.lambda$start$0(GenericContainer.java:184)\r\n\tat org.testcontainers.containers.GenericContainer$$Lambda$35/1728579441.call(Unknown Source)\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:76)\r\n\t... 18 more\r\nCaused by: java.lang.reflect.UndeclaredThrowableException\r\n\tat com.sun.proxy.$Proxy13.exec(Unknown Source)\r\n\tat org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:206)\r\n\t... 21 more\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:483)\r\n\tat org.testcontainers.dockerclient.AuditLoggingDockerClient.lambda$wrappedCommand$14(AuditLoggingDockerClient.java:98)\r\n\tat org.testcontainers.dockerclient.AuditLoggingDockerClient$$Lambda$28/1971764991.invoke(Unknown Source)\r\n\t... 23 more\r\nCaused by: com.github.dockerjava.api.exception.InternalServerErrorException: {\"message\":\"Duplicate mount point '/etc/mysql/conf.d'\"}\r\n\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:109)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat org.testcontainers.shaded.io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat org.testcontainers.shaded.io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\r\n\tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat org.testcontainers.shaded.io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat org.testcontainers.shaded.io.netty.channel.kqueue.AbstractKQueueStreamChannel$KQueueStreamUnsafe.readReady(AbstractKQueueStreamChannel.java:608)\r\n\tat org.testcontainers.shaded.io.netty.channel.kqueue.KQueueDomainSocketChannel$KQueueDomainUnsafe.readReady(KQueueDomainSocketChannel.java:127)\r\n\tat org.testcontainers.shaded.io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe.readReady(AbstractKQueueChannel.java:355)\r\n\tat org.testcontainers.shaded.io.netty.channel.kqueue.KQueueEventLoop.processReady(KQueueEventLoop.java:198)\r\n\tat org.testcontainers.shaded.io.netty.channel.kqueue.KQueueEventLoop.run(KQueueEventLoop.java:270)\r\n\tat org.testcontainers.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat org.testcontainers.shaded.io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:744)\r\n```\r\n\r\n\r\nThis is on Docker Community Edition for Mac using testcontainers 1.4.1.\r\n\r\n```\r\nVersion 17.06.0-ce-mac18 (18433)\r\nChannel: stable\r\nd9b66511e0\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/417", "user": "phillipjohnson", "labels": ["type/bug"], "created": "2017-07-26 13:50:26", "closed": "2018-05-15 08:24:32", "commits": {}, "ttf": 292.0002777777778, "commitsDetails": []}, {"title": "Local Docker compose impossible on Windows", "body": "Hi\r\n\r\nIn 1.4.1, the implementation for the `LocalDockerCompose` class has [a constant specifying the executable name of local Docker Compose](https://github.com/testcontainers/testcontainers-java/blob/testcontainers-1.2.1/core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java#L444). \r\n\r\nThis is hard-coded to `docker-compose` which is fine on *nix / OS X, but fails on Windows, which is expecting `docker-compose.exe`.\r\n\r\nIt might be nice if this auto-detected Windows and used the `.exe` version, or even just tried both in turn...\r\n\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/416", "user": "declension", "labels": ["type/bug"], "created": "2017-07-25 13:36:15", "closed": "2017-08-11 08:16:59", "commits": {"1a047811f87b0c14dacd367cef5a1dcbd2ee701a": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "1a047811f87b0c14dacd367cef5a1dcbd2ee701a", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["32b655190ddc7d2b24d136370cf4ca562a536903"], "nameRev": "1a047811f87b0c14dacd367cef5a1dcbd2ee701a tags/1.4.3~18", "commitMessage": "Setting platform dependent docker-compose executable name (#437)\n\n* Setting platform dependent docker-compose executable name\r\n\r\nFixes #416\r\n\r\n* Changed docker-compose executable naming to be more concise\r\n\r\n* Reverted Compose executable variable name, added change to CHANGELOG.md\r\n", "commitDateTime": "2017-08-11 10:16:58", "authoredDateTime": "2017-08-11 09:16:58", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerComposeContainer.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "GenericContainer::isRunning throws exception if container not started", "body": "GenericContainer::isRunning throws exception if container not started. \r\nThis caused by null value in GenericContainer::containerId.\r\nExpected: call GenericContainer::isRunning returns false if container not started.", "url": "https://github.com/testcontainers/testcontainers-java/issues/411", "user": "kprokopchik", "labels": ["type/bug"], "created": "2017-07-19 09:02:06", "closed": "2017-07-25 10:22:28", "commits": {"94d76416cdecb1789b359358118c2de092d07d0c": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "291824321dc95e5849fbb0280d4f6afb91a5cd25": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "94d76416cdecb1789b359358118c2de092d07d0c", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["99b10848aeb2c722d4182d68f2ae0431ec2194a4"], "nameRev": "94d76416cdecb1789b359358118c2de092d07d0c tags/1.4.2~1", "commitMessage": "Fix NPE for GenericContainer::isRunning (#411) (#412)\n\n* Fix NPE for GenericContainer::isRunning (#411)\r\n\r\n* Add test for GenericContainer::isRunning (#411)\r\n\r\n* Fix not stopped container in test (#411)\r\n\r\n* Added comment to CHANGELOG.md (#411)\r\n", "commitDateTime": "2017-07-25 10:06:08", "authoredDateTime": "2017-07-25 11:06:08", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/org/testcontainers/junit/GenericContainerRuleTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.isRunning()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GenericContainerRuleTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.GenericContainerRuleTest.testIsRunning()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "291824321dc95e5849fbb0280d4f6afb91a5cd25", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["59d9262f9b0244651ae1a84e9541b7780f03b744"], "nameRev": "291824321dc95e5849fbb0280d4f6afb91a5cd25 tags/1.10.5~44", "commitMessage": "Bump amqp-client from 3.5.3 to 5.5.1 in /core (#1076)\n\nBumps [amqp-client](https://github.com/rabbitmq/rabbitmq-java-client) from 3.5.3 to 5.5.1.\r\n<details>\r\n<summary>Release notes</summary>\r\n\r\n*Sourced from [amqp-client's releases](https://github.com/rabbitmq/rabbitmq-java-client/releases).*\r\n\r\n> ## 5.5.1\r\n> This is a patch release with a bug fix. All users of the 5.x.x series are encouraged to upgrade to this version.\r\n> \r\n> # Changes between 5.5.0 and 5.5.1\r\n> \r\n> ## Record recoverable entities in RPC channel methods\r\n> \r\n> GitHub issue: [#425](https://github-redirect.dependabot.com/rabbitmq/rabbitmq-java-client/issues/425) \r\n> \r\n> ## 5.5.0\r\n> This is a maintenance release with 2 new features and a bug fix. All users of the 5.x.x series are encouraged to upgrade to this version.\r\n> \r\n> # Changes between 5.4.3 and 5.5.0\r\n> \r\n> ## Add traffic listener\r\n> \r\n> GitHub issue: [#411](https://github-redirect.dependabot.com/rabbitmq/rabbitmq-java-client/issues/411)\r\n> \r\n> ## Connection recovery runs into timeouts when using NIO\r\n> \r\n> GitHub issue: [#413](https://github-redirect.dependabot.com/rabbitmq/rabbitmq-java-client/issues/413)\r\n> \r\n> ## Provide factories to create NIO artefacts\r\n> \r\n> GitHub issue: [#410](https://github-redirect.dependabot.com/rabbitmq/rabbitmq-java-client/issues/410)\r\n> \r\n> ## 4.9.0\r\n> This is a maintenance release with 2 new features and a bug fix. All users of the 4.x.x and 3.6.x series are encouraged to upgrade to this version.\r\n> \r\n> # Changes between 4.8.3 and 4.9.0\r\n> \r\n> ## Add traffic listener\r\n> \r\n> GitHub issue: [#411](https://github-redirect.dependabot.com/rabbitmq/rabbitmq-java-client/issues/411)\r\n> \r\n> ## Connection recovery runs into timeouts when using NIO\r\n> \r\n> GitHub issue: [#413](https://github-redirect.dependabot.com/rabbitmq/rabbitmq-java-client/issues/413)\r\n> \r\n> ## Provide factories to create NIO artefacts\r\n> \r\n> GitHub issue: [#410](https://github-redirect.dependabot.com/rabbitmq/rabbitmq-java-client/issues/410)\r\n> \r\n> ## 5.5.0.RC1\r\n> This is a pre-release for 5.5.0, a maintenance release with 2 new features and a bug fix. All users of the 5.x.x series are encouraged to test this version.\r\n> \r\n> # Changes between 5.4.0 and 5.5.0.RC1\r\n> \r\n> ## Add traffic listener\r\n> \r\n></table> ... (truncated)\r\n</details>\r\n<details>\r\n<summary>Changelog</summary>\r\n\r\n*Sourced from [amqp-client's changelog](https://github.com/rabbitmq/rabbitmq-java-client/blob/v5.5.1/release-versions.txt).*\r\n\r\n> RELEASE_VERSION=\"5.5.1\"\r\n> DEVELOPMENT_VERSION=\"5.5.2-SNAPSHOT\"\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n\r\n- See full diff in [compare view](https://github.com/rabbitmq/rabbitmq-java-client/commits/v5.5.1)\r\n</details>\r\n<br />\r\n\r\n[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=com.rabbitmq:amqp-client&package-manager=gradle&previous-version=3.5.3&new-version=5.5.1)](https://dependabot.com/compatibility-score.html?dependency-name=com.rabbitmq:amqp-client&package-manager=gradle&previous-version=3.5.3&new-version=5.5.1)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n**Note:** This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.\r\n\r\nYou can always request more updates by clicking `Bump now` in your [Dependabot dashboard](https://app.dependabot.com).\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot badge me` will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\r\n\r\nAdditionally, you can set the following in the `.dependabot/config.yml` file in this repo:\r\n- Update frequency (including time of day and day of week)\r\n- Automerge options (never/patch/minor, and dev/runtime dependencies)\r\n- Pull request limits (per update run and/or open at any time)\r\n- Out-of-range updates (receive only lockfile updates, if desired)\r\n- Security updates (receive only security updates, if desired)\r\n\r\nFinally, you can contact us by mentioning @dependabot.\r\n\r\n</details>", "commitDateTime": "2018-12-24 09:35:11", "authoredDateTime": "2018-12-24 09:35:11", "commitGitStats": [{"filePath": "core/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Weird error using jitpack master-SNAPSHOT:", "body": "I still have annoyances for test cases that involve more than one container, I was thinking to give a try to the latest updates, and tried to depend on jitpack master snapshot\r\n\r\n```\r\n    compile 'com.github.testcontainers.testcontainers-java:testcontainers:master-SNAPSHOT'\r\n```\r\n\r\nBut when I try to build it, I get this non-JVM error I cannot interpret:\r\n\r\n```\r\n:core:test\r\ndyld: lazy symbol binding failed: Symbol not found: _clock_gettime\r\n  Referenced from: /private/var/folders/1k/45f3yx9n5ds8qv13sg_fxr8c0000gn/T/liborg-testcontainers-shaded-netty-transport-native-kqueue2484198301727123789.dylib (which was built for Mac OS X 10.12)\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\n\r\ndyld: Symbol not found: _clock_gettime\r\n  Referenced from: /private/var/folders/1k/45f3yx9n5ds8qv13sg_fxr8c0000gn/T/liborg-testcontainers-shaded-netty-transport-native-kqueue2484198301727123789.dylib (which was built for Mac OS X 10.12)\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\n\r\n:core:test FAILED\r\n```\r\n\r\nI use MacOS el capitan.", "url": "https://github.com/testcontainers/testcontainers-java/issues/402", "user": "sscarduzio", "labels": ["client/docker-for-mac", "type/bug"], "created": "2017-07-13 09:49:46", "closed": "2017-07-24 20:49:11", "commits": {"51d1d45def544026728c53aaf56c2fe2818dcf27": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "51d1d45def544026728c53aaf56c2fe2818dcf27", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["d7710b9fd83091b685eb9de694a76baca24dcdad"], "nameRev": "51d1d45def544026728c53aaf56c2fe2818dcf27 tags/1.4.2~3", "commitMessage": "Use unix socket proxy on OS X instead of netty KQueue route (#410)\n\nAdjust docker client provider strategies so that a proxied (TCP) connection is used to connect to the Docker daemon on < OS X 10.12. Fixes #402.\r\n\r\n", "commitDateTime": "2017-07-24 21:49:10", "authoredDateTime": "2017-07-24 21:49:10", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/testcontainers/containers/wait/HostPortWaitStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/DockerMachineClientProviderStrategy.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/EnvironmentAndSystemPropertyClientProviderStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/ProxiedUnixSocketClientProviderStrategy.java", "insertions": 54, "deletions": 0, "lines": 54}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/UnixSocketClientProviderStrategy.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "core/src/main/java/org/testcontainers/utility/ComparableVersion.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "shade-test/jar-file/src/test/java/org/testcontainers/JarFileShadingTest.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerClientFactory.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.DockerClientFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HostPortWaitStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.wait.HostPortWaitStrategy.shouldCheckWithCommand()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DockerClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.DockerClientProviderStrategy.getFirstValidStrategy(java.util.List)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DockerMachineClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.DockerMachineClientProviderStrategy", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.dockerclient.DockerMachineClientProviderStrategy.getPriority()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EnvironmentAndSystemPropertyClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.EnvironmentAndSystemPropertyClientProviderStrategy", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ProxiedUnixSocketClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.ProxiedUnixSocketClientProviderStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UnixSocketClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.UnixSocketClientProviderStrategy.isApplicable()", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.dockerclient.UnixSocketClientProviderStrategy", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.testcontainers.dockerclient.UnixSocketClientProviderStrategy.getPriority()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ComparableVersion.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.ComparableVersion", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.utility.ComparableVersion.isLessThan(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.utility.ComparableVersion.isGreaterThanOrEqualTo(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JarFileShadingTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NoClassDefFoundError: com/google/common/io/Resources", "body": "This is occurring in the tests for the newly separated mariadb module, using v1.4.0 of Testcontainers as the parent version. \r\n\r\nSee https://travis-ci.org/testcontainers/testcontainers-java-module-mariadb#L847\r\n\r\nI think we have an undeclared dependency on Guava inside `ContainerDatabaseDriver`:\r\n```java\r\n                URL resource = Resources.getResource(initScriptPath);\r\n                String sql = Resources.toString(resource, Charsets.UTF_8);\r\n```\r\n\r\nSince we're trying to get rid of Guava because of its implications for dependency clashes, I'd say we should replace this with a fairly trivial non-Guava implementation.", "url": "https://github.com/testcontainers/testcontainers-java/issues/398", "user": "rnorth", "labels": ["type/bug"], "created": "2017-07-09 20:40:16", "closed": "2017-07-12 05:51:50", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": " com.github.dockerjava.api.exception.DockerClientException: Failed to parse dockerCfgFile: /Users/sscarduzio/.docker/config.json", "body": "Now that we managed to sidestep the JVM crash  (thanks!!), a new issue bubbled up.\r\n\r\n```\r\norg.testcontainers.containers.ContainerFetchException: Can't get Docker image name from org.testcontainers.images.builder.ImageFromDockerfile@1c6e0a08\r\n\r\n\tat org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:739)\r\n\tat org.testcontainers.containers.GenericContainer.logger(GenericContainer.java:278)\r\n\tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:162)\r\n\tat org.testcontainers.containers.GenericContainer.starting(GenericContainer.java:531)\r\n\tat org.testcontainers.containers.FailureDetectingExternalResource$1.evaluate(FailureDetectingExternalResource.java:29)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: com.github.dockerjava.api.exception.DockerClientException: Failed to parse dockerCfgFile: /Users/sscarduzio/.docker/config.json\r\n\tat com.github.dockerjava.core.DefaultDockerClientConfig.getAuthConfigurations(DefaultDockerClientConfig.java:295)\r\n\tat com.github.dockerjava.netty.exec.AbstrDockerCmdExec.getBuildAuthConfigs(AbstrDockerCmdExec.java:37)\r\n\tat com.github.dockerjava.netty.exec.BuildImageCmdExec.resourceWithOptionalAuthConfig(BuildImageCmdExec.java:27)\r\n\tat com.github.dockerjava.netty.exec.BuildImageCmdExec.execute0(BuildImageCmdExec.java:107)\r\n\tat com.github.dockerjava.netty.exec.BuildImageCmdExec.execute0(BuildImageCmdExec.java:18)\r\n\tat com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec.execute(AbstrAsyncDockerCmdExec.java:56)\r\n\tat com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec.exec(AbstrAsyncDockerCmdExec.java:21)\r\n\tat com.github.dockerjava.netty.exec.AbstrAsyncDockerCmdExec.exec(AbstrAsyncDockerCmdExec.java:12)\r\n\tat com.github.dockerjava.core.command.AbstrAsyncDockerCmd.exec(AbstrAsyncDockerCmd.java:21)\r\n\tat org.testcontainers.images.builder.ImageFromDockerfile.resolve(ImageFromDockerfile.java:124)\r\n\tat org.testcontainers.images.builder.ImageFromDockerfile.resolve(ImageFromDockerfile.java:30)\r\n\tat org.testcontainers.utility.LazyFuture.getResolvedValue(LazyFuture.java:20)\r\n\tat org.testcontainers.utility.LazyFuture.get(LazyFuture.java:27)\r\n\tat org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:737)\r\n\t... 11 more\r\nCaused by: java.io.IOException: Invalid Auth config file\r\n\tat com.github.dockerjava.core.AuthConfigFile.loadConfig(AuthConfigFile.java:146)\r\n\tat com.github.dockerjava.core.DefaultDockerClientConfig.getAuthConfigurations(DefaultDockerClientConfig.java:292)\r\n\t... 24 more\r\n\r\n```\r\n\r\nI recently logged in into my docker Hub, maybe that's the cause?\r\n$ docker -v\r\nDocker version 17.06.0-ce, build 02c1d87\r\n\r\nI'm running OSX El Capitan.", "url": "https://github.com/testcontainers/testcontainers-java/issues/396", "user": "sscarduzio", "labels": ["type/bug"], "created": "2017-07-09 15:21:41", "closed": "2017-07-09 15:35:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "JVM crash ", "body": "I'm out of ideas about what can ever cause this catastrophic crash, I was hoping some of you can give some pointers on where to look nest.\r\n\r\nhttps://travis-ci.org/sscarduzio/elasticsearch-readonlyrest-plugin/jobs/251713488\r\n\r\nRelevant code:\r\n\r\nhttps://github.com/sscarduzio/elasticsearch-readonlyrest-plugin/blob/support_2x/tests-utils/src/main/java/org/elasticsearch/plugin/readonlyrest/utils/containers/ESWithReadonlyRestContainer.java\r\n\r\n ", "url": "https://github.com/testcontainers/testcontainers-java/issues/395", "user": "sscarduzio", "labels": ["type/bug"], "created": "2017-07-09 13:51:04", "closed": "2017-07-24 20:53:07", "commits": {"bf1fce9c6225c88f732b75d0f2224b39fe1489c1": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "89500461b5ca987306d1d35413b867360432081d": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "99b10848aeb2c722d4182d68f2ae0431ec2194a4": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "bf1fce9c6225c88f732b75d0f2224b39fe1489c1", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "89500461b5ca987306d1d35413b867360432081d", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "99b10848aeb2c722d4182d68f2ae0431ec2194a4", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["51d1d45def544026728c53aaf56c2fe2818dcf27"], "nameRev": "99b10848aeb2c722d4182d68f2ae0431ec2194a4 tags/1.4.2~2", "commitMessage": "Upgrade to v2.0.0 of Visible Assertions (#409)\n\n* Upgrade to v2.0.0 of Visible Assertions\r\nRemoves usage of Jansi - fixes #395\r\n\r\n* Update changelog\r\n", "commitDateTime": "2017-07-24 21:53:06", "authoredDateTime": "2017-07-24 21:53:06", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Cannot start testcontainer if wincred store is used", "body": "```bash\r\njava.lang.ExceptionInInitializerError\r\n\tat sun.misc.Unsafe.ensureClassInitialized(Native Method)\r\n\tat sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(UnsafeFieldAccessorFactory.java:43)\r\n\tat sun.reflect.ReflectionFactory.newFieldAccessor(ReflectionFactory.java:142)\r\n\tat java.lang.reflect.Field.acquireFieldAccessor(Field.java:1088)\r\n\tat java.lang.reflect.Field.getFieldAccessor(Field.java:1069)\r\n\tat java.lang.reflect.Field.get(Field.java:393)\r\n\tat org.junit.runners.model.FrameworkField.get(FrameworkField.java:73)\r\n\tat org.junit.runners.model.TestClass.getAnnotatedFieldValues(TestClass.java:230)\r\n\tat org.junit.runners.ParentRunner.classRules(ParentRunner.java:255)\r\n\tat org.junit.runners.ParentRunner.withClassRules(ParentRunner.java:244)\r\n\tat org.junit.runners.ParentRunner.classBlock(ParentRunner.java:194)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:362)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:189)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: com.github.dockerjava.api.exception.DockerClientException: Failed to parse dockerCfgFile\r\n\tat com.github.dockerjava.core.DefaultDockerClientConfig.effectiveAuthConfig(DefaultDockerClientConfig.java:268)\r\n\tat com.github.dockerjava.core.DockerClientImpl.pullImageCmd(DockerClientImpl.java:215)\r\n\tat org.testcontainers.dockerclient.AuditLoggingDockerClient.pullImageCmd(AuditLoggingDockerClient.java:22)\r\n\tat org.testcontainers.DockerClientFactory.checkAndPullImage(DockerClientFactory.java:202)\r\n\tat org.testcontainers.DockerClientFactory.runInsideDocker(DockerClientFactory.java:222)\r\n\tat org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:117)\r\n\tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:110)\r\n\tat org.testcontainers.containers.FixedHostPortGenericContainer.<init>(FixedHostPortGenericContainer.java:16)\r\n\tat com.palmaplus.euphoria.data.ElasticsearchRepositoryTest.<clinit>(ElasticsearchRepositoryTest.java:38)\r\n\t... 18 more\r\nCaused by: java.io.IOException: The Auth Config file is empty\r\n\tat com.github.dockerjava.core.AuthConfigFile.loadConfig(AuthConfigFile.java:141)\r\n\tat com.github.dockerjava.core.DefaultDockerClientConfig.effectiveAuthConfig(DefaultDockerClientConfig.java:266)\r\n\t... 26 more\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/392", "user": "beihaifeiwu", "labels": ["client/docker-for-windows", "os/windows", "stale", "type/bug"], "created": "2017-07-03 05:49:48", "closed": "2018-10-28 07:37:28", "commits": {}, "ttf": 482.0002777777778, "commitsDetails": []}, {"title": "Shaded jackson issue with objectMapper.findAndRegisterModules()", "body": "My app uses jackson and:\r\n```\r\n    ObjectMapper objectMapper = new ObjectMapper(jsonFactory);\r\n    objectMapper.findAndRegisterModules();\r\n```\r\nWhen using testcontainers-java:1.3.1, this fails with the error:\r\n```\r\nCaused by: java.util.ServiceConfigurationError: com.fasterxml.jackson.databind.Module: Provider org.testcontainers.shaded.com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule not a subtype\r\n\tat java.util.ServiceLoader.fail(ServiceLoader.java:239)\r\n\tat java.util.ServiceLoader.access$300(ServiceLoader.java:185)\r\n\tat java.util.ServiceLoader$LazyIterator.nextService(ServiceLoader.java:376)\r\n\tat java.util.ServiceLoader$LazyIterator.next(ServiceLoader.java:404)\r\n\tat java.util.ServiceLoader$1.next(ServiceLoader.java:480)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.findModules(ObjectMapper.java:929)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.findModules(ObjectMapper.java:912)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.findAndRegisterModules(ObjectMapper.java:948)\r\n```\r\n\r\nIndeed in this jar META-INF/services contains one provider conf file named   `com.fasterxml.jackson.databind.Module`but contains shaded impl: `org.testcontainers.shaded.com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule`. Not sure if it's on purpose, as others are properly named.\r\nRenaming the file `org.testcontainers.shaded.com.fasterxml.jackson.databind.Module` fixes the issue. \r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/387", "user": "alextu", "labels": ["type/bug"], "created": "2017-06-28 21:36:30", "closed": "2017-07-01 19:32:53", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "RemoteDockerImage.get() fails when `list images` image name doesn't match `pull` name", "body": "We have a case where our use of `RemoteDockerImage.get()` failed with the error `Retry limit reached while trying to pull image`. With logging we were able to determine that the `docker pull` step was successful but since the container name returned by `list images` didn't match the name passed to pull, it couldn't tell that it was loaded.\r\n\r\nThe returned container name had the prefix `docker.io/` added to it. We were able to fix this by adding the prefix to the name passed to the `RemoteDockerImage` constructor, but that broke when running it locally (on MacOS), where this prefix was stripped off in the response.\r\n\r\nWe are using two different versions of docker and running them in two different environments, which could account for these different behaviors. Unfortunately we're not able to use the same version of docker everywhere, so we've added code to work around this issue, by trying both versions of the name and using whichever one works.\r\n\r\nRegardless of the different behaviors, it seems like in either case it was easy to create a docker image name that would cause `RemoteDockerImage` to fail. It would be better if there was a way to query docker about loaded images that didn't rely on an exact string match of the image name, since docker itself (apparently) considers the names to be interchangeable.\r\n\r\nDocker versions:\r\nOn Linux: 1.12.6\r\nOn MacOS: 17.03.1-ce", "url": "https://github.com/testcontainers/testcontainers-java/issues/384", "user": "pshapiro4broad", "labels": ["stale", "type/bug"], "created": "2017-06-28 15:24:34", "closed": "2018-11-11 04:41:19", "commits": {}, "ttf": 500.0002777777778, "commitsDetails": []}, {"title": "Testcontainers fails on free disk space of more than 2TB", "body": "```\r\n[Building Java 8] log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\r\n[Building Java 8]         \u2139\ufe0e Checking the system... \r\n[Building Java 8]         \u2714 Docker version is newer than 1.6.0 \r\n[Building Java 8] java.lang.NumberFormatException: For input string: \"2982480572\"\r\n[Building Java 8] \tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\r\n[Building Java 8] \tat java.lang.Integer.parseInt(Integer.java:583)\r\n[Building Java 8] \tat java.lang.Integer.valueOf(Integer.java:766)\r\n[Building Java 8] \tat org.testcontainers.DockerClientFactory.parseAvailableDiskSpace(DockerClientFactory.java:250)\r\n[Building Java 8] \tat org.testcontainers.DockerClientFactory.checkDiskSpace(DockerClientFactory.java:165)\r\n[Building Java 8] \tat org.testcontainers.DockerClientFactory.lambda$client$1(DockerClientFactory.java:126)\r\n[Building Java 8] \tat org.testcontainers.DockerClientFactory.runInsideDocker(DockerClientFactory.java:229)\r\n[Building Java 8] \tat org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:117)\r\n[Building Java 8] \tat org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:110)\r\n[ ............. ]\r\n[Building Java 8] \tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\n```\r\n\r\nIMO disk space should be represented as a long.", "url": "https://github.com/testcontainers/testcontainers-java/issues/379", "user": "chibenwa", "labels": ["type/bug"], "created": "2017-06-27 10:17:19", "closed": "2017-06-27 19:58:07", "commits": {"e7e8f526cc1669d8eb86a39ba613f9e315c6506e": {"commitGHEventType": "referenced", "commitUser": "bsideup"}, "1b89280ae95667611f783cb5a8c84d2237877778": {"commitGHEventType": "closed", "commitUser": "rnorth"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e7e8f526cc1669d8eb86a39ba613f9e315c6506e", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1b89280ae95667611f783cb5a8c84d2237877778", "commitGHEventType": "closed", "commitUser": "rnorth", "commitParents": ["ed63472f02af7603525a0e0078d1dd5547b2af23"], "nameRev": "1b89280ae95667611f783cb5a8c84d2237877778 tags/1.4.0~11", "commitMessage": "Fix number overflow in the disk space detection. Closes #379 (#380)\n\n* Fix number overflow in the disk space detection. Closes #379", "commitDateTime": "2017-06-27 20:58:05", "authoredDateTime": "2017-06-27 21:58:05", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "insertions": 11, "deletions": 7, "lines": 18}, {"filePath": "core/src/test/java/org/testcontainers/DockerClientFactoryTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerClientFactory.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.DockerClientFactory.parseAvailableDiskSpace(java.lang.String)", "TOT": 6, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.checkDiskSpace(com.github.dockerjava.api.DockerClient,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.DiskSpaceUsage", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DockerClientFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.DockerClientFactoryTest.shouldHandleBigDiskSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NullPointerException using logger org.slf4j:slf4j-log4j12:jar:1.7.21 with testcontainers", "body": "From testcontainers documentation:\r\n`Testcontainers, and many of the libraries it uses, utilize slf4j for logging. In order to see logs from Testcontainers, your project should include an SLF4J implementation (Logback is recommended). `\r\n\r\nI expect testcontainers to support **org.slf4j.slf4j-log4j12**\r\nThe next NullPointerException appears:\r\n\r\n```\r\nCaused by: java.lang.NullPointerException\r\n\tat java.util.Hashtable.put(Hashtable.java:459)\r\n\tat org.apache.log4j.MDC.put0(MDC.java:150)\r\n\tat org.apache.log4j.MDC.put(MDC.java:85)\r\n\tat org.slf4j.impl.Log4jMDCAdapter.put(Log4jMDCAdapter.java:60)\r\n\tat org.slf4j.MDC.put(MDC.java:116)\r\n\tat org.testcontainers.utility.AuditLogger.doLog(AuditLogger.java:34)\r\n\tat org.testcontainers.dockerclient.AuditLoggingDockerClient.lambda$startContainerCmd$3(AuditLoggingDockerClient.java:43)\r\n\tat org.testcontainers.dockerclient.AuditLoggingDockerClient.lambda$wrappedCommand$14(AuditLoggingDockerClient.java:102)\r\n\tat com.sun.proxy.$Proxy20.exec(Unknown Source)\r\n\tat org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:201)\r\n\t... 18 more\r\n```\r\n\r\nAuditLoggingDockerClient (for commands START,REMOVE,STOP,KILL,CREATE_NETWORK,REMOVE_NETWORK) has call like this:\r\n\r\n```\r\n(cmd, e) -> doLog(\"START\", null, containerId, cmd, e));\r\n\r\ndoLog(String action, String image, String containerId, DockerCmd<?> cmd, @Nullable Exception e)\r\n```\r\n\r\nSo image = null. \r\norg.slf4j.impl.Log4jMDCAdapter uses Hashtable where therev is a check for value != null during call 'put'. So NullPointerException occurs. \r\n\r\nPossible fix is to use image=\"\" instead of image=null", "url": "https://github.com/testcontainers/testcontainers-java/issues/375", "user": "islisava", "labels": ["type/bug"], "created": "2017-06-19 17:21:52", "closed": "2017-06-23 08:30:30", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Travis build stalling", "body": "We seem to be getting this reasonably frequently in our Travis output:\r\n```\r\n20:23:49.394 DEBUG org.testcontainers.containers.wait.HostPortWaitStrategy - Liveness check port of /romantic_pasteur is empty. Not waiting.\r\n20:23:49.419 INFO  \ud83d\udc33 [richnorth/vnc-recorder:latest] - Container richnorth/vnc-recorder:latest started\r\nNo output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.\r\nCheck the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received\r\nThe build has been terminated\r\n```\r\n\r\nWe need to investigate why this is happening and fix it. It would also be useful to know whether this is a problem with our CI setup or an actual bug that might affect users.", "url": "https://github.com/testcontainers/testcontainers-java/issues/373", "user": "rnorth", "labels": ["type/bug"], "created": "2017-06-18 06:11:37", "closed": "2017-06-28 12:28:39", "commits": {"492b875bd9a28b2101122851898c5149326228fd": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "fffb978577044d785a5defd788ddfa3f15468a40": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "2ac72e03b6bbea027b646483ec52dc079f801e5f": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "492b875bd9a28b2101122851898c5149326228fd", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fffb978577044d785a5defd788ddfa3f15468a40", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2ac72e03b6bbea027b646483ec52dc079f801e5f", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["b98af3f7453d724d43fc1b632b7f43f51285eebf"], "nameRev": "2ac72e03b6bbea027b646483ec52dc079f801e5f tags/1.4.0~8", "commitMessage": "Add time limit and retry to instantiation of RemoteWebDriver (#381)\n\n* Add time limit and retry to instantiation of RemoteWebDriver\r\nResolves #373\r\n\r\n* Update changelog\r\n", "commitDateTime": "2017-06-28 14:28:38", "authoredDateTime": "2017-06-28 13:28:38", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BrowserWebDriverContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.BrowserWebDriverContainer.containerIsStarted(com.github.dockerjava.api.command.InspectContainerResponse)", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "UnsupportedOperationException: View 'unix' not available", "body": "Hello,\r\nthank you for cool library. I was impressed at Geekout and started building project with that.\r\nMy desktop OS is Windows. \r\n\r\nhttps://github.com/testcontainers/testcontainers-java/blob/master/core/src/main/java/org/testcontainers/utility/MountableFile.java#L269 \r\n`try {\r\n            return (int) Files.getAttribute(path, \"unix:mode\");\r\n        } catch (IOException e) {\r\n            // fallback for non-posix environments\r\n.....`\r\n\r\nIf we look at javadoc for Files.getAttribute(), and its source in JDK, we can see and trace that in case of not-existing attribute view (as 'unix' if file is on windows file system), UnsupportedOperationException is thrown, not IOException. Everything fails here without any fallback to non-posix env. \r\n\r\nIs it a (known) bug, or I am doing something wrong?\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/371", "user": "glebsts", "labels": ["type/bug"], "created": "2017-06-16 12:53:52", "closed": "2017-06-21 07:23:55", "commits": {"82485c93abff22907dba4a022f1ed33e17f7bb01": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "82485c93abff22907dba4a022f1ed33e17f7bb01", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["23e599570a5a27b6fe7175d740237de265927903"], "nameRev": "82485c93abff22907dba4a022f1ed33e17f7bb01 tags/1.3.1~8", "commitMessage": "#371 'posix fallback bug' - added fallback in case of UnsupportedOperationException (#376)\n\n* #371 'posix fallback bug' - added fallback in case of UnsupportOperationException\r\n\r\n* #371 'posix fallback bug' - changelog update\r\n", "commitDateTime": "2017-06-20 14:00:19", "authoredDateTime": "2017-06-20 15:00:19", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/testcontainers/utility/MountableFile.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MountableFile.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.MountableFile.getUnixFileMode(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Shading issue in selenium testcontainer", "body": "Hi ,\r\n\r\nFirst of all congratulate you great library I'm excited to use it, however I have issue with dependencies. \r\nSelenium testcontainer (v 1.2.1) does not shade some dependencies. Especially in my case I have conflict with jackson-databind causing error:\r\n```\r\nCaused by: java.lang.NoSuchMethodError: com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase.findFormatOverrides(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Class;)Lcom/fasterxml/jackson/annotation/JsonFormat$Value;\r\nat com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase.createContextual(JSR310DateTimeDeserializerBase.java:32) ~[jackson-datatype-jsr310-2.8.8.jar:2.8.8]\r\nat com.fasterxml.jackson.datatype.jsr310.deser.InstantDeserializer.createContextual(InstantDeserializer.java:227) ~[jackson-datatype-jsr310-2.8.8.jar:2.8.8]\r\nat com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(DeserializationContext.java:669) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(DeserializationContext.java:430) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(StdDeserializer.java:947) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(BeanDeserializerBase.java:439) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:296) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(DeserializationContext.java:428) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.createContextual(CollectionDeserializer.java:164) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.createContextual(CollectionDeserializer.java:25) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(DeserializationContext.java:669) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(DeserializationContext.java:430) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(StdDeserializer.java:947) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(BeanDeserializerBase.java:439) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:296) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:461) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.ObjectReader._prefetchRootDeserializer(ObjectReader.java:1791) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.ObjectReader.<init>(ObjectReader.java:205) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.ObjectMapper._newReader(ObjectMapper.java:623) ~[selenium-1.2.1.jar:na]\r\nat com.fasterxml.jackson.databind.ObjectMapper.reader(ObjectMapper.java:3317) ~[selenium-1.2.1.jar:na]\r\n```\r\nJSR310DateTimeDeserializer in my case (v 2.8.8) calls method from StdDeserializer that is loaded from testcontainer:selenium jar and this version does not provide this method :( \r\n\r\nIs there chance to have shaded version released ? \r\nBest regards,\r\nPawel", "url": "https://github.com/testcontainers/testcontainers-java/issues/353", "user": "pawel-kowalski", "labels": ["stale", "type/bug"], "created": "2017-06-02 10:59:48", "closed": "2018-11-11 04:41:15", "commits": {}, "ttf": 526.0002777777778, "commitsDetails": []}, {"title": "Upgrade Docker-Java because of Docker 17.x", "body": "See docker-java/docker-java#830\r\n\r\nBasically, Docker changed the output message when an image was successfully built.\r\n\r\nWe should switch to 3.0.10.\r\n\r\nStack trace:\r\n\r\n> org.testcontainers.containers.ContainerFetchException: Can't get Docker image name from org.testcontainers.images.builder.ImageFromDockerfile@5536379e\r\n> \tat org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:739)\r\n> \tat org.testcontainers.containers.GenericContainer.logger(GenericContainer.java:278)\r\n> \tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:162)\r\nCaused by: org.testcontainers.shaded.com.github.dockerjava.api.exception.DockerClientException: Could not build image: null\r\n> \tat org.testcontainers.shaded.com.github.dockerjava.core.command.BuildImageResultCallback.getImageId(BuildImageResultCallback.java:71)\r\n> \tat org.testcontainers.shaded.com.github.dockerjava.core.command.BuildImageResultCallback.awaitImageId(BuildImageResultCallback.java:48)\r\n> \tat org.testcontainers.images.builder.ImageFromDockerfile.resolve(ImageFromDockerfile.java:146)\r\n> \tat org.testcontainers.images.builder.ImageFromDockerfile.resolve(ImageFromDockerfile.java:31)\r\n> \tat org.testcontainers.utility.LazyFuture.getResolvedValue(LazyFuture.java:20)\r\n> \tat org.testcontainers.utility.LazyFuture.get(LazyFuture.java:27)\r\n> \tat org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:737)\r\n> \tat org.testcontainers.containers.GenericContainer.logger(GenericContainer.java:278)\r\n> \tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:162)\r\n\r\n\r\nMainly because Successfully tagged supersedes Successfully built:\r\n\r\n> 2017-05-29 10:15:47 [dockerjava-netty-1-1] DEBUG o.t.s.c.g.d.c.c.BuildImageResultCallback - BuildResponseItem[stream=Successfully built 52e0fb63dc23\r\n> ,status=<null>,progressDetail=<null>,progress=<null>,id=<null>,from=<null>,time=<null>,errorDetail=<null>,error=<null>,aux=<null>]\r\n> 2017-05-29 10:15:47 [dockerjava-netty-1-1] DEBUG docker[testcontainers/pxapxvrxbpjsquuq] - Successfully built 52e0fb63dc23\r\n> 2017-05-29 10:15:47 [dockerjava-netty-1-1] DEBUG o.t.s.c.g.d.n.NettyDockerCmdExecFactory$1 - [id: 0xcc487959, L:null - R:/var/run/docker.sock] RECEIVED: DefaultHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 75, cap: 75/75, unwrapped: PooledUnsafeDirectByteBuf(ridx: 81, widx: 81, cap: 272)), decoderResult: success), 75B\r\n>          +-------------------------------------------------+\r\n>          |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f |\r\n> +--------+-------------------------------------------------+----------------+\r\n> |00000000| 7b 22 73 74 72 65 61 6d 22 3a 22 53 75 63 63 65 |{\"stream\":\"Succe|\r\n> |00000010| 73 73 66 75 6c 6c 79 20 74 61 67 67 65 64 20 74 |ssfully tagged t|\r\n> |00000020| 65 73 74 63 6f 6e 74 61 69 6e 65 72 73 2f 70 78 |estcontainers/px|\r\n> |00000030| 61 70 78 76 72 78 62 70 6a 73 71 75 75 71 3a 6c |apxvrxbpjsquuq:l|\r\n> |00000040| 61 74 65 73 74 5c 6e 22 7d 0d 0a                |atest\\n\"}..     |\r\n> +--------+-------------------------------------------------+----------------+\r\n> 2017-05-29 10:15:47 [dockerjava-netty-1-1] DEBUG o.t.s.c.g.d.c.c.BuildImageResultCallback - BuildResponseItem[stream=Successfully tagged testcontainers/pxapxvrxbpjsquuq:latest\r\n> ,status=<null>,progressDetail=<null>,progress=<null>,id=<null>,from=<null>,time=<null>,errorDetail=<null>,error=<null>,aux=<null>]\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/348", "user": "aniketbhatnagar", "labels": ["type/bug"], "created": "2017-05-29 10:42:12", "closed": "2017-06-06 16:18:09", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "TC JdbcDriver TC parameters leakage", "body": "When using the TC JdbcDriver, TC specific parameters in connectionString is sent to database.\r\nThey should probably be removed and not hit the actual database.", "url": "https://github.com/testcontainers/testcontainers-java/issues/345", "user": "npetzall", "labels": ["stale", "type/bug"], "created": "2017-05-26 08:12:11", "closed": "2018-11-11 02:41:06", "commits": {"86eec0313f6e2d374217d76870f32ebe2f8354a5": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 533.0002777777778, "commitsDetails": [{"commitHash": "86eec0313f6e2d374217d76870f32ebe2f8354a5", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Wait fails when test container is started within another container", "body": "I've a build setup where the test containers are started inside a build container.\r\nThe Docker host socket is mapped into the build container. \r\n\r\nThis is the command I use to run the build container\r\n```bash\r\ndocker run --privileged=true -v /var/run/docker.sock:/var/run/docker.sock -t ${BUILD_IMAGE}\r\n```\r\n\r\nEverything is fine when I run the tests from my local machine. But when I start the tests inside the the build container wait fails to check if the port specified port ist opened.\r\n\r\nThis is how I start the test container\r\n```java\r\n@ClassRule\r\npublic static GenericContainer = new GenericContainer(\"rabbitmq:3\").withExposedPorts(5672).waitingFor(Wait.forListeningPort());\r\n```\r\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/341", "user": "wbiller", "labels": ["stale", "type/bug"], "created": "2017-05-17 07:18:40", "closed": "2018-11-11 05:41:02", "commits": {}, "ttf": 542.0002777777778, "commitsDetails": []}, {"title": "No such image: alpine:3.5", "body": "Hi, we use testcontainers and have the problem with DockerInDocker scheme.\r\nIn case testcontainers could not found TINY_IMAGE locally it should try to pull it but it just throws exception. \r\nSeems like the line\r\n`log.info(\"Docker host IP address is {}\", strategy.getDockerHostIpAddress());`\r\nbroke the initialization flow of **DockerClientFactory** cause the TINY_IMAGE will be pulled few lines below.\r\n\r\nStacktrace:\r\n```\r\n2017-03-24 16:11:58.586 DEBUG [packages-api,,,] 1807 --- [java-netty-1-40] .t.s.c.g.d.n.NettyDockerCmdExecFactory$1 : [id: 0x7abeb272, L:null - R:/var/run/docker.sock] RECEIVED: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 68, cap: 68/68, unwrapped: PooledUnsafeDirectByteBuf(ridx: 183, widx: 183, cap: 1024)), decoderResult: success), 68B\r\n             +-------------------------------------------------+\r\n             |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f |\r\n    +--------+-------------------------------------------------+----------------+\r\n    |00000000| 7b 22 6d 65 73 73 61 67 65 22 3a 22 4e 6f 20 73  |{\"message\":\"No s |\r\n    |00000010| 75 63 68 20 69 6d 61 67 65 3a 20 64 6f 63 6b 65 |uch image: xxxxxx|\r\n    |00000020| 72 2e 6d 6f 73 63 6f 77 2e 61 6c 66 61 69 6e 74   | xxxxxxxxxxxxxxx  |\r\n    |00000030| 72 61 2e 6e 65 74 2f 61 6c 70 69 6e 65 3a 33 2e  | xxxxx/alpine:3.5   |\r\n    +--------+-------------------------------------------------+----------------+\r\n    2017-03-24 16:11:58.586 ERROR [packages-api,,,] 1807 --- [java-netty-1-40] o.t.s.c.g.d.c.a.ResultCallbackTemplate   : Error during callback\r\n\r\n    org.testcontainers.shaded.com.github.dockerjava.api.exception.NotFoundException: {\"message\":\"No such image: xxxxxxxxxxxxxxxxxxx/alpine:3.5\"}\r\n\r\n    \tat org.testcontainers.shaded.com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:103) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:233) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:961) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.epoll.EpollDomainSocketChannel$EpollDomainUnsafe.epollInReady(EpollDomainSocketChannel.java:140) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:386) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:302) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:877) [testcontainers-1.2.0.jar:na]\r\n    \tat org.testcontainers.shaded.io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144) [testcontainers-1.2.0.jar:na]\r\n    \tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_112]\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/323", "user": "gorelikov", "labels": ["type/bug"], "created": "2017-04-05 16:17:38", "closed": "2017-04-06 19:30:21", "commits": {"9319ada6d530279a625eaa4f5c093740938526b6": {"commitGHEventType": "referenced", "commitUser": "bsideup"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "9319ada6d530279a625eaa4f5c093740938526b6", "commitGHEventType": "referenced", "commitUser": "bsideup", "commitParents": ["c5cbbbefc03c8372faaa379a9de652488cd87917"], "nameRev": "9319ada6d530279a625eaa4f5c093740938526b6 tags/testcontainers-1.2.1~2", "commitMessage": "#323 Fix for missed TINY_IMAGE during DockerClient initialization (#324)\n\n* Fix for missed TINY_IMAGE during DockerClient initialization in case of DinD environment\r\n\r\n* Clean up following review comments\r\n", "commitDateTime": "2017-04-06 08:08:26", "authoredDateTime": "2017-04-06 08:08:26", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "insertions": 11, "deletions": 7, "lines": 18}, {"filePath": "core/src/test/java/org/testcontainers/DockerClientFactoryTest.java", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerClientFactory.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.DockerClientFactory.client()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.checkDiskSpace(com.github.dockerjava.api.DockerClient)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.checkAndPullImage(com.github.dockerjava.api.DockerClient,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.runInsideDocker(com.github.dockerjava.api.DockerClient,java.util.function.Consumer,java.util.function.BiFunction)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DockerClientFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.DockerClientFactoryTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Spontaneous netty errors when pulling images with latest Docker for Mac", "body": "I think this might be more of an issue for `docker-java`, but thought I'd raise it here for awareness. This is using Docker for Mac:\r\nVersion 17.03.0-ce-mac2 (15654)\r\nChannel: stable\r\n1d7d97bbbd\r\n\r\nI'm seeing an occasional error while an image is being pulled:\r\n```\r\nsimpleExploreTest(org.testcontainers.junit.SpecificImageNameWebDriverContainerTest)  Time elapsed: 0.004 sec  <<< ERROR!\r\norg.testcontainers.containers.ContainerFetchException: Can't get Docker image name from org.testcontainers.images.RemoteDockerImage@57ac5227\r\n\tat org.testcontainers.containers.GenericContainer.getDockerImageName(GenericContainer.java:714)\r\n\tat org.testcontainers.containers.GenericContainer.setDockerImageName(GenericContainer.java:702)\r\n\tat org.testcontainers.containers.BrowserWebDriverContainer.<init>(BrowserWebDriverContainer.java:66)\r\n\tat org.testcontainers.junit.SpecificImageNameWebDriverContainerTest.<init>(SpecificImageNameWebDriverContainerTest.java:15)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:217)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:266)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:263)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\r\n\tat org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\r\n\tat org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\r\nCaused by: org.testcontainers.shaded.io.netty.handler.codec.CorruptedFrameException: invalid JSON received at byte position 214: 2c2270726f6772657373223a225b3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d5c75303033655d20342e393834206b422f342e393834206b42222c226964223a22646463663236313335633261227d0d0a\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.json.JsonObjectDecoder.decode(JsonObjectDecoder.java:163)\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:411)\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:248)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)\r\n\tat org.testcontainers.shaded.com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:72)\r\n\tat org.testcontainers.shaded.com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat org.testcontainers.shaded.io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)\r\n\tat org.testcontainers.shaded.io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:233)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)\r\n\tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\r\n\tat org.testcontainers.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\r\n\tat org.testcontainers.shaded.io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:350)\r\n\tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:372)\r\n\tat org.testcontainers.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:358)\r\n\tat org.testcontainers.shaded.io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:123)\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:571)\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:512)\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:426)\r\n\tat org.testcontainers.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:398)\r\n\tat org.testcontainers.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:877)\r\n\tat org.testcontainers.shaded.io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```", "url": "https://github.com/testcontainers/testcontainers-java/issues/312", "user": "rnorth", "labels": ["client/docker-for-mac", "type/bug"], "created": "2017-03-12 07:27:20", "closed": "2017-06-04 11:02:50", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "Cannot start vnc-recorder container", "body": "Hi,\r\nI'm in the process of moving a local build (currently on Mac) out to Jenkins (running Ubuntu 16.10 + Docker 1.13.1). With Jenkins I use docker containers for build agents (\"child\" containers are actually created as siblings on the docker host so they're not nested). However, I'm getting the following error when trying to start a BrowserWebDriverContainer. On my local build (running Docker for Mac [latest]) I'm not getting this issue. Could you shed some insight on what the cause might be and if there are any workarounds please? For the Jenkins build, I'm currently having to skip screen recording which isn't ideal.\r\n\r\nLOG:\r\n12:01:26 12:01:26.559 [main] ERROR docker[richnorth/vnc-recorder:latest] - Container log output (if any) will follow:\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: Traceback (most recent call last):\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: File \"/usr/local/bin/flvrec.py\", line 125, in <module>\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: if __name__ == \"__main__\": sys.exit(main(sys.argv))\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: File \"/usr/local/bin/flvrec.py\", line 123, in main\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: debug=debug, verbose=verbose)\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: File \"/usr/local/bin/flvrec.py\", line 24, in flvrec\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: pwdcache = PWDFile(pwdfile)\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: File \"/usr/local/lib/python2.7/dist-packages/vnc2flv/rfb.py\", line 50, in __init__\r\n12:01:26 12:01:26.561 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: fp = file(fname)\r\n12:01:26 12:01:26.562 [dockerjava-netty-1-13] INFO  docker[richnorth/vnc-recorder:latest] - STDERR: IOError: [Errno 2] No such file or directory: '/recording/password'\r\n12:01:26 12:01:26.562 [main] ERROR docker[selenium/standalone-firefox-debug:2.53.1] - Could not start container\r\n12:01:26 org.testcontainers.containers.ContainerLaunchException: Container startup failed", "url": "https://github.com/testcontainers/testcontainers-java/issues/308", "user": "cchanning", "labels": ["type/bug"], "created": "2017-03-04 12:15:45", "closed": "2018-03-14 14:05:54", "commits": {}, "ttf": 375.0002777777778, "commitsDetails": []}, {"title": "Resolve issues with Docker Compose when running under Docker for Windows", "body": "Re [this](https://github.com/testcontainers/testcontainers-java/pull/297#issuecomment-282163199) on #297, it seems that Docker Compose has an issue when using Docker for Windows.\r\n\r\nWe are releasing Docker for Windows support so as not to delay any further, but docker compose support still needs to be fixed.", "url": "https://github.com/testcontainers/testcontainers-java/issues/306", "user": "rnorth", "labels": ["area/docker-compose", "client/docker-for-windows", "help wanted", "type/bug"], "created": "2017-03-03 08:24:19", "closed": "2018-02-26 21:33:21", "commits": {"1ef01937a532219fe91e76cabb2efa75505ca4e7": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 360.0002777777778, "commitsDetails": [{"commitHash": "1ef01937a532219fe91e76cabb2efa75505ca4e7", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["4caddcc2b51d05aaf5689a189caf535001273da8"], "nameRev": "1ef01937a532219fe91e76cabb2efa75505ca4e7 tags/testcontainers-1.2.0~1", "commitMessage": "Update CHANGELOG for 1.2.0 release:\n\n## [1.2.0] - 2017-03-12\n### Fixed\n- Fix various escaping issues that may arise when paths contain spaces (#263, #279)\n- General documentation fixes/improvements (#300, #303, #304)\n- Improve reliability of `ResourceReaper` when there are a large number of containers returned by `docker ps -a` (#295)\n\n### Changed\n- Support Docker for Windows via TCP socket connection (#291, #297, #309). _Note that Docker Compose is not yet supported under Docker for Windows (see #306)\n- Expose `docker-java`'s `CreateContainerCmd` API for low-level container tweaking (#301)\n- Shade `org.newsclub` and Guava dependencies (#299, #292)\n- Add `org.testcontainers` label to all containers created by Testcontainers (#294)\n", "commitDateTime": "2017-03-12 20:58:35", "authoredDateTime": "2017-03-12 20:58:35", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Support for identitytoken auth type", "body": "Issue found when attempting to run the test in the spring boot example here:\r\nhttps://github.com/testcontainers/testcontainers-java-examples/tree/master/spring-boot\r\n\r\n**Environment**\r\n- Ubuntu 16.04\r\n- docker 1.13.1\r\n- IntelliJ IDEA\r\n\r\nThis is the output from executing the maven test phase: [build_output.txt](https://github.com/testcontainers/testcontainers-java/files/782839/build_output.txt)\r\n\r\nI verified the version by adding the following dependency to the pom.xml\r\n```\r\n        <dependency>\r\n            <groupId>org.testcontainers</groupId>\r\n            <artifactId>testcontainers</artifactId>\r\n            <version>1.1.9</version>\r\n        </dependency>\r\n```\r\n\r\n@bsideup identified issue https://github.com/testcontainers/testcontainers-java/pull/270 as the possible cause.\r\n\r\nAfter testing with version 1.1.7 the test passed. So it's likely a regression caused by the above issue.\r\n\r\nJust an extra detail. After the test passed using version 1.1.7 I recompiled with 1.1.9 and the test passed. I had to manually delete the redis image to cause the error to occur again. So if you already have the required image in your local environment you may need to remove it to reproduce.", "url": "https://github.com/testcontainers/testcontainers-java/issues/293", "user": "peter-evans", "labels": ["type/bug"], "created": "2017-02-17 10:04:22", "closed": "2018-10-01 12:01:13", "commits": {}, "ttf": 591.0002777777778, "commitsDetails": []}, {"title": "Browser container fails to start time after time", "body": "I see this happening time after time (see below). It slows down tests as tc is retrying to start container until success. I'm trying to understand where the problem is. Should it be reported under docker selenium or here?\r\n\r\n```10:22:09.913 u: [INFO]             o.t.DockerClientFactory:\tConnected to docker: \r\n  Server Version: 1.12.4-rc1\r\n  API Version: 1.24\r\n  Operating System: Boot2Docker 1.12.4-rc1 (TCL 7.2); HEAD : 2a30a73 - Thu Dec  8 18:24:06 UTC 2016\r\n  Total Memory: 7975 MB\r\n10:22:11.021 u: [INFO]             o.t.DockerClientFactory:\tDisk utilization in Docker environment is 4% (87077 MB available )\r\n10:22:11.264 u: [INFO]        o.t.containers.SeleniumUtils:\tSelenium API version 3.0.1 detected on classpath\r\n10:22:11.270 u: [INFO]                              ?.0.1]:\tCreating container for image: selenium/standalone-chrome-debug:3.0.1\r\n10:22:11.452 u: [INFO]                              ?.0.1]:\tStarting container with ID: 04d11208de225739d2a060ba7c44bd329f81e09db2aa6c612dad6ee614647b6d\r\n10:22:11.830 u: [INFO]                              ?.0.1]:\tContainer selenium/standalone-chrome-debug:3.0.1 is starting: 04d11208de225739d2a060ba7c44bd329f81e09db2aa6c612dad6ee614647b6d\r\nDec 30, 2016 10:22:13 AM org.openqa.selenium.remote.ProtocolHandshake createSession\r\nINFO: Attempting bi-dialect session, assuming Postel's Law holds true on the remote end\r\n10:24:11.989 u: [ERROR]                              ?.0.1]:\tCould not start container\r\norg.rnorth.ducttape.TimeoutException: org.rnorth.ducttape.TimeoutException: java.util.concurrent.TimeoutException\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:53) ~[selenium-1.1.7.jar:na]\r\n\tat org.testcontainers.containers.BrowserWebDriverContainer.waitUntilContainerStarted(BrowserWebDriverContainer.java:132) ~[selenium-1.1.7.jar:na]\r\n\tat org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:221) [selenium-1.1.7.jar:na]\r\n\tat org.testcontainers.containers.GenericContainer.lambda$start$0(GenericContainer.java:171) [selenium-1.1.7.jar:na]\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:76) ~[selenium-1.1.7.jar:na]\r\n\tat org.testcontainers.containers.GenericContainer.start(GenericContainer.java:169) [selenium-1.1.7.jar:na]\r\n\tat stepdefs.BrowserCucumberHooks.configureAndStartBrowserContainer(BrowserCucumberHooks.java:87) ~[test/:na]\r\n\tat stepdefs.BrowserCucumberHooks.startBrowserContainer(BrowserCucumberHooks.java:61) ~[test/:na]\r\n\tat stepdefs.BrowserCucumberHooks.beforeScenario(BrowserCucumberHooks.java:44) ~[test/:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_66]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_66]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_66]\r\n\tat java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_66]\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:37) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:13) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:31) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60) ~[cucumber-java-1.2.4.jar:na]\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:223) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:211) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:201) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.runtime.Runtime.run(Runtime.java:121) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.api.cli.Main.run(Main.java:36) ~[cucumber-core-1.2.4.jar:na]\r\n\tat cucumber.api.cli.Main.main(Main.java:18) ~[cucumber-core-1.2.4.jar:na]\r\nCaused by: org.rnorth.ducttape.TimeoutException: java.util.concurrent.TimeoutException\r\n\tat org.rnorth.ducttape.timeouts.Timeouts.callFuture(Timeouts.java:59) ~[selenium-1.1.7.jar:na]\r\n\tat org.rnorth.ducttape.timeouts.Timeouts.getWithTimeout(Timeouts.java:32) ~[selenium-1.1.7.jar:na]\r\n\tat org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:38) ~[selenium-1.1.7.jar:na]\r\n\t... 24 common frames omitted\r\nCaused by: java.util.concurrent.TimeoutException: null\r\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:205) ~[na:1.8.0_66]\r\n\tat org.rnorth.ducttape.timeouts.Timeouts.callFuture(Timeouts.java:54) ~[selenium-1.1.7.jar:na]\r\n\t... 26 common frames omitted\r\n10:24:11.989 u: [ERROR]                              ?.0.1]:\tContainer log output (if any) will follow:\r\n10:24:12.027 u: [INFO]                              ?.0.1]:\tSTDOUT: Waiting xvfb...\r\n10:24:12.028 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.371 INFO - Selenium build info: version: '3.0.1', revision: '1969d75'\r\n10:24:12.028 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.372 INFO - Launching a standalone Selenium Server\r\n10:24:12.028 u: [INFO]                              ?.0.1]:\tSTDOUT: 2016-12-30 10:22:09.385:INFO::main: Logging initialized @209ms\r\n10:24:12.028 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.439 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped:\r\n10:24:12.028 u: [INFO]                              ?.0.1]:\tSTDOUT: registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match the current platform LINUX\r\n10:24:12.029 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.439 INFO - Driver provider org.openqa.selenium.edge.EdgeDriver registration is skipped:\r\n10:24:12.029 u: [INFO]                              ?.0.1]:\tSTDOUT: registration capabilities Capabilities [{browserName=MicrosoftEdge, version=, platform=WINDOWS}] does not match the current platform LINUX\r\n10:24:12.029 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.439 INFO - Driver class not found: com.opera.core.systems.OperaDriver\r\n10:24:12.029 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.440 INFO - Driver provider com.opera.core.systems.OperaDriver registration is skipped:\r\n10:24:12.029 u: [INFO]                              ?.0.1]:\tSTDOUT: Unable to create new instances on this machine.\r\n10:24:12.030 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.440 INFO - Driver class not found: com.opera.core.systems.OperaDriver\r\n10:24:12.030 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.440 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered\r\n10:24:12.030 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.441 INFO - Driver provider org.openqa.selenium.safari.SafariDriver registration is skipped:\r\n10:24:12.030 u: [INFO]                              ?.0.1]:\tSTDOUT: registration capabilities Capabilities [{browserName=safari, version=, platform=MAC}] does not match the current platform LINUX\r\n10:24:12.031 u: [INFO]                              ?.0.1]:\tSTDOUT: 2016-12-30 10:22:09.472:INFO:osjs.Server:main: jetty-9.2.15.v20160210\r\n10:24:12.031 u: [INFO]                              ?.0.1]:\tSTDOUT: 2016-12-30 10:22:09.498:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@5d5eef3d{/,null,AVAILABLE}\r\n10:24:12.031 u: [INFO]                              ?.0.1]:\tSTDOUT: 2016-12-30 10:22:09.510:INFO:osjs.ServerConnector:main: Started ServerConnector@1b604f19{HTTP/1.1}{0.0.0.0:4444}\r\n10:24:12.031 u: [INFO]                              ?.0.1]:\tSTDOUT: 2016-12-30 10:22:09.511:INFO:osjs.Server:main: Started @335ms\r\n10:24:12.031 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:09.511 INFO - Selenium Server is up and running\r\n10:24:12.031 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:09 passing arg to libvncserver: -rfbport\r\n10:24:12.031 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:09 passing arg to libvncserver: 5900\r\n10:24:12.032 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:09 -usepw: found /root/.vnc/passwd\r\n10:24:12.032 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:09 x11vnc version: 0.9.13 lastmod: 2011-08-10  pid: 79\r\n10:24:12.032 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:09 Using X display :99.0\r\n10:24:12.032 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:09 rootwin: 0x25c reswin: 0x200001 dpy: 0x271b550\r\n10:24:12.032 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:09\r\n10:24:12.033 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:09 ------------------ USEFUL INFORMATION ------------------\r\n10:24:12.033 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.ignoreBorder\r\n10:24:12.033 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.033 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.forcePseudoTransparency\r\n10:24:12.033 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.033 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.colorsPerChannel\r\n10:24:12.034 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.034 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.doubleClickInterval\r\n10:24:12.034 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.034 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.tabPadding\r\n10:24:12.034 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.034 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.styleOverlay\r\n10:24:12.034 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.035 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.slitlistFile\r\n10:24:12.035 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.035 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.appsFile\r\n10:24:12.035 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.035 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.tabsAttachArea\r\n10:24:12.035 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.036 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.cacheLife\r\n10:24:12.036 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.036 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.cacheMax\r\n10:24:12.036 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.036 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.autoRaiseDelay\r\n10:24:12.036 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.036 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.ignoreBorder\r\n10:24:12.037 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.037 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.forcePseudoTransparency\r\n10:24:12.037 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.037 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.colorsPerChannel\r\n10:24:12.037 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.037 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.doubleClickInterval\r\n10:24:12.038 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.038 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.tabPadding\r\n10:24:12.038 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.038 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.styleOverlay\r\n10:24:12.038 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.038 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.slitlistFile\r\n10:24:12.038 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.039 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.appsFile\r\n10:24:12.039 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.039 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.tabsAttachArea\r\n10:24:12.039 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.039 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.cacheLife\r\n10:24:12.039 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.039 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.cacheMax\r\n10:24:12.040 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.040 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.autoRaiseDelay\r\n10:24:12.040 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.040 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.opaqueMove\r\n10:24:12.040 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.040 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.fullMaximization\r\n10:24:12.041 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.041 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.maxIgnoreIncrement\r\n10:24:12.041 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.041 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.maxDisableMove\r\n10:24:12.041 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.041 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.maxDisableResize\r\n10:24:12.043 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.043 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.workspacewarping\r\n10:24:12.043 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.043 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.showwindowposition\r\n10:24:12.043 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.043 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.autoRaise\r\n10:24:12.043 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.043 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.clickRaises\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.defaultDeco\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tab.placement\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.windowMenu\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.noFocusWhileTypingDelay\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.workspaces\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.edgeSnapThreshold\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.044 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.window.focus.alpha\r\n10:24:12.045 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.045 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.window.unfocus.alpha\r\n10:24:12.045 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.045 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.menu.alpha\r\n10:24:12.045 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.046 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.menuDelay\r\n10:24:12.046 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.046 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tab.width\r\n10:24:12.046 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tooltipDelay\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.allowRemoteActions\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.clientMenu.usePixmap\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tabs.usePixmap\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tabs.maxOver\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tabs.intitlebar\r\n10:24:12.047 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.focusModel\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tabFocusModel\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.focusNewWindows\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.focusSameHead\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.rowPlacementDirection\r\n10:24:12.048 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.colPlacementDirection\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.windowPlacement\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.ignoreBorder\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.forcePseudoTransparency\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.colorsPerChannel\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.doubleClickInterval\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.050 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.tabPadding\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.styleOverlay\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.slitlistFile\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.appsFile\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.tabsAttachArea\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.cacheLife\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.cacheMax\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.autoRaiseDelay\r\n10:24:12.051 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.053 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.opaqueMove\r\n10:24:12.053 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.053 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.fullMaximization\r\n10:24:12.053 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.053 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.maxIgnoreIncrement\r\n10:24:12.053 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.maxDisableMove\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.maxDisableResize\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.workspacewarping\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.showwindowposition\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.autoRaise\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.clickRaises\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.defaultDeco\r\n10:24:12.054 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.055 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tab.placement\r\n10:24:12.055 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.055 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.windowMenu\r\n10:24:12.055 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.055 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.noFocusWhileTypingDelay\r\n10:24:12.055 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.057 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.workspaces\r\n10:24:12.057 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.057 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.edgeSnapThreshold\r\n10:24:12.057 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.058 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.window.focus.alpha\r\n10:24:12.058 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.059 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.window.unfocus.alpha\r\n10:24:12.060 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.060 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.menu.alpha\r\n10:24:12.060 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.060 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.menuDelay\r\n10:24:12.060 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.060 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tab.width\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tooltipDelay\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.allowRemoteActions\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.clientMenu.usePixmap\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tabs.usePixmap\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tabs.maxOver\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tabs.intitlebar\r\n10:24:12.061 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.focusModel\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.tabFocusModel\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.focusNewWindows\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.focusSameHead\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.rowPlacementDirection\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.063 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.colPlacementDirection\r\n10:24:12.064 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.064 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.windowPlacement\r\n10:24:12.064 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.064 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 X DAMAGE available on display, using it for polling hints.\r\n10:24:12.064 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   To disable this behavior use: '-noxdamage'\r\n10:24:12.064 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.064 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   Most compositing window managers like 'compiz' or 'beryl'\r\n10:24:12.065 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   cause X DAMAGE to fail, and so you may not see any screen\r\n10:24:12.065 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   updates via VNC.  Either disable 'compiz' (recommended) or\r\n10:24:12.065 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   supply the x11vnc '-noxdamage' command line option.\r\n10:24:12.065 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.065 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Wireframing: -wireframe mode is in effect for window moves.\r\n10:24:12.067 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   If this yields undesired behavior (poor response, painting\r\n10:24:12.067 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   errors, etc) it may be disabled:\r\n10:24:12.067 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10    - use '-nowf' to disable wireframing completely.\r\n10:24:12.067 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10    - use '-nowcr' to disable the Copy Rectangle after the\r\n10:24:12.067 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10      moved window is released in the new position.\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   Also see the -help entry for tuning parameters.\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   You can press 3 Alt_L's (Left \"Alt\" key) in a row to\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   repaint the screen, also see the -fixscreen option for\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   periodic repaints.\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 XFIXES available on display, resetting cursor mode\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   to: '-cursor most'.\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   to disable this behavior use: '-cursor arrow'\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   or '-noxfixes'.\r\n10:24:12.068 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 using XFIXES for cursor drawing.\r\n10:24:12.069 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 GrabServer control via XTEST.\r\n10:24:12.069 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.069 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Scroll Detection: -scrollcopyrect mode is in effect to\r\n10:24:12.069 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   use RECORD extension to try to detect scrolling windows\r\n10:24:12.069 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   (induced by either user keystroke or mouse input).\r\n10:24:12.070 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   If this yields undesired behavior (poor response, painting\r\n10:24:12.070 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   errors, etc) it may be disabled via: '-noscr'\r\n10:24:12.070 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   Also see the -help entry for tuning parameters.\r\n10:24:12.070 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   You can press 3 Alt_L's (Left \"Alt\" key) in a row to\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   repaint the screen, also see the -fixscreen option for\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   periodic repaints.\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 XKEYBOARD: number of keysyms per keycode 7 is greater\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   than 4 and 51 keysyms are mapped above 4.\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   Automatically switching to -xkb mode.\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   If this makes the key mapping worse you can\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   disable it with the \"-noxkb\" option.\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10   Also, remember \"-remap DEAD\" for accenting characters.\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 X FBPM extension not supported.\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 X display is not capable of DPMS.\r\n10:24:12.071 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 --------------------------------------------------------\r\n10:24:12.072 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.072 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Default visual ID: 0x21\r\n10:24:12.072 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Read initial data from X display into framebuffer.\r\n10:24:12.073 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 initialize_screen: fb_depth/fb_bpp/fb_Bpl 24/32/5120\r\n10:24:12.073 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.073 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 X display :99.0 is 32bpp depth=24 true color\r\n10:24:12.073 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Listening for VNC connections on TCP port 5900\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Listening for VNC connections on TCP6 port 5900\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 listen6: bind: Address already in use\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Not listening on IPv6 interface.\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Xinerama is present and active (e.g. multi-head).\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Xinerama: number of sub-screens: 1\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 Xinerama: no blackouts needed (only one sub-screen)\r\n10:24:12.074 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 fb read rate: 1820 MB/sec\r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 fast read: reset -wait  ms to: 10\r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 fast read: reset -defer ms to: 10\r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 The X server says there are 10 mouse buttons.\r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10 screen setup finished.\r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: 30/12/2016 10:22:10\r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: \r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: The VNC desktop is:      04d11208de22:0\r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: \r\n10:24:12.075 u: [INFO]                              ?.0.1]:\tSTDERR: ******************************************************************************\r\n10:24:12.077 u: [INFO]                              ?.0.1]:\tSTDERR: Have you tried the x11vnc '-ncache' VNC client-side pixel caching feature yet?\r\n10:24:12.077 u: [INFO]                              ?.0.1]:\tSTDERR: \r\n10:24:12.077 u: [INFO]                              ?.0.1]:\tSTDERR: The scheme stores pixel data offscreen on the VNC viewer side for faster\r\n10:24:12.077 u: [INFO]                              ?.0.1]:\tSTDERR: retrieval.  It should work with any VNC viewer.  Try it by running:\r\n10:24:12.077 u: [INFO]                              ?.0.1]:\tSTDERR: \r\n10:24:12.077 u: [INFO]                              ?.0.1]:\tSTDERR: x11vnc -ncache 10 ...\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: \r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: One can also add -ncache_cr for smooth 'copyrect' window motion.\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: More info: http://www.karlrunge.com/x11vnc/faq.html#faq-client-caching\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: \r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDOUT: PORT=5900\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.slit.acceptKdeDockapps\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.slit.autoHide\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.slit.maxOver\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.slit.placement\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.slit.alpha\r\n10:24:12.078 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.079 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.slit.onhead\r\n10:24:12.079 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.079 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.slit.layer\r\n10:24:12.079 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.079 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.toolbar.autoHide\r\n10:24:12.081 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.081 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.toolbar.maxOver\r\n10:24:12.081 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.081 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.toolbar.visible\r\n10:24:12.081 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.081 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.toolbar.alpha\r\n10:24:12.081 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.081 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.toolbar.layer\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.toolbar.onhead\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.toolbar.placement\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.toolbar.height\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.iconbar.mode\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.iconbar.alignment\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.iconbar.iconWidth\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.082 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.iconbar.iconTextPadding\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDERR: Failed to read: session.screen0.iconbar.usePixmap\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDERR: Setting default value\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:10.625 INFO - SessionCleaner initialized with insideBrowserTimeout 0 and clientGoneTimeout 1800000 polling every 180000\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:10.662 INFO - Executing: [new session: Capabilities [{browserName=chrome, version=, platform=ANY}]])\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:10.674 INFO - Creating a new session for Capabilities [{browserName=chrome, version=, platform=ANY}]\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDOUT: Starting ChromeDriver 2.25.426924 (649f9b868f6783ec9de71c123212b908bf3b232e) on port 23053\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDOUT: Only local connections are allowed.\r\n10:24:12.083 u: [INFO]                              ?.0.1]:\tSTDOUT: 10:22:10.931 INFO - Attempting bi-dialect session, assuming Postel's Law holds true on the remote end\r\n10:24:12.084 u: [INFO]                              ?.0.1]:\tCreating container for image: selenium/standalone-chrome-debug:3.0.1\r\n10:24:12.270 u: [INFO]                              ?.0.1]:\tStarting container with ID: f9e54720eb3c8b54e87fc5a063a47a25d2a0f5d9597d7146e7950aad1084cc77\r\n10:24:12.642 u: [INFO]                              ?.0.1]:\tContainer selenium/standalone-chrome-debug:3.0.1 is starting: f9e54720eb3c8b54e87fc5a063a47a25d2a0f5d9597d7146e7950aad1084cc77```", "url": "https://github.com/testcontainers/testcontainers-java/issues/257", "user": "pavelpp", "labels": ["type/bug"], "created": "2016-12-30 11:31:40", "closed": "2018-04-11 12:07:10", "commits": {}, "ttf": 467.0002777777778, "commitsDetails": []}, {"title": "test failures in version 1.1.0", "body": "At commit 248befb, I'm seeing test failures on my local box.  There's enough output that I hesitate to paste it all.  I'm happy to add more to help figure out what's going on.\n\n```\n$ mvn clean install\n<snipped...a lot>\nResults :\n\nFailed tests:   pullingNonExistentImageFailsGracefully(org.testcontainers.junit.NonExistentImagePullTest): Pulling a nonexistent container will cause an exception to be thrown: IllegalStateException was thrown instead of ContainerFetchException\n\nTests in error: \n  secondTest(org.testcontainers.junit.DockerComposeV2FormatTest): Can't get Docker image name from org.testcontainers.images.RemoteDockerImage@2f48b3d2\n  simpleDockerfileWorks(org.testcontainers.junit.DockerfileTest): failed to create a child event loop\n  customizableImage(org.testcontainers.junit.DockerfileTest): Can't get Docker image name from org.testcontainers.junit.DockerfileTest$1@55787112\n  dockerfileBuilderWorks(org.testcontainers.junit.DockerfileTest): failed to create a child event loop\n  org.testcontainers.junit.DockerNetworkModeTest\n  testFixedHostPortMapping(org.testcontainers.junit.FixedHostPortContainerTest): failed to create a child event loop\n  org.testcontainers.junit.GenericContainerRuleTest\n  testFetchStdoutWithNoLimit(org.testcontainers.junit.OutputStreamTest): failed to create a child event loop\n  testFetchStdout(org.testcontainers.junit.OutputStreamTest): failed to create a child event loop\n  testFetchStdoutWithTimeout(org.testcontainers.junit.OutputStreamTest): failed to create a child event loop\n  testLogConsumer(org.testcontainers.junit.OutputStreamTest): failed to create a child event loop\n  testToStringConsumer(org.testcontainers.junit.OutputStreamTest): failed to create a child event loop\n  simpleTest[alpine:3.2](org.testcontainers.junit.ParameterizedDockerfileContainerTest): failed to create a child event loop\n  simpleTest[alpine:3.3](org.testcontainers.junit.ParameterizedDockerfileContainerTest): failed to create a child event loop\n  testWaitUntilReady_Success(org.testcontainers.junit.wait.HostPortWaitStrategyTest): failed to create a child event loop\n  testWaitUntilReady_Timeout(org.testcontainers.junit.wait.HostPortWaitStrategyTest): failed to create a child event loop\n  testWaitUntilReady_Success(org.testcontainers.junit.wait.HttpWaitStrategyTest): failed to create a child event loop\n  testWaitUntilReady_Timeout(org.testcontainers.junit.wait.HttpWaitStrategyTest): failed to create a child event loop\n\nTests run: 52, Failures: 1, Errors: 18, Skipped: 3\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] TestContainers Parent POM .......................... SUCCESS [  0.850 s]\n[INFO] TestContainers Core ................................ FAILURE [02:30 min]\n[INFO] TestContainers :: JDBC ............................. SKIPPED\n[INFO] TestContainers :: JDBC :: MySQL .................... SKIPPED\n[INFO] TestContainers :: JDBC :: PostgreSQL ............... SKIPPED\n[INFO] TestContainers :: Selenium ......................... SKIPPED\n[INFO] TestContainers :: nginx ............................ SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 02:31 min\n[INFO] Finished at: 2016-07-06T10:06:27-07:00\n[INFO] Final Memory: 38M/524M\n[INFO] ------------------------------------------------------------------------\n```\n\nwith a stack trace that shows up a bunch:\n\n```\nException in thread \"Thread-2\" java.lang.IllegalStateException: failed to create a child event loop\n    at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:81)\n    at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:48)\n    at io.netty.channel.MultithreadEventLoopGroup.<init>(MultithreadEventLoopGroup.java:57)\n    at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:67)\n    at io.netty.channel.nio.NioEventLoopGroup.<init>(NioEventLoopGroup.java:54)\n    at com.github.dockerjava.netty.DockerCmdExecFactoryImpl$InetSocketInitializer.init(DockerCmdExecFactoryImpl.java:241)\n    at com.github.dockerjava.netty.DockerCmdExecFactoryImpl.init(DockerCmdExecFactoryImpl.java:197)\n    at com.github.dockerjava.core.DockerClientImpl.withDockerCmdExecFactory(DockerClientImpl.java:159)\n    at com.github.dockerjava.core.DockerClientBuilder.build(DockerClientBuilder.java:45)\n    at org.testcontainers.dockerclient.DockerClientProviderStrategy.getClientForConfig(DockerClientProviderStrategy.java:96)\n    at org.testcontainers.dockerclient.DockerClientProviderStrategy.getClient(DockerClientProviderStrategy.java:89)\n    at org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:85)\n    at org.testcontainers.images.builder.ImageFromDockerfile.lambda$static$22(ImageFromDockerfile.java:42)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: io.netty.channel.ChannelException: failed to open a new selector\n    at io.netty.channel.nio.NioEventLoop.openSelector(NioEventLoop.java:127)\n    at io.netty.channel.nio.NioEventLoop.<init>(NioEventLoop.java:119)\n    at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:97)\n    at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:31)\n    at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:77)\n    ... 13 more\nCaused by: java.io.IOException: Too many open files\n    at sun.nio.ch.IOUtil.makePipe(Native Method)\n    at sun.nio.ch.KQueueSelectorImpl.<init>(KQueueSelectorImpl.java:84)\n    at sun.nio.ch.KQueueSelectorProvider.openSelector(KQueueSelectorProvider.java:42)\n    at io.netty.channel.nio.NioEventLoop.openSelector(NioEventLoop.java:125)\n    ... 17 more\n```\n\nI'm running OS X 10.10.5, using docker toolbox 1.11.2.\n\n```\n$ docker info\nContainers: 1\nImages: 449\nStorage Driver: aufs\n Root Dir: /mnt/sda1/var/lib/docker/aufs\n Backing Filesystem: extfs\n Dirs: 613\n Dirperm1 Supported: true\nLogging Driver: json-file\nKernel Version: 4.4.8-boot2docker\nOperating System: Boot2Docker 1.11.1-rc1 (TCL 7.0); HEAD : 903a352 - Tue Apr 26 14:18:06 UTC 2016\nCPUs: 1\nTotal Memory: 995.9 MiB\nName: docker-vm\nID: QAXI:YDZA:NQO6:CJ6F:222Q:FZO5:MJIB:BKUR:OCQP:WCJJ:QOUT:JYPN\nDebug mode (server): true\nFile Descriptors: 13\nGoroutines: 30\nSystem Time: 2016-07-06T17:25:13.145332684Z\nEventsListeners: 0\nInit SHA1: \nInit Path: \nDocker Root Dir: /mnt/sda1/var/lib/docker\nUsername: ********\nRegistry: https://index.docker.io/v1/\nLabels:\n provider=virtualbox\n```\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/170", "user": "dbyron0", "labels": ["type/bug"], "created": "2016-07-06 17:27:46", "closed": "2016-08-16 20:12:30", "commits": {"fcea7835869c86a9a95a21a3e22a0b8fc32969dd": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "6f41fc50e91d72e7b3f2fe97ffb122b29cd2d412": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "a3c0feea1b6395c2c7fcfcd0568be4a6533dc49b": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "fcea7835869c86a9a95a21a3e22a0b8fc32969dd", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["1f57d237e10d9565655b898678e1355ab7cbd49b"], "nameRev": "fcea7835869c86a9a95a21a3e22a0b8fc32969dd tags/testcontainers-1.1.1~4^2~1", "commitMessage": "Introduce rate limiter for docker daemon pinging (when testing connections) to resolve as a potential cause of #170\n", "commitDateTime": "2016-07-10 21:50:52", "authoredDateTime": "2016-07-10 21:50:52", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "insertions": 12, "deletions": 2, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.DockerClientProviderStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.dockerclient.DockerClientProviderStrategy.ping(com.github.dockerjava.api.DockerClient,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6f41fc50e91d72e7b3f2fe97ffb122b29cd2d412", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["fcea7835869c86a9a95a21a3e22a0b8fc32969dd"], "nameRev": "6f41fc50e91d72e7b3f2fe97ffb122b29cd2d412 tags/testcontainers-1.1.1~4^2", "commitMessage": "Shade io.netty dependencies to avoid conflicts. May partially improve #170, addresses #157.\n", "commitDateTime": "2016-07-12 22:25:52", "authoredDateTime": "2016-07-12 22:25:52", "commitGitStats": [{"filePath": "core/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "shade-test/clashing-deps-jackson/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "shade-test/clashing-deps-jersey/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "shade-test/service-lookup-dropwizard/src/test/resources/logback-test.xml", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a3c0feea1b6395c2c7fcfcd0568be4a6533dc49b", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["362b1ec37203bb1f38bedda2c2be3ca5ee5d9e40", "6f41fc50e91d72e7b3f2fe97ffb122b29cd2d412"], "nameRev": "a3c0feea1b6395c2c7fcfcd0568be4a6533dc49b tags/testcontainers-1.1.1~4", "commitMessage": "Merge pull request #175 from testcontainers/#170-fix-resource-leak\n\nShade io.netty dependencies into Testcontainers JAR\r\nImprove cleanup of docker clients", "commitDateTime": "2016-07-16 22:48:27", "authoredDateTime": "2016-07-16 22:48:27", "commitGitStats": [{"filePath": "core/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "shade-test/clashing-deps-jackson/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "shade-test/clashing-deps-jersey/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "shade-test/service-lookup-dropwizard/src/test/resources/logback-test.xml", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.stop()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DockerClientProviderStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.DockerClientProviderStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.dockerclient.DockerClientProviderStrategy.ping(com.github.dockerjava.api.DockerClient,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fcea7835869c86a9a95a21a3e22a0b8fc32969dd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 2, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 3.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/testcontainers/dockerclient"], "changesInPackagesSPOON": ["org.testcontainers.dockerclient.DockerClientProviderStrategy", "org.testcontainers.dockerclient.DockerClientProviderStrategy.ping(com.github.dockerjava.api.DockerClient,int)"]}, {"title": "Duplicate DB containers with Tomcat DB connection pool and Testcontainers JDBC driver", "body": "When running a very simple test on a new Spring Boot project, the project is creating 10 postgresql containers.  This appears to be because of the connection pooling.  Below is the configuration used to reproduce the 10 container issue in Spring Boot.\n\n**To fix this:**\nAdd `spring.datasource.max-active=1` to your tests `application.properties` file.\n\nIs this an issue?  Seems like it should just create 10 connections to the same container...\n\nMy properties file\n\n``` properties\nspring.datasource.url=jdbc:tc:postgresql://hostname/databasename\nspring.datasource.driver-class-name=org.testcontainers.jdbc.ContainerDatabaseDriver\nspring.jpa.database=postgresql\n\nspring.jpa.hibernate.ddl-auto=create-drop\n```\n\nMy Test\n\n``` java\npackage com.mycompany.controller;\n\nimport com.mycompany.LeadServiceApplication;\nimport com.mycompany.entity.User;\nimport com.mycompany.entity.Lead;\nimport com.mycompany.repository.UserRepository;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.SpringApplicationConfiguration;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.converter.HttpMessageConverter;\nimport org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\nimport org.springframework.mock.http.MockHttpOutputMessage;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.web.WebAppConfiguration;\nimport org.springframework.test.web.servlet.MockMvc;\nimport org.springframework.web.context.WebApplicationContext;\n\nimport java.io.IOException;\nimport java.util.Arrays;\n\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\nimport static org.springframework.test.web.servlet.setup.MockMvcBuilders.webAppContextSetup;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringApplicationConfiguration(classes = LeadServiceApplication.class)\n@WebAppConfiguration\npublic class LeadsRestControllerTest {\n\n    private MediaType contentType = new MediaType(MediaType.APPLICATION_JSON.getType(),\n        MediaType.APPLICATION_JSON.getSubtype());\n\n    private MockMvc mockMvc;\n\n    @Autowired\n    private WebApplicationContext webApplicationContext;\n\n    @Autowired\n    private UserRepository userRepository;\n\n    private HttpMessageConverter mappingJackson2HttpMessageConverter;\n\n    @Autowired\n    private void setConverters(HttpMessageConverter<?>[] converters) {\n        this.mappingJackson2HttpMessageConverter = Arrays.asList(converters).stream().filter(\n            hmc -> hmc instanceof MappingJackson2HttpMessageConverter).findAny().get();\n\n        Assert.assertNotNull(\"the JSON message converter must not be null\",\n            this.mappingJackson2HttpMessageConverter);\n    }\n\n    @Before\n    public void setUp() {\n        this.mockMvc = webAppContextSetup(webApplicationContext).build();\n    }\n\n    @Test\n    public void postInitialLeadSuccess() throws Exception {\n        // Setup test\n        userRepository.save(new User(\"1234\", \"Bob\", \"Jones\"));\n\n        String leadJson = json(new Lead(\n            \"1234\", \"Ford\", \"12345\"));\n        mockMvc.perform(post(\"/leads/initial\")\n            .contentType(contentType)\n            .content(leadJson))\n            .andExpect(status().isCreated());\n    }\n\n    private String json(Lead lead) throws IOException {\n        MockHttpOutputMessage mockHttpOutputMessage = new MockHttpOutputMessage();\n        this.mappingJackson2HttpMessageConverter.write(\n            lead, MediaType.APPLICATION_JSON, mockHttpOutputMessage\n        );\n        return mockHttpOutputMessage.getBodyAsString();\n    }\n\n}\n```\n\nmvn test output:\n\n```\n...\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nobjc[9542]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/bin/java and /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the two will be used. Which one is undefined.\n08:56:40.278 [main] INFO  org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.mycompany.controller.LeadsRestControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.\n08:56:40.302 [main] INFO  org.springframework.test.context.web.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]\n08:56:40.331 [main] INFO  org.springframework.test.context.web.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@c2e3264, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@107f4980, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@75a118e6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1d540566, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6014a9ba, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@acdcf71]\nRunning com.mycompany.controller.LeadsRestControllerTest\n08:56:40.345 [main] INFO  org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.mycompany.controller.LeadsRestControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.\n08:56:40.346 [main] INFO  org.springframework.test.context.web.WebTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]\n08:56:40.347 [main] INFO  org.springframework.test.context.web.WebTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@59e43e8c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2caa5d7c, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5e671e20, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3eabe84a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@46c3a14d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@38fc5554]\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::        (v1.3.5.RELEASE)\n\n08:56:40.683 [main] INFO  com.mycompany.controller.LeadsRestControllerTest - Starting LeadsRestControllerTest on Johns-MacBook-Pro.local with PID 9542 (/Users/myname/Projects/MyCompany/lead-service/target/test-classes started by myname in /Users/myname/Projects/MyCompany/lead-service)\n08:56:40.683 [main] INFO  com.mycompany.controller.LeadsRestControllerTest - No active profile set, falling back to default profiles: default\n08:56:40.752 [main] INFO  org.springframework.web.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6ef037e4: startup date [Wed Jun 15 08:56:40 EDT 2016]; root of context hierarchy\n08:56:41.226 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.2.4.Final\n08:56:41.847 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b5577074] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)\n08:56:42.178 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'default'\n08:56:42.205 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [\n    name: default\n    ...]\n08:56:42.289 [main] INFO  org.hibernate.Version - HHH000412: Hibernate Core {4.3.11.Final}\n08:56:42.291 [main] INFO  org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found\n08:56:42.293 [main] INFO  org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist\n08:56:42.557 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.5.Final}\n08:56:42.696 [main] INFO  org.testcontainers.dockerclient.DockerConfigurationStrategy - Looking for Docker environment. Trying Environment variables, system properties and defaults. Resolved: \n    uri=https://localhost:2376\n    sslConfig='LocalDirectorySSLConfig{dockerCertPath=/Users/myname/.docker}'\n    version='{UNKNOWN_VERSION}'\n    username='myname'\n    password='null'\n    email='null'\n    serverAddress='https://index.docker.io/v1/'\n    dockerCfgPath='/Users/myname/.dockercfg'\n\n08:56:43.339 [main] INFO  org.testcontainers.shaded.org.apache.http.impl.execchain.RetryExec - I/O exception (org.testcontainers.shaded.org.apache.http.conn.UnsupportedSchemeException) caught when processing request: https protocol is not supported\n08:56:43.340 [main] INFO  org.testcontainers.shaded.org.apache.http.impl.execchain.RetryExec - Retrying request\n08:56:43.340 [main] INFO  org.testcontainers.shaded.org.apache.http.impl.execchain.RetryExec - I/O exception (org.testcontainers.shaded.org.apache.http.conn.UnsupportedSchemeException) caught when processing request: https protocol is not supported\n08:56:43.340 [main] INFO  org.testcontainers.shaded.org.apache.http.impl.execchain.RetryExec - Retrying request\n08:56:43.341 [main] INFO  org.testcontainers.shaded.org.apache.http.impl.execchain.RetryExec - I/O exception (org.testcontainers.shaded.org.apache.http.conn.UnsupportedSchemeException) caught when processing request: https protocol is not supported\n08:56:43.341 [main] INFO  org.testcontainers.shaded.org.apache.http.impl.execchain.RetryExec - Retrying request\n08:56:43.341 [main] INFO  org.testcontainers.dockerclient.DockerConfigurationStrategy - Looking for Docker environment. Trying docker-machine\n08:56:43.396 [main] INFO  org.testcontainers.dockerclient.DockerConfigurationStrategy - Found docker-machine, and will use machine named default\n08:56:43.743 [main] INFO  org.testcontainers.dockerclient.DockerConfigurationStrategy - Docker daemon IP address for docker machine default is 192.168.99.100\n08:56:44.877 [main] INFO  org.testcontainers.DockerClientFactory - Disk utilization in Docker environment is 17% (14450 MB available)\n08:56:45.084 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:56:45.221 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: cefed6498a55eb7673d69c054b8f7a1e054731041af7e07ff822fb16f9da0567\n08:56:45.369 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: cefed6498a55eb7673d69c054b8f7a1e054731041af7e07ff822fb16f9da0567\n08:56:45.515 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32788/test using query 'SELECT 1'\n08:56:49.954 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32788/test)\n08:56:49.954 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:56:50.024 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:56:50.091 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: 4693d7d35d3cd10465c3c96603b26154e16f80ea024ccb03e2936ee4b0388e55\n08:56:50.273 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: 4693d7d35d3cd10465c3c96603b26154e16f80ea024ccb03e2936ee4b0388e55\n08:56:50.393 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32789/test using query 'SELECT 1'\n08:56:54.920 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32789/test)\n08:56:54.920 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:56:54.984 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:56:55.047 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: 5de3bac95c1d6e51b138d02a2ce8a00a1d8a250b3bdb8434a3eaac3d42c5493c\n08:56:55.186 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: 5de3bac95c1d6e51b138d02a2ce8a00a1d8a250b3bdb8434a3eaac3d42c5493c\n08:56:55.292 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32790/test using query 'SELECT 1'\n08:57:00.206 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32790/test)\n08:57:00.206 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:57:00.273 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:57:00.352 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: 1d08f8ed2f9e3062744afdadc88e5f0a1f64fad01c305667be170188bd1fe37f\n08:57:00.478 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: 1d08f8ed2f9e3062744afdadc88e5f0a1f64fad01c305667be170188bd1fe37f\n08:57:00.581 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32791/test using query 'SELECT 1'\n08:57:05.020 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32791/test)\n08:57:05.020 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:57:05.084 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:57:05.153 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: f32877c30cef4e779eeebca125c96a01cb6b98258dac810250d6f8c4fdc0113a\n08:57:05.328 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: f32877c30cef4e779eeebca125c96a01cb6b98258dac810250d6f8c4fdc0113a\n08:57:05.452 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32792/test using query 'SELECT 1'\n08:57:09.168 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32792/test)\n08:57:09.168 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:57:09.266 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:57:09.328 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: 0c516deef1d52b3e88cb012127af3e76f9795cf218752e47611909ea50611574\n08:57:09.475 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: 0c516deef1d52b3e88cb012127af3e76f9795cf218752e47611909ea50611574\n08:57:09.591 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32793/test using query 'SELECT 1'\n08:57:14.186 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32793/test)\n08:57:14.187 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:57:14.261 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:57:14.328 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: 46d64d372be22d09c8b074adab58aa19bd117f0318dced3155d8275a00b7d50e\n08:57:14.469 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: 46d64d372be22d09c8b074adab58aa19bd117f0318dced3155d8275a00b7d50e\n08:57:14.597 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32794/test using query 'SELECT 1'\n08:57:19.245 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32794/test)\n08:57:19.246 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:57:19.313 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:57:19.376 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: d6989c9106a4ac5a4e2707aaef2df05ee2af84e697ce220ec4c68a0e8c084f5c\n08:57:19.520 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: d6989c9106a4ac5a4e2707aaef2df05ee2af84e697ce220ec4c68a0e8c084f5c\n08:57:19.620 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32795/test using query 'SELECT 1'\n08:57:24.062 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32795/test)\n08:57:24.062 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:57:24.125 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:57:24.189 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: 91225307f29d09769bbe30c35b0d837c136162bbf9f0b97fad522c7b2421706f\n08:57:24.335 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: 91225307f29d09769bbe30c35b0d837c136162bbf9f0b97fad522c7b2421706f\n08:57:24.431 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32796/test using query 'SELECT 1'\n08:57:29.464 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32796/test)\n08:57:29.464 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:57:29.524 [main] INFO  \ud83d\udc33 [postgres:latest] - Creating container for image: postgres:latest\n08:57:29.593 [main] INFO  \ud83d\udc33 [postgres:latest] - Starting container with ID: 6f5d5fbcfff4530ed8584cff83edad568af4580cce2f806a598c0c01a8a05e24\n08:57:29.735 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest is starting: 6f5d5fbcfff4530ed8584cff83edad568af4580cce2f806a598c0c01a8a05e24\n08:57:29.833 [main] INFO  \ud83d\udc33 [postgres:latest] - Waiting for database connection to become available at jdbc:postgresql://192.168.99.100:32797/test using query 'SELECT 1'\n08:57:34.464 [pool-2-thread-1] INFO  \ud83d\udc33 [postgres:latest] - Obtained a connection to container (jdbc:postgresql://192.168.99.100:32797/test)\n08:57:34.464 [main] INFO  \ud83d\udc33 [postgres:latest] - Container postgres:latest started\n08:57:34.671 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect\n08:57:34.680 [main] INFO  org.hibernate.engine.jdbc.internal.LobCreatorBuilder - HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException\n08:57:34.773 [main] INFO  org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory\n08:57:35.014 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export\n08:57:35.022 [main] INFO  org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete\n08:57:35.655 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6ef037e4: startup date [Wed Jun 15 08:56:40 EDT 2016]; root of context hierarchy\n08:57:35.725 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped \"{[/leads/initial],methods=[POST]}\" onto public org.springframework.http.ResponseEntity<?> com.mycompany.controller.LeadsRestController.addInitialLead(com.mycompany.entity.Lead)\n08:57:35.727 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped \"{[/error]}\" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)\n08:57:35.727 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped \"{[/error],produces=[text/html]}\" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)\n08:57:35.747 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n08:57:35.747 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n08:57:35.775 [main] INFO  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]\n08:57:35.939 [main] INFO  com.mycompany.controller.LeadsRestControllerTest - Started LeadsRestControllerTest in 55.48 seconds (JVM running for 56.812)\n08:57:35.971 [main] INFO  org.springframework.boot.test.SpringBootMockServletContext - Initializing Spring FrameworkServlet ''\n08:57:35.971 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - FrameworkServlet '': initialization started\n08:57:35.981 [main] INFO  org.springframework.test.web.servlet.TestDispatcherServlet - FrameworkServlet '': initialization completed in 10 ms\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 55.843 sec - in com.mycompany.controller.LeadsRestControllerTest\n08:57:36.183 [Thread-7] INFO  org.springframework.web.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6ef037e4: startup date [Wed Jun 15 08:56:40 EDT 2016]; root of context hierarchy\n08:57:36.195 [Thread-7] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'\n08:57:36.195 [Thread-7] INFO  org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export\n08:57:36.198 [Thread-7] INFO  org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete\n08:57:36.474 [Thread-6] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:36.513 [Thread-7] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:36.686 [Thread-6] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:36.716 [Thread-7] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:36.894 [Thread-6] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:37.094 [Thread-6] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:37.175 [Thread-7] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:37.294 [Thread-6] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:37.489 [Thread-6] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n08:57:37.564 [Thread-7] INFO  org.testcontainers.utility.ContainerReaper - Removed container and associated volume(s): postgres:latest\n\nResults :\n\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 1:00.353s\n[INFO] Finished at: Wed Jun 15 08:57:37 EDT 2016\n[INFO] Final Memory: 33M/400M\n[INFO] ------------------------------------------------------------------------\n```\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/159", "user": "postalservice14", "labels": ["type/bug"], "created": "2016-06-15 13:19:29", "closed": "2016-08-19 11:54:56", "commits": {"6b16c7a1d88b201b6a55c3a9cf06f4c7e273aa51": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "45f8becfc9e1deaf7c6cfb4b8b7730d50dbf27f4": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "015b09d0274a2e161cc6ecb4b1751990369b6219": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "3f3ed49c06168f07145929d27b48b7e8b7ad75d2": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "5b1285eacfa27f97acdc36488e773e1d347ef2f9": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "c5a24cd7b9a8ee81ddad7f86463f28ab4fcbeae4": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "88996189d5a40e589482eb073151b9b85d999db2": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "5ed53251e9eaa9205f74974b43bb9e1cb9780f61": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "32d252c57d74cf0076f516661cab3eb2ff00dc6c": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "f1bc5c69bf3228e6feecfe450f728634c64af28c": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 64.00027777777778, "commitsDetails": [{"commitHash": "6b16c7a1d88b201b6a55c3a9cf06f4c7e273aa51", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "45f8becfc9e1deaf7c6cfb4b8b7730d50dbf27f4", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "015b09d0274a2e161cc6ecb4b1751990369b6219", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3f3ed49c06168f07145929d27b48b7e8b7ad75d2", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5b1285eacfa27f97acdc36488e773e1d347ef2f9", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c5a24cd7b9a8ee81ddad7f86463f28ab4fcbeae4", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "88996189d5a40e589482eb073151b9b85d999db2", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5ed53251e9eaa9205f74974b43bb9e1cb9780f61", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "32d252c57d74cf0076f516661cab3eb2ff00dc6c", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["ade0d9b502650060604e0c0cb8804d9fbc55c962"], "nameRev": "32d252c57d74cf0076f516661cab3eb2ff00dc6c tags/testcontainers-1.1.4~3^2~1", "commitMessage": "Add a basic fix for #159\nExtend test suite to include more rigorous testing of connection pools with containers\n", "commitDateTime": "2016-08-16 19:51:38", "authoredDateTime": "2016-08-02 22:04:15", "commitGitStats": [{"filePath": "modules/jdbc/src/main/java/org/testcontainers/jdbc/ContainerDatabaseDriver.java", "insertions": 86, "deletions": 83, "lines": 169}, {"filePath": "modules/mysql/pom.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "modules/mysql/src/test/java/org/testcontainers/jdbc/JDBCDriverTest.java", "insertions": 0, "deletions": 33, "lines": 33}, {"filePath": "modules/mysql/src/test/java/org/testcontainers/jdbc/JDBCDriverWithPoolTest.java", "insertions": 165, "deletions": 0, "lines": 165}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ContainerDatabaseDriver.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.jdbc.ContainerDatabaseDriver.connect(java.lang.String,java.util.Properties)", "TOT": 15, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 6}, {"spoonMethodName": "org.testcontainers.jdbc.ContainerDatabaseDriver.wrapConnection(java.sql.Connection,org.testcontainers.containers.JdbcDatabaseContainer,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.testcontainers.jdbc.ContainerDatabaseDriver", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JDBCDriverTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.performSimpleTest(java.lang.String).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.performTestForScriptedSchema(java.lang.String).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.performSimpleTestWithCharacterSet(java.lang.String).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.performSimpleTest(java.lang.String).4.handle(java.sql.ResultSet)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 5}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.performTestForScriptedSchema(java.lang.String).5.handle(java.sql.ResultSet)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.performSimpleTestWithCharacterSet(java.lang.String).6.handle(java.sql.ResultSet)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.testMySQLWithConnectionPoolUsingSameContainer()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.performSimpleTest(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.testMySQLWithConnectionPoolUsingSameContainer().1", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.testMySQLWithConnectionPoolUsingSameContainer().1.handle(java.sql.ResultSet)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.testMySQLWithConnectionPoolUsingSameContainer().2.handle(java.sql.ResultSet)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "JDBCDriverWithPoolTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverWithPoolTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f1bc5c69bf3228e6feecfe450f728634c64af28c", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["32d252c57d74cf0076f516661cab3eb2ff00dc6c"], "nameRev": "f1bc5c69bf3228e6feecfe450f728634c64af28c tags/testcontainers-1.1.4~3^2", "commitMessage": "Add convenience methods to clean up database containers. Refs #159.\n", "commitDateTime": "2016-08-16 19:51:38", "authoredDateTime": "2016-08-07 21:40:11", "commitGitStats": [{"filePath": "modules/jdbc/src/main/java/org/testcontainers/jdbc/ContainerDatabaseDriver.java", "insertions": 39, "deletions": 6, "lines": 45}, {"filePath": "modules/jdbc/src/test/java/org/testcontainers/jdbc/ContainerDatabaseDriverTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "modules/mysql/src/test/java/org/testcontainers/jdbc/JDBCDriverTest.java", "insertions": 8, "deletions": 2, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ContainerDatabaseDriver.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.jdbc.ContainerDatabaseDriver.killContainers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.ContainerDatabaseDriver.killContainer(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.ContainerDatabaseDriver.wrapConnection(java.sql.Connection,org.testcontainers.containers.JdbcDatabaseContainer,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.testcontainers.jdbc.ContainerDatabaseDriver.connect(java.lang.String,java.util.Properties)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ContainerDatabaseDriverTest.java", "spoonMethods": []}, {"spoonFilePath": "JDBCDriverTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.jdbc.JDBCDriverTest.testCleanup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["32d252c57d74cf0076f516661cab3eb2ff00dc6c", "f1bc5c69bf3228e6feecfe450f728634c64af28c"], "filteredCommitsReason": {"duplicated": 8, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 125.0, "deletions": 89.0, "lines": 214.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 30.0, "UPD": 0.0, "INS": 10.0, "MOV": 12.0, "DEL": 8.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["modules/jdbc/src/main/java/org/testcontainers/jdbc"], "changesInPackagesSPOON": ["org.testcontainers.jdbc.ContainerDatabaseDriver.wrapConnection(java.sql.Connection,org.testcontainers.containers.JdbcDatabaseContainer,java.lang.String)", "org.testcontainers.jdbc.ContainerDatabaseDriver.connect(java.lang.String,java.util.Properties)", "org.testcontainers.jdbc.ContainerDatabaseDriver.killContainers()", "org.testcontainers.jdbc.ContainerDatabaseDriver.killContainer(java.lang.String)", "org.testcontainers.jdbc.ContainerDatabaseDriver"]}, {"title": "Could not get container for XXXXX in logs", "body": "Hi yah. I took a stab at this project today with great success - nice work! \n\nI'm deploying two of my own SpringBoot docker services via Compose but one of them is throwing the same exception 3 times during startup. Everything is deploying and working fine, so is there a trick to getting rid of this message? \n\nv 1.0.3\n\n```\nERROR ${sys:PID} --- [pool-2-thread-1] \ud83d\udc33 [richnorth/ambassador:latest]         : Could not start container\norg.testcontainers.shaded.com.github.dockerjava.api.InternalServerErrorException: Could not get container for zecgqt_fdsearch_1\n    at org.testcontainers.shaded.com.github.dockerjava.jaxrs.filter.ResponseStatusExceptionFilter.filter(ResponseStatusExceptionFilter.java:53)\n    at org.testcontainers.shaded.org.glassfish.jersey.client.ClientFilteringStages$ResponseFilterStage.apply(ClientFilteringStages.java:134)\n    at org.testcontainers.shaded.org.glassfish.jersey.client.ClientFilteringStages$ResponseFilterStage.apply(ClientFilteringStages.java:123)\n    at org.testcontainers.shaded.org.glassfish.jersey.process.internal.Stages.process(Stages.java:171)\n    at org.testcontainers.shaded.org.glassfish.jersey.client.ClientRuntime.invoke(ClientRuntime.java:251)\n\n```\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/118", "user": "monowai", "labels": ["type/bug"], "created": "2016-04-03 09:50:43", "closed": "2016-04-04 20:19:22", "commits": {"8e48e8a8198ea89e610b1adb8ead3afa2fac1c0e": {"commitGHEventType": "closed", "commitUser": "rnorth"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8e48e8a8198ea89e610b1adb8ead3afa2fac1c0e", "commitGHEventType": "closed", "commitUser": "rnorth", "commitParents": ["1e9d586a178fdb96a738832b72bd65f73d108212"], "nameRev": "8e48e8a8198ea89e610b1adb8ead3afa2fac1c0e tags/testcontainers-1.0.4~13^2~3", "commitMessage": "Fix #118 - wait for shutdown of docker-compose before ambassador containers start to be spawned.\n", "commitDateTime": "2016-04-03 21:16:20", "authoredDateTime": "2016-04-03 21:16:20", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "insertions": 21, "deletions": 20, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerComposeContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.DockerComposeContainer.start()", "TOT": 28, "UPD": 3, "INS": 5, "MOV": 19, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8e48e8a8198ea89e610b1adb8ead3afa2fac1c0e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 20, "lines": 41, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 28, "UPD": 3, "INS": 5, "MOV": 19, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/testcontainers/containers"], "changesInPackagesSPOON": ["org.testcontainers.containers.DockerComposeContainer.start()"]}, {"title": "When container fails to start, 2/3 of containers are not cleaned up.", "body": "Seems like there's an issue with GenericContainer when a container fails to start correctly. It looks like this is what happens:\n- start() runs tryStart()\n- tryStart() creates a container, stores the containerId, starts it, and waits for the port to become available.\n- the port does not open; tryStart() throws an exception\n- the \"finally\" block in but not before it schedules a shutdown hook to remove the container.\n- this happens again two more times; each time the containerId is overwritten\n- the first shutdown hook triggers. it cleans up based on the containerId currently stored in the class; that is, the third container that was created.\n- the second and third shutdown hooks also trigger, and also attempt to clean up the same ID.\n- the first and second containers stick around un-cleaned.\n\nThis happens both when the container fails immediately, and when the container keeps running but doesn't ever listen on the port. (In the latter case, the leftover containers are still running!)\n\n```\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.testcontainers.containers.GenericContainer;\n\npublic class TestBadCleanup {\n   @Rule\n   public GenericContainer failingContainer =\n         new ContainerWithExecSupport(\"alpine:3.3\")\n               .withCommand(\"/bin/sh\",\"-c\",\"false\")\n               .withExposedPorts(8080);   \n\n   @Test\n   public void testBadCleanup() throws Exception {\n      // no op\n      // this test will pass, but a \"docker ps -a\" afterward will see two leftover containers.\n   }\n}\n```\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/102", "user": "ostacey", "labels": ["type/bug"], "created": "2016-03-29 00:02:02", "closed": "2016-03-31 20:52:41", "commits": {"62931f4b506f775129fcbd0d6eb77e2d47b66b29": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "62931f4b506f775129fcbd0d6eb77e2d47b66b29", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["ee72e7ef07c1dd2f0034465717731da44b4b7df9"], "nameRev": "62931f4b506f775129fcbd0d6eb77e2d47b66b29 tags/testcontainers-1.0.3~2^2~2", "commitMessage": "Refs #102, #110 - relocate all container kill/remove code to a utility class. This is able to cleanup all container IDs that are created, as opposed to containers that are started.\n", "commitDateTime": "2016-03-30 22:13:23", "authoredDateTime": "2016-03-30 22:13:23", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 3, "deletions": 29, "lines": 32}, {"filePath": "core/src/main/java/org/testcontainers/utility/ContainerReaper.java", "insertions": 80, "deletions": 0, "lines": 80}, {"filePath": "core/src/test/java/org/testcontainers/junit/TestBadCleanup.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.tryStart()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.stop()", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.createVolumeDirectory(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ContainerReaper.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.ContainerReaper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBadCleanup.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.TestBadCleanup", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Project Lombok plugin is required for contributors using IntelliJ - not documented", "body": "Lots of methods are missing, probably due to Lombok not activating its code generation when importing Maven projects to IntelliJ.\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/100", "user": "asafm", "labels": ["help wanted", "type/bug"], "created": "2016-03-28 08:16:02", "closed": "2018-04-11 12:03:59", "commits": {}, "ttf": 744.0002777777778, "commitsDetails": []}, {"title": "Working via docker.sock does not necessarily mean containers are running on localhost", "body": "In some build setups it may be the case that the build is triggered via Jenkins which itself runs in a docker container. With respect to testcontainers that means that a dockerized Jenkins runs unit tests which in turn start docker containers.\n\nIn order to be able to start a docker container from within a docker container, the currently proposed \"solution\" (it's merely a workaround) is to mount the file /var/run/docker.sock and the binary /usr/bin/docker into the Jenkins container.\n\nThis works fine with testcontainers. It detects a working docker.sock file and continues with starting containers. However if those containers do expose ports, testcontainers seems to wait for the port to become available. In the scenario described above it waits on localhost:port if docker communication via UNIX socket has been detected implying that if a socket is used, then the docker daemon must also run on localhost.\n\nThis implication is not true when doing docker in docker by the help of mounted socket files.\nAs a result, testcontainers times out waiting for the exposed port to become available.\n\nOur current workaround for this is to not mount the socket and the binary but instead installing docker client into the container and passing the environment variables DOCKER_HOST, DOCKER_TLS_VERIFY and DOCKER_CERT_PATH to the Jenkins container. \n\nIs it possible to implement some kind of switch that is able to influence the \"wait for port to become available\" behavior?\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/90", "user": "JanMosigItemis", "labels": ["type/bug"], "created": "2016-03-15 13:40:16", "closed": "2016-03-26 20:11:23", "commits": {"735623aa714eaf9d6e99908f61bacbf7c86d5288": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "735623aa714eaf9d6e99908f61bacbf7c86d5288", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "GenericContainer runs in endless loop, when image does not exist", "body": "When using GenericContainer with an image, that does not exist on dockerhup (which happened to me because of a typo), then there is a endless loop in `GenericContainer.java:244`. It would be better to print a clear error message in this case.\n\nTo workaround https://github.com/docker/docker/issues/10708 one could retry N times before printing an error.\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/89", "user": "mlex", "labels": ["type/bug"], "created": "2016-03-15 08:39:42", "closed": "2016-03-31 20:52:41", "commits": {"14330bb9f99830a0f49b171a689a09878676748a": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "ecaabe431b82b3c5d3a865e5d68419b435caf94b": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "14330bb9f99830a0f49b171a689a09878676748a", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["d57db5504c094cdcd6d8f3b3e692cbefb0a78acd"], "nameRev": "14330bb9f99830a0f49b171a689a09878676748a tags/testcontainers-1.0.3~10^2", "commitMessage": "Fix for #89 - add finite limit for retrying docker pull, to avoid infinite loop if the specified image is not available.\n", "commitDateTime": "2016-03-20 19:20:51", "authoredDateTime": "2016-03-20 19:20:51", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/ContainerFetchException.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/test/java/org/testcontainers/junit/NonExistentImagePullTest.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ContainerFetchException.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.ContainerFetchException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.pullImageIfNeeded(java.lang.String,org.slf4j.profiler.Profiler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NonExistentImagePullTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.NonExistentImagePullTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ecaabe431b82b3c5d3a865e5d68419b435caf94b", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["d57db5504c094cdcd6d8f3b3e692cbefb0a78acd", "14330bb9f99830a0f49b171a689a09878676748a"], "nameRev": "ecaabe431b82b3c5d3a865e5d68419b435caf94b tags/testcontainers-1.0.3~10", "commitMessage": "Merge pull request #91 from testcontainers/pull-retry-limit\n\nFix for #89 - add finite limit for retrying docker pull", "commitDateTime": "2016-03-20 19:50:25", "authoredDateTime": "2016-03-20 19:50:25", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/ContainerFetchException.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/test/java/org/testcontainers/junit/NonExistentImagePullTest.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ContainerFetchException.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.ContainerFetchException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.pullImageIfNeeded(java.lang.String,org.slf4j.profiler.Profiler)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NonExistentImagePullTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.NonExistentImagePullTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["14330bb9f99830a0f49b171a689a09878676748a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 0, "lines": 10, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/testcontainers/containers"], "changesInPackagesSPOON": ["org.testcontainers.containers.ContainerFetchException", "org.testcontainers.containers.GenericContainer.pullImageIfNeeded(java.lang.String,org.slf4j.profiler.Profiler)"]}, {"title": "DockerClientFactory.instance().dockerHostIpAddress() return null when using unix socket", "body": "`DockerClientFactory.instance().dockerHostIpAddress()` should always return localhost in this case.\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/82", "user": "mbaechler", "labels": ["type/bug"], "created": "2016-02-26 11:36:30", "closed": "2016-02-28 07:34:46", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "getMappedPort/getJdbcUrl should fail fast when requested ports have not been mapped", "body": "I just tried to use the `PostgreSQLContainer` from within an existing unit test, as a class rule, but when I try this:\n\n```\n@ClassRule\npublic static PostgreSQLContainer postgres = new PostgreSQLContainer();\n\nprivate DataSource makeDataSource() throws SQLException {\n    String url = postgres.getJdbcUrl();\n    log.info(\"JDBC URL: {}\", url);\n    return DataSources.unpooledDataSource(url, postgres.getUsername(), postgres.getPassword());\n}\n```\n\n...the log message prints the following out:\n\n```\nJDBC URL: jdbc:postgresql://192.168.99.100:null/test\n```\n\n...which causes the Postgres JDBC driver to reject the URL with a \"java.sql.SQLException: No suitable driver\" exception.\n\nIf I edit the code above to hardcode the following URL by hand:\n\n```\nString url = \"jdbc:postgresql://192.168.99.100:5432/test\"; //postgres.getJdbcUrl();\n```\n\n...I get the following error instead:\n\n```\norg.postgresql.util.PSQLException: Connection to 192.168.99.100:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.\n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:252)\n    at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:66)\n    ...\n```\n\n...which goes to show that the `null` in the URL is the cause of the failure.\n\nVersions:\n1. `testcontainers-java`: 1.0.0\n2. `docker-machine`: 0.5.4, build 6643d0e\n3. `docker`: 1.9.1, API: 1.21, go1.4.3, Git commit a34a1d5\n4. OS X Yosemite 10.10.4\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/75", "user": "ldcasillas-progreso", "labels": ["type/bug"], "created": "2016-02-23 23:26:57", "closed": "2016-02-28 07:34:46", "commits": {"8bd3309dd057f984fd451467796d0a46e853b452": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "8bd3309dd057f984fd451467796d0a46e853b452", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["08efddfc0f587a6b1d2fadd3b8ef468031a788ce"], "nameRev": "8bd3309dd057f984fd451467796d0a46e853b452 tags/testcontainers-1.0.2~3^2~1", "commitMessage": "Make getMappedPort fail fast if the container isn't started or does not have the requested port exposed. Refs #75\n", "commitDateTime": "2016-02-24 21:34:56", "authoredDateTime": "2016-02-24 21:34:27", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.getMappedPort(int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8bd3309dd057f984fd451467796d0a46e853b452"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/testcontainers/containers"], "changesInPackagesSPOON": ["org.testcontainers.containers.GenericContainer.getMappedPort(int)"]}, {"title": "Badly formed image results in hanging test", "body": "I was attempting to use a docker image and hadn't included a tag:\n\n```\n@Rule\npublic GenericContainer composeContainer = new GenericContainer(\"frodenas/couchdb\");\n```\n\nThis was resulting in the maven test phase hanging on pulling the image:\n\n```\n14:48:57.225 [main] INFO  org.testcontainers.DockerClientFactory - Disk utilization in Docker environment is 29%\n14:48:57.444 [main] INFO  \ud83d\udc33 [frodenas/couchdb] - Pulling docker image: frodenas/couchdb. Please be patient; this may take some time but only needs to be done once.\n```\n\nLook at `docker event` I could see testcontainers repeatedly pulling the image:\n\n```\n$  docker events\n2016-02-18T14:48:56.573348524Z container create 49df7a848ebaf62f44247a3e0a4f16435a9362232ce541010c76ad1875a9da43 (image=alpine:3.2, name=goofy_chandrasekhar)\n2016-02-18T14:48:56.638367999Z network connect 67ec38ca79fcfa1a0b71de276743ce78cd946ab1bc42acb95761cad029ff56fa (name=bridge, type=bridge, container=49df7a848ebaf62f44247a3e0a4f16435a9362232ce541010c76ad1875a9da43)\n2016-02-18T14:48:56.638877689Z container start 49df7a848ebaf62f44247a3e0a4f16435a9362232ce541010c76ad1875a9da43 (image=alpine:3.2, name=goofy_chandrasekhar)\n2016-02-18T14:48:56.870480008Z container die 49df7a848ebaf62f44247a3e0a4f16435a9362232ce541010c76ad1875a9da43 (image=alpine:3.2, name=goofy_chandrasekhar)\n2016-02-18T14:48:57.062918192Z network disconnect 67ec38ca79fcfa1a0b71de276743ce78cd946ab1bc42acb95761cad029ff56fa (container=49df7a848ebaf62f44247a3e0a4f16435a9362232ce541010c76ad1875a9da43, name=bridge, type=bridge)\n2016-02-18T14:48:57.304580317Z container destroy 49df7a848ebaf62f44247a3e0a4f16435a9362232ce541010c76ad1875a9da43 (image=alpine:3.2, name=goofy_chandrasekhar)\n2016-02-18T14:49:01.183645303Z image pull frodenas/couchdb (name=frodenas/couchdb)\n2016-02-18T14:49:04.499725803Z image pull frodenas/couchdb (name=frodenas/couchdb)\n2016-02-18T14:49:07.707602446Z image pull frodenas/couchdb (name=frodenas/couchdb)\n2016-02-18T14:49:11.205944772Z image pull frodenas/couchdb (name=frodenas/couchdb)\n2016-02-18T14:49:14.405842514Z image pull frodenas/couchdb (name=frodenas/couchdb)\n2016-02-18T14:49:17.673538540Z image pull frodenas/couchdb (name=frodenas/couchdb)\n[..snipped..]\n```\n\nWhile I should have specified a tag (`latest`) testcontainers should handle this case better and warn the developer rather that repeatedly trying.\n\nThis is with version 1.0.0.\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/70", "user": "buckett", "labels": ["type/bug"], "created": "2016-02-18 14:51:23", "closed": "2016-02-18 22:31:26", "commits": {"836a1e21485282da32229c8ecf3d097d62dfd2d6": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "d73dbcd148dfe5b94702fdbe99570ff5c2d870de": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "836a1e21485282da32229c8ecf3d097d62dfd2d6", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["fff82575fe98e0c43ce02036288f95f1cdcad389"], "nameRev": "836a1e21485282da32229c8ecf3d097d62dfd2d6 tags/testcontainers-1.0.1~1^2", "commitMessage": "Refs #70: Validate that docker image names include a tag\n", "commitDateTime": "2016-02-18 21:37:23", "authoredDateTime": "2016-02-18 21:37:23", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.setDockerImageName(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d73dbcd148dfe5b94702fdbe99570ff5c2d870de", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["9e4dfd5a9d207e09709681e8215127e901abddc3", "836a1e21485282da32229c8ecf3d097d62dfd2d6"], "nameRev": "d73dbcd148dfe5b94702fdbe99570ff5c2d870de tags/testcontainers-1.0.1~1", "commitMessage": "Merge pull request #71 from testcontainers/require-imagename-tag\n\nRefs #70: Validate that docker image names include a tag", "commitDateTime": "2016-02-18 22:01:47", "authoredDateTime": "2016-02-18 22:01:47", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer.setDockerImageName(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["836a1e21485282da32229c8ecf3d097d62dfd2d6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/testcontainers/containers"], "changesInPackagesSPOON": ["org.testcontainers.containers.GenericContainer.setDockerImageName(java.lang.String)"]}, {"title": "Shaded Jersey, Jackson and other libs which expose services can cause conflicts with in-project non-shaded counterparts", "body": "Due to the fact that the original entries in _META-INF/services_ are still registered to non-shaded names/keys e.g. `javax.ws.rs.ext.MessageBodyWriter` (even though their content is already shaded)\nthey might be found by auto-discovery/service provider features in corresponding libs and loaded instead of their proper (non-TestContainers) counterparts.\n\nOne symptom of such behaviour is the exception given below while integrating Dropwizard with TestContainers library for testing and at the same time using `io.dropwizard.testing.junit.ResourceTestRule` which uses both Jersey and Jackson:\n\n```\norg.glassfish.hk2.api.MultiException:\nA MultiException has 2 exceptions.  They are:\n1. java.lang.ClassCastException: org.testcontainers.shaded.com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider cannot be cast to javax.ws.rs.ext.MessageBodyReader\n2. java.lang.IllegalStateException: Unable to perform operation: create on org.glassfish.jersey.message.internal.MessageBodyFactory\n\nCaused by: java.lang.ClassCastException: org.testcontainers.shaded.com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider cannot be cast to javax.ws.rs.ext.MessageBodyReader\n\nWARN  [2016-02-17 13:12:42,266] org.glassfish.jersey.internal.Errors: The following warnings have been detected: WARNING: Unknown HK2 failure detected:\nMultiException stack 1 of 2\njava.lang.ClassCastException: org.testcontainers.shaded.com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider cannot be cast to javax.ws.rs.ext.MessageBodyReader\n        at org.glassfish.jersey.message.internal.MessageBodyFactory.addReaders(MessageBodyFactory.java:507)\n        at org.glassfish.jersey.message.internal.MessageBodyFactory.<init>(MessageBodyFactory.java:226)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n        at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1350)\n        at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:271)\n        at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:365)\n        at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:471)\n        at org.jvnet.hk2.internal.SingletonContext$1.compute(SingletonContext.java:83)\n        at org.jvnet.hk2.internal.SingletonContext$1.compute(SingletonContext.java:71)\n        at org.glassfish.hk2.utilities.cache.Cache$OriginThreadAwareFuture$1.call(Cache.java:97)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n        at org.glassfish.hk2.utilities.cache.Cache$OriginThreadAwareFuture.run(Cache.java:154)\n        at org.glassfish.hk2.utilities.cache.Cache.compute(Cache.java:199)\n        at org.jvnet.hk2.internal.SingletonContext.findOrCreate(SingletonContext.java:122)\n        at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2072)\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:767)\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:706)\n        at org.glassfish.jersey.server.model.ComponentModelValidator.<init>(ComponentModelValidator.java:97)\n        at org.glassfish.jersey.server.ApplicationHandler.initialize(ApplicationHandler.java:549)\n        at org.glassfish.jersey.server.ApplicationHandler.access$500(ApplicationHandler.java:184)\n        at org.glassfish.jersey.server.ApplicationHandler$3.call(ApplicationHandler.java:350)\n        at org.glassfish.jersey.server.ApplicationHandler$3.call(ApplicationHandler.java:347)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n        at org.glassfish.jersey.internal.Errors.processWithException(Errors.java:255)\n        at org.glassfish.jersey.server.ApplicationHandler.<init>(ApplicationHandler.java:347)\n        at org.glassfish.jersey.server.ApplicationHandler.<init>(ApplicationHandler.java:299)\n        at org.glassfish.jersey.test.inmemory.InMemoryTestContainerFactory$InMemoryTestContainer.<init>(InMemoryTestContainerFactory.java:77)\n        at org.glassfish.jersey.test.inmemory.InMemoryTestContainerFactory$InMemoryTestContainer.<init>(InMemoryTestContainerFactory.java:63)\n        at org.glassfish.jersey.test.inmemory.InMemoryTestContainerFactory.create(InMemoryTestContainerFactory.java:111)\n        at org.glassfish.jersey.test.JerseyTest.createTestContainer(JerseyTest.java:277)\n        at org.glassfish.jersey.test.JerseyTest.setUp(JerseyTest.java:609)\n        at io.dropwizard.testing.junit.ResourceTestRule$1.evaluate(ResourceTestRule.java:201)\n        at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n        at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\nMultiException stack 2 of 2\njava.lang.IllegalStateException: Unable to perform operation: create on org.glassfish.jersey.message.internal.MessageBodyFactory\n        at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:392)\n        at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:471)\n        at org.jvnet.hk2.internal.SingletonContext$1.compute(SingletonContext.java:83)\n        at org.jvnet.hk2.internal.SingletonContext$1.compute(SingletonContext.java:71)\n        at org.glassfish.hk2.utilities.cache.Cache$OriginThreadAwareFuture$1.call(Cache.java:97)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n        at org.glassfish.hk2.utilities.cache.Cache$OriginThreadAwareFuture.run(Cache.java:154)\n        at org.glassfish.hk2.utilities.cache.Cache.compute(Cache.java:199)\n        at org.jvnet.hk2.internal.SingletonContext.findOrCreate(SingletonContext.java:122)\n        at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2072)\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:767)\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:706)\n        at org.glassfish.jersey.server.model.ComponentModelValidator.<init>(ComponentModelValidator.java:97)\n        at org.glassfish.jersey.server.ApplicationHandler.initialize(ApplicationHandler.java:549)\n        at org.glassfish.jersey.server.ApplicationHandler.access$500(ApplicationHandler.java:184)\n        at org.glassfish.jersey.server.ApplicationHandler$3.call(ApplicationHandler.java:350)\n        at org.glassfish.jersey.server.ApplicationHandler$3.call(ApplicationHandler.java:347)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n        at org.glassfish.jersey.internal.Errors.processWithException(Errors.java:255)\n        at org.glassfish.jersey.server.ApplicationHandler.<init>(ApplicationHandler.java:347)\n        at org.glassfish.jersey.server.ApplicationHandler.<init>(ApplicationHandler.java:299)\n        at org.glassfish.jersey.test.inmemory.InMemoryTestContainerFactory$InMemoryTestContainer.<init>(InMemoryTestContainerFactory.java:77)\n        at org.glassfish.jersey.test.inmemory.InMemoryTestContainerFactory$InMemoryTestContainer.<init>(InMemoryTestContainerFactory.java:63)\n        at org.glassfish.jersey.test.inmemory.InMemoryTestContainerFactory.create(InMemoryTestContainerFactory.java:111)\n        at org.glassfish.jersey.test.JerseyTest.createTestContainer(JerseyTest.java:277)\n        at org.glassfish.jersey.test.JerseyTest.setUp(JerseyTest.java:609)\n        at io.dropwizard.testing.junit.ResourceTestRule$1.evaluate(ResourceTestRule.java:201)\n        at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\n        at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\n```\n\nDue to the fact that apart from already shaded service keys also the non-shaded service keys are still there on the classpath from TestContainers and they (all) are pointing to shaded classes,\nthey are obviously not the ones which the original library from the project expects to find on the classpath - not from the same implementation but both from non-shaded (Dropwizard's) and\nshaded (TestContainers') implementations.\n\nThere is a connection between this issue and the issue #35 and it's current solution in ver. 1.0.0 - just to give the context.\n\nOne solution would be to remove these non-shaded keys while building shaded TestContainers jar and leave only the shaded keys.\nAs those shaded keys are added manually (for their value/content only to be shaded during the plugin processing) it seems it's enough to filter out the original keys:\n\n```\ndiff --git a/core/pom.xml b/core/pom.xml\nindex 22371f4..f8e4b71 100644\n--- a/core/pom.xml\n+++ b/core/pom.xml\n@@ -129,6 +129,11 @@\n                                 <exclude>META-INF/*.SF</exclude>\n                                 <exclude>META-INF/*.DSA</exclude>\n                                 <exclude>META-INF/*.RSA</exclude>\n+                                <exclude>META-INF/services/com.fasterxml.jackson.core.*</exclude>                               \n+                                <exclude>META-INF/services/com.github.dockerjava.api.command.*</exclude>\n+                                <exclude>META-INF/services/javax.ws.rs.ext.*</exclude>\n+                                <exclude>META-INF/services/org.glassfish.hk2.extension.*</exclude>\n+                                <exclude>META-INF/services/org.jvnet.hk2.external.generator.*</exclude>\n                             </excludes>\n                         </filter>\n                     </filters>\n```\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/68", "user": "krystiannowak", "labels": ["type/bug"], "created": "2016-02-17 13:08:12", "closed": "2016-02-18 22:31:26", "commits": {"7e9c78b309fb51790fda261de32c625c777b3d12": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "7e9c78b309fb51790fda261de32c625c777b3d12", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["7a143deb1c5d4a30bc13b2bb989901eb164eba10"], "nameRev": "7e9c78b309fb51790fda261de32c625c777b3d12 tags/testcontainers-1.0.1~4", "commitMessage": "Refs #68: Add a failing shade test to demonstrate dropwizard service lookup issues in dropwizard\n", "commitDateTime": "2016-02-18 20:43:00", "authoredDateTime": "2016-02-18 20:43:00", "commitGitStats": [{"filePath": "shade-test/pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shade-test/service-lookup-dropwizard/pom.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "shade-test/service-lookup-dropwizard/src/main/java/JerseyResource.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "shade-test/service-lookup-dropwizard/src/test/java/SimpleResourceTest.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JerseyResource.java", "spoonMethods": [{"spoonMethodName": "JerseyResource", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleResourceTest.java", "spoonMethods": [{"spoonMethodName": "SimpleResourceTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7e9c78b309fb51790fda261de32c625c777b3d12"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 0, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["shade-test/service-lookup-dropwizard/src/main/java"], "changesInPackagesSPOON": ["JerseyResource"]}, {"title": "Using unix socket to access docker daemon", "body": "I try to make GenericContainer launch a container using `unix:///var/run/docker.sock` as DOCKER_HOST.\nI looks like it's the way to go based on https://github.com/docker-java/docker-java documentation, but it fails with : \n\n```\norg.testcontainers.shaded.javax.ws.rs.ProcessingException: org.newsclub.net.unix.AFUNIXSocketException: No such file or directory (socket: /home/matthieu/code/james-gitsvn/server/protocols/jmap-integration-testing/:80)\n    at org.testcontainers.shaded.com.github.dockerjava.jaxrs.connector.ApacheConnector.apply(ApacheConnector.java:490)\n    at org.testcontainers.shaded.org.glassfish.jersey.client.ClientRuntime.invoke(ClientRuntime.java:246)\n    at org.testcontainers.shaded.org.glassfish.jersey.client.JerseyInvocation$2.call(JerseyInvocation.java:683)\n    at org.testcontainers.shaded.org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n    at org.testcontainers.shaded.org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n    at org.testcontainers.shaded.org.glassfish.jersey.internal.Errors.process(Errors.java:228)\n    at org.testcontainers.shaded.org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:424)\n    at org.testcontainers.shaded.org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:679)\n    at org.testcontainers.shaded.org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:408)\n    at org.testcontainers.shaded.org.glassfish.jersey.client.JerseyInvocation$Builder.get(JerseyInvocation.java:308)\n    at org.testcontainers.shaded.com.github.dockerjava.jaxrs.VersionCmdExec.execute(VersionCmdExec.java:25)\n    at org.testcontainers.shaded.com.github.dockerjava.jaxrs.VersionCmdExec.execute(VersionCmdExec.java:12)\n    at org.testcontainers.shaded.com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec.exec(AbstrSyncDockerCmdExec.java:24)\n    at org.testcontainers.shaded.com.github.dockerjava.core.command.AbstrDockerCmd.exec(AbstrDockerCmd.java:33)\n    at org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:75)\n    at org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:71)\n    at org.apache.james.jmap.ContainerTest.<init>(ContainerTest.java:36)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195)\n    at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\nCaused by: org.newsclub.net.unix.AFUNIXSocketException: No such file or directory (socket: /home/matthieu/code/james-gitsvn/server/protocols/jmap-integration-testing/:80)\n    at org.newsclub.net.unix.NativeUnixSocket.connect(Native Method)\n    at org.newsclub.net.unix.AFUNIXSocketImpl.connect(AFUNIXSocketImpl.java:134)\n    at org.newsclub.net.unix.AFUNIXSocket.connect(AFUNIXSocket.java:97)\n    at org.testcontainers.shaded.com.github.dockerjava.jaxrs.ApacheUnixSocket.connect(ApacheUnixSocket.java:64)\n    at org.testcontainers.shaded.com.github.dockerjava.jaxrs.UnixConnectionSocketFactory.connectSocket(UnixConnectionSocketFactory.java:73)\n    at org.testcontainers.shaded.org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:118)\n    at org.testcontainers.shaded.org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:314)\n    at org.testcontainers.shaded.org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:357)\n    at org.testcontainers.shaded.org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:218)\n    at org.testcontainers.shaded.org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:194)\n    at org.testcontainers.shaded.org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:85)\n    at org.testcontainers.shaded.org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)\n    at org.testcontainers.shaded.org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:186)\n    at org.testcontainers.shaded.org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)\n    at org.testcontainers.shaded.com.github.dockerjava.jaxrs.connector.ApacheConnector.apply(ApacheConnector.java:443)\n    ... 38 more\n\n```\n\nIs there something I don't understand ?\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/61", "user": "mbaechler", "labels": ["type/bug"], "created": "2016-02-11 11:41:52", "closed": "2016-02-18 22:31:26", "commits": {"af4eaeea73c5613bd97c55ab6d224f46cea392b6": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "af4eaeea73c5613bd97c55ab6d224f46cea392b6", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["afdba1c6b53c95b132c23ba6d68cad7569e361ca"], "nameRev": "af4eaeea73c5613bd97c55ab6d224f46cea392b6 tags/testcontainers-1.0.1~10", "commitMessage": "Update index.md\n\nAdd note re Linux/OS X being the only supported hosts at present (refs #62)\r\nAdd note re current need to use HTTP/HTTPS rather than unix sockets (refs #61)", "commitDateTime": "2016-02-11 22:09:36", "authoredDateTime": "2016-02-11 22:09:36", "commitGitStats": [{"filePath": "docs/index.md", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "I have new versions for the jersey client in my project due to other dependency", "body": "This are my unsatisfied list of dependecies\n <!--<dependency>-->\n         <!--<groupId>org.testcontainers</groupId>-->\n         <!--<artifactId>testcontainers</artifactId>-->\n         <!--<version>0.9.9</version>-->\n         <!--<scope>test</scope>-->\n         <!--<exclusions>-->\n            <!--<exclusion>-->\n               <!--<groupId>commons-io</groupId>-->\n               <!--<artifactId>commons-io</artifactId>-->\n            <!--</exclusion>-->\n            <!--<exclusion>-->\n               <!--<groupId>org.glassfish.jersey.core</groupId>-->\n               <!--<artifactId>jersey-client</artifactId>-->\n            <!--</exclusion>-->\n            <!--<exclusion>-->\n               <!--<groupId>org.slf4j</groupId>-->\n               <!--<artifactId>slf4j-api</artifactId>-->\n            <!--</exclusion>-->\n            <!--<exclusion>-->\n               <!--<groupId>org.bouncycastle</groupId>-->\n               <!--<artifactId>bcpkix-jdk15on</artifactId>-->\n            <!--</exclusion>-->\n            <!--<exclusion>-->\n               <!--<groupId>org.apache.httpcomponents</groupId>-->\n               <!--<artifactId>httpclient</artifactId>-->\n            <!--</exclusion>-->\n            <!--<exclusion>-->\n               <!--<groupId>org.glassfish.jersey.connectors</groupId>-->\n               <!--<artifactId>jersey-apache-connector</artifactId>-->\n            <!--</exclusion>-->\n         <!--</exclusions>-->\n      <!--</dependency>-->\n\nAfter excluding this i have \n`15:31:15.126 WARN  [o.t.DockerClientFactory] Encountered and ignored error while checking disk space \njavax.ws.rs.ProcessingException: com.fasterxml.jackson.databind.ObjectWriter.getJsonFactory()Lcom/fasterxml/jackson/core/JsonFactory;\n        at org.glassfish.jersey.client.ClientRuntime.invoke(ClientRuntime.java:264) ~[jersey-client-2.22.1.jar:na]\n        at org.glassfish.jersey.client.JerseyInvocation$2.call(JerseyInvocation.java:700) ~[jersey-client-2.22.1.jar:na]\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:315) ~[jersey-common-2.22.1.jar:na]\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:297) ~[jersey-common-2.22.1.jar:na]\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:228) ~[jersey-common-2.22.1.jar:na]\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:444) ~[jersey-common-2.22.1.jar:na]\n        at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:696) ~[jersey-client-2.22.1.jar:na]\n        at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:448) ~[jersey-client-2.22.1.jar:na]\n        at org.glassfish.jersey.client.JerseyInvocation$Builder.post(JerseyInvocation.java:349) ~[jersey-client-2.22.1.jar:na]\n        at com.github.dockerjava.jaxrs.CreateContainerCmdExec.execute(CreateContainerCmdExec.java:32) ~[docker-java-2.1.1.jar:na]\n        at com.github.dockerjava.jaxrs.CreateContainerCmdExec.execute(CreateContainerCmdExec.java:14) ~[docker-java-2.1.1.jar:na]\n        at com.github.dockerjava.jaxrs.AbstrSyncDockerCmdExec.exec(AbstrSyncDockerCmdExec.java:24) ~[docker-java-2.1.1.jar:na]\n        at com.github.dockerjava.core.command.AbstrDockerCmd.exec(AbstrDockerCmd.java:33) ~[docker-java-2.1.1.jar:na]\n        at com.github.dockerjava.core.command.CreateContainerCmdImpl.exec(CreateContainerCmdImpl.java:143) ~[docker-java-2.1.1.jar:na]\n        at org.testcontainers.DockerClientFactory.checkDiskSpace(DockerClientFactory.java:193) [testcontainers-0.9.9.jar:na]\n        at org.testcontainers.DockerClientFactory.checkDiskSpaceAndHandleExceptions(DockerClientFactory.java:173) [testcontainers-0.9.9.jar:na]\n        at org.testcontainers.DockerClientFactory.<init>(DockerClientFactory.java:47) [testcontainers-0.9.9.jar:na]\n        at org.testcontainers.DockerClientFactory.instance(DockerClientFactory.java:60) [testcontainers-0.9.9.jar:na]\n        at org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:72) [testcontainers-0.9.9.jar:na]\n        at com.videoplaza.forecast.common.DockerSteps.aDockerComposeContainerConfiguration(DockerSteps.java:22) [test-classes/:na]\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_40]\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_40]\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_40]\n        at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_40]\n        at cucumber.runtime.Utils$1.call(Utils.java:37) [cucumber-core-1.2.4.jar:na]\n        at cucumber.runtime.Timeout.timeout(Timeout.java:13) [cucumber-core-1.2.4.jar:na]\n        at cucumber.runtime.Utils.invoke(Utils.java:31) [cucumber-core-1.2.4.jar:na]\n        at cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38) [cucumber-java-1.2.4.jar:na]\n        at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37) [cucumber-core-1.2.4.jar:na]\n        at cucumber.runtime.Runtime.runStep(Runtime.java:299) [cucumber-core-1.2.4.jar:na]\n        at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44) [cucumber-core-1.2.4.jar:na]\n        at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39) [cucumber-core-1.2.4.jar:na]\n        at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44) [cucumber-core-1.2.4.jar:na]\n        at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91) [cucumber-junit-1.2.4.jar:na]\n        at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63) [cucumber-junit-1.2.4.jar:na]\n        at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18) [cucumber-junit-1.2.4.jar:na]\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]\n        at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70) [cucumber-junit-1.2.4.jar:na]\n        at cucumber.api.junit.Cucumber.runChild(Cucumber.java:97) [rmtest-cucumber-2.0.7.jar:na]\n        at cucumber.api.junit.Cucumber.runChild(Cucumber.java:42) [rmtest-cucumber-2.0.7.jar:na]\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]\n        at cucumber.api.junit.Cucumber.run(Cucumber.java:102) [rmtest-cucumber-2.0.7.jar:na]\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:283) [surefire-junit4-2.18.1.jar:2.18.1]\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:173) [surefire-junit4-2.18.1.jar:2.18.1]\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153) [surefire-junit4-2.18.1.jar:2.18.1]\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:128) [surefire-junit4-2.18.1.jar:2.18.1]\n        at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203) [surefire-booter-2.18.1.jar:2.18.1]\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155) [surefire-booter-2.18.1.jar:2.18.1]\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103) [surefire-booter-2.18.1.jar:2.18.1]\nCaused by: java.lang.NoSuchMethodError: com.fasterxml.jackson.databind.ObjectWriter.getJsonFactory()Lcom/fasterxml/jackson/core/JsonFactory;\n        at com.fasterxml.jackson.jaxrs.json.annotation.EndpointConfig.initWriter(EndpointConfig.java:159) ~[jackson-jaxrs-json-provider-2.1.2.jar:2.1.2]\n        at com.fasterxml.jackson.jaxrs.json.annotation.EndpointConfig.forWriting(EndpointConfig.java:63) ~[jackson-jaxrs-json-provider-2.1.2.jar:2.1.2]\n        at com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider.writeTo(JacksonJsonProvider.java:531) ~[jackson-jaxrs-json-provider-2.1.2.jar:2.1.2]\n        at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.invokeWriteTo(WriterInterceptorExecutor.java:265) ~[jersey-common-2.22.1.jar:na]\n        at org.glassfish.jersey.message.internal.WriterInterceptorExecutor$TerminalWriterInterceptor.aroundWriteTo(WriterInterceptorExecutor.java:250) ~[jersey-common-2.22.1.jar:na]\n        at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162) ~[jersey-common-2.22.1.jar:na]\n        at com.github.dockerjava.jaxrs.filter.LoggingFilter.aroundWriteTo(LoggingFilter.java:301) ~[docker-java-2.1.1.jar:na]\n        at org.glassfish.jersey.message.internal.WriterInterceptorExecutor.proceed(WriterInterceptorExecutor.java:162) ~[jersey-common-2.22.1.jar:na]\n        at org.glassfish.jersey.message.internal.MessageBodyFactory.writeTo(MessageBodyFactory.java:1130) ~[jersey-common-2.22.1.jar:na]\n        at org.glassfish.jersey.client.ClientRequest.writeEntity(ClientRequest.java:502) ~[jersey-client-2.22.1.jar:na]\n        at com.github.dockerjava.jaxrs.connector.ApacheConnector$2.writeTo(ApacheConnector.java:578) ~[docker-java-2.1.1.jar:na]\n        at org.apache.http.impl.execchain.RequestEntityProxy.writeTo(RequestEntityProxy.java:123) ~[httpclient-4.5.1.jar:4.5.1]\n        at org.apache.http.impl.DefaultBHttpClientConnection.sendRequestEntity(DefaultBHttpClientConnection.java:158) ~[httpcore-4.4.3.jar:4.4.3]\n        at org.apache.http.impl.conn.CPoolProxy.sendRequestEntity(CPoolProxy.java:162) ~[httpclient-4.5.1.jar:4.5.1]\n        at org.apache.http.protocol.HttpRequestExecutor.doSendRequest(HttpRequestExecutor.java:237) ~[httpcore-4.4.3.jar:4.4.3]\n        at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:122) ~[httpcore-4.4.3.jar:4.4.3]\n        at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271) ~[httpclient-4.5.1.jar:4.5.1]\n        at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184) ~[httpclient-4.5.1.jar:4.5.1]\n        at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88) ~[httpclient-4.5.1.jar:4.5.1]\n        at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110) ~[httpclient-4.5.1.jar:4.5.1]\n        at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184) ~[httpclient-4.5.1.jar:4.5.1]\n        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71) ~[httpclient-4.5.1.jar:4.5.1]\n        at com.github.dockerjava.jaxrs.connector.ApacheConnector.apply(ApacheConnector.java:443) ~[docker-java-2.1.1.jar:na]\n        at org.glassfish.jersey.client.ClientRuntime.invoke(ClientRuntime.java:255) ~[jersey-client-2.22.1.jar:na]\n        ... 58 common frames omitted\n`\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/55", "user": "paul8620", "labels": ["type/bug"], "created": "2016-02-01 14:37:10", "closed": "2016-02-07 21:20:25", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Confusing error messages when Docker machine initialization fails", "body": "When attempting to use testcontainers in OS X, I get the following exception.  Note the cause right at the bottom, which has the message \"Could not find a suitable docker instance - is DOCKER_HOST defined and pointing to a running Docker daemon?\":\n\n```\njava.lang.IllegalStateException: Failed to prepare Docker client\n    at org.testcontainers.DockerClientFactory.<init>(DockerClientFactory.java:49)\n    at org.testcontainers.DockerClientFactory.instance(DockerClientFactory.java:60)\n    at org.testcontainers.containers.GenericContainer.<init>(GenericContainer.java:72)\n    at org.testcontainers.containers.JdbcDatabaseContainer.<init>(JdbcDatabaseContainer.java:27)\n    at org.testcontainers.containers.PostgreSQLContainer.<init>(PostgreSQLContainer.java:17)\n    at org.testcontainers.containers.PostgreSQLContainerProvider.newInstance(PostgreSQLContainerProvider.java:14)\n    at org.testcontainers.jdbc.ContainerDatabaseDriver.connect(ContainerDatabaseDriver.java:111)\n    at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:161)\n    at com.progressfin.dataplatform.DataPlatformETLTest.runInitializationScripts(DataPlatformETLTest.java:121)\n    at com.progressfin.dataplatform.DataPlatformETLTest.<init>(DataPlatformETLTest.java:79)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:408)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:29)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:21)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:26)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:88)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64)\n    at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n    at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n    at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n    at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n    at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n    at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)\n    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.IllegalStateException: Could not find a suitable docker instance - is DOCKER_HOST defined and pointing to a running Docker daemon?\n    at org.testcontainers.DockerClientFactory.determineConfiguration(DockerClientFactory.java:145)\n    at org.testcontainers.DockerClientFactory.client(DockerClientFactory.java:72)\n    at org.testcontainers.DockerClientFactory.<init>(DockerClientFactory.java:44)\n    ... 45 more\n```\n\nThe problem is that this exception's descriptive message has, in my case, nothing to do with the actual cause of the failure.  The logs before the point this exception was thrown show this:\n\n```\n[Test worker] INFO org.testcontainers.DockerClientFactory - Checking environment for docker settings\n[Test worker] INFO org.apache.http.impl.execchain.RetryExec - I/O exception (org.apache.http.conn.UnsupportedSchemeException) caught when processing request to {s}->https://localhost:2376: https protocol is not supported\n[Test worker] INFO org.apache.http.impl.execchain.RetryExec - Retrying request to {s}->https://localhost:2376\n[Test worker] INFO org.apache.http.impl.execchain.RetryExec - I/O exception (org.apache.http.conn.UnsupportedSchemeException) caught when processing request to {s}->https://localhost:2376: https protocol is not supported\n[Test worker] INFO org.apache.http.impl.execchain.RetryExec - Retrying request to {s}->https://localhost:2376\n[Test worker] INFO org.apache.http.impl.execchain.RetryExec - I/O exception (org.apache.http.conn.UnsupportedSchemeException) caught when processing request to {s}->https://localhost:2376: https protocol is not supported\n[Test worker] INFO org.apache.http.impl.execchain.RetryExec - Retrying request to {s}->https://localhost:2376\n[Test worker] INFO org.testcontainers.DockerClientFactory - Could not initialize docker settings using environment variables: org.apache.http.conn.UnsupportedSchemeException: https protocol is not supported\n[Test worker] INFO org.testcontainers.DockerClientFactory - Checking for presence of docker-machine\n[Test worker] INFO org.testcontainers.DockerClientFactory - Could not initialize docker settings using docker machine: docker-machine must be installed for use on OS X\n```\n\nThat last message is apparently the real cause of the failure, but it's being reported as an info-level log message, one which several of my unit test reporting tools don't even report on.\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/52", "user": "ldcasillas-progreso", "labels": ["type/bug"], "created": "2016-01-12 21:45:58", "closed": "2016-02-07 21:20:25", "commits": {"e1bf37327aa19a09b6e7e26a6ee671b2b0b82321": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "bdd78cbde824f26e06902ed4015132f06d79241c": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "eeb14b80fc1d3c6d9edd89de76cbbc7b88ee90ff": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "517924f8d53735b1d9caa401448833fec538ebfa": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "e1bf37327aa19a09b6e7e26a6ee671b2b0b82321", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bdd78cbde824f26e06902ed4015132f06d79241c", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["c1f594a1b17b246f6969f2e34dbe4de2ec064ff3"], "nameRev": "bdd78cbde824f26e06902ed4015132f06d79241c tags/testcontainers-1.0.0~8^2~3", "commitMessage": "WIP Refactoring of DockerClientFactory to improve separation of concerns and better logging. Refs #52\n", "commitDateTime": "2016-01-30 17:10:26", "authoredDateTime": "2016-01-13 16:48:41", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "insertions": 23, "deletions": 86, "lines": 109}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/DockerClientConfigUtils.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/DockerConfigurationStrategy.java", "insertions": 55, "deletions": 0, "lines": 55}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/DockerMachineConfigurationStrategy.java", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "core/src/main/java/org/testcontainers/dockerclient/EnvironmentVariableConfigurationStrategy.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "core/src/main/java/org/testcontainers/utility/CommandLine.java", "insertions": 8, "deletions": 2, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerClientFactory.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.DockerClientFactory.dockerHostIpAddress(com.github.dockerjava.core.DockerClientConfig)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.determineConfiguration()", "TOT": 17, "UPD": 6, "INS": 0, "MOV": 3, "DEL": 8}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.client()", "TOT": 12, "UPD": 2, "INS": 2, "MOV": 7, "DEL": 1}, {"spoonMethodName": "org.testcontainers.DockerClientFactory", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.checkDiskSpace()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.checkDiskSpaceAndHandleExceptions(com.github.dockerjava.api.DockerClient)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.DockerClientFactory.checkDiskSpace(com.github.dockerjava.api.DockerClient)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DockerClientConfigUtils.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.DockerClientConfigUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DockerConfigurationStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DockerMachineConfigurationStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.DockerMachineConfigurationStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnvironmentVariableConfigurationStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.EnvironmentVariableConfigurationStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandLine.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.utility.CommandLine.runShellCommand(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.utility.CommandLine.getSystemPath()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.utility.CommandLine.executableExists(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "eeb14b80fc1d3c6d9edd89de76cbbc7b88ee90ff", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["095c1281780ba485d74e4d5ca0fd040fb8d7bf8c"], "nameRev": "eeb14b80fc1d3c6d9edd89de76cbbc7b88ee90ff tags/testcontainers-1.0.0~8^2~1", "commitMessage": "Refs #52: Add extra logging of docker environment variables on start\n", "commitDateTime": "2016-02-07 18:26:55", "authoredDateTime": "2016-02-07 18:26:55", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/dockerclient/EnvironmentAndSystemPropertyConfigurationStrategy.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnvironmentAndSystemPropertyConfigurationStrategy.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.dockerclient.EnvironmentAndSystemPropertyConfigurationStrategy.getDescription()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.dockerclient.EnvironmentAndSystemPropertyConfigurationStrategy.stringRepresentation(com.github.dockerjava.core.DockerClientConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "517924f8d53735b1d9caa401448833fec538ebfa", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["eeb14b80fc1d3c6d9edd89de76cbbc7b88ee90ff"], "nameRev": "517924f8d53735b1d9caa401448833fec538ebfa tags/testcontainers-1.0.0~8^2", "commitMessage": "Refs #52: Update docs re Docker environment\n", "commitDateTime": "2016-02-07 18:41:43", "authoredDateTime": "2016-02-07 18:41:43", "commitGitStats": [{"filePath": "docs/index.md", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bdd78cbde824f26e06902ed4015132f06d79241c", "eeb14b80fc1d3c6d9edd89de76cbbc7b88ee90ff", "517924f8d53735b1d9caa401448833fec538ebfa"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 210.0, "deletions": 89.0, "lines": 299.0, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 51.0, "UPD": 12.0, "INS": 15.0, "MOV": 13.0, "DEL": 11.0, "spoonFilesChanged": 7, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/testcontainers/dockerclient", "core/src/main/java/org/testcontainers/utility", "core/src/main/java/org/testcontainers"], "changesInPackagesSPOON": ["org.testcontainers.dockerclient", "org.testcontainers.DockerClientFactory", "org.testcontainers.DockerClientFactory.checkDiskSpaceAndHandleExceptions(com.github.dockerjava.api.DockerClient)", "org.testcontainers.dockerclient.EnvironmentAndSystemPropertyConfigurationStrategy.getDescription()", "org.testcontainers.DockerClientFactory.determineConfiguration()", "org.testcontainers.utility.CommandLine.executableExists(java.lang.String)", "org.testcontainers.DockerClientFactory.checkDiskSpace()", "org.testcontainers.dockerclient.EnvironmentVariableConfigurationStrategy", "org.testcontainers.utility.CommandLine.getSystemPath()", "org.testcontainers.DockerClientFactory.dockerHostIpAddress(com.github.dockerjava.core.DockerClientConfig)", "org.testcontainers.dockerclient.DockerMachineConfigurationStrategy", "org.testcontainers.dockerclient.EnvironmentAndSystemPropertyConfigurationStrategy.stringRepresentation(com.github.dockerjava.core.DockerClientConfig)", "org.testcontainers.DockerClientFactory.client()", "org.testcontainers.utility.CommandLine.runShellCommand(java.lang.String[])", "org.testcontainers.dockerclient.DockerClientConfigUtils", "org.testcontainers.DockerClientFactory.checkDiskSpace(com.github.dockerjava.api.DockerClient)"]}, {"title": "Containers occasionally timing out on startup", "body": "Seems to occur intermittently in CircleCI - needs further investigation\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/51", "user": "rnorth", "labels": ["type/bug"], "created": "2016-01-11 13:28:33", "closed": "2016-02-28 07:34:46", "commits": {"1f7eaf0a1fcaac588f9a263d348733ca0dd96955": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "1f7eaf0a1fcaac588f9a263d348733ca0dd96955", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["979a1c63e88a0a4d5e64996054bf064b3bc84518"], "nameRev": "1f7eaf0a1fcaac588f9a263d348733ca0dd96955 tags/testcontainers-1.0.0~9", "commitMessage": "Add an ignored test for future help in diagnosis of #51\n", "commitDateTime": "2016-02-07 18:45:36", "authoredDateTime": "2016-02-07 18:45:36", "commitGitStats": [{"filePath": "modules/selenium/src/test/java/org/testcontainers/junit/FlakyContainerCreationTest.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FlakyContainerCreationTest.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.junit.FlakyContainerCreationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1f7eaf0a1fcaac588f9a263d348733ca0dd96955"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Project self-tests intermittently exceed CircleCI memory limit", "body": "It seems something about the tests for this project are chewing up too much memory on CircleCI. \n\nThis causes an intermittent build failure, which is something that Just Should Not Happen.\n\nIt may require something as simple as lowering maven's heap size, or further investigation. I suspect CircleCI will be having problems if the build process uses up a lot of memory on top of the spawned containers (of which some will be fairly demanding).\n\nCircleCI failure output excerpt:\n\n```\n   PID   RSS %CPU COMMAND\n 15970 4318068 67.0 /usr/lib/jvm/jdk1.8.0/jre/bin/java -jar /home/ubuntu/testcontainers-java/modules/postgresql/target/surefire/surefirebooter261774409861515682.jar /home/ubuntu/testcontainers-java/modules/postgresql/target/surefire/surefire8554852648513290392tmp /home/ubuntu/testcontainers-java/modules/postgresql/target/surefire/surefire_2716773776951416696tmp\n 12388 395452 10.7 /usr/lib/jvm/jdk1.8.0/bin/java -Xmx512m -classpath /home/ubuntu/.m2/apache-maven-3.2.5/boot/plexus-classworlds-2.5.2.jar -Dclassworlds.conf=/home/ubuntu/.m2/apache-maven-3.2.5/bin/m2.conf -Dmaven.home=/home/ubuntu/.m2/apache-maven-3.2.5 org.codehaus.plexus.classworlds.launcher.Launcher integration-test\n```\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/46", "user": "rnorth", "labels": ["type/bug"], "created": "2016-01-07 12:43:19", "closed": "2016-01-07 21:11:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "checkDiskSpace fails for Ubuntu", "body": "First off, I found this project to be extremely useful and the source code very pleasant to read :)  \n\nThis could be more of an issue with either with my configuration or with the Docker remote api than this library, but I ran into a problem with running it on Ubuntu 14.04.3, Docker version 1.9.1, build a34a1d5. \n\n```\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 5\n    at org.testcontainers.SingletonDockerClient.checkDiskSpace(SingletonDockerClient.java:172)\n```\n\nIt appears that ubuntu formats its df command differently by default, if a path is too long it will insert a line break making it harder to parse. http://askubuntu.com/questions/55702/df-h-command-puts-line-breaks-in-output-how-do-i-fix \n\nHere is what the Docker remote api returned for me if I'm running on ubuntu:\n\n```\nFilesystem           1K-blocks      Used Available Use% Mounted on\nnone                   7350760   2461408   4492912  35% /\ntmpfs                   379500         0    379500   0% /dev\ntmpfs                   379500         0    379500   0% /sys/fs/cgroup\n/dev/disk/by-uuid/76cea61b-125c-4ea2-a2b8-06ffe70c1ba6\n                       7350760   2461408   4492912  35% /etc/resolv.conf\n/dev/disk/by-uuid/76cea61b-125c-4ea2-a2b8-06ffe70c1ba6\n                       7350760   2461408   4492912  35% /etc/hostname\n/dev/disk/by-uuid/76cea61b-125c-4ea2-a2b8-06ffe70c1ba6\n                       7350760   2461408   4492912  35% /etc/hosts\nshm                      65536         0     65536   0% /dev/shm\ntmpfs                   379500         0    379500   0% /proc/kcore\ntmpfs                   379500         0    379500   0% /proc/timer_stats\n```\n\nAssuming there isn't an easy configuration fix or something on my end, when parsing that String it could ignore lines that don't have the correct number of columns. In the meantime I just locally made a fix for it.\n\nThanks\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/45", "user": "alexboldt", "labels": ["help wanted", "type/bug"], "created": "2016-01-07 05:26:02", "closed": "2016-01-12 16:33:00", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Docker-java client is not thread safe", "body": "Hi!\n\nFirst of all, thanks for this cool project :) Here, at ZeroTurnaround, we created something similar, but will definitely try yours as well :) Even more - you already use our library - zt-exec :)\n\nWhat we discovered during our work - DockerClient is not thread safe. We heavily recommend to replace SingletonDockerClient with ThreadLocalDockerClient, or client-per-container. \n\nSee https://github.com/docker-java/docker-java/issues/339#issuecomment-149830497\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/44", "user": "bsideup", "labels": ["help wanted", "type/bug"], "created": "2016-01-06 08:29:11", "closed": "2016-01-12 16:33:10", "commits": {"fbccdd6bce5c7e39c4057f74e9ccdebf3216a62b": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "70749e0be0b1c04301403e39c85e5a4781e6319d": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "fbccdd6bce5c7e39c4057f74e9ccdebf3216a62b", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "70749e0be0b1c04301403e39c85e5a4781e6319d", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["973635e8f2f12f23bbcc6a5b6d198d73428c71d2"], "nameRev": "70749e0be0b1c04301403e39c85e5a4781e6319d tags/testcontainers-0.9.9~5^2", "commitMessage": "Change SingletonDockerClient to a factory that provides unique instance of the docker client per container object.\n\nRefs #44\n", "commitDateTime": "2016-01-11 21:00:43", "authoredDateTime": "2016-01-11 11:11:44", "commitGitStats": [{"filePath": "core/src/main/java/org/testcontainers/{SingletonDockerClient.java => DockerClientFactory.java}", "insertions": 61, "deletions": 34, "lines": 95}, {"filePath": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "insertions": 8, "deletions": 6, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DockerClientFactory.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.LogContainerCallback", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.testcontainers.LogContainerCallback.toString()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.testcontainers.LogContainerCallback.onNext(com.github.dockerjava.api.model.Frame)", "TOT": 11, "UPD": 5, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.testcontainers.DockerClientFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericContainer.java", "spoonMethods": [{"spoonMethodName": "org.testcontainers.containers.GenericContainer", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.waitUntilContainerStarted()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.testcontainers.containers.GenericContainer.getIpAddress()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["70749e0be0b1c04301403e39c85e5a4781e6319d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 69.0, "deletions": 40.0, "lines": 109.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27.0, "UPD": 15.0, "INS": 1.0, "MOV": 10.0, "DEL": 1.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/testcontainers", "core/src/main/java/org/testcontainers/containers"], "changesInPackagesSPOON": ["org.testcontainers.LogContainerCallback.onNext(com.github.dockerjava.api.model.Frame)", "org.testcontainers.containers.GenericContainer.getIpAddress()", "org.testcontainers.DockerClientFactory", "org.testcontainers.LogContainerCallback.toString()", "org.testcontainers.LogContainerCallback", "org.testcontainers.containers.GenericContainer", "org.testcontainers.containers.GenericContainer.waitUntilContainerStarted()"]}, {"title": "Default log level is set to DEBUG - should not be specified", "body": "Hi Richard\n\nI noticed a lot of debug log when using your test containers and noticed that it is specified in the logback.xml file in the core module.\nCan you not specify the level and instead leave that to the project using testcontainers?\n\nRegards Henrik\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/43", "user": "HenrikSkriver", "labels": ["type/bug"], "created": "2016-01-06 08:08:13", "closed": "2016-01-12 16:33:58", "commits": {"973635e8f2f12f23bbcc6a5b6d198d73428c71d2": {"commitGHEventType": "referenced", "commitUser": "rnorth"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "973635e8f2f12f23bbcc6a5b6d198d73428c71d2", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["939144f3e955afe6a344ba50ea4322fc8f1b8543", "1233edb8987ea32d445279f0fd896d22ba2d63db"], "nameRev": "973635e8f2f12f23bbcc6a5b6d198d73428c71d2 tags/testcontainers-0.9.9~7", "commitMessage": "Merge pull request #48 from testcontainers/logging-improvments\n\nRemove logback.xml from core. Refs #43 ", "commitDateTime": "2016-01-08 15:31:53", "authoredDateTime": "2016-01-08 15:31:53", "commitGitStats": [{"filePath": "core/pom.xml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/main/resources/logback.xml", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "docs/index.md", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Docker client dependencies can cause conflicts with Jersey, Jackson and other libs", "body": "When attempting to integrate Testcontainers into a project that uses Dropwizard 0.8.1 (Jersey 2.17), I've been getting some bad dependency clashes despite our use of the shaded docker-client lib.\n\nAfter some head-scratching and experimenting with various options, what eventually worked was \n- making a temporary version of testcontainers that depends on the non-shaded version of docker-client\n- use maven dependencyManagement to force the crossover Jersey dependencies into sync:\n  \n  ```\n      <dependency>\n          <groupId>org.glassfish.jersey.core</groupId>\n          <artifactId>jersey-client</artifactId>\n          <version>2.17</version>\n      </dependency>\n      <dependency>\n          <groupId>org.glassfish.jersey.core</groupId>\n          <artifactId>jersey-common</artifactId>\n          <version>2.17</version>\n      </dependency>\n      <dependency>\n          <groupId>org.glassfish.jersey.connectors</groupId>\n          <artifactId>jersey-apache-connector</artifactId>\n          <version>2.17</version>\n      </dependency>\n      <dependency>\n          <groupId>org.glassfish.jersey.media</groupId>\n          <artifactId>jersey-media-json-jackson</artifactId>\n          <version>2.17</version>\n      </dependency>\n  ```\n\nI think it would be better to either not use the shaded version of the docker-client library, or make it optional (e.g. via a classifier).\n", "url": "https://github.com/testcontainers/testcontainers-java/issues/35", "user": "rnorth", "labels": ["type/bug"], "created": "2015-07-28 06:34:48", "closed": "2016-02-07 21:20:25", "commits": {"40d4252ed6f7f0bdfddc268e30b8909287a64b8a": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "bf075e19f856f3cc49482098fdb52a056a4557ea": {"commitGHEventType": "referenced", "commitUser": "rnorth"}, "c1f594a1b17b246f6969f2e34dbe4de2ec064ff3": {"commitGHEventType": "closed", "commitUser": "rnorth"}}, "ttf": 194.00027777777777, "commitsDetails": [{"commitHash": "40d4252ed6f7f0bdfddc268e30b8909287a64b8a", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bf075e19f856f3cc49482098fdb52a056a4557ea", "commitGHEventType": "referenced", "commitUser": "rnorth", "commitParents": ["3e723a4977ae0262cb869f9abc6bf9559a70063a"], "nameRev": "bf075e19f856f3cc49482098fdb52a056a4557ea tags/testcontainers-1.0.0~11^2~7", "commitMessage": "Use maven shade pluginto relocate dependencies and avoid conflicts. Inclusion-by-exception (Jackson, Jersey, HK2, Http Components, Docker-java client, mainly).\nRefs #35\n", "commitDateTime": "2016-01-17 12:34:46", "authoredDateTime": "2016-01-14 11:50:05", "commitGitStats": [{"filePath": "core/pom.xml", "insertions": 87, "deletions": 1, "lines": 88}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.com.fasterxml.jackson.core.JsonFactory", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.com.fasterxml.jackson.core.ObjectCodec", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.javax.ws.rs.ext.RuntimeDelegate", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.org.glassfish.hk2.extension.ServiceLocatorGenerator", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.org.jvnet.hk2.external.generator.ServiceLocatorGenerator", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pom.xml", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c1f594a1b17b246f6969f2e34dbe4de2ec064ff3", "commitGHEventType": "closed", "commitUser": "rnorth", "commitParents": ["c0e6e571e1756ed7c292ecd839122e90a85b57f5", "75394a8c64c3d62c34368032682f17f333eab372"], "nameRev": "c1f594a1b17b246f6969f2e34dbe4de2ec064ff3 tags/testcontainers-1.0.0~11", "commitMessage": "Merge pull request #53 from testcontainers/shade-experiment\n\nShade and relocate deps that are likely to cause class conflicts. Should fix #35 ", "commitDateTime": "2016-01-30 16:55:05", "authoredDateTime": "2016-01-30 16:55:05", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "circle.yml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/pom.xml", "insertions": 85, "deletions": 1, "lines": 86}, {"filePath": "{modules/docker-compose => core}/src/main/java/org/testcontainers/containers/AmbassadorContainer.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "{modules/docker-compose => core}/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "{modules/docker-compose => core}/src/main/java/org/testcontainers/containers/FutureContainer.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/src/main/resources/META-INF/services/README.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.com.fasterxml.jackson.core.JsonFactory", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.com.fasterxml.jackson.core.ObjectCodec", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.com.github.dockerjava.api.command.DockerCmdExecFactory", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.javax.ws.rs.ext.RuntimeDelegate", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.org.glassfish.hk2.extension.ServiceLocatorGenerator", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/resources/META-INF/services/org.testcontainers.shaded.org.jvnet.hk2.external.generator.ServiceLocatorGenerator", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "{modules/docker-compose => core}/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "{modules/docker-compose => core}/src/test/resources/compose-test.yml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "docs/index.md", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "modules/docker-compose/pom.xml", "insertions": 0, "deletions": 29, "lines": 29}, {"filePath": "modules/mysql/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "modules/nginx/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "modules/oracle-xe/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "modules/postgresql/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "modules/selenium/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pom.xml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shade-test/clashing-deps-jackson/pom.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "shade-test/clashing-deps-jackson/src/main/java/clashingdeps/jackson/cache/Cache.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "shade-test/clashing-deps-jackson/src/main/java/clashingdeps/jackson/cache/RedisJacksonBackedCache.java", "insertions": 54, "deletions": 0, "lines": 54}, {"filePath": "shade-test/clashing-deps-jackson/src/test/java/RedisJacksonBackedCacheTest.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "{modules/docker-compose => shade-test/clashing-deps-jackson}/src/test/resources/logback-test.xml", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "shade-test/clashing-deps-jersey/pom.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "shade-test/clashing-deps-jersey/src/test/java/OldJerseyClientTest.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "shade-test/clashing-deps-jersey/src/test/resources/logback-test.xml", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "shade-test/pom.xml", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AmbassadorContainer.java", "spoonMethods": []}, {"spoonFilePath": "DockerComposeContainer.java", "spoonMethods": []}, {"spoonFilePath": "FutureContainer.java", "spoonMethods": []}, {"spoonFilePath": "DockerComposeContainerTest.java", "spoonMethods": []}, {"spoonFilePath": "Cache.java", "spoonMethods": [{"spoonMethodName": "clashingdeps.jackson.cache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisJacksonBackedCache.java", "spoonMethods": [{"spoonMethodName": "clashingdeps.jackson.cache.RedisJacksonBackedCache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisJacksonBackedCacheTest.java", "spoonMethods": [{"spoonMethodName": "RedisJacksonBackedCacheTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OldJerseyClientTest.java", "spoonMethods": [{"spoonMethodName": "OldJerseyClientTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bf075e19f856f3cc49482098fdb52a056a4557ea"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 0.0, "lines": 5.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/resources/META-INF/services/org.testcontainers.shaded.org.glassfish.hk2.extension.ServiceLocatorGenerator", "core/src/main/resources/META-INF/services", "core/src/main/resources/META-INF/services/org.testcontainers.shaded.org.jvnet.hk2.external.generator.ServiceLocatorGenerator", "core/src/main/resources/META-INF/services/org.testcontainers.shaded.com.fasterxml.jackson.core.ObjectCodec", "core/src/main/resources/META-INF/services/org.testcontainers.shaded.com.fasterxml.jackson.core.JsonFactory"], "changesInPackagesSPOON": []}]}