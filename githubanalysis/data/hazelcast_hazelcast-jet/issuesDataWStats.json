{"projectName": "hazelcast/hazelcast-jet", "bugLabels": ["breaking-change", "breaking-change-core", "defect"], "captureTime": "Sat Jul  4 20:14:37 2020", "issues": [{"title": "Cleanup of *usingService(Async) methods", "body": "- Remove` filterUsingServiceAsync` and `flatMapUsingServiceAsync` (also the keyed variants) as it creates several methods without much usefulness (can easily be replaced by a subsequent mapping/filtering stage)\r\n- Add a variant to `mapUsingServiceAsync` which has the parameters \u201cordered responses\u201d and \u201cmax pending calls\u201d. Currently these are available at the ServiceFactory level, but only apply to specific variants.\r\n- Remove ordered async responses and maxPendingCalls from ServiceFactory again these only apply to specific variants so should be residing there.\r\n- (optional) We should support returning `null` in `mapUsingServiceAsyncBatched` to act as filtering.\r\n- (optional) The keyed variant of `mapUsingServiceAsyncBatched` is currently missing. This is useful if you want to distribute the data from a single node to the whole cluster.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1909", "user": "cangencer", "labels": ["breaking-change", "enhancement", "pipeline-api"], "created": "2020-01-31 07:56:22", "closed": "2020-02-07 09:35:55", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Unify Source Context and Sink Writer", "body": "`SourceBuilder` works with user [`Context`](https://github.com/hazelcast/hazelcast-jet/blob/3721541fb419792b2d5b00dc39468b8803c047d5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/SourceBuilder.java#L180) while the `SinkBuilder` works with a [\"Writer\"](https://github.com/hazelcast/hazelcast-jet/blob/3721541fb419792b2d5b00dc39468b8803c047d5/hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/SinkBuilder.java#L92). \r\n\r\nThese objects are essentially the same: Both represent a state of a Source/Source. The terminology should be unified. ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1731", "user": "jerrinot", "labels": ["breaking-change", "enhancement"], "created": "2019-11-09 17:05:37", "closed": "2019-12-06 17:13:03", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "Hadoop Packaging Issues", "body": "Hadoop has issues with broken backward compatibility within the 2.x minor version range. Therefore we declare our Hadoop dependencies as `provided`. \r\n\r\nAction items:\r\n\r\n1. Document that it is not enough to use `hazelcast-jet-hadoop` dependency in your Maven project, list which other artifacts you have to explicitly name because Jet needs them.\r\n\r\n2. On our website's download page, provide the fat JARs of `hazelcast-jet-hadoop` with each of the mutually incompatible Hadoop versions.\r\n\r\n3. Explain how to use Hadoop with Jet's distribution ZIP in the ZIP's readme.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1707", "user": "mtopolnik", "labels": ["breaking-change", "hadoop"], "created": "2019-10-29 15:08:57", "closed": "2020-01-20 11:05:26", "commits": {}, "ttf": 82.00027777777778, "commitsDetails": []}, {"title": "Different error thrown when joining before or after a job completes", "body": "When `Job.join()` is called while the job is running, the exception is the exception actually thrown by the job. If it's called after the job failed, the exception is recreated as `new JetException(JobResult.failureText)`, doesn't contain the original exception in causes and the original stack trace.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1598", "user": "viliam-durina", "labels": ["breaking-change", "defect"], "created": "2019-09-04 10:24:32", "closed": "2019-09-05 20:24:12", "commits": {"0c3167dcf6985e9e87c68bbefd13273dd20afe4e": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "0c3167dcf6985e9e87c68bbefd13273dd20afe4e", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["7dc956f78bc1df2a1e11dc0e79a7fe5af809d747"], "nameRev": "0c3167dcf6985e9e87c68bbefd13273dd20afe4e tags/v3.2~35", "commitMessage": "Fix different exception from join if problem is same (#1600)\n\nFixes #1598\r\nFixes #1602\r\n\r\nOne difference still remains: if a temporary master context is completed\r\nin `JobCoordinatorService.completeMasterContextIfJobAlreadyCompleted()`,\r\nit will have different error.\r\n\r\nAlso contains refactor of `ExecutionLifecycleTest` to use\r\n`SimpleTestInClusterSupport`: some tests created a second cluster.\r\n\r\nThe test `when_job_withNoSnapshots_completed_then_noSnapshotMapsLeft`\r\nwas outdated.", "commitDateTime": "2019-09-05 22:24:11", "authoredDateTime": "2019-09-05 22:24:11", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJobProxy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExecutionLifecycleTest.java", "insertions": 81, "deletions": 46, "lines": 127}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/JobSummaryTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/ExceptionUtilTest.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/test/AssertionsTest.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/test/TestSourcesTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-reference-manual/src/main/java/Testing.java", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJobProxy.JoinJobCallback.onFailure(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.joinSubmittedJob(long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ExecutionLifecycleTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.setup()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_job_withNoSnapshots_completed_then_noSnapshotMapsLeft()", "TOT": 21, "UPD": 13, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorCompletesSuccessfully_then_closeCalledImmediately()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_deserializationOnMembersFails_then_jobSubmissionFails__member()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_deserializationOnMembersFails_then_jobSubmissionFails__client()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_deserializationOnMasterFails_then_jobSubmissionFails_member()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_deserializationOnMasterFails_then_jobSubmissionFails_client()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_executionCancelled_then_jobCompletedWithCancellationException()", "TOT": 6, "UPD": 2, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_jobCancelled_then_psCloseNotCalledBeforeTaskletsDone()", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPClosedWithoutError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPClosedWithError()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsCloseThrows_then_jobSucceeds()", "TOT": 16, "UPD": 2, "INS": 3, "MOV": 9, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsGetThrows_then_jobFails()", "TOT": 14, "UPD": 2, "INS": 2, "MOV": 9, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_jobCompletesSuccessfully_then_closeCalled()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_oneOfTwoJobsFails_then_theOtherContinues()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psGetOnOtherNodeThrows_then_jobFails()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psCloseThrows_then_jobSucceeds()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorCloseThrows_then_jobSucceeds()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_executionCancelledBeforeStart_then_jobFutureIsCancelledOnExecute()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.runJobExpectFailure(com.hazelcast.jet.core.DAG,java.lang.RuntimeException)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPsClosedWithoutError()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPsClosedWithError(java.lang.Throwable)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.getJobResult(com.hazelcast.jet.Job)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.beforeClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorInitThrows_then_failJob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorCooperativeCompleteThrows_then_failJob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorNonCooperativeCompleteThrows_then_failJob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorProcessThrows_then_failJob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsInitThrows_then_jobFails()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psInitThrows_then_jobFails()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psGetThrows_then_jobFails()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 0}]}, {"spoonFilePath": "JobSummaryTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_job_failed()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ExceptionUtilTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.ExceptionUtilTest.test_serializationFromNodeToClient()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.ExceptionUtilTest.test_serializationOnNode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AssertionsTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertOrdered_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertOrdered_not_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertAnyOrder_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertAnyOrder_duplicate_entry_only_in_source_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertAnyOrder_duplicate_entry_only_in_assert_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertAnyOrder_not_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertContains_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertContains_not_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollected_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollected_not_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollectedEventually()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollectedEventually_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollectedEventuallynot_terminal()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollectedEventuallynot_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TestSourcesTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.test.TestSourcesTest.test_itemStream()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.TestSourcesTest.test_itemStream_withWindowing()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.TestSourcesTest.test_itemStream_in_expected_range()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Testing.java", "spoonMethods": [{"spoonMethodName": "Testing.assertInstanceOf(java.lang.Class,java.lang.Object)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "Testing.assertions()", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Processor.init(), PS.init() and PMS.init() should throw Exception", "body": "This should be for convenience, as these exceptions are already handled downstream and it's common when opening connections and similar that the API used will also have throw in the API.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1116", "user": "cangencer", "labels": ["breaking-change", "enhancement"], "created": "2018-10-18 15:20:32", "closed": "2018-10-26 11:22:26", "commits": {"df47d06b93f272eb245480693524617fd5f56663": {"commitGHEventType": "referenced", "commitUser": "mtopolnik"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "df47d06b93f272eb245480693524617fd5f56663", "commitGHEventType": "referenced", "commitUser": "mtopolnik", "commitParents": ["346dd2d3aebbc21fa98064bc0b5a9bf5c458bf47"], "nameRev": "df47d06b93f272eb245480693524617fd5f56663 tags/v3.0~165", "commitMessage": "Allow init() methods to throw Exception (#1117)\n\nFixes #1116", "commitDateTime": "2018-10-26 13:22:25", "authoredDateTime": "2018-10-26 13:22:25", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/AbstractProcessor.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/Processor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/ProcessorMetaSupplier.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/ProcessorSupplier.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/test/TestSupport.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/StreamJmsP.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteJmsP.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 17, "deletions": 12, "lines": 29}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlanBuilder.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/PeekWrappedP.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/ProcessorWrapper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/WrappingProcessorMetaSupplier.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/WrappingProcessorSupplier.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/AbstractProcessorTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/PeekingWrapperTest.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorPTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/StreamEventJournalPTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/StreamFilesPTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/WriteLoggerPTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/InsertWatermarksPTest.java", "insertions": 16, "deletions": 16, "lines": 32}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/SessionWindowPTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/SessionWindowP_failoverTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/SlidingWindowP_failoverTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/SlidingWindowP_twoStageSnapshotTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/TransformUsingContextPTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/ThrottleWrappedP.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-hadoop/src/main/java/com/hazelcast/jet/hadoop/impl/ReadHdfsP.java", "insertions": 11, "deletions": 15, "lines": 26}, {"filePath": "hazelcast-jet-hadoop/src/main/java/com/hazelcast/jet/hadoop/impl/WriteHdfsP.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-kafka/src/test/java/com/hazelcast/jet/kafka/impl/StreamKafkaPTest.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Rename bash scripts to have same prefix", "body": "The bash scripts should all have the format `jet-XXXX.sh` instead of `XXXX-jet.sh`", "url": "https://github.com/hazelcast/hazelcast-jet/issues/612", "user": "cangencer", "labels": ["breaking-change", "core"], "created": "2017-11-24 10:37:51", "closed": "2018-01-31 14:18:45", "commits": {"116e2a4b588143aca8d037c333ad66dca62677d9": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 68.00027777777778, "commitsDetails": [{"commitHash": "116e2a4b588143aca8d037c333ad66dca62677d9", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["d864a8af35377cc37f9855d9bc64605dd86db208"], "nameRev": "116e2a4b588143aca8d037c333ad66dca62677d9 tags/v0.6~89", "commitMessage": "Rename scripts to `jet-XXX.sh` (#692)\n\nFixes #612\r\n\r\nIncludes unrelated change: document the output of `peekInputP` and `peekOutputP`.", "commitDateTime": "2018-01-31 15:18:45", "authoredDateTime": "2018-01-31 15:18:45", "commitGitStats": [{"filePath": "hazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetBootstrap.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/processor/DiagnosticProcessors.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "hazelcast-jet-distribution/src/dist/readme.html", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/{start-jet.bat => jet-start.bat}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/{start-jet.sh => jet-start.sh}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/{stop-jet.bat => jet-stop.bat}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/{stop-jet.sh => jet-stop.sh}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/{submit-jet.bat => jet-submit.bat}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/{submit-jet.sh => jet-submit.sh}", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetBootstrap.java", "spoonMethods": []}, {"spoonFilePath": "DiagnosticProcessors.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "{map,cache}Journal: Improve the method signature", "body": "We propose two improvements:\r\n\r\n1. Replace the boolean parameter with an enum. `mapJournal(\"myMap\", true)` would become `mapJournal(\"myMap\", START_FROM_LATEST)`\r\n2. Replace the default, which is no filter and no projection, with a filter that passes through only `add` and `update` events, and a projection `XxxJournalEntry::getNewValue`. Such a default makes the Event Journal behave more like a Kafka topic.\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/607", "user": "jerrinot", "labels": ["breaking-change"], "created": "2017-11-22 09:31:49", "closed": "2017-12-13 13:53:29", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Elastic connector does not retry if 1node elastic cluster is used", "body": "When elastic cluster with only 1 node is used and Elastic connector timeouted then retry does not happen and job fails.\r\n\r\nIt causes that elastic-test soak test fails intermittently.\r\n\r\nStacktrace:\r\n```\r\ncom.hazelcast.jet.JetException: Exception in ProcessorTasklet{ElasticTest_readFrom_2046/elasticSource#7}: com.hazelcast.jet.JetException: Could not execute SearchRequest to Elastic\r\n[java.util.concurrent.CompletionException: com.hazelcast.jet.JetException: Exception in ProcessorTasklet{ElasticTest_readFrom_2046/elasticSource#7}: com.hazelcast.jet.JetException: Could not execute SearchRequest to Elastic\r\n\tat java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:375)\r\n\tat java.util.concurrent.CompletableFuture.join(CompletableFuture.java:1947)\r\n\tat com.hazelcast.jet.Job.join(Job.java:137)\r\n\tat com.hazelcast.jet.tests.elastic.ElasticTest.executeReadFromElasticPipeline(ElasticTest.java:145)\r\n\tat com.hazelcast.jet.tests.elastic.ElasticTest.test(ElasticTest.java:85)\r\n\tat com.hazelcast.jet.tests.common.AbstractSoakTest.testInternal(AbstractSoakTest.java:144)\r\n\tat com.hazelcast.jet.tests.common.AbstractSoakTest.run(AbstractSoakTest.java:83)\r\n\tat com.hazelcast.jet.tests.elastic.ElasticTest.main(ElasticTest.java:65)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.hazelcast.jet.impl.JetBootstrap.executeJar(JetBootstrap.java:125)\r\n\tat com.hazelcast.jet.server.JetCommandLine.submit(JetCommandLine.java:209)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.hazelcast.jet.picocli.CommandLine.execute(CommandLine.java:1189)\r\n\tat com.hazelcast.jet.picocli.CommandLine.access$800(CommandLine.java:141)\r\n\tat com.hazelcast.jet.picocli.CommandLine$RunAll.handle(CommandLine.java:1416)\r\n\tat com.hazelcast.jet.picocli.CommandLine$RunAll.handle(CommandLine.java:1376)\r\n\tat com.hazelcast.jet.picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1243)\r\n\tat com.hazelcast.jet.picocli.CommandLine.parseWithHandlers(CommandLine.java:1526)\r\n\tat com.hazelcast.jet.server.JetCommandLine.runCommandLine(JetCommandLine.java:157)\r\n\tat com.hazelcast.jet.server.JetCommandLine.main(JetCommandLine.java:134)\r\nCaused by: com.hazelcast.jet.JetException: Exception in ProcessorTasklet{ElasticTest_readFrom_2046/elasticSource#7}: com.hazelcast.jet.JetException: Could not execute SearchRequest to Elastic\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:304)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.hazelcast.jet.JetException: Could not execute SearchRequest to Elastic\r\n\tat com.hazelcast.jet.elastic.impl.ElasticSourceP$ElasticScrollTraverser.<init>(ElasticSourceP.java:181)\r\n\tat com.hazelcast.jet.elastic.impl.ElasticSourceP.init(ElasticSourceP.java:109)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.init(AbstractProcessor.java:83)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.init(ProcessorTasklet.java:228)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:289)\r\n\t... 5 more\r\nCaused by: com.hazelcast.client.UndefinedErrorCodeException: Class name: java.net.ConnectException, Message: Timeout connecting to [/10.0.0.246:9200]\r\n\tat org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:804)\r\n\tat org.elasticsearch.client.RestClient.performRequest(RestClient.java:225)\r\n\tat org.elasticsearch.client.RestClient.performRequest(RestClient.java:212)\r\n\tat org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1433)\r\n\tat org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1403)\r\n\tat org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1373)\r\n\tat org.elasticsearch.client.RestHighLevelClient.search(RestHighLevelClient.java:915)\r\n\tat com.hazelcast.jet.elastic.impl.ElasticSourceP$ElasticScrollTraverser.<init>(ElasticSourceP.java:167)\r\n\t... 9 more\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2350", "user": "olukas", "labels": ["defect", "elastic"], "created": "2020-06-23 07:02:24", "closed": "2020-06-26 05:26:00", "commits": {"e5b83edcd037755aa964d94881a6eed693e971ed": {"commitGHEventType": "referenced", "commitUser": "frant-hartm"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "e5b83edcd037755aa964d94881a6eed693e971ed", "commitGHEventType": "referenced", "commitUser": "frant-hartm", "commitParents": ["8c2716c7b4c6c6d1cf8f7a226e6f2fe1c79ebaed"], "nameRev": "e5b83edcd037755aa964d94881a6eed693e971ed remotes/origin/4.2~12", "commitMessage": "Add retry logic to elastic client calls (#2354)\n\nElastic client tries to connect to a node only once for each request\r\n(meaning a call to the client here, not actuall HTTP request). When a\r\nrequest fails the node is marked dead and is not retried for the\r\nrequest.\r\n\r\nThis causes issues with single node cluster or small clusters where all\r\nnodes become unreacheble for short amount of time).\r\n\r\nFor different requests\r\n- the dead nodes are retried after 1 m.\r\n- when all nodes are marked dead one of the dead nodes is retried.\r\n\r\nFixes #2350", "commitDateTime": "2020-06-26 07:25:59", "authoredDateTime": "2020-06-26 07:25:59", "commitGitStats": [{"filePath": "extensions/elasticsearch/elasticsearch-5/src/main/java/com/hazelcast/jet/elastic/ElasticSinkBuilder.java", "insertions": 46, "deletions": 9, "lines": 55}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/main/java/com/hazelcast/jet/elastic/ElasticSourceBuilder.java", "insertions": 26, "deletions": 1, "lines": 27}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/main/java/com/hazelcast/jet/elastic/impl/ElasticCatClient.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourceConfiguration.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourceP.java", "insertions": 15, "deletions": 7, "lines": 22}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourcePMetaSupplier.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/main/java/com/hazelcast/jet/elastic/impl/RetryUtils.java", "insertions": 92, "deletions": 0, "lines": 92}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/test/java/com/hazelcast/jet/elastic/AuthElasticSinksTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/test/java/com/hazelcast/jet/elastic/AuthElasticSourcesTest.java", "insertions": 17, "deletions": 3, "lines": 20}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/test/java/com/hazelcast/jet/elastic/CommonElasticSourcesTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/test/java/com/hazelcast/jet/elastic/impl/ElasticCatClientTest.java", "insertions": 31, "deletions": 1, "lines": 32}, {"filePath": "extensions/elasticsearch/elasticsearch-5/src/test/java/com/hazelcast/jet/elastic/impl/ElasticSourcePTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/main/java/com/hazelcast/jet/elastic/ElasticSinkBuilder.java", "insertions": 48, "deletions": 10, "lines": 58}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/main/java/com/hazelcast/jet/elastic/ElasticSourceBuilder.java", "insertions": 26, "deletions": 1, "lines": 27}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/main/java/com/hazelcast/jet/elastic/impl/ElasticCatClient.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourceConfiguration.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourceP.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourcePMetaSupplier.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/main/java/com/hazelcast/jet/elastic/impl/RetryUtils.java", "insertions": 92, "deletions": 0, "lines": 92}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/test/java/com/hazelcast/jet/elastic/AuthElasticSinksTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/test/java/com/hazelcast/jet/elastic/AuthElasticSourcesTest.java", "insertions": 17, "deletions": 3, "lines": 20}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/test/java/com/hazelcast/jet/elastic/CommonElasticSourcesTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/test/java/com/hazelcast/jet/elastic/impl/ElasticCatClientTest.java", "insertions": 31, "deletions": 1, "lines": 32}, {"filePath": "extensions/elasticsearch/elasticsearch-6/src/test/java/com/hazelcast/jet/elastic/impl/ElasticSourcePTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/main/java/com/hazelcast/jet/elastic/ElasticSinkBuilder.java", "insertions": 48, "deletions": 10, "lines": 58}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/main/java/com/hazelcast/jet/elastic/ElasticSourceBuilder.java", "insertions": 26, "deletions": 1, "lines": 27}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/main/java/com/hazelcast/jet/elastic/impl/ElasticCatClient.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourceConfiguration.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourceP.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/main/java/com/hazelcast/jet/elastic/impl/ElasticSourcePMetaSupplier.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/main/java/com/hazelcast/jet/elastic/impl/RetryUtils.java", "insertions": 92, "deletions": 0, "lines": 92}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/AuthElasticSinksTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/AuthElasticSourcesTest.java", "insertions": 17, "deletions": 3, "lines": 20}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSinksTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/CommonElasticSourcesTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/impl/ElasticCatClientTest.java", "insertions": 31, "deletions": 1, "lines": 32}, {"filePath": "extensions/elasticsearch/elasticsearch-7/src/test/java/com/hazelcast/jet/elastic/impl/ElasticSourcePTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Missing serializer for org.apache.avro.util.Utf8", "body": "Avro records use the class `Utf8` for representing strings rather than the `String` class. This causes a problem when calculating the partition key as there is no serializer implemented for this class. It's just a wrapper around a `String` so the implementatin should be trivial.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2346", "user": "cangencer", "labels": ["avro", "defect"], "created": "2020-06-22 06:10:24", "closed": "2020-06-25 06:19:10", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "JobConfig.attachFile fails on windows", "body": "Reproduces in `DeploymentTest` tests, they fail with:\r\n```\r\njava.nio.file.InvalidPathException: Illegal char <:> at index 2: /C:/work/hazelcast/hazelcast-jet/hazelcast-jet-core/target/test-classes/deployment/resource.txt\r\n\r\n\tat java.base/sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182)\r\n\tat java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153)\r\n\tat java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)\r\n\tat java.base/sun.nio.fs.WindowsPath.parse(WindowsPath.java:92)\r\n\tat java.base/sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:229)\r\n\tat java.base/java.nio.file.Path.of(Path.java:147)\r\n\tat java.base/java.nio.file.Paths.get(Paths.java:69)\r\n\tat com.hazelcast.jet.impl.JobRepository.uploadJobResources(JobRepository.java:215)\r\n\tat com.hazelcast.jet.impl.AbstractJetInstance.uploadResourcesAndAssignId(AbstractJetInstance.java:183)\r\n\tat com.hazelcast.jet.impl.AbstractJetInstance.newJob(AbstractJetInstance.java:66)\r\n\tat com.hazelcast.jet.JetInstance.newJob(JetInstance.java:142)\r\n\tat com.hazelcast.jet.impl.deployment.AbstractDeploymentTest.testDeployment_whenAttachFile_thenFileAvailableOnMembers(AbstractDeploymentTest.java:173)\r\n...\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2300", "user": "viliam-durina", "labels": ["defect"], "created": "2020-06-04 07:54:11", "closed": "2020-06-25 07:11:49", "commits": {"bfd8889a85067c8e8f10ec376726b9755165c8fb": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "bfd8889a85067c8e8f10ec376726b9755165c8fb", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["19713f7796ebc06b3287dfde2f9099346b0f6d31"], "nameRev": "bfd8889a85067c8e8f10ec376726b9755165c8fb remotes/origin/4.2~18", "commitMessage": "Fix file name extraction on Windows (#2357)\n\nFixes #2300", "commitDateTime": "2020-06-25 09:11:49", "authoredDateTime": "2020-06-25 09:11:49", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobRepository.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/Contexts.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/IOUtil.java", "insertions": 20, "deletions": 0, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JobRepository.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobRepository.uploadJobResources(com.hazelcast.jet.config.JobConfig)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "Contexts.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.Contexts.ProcSupplierCtx.attachedFile(java.lang.String)", "TOT": 8, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "IOUtil.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.IOUtil.fileNameFromUrl(java.net.URL)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Map sinks using IMap.submitToKeys don't work as expected.", "body": "Apparently `IMap.submitToKeys(Set, EntryProcessor)` suffers from potential **reordering** of it's operations (the effects of the entry processors can be observed in reverse order compared to the order they were applied in). \r\n\r\nThis can be **reproduced** by running the member (as opposed to client) tests for remote maps from `CdcSinksTest` over and over again, until one or the other fails. The failure is always caused by the above reordering (at least in every case I've seen). \r\n\r\nPossible **solutions**:\r\n* limiting number of in-flight async operations to 1, but in this case there's probably no point in using async operations at all\r\n* keeping data for keys which are also in an in-flight operation in the buffers, until the respective operations finish; might be more optimal, but would have a complicated logic", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2299", "user": "jbartok", "labels": ["core", "defect"], "created": "2020-06-04 06:30:57", "closed": "2020-06-18 08:53:16", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "UnsupportedOperationException: Missing implementation in class com.hazelcast.jet.impl.connector.WriteJmsP", "body": "Hi,\r\n\r\nRunning a simple pipeline with a JMS sink, inspired from \r\n\r\nhttps://github.com/hazelcast/hazelcast-jet/blob/master/examples/jms/src/main/java/com/hazelcast/jet/examples/jms/JmsTopicSample.java\r\n\r\nthrows the following exception:\r\n\r\njava.lang.UnsupportedOperationException: Missing implementation in class com.hazelcast.jet.impl.connector.WriteJmsP\r\n\tat com.hazelcast.jet.core.Processor.tryProcessWatermark(Processor.java:211) ~[hazelcast-jet-4.1.jar:4.1]\r\n\tat com.hazelcast.jet.impl.processor.ProcessorWrapper.tryProcessWatermark(ProcessorWrapper.java:98) ~[hazelcast-jet-4.1.jar:4.1]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:273) ~[hazelcast-jet-4.1.jar:4.1]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:240) ~[hazelcast-jet-4.1.jar:4.1]\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:293) [hazelcast-jet-4.1.jar:4.1]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_201]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_201]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_201]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_201]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_201]\r\n\r\n\r\nRunning Jet 4.1 using the hazelcast/hazelcast-jet:4.1 docker image.\r\n\r\nFound a very similar issue: #1678 ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2292", "user": "tplasko", "labels": ["defect"], "created": "2020-06-03 05:35:35", "closed": "2020-06-03 10:22:51", "commits": {"653b387f02a697f344d5a8c12099a61d8a45625d": {"commitGHEventType": "referenced", "commitUser": "cangencer"}, "5aa599ec276988d4d378a3517483deb1ebf61cf8": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "653b387f02a697f344d5a8c12099a61d8a45625d", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["61c603fb9c62ca04c4825fce8a81cd2518fbb3a5"], "nameRev": "653b387f02a697f344d5a8c12099a61d8a45625d tags/v4.1.1~3", "commitMessage": "Handle WM in XaSinkProcessorBase (#2295)\n\nFixes #2292", "commitDateTime": "2020-06-03 10:33:08", "authoredDateTime": "2020-06-03 10:33:08", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/XaSinkProcessorBase.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "XaSinkProcessorBase.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.XaSinkProcessorBase.tryProcessWatermark(com.hazelcast.jet.core.Watermark)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5aa599ec276988d4d378a3517483deb1ebf61cf8", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["37b2065789f3fe3ceda3a03d044fa8a478f951f7"], "nameRev": "5aa599ec276988d4d378a3517483deb1ebf61cf8 remotes/origin/upgrade-spotbugs-plugin~46", "commitMessage": "Handle WM in XaSinkProcessorBase (#2294)\n\n* Handle WM in XaSinkProcessorBase\r\n\r\nFixes #2292\r\n\r\n* Remove the default method", "commitDateTime": "2020-06-03 12:22:50", "authoredDateTime": "2020-06-03 12:22:50", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/Processor.java", "insertions": 3, "deletions": 8, "lines": 11}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/XaSinkProcessorBase.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartWithSnapshotTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/TestProcessors.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/metrics/JobMetrics_StressTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/init/VertexDef_HigherPrioritySourceTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Processor.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.tryProcessWatermark(com.hazelcast.jet.core.Watermark)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "XaSinkProcessorBase.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.XaSinkProcessorBase.tryProcessWatermark(com.hazelcast.jet.core.Watermark)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRestartWithSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobRestartWithSnapshotTest.FirstSnapshotProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestProcessors.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.NoOutputSourceP.init(com.hazelcast.jet.core.Outbox,com.hazelcast.jet.core.Context)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.NoOutputSourceP", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.NoOutputSourceP.init(com.hazelcast.jet.core.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobMetrics_StressTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.metrics.JobMetrics_StressTest.IncrementingProcessor.init(com.hazelcast.jet.core.Outbox,com.hazelcast.jet.core.metrics.Context)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.metrics.JobMetrics_StressTest.IncrementingProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.metrics.JobMetrics_StressTest.IncrementingProcessor.init(com.hazelcast.jet.core.metrics.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertexDef_HigherPrioritySourceTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef_HigherPrioritySourceTest.DummyProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Improve CDC wording", "body": "The document here states:\r\n\r\nhttps://jet-start.sh/docs/next/tutorials/cdc\r\n\r\n> As we've seen in the CDC section of our Sources and Sinks guide of our, change data capture is especially important to Jet, because it allows for the integration with legacy systems.\r\n\r\nCDC doesn't necessarily mean integration with legacy systems. Relational DB doesn't mean legacy. Also the sentence doesn't seem grammatically correct. The tutorial should also be self-contained offering a brief into to what CDC is. Further the link provided is broken. The legacy system wording is then repeated on the sources and sinks section and it should also be removed from there.\r\n\r\nThe title of this page:\r\n\r\nhttps://jet-start.sh/docs/next/operations/cdc-deployment\r\n\r\nshould be changed \"Change Data Capture\" from \"CDC Deployment\"", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2284", "user": "cangencer", "labels": ["defect", "docs"], "created": "2020-06-01 08:13:36", "closed": "2020-06-03 15:52:31", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Incompatible kafka version for kafka connector and cdc-debezium connector", "body": "When both `hazelcast-jet-kafka` and `hazelcast-jet-cdc-debezium` are on Jet server classpath then there can occur exception related to incompatible kafka version. It started to happen from this commit https://github.com/hazelcast/hazelcast-jet/commit/264469f070492b19b01da50be9cfd8ecfd78f94e\r\n\r\nI expect it is due to `org.apache.kafka:kafka-clients:jar:2.2.0:compile` in `hazelcast-jet-kafka` and `org.apache.kafka:kafka-clients:jar:2.3.1:compile` in `hazelcast-jet-cdc-debezium` (run `mvn dependency:tree` to see it).\r\n\r\nFor example following exception is thrown for our `StatefulMapTest` soak test (see steps for reproduce to see how to run it):\r\n```\r\ncom.hazelcast.jet.JetException: Exception in ProcessorTasklet{StatefulMapTest/writeKafka(StatefulMapTesttxStatefulMapTest)#0}: java.lang.RuntimeException: Incompatible KafkaProducer version\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:304) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_181]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_181]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_181]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_181]\r\n\tat java.lang.Thread.run(Thread.java:748) ~[?:1.8.0_181]\r\nCaused by: java.lang.RuntimeException: Incompatible KafkaProducer version\r\n\tat com.hazelcast.jet.kafka.impl.ResumeTransactionUtil.getValue(ResumeTransactionUtil.java:122) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.kafka.impl.ResumeTransactionUtil.getValue(ResumeTransactionUtil.java:113) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.kafka.impl.ResumeTransactionUtil.resumeTransaction(ResumeTransactionUtil.java:48) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.kafka.impl.WriteKafkaP.recoverTransaction(WriteKafkaP.java:184) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.kafka.impl.WriteKafkaP.lambda$init$89868699$1(WriteKafkaP.java:102) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.function.ConsumerEx.accept(ConsumerEx.java:46) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.processor.TransactionPoolSnapshotUtility.restoreFromSnapshot(TransactionPoolSnapshotUtility.java:241) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.processor.TwoPhaseSnapshotCommitUtility.restoreFromSnapshot(TwoPhaseSnapshotCommitUtility.java:178) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.kafka.impl.WriteKafkaP.restoreFromSnapshot(WriteKafkaP.java:171) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.impl.processor.ProcessorWrapper.restoreFromSnapshot(ProcessorWrapper.java:133) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.processInbox(ProcessorTasklet.java:412) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:289) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:284) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:266) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:240) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:293) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\t... 5 more\r\nCaused by: java.lang.NoSuchFieldException: nextSequence\r\n\tat java.lang.Class.getDeclaredField(Class.java:2070) ~[?:1.8.0_181]\r\n\tat com.hazelcast.jet.kafka.impl.ResumeTransactionUtil.getValue(ResumeTransactionUtil.java:118) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.kafka.impl.ResumeTransactionUtil.getValue(ResumeTransactionUtil.java:113) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.kafka.impl.ResumeTransactionUtil.resumeTransaction(ResumeTransactionUtil.java:48) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.kafka.impl.WriteKafkaP.recoverTransaction(WriteKafkaP.java:184) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.kafka.impl.WriteKafkaP.lambda$init$89868699$1(WriteKafkaP.java:102) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.function.ConsumerEx.accept(ConsumerEx.java:46) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.processor.TransactionPoolSnapshotUtility.restoreFromSnapshot(TransactionPoolSnapshotUtility.java:241) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.processor.TwoPhaseSnapshotCommitUtility.restoreFromSnapshot(TwoPhaseSnapshotCommitUtility.java:178) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.kafka.impl.WriteKafkaP.restoreFromSnapshot(WriteKafkaP.java:171) ~[hazelcast-jet-kafka-4.2-SNAPSHOT.jar:?]\r\n\tat com.hazelcast.jet.impl.processor.ProcessorWrapper.restoreFromSnapshot(ProcessorWrapper.java:133) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.processInbox(ProcessorTasklet.java:412) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:289) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:284) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:266) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:240) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:293) ~[hazelcast-jet-4.2-SNAPSHOT.jar:4.2-SNAPSHOT]\r\n\t... 5 more\r\n```\r\n\r\nSteps to reproduce:\r\n1) clone https://github.com/olukas/hazelcast-jet-ansible-tests/tree/kafka-version-reproducer and build it by `mvn clean install -DskipTests`\r\n2) prepare Jet - take latest Jet 4.2-SNAPSHOT version and copy `hazelcast-jet-kafka` and `hazelcast-jet-cdc-debezium` jars from `opt` to `lib` to have them both on classpath and start two Jet servers by `./jet-start`\r\n3) start kafka\r\n4) submit job by `./jet submit -v $PATH_TO_CLONED_SOAK_TESTS_REPO/stateful-map-test/target/stateful-map-test-4.2-SNAPSHOT.jar` - it starts a test which takes 3 minutes\r\n5) during test duration try to stop and start any of Jet servers, exception is thrown and job is failed. This does not happen it hazelcast-jet-cdc-debezium is removed from `lib` (when it is not on classpath)", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2279", "user": "olukas", "labels": ["defect"], "created": "2020-05-29 07:24:09", "closed": "2020-05-31 05:23:20", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "No suitable serializer when job-level serialization should happen", "body": "When job-level serializer is registered and job is distributed across nodes and serialization should really happen then `com.hazelcast.nio.serialization.HazelcastSerializationException` is thrown. \r\n\r\nThis does not happen if:\r\n- given serializer is registered globally\r\n- pipeline is running only on single node\r\n\r\nThrown exception (for mentioned below reproducer):\r\n```\r\ncom.hazelcast.nio.serialization.HazelcastSerializationException: Failed to serialize 'com.mycompany.simple.jet.app.Value'\r\n\tat com.hazelcast.internal.serialization.impl.SerializationUtil.handleSerializeException(SerializationUtil.java:115)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:173)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:149)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toData(AbstractSerializationService.java:134)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toData(AbstractSerializationService.java:122)\r\n\tat com.hazelcast.spi.impl.NodeEngineImpl.toData(NodeEngineImpl.java:334)\r\n\tat com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl.getPartitionId(InternalPartitionServiceImpl.java:950)\r\n\tat com.hazelcast.jet.core.Partitioner$Default.getPartition(Partitioner.java:122)\r\n\tat com.hazelcast.jet.core.Edge$KeyPartitioner.getPartition(Edge.java:603)\r\n\tat com.hazelcast.jet.impl.execution.OutboundCollector$Partitioned.offer(OutboundCollector.java:193)\r\n\tat com.hazelcast.jet.impl.execution.OutboxImpl.doOffer(OutboxImpl.java:251)\r\n\tat com.hazelcast.jet.impl.execution.OutboxImpl.offerInternal(OutboxImpl.java:139)\r\n\tat com.hazelcast.jet.impl.execution.OutboxImpl.offer(OutboxImpl.java:94)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryEmit(AbstractProcessor.java:309)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.emitFromTraverser(AbstractProcessor.java:408)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.emitFromTraverser(AbstractProcessor.java:421)\r\n\tat com.hazelcast.jet.impl.processor.GroupP.complete(GroupP.java:88)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.complete(ProcessorTasklet.java:465)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:365)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.runTasklet(TaskletExecutionService.java:366)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.forEach(CopyOnWriteArrayList.java:891)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:346)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.hazelcast.nio.serialization.HazelcastSerializationException: There is no suitable serializer for class com.mycompany.simple.jet.app.Value\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.serializerFor(AbstractSerializationService.java:507)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:162)\r\n\t... 22 more\r\n```\r\n\r\n**Steps to reproduce:**\r\nRun following code:\r\n```\r\nPipeline p = Pipeline.create();\r\np.readFrom(Sources.<String>list(\"text\"))\r\n        .flatMap(line -> traverseArray(line.toLowerCase().split(\"\\\\W+\")))\r\n        .map(t -> new Value(t))\r\n        .filter(word -> !word.getValue().isEmpty())\r\n        // if you comment out groupingKey+aggregate stage then it works (it will run on single node)\r\n        .groupingKey(wholeItem())\r\n        .aggregate(counting())\r\n        .writeTo(Sinks.list(\"list\"));\r\n\r\n\r\nJetConfig config = new JetConfig();\r\n// it works if you register serializer globally\r\n// config.getHazelcastConfig().getSerializationConfig()\r\n//         .addSerializerConfig(new SerializerConfig().setTypeClass(Value.class).setClass(ValueSerializer.class));\r\nJetInstance jet = Jet.newJetInstance(config);\r\nJetInstance jet2 = Jet.newJetInstance(config);\r\n\r\nList<String> text = jet.getList(\"text\");\r\ntext.add(\"hello world hello hello world\");\r\n\r\nJobConfig jc = new JobConfig();\r\njc.addClass(Main.class, Value.class, ValueSerializer.class);\r\njc.registerSerializer(Value.class, ValueSerializer.class);\r\njet.newJob(p, jc).join();\r\n```\r\nwhere `Value` class is:\r\n```\r\npublic class Value {\r\n\r\n    private String value;\r\n\r\n    public Value() {\r\n    }\r\n\r\n    public Value(String value) {\r\n        this.value = value;\r\n    }\r\n\r\n    public String getValue() {\r\n        return value;\r\n    }\r\n\r\n    public void setValue(String value) {\r\n        this.value = value;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object o) {\r\n        if (this == o) {\r\n            return true;\r\n        }\r\n        if (o == null || getClass() != o.getClass()) {\r\n            return false;\r\n        }\r\n        Value value1 = (Value) o;\r\n        return value == value1.value;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Objects.hash(value);\r\n    }\r\n}\r\n```\r\nand `ValueSerializer` is:\r\n```\r\npublic class ValueSerializer implements StreamSerializer<Value> {\r\n\r\n    @Override\r\n    public int getTypeId() {\r\n        return 1;\r\n    }\r\n\r\n    @Override\r\n    public void write(ObjectDataOutput output, Value value) throws IOException {\r\n        output.writeUTF(value.getValue());\r\n    }\r\n\r\n    @Override\r\n    public Value read(ObjectDataInput input) throws IOException {\r\n        return new Value(input.readUTF());\r\n    }\r\n}\r\n```\r\n\r\n**What you can also try with reproducer:**\r\n- comment out groupingKey+aggregate stage from pipeline - it will not fail (job is not distributed across cluster)\r\n- uncomment serialization config for members - it will not fail because it will register serializer globally\r\n- you can also comment out line `jc.registerSerializer(Value.class, ValueSerializer.class);` to see that it checks that serializer is added but it is not able to actually use it", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2188", "user": "olukas", "labels": ["defect"], "created": "2020-04-17 07:52:03", "closed": "2020-04-17 12:36:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Jet node configured programatically and Jet node configured by config file do not form cluster", "body": "In case when some nodes are configured programatically and some other nodes are configured by config file passed through system property then they will not form cluster together. 2 clusters are created - one for programatically configured nodes and one for nodes configured by config file.\r\n\r\nSimilar configuration works correctly with IMDG.\r\n\r\n**Reproducer**:\r\nFollowing can be used for programatically confugured nodes:\r\n```\r\nJetConfig config = new JetConfig();\r\nconfig.getHazelcastConfig().setClusterName(\"my-cluster\");\r\nJet.newJetInstance(config);\r\n```\r\nFollowing can be used for nodes configured by system property:\r\n```\r\nSystem.setProperty(\"hazelcast.config\", \"/home/user/hz-jet.yaml\");\r\nJet.newJetInstance();\r\n```\r\nwhere content of `/home/user/hz-jet.yaml` is:\r\n```\r\nhazelcast:\r\n    cluster-name: my-cluster\r\n```\r\nIf you start each of them twice you will see 2 clusters (with 2 nodes) with the same cluster name. I would expect they should form 1 cluster with 4 nodes.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2181", "user": "olukas", "labels": ["defect"], "created": "2020-04-16 10:19:53", "closed": "2020-04-16 11:03:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Adding a JDK class to JobConfig causes NPE", "body": "This code\r\n\r\n```java\r\npublic class JetTest {\r\n    public static void main(String[] args) {\r\n        Pipeline pipeline = Pipeline.create();\r\n\r\n        pipeline.readFrom(TestSources.items(1))\r\n                .writeTo(Sinks.logger());\r\n\r\n        JetInstance jetInstance = Jet.bootstrappedInstance();\r\n        JobConfig jobCfg = new JobConfig().addClass(Map.class);\r\n        jetInstance.newJobIfAbsent(pipeline, jobCfg);\r\n    }\r\n}\r\n```\r\nfails with an NPE due to `Map.class.getClassLoader()` returning null. If the classloader is null, we should raise a custom exception telling the user not to add JDK classes to the job.\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2107", "user": "mtopolnik", "labels": ["defect", "pipeline-api"], "created": "2020-03-29 12:46:36", "closed": "2020-03-30 09:22:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Client shouldn't try to destroy Observable on disconnection", "body": "Since the Jet job will itself create and re-create an Observable on access, there is no point in trying to destroy it when the client disconnects.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2059", "user": "mtopolnik", "labels": ["defect", "pipeline-api"], "created": "2020-03-12 13:14:54", "closed": "2020-04-16 12:46:48", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Actual exception swallowed with jet submit", "body": "I had an exception occur in the pipeline building code, but got a report like this:\r\n\r\n```\r\njet submit -v target/jet-job-1.0-SNAPSHOT-jar-with-dependencies.jar\r\nVerbose mode is on, setting logging level to INFO\r\nSubmitting JAR 'target/jet-job-1.0-SNAPSHOT-jar-with-dependencies.jar' with arguments []\r\n13:41:56.345 [ INFO] [c.h.i.c.AbstractConfigLocator] Loading configuration '/Users/mtopol/Desktop/data-engineering-talk/hazelcast-jet-4.0/config/hazelcast-client.yaml' from System property 'hazelcast.client.config'\r\n13:41:56.360 [ INFO] [c.h.i.c.AbstractConfigLocator] Using configuration file at /Users/mtopol/Desktop/data-engineering-talk/hazelcast-jet-4.0/config/hazelcast-client.yaml\r\n13:41:56.649 [ INFO] [c.h.c.i.s.ClientInvocationService] [4.0] Running with 2 response threads, dynamic=true\r\n13:41:56.699 [ INFO] [c.h.c.LifecycleService] [4.0] HazelcastClient 4.0 (20200204 - 8b959f5) is STARTING\r\n13:41:56.700 [ INFO] [c.h.c.LifecycleService] [4.0] HazelcastClient 4.0 (20200204 - 8b959f5) is STARTED\r\n13:41:56.740 [ INFO] [c.h.c.i.c.ClientConnectionManager] [4.0] Trying to connect to cluster: jet\r\n13:41:56.747 [ INFO] [c.h.c.i.c.ClientConnectionManager] [4.0] Trying to connect to [127.0.0.1]:5701\r\n13:41:56.779 [ INFO] [c.h.c.LifecycleService] [4.0] HazelcastClient 4.0 (20200204 - 8b959f5) is CLIENT_CONNECTED\r\n13:41:56.780 [ INFO] [c.h.c.i.c.ClientConnectionManager] [4.0] Authenticated with server [127.0.0.1]:5701:1a8b3822-b4e5-4e4f-8658-9daef454016c, server version: 4.0, local address: /127.0.0.1:61913\r\n13:41:56.783 [ INFO] [c.h.i.d.Diagnostics] [4.0] Diagnostics disabled. To enable add -Dhazelcast.diagnostics.enabled=true to the JVM arguments.\r\n13:41:56.787 [ INFO] [c.h.c.i.s.ClientClusterService] [4.0]\r\nMembers [1] {\r\n\tMember [127.0.0.1]:5701 - 1a8b3822-b4e5-4e4f-8658-9daef454016c\r\n}\r\n13:41:56.886 [ INFO] [c.h.c.i.s.ClientStatisticsService] Client statistics is enabled with period 5 seconds.\r\n13:41:56.931 [ INFO] [c.h.c.LifecycleService] [4.0] HazelcastClient 4.0 (20200204 - 8b959f5) is SHUTTING_DOWN\r\n13:41:56.956 [ INFO] [c.h.c.i.c.ClientConnectionManager] [4.0] Removed connection to endpoint: [127.0.0.1]:5701:1a8b3822-b4e5-4e4f-8658-9daef454016c, connection: ClientConnection{alive=false, connectionId=1, channel=NioChannel{/127.0.0.1:61913->/127.0.0.1:5701}, remoteEndpoint=[127.0.0.1]:5701, lastReadTime=2020-03-12 13:41:56.937, lastWriteTime=2020-03-12 13:41:56.937, closedTime=2020-03-12 13:41:56.932, connected server version=4.0}\r\n13:41:56.957 [ INFO] [c.h.c.LifecycleService] [4.0] HazelcastClient 4.0 (20200204 - 8b959f5) is CLIENT_DISCONNECTED\r\n13:41:56.961 [ INFO] [c.h.c.LifecycleService] [4.0] HazelcastClient 4.0 (20200204 - 8b959f5) is SHUTDOWN\r\ncom.hazelcast.jet.picocli.CommandLine$ExecutionException: Error while calling command (public void com.hazelcast.jet.server.JetCommandLine.submit(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String,java.lang.String,java.lang.String,java.io.File,java.util.List) throws java.lang.Exception): com.hazelcast.client.HazelcastClientNotActiveException: Client is shutting down\r\n\tat com.hazelcast.jet.picocli.CommandLine.execute(CommandLine.java:1207)\r\n\tat com.hazelcast.jet.picocli.CommandLine.access$800(CommandLine.java:141)\r\n\tat com.hazelcast.jet.picocli.CommandLine$RunAll.handle(CommandLine.java:1416)\r\n\tat com.hazelcast.jet.picocli.CommandLine$RunAll.handle(CommandLine.java:1376)\r\n\tat com.hazelcast.jet.picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1243)\r\n\tat com.hazelcast.jet.picocli.CommandLine.parseWithHandlers(CommandLine.java:1526)\r\n\tat com.hazelcast.jet.server.JetCommandLine.runCommandLine(JetCommandLine.java:157)\r\n\tat com.hazelcast.jet.server.JetCommandLine.main(JetCommandLine.java:134)\r\nCaused by: com.hazelcast.client.HazelcastClientNotActiveException: Client is shutting down\r\n\tat com.hazelcast.client.impl.spi.impl.ClientInvocation.notifyException(ClientInvocation.java:236)\r\n\tat com.hazelcast.client.impl.spi.impl.ClientInvocation.invokeOnSelection(ClientInvocation.java:173)\r\n\tat com.hazelcast.client.impl.spi.impl.ClientInvocation.invoke(ClientInvocation.java:139)\r\n\tat com.hazelcast.client.impl.spi.ProxyManager.initialize(ProxyManager.java:332)\r\n\tat com.hazelcast.client.impl.spi.ProxyManager.getOrCreateProxyInternal(ProxyManager.java:255)\r\n\tat com.hazelcast.client.impl.spi.ProxyManager.getOrCreateProxy(ProxyManager.java:224)\r\n\tat com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl.getDistributedObject(HazelcastClientInstanceImpl.java:683)\r\n\tat com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl.getDistributedObject(HazelcastClientInstanceImpl.java:677)\r\n\tat com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl.getRingbuffer(HazelcastClientInstanceImpl.java:513)\r\n\tat com.hazelcast.jet.impl.observer.ObservableImpl.destroy(ObservableImpl.java:140)\r\n\tat java.base/java.util.concurrent.ConcurrentHashMap$ValuesView.forEach(ConcurrentHashMap.java:4772)\r\n\tat com.hazelcast.jet.impl.AbstractJetInstance.shutdown(AbstractJetInstance.java:173)\r\n\tat com.hazelcast.jet.impl.JetBootstrap$InstanceProxy.shutdown(JetBootstrap.java:320)\r\n\tat com.hazelcast.jet.impl.JetBootstrap.executeJar(JetBootstrap.java:129)\r\n\tat com.hazelcast.jet.server.JetCommandLine.submit(JetCommandLine.java:209)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat com.hazelcast.jet.picocli.CommandLine.execute(CommandLine.java:1189)\r\n\t... 7 more\r\nCaused by: java.io.IOException: No connection found to cluster.\r\n\tat com.hazelcast.client.impl.connection.nio.ClientConnectionManagerImpl.checkInvocationAllowed(ClientConnectionManagerImpl.java:487)\r\n\tat com.hazelcast.client.impl.spi.impl.AbstractClientInvocationService.checkInvocationAllowed(AbstractClientInvocationService.java:194)\r\n\tat com.hazelcast.client.impl.spi.impl.ClientInvocation.invokeOnSelection(ClientInvocation.java:161)\r\n\t... 25 more\r\n```\r\n\r\nSummary: it connected and then abruptly, with no apparent cause, disconnected and reported \"No connection found to cluster.\"\r\n\r\nThe actual error was a `NoClassDefFoundError` due to a missing runtime dependency `hazelcast-jet-python-4.0.jar`.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2058", "user": "mtopolnik", "labels": ["cli", "defect"], "created": "2020-03-12 13:13:56", "closed": "2020-04-17 14:22:08", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "Python generated classes should be under impl package", "body": "Currently they're under `com.hazelcast.jet.python.grpc` which is not marked as `impl`", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2053", "user": "cangencer", "labels": ["defect", "python"], "created": "2020-03-10 13:30:37", "closed": "2020-04-15 08:14:53", "commits": {}, "ttf": 35.000277777777775, "commitsDetails": []}, {"title": "Prioritization yaml over xml", "body": "we prioritize yaml over xml for system property but not for workDir/classpath \r\n\r\nexcerpt from `ConfigProvider`\r\n\r\n```\r\n        if (yamlConfigLocator.locateFromSystemProperty()) {\r\n            // 1. Try loading YAML config if provided in system property\r\n            config = new YamlJetConfigBuilder(yamlConfigLocator).setProperties(properties).build();\r\n\r\n        } else if (xmlConfigLocator.locateFromSystemProperty()) {\r\n            // 2. Try loading XML config if provided in system property\r\n            config = new XmlJetConfigBuilder(xmlConfigLocator).setProperties(properties).build();\r\n\r\n        } else if (xmlConfigLocator.locateInWorkDirOrOnClasspath()) {\r\n            // 3. Try loading XML config from the working directory or from the classpath\r\n            config = new XmlJetConfigBuilder(xmlConfigLocator).setProperties(properties).build();\r\n\r\n        } else if (yamlConfigLocator.locateInWorkDirOrOnClasspath()) {\r\n            // 4. Try loading YAML config from the working directory or from the classpath\r\n            config = new YamlJetConfigBuilder(yamlConfigLocator).setProperties(properties).build();\r\n\r\n        } else {\r\n            // 5. Loading the default XML configuration file\r\n            xmlConfigLocator.locateDefault();\r\n            config = new XmlJetConfigBuilder(xmlConfigLocator).setProperties(properties).build();\r\n        }\r\n        return config;\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/2032", "user": "gurbuzali", "labels": ["configuration", "defect"], "created": "2020-03-01 17:11:59", "closed": "2020-03-10 07:14:02", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Job did not finish on cluster with more than 2 members if Python code failed", "body": "In case when python code fails in pipeline then job did not finish on cluster with 2 and more members. It works on single node cluster. \r\n\r\nJob is restarted every ~2minutes and 13seconds and following Exception can be seen in server log:\r\n```\r\nERROR [c.h.j.i.o.StartExecutionOperation] [hz.loving_sutherland.jet.cooperative.thread-2] - [10.212.134.151]:5702 [jet] [4.0-SNAPSHOT] Exception during callback\r\ncom.hazelcast.nio.serialization.HazelcastSerializationException: Failed to serialize 'com.hazelcast.spi.impl.operationservice.impl.responses.ErrorResponse'\r\n\tat com.hazelcast.internal.serialization.impl.SerializationUtil.handleSerializeException(SerializationUtil.java:115)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:157)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:133)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:124)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OutboundResponseHandler.send(OutboundResponseHandler.java:114)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OutboundResponseHandler.sendResponse(OutboundResponseHandler.java:94)\r\n\tat com.hazelcast.spi.impl.operationservice.Operation.sendResponse(Operation.java:470)\r\n\tat com.hazelcast.jet.impl.operation.AsyncOperation.doSendResponse(AsyncOperation.java:76)\r\n\tat com.hazelcast.jet.impl.operation.AsyncOperation.lambda$run$0(AsyncOperation.java:56)\r\n\tat com.hazelcast.jet.impl.util.ExceptionUtil.lambda$withTryCatch$0(ExceptionUtil.java:180)\r\n\tat java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:760)\r\n\tat java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:736)\r\n\tat java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n\tat java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:1977)\r\n\tat com.hazelcast.jet.impl.util.NonCompletableFuture.internalCompleteExceptionally(NonCompletableFuture.java:59)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$ExecutionTracker.taskletDone(TaskletExecutionService.java:458)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.dismissTasklet(TaskletExecutionService.java:392)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.runTasklet(TaskletExecutionService.java:378)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.forEach(CopyOnWriteArrayList.java:891)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:346)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.hazelcast.nio.serialization.HazelcastSerializationException: Failed to serialize 'com.hazelcast.jet.JetException'\r\n\tat com.hazelcast.internal.serialization.impl.SerializationUtil.handleSerializeException(SerializationUtil.java:115)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.writeObject(AbstractSerializationService.java:253)\r\n\tat com.hazelcast.internal.serialization.impl.ByteArrayObjectDataOutput.writeObject(ByteArrayObjectDataOutput.java:378)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.responses.ErrorResponse.writeData(ErrorResponse.java:49)\r\n\tat com.hazelcast.internal.serialization.impl.DataSerializableSerializer.write(DataSerializableSerializer.java:244)\r\n\tat com.hazelcast.internal.serialization.impl.DataSerializableSerializer.write(DataSerializableSerializer.java:51)\r\n\tat com.hazelcast.internal.serialization.impl.StreamSerializerAdapter.write(StreamSerializerAdapter.java:43)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:154)\r\n\t... 19 more\r\nCaused by: java.io.NotSerializableException: io.grpc.Status\r\n\tat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\r\n\tat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\r\n\tat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\r\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\r\n\tat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\r\n\tat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\r\n\tat java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:441)\r\n\tat java.lang.Throwable.writeObject(Throwable.java:985)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)\r\n\tat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\r\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\r\n\tat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\r\n\tat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\r\n\tat java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:441)\r\n\tat java.lang.Throwable.writeObject(Throwable.java:985)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)\r\n\tat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\r\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\r\n\tat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\r\n\tat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\r\n\tat java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:441)\r\n\tat java.lang.Throwable.writeObject(Throwable.java:985)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)\r\n\tat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\r\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\r\n\tat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\r\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\r\n\tat com.hazelcast.internal.serialization.impl.JavaDefaultSerializers$JavaSerializer.write(JavaDefaultSerializers.java:115)\r\n\tat com.hazelcast.internal.serialization.impl.JavaDefaultSerializers$JavaSerializer.write(JavaDefaultSerializers.java:108)\r\n\tat com.hazelcast.internal.serialization.impl.StreamSerializerAdapter.write(StreamSerializerAdapter.java:43)\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.writeObject(AbstractSerializationService.java:251)\r\n\t... 25 more\r\n``` \r\n\r\nHow to reproduce:\r\nUse following python script named `failing.py`:\r\n```\r\ndef handle(input_list):\r\n    assert 1 == 2\r\n    return ['echo-%s' % i for i in input_list]\r\n```\r\nUse follwing pipeline:\r\n```\r\n        PythonServiceConfig cfg = new PythonServiceConfig()\r\n                .setBaseDir(PATH_TO_BASE_DIR)\r\n                .setHandlerModule(\"failing\")\r\n                .setHandlerFunction(\"handle\");\r\n        Pipeline p = Pipeline.create();\r\n        p.readFrom(TestSources.items(\"1\"))\r\n                .apply(mapUsingPythonBatch(cfg)).setLocalParallelism(2)\r\n                .writeTo(Sinks.logger());\r\n        jet.newJob(p).join();\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1995", "user": "olukas", "labels": ["defect", "python"], "created": "2020-02-19 14:23:26", "closed": "2020-02-21 07:25:41", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Failure in init.sh/cleanup.sh for Python mapping is ignored", "body": "In case when `init.sh`/`cleanup.sh` script for Python mapping finished with error we should fail-fast - job should finish with failure.\r\n\r\nIn current behavior it seems that any error is ignored and job is started even if bash script failed. It does not work for cases when script is failed expectedly by `exit 1` or even if there is syntax error in script.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1987", "user": "olukas", "labels": ["defect", "python"], "created": "2020-02-18 12:20:59", "closed": "2020-02-19 09:46:09", "commits": {"9e1981b95d022ce328e0356f6d9f9c9dde5b626e": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9e1981b95d022ce328e0356f6d9f9c9dde5b626e", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["bfc1897bb0341df7d7685668efc858dc336a9e96"], "nameRev": "9e1981b95d022ce328e0356f6d9f9c9dde5b626e tags/v4.0~13", "commitMessage": "Check init script return code (#1988)\n\nJob should fail when init fails, and cleanup should be called regardless.\r\n\r\nFixes #1987\r\n", "commitDateTime": "2020-02-19 10:46:08", "authoredDateTime": "2020-02-19 10:46:08", "commitGitStats": [{"filePath": "extensions/python/src/main/java/com/hazelcast/jet/python/PythonServiceContext.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "extensions/python/src/main/resources/jet_to_python_init.sh", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PythonServiceContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.python.PythonServiceContext", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.python.PythonServiceContext.destroy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "When originally first Jet instance dies, client can no longer connect to the cluster", "body": "1. Start Jet with `bin/jet-star`\r\n2. Start it again, they form a cluster\r\n3. Kill the first Jet\r\n\r\nNow using `jet submit` the client can no longer connect to the remaining 2nd Jet instance.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1984", "user": "mtopolnik", "labels": ["cli", "defect"], "created": "2020-02-17 12:12:56", "closed": "2020-02-17 15:03:36", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "More Jet nodes started in daemon mode overwrite the same output file", "body": "In case when more Jet nodes are started by `jet-start` in daemon mode then they overwrite the same log file. It means log is available only for one of those nodes.\r\n\r\nWe should allow to configure different name of log file for each node. It is currently impossible since `$JET_LOG` is rewritten even if it is configured outside of script.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1964", "user": "olukas", "labels": ["defect"], "created": "2020-02-11 14:37:23", "closed": "2020-02-12 12:57:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "JET_LICENSE_KEY does not work for jet-start", "body": "License key for Jet should be able to be configured by `export JET_LICENSE_KEY=JET_ENTERPRISE#<the_rest_of_your_key>` which is impossible now because of issue in https://github.com/hazelcast/hazelcast-jet/blob/b524a7c868b4180dbae1ce9c38229dd774c1c30e/hazelcast-jet-distribution/src/bin-filemode-755/jet-start#L16. Currently it rewrites `JAVA_OPTS_ARRAY` instead of adjusting it. \r\n\r\nHowever fix is not straight-forward since license should not be printed to server log.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1963", "user": "olukas", "labels": ["critical", "defect"], "created": "2020-02-11 14:06:21", "closed": "2020-02-12 09:00:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Error message is not descriptive enough when submitting an invalid class", "body": "When verbose option is not used the error message is confusing. We should also print the name of the class that's going to be executed.\r\n```\r\n$ bin/jet submit -c invalidclass ~/src/hazelcast-jet-hello/build/libs/hazelcast-jet-hello.jar \r\nSubmitting JAR '/Users/can/src/hazelcast-jet-hello/build/libs/hazelcast-jet-hello.jar' with arguments []\r\nERROR: invalidclass\r\n```\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1951", "user": "cangencer", "labels": ["cli", "defect"], "created": "2020-02-10 09:59:47", "closed": "2020-02-11 12:15:20", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Files sink with exactly-once is not able to work with more nodes on one machine", "body": "When exactly-once is configured for job which runs pipeline with `files` sink and is running on 2 or more members on the same machine then following Excaption is thrown after first snapshot:\r\n```\r\nWARNING: [192.168.0.102]:5701 [jet] [4.0-SNAPSHOT] Exception in ProcessorTasklet{filesSink(/tmp/filesink)#0}\r\njava.nio.file.NoSuchFileException: /tmp/filesink/0-0.tmp -> /tmp/filesink/0-0\r\n\tat sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\r\n\tat sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:396)\r\n\tat sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:262)\r\n\tat java.nio.file.Files.move(Files.java:1395)\r\n\tat com.hazelcast.jet.impl.connector.WriteFileP$FileWithTransaction.commit(WriteFileP.java:365)\r\n\tat com.hazelcast.jet.impl.processor.TwoPhaseSnapshotCommitUtility$LoggingNonThrowingResource.commit(TwoPhaseSnapshotCommitUtility.java:406)\r\n\tat com.hazelcast.jet.impl.processor.UnboundedTransactionsProcessorUtility.commitPendingTransactions(UnboundedTransactionsProcessorUtility.java:173)\r\n\tat com.hazelcast.jet.impl.processor.UnboundedTransactionsProcessorUtility.snapshotCommitFinish(UnboundedTransactionsProcessorUtility.java:166)\r\n\tat com.hazelcast.jet.impl.connector.WriteFileP.snapshotCommitFinish(WriteFileP.java:182)\r\n\tat com.hazelcast.jet.impl.processor.ProcessorWrapper.snapshotCommitFinish(ProcessorWrapper.java:128)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:335)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.runTasklet(TaskletExecutionService.java:366)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.forEach(CopyOnWriteArrayList.java:891)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:346)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\nOnly file `1-0` is created in `/tmp/filesink` and this file includes items emitted only by one of sink processors. Also before snapshot should be created only file `1-0.tmp` occurs in `/tmp/filesink`\r\n\r\nThis does not happen in exactly once is disabled.\r\n\r\n**How to reproduce:**\r\nRun job with pipeline like this on cluster with 2 members on the same machine (e.g. locally):\r\n```\r\nPipeline p = Pipeline.create();\r\nStreamSource<Long> source = SourceBuilder\r\n        .stream(\"srcForFileSink\", procCtx -> new long[1])\r\n        .<Long>fillBufferFn((ctx, buf) -> {\r\n            buf.add(ctx[0]++);\r\n            Thread.sleep(100);\r\n        })\r\n        .createSnapshotFn(ctx -> ctx[0])\r\n        .restoreSnapshotFn((ctx, state) -> ctx[0] = state.get(0))\r\n        .build();\r\nSink<Object> sink = Sinks.files(\"/tmp/filesink\");\r\np.readFrom(source)\r\n        .withoutTimestamps()\r\n        .groupingKey(identity())\r\n        .filterUsingService(sharedService(ctx -> null), (s, k, v) -> true)\r\n        .writeTo(sink);\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1935", "user": "olukas", "labels": ["defect"], "created": "2020-02-06 13:58:58", "closed": "2020-02-07 16:48:25", "commits": {"f255dfad5c820ad5b8d2374dfe968aa4d70af5e6": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "f255dfad5c820ad5b8d2374dfe968aa4d70af5e6", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["b82664fab26ba70e09f4f0f6b4d6703da85ed6c0"], "nameRev": "f255dfad5c820ad5b8d2374dfe968aa4d70af5e6 tags/v4.0~42", "commitMessage": "Fix File sink with lp>1 or shared dir (#1937)\n\nFixes #1935\r\n\r\nIn the original state all processors tried to delete all .tmp files in the\r\ndirectory. However when P1 got to do it, P2 might already started creating\r\nfiles which caused that P1 deleted working files of P2. On Windows, the delete\r\nfailed, on Linux the processor failed later when it was trying to commit the\r\nfile.\r\n", "commitDateTime": "2020-02-07 17:48:24", "authoredDateTime": "2020-02-07 17:48:24", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/processor/SinkProcessors.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteFileP.java", "insertions": 38, "deletions": 7, "lines": 45}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/TwoPhaseSnapshotCommitUtility.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/FileSinkBuilder.java", "insertions": 28, "deletions": 5, "lines": 33}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/FileSourceBuilder.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/WriteFilePTest.java", "insertions": 23, "deletions": 16, "lines": 39}, {"filePath": "reference-manual/src/main/java/StockExchangeCoreApi.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "reference-manual/src/main/java/expertzone/BestPractices.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SinkProcessors.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.processor.SinkProcessors.writeFileP(java.lang.String,java.nio.charset.Charset,java.lang.String,java.lang.Long,boolean,com.hazelcast.function.FunctionEx)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "WriteFileP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFileP", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFileP.metaSupplier(java.lang.String,com.hazelcast.function.FunctionEx,java.lang.String,java.lang.String,java.lang.Long,boolean)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFileP.metaSupplier(java.lang.String,com.hazelcast.function.FunctionEx,java.lang.String,java.lang.String,java.lang.Long,boolean,java.util.function.LongSupplier)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFileP.abortUnfinishedTransactions()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFileP.process(int,com.hazelcast.jet.core.Inbox)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFileP.newFileName()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TwoPhaseSnapshotCommitUtility.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.TwoPhaseSnapshotCommitUtility.usesTransactionLifecycle()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileSinkBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.FileSinkBuilder", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.FileSinkBuilder.rollByFileSize(java.lang.Long)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.pipeline.FileSinkBuilder.toStringFn(com.hazelcast.function.FunctionEx)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.FileSinkBuilder.charset(java.nio.charset.Charset)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.FileSinkBuilder.rollByDate(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.FileSinkBuilder.rollByFileSize(long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.FileSinkBuilder.exactlyOnce(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.FileSinkBuilder.build()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileSourceBuilder.java", "spoonMethods": []}, {"spoonFilePath": "WriteFilePTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.rangeIterable(int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.checkFileContents(int,int,boolean,boolean)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.when_slowSource_then_fileFlushedAfterEachItem()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.test_rollByDate()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.stressTest_snapshots_noRestarts()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.stressTest(boolean,boolean)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.checkFileContents(int,int,boolean,boolean,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.smokeTest_smallFile()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.smokeTest_bigFile()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.when_append_then_previousContentsOfFileIsKept()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.when_toStringF_then_used()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.stressTest_noSnapshot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteFilePTest.test_rollByFileSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StockExchangeCoreApi.java", "spoonMethods": [{"spoonMethodName": "StockExchangeCoreApi.buildDag()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BestPractices.java", "spoonMethods": [{"spoonMethodName": "expertzone.BestPractices.s3()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "mapUsingServiceAsyncBatched javadoc issues", "body": "Javadoc of `mapUsingServiceAsyncBatched` has the example from non-batched version.\r\nThe documentation of `maxBatchSize` parameter is also missing.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1911", "user": "cangencer", "labels": ["defect", "javadoc"], "created": "2020-01-31 08:27:05", "closed": "2020-01-31 09:47:23", "commits": {"c2c3788f873a9d52c62a5e6a843c0e4b9595637b": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c2c3788f873a9d52c62a5e6a843c0e4b9595637b", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["bf6742dc599689377956bad0561ea706eddfaa3d"], "nameRev": "c2c3788f873a9d52c62a5e6a843c0e4b9595637b tags/v4.0~65", "commitMessage": "Fix the javadoc sample for mapUsingServiceAsyncBatched and add maxBatchSize parameter too (#1912)\n\nFixes #1911", "commitDateTime": "2020-01-31 10:47:22", "authoredDateTime": "2020-01-31 12:47:22", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/GeneralStage.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GeneralStage.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Remove checked exceptions from JobConfig", "body": "Python PR added more fail-fast checking of files to be attached to the job. It decided to use the checked `FileNotFoundException`, but instead we could use an unchecked `JetException`. Introducing checked exceptions is also a breaking change.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1896", "user": "mtopolnik", "labels": ["core", "defect"], "created": "2020-01-30 09:24:44", "closed": "2020-01-30 13:33:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ProcessorSupplier.Context.attachedFile() throws NPE for invalid ID", "body": "It should throw an informative exception instead.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1895", "user": "mtopolnik", "labels": ["core", "defect"], "created": "2020-01-30 09:23:16", "closed": "2020-01-30 13:40:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Python service fails to delete the runtime directory", "body": "\r\n\r\nstack-trace:\r\n```\r\ncom.hazelcast.core.HazelcastException: Failed to delete /var/folders/y7/kljm0_sd5j1bbfmc2p5gxmp80000gn/T/jet-objective_bohr-03d1-a89b-61c0-0001-_java_workspace_test_python1378860225143924489\r\n\tat com.hazelcast.internal.nio.IOUtil.delete(IOUtil.java:460)\r\n\tat com.hazelcast.jet.python.PythonServiceContext.destroy(PythonServiceContext.java:118)\r\n\tat com.hazelcast.function.ConsumerEx.accept(ConsumerEx.java:46)\r\n\tat com.hazelcast.jet.impl.processor.ProcessorSupplierWithService.close(ProcessorSupplierWithService.java:71)\r\n\tat com.hazelcast.jet.impl.execution.ExecutionContext.completeExecution(ExecutionContext.java:196)\r\n\tat com.hazelcast.jet.impl.JobExecutionService.lambda$completeExecution$f4fa789d$1(JobExecutionService.java:346)\r\n\tat com.hazelcast.jet.function.RunnableEx.run(RunnableEx.java:30)\r\n\tat com.hazelcast.jet.impl.util.Util.doWithClassLoader(Util.java:408)\r\n\tat com.hazelcast.jet.impl.JobExecutionService.completeExecution(JobExecutionService.java:345)\r\n\tat com.hazelcast.jet.impl.operation.CompleteExecutionOperation.run(CompleteExecutionOperation.java:89)\r\n\tat com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:184)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:228)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:217)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:405)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:432)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:590)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:575)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:534)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:236)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\r\n\tat com.hazelcast.jet.impl.MasterContext.invokeOnParticipant(MasterContext.java:261)\r\n\tat com.hazelcast.jet.impl.MasterContext.invokeOnParticipants(MasterContext.java:245)\r\n\tat com.hazelcast.jet.impl.MasterJobContext.lambda$invokeCompleteExecution$12(MasterJobContext.java:576)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.lambda$submitToCoordinatorThread$42(JobCoordinationService.java:978)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.lambda$submitToCoordinatorThread$43(JobCoordinationService.java:997)\r\n\tat com.hazelcast.internal.util.executor.CompletableFutureTask.run(CompletableFutureTask.java:64)\r\n\tat com.hazelcast.internal.util.executor.CachedExecutorServiceDelegate$Worker.run(CachedExecutorServiceDelegate.java:217)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.internal.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\nCaused by: java.nio.file.AccessDeniedException: /var/folders/y7/kljm0_sd5j1bbfmc2p5gxmp80000gn/T/jet-objective_bohr-03d1-a89b-61c0-0001-_java_workspace_test_python1378860225143924489/jet_to_python_grpc_server.py\r\n\tat sun.nio.fs.UnixException.translateToIOException(UnixException.java:84)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)\r\n\tat sun.nio.fs.UnixFileSystemProvider.implDelete(UnixFileSystemProvider.java:244)\r\n\tat sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:103)\r\n\tat java.nio.file.Files.delete(Files.java:1126)\r\n\tat com.hazelcast.internal.nio.IOUtil$3.visitFile(IOUtil.java:449)\r\n\tat com.hazelcast.internal.nio.IOUtil$3.visitFile(IOUtil.java:446)\r\n\tat java.nio.file.Files.walkFileTree(Files.java:2670)\r\n\tat java.nio.file.Files.walkFileTree(Files.java:2742)\r\n\tat com.hazelcast.internal.nio.IOUtil.delete(IOUtil.java:446)\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1894", "user": "gurbuzali", "labels": ["defect", "python"], "created": "2020-01-30 08:56:54", "closed": "2020-01-30 13:40:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.nio.file.FileAlreadyExistsException when unzipping a directory with nested directories", "body": "```\r\nCaused by: java.nio.file.FileAlreadyExistsException: /var/folders/7x/p5jb54yj5sx_8b748d8kn3780000gn/T/jet-festive_lehmann-03b6-aa37-8c40-0001-data7827145962632219873/model\r\n\tat sun.nio.fs.UnixException.translateToIOException(UnixException.java:88)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)\r\n\tat sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)\r\n\tat sun.nio.fs.UnixFileSystemProvider.createDirectory(UnixFileSystemProvider.java:384)\r\n\tat java.nio.file.Files.createDirectory(Files.java:674)\r\n\tat java.nio.file.Files.createAndCheckIsDirectory(Files.java:781)\r\n\tat java.nio.file.Files.createDirectories(Files.java:727)\r\n\tat com.hazelcast.jet.impl.util.IOUtil.unzip(IOUtil.java:123)\r\n\tat com.hazelcast.jet.impl.execution.init.Contexts$ProcSupplierCtx.extractFileToDisk(Contexts.java:189)\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1845", "user": "eminn", "labels": ["core", "defect"], "created": "2020-01-09 11:07:51", "closed": "2020-01-09 18:10:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "hello-world example does not print anything if submitted through CLI", "body": "In case when `hello-world` example jar from https://github.com/hazelcast/hazelcast-jet/tree/master/examples/hello-world is submitted through jet CLI then expected result is not printed. It seems it is caused by missing log4j properties.\r\n\r\nWe should provide and documented simple way how to run execute this code sample properly in https://github.com/hazelcast/hazelcast-jet/blob/d03eb34092aa7c66c47647967c24d42e72c66901/examples/hello-world/src/main/java/com/hazelcast/jet/examples/helloworld/HelloWorld.java#L38.\r\n\r\nCurrent output is following:\r\n```\r\nlog4j:WARN No appenders could be found for logger (com.hazelcast.jet.examples.helloworld.HelloWorld).\r\nlog4j:WARN Please initialize the log4j system properly.\r\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\r\n```\r\n\r\nIt seems to be related to removing log4j from `jet` CLI in https://github.com/hazelcast/hazelcast-jet/commit/9051ec1ffb55d6504325d6945364397591fe3c0e", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1837", "user": "olukas", "labels": ["code-samples", "defect"], "created": "2020-01-06 16:17:21", "closed": "2020-01-07 14:19:53", "commits": {"14f87b7f4616dbb52fd464741b97d18b61b7e3de": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "14f87b7f4616dbb52fd464741b97d18b61b7e3de", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["d03eb34092aa7c66c47647967c24d42e72c66901"], "nameRev": "14f87b7f4616dbb52fd464741b97d18b61b7e3de tags/v4.0~128", "commitMessage": "Do not use log4j for HelloWorld example (#1838)\n\nWhen using jet submit command, log4j's classloader is different than the\r\none used for the main class. For finding the log4j.properties log4j is\r\nsupposed to look at TCCL, which we are able to set, but in JDK9+ log4j \r\nbecause of buggy parsing logic thinks it's running in Java 1.1 instead \r\nand doesn't try to use TCCL (which was added in JDK 1.2)\r\n\r\nFixes #1837", "commitDateTime": "2020-01-07 15:19:52", "authoredDateTime": "2020-01-07 15:19:52", "commitGitStats": [{"filePath": "examples/hello-world/src/main/java/com/hazelcast/jet/examples/helloworld/HelloWorld.java", "insertions": 4, "deletions": 7, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HelloWorld.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.examples.helloworld.HelloWorld.main(java.lang.String[])", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.examples.helloworld.HelloWorld", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Spring Boot Hazelcast AutoConfiguration conflicts with Jet", "body": "Spring Boot automatically creates a Hazelcast instance when either `Config` bean exist or when it finds a [configuration file](https://github.com/spring-projects/spring-boot/blob/a66c4d3096877b33119366ea9ea165c892b462c8/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastServerConfiguration.java#L78-L79). \r\n\r\nThis makes Hazelcast Jet hard to use in the Spring Boot container: Spring will try to create a new IMDG instance when it detects hazelcast.xml (or any other config file), but you probably want to start Jet instance. \r\n\r\nIt's actually even worst when you explicitly create a new Jet instance then it will try to create join with the IMDG instance created by Spring and this will fail with:\r\n```\r\ncom.hazelcast.core.HazelcastException: Service with name 'hz:impl:jetService' not found!\r\n\tat com.hazelcast.spi.impl.NodeEngineImpl.getService(NodeEngineImpl.java:367) ~[hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.spi.Operation.getService(Operation.java:395) ~[hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.jet.impl.operation.GetClusterMetadataOperation.run(GetClusterMetadataOperation.java:41) ~[hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.spi.Operation.call(Operation.java:170) ~[hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:210) [hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:199) [hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:416) [hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:153) [hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:123) [hazelcast-jet-3.2.1.jar:3.2.1]\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:110) [hazelcast-jet-3.2.1.jar:3.2.1]\r\nCaused by: com.hazelcast.spi.exception.ServiceNotFoundException: Service with name 'hz:impl:jetService' not found!\r\n\t... 10 common frames omitted\r\n```\r\n\r\nThe right solution is probably changing Spring Boot autoconfig to not create IMDG instances when Jet classes are detected. This is a good [entry point](https://github.com/spring-projects/spring-boot/blob/36c1c051b8106371d37f8a747cea0e369a8e5c84/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/hazelcast/HazelcastAutoConfiguration.java#L40) I know @leszko did some changes in Spring Boot in the past. ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1835", "user": "jerrinot", "labels": ["defect", "spring"], "created": "2019-12-28 21:42:43", "closed": "2020-04-14 08:37:15", "commits": {}, "ttf": 107.00027777777778, "commitsDetails": []}, {"title": "CLI too verbose", "body": "I am on `1a0ebecb4b` and CLI prints very verbose connection related logs.\r\n```\r\n15:41 $ ./jet list-jobs\r\n2019-12-16 15:41:19,476  INFO [AbstractConfigLocator] [main] - Loading configuration '/home/jara/devel/oss/hazelcast-jet/hazelcast-jet-distribution/target/unzipped/hazelcast-jet-4.0-SNAPSHOT/config/hazelcast-client.yaml' from System property 'hazelcast.client.config'\r\n2019-12-16 15:41:19,476  INFO [AbstractConfigLocator] [main] - Using configuration file at /home/jara/devel/oss/hazelcast-jet/hazelcast-jet-distribution/target/unzipped/hazelcast-jet-4.0-SNAPSHOT/config/hazelcast-client.yaml\r\n2019-12-16 15:41:19,686  INFO [ClientInvocationService] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] Running with 2 response threads, dynamic=true\r\n2019-12-16 15:41:19,722  INFO [LifecycleService] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] HazelcastClient 4.0-SNAPSHOT (20191215 - 29d57fd) is STARTING\r\n2019-12-16 15:41:19,722  INFO [LifecycleService] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] HazelcastClient 4.0-SNAPSHOT (20191215 - 29d57fd) is STARTED\r\n2019-12-16 15:41:19,750  INFO [ClientConnectionManager] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] Trying to connect to cluster with client name: jet\r\n2019-12-16 15:41:19,752  INFO [ClientConnectionManager] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] Trying to connect to [10.0.0.114]:5701\r\n2019-12-16 15:41:19,809  INFO [ClientConnectionManager] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] Authenticated with server [10.0.0.114]:5701, server version:4.0-SNAPSHOT Local address: /10.8.0.2:38635\r\n2019-12-16 15:41:19,809  INFO [LifecycleService] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] HazelcastClient 4.0-SNAPSHOT (20191215 - 29d57fd) is CLIENT_CONNECTED\r\n2019-12-16 15:41:19,810  INFO [Diagnostics] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] Diagnostics disabled. To enable add -Dhazelcast.diagnostics.enabled=true to the JVM arguments.\r\n2019-12-16 15:41:19,835  INFO [ClientClusterService] [hz.client_0.event-1] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] \r\n\r\nMembers [2] {\r\n\tMember [10.0.0.114]:5701 - 1836e8ff-c39b-44df-af6c-4f8d1c9fa007\r\n\tMember [10.0.0.115]:5701 - ac1d64bc-0ecd-4a3c-91f1-b297fe513716\r\n}\r\n\r\n2019-12-16 15:41:19,881  INFO [ClientConnectionManager] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] Authenticated with server [10.0.0.115]:5701, server version:4.0-SNAPSHOT Local address: /10.8.0.2:34931\r\n2019-12-16 15:41:19,925  INFO [ClientStatisticsService] [main] - Client statistics is enabled with period 5 seconds.\r\nID                  STATUS             SUBMISSION TIME         NAME\r\n0398-00c8-4000-0002 RUNNING            2019-12-16T15:06:00.152 stats\r\n2019-12-16 15:41:19,977  INFO [LifecycleService] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] HazelcastClient 4.0-SNAPSHOT (20191215 - 29d57fd) is SHUTTING_DOWN\r\n2019-12-16 15:41:19,979  INFO [ClientConnectionManager] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] Removed connection to endpoint: [10.0.0.114]:5701, connection: ClientConnection{alive=false, connectionId=1, channel=NioChannel{/10.8.0.2:38635->/10.0.0.114:5701}, remoteEndpoint=[10.0.0.114]:5701, lastReadTime=2019-12-16 15:41:19.977, lastWriteTime=2019-12-16 15:41:19.958, closedTime=2019-12-16 15:41:19.977, connected server version=4.0-SNAPSHOT}\r\n2019-12-16 15:41:19,981  INFO [ClientConnectionManager] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] Removed connection to endpoint: [10.0.0.115]:5701, connection: ClientConnection{alive=false, connectionId=2, channel=NioChannel{/10.8.0.2:34931->/10.0.0.115:5701}, remoteEndpoint=[10.0.0.115]:5701, lastReadTime=2019-12-16 15:41:19.899, lastWriteTime=2019-12-16 15:41:19.980, closedTime=2019-12-16 15:41:19.980, connected server version=4.0-SNAPSHOT}\r\n2019-12-16 15:41:19,981  INFO [LifecycleService] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] HazelcastClient 4.0-SNAPSHOT (20191215 - 29d57fd) is CLIENT_DISCONNECTED\r\n2019-12-16 15:41:19,991  INFO [LifecycleService] [main] - hz.client_0 [jet] [4.0-SNAPSHOT] [4.0-SNAPSHOT] HazelcastClient 4.0-SNAPSHOT (20191215 - 29d57fd) is SHUTDOWN\r\n```\r\nThe actual information I am looking for is barely visible. ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1811", "user": "jerrinot", "labels": ["cli", "defect"], "created": "2019-12-16 14:42:19", "closed": "2019-12-23 08:48:23", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "A moderately complex job startup takes > 30 seconds", "body": "Hi Jet team,\r\nI have recently observed performance regression on job initialization. While other jobs initialize and start within 1 second, some specific job (260 vertices, 504 edges) takes over 30 second to initialize. \r\n\r\nStrack trace during initialization:\r\n````\r\n\"hz._hzInstance_1_integration-test.cached.thread-20@11036\" prio=5 tid=0x53 nid=NA runnable\r\n  java.lang.Thread.State: RUNNABLE\r\n\t blocks hz._hzInstance_1_integration-test.cached.thread-18@10909\r\n\t blocks hz._hzInstance_1_integration-test.cached.thread-10@10898\r\n\t blocks hz._hzInstance_1_integration-test.cached.thread-9@10902\r\n\t  at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\t  at java.util.stream.ReferencePipeline.anyMatch(ReferencePipeline.java:516)\r\n\t  at com.hazelcast.jet.impl.execution.init.VertexDef.isHigherPrioritySource(VertexDef.java:111)\r\n\t  at com.hazelcast.jet.impl.execution.init.ExecutionPlan.initialize(ExecutionPlan.java:166)\r\n\t  at com.hazelcast.jet.impl.execution.ExecutionContext.initialize(ExecutionContext.java:116)\r\n\t  at com.hazelcast.jet.impl.JobExecutionService.lambda$initExecution$9(JobExecutionService.java:214)\r\n\t  at com.hazelcast.jet.impl.JobExecutionService$$Lambda$1094.1335892278.run(Unknown Source:-1)\r\n\t  at com.hazelcast.jet.impl.util.Util.doWithClassLoader(Util.java:440)\r\n\t  at com.hazelcast.jet.impl.JobExecutionService.initExecution(JobExecutionService.java:214)\r\n\t  - locked <0x4322> (a com.hazelcast.jet.impl.JobExecutionService)\r\n\t  at com.hazelcast.jet.impl.operation.InitExecutionOperation.run(InitExecutionOperation.java:72)\r\n\t  at com.hazelcast.spi.Operation.call(Operation.java:170)\r\n\t  at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:210)\r\n\t  at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:199)\r\n\t  at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:407)\r\n\t  at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:434)\r\n\t  at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:648)\r\n\t  at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:633)\r\n\t  at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:592)\r\n\t  at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:256)\r\n\t  at com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:61)\r\n\t  at com.hazelcast.jet.impl.MasterContext.invokeOnParticipant(MasterContext.java:262)\r\n\t  at com.hazelcast.jet.impl.MasterContext.invokeOnParticipants(MasterContext.java:246)\r\n\t  at com.hazelcast.jet.impl.MasterJobContext.lambda$tryStartJob$3(MasterJobContext.java:223)\r\n\t  at com.hazelcast.jet.impl.MasterJobContext$$Lambda$1064.409133827.run(Unknown Source:-1)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService.lambda$submitToCoordinatorThread$44(JobCoordinationService.java:971)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService$$Lambda$680.751311561.call(Unknown Source:-1)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService.submitToCoordinatorThread(JobCoordinationService.java:980)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService.submitToCoordinatorThread(JobCoordinationService.java:970)\r\n\t  at com.hazelcast.jet.impl.MasterJobContext.tryStartJob(MasterJobContext.java:182)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService.tryStartJob(JobCoordinationService.java:892)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService.lambda$submitJob$1(JobCoordinationService.java:218)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService$$Lambda$1042.1102484811.run(Unknown Source:-1)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService.lambda$submitToCoordinatorThread$44(JobCoordinationService.java:971)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService$$Lambda$680.751311561.call(Unknown Source:-1)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService.lambda$submitToCoordinatorThread$45(JobCoordinationService.java:990)\r\n\t  at com.hazelcast.jet.impl.JobCoordinationService$$Lambda$681.1972562950.call(Unknown Source:-1)\r\n\t  at com.hazelcast.util.executor.CompletableFutureTask.run(CompletableFutureTask.java:67)\r\n\t  at com.hazelcast.util.executor.CachedExecutorServiceDelegate$Worker.run(CachedExecutorServiceDelegate.java:227)\r\n\t  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\t  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\t  at java.lang.Thread.run(Thread.java:748)\r\n\t  at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\t  at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n\r\n````\r\nAny suggestion how to proceed with root cause analysis?\r\n\r\nRegards\r\nLH", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1805", "user": "lukasherman", "labels": ["core", "defect"], "created": "2019-12-13 10:33:48", "closed": "2019-12-17 07:27:54", "commits": {"a84d20be7d31c1a39df8fdee6f222c988759b8f9": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}, "ad0d7354ed2abef0ceaddb23c0685504cf3ca575": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "a84d20be7d31c1a39df8fdee6f222c988759b8f9", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["c4aa54e1396b2b2f914eb55e18b7bc697db2ef04"], "nameRev": "a84d20be7d31c1a39df8fdee6f222c988759b8f9 tags/v4.0~148", "commitMessage": "Fix exponential complexity in isHigherPrioritySrc (#1806)\n\nIf the A-B1-B2 sub-DAG is repeated N times in a sequence,\r\n`isHigherPrioritySource` for vertex A would evaluate the sink vertex 2^N\r\ntimes:\r\n\r\n```\r\n    /-- B1 --\\       /-- D1 --\\       /-- F1 --\\\r\nA --+-- B2 --+-- C --+-- D2 --+-- E --+-- F2 --+--  ....\r\n```\r\n\r\nFixes #1805", "commitDateTime": "2019-12-17 08:27:53", "authoredDateTime": "2019-12-17 08:27:53", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/VertexDef.java", "insertions": 27, "deletions": 19, "lines": 46}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/init/VertexDef_HigherPrioritySourceTest.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExecutionPlan.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.getHigherPriorityVertexCount()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.initialize(com.hazelcast.spi.impl.NodeEngine,long,long,com.hazelcast.jet.impl.execution.SnapshotContext)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "VertexDef.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef.isHigherPrioritySource()", "TOT": 21, "UPD": 11, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef.getHigherPriorityVertices(java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertexDef_HigherPrioritySourceTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef_HigherPrioritySourceTest.assertHigherPriorityVertices(com.hazelcast.jet.core.Vertex[])", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ad0d7354ed2abef0ceaddb23c0685504cf3ca575", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["166503c66113d5fe3d7e3158f4aba87cc683a7b9"], "nameRev": "ad0d7354ed2abef0ceaddb23c0685504cf3ca575 tags/v3.2.1~4", "commitMessage": "backport fix #1805 to 3.2 (#1809)\n\n", "commitDateTime": "2019-12-17 09:08:21", "authoredDateTime": "2019-12-17 09:08:21", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/VertexDef.java", "insertions": 27, "deletions": 19, "lines": 46}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/init/VertexDef_HigherPrioritySourceTest.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExecutionPlan.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.getHigherPriorityVertexCount()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.initialize(com.hazelcast.spi.NodeEngine,long,long,com.hazelcast.jet.impl.execution.SnapshotContext,boolean)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "VertexDef.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef.isHigherPrioritySource()", "TOT": 21, "UPD": 11, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef.getHigherPriorityVertices(java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VertexDef_HigherPrioritySourceTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef_HigherPrioritySourceTest.assertHigherPriorityVertices(com.hazelcast.jet.core.Vertex[])", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "jet-start and jet script should not log into the same file", "body": "Currently, `jet-start` and `jet` scripts log into the file `${jet.home}/logs/hazelcast-jet.log`. `jet` scripts logs into that file because `-Dlog4j.configuration=file:$JET_HOME/config/log4j.properties` is used in `common.sh`. `jet` script should rather log just into the console.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1802", "user": "olukas", "labels": ["cli", "defect"], "created": "2019-12-12 14:40:14", "closed": "2019-12-23 08:43:57", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Don't call Processor.close on cooperative threads", "body": "", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1793", "user": "viliam-durina", "labels": ["defect"], "created": "2019-12-10 16:44:22", "closed": "2020-01-21 14:40:46", "commits": {"291b0ff4410a91114fec22cdce842ad7b81be8cb": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "291b0ff4410a91114fec22cdce842ad7b81be8cb", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["2caad25254c25c017e760f1dad01afb2b9cc54f4"], "nameRev": "291b0ff4410a91114fec22cdce842ad7b81be8cb tags/v4.0~104", "commitMessage": "Don't call Processor.close on cooperative thread (#1864)\n\nFixes #1793", "commitDateTime": "2020-01-21 17:40:45", "authoredDateTime": "2020-01-21 17:40:45", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/Processor.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorState.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "insertions": 38, "deletions": 14, "lines": 52}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/TaskletExecutionService.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/TestUtil.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ProcessorTaskletTest.java", "insertions": 29, "deletions": 4, "lines": 33}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ProcessorTaskletTest_Blocking.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ProcessorTaskletTest_Snapshots.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ProcessorTaskletTest_Watermarks.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/TaskletExecutionServiceTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Processor.java", "spoonMethods": []}, {"spoonFilePath": "ProcessorState.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorState", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessorTasklet.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTasklet", "TOT": 6, "UPD": 2, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTasklet.call()", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTasklet.closeProcessor()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTasklet.close()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep()", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "TaskletExecutionService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.TaskletExecutionService", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.TaskletExecutionService.shutdown()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.TaskletExecutionService.submitCooperativeTasklets(com.hazelcast.jet.impl.execution.TaskletExecutionService$ExecutionTracker,java.lang.ClassLoader,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExecutionPlan.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.initialize(com.hazelcast.spi.impl.NodeEngine,long,long,com.hazelcast.jet.impl.execution.SnapshotContext,java.util.concurrent.ConcurrentHashMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestUtil.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.TestUtil", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestUtil.DirectExecutorService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessorTaskletTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest.when_closeBlocked_then_waitUntilDone()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest.createTasklet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest.createTasklet(java.util.concurrent.ExecutorService)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest.PassThroughProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest.PassThroughProcessor.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessorTaskletTest_Blocking.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest_Blocking", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest_Blocking.createTasklet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessorTaskletTest_Snapshots.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest_Snapshots", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest_Snapshots.createTasklet(com.hazelcast.jet.config.ProcessingGuarantee)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessorTaskletTest_Watermarks.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest_Watermarks", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTaskletTest_Watermarks.createTasklet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TaskletExecutionServiceTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.TaskletExecutionServiceTest.before()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "CP subsystem options missing in jet-cluster-admin", "body": "Options for managing CP subsystem are missing `jet-cluster-admin`", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1781", "user": "cangencer", "labels": ["cli", "defect"], "created": "2019-12-05 08:33:47", "closed": "2020-01-23 11:38:15", "commits": {}, "ttf": 49.000277777777775, "commitsDetails": []}, {"title": "\"Buffer full\" when saving a snapshot", "body": "This error was received when saving a large snapshot:\r\n```\r\nCaused by: java.lang.IllegalStateException: buffer full\r\n    at com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl$CustomByteArrayOutputStream.ensureCapacity(AsyncSnapshotWriterImpl.java:464)\r\n    at com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl$CustomByteArrayOutputStream.write(AsyncSnapshotWriterImpl.java:452)\r\n    at com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.getBufferContentsAndClear(AsyncSnapshotWriterImpl.java:206)\r\n    at com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.lambda$flushPartition$1(AsyncSnapshotWriterImpl.java:198)\r\n    at com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.putAsyncToMap(AsyncSnapshotWriterImpl.java:231)\r\n    at com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.flushPartition(AsyncSnapshotWriterImpl.java:198)\r\n    at com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.offer(AsyncSnapshotWriterImpl.java:170)\r\n    at com.hazelcast.jet.impl.execution.StoreSnapshotTasklet.addToInbox(StoreSnapshotTasklet.java:145)\r\n    at com.hazelcast.jet.impl.execution.ConcurrentInboundEdgeStream$ItemDetector.test(ConcurrentInboundEdgeStream.java:233)\r\n    at com.hazelcast.internal.util.concurrent.OneToOneConcurrentArrayQueue.drain(OneToOneConcurrentArrayQueue.java:92)\r\n    at com.hazelcast.jet.impl.execution.ConcurrentInboundEdgeStream.drainQueue(ConcurrentInboundEdgeStream.java:190)\r\n    at com.hazelcast.jet.impl.execution.ConcurrentInboundEdgeStream.drainTo(ConcurrentInboundEdgeStream.java:108)\r\n    at com.hazelcast.jet.impl.execution.StoreSnapshotTasklet.stateMachineStep(StoreSnapshotTasklet.java:89)\r\n    at com.hazelcast.jet.impl.execution.StoreSnapshotTasklet.call(StoreSnapshotTasklet.java:74)\r\n    at com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.runTasklet(TaskletExecutionService.java:302)\r\n    at com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.lambda$run$0(TaskletExecutionService.java:278)\r\n    at java.base/java.util.concurrent.CopyOnWriteArrayList.forEach(CopyOnWriteArrayList.java:803)\r\n    at com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:283)\r\n    at java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\nCredits: @mtishchuk", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1769", "user": "viliam-durina", "labels": ["core", "defect"], "created": "2019-11-29 14:47:48", "closed": "2019-12-02 08:45:07", "commits": {"ab58c5085964a66538344f0287dbf1b59cb760e6": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}, "027b6339dbb505d0dea20646ad467432d73f6298": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "ab58c5085964a66538344f0287dbf1b59cb760e6", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["0f3ed96d7235fba4e66d9351e9b0b9f082c9f3e5"], "nameRev": "ab58c5085964a66538344f0287dbf1b59cb760e6 tags/v4.0~172", "commitMessage": "Fix snapshot chunking (#1771)\n\nWe didn't subtract the header length from `usableChunkCapacity`. As a result,\r\nwhen a single entry was just shy of the `usableChunkCapacity` large and\r\ninserted into an empty chunk, it would be inserted into the current chunk and\r\nnot into a separate chunk. Later when flushing, \"buffer full\" was thrown when\r\nappending the terminator.\r\n\r\nOther changes:\r\n- check that the chunkSize is a power of two, the code depends on this\r\n- \"put operation overwrote a previous value\" assertion was thrown, but we don't\r\n  check the future for an error, we check the `firstError`, it was lost\r\n- replace `whenCompleteAsync` with `whenComplete`, no need to offload, the\r\n  logic is lightweight\r\n\r\nFixes #1769", "commitDateTime": "2019-12-02 09:45:06", "authoredDateTime": "2019-12-02 09:45:06", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriterImpl.java", "insertions": 39, "deletions": 23, "lines": 62}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriterImplTest.java", "insertions": 23, "deletions": 5, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AsyncSnapshotWriterImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl", "TOT": 16, "UPD": 1, "INS": 4, "MOV": 8, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.putAsyncToMap(int,java.util.function.Supplier)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.offer(java.util.Map$Entry)", "TOT": 13, "UPD": 1, "INS": 6, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.consumePutResponse(java.lang.Object,java.lang.Throwable)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.createAndInitBuffers(int,int,byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AsyncSnapshotWriterImplTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.before()", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.when_singleLargeEntry_then_flushedImmediatelyAndDeserializesCorrectly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.when_chunkSizeWouldExceedLimit_then_flushedAutomatically()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.when_cannotAutoFlush_then_offerReturnsFalse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.test_flushingAtEdgeCases()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "027b6339dbb505d0dea20646ad467432d73f6298", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["ad0d7354ed2abef0ceaddb23c0685504cf3ca575"], "nameRev": "027b6339dbb505d0dea20646ad467432d73f6298 tags/v3.2.1~3", "commitMessage": "Fix snapshot chunking (backport of #1771) (#1810)\n\nWe didn't subtract the header length from `usableChunkCapacity`. As a result,\r\nwhen a single entry was just shy of the `usableChunkCapacity` large and\r\ninserted into an empty chunk, it would be inserted into the current chunk and\r\nnot into a separate chunk. Later when flushing, \"buffer full\" was thrown when\r\nappending the terminator.\r\n\r\nOther changes:\r\n- check that the chunkSize is a power of two, the code depends on this\r\n- \"put operation overwrote a previous value\" assertion was thrown, but we don't\r\n  check the future for an error, we check the `firstError`, it was lost\r\n- replace `whenCompleteAsync` with `whenComplete`, no need to offload, the\r\n  logic is lightweight\r\n\r\nFixes #1769\r\n", "commitDateTime": "2019-12-17 09:09:17", "authoredDateTime": "2019-12-17 09:09:17", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriterImpl.java", "insertions": 40, "deletions": 18, "lines": 58}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriterImplTest.java", "insertions": 23, "deletions": 5, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AsyncSnapshotWriterImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl", "TOT": 17, "UPD": 1, "INS": 5, "MOV": 8, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.offer(java.util.Map$Entry)", "TOT": 14, "UPD": 2, "INS": 6, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.flushPartition(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.createAndInitBuffers(int,int,byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.putAsyncToMap(int,java.util.function.Supplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.1.onResponse(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AsyncSnapshotWriterImplTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.before()", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.when_singleLargeEntry_then_flushedImmediatelyAndDeserializesCorrectly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.when_chunkSizeWouldExceedLimit_then_flushedAutomatically()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.when_cannotAutoFlush_then_offerReturnsFalse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.test_flushingAtEdgeCases()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "jet.sh submit reports error messages as NULL", "body": "In 3.2, jet.sh submit always reports error messages as null unless verbose mode is used when using JDK9+. There is a fix in 4.0, should be backported to 3.2.1 if needed.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1717", "user": "cangencer", "labels": ["cli", "defect"], "created": "2019-11-04 19:06:45", "closed": "2020-01-20 11:12:05", "commits": {}, "ttf": 76.00027777777778, "commitsDetails": []}, {"title": "Job hangs if error in PMS.init occurrs", "body": "This test will get stuck in the `join()` call:\r\n```java\r\n@Test\r\npublic void test() {\r\n    DAG dag = new DAG().vertex(new Vertex(\"v\", new MyPMS()));\r\n    instance().newJob(dag).join();\r\n}\r\n\r\nprivate static class MyPMS implements ProcessorMetaSupplier {\r\n    @Override\r\n    public void init(@Nonnull Context context) {\r\n        assert false;\r\n    }\r\n    ...\r\n}\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1712", "user": "viliam-durina", "labels": ["core", "defect"], "created": "2019-11-04 10:35:20", "closed": "2019-11-04 11:50:28", "commits": {"fbdc67d2d01f06b7c8e2dce834bad1b95d725cc7": {"commitGHEventType": "referenced", "commitUser": "jbartok"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fbdc67d2d01f06b7c8e2dce834bad1b95d725cc7", "commitGHEventType": "referenced", "commitUser": "jbartok", "commitParents": ["d1b3b7455e98bcb15347ca364a4e1cdf04850674"], "nameRev": "fbdc67d2d01f06b7c8e2dce834bad1b95d725cc7 tags/v4.0~216", "commitMessage": "Allow Throwable in user code (#1713)\n\nBefore, if Error was thrown in PMS.init (and others), the job will end a\r\nhalf-submitted state, the submission process crashed in an unexpected\r\nplace.\r\n\r\nFixes #1712\r\n", "commitDateTime": "2019-11-04 13:50:28", "authoredDateTime": "2019-11-04 12:50:28", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterJobContext.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ExecutionContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/AbstractProcessorTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExecutionLifecycleTest.java", "insertions": 25, "deletions": 23, "lines": 48}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/TestProcessors.java", "insertions": 34, "deletions": 33, "lines": 67}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterJobContext.java", "spoonMethods": []}, {"spoonFilePath": "ExecutionContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ExecutionContext.completeExecution(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessorTasklet.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ProcessorTasklet.closeProcessor()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractProcessorTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.AbstractProcessorTest.before()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.AbstractProcessorTest.when_customInitThrows_then_initRethrows()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ExecutionLifecycleTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsInitThrows_then_jobFails()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_oneOfTwoJobsFails_then_theOtherContinues()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsGetThrows_then_jobFails()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsCloseThrows_then_jobSucceeds()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psInitThrows_then_jobFails()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psGetThrows_then_jobFails()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psGetOnOtherNodeThrows_then_jobFails()", "TOT": 9, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psCloseThrows_then_jobSucceeds()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorInitThrows_then_failJob()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorProcessThrows_then_failJob()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorCooperativeCompleteThrows_then_failJob()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorNonCooperativeCompleteThrows_then_failJob()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorCloseThrows_then_jobSucceeds()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.runJobExpectFailure(com.hazelcast.jet.core.DAG,java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPmsClosedWithError(java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_clientJoinBeforeAndAfterComplete_then_exceptionEquals()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_executionCancelled_then_jobCompletedWithCancellationException()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TestProcessors.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPMS", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPS", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPMS.setInitError(java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPMS.setGetError(java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPMS.setCloseError(java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPS.setInitError(java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPS.setGetError(java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPS.setCloseError(java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP.setInitError(java.lang.Exception)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP.setProcessError(java.lang.Exception)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP.setCompleteError(java.lang.RuntimeException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP.setCloseError(java.lang.Exception)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP.init(com.hazelcast.jet.core.Context)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP.tryProcess(int,java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP.close()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPMS.init(com.hazelcast.jet.core.Context)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPMS.get(java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPMS.close(java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPS.init(com.hazelcast.jet.core.Context)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPS.get(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockPS.close(java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.TestProcessors.MockP.complete()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Kafka Source without group.id throws exception", "body": "When using Kafka Source and no processing guarantees, the source attempts to commit offsets to the broker after each batch. In this case you get the following exception in newer Kafka versions:\r\n\r\n```\r\nCaused by: com.hazelcast.jet.JetException: Exception in\r\nProcessorTasklet{Query1/streamKafka(trades)#1}: \r\norg.apache.kafka.common.errors.InvalidGroupIdException: \r\nTo use the group management or offset commit APIs, you must provide a valid group.id in the consumer configuration.\r\n```\r\n\r\nWe should either generate a group id if it's missing with this setup or explain inside the Javadoc", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1705", "user": "cangencer", "labels": ["defect", "kafka"], "created": "2019-10-28 08:00:46", "closed": "2019-12-26 11:32:44", "commits": {}, "ttf": 59.000277777777775, "commitsDetails": []}, {"title": "Metrics warnings", "body": "On 3.2, if `hazelcast.diagnostics.metric.distributed.datastructures` is set, the logs have\r\n*WARN* messages from the MetricsRegistry of the form\r\n\r\n```\r\nOverwriting existing probe 'map[__jet.records].lockedEntryCount'\r\nOverwriting existing probe 'map[__jet.records].dirtyEntryCount'\r\nOverwriting existing probe 'map[__jet.records].backupCount'\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1699", "user": "neilstevenson", "labels": ["defect"], "created": "2019-10-21 15:58:16", "closed": "2020-01-20 11:07:48", "commits": {}, "ttf": 90.00027777777778, "commitsDetails": []}, {"title": "WriteJdbcP missing implementation of tryProcessWatermark method ", "body": "When I try to use timestamps in my stream which contains JDBC sinks, I'm getting the following exception:\r\n\r\n`java.lang.UnsupportedOperationException: Missing implementation in class com.hazelcast.jet.impl.connector.WriteJdbcP\r\n\tat com.hazelcast.jet.core.Processor.tryProcessWatermark(Processor.java:147)\r\n\tat com.hazelcast.jet.impl.processor.ProcessorWrapper.tryProcessWatermark(ProcessorWrapper.java:59)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:267)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:232)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:239)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)`", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1678", "user": "Ultar", "labels": ["defect"], "created": "2019-10-04 19:08:47", "closed": "2019-10-15 19:06:50", "commits": {"0efaf139b88652b9707ae07275b24e96948b2b23": {"commitGHEventType": "referenced", "commitUser": "olukas"}, "674e720273808dffb225c358716a542104bf68e0": {"commitGHEventType": "closed", "commitUser": "cangencer"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "0efaf139b88652b9707ae07275b24e96948b2b23", "commitGHEventType": "referenced", "commitUser": "olukas", "commitParents": ["ad9ebd3b295373cf37969bb07c761e13fa19b170"], "nameRev": "0efaf139b88652b9707ae07275b24e96948b2b23 tags/v3.2~4", "commitMessage": "Fix WriteJdbcP in jobs with timestamps\n\nFixes #1678\n", "commitDateTime": "2019-10-08 14:35:35", "authoredDateTime": "2019-10-08 11:14:16", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteJdbcP.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WriteJdbcP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteJdbcP.tryProcessWatermark(com.hazelcast.jet.core.Watermark)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "674e720273808dffb225c358716a542104bf68e0", "commitGHEventType": "closed", "commitUser": "cangencer", "commitParents": ["9eb2c023f5235f00b4e89e7b6c733e28f910e10c"], "nameRev": "674e720273808dffb225c358716a542104bf68e0 tags/v4.0~231", "commitMessage": "Fix WriteJdbcP in jobs with timestamps (#1682)\n\nFixes #1678", "commitDateTime": "2019-10-15 21:06:48", "authoredDateTime": "2019-10-15 21:06:48", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteJdbcP.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WriteJdbcP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteJdbcP.tryProcessWatermark(com.hazelcast.jet.core.Watermark)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0efaf139b88652b9707ae07275b24e96948b2b23"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector"], "changesInPackagesSPOON": ["com.hazelcast.jet.impl.connector.WriteJdbcP.tryProcessWatermark(com.hazelcast.jet.core.Watermark)"]}, {"title": "Remote IMDG failure when using Kubernetes", "body": "This issue on IMDG https://github.com/hazelcast/hazelcast/issues/15671 affects Jet.\r\n\r\nIn `ImdgUtil.asXmlString(ClientConfig clientConfig)` attempting to sent the client config loses sections, such as Kubernetes discovery.\r\n\r\nSo a pipeline with a remote IMDG won't work with Kubernetes discovery.\r\n\r\nThis is not really a Jet bug, but perhaps should have a test for it.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1676", "user": "neilstevenson", "labels": ["defect"], "created": "2019-10-04 08:56:50", "closed": "2020-01-20 11:13:06", "commits": {}, "ttf": 108.00027777777778, "commitsDetails": []}, {"title": "Inconsistent @Nonnull and @Nullable annotations", "body": "`BatchStage.setName()` has `@Nullable` parameter, but some subclasses have it `@Nonnull`.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1675", "user": "viliam-durina", "labels": ["defect"], "created": "2019-10-04 08:41:52", "closed": "2019-11-25 11:49:23", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "File is not uploaded to S3 bucket if it contains long line", "body": "In case when item in pipeline results to long line which should be drained to S3 bucket then that file is not uploaded at all. No exception is thrown, job status is set `COMPLETED` but file does not appear in S3 bucket.\r\n\r\nTo reproduce this issue use part of code like this:\r\n```\r\nStringBuilder sb = new StringBuilder();\r\nString[] items = new String[3];\r\nitems[0] = \"a\";\r\nitems[1] = \"b\";\r\nfor (int i = 0; i < 1_000_000; i++) {\r\n    sb.append(\"1234567890\");\r\n}\r\nitems[2] = sb.toString();\r\np.drawFrom(TestSources.items(items))\r\n        .drainTo(S3Sinks.s3(BUCKET_NAME, PREFIX, UTF_8, Main::client, Object::toString));\r\n```\r\nIf `for` cycle generates smaller `String` or when it is drained to `logger()` then everything works as expected.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1634", "user": "olukas", "labels": ["defect"], "created": "2019-09-13 07:30:38", "closed": "2019-09-17 12:30:25", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "ProcessorWrapper should update the logger to have actual class", "body": "Basically we need to move [this logic](https://github.com/hazelcast/hazelcast-jet/blob/ef9fd2fb57993db3703c2bd0628ca30c6b774482/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/PeekWrappedP.java#L76-L92) to the superclass and ensure that subclasses don't override `init()`.\r\n\r\nAll sinks in pipelines with timestamp are wrapped.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1630", "user": "viliam-durina", "labels": ["defect"], "created": "2019-09-12 13:41:18", "closed": "2019-09-13 10:06:18", "commits": {"788be32c8698b2348d48172ff443e41e720f0131": {"commitGHEventType": "referenced", "commitUser": "cangencer"}, "2367548fbc4dfe0386bd74fc98d9b3ff0b2650e9": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "788be32c8698b2348d48172ff443e41e720f0131", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["ef9fd2fb57993db3703c2bd0628ca30c6b774482"], "nameRev": "788be32c8698b2348d48172ff443e41e720f0131 tags/v3.2~21", "commitMessage": "Update logger when wrapping a processor (#1631)\n\nFixes #1630", "commitDateTime": "2019-09-13 12:06:17", "authoredDateTime": "2019-09-13 12:06:17", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/PeekWrappedP.java", "insertions": 6, "deletions": 25, "lines": 31}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/ProcessorWrapper.java", "insertions": 33, "deletions": 1, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PeekWrappedP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.PeekWrappedP.init(com.hazelcast.jet.core.Outbox,com.hazelcast.jet.impl.processor.Context)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.PeekWrappedP.initWrapper(com.hazelcast.jet.core.Outbox,com.hazelcast.jet.impl.processor.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessorWrapper.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.ProcessorWrapper.wrapOutbox(com.hazelcast.jet.core.Outbox)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.ProcessorWrapper.initWrapper(com.hazelcast.jet.core.Outbox,com.hazelcast.jet.impl.processor.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.ProcessorWrapper.init(com.hazelcast.jet.core.Outbox,com.hazelcast.jet.impl.processor.Context)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2367548fbc4dfe0386bd74fc98d9b3ff0b2650e9", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["6fe0eb4adf8d8b8c1a95a418364cc5efee77fe0d"], "nameRev": "2367548fbc4dfe0386bd74fc98d9b3ff0b2650e9 tags/v4.0~152", "commitMessage": "Two-phase commit for snapshots (#1438)\n\n* Update logger when wrapping a processor\r\n\r\nFixes #1630", "commitDateTime": "2019-12-12 09:18:48", "authoredDateTime": "2019-12-12 09:18:48", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "insertions": 20, "deletions": 3, "lines": 23}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/Outbox.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/Processor.java", "insertions": 208, "deletions": 43, "lines": 251}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/test/TestOutbox.java", "insertions": 8, "deletions": 9, "lines": 17}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/test/TestProcessorMetaSupplierContext.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJobProxy.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobExecutionRecord.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterSnapshotContext.java", "insertions": 95, "deletions": 38, "lines": 133}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ExecutionContext.java", "insertions": 25, "deletions": 8, "lines": 33}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorState.java", "insertions": 35, "deletions": 3, "lines": 38}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ProcessorTasklet.java", "insertions": 148, "deletions": 76, "lines": 224}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/SnapshotContext.java", "insertions": 200, "deletions": 67, "lines": 267}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/SnapshotFlags.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/StoreSnapshotTasklet.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/JetInitDataSerializerHook.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/{SnapshotOperation.java => SnapshotPhase1Operation.java}", "insertions": 24, "deletions": 22, "lines": 46}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/SnapshotPhase2Operation.java", "insertions": 88, "deletions": 0, "lines": 88}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/ProcessorWrapper.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/TwoPhaseSnapshotCommitUtility.java", "insertions": 432, "deletions": 0, "lines": 432}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/ProgressTracker.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/SessionWindowDefinition.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/SlidingWindowDefinition.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/WindowDefinition.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/SimpleTestInClusterSupport.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/TestInClusterSupport.java", "insertions": 2, "deletions": 10, "lines": 12}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/CancellationTest.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExecutionLifecycleTest.java", "insertions": 117, "deletions": 73, "lines": 190}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JetTestSupport.java", "insertions": 34, "deletions": 2, "lines": 36}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartStressTestBase.java", "insertions": 2, "deletions": 9, "lines": 11}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartWithSnapshotTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobTest.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ManualRestartTest.java", "insertions": 1, "deletions": 7, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/OperationLossTest.java", "insertions": 4, "deletions": 10, "lines": 14}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ParallelStressTest.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendResumeTest.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/TerminalSnapshotSynchronizationTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/TestProcessors.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/AbstractDeploymentTest.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ProcessorTaskletTest_Snapshots.java", "insertions": 276, "deletions": 32, "lines": 308}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ProcessorTaskletTest_Watermarks.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/SnapshotContextSimpleTest.java", "insertions": 56, "deletions": 26, "lines": 82}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/SnapshotContextTest.java", "insertions": 13, "deletions": 11, "lines": 24}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/StoreSnapshotTaskletTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/TransformStatefulPTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SourceBuilderTest.java", "insertions": 3, "deletions": 16, "lines": 19}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SourceBuilder_TopologyChangeTest.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/StreamSourceTest.java", "insertions": 1, "deletions": 7, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Data are lost when SdkInterruptedException occurs during drain to S3Sinks", "body": "Data are not stored to S3 bucket when mentioned below exception occurs in server log. This exception is not thrown in the actual code which means that users cannot respond to that. I've observe it for pipeline like this:\r\n```\r\nJetInstance jet = Jet.newJetInstance();\r\nfor (int i = 0; i < 60; i++) {\r\n    Pipeline p = Pipeline.create();\r\n    p.drawFrom(TestSources.itemStream(100_000))\r\n            .withIngestionTimestamps()\r\n            .map(t -> t.sequence())\r\n            .drainTo(S3Sinks.s3(BUCKET_NAME, PREFIX + i + \"_\", UTF_8, Main::client, Object::toString));\r\n    Job job = jet.newJob(p);\r\n    Thread.sleep(1_000);\r\n    job.cancel();\r\n}\r\njet.shutdown();\r\n```\r\n\r\nFollowing Exception occurs in log:\r\n```\r\nWARNING: [10.212.134.152]:5701 [jet] [3.2-SNAPSHOT] Exception in ProcessorTasklet{s3-sink#0}\r\nsoftware.amazon.awssdk.core.exception.AbortedException: Thread was interrupted\r\n\tat software.amazon.awssdk.core.exception.AbortedException$BuilderImpl.build(AbortedException.java:83)\r\n\tat software.amazon.awssdk.core.exception.AbortedException.create(AbortedException.java:38)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.handleTimeoutCausedException(TimeoutExceptionHandlingStage.java:116)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.translatePipelineException(TimeoutExceptionHandlingStage.java:94)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.execute(TimeoutExceptionHandlingStage.java:79)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.execute(TimeoutExceptionHandlingStage.java:39)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.RetryableStage$RetryExecutor.doExecute(RetryableStage.java:113)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.RetryableStage$RetryExecutor.execute(RetryableStage.java:86)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.RetryableStage.execute(RetryableStage.java:62)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.RetryableStage.execute(RetryableStage.java:42)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)\r\n\tat software.amazon.awssdk.core.internal.http.StreamManagingStage.execute(StreamManagingStage.java:57)\r\n\tat software.amazon.awssdk.core.internal.http.StreamManagingStage.execute(StreamManagingStage.java:37)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.executeWithTimer(ApiCallTimeoutTrackingStage.java:80)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.execute(ApiCallTimeoutTrackingStage.java:60)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallTimeoutTrackingStage.execute(ApiCallTimeoutTrackingStage.java:42)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.ExecutionFailureExceptionReportingStage.execute(ExecutionFailureExceptionReportingStage.java:37)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.ExecutionFailureExceptionReportingStage.execute(ExecutionFailureExceptionReportingStage.java:26)\r\n\tat software.amazon.awssdk.core.internal.http.AmazonSyncHttpClient$RequestExecutionBuilderImpl.execute(AmazonSyncHttpClient.java:240)\r\n\tat software.amazon.awssdk.core.client.handler.BaseSyncClientHandler.invoke(BaseSyncClientHandler.java:96)\r\n\tat software.amazon.awssdk.core.client.handler.BaseSyncClientHandler.execute(BaseSyncClientHandler.java:120)\r\n\tat software.amazon.awssdk.core.client.handler.BaseSyncClientHandler.execute(BaseSyncClientHandler.java:73)\r\n\tat software.amazon.awssdk.core.client.handler.SdkSyncClientHandler.execute(SdkSyncClientHandler.java:44)\r\n\tat software.amazon.awssdk.awscore.client.handler.AwsSyncClientHandler.execute(AwsSyncClientHandler.java:55)\r\n\tat software.amazon.awssdk.services.s3.DefaultS3Client.getBucketLocation(DefaultS3Client.java:1233)\r\n\tat software.amazon.awssdk.services.s3.S3Client.getBucketLocation(S3Client.java:1682)\r\n\tat com.hazelcast.jet.s3.S3Sinks$S3SinkContext.checkIfBucketExists(S3Sinks.java:169)\r\n\tat com.hazelcast.jet.s3.S3Sinks$S3SinkContext.<init>(S3Sinks.java:155)\r\n\tat com.hazelcast.jet.s3.S3Sinks$S3SinkContext.<init>(S3Sinks.java:117)\r\n\tat com.hazelcast.jet.s3.S3Sinks.lambda$s3$a1d75201$1(S3Sinks.java:109)\r\n\tat com.hazelcast.jet.function.FunctionEx.apply(FunctionEx.java:43)\r\n\tat com.hazelcast.jet.impl.connector.WriteBufferedP.init(WriteBufferedP.java:59)\r\n\tat com.hazelcast.jet.impl.processor.ProcessorWrapper.init(ProcessorWrapper.java:49)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.init(ProcessorTasklet.java:231)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:255)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: software.amazon.awssdk.core.exception.SdkInterruptedException\r\n\tat software.amazon.awssdk.core.internal.http.InterruptMonitor.checkInterrupted(InterruptMonitor.java:39)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.AfterTransmissionExecutionInterceptorsStage.execute(AfterTransmissionExecutionInterceptorsStage.java:34)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.AfterTransmissionExecutionInterceptorsStage.execute(AfterTransmissionExecutionInterceptorsStage.java:28)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage.execute(RequestPipelineBuilder.java:206)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptTimeoutTrackingStage.execute(ApiCallAttemptTimeoutTrackingStage.java:64)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.ApiCallAttemptTimeoutTrackingStage.execute(ApiCallAttemptTimeoutTrackingStage.java:36)\r\n\tat software.amazon.awssdk.core.internal.http.pipeline.stages.TimeoutExceptionHandlingStage.execute(TimeoutExceptionHandlingStage.java:77)\r\n\t... 37 more\r\n```\r\n\r\nProblem here is not that `SdkInterruptedException` but the fact that something went wrong and we are not able retry uploading data to S3 bucket or at least inform user by throwing some Exception.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1629", "user": "olukas", "labels": ["defect"], "created": "2019-09-12 12:51:52", "closed": "2020-01-22 07:55:14", "commits": {}, "ttf": 131.00027777777777, "commitsDetails": []}, {"title": "AssertionCompletedException not propagated from Sinks", "body": "I am trying to use the assertion support in Jet 3.2, but it's not working as expected. I can see `com.hazelcast.jet.pipeline.test.AssertionCompletedException: Assertion passed successfully\r\n` in a log, but the `AssertionCompletedException` is not propagated successfully. \r\n\r\nThe reproduce bellow is expected to pass, but it fails inside the `assertInstanceOf` as the `actual` is set to `null`. \r\n\r\n```java\r\npublic class TestTest {\r\n    @Test\r\n    public void foo() {\r\n        Pipeline pipeline = Pipeline.create();\r\n        pipeline.drawFrom(TestSources.itemStream(1))\r\n                .withIngestionTimestamps()\r\n                .drainTo(AssertionSinks.assertCollectedEventually(60, e -> {} /*always accepted*/));\r\n\r\n        JetInstance instance = Jet.newJetInstance();\r\n\r\n        Job job = instance.newJob(pipeline);\r\n\r\n        try {\r\n            job.join();\r\n        } catch (CompletionException e) {\r\n            Throwable jetException = e.getCause();\r\n            Throwable cause = jetException.getCause();\r\n            assertInstanceOf(AssertionCompletedException.class, cause);\r\n        }\r\n    }\r\n\r\n    private static <E> void assertInstanceOf(Class<E> expected, Object actual) {\r\n        assertNotNull(actual);\r\n        assertTrue(actual + \" is not an instanceof \" + expected.getName(), expected.isAssignableFrom(actual.getClass()));\r\n    }\r\n}\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1609", "user": "jerrinot", "labels": ["defect"], "created": "2019-09-07 15:28:33", "closed": "2019-09-11 06:48:30", "commits": {"563a99f4a0d3c639ae1f0a2eec35d5f6cc1d7f1b": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "563a99f4a0d3c639ae1f0a2eec35d5f6cc1d7f1b", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["e7c96d24c79eccea1d9fe2a08cf975531b32de16"], "nameRev": "563a99f4a0d3c639ae1f0a2eec35d5f6cc1d7f1b tags/v3.2~30", "commitMessage": "Fix javadoc for assertionCollectedEventually (#1613)\n\nFixes #1609", "commitDateTime": "2019-09-11 08:48:29", "authoredDateTime": "2019-09-11 08:48:29", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/test/AssertionSinks.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/test/Assertions.java", "insertions": 8, "deletions": 7, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AssertionSinks.java", "spoonMethods": []}, {"spoonFilePath": "Assertions.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Different error thrown when joining before or after a job completes", "body": "When `Job.join()` is called while the job is running, the exception is the exception actually thrown by the job. If it's called after the job failed, the exception is recreated as `new JetException(JobResult.failureText)`, doesn't contain the original exception in causes and the original stack trace.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1598", "user": "viliam-durina", "labels": ["breaking-change", "defect"], "created": "2019-09-04 10:24:32", "closed": "2019-09-05 20:24:12", "commits": {"0c3167dcf6985e9e87c68bbefd13273dd20afe4e": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "0c3167dcf6985e9e87c68bbefd13273dd20afe4e", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["7dc956f78bc1df2a1e11dc0e79a7fe5af809d747"], "nameRev": "0c3167dcf6985e9e87c68bbefd13273dd20afe4e tags/v3.2~35", "commitMessage": "Fix different exception from join if problem is same (#1600)\n\nFixes #1598\r\nFixes #1602\r\n\r\nOne difference still remains: if a temporary master context is completed\r\nin `JobCoordinatorService.completeMasterContextIfJobAlreadyCompleted()`,\r\nit will have different error.\r\n\r\nAlso contains refactor of `ExecutionLifecycleTest` to use\r\n`SimpleTestInClusterSupport`: some tests created a second cluster.\r\n\r\nThe test `when_job_withNoSnapshots_completed_then_noSnapshotMapsLeft`\r\nwas outdated.", "commitDateTime": "2019-09-05 22:24:11", "authoredDateTime": "2019-09-05 22:24:11", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJobProxy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExecutionLifecycleTest.java", "insertions": 81, "deletions": 46, "lines": 127}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/JobSummaryTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/ExceptionUtilTest.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/test/AssertionsTest.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/test/TestSourcesTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-reference-manual/src/main/java/Testing.java", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJobProxy.JoinJobCallback.onFailure(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.joinSubmittedJob(long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ExecutionLifecycleTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.setup()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_job_withNoSnapshots_completed_then_noSnapshotMapsLeft()", "TOT": 21, "UPD": 13, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorCompletesSuccessfully_then_closeCalledImmediately()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_deserializationOnMembersFails_then_jobSubmissionFails__member()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_deserializationOnMembersFails_then_jobSubmissionFails__client()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_deserializationOnMasterFails_then_jobSubmissionFails_member()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_deserializationOnMasterFails_then_jobSubmissionFails_client()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_executionCancelled_then_jobCompletedWithCancellationException()", "TOT": 6, "UPD": 2, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_jobCancelled_then_psCloseNotCalledBeforeTaskletsDone()", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPClosedWithoutError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPClosedWithError()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsCloseThrows_then_jobSucceeds()", "TOT": 16, "UPD": 2, "INS": 3, "MOV": 9, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsGetThrows_then_jobFails()", "TOT": 14, "UPD": 2, "INS": 2, "MOV": 9, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_jobCompletesSuccessfully_then_closeCalled()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_oneOfTwoJobsFails_then_theOtherContinues()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psGetOnOtherNodeThrows_then_jobFails()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psCloseThrows_then_jobSucceeds()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorCloseThrows_then_jobSucceeds()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_executionCancelledBeforeStart_then_jobFutureIsCancelledOnExecute()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.runJobExpectFailure(com.hazelcast.jet.core.DAG,java.lang.RuntimeException)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPsClosedWithoutError()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertPsClosedWithError(java.lang.Throwable)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.getJobResult(com.hazelcast.jet.Job)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.beforeClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorInitThrows_then_failJob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorCooperativeCompleteThrows_then_failJob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorNonCooperativeCompleteThrows_then_failJob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_processorProcessThrows_then_failJob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_pmsInitThrows_then_jobFails()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psInitThrows_then_jobFails()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.when_psGetThrows_then_jobFails()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 0}]}, {"spoonFilePath": "JobSummaryTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_job_failed()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ExceptionUtilTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.ExceptionUtilTest.test_serializationFromNodeToClient()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.ExceptionUtilTest.test_serializationOnNode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AssertionsTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertOrdered_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertOrdered_not_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertAnyOrder_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertAnyOrder_duplicate_entry_only_in_source_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertAnyOrder_duplicate_entry_only_in_assert_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertAnyOrder_not_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertContains_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertContains_not_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollected_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollected_not_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollectedEventually()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollectedEventually_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollectedEventuallynot_terminal()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.AssertionsTest.test_assertCollectedEventuallynot_terminal_should_fail()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TestSourcesTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.test.TestSourcesTest.test_itemStream()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.TestSourcesTest.test_itemStream_withWindowing()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.test.TestSourcesTest.test_itemStream_in_expected_range()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Testing.java", "spoonMethods": [{"spoonMethodName": "Testing.assertInstanceOf(java.lang.Class,java.lang.Object)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "Testing.assertions()", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "MasterJobContext.getResult hides exception", "body": "MasterJobContext hides any exception which is one of `(e instanceof CancellationException\r\n                        || e instanceof TerminatedWithSnapshotException\r\n                        || isTopologyException(e))` and wraps it with `TopologyException` which may hide the real cause, which can be non-topology change related.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1594", "user": "cangencer", "labels": ["core", "defect"], "created": "2019-09-03 05:33:19", "closed": "2019-09-04 12:11:31", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Excessive logging when snapshotting", "body": "When I enable fault tolerance then Jet logs this every few seconds:\r\n```\r\nINFO: [172.22.0.1]:5701 [jet] [3.1] Snapshot 8 for job 'read from mysql', execution c5e6-a8d8-3f0e-5506 completed with status SUCCESS in 10ms, 254 bytes, 1 keys in 1 chunks, stored in '__jet.snapshot.d1e2-829a-54ad-c4be.0'\r\n```\r\n\r\nThis is business as usual, it does not belong to INFO level. It's DEBUG at best. ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1588", "user": "jerrinot", "labels": ["defect"], "created": "2019-08-29 11:51:02", "closed": "2019-08-29 13:27:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Broken parallelism setting on StreamSourceTransform ", "body": "When I ran `StreamSourceStageTest.test_plainSourceBuilder_withTimestamps` test without explicit `setLocalParallelism(1)` call after source, it generates a DAG like below:\r\n\r\n```\r\ndigraph DAG {\r\n    \"s\" [tooltip=\"local-parallelism=1\"];\r\n    \"s-add-timestamps\" [tooltip=\"local-parallelism=8\"];\r\n    \"sliding-window-prepare\" [tooltip=\"local-parallelism=8\"];\r\n    \"sliding-window\" [tooltip=\"local-parallelism=1\"];\r\n    \"s-2\" [tooltip=\"local-parallelism=8\"];\r\n    \"s\" -> \"s-add-timestamps\" [label=\"isolated\"];\r\n    \"s-add-timestamps\" -> \"sliding-window-prepare\";\r\n    subgraph cluster_0 {\r\n        \"sliding-window-prepare\" -> \"sliding-window\" [label=\"distributed-partitioned\"];\r\n    }\r\n    \"sliding-window\" -> \"s-2\";\r\n}\r\n```\r\nwhich causes test to fail and you can see `s` and `s-add-timestamps` have different parallelism.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1566", "user": "eminn", "labels": ["defect", "pipeline-api"], "created": "2019-08-23 09:16:16", "closed": "2019-08-23 14:37:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "change `cluster.sh` default group name", "body": "cluster.sh uses default group name of `dev` and `dev-pass` where it should use jet specific ones.\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1565", "user": "cangencer", "labels": ["cli", "defect"], "created": "2019-08-23 08:59:27", "closed": "2019-08-28 12:12:02", "commits": {"bbefeb17f4b53c67debaf7f60544edb469c54a78": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "bbefeb17f4b53c67debaf7f60544edb469c54a78", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["2b58883f97fe03b2e4e28b777f1edc1e4e879ccf"], "nameRev": "bbefeb17f4b53c67debaf7f60544edb469c54a78 tags/v3.2~52", "commitMessage": "Fix group name, password, remove tab indentation (#1577)\n\nFixes #1565", "commitDateTime": "2019-08-28 14:12:00", "authoredDateTime": "2019-08-28 14:12:00", "commitGitStats": [{"filePath": "hazelcast-jet-distribution/src/main/resources/bin/cluster.sh", "insertions": 47, "deletions": 47, "lines": 94}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "java.lang.ClassCastException: com.hazelcast.jet.impl.JetEvent cannot be cast to java.util.Map$Entry", "body": "```\r\njava.lang.ClassCastException: com.hazelcast.jet.impl.JetEvent cannot be cast to java.util.Map$Entry\r\n\tat com.hazelcast.util.function.FunctionEx.apply(FunctionEx.java:44)\r\n\tat com.hazelcast.jet.core.Edge$KeyPartitioner.getPartition(Edge.java:589)\r\n\tat com.hazelcast.jet.impl.execution.OutboundCollector$Partitioned.offer(OutboundCollector.java:193)\r\n\tat com.hazelcast.jet.impl.execution.OutboxImpl.doOffer(OutboxImpl.java:241)\r\n\tat com.hazelcast.jet.impl.execution.OutboxImpl.offerInternal(OutboxImpl.java:141)\r\n\tat com.hazelcast.jet.impl.execution.OutboxImpl.offer(OutboxImpl.java:93)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryEmit(AbstractProcessor.java:310)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.emitFromTraverser(AbstractProcessor.java:409)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.emitFromTraverser(AbstractProcessor.java:422)\r\n\tat com.hazelcast.jet.core.AbstractProcessor$FlatMapper.emit(AbstractProcessor.java:580)\r\n\tat com.hazelcast.jet.core.AbstractProcessor$FlatMapper.tryProcess(AbstractProcessor.java:570)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcessWatermark(SlidingWindowP.java:250)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:277)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:242)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.runTasklet(TaskletExecutionService.java:327)\r\n\tat java.util.concurrent.CopyOnWriteArrayList.forEach(CopyOnWriteArrayList.java:890)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:308)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\nSimple reproducer from @viliam-durina:\r\n\r\n```\r\n    @Test\r\n    public void test() {\r\n        JetInstance inst = createJetMember();\r\n\r\n        Pipeline p = Pipeline.create();\r\n        p.drawFrom(TestSources.itemStream(10))\r\n         .withNativeTimestamps(0)\r\n         .groupingKey(item -> \"key\")\r\n         .window(WindowDefinition.sliding(1, 1))\r\n         .aggregate(AggregateOperations.counting())\r\n         .drainTo(Sinks.map(\"map\"));\r\n\r\n        inst.newJob(p);\r\n        sleepSeconds(10);\r\n    }\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1554", "user": "eminn", "labels": ["defect", "pipeline-api"], "created": "2019-08-21 10:10:35", "closed": "2019-08-21 12:19:07", "commits": {"66e8645ec7e223482296c186172b9841452f402e": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "66e8645ec7e223482296c186172b9841452f402e", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["0583e23316016ba5d94e100407db404f19d84797"], "nameRev": "66e8645ec7e223482296c186172b9841452f402e tags/v3.2~66", "commitMessage": "Fix adapting keyFn for partitioned sink input (#1555)\n\nFixes #1554", "commitDateTime": "2019-08-21 14:19:06", "authoredDateTime": "2019-08-21 14:19:06", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/ComputeStageImplBase.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/FunctionAdapter.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/GrAggBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/Planner.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/StageWithKeyAndWindowImpl.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/StageWithWindowImpl.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/SinkTransform.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SinksTest.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ComputeStageImplBase.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.ComputeStageImplBase", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FunctionAdapter.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.FunctionAdapter.adaptAggregateOperation(com.hazelcast.jet.aggregate.AggregateOperation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.FunctionAdapter.adaptKeyFn(com.hazelcast.jet.function.FunctionEx)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GrAggBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.GrAggBuilder.buildStream(com.hazelcast.jet.aggregate.AggregateOperation)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Planner.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.Planner.addEdges(com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.core.Vertex,java.util.function.BiConsumer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StageWithKeyAndWindowImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.StageWithKeyAndWindowImpl.aggregate(com.hazelcast.jet.aggregate.AggregateOperation1)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.StageWithKeyAndWindowImpl.aggregate2(com.hazelcast.jet.pipeline.StreamStageWithKey,com.hazelcast.jet.aggregate.AggregateOperation2)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.StageWithKeyAndWindowImpl.aggregate3(com.hazelcast.jet.pipeline.StreamStageWithKey,com.hazelcast.jet.pipeline.StreamStageWithKey,com.hazelcast.jet.aggregate.AggregateOperation3)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StageWithWindowImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.StageWithWindowImpl.attachAggregate(com.hazelcast.jet.aggregate.AggregateOperation1)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SinkTransform.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.SinkTransform", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SinksTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.SinksTest.test_adaptingPartitionFunction()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Outdated SourceBuilder JavaDoc", "body": "The source builder [JavaDoc](https://github.com/hazelcast/hazelcast-jet/blob/c3f163c32fa43e5ad3225248cbed97eddb780249/hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/SourceBuilder.java#L239-L241) says: \r\n\r\n```\r\n     * <strong>NOTE:</strong> the source you build with this builder is not\r\n     * fault-tolerant. You shouldn't use it in jobs that require a processing\r\n     * guarantee.\r\n```\r\n\r\nThat's actually not true anymore. As of Jet 3.1 SourceBuilder provider a way to create a fault tolerant source. ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1550", "user": "jerrinot", "labels": ["defect", "javadoc"], "created": "2019-08-19 14:02:16", "closed": "2019-08-21 08:05:42", "commits": {"0583e23316016ba5d94e100407db404f19d84797": {"commitGHEventType": "referenced", "commitUser": "eminn"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "0583e23316016ba5d94e100407db404f19d84797", "commitGHEventType": "referenced", "commitUser": "eminn", "commitParents": ["af98a01bfa6db97bf2f826f83da2f6a5f7632a8e"], "nameRev": "0583e23316016ba5d94e100407db404f19d84797 tags/v3.2~67", "commitMessage": "Fix SourceBuilder's javadoc (#1553)\n\nFixes #1550", "commitDateTime": "2019-08-21 11:05:42", "authoredDateTime": "2019-08-21 10:05:42", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/SourceBuilder.java", "insertions": 5, "deletions": 9, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SourceBuilder.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Unfinished sample in statefulMap", "body": "See https://github.com/hazelcast/hazelcast-jet/blob/d7c7a8313b10a7ffb0dc002af71b2023ea2f238f/hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/GeneralStage.java#L118 and few more like this below.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1549", "user": "viliam-durina", "labels": ["defect", "javadoc"], "created": "2019-08-19 08:49:03", "closed": "2019-09-10 13:02:56", "commits": {"e7c96d24c79eccea1d9fe2a08cf975531b32de16": {"commitGHEventType": "closed", "commitUser": "mtopolnik"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "e7c96d24c79eccea1d9fe2a08cf975531b32de16", "commitGHEventType": "closed", "commitUser": "mtopolnik", "commitParents": ["a74ce4ba58ef1e523e0f88b177095b5eea3240b1"], "nameRev": "e7c96d24c79eccea1d9fe2a08cf975531b32de16 tags/v3.2~31", "commitMessage": "Stateful mapping: add onEvict callback (#1614)\n\nAlso add missing code samples\r\n\r\nFixes #1549 \r\n", "commitDateTime": "2019-09-10 15:02:54", "authoredDateTime": "2019-09-10 15:02:54", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Traverser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/processor/Processors.java", "insertions": 28, "deletions": 17, "lines": 45}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/BatchStageWithKeyImpl.java", "insertions": 8, "deletions": 9, "lines": 17}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/ComputeStageImplBase.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/FunctionAdapter.java", "insertions": 32, "deletions": 17, "lines": 49}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/StageWithGroupingBase.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/StreamStageWithKeyImpl.java", "insertions": 26, "deletions": 10, "lines": 36}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/FlatMapStatefulTransform.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/GlobalFlatMapStatefulTransform.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/GlobalMapStatefulTransform.java", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/MapStatefulTransform.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/SlidingWindowP.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/TransformStatefulP.java", "insertions": 60, "deletions": 73, "lines": 133}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/BatchStageWithKey.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/GeneralStage.java", "insertions": 61, "deletions": 23, "lines": 84}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/GeneralStageWithKey.java", "insertions": 78, "deletions": 35, "lines": 113}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/StreamStageWithKey.java", "insertions": 121, "deletions": 58, "lines": 179}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/TransformStatefulPTest.java", "insertions": 143, "deletions": 81, "lines": 224}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/BatchStageTest.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/PipelineTestSupport.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/StreamStageTest.java", "insertions": 41, "deletions": 14, "lines": 55}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/WindowAggregateTest.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/WindowGroupAggregateTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/kafka/impl/StreamKafkaP.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Updating map sink should be cooperative", "body": "Updating map sink is currently marked as non-cooperative, but it uses async API so should be made cooperative instead.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1536", "user": "cangencer", "labels": ["core", "defect"], "created": "2019-08-08 08:56:11", "closed": "2019-08-14 11:27:56", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "MeasurementPredicates.tagValueMatches matches even if tag does not exist for Measurement", "body": "_master_ (commit 6126dd535f7425dfde39289afe08470d655c66d2)\r\n\r\nIn case `MeasurementPredicates.tagValueMatches` is called with `tag` which does not exist in `Measurement` then filtering predicate does not filter it out. \r\n\r\nIt should return false if `measurement.getTag(tag)` on following line returns `null` - https://github.com/hazelcast/hazelcast-jet/blob/6126dd535f7425dfde39289afe08470d655c66d2/hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/metrics/MeasurementPredicates.java#L62", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1532", "user": "olukas", "labels": ["defect"], "created": "2019-08-07 13:07:44", "closed": "2019-08-08 08:42:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "TimestampTransform should have same parallelism as upstream", "body": "When a batch stream is added timestamps currently it causes addition of a unicast edge and maximum parallelism. This should instead use same parallelism as upstream and isolated edge to avoid shuffling the data.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1527", "user": "cangencer", "labels": ["defect", "pipeline-api"], "created": "2019-08-07 09:04:50", "closed": "2019-08-23 14:36:39", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "Whitespace symbols break output of jet.sh list-jobs command", "body": "_master_ (commit 1aaf7f16a7fa771e8cd3070be1506a7afe566c45)\r\n\r\nIn case when white symbols like (`\\n`,`t` etc.) are used in name of the job then output of `list-jobs` command is not aligned correctly. They should be escaped in output.\r\n\r\nSee output for job name `\"CommonName\"` and `\"J\\tO\\tB\\tN\\tA\\tM\\tE\"`:\r\n```\r\n./jet.sh list-jobs\r\nNAME                     ID                  STATUS             SUBMISSION TIME        \r\nCommonName               02ed-ac0a-df00-0001 RUNNING            2019-08-06T08:54:00.921\r\nJ\tO\tB\tN\tA\tM\tE            02ed-ac06-8900-0001 RUNNING            2019-08-06T08:53:58.087\r\n```\r\n\r\nI would expect that this will occur also in similar commands (like `list-snapshots`).", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1522", "user": "olukas", "labels": ["cli", "defect"], "created": "2019-08-06 07:06:36", "closed": "2019-08-23 15:04:23", "commits": {"bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["d67c200b22114b38dd9a585a30964dbb414ca24d"], "nameRev": "bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04 tags/v3.2~60", "commitMessage": "Command line interface fixes (#1556)\n\n* Sort printed snapshots by name (Fixes #1537)\r\n* Fix test on Windows\r\n* Remove help option from some commands (Fixes #1534)\r\n* Move the raw job and snapshot name to the end (Fixes #1522)\r\n* Add option to print full job name in list-snapshots, always print full job and snapshot name when at the end (Fixes #1520)\r\n* Fix printing of JAVA_OPTS (Fixes #1447)", "commitDateTime": "2019-08-23 17:04:21", "authoredDateTime": "2019-08-23 17:04:21", "commitGitStats": [{"filePath": "hazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetCommandLine.java", "insertions": 31, "deletions": 25, "lines": 56}, {"filePath": "hazelcast-jet-all/src/test/java/com/hazelcast/jet/server/JetCommandLineTest.java", "insertions": 26, "deletions": 6, "lines": 32}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/jet-start.sh", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetCommandLine.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.cluster(com.hazelcast.jet.server.JetCommandLine$Verbosity)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listJobs(com.hazelcast.jet.server.JetCommandLine$Verbosity,boolean)", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listSnapshots(com.hazelcast.jet.server.JetCommandLine$Verbosity)", "TOT": 15, "UPD": 5, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.submit(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String,java.lang.String,java.io.File,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.suspend(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.shorten(java.lang.String,int)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listSnapshots(com.hazelcast.jet.server.JetCommandLine$Verbosity,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.shorten(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetCommandLineTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.beforeClass()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.newJob()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.test_listJobs_dirtyName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.newJob(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Name of job displays only first 24 chars in jet.sh list-jobs command", "body": "_master_ (commit 1aaf7f16a7fa771e8cd3070be1506a7afe566c45)\r\n\r\nOnly first 24 chars is displayed in `jet.sh list-jobs` command. It means that there is no difference in name output of jobs which have the same start of the name (and they differ in some suffix).\r\n\r\nIt can be reproduced by submitting two jobs with name `ThisIsJobWithVeryLongName_suffix1` and `ThisIsJobWithVeryLongName_suffix2`:\r\n```\r\n./jet.sh submit -n ThisIsJobWithVeryLongName_suffix1 $PATH_TO_REMOTE_JOB_JAR\r\n./jet.sh submit -n ThisIsJobWithVeryLongName_suffix2 $PATH_TO_REMOTE_JOB_JAR\r\n```\r\nIt will result to:\r\n```\r\n./jet.sh list-jobs\r\nNAME                     ID                  STATUS             SUBMISSION TIME        \r\nThisIsJobWithVeryLongNam 02ed-aaad-7d00-0001 RUNNING            2019-08-06T08:48:02.895\r\nThisIsJobWithVeryLongNam 02ed-aaa3-a640-0001 RUNNING            2019-08-06T08:47:52.827\r\n```\r\n\r\nI would expect that this will occur also in similar commands (like `list-snapshots`).", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1520", "user": "olukas", "labels": ["cli", "defect"], "created": "2019-08-06 07:02:02", "closed": "2019-08-23 15:04:23", "commits": {"bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["d67c200b22114b38dd9a585a30964dbb414ca24d"], "nameRev": "bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04 tags/v3.2~60", "commitMessage": "Command line interface fixes (#1556)\n\n* Sort printed snapshots by name (Fixes #1537)\r\n* Fix test on Windows\r\n* Remove help option from some commands (Fixes #1534)\r\n* Move the raw job and snapshot name to the end (Fixes #1522)\r\n* Add option to print full job name in list-snapshots, always print full job and snapshot name when at the end (Fixes #1520)\r\n* Fix printing of JAVA_OPTS (Fixes #1447)", "commitDateTime": "2019-08-23 17:04:21", "authoredDateTime": "2019-08-23 17:04:21", "commitGitStats": [{"filePath": "hazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetCommandLine.java", "insertions": 31, "deletions": 25, "lines": 56}, {"filePath": "hazelcast-jet-all/src/test/java/com/hazelcast/jet/server/JetCommandLineTest.java", "insertions": 26, "deletions": 6, "lines": 32}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/jet-start.sh", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetCommandLine.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.cluster(com.hazelcast.jet.server.JetCommandLine$Verbosity)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listJobs(com.hazelcast.jet.server.JetCommandLine$Verbosity,boolean)", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listSnapshots(com.hazelcast.jet.server.JetCommandLine$Verbosity)", "TOT": 15, "UPD": 5, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.submit(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String,java.lang.String,java.io.File,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.suspend(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.shorten(java.lang.String,int)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listSnapshots(com.hazelcast.jet.server.JetCommandLine$Verbosity,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.shorten(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetCommandLineTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.beforeClass()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.newJob()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.test_listJobs_dirtyName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.newJob(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Jet CLI accept only XML client configuration", "body": "It should also accept YAML configuration", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1473", "user": "eminn", "labels": ["cli", "configuration", "defect"], "created": "2019-07-05 16:08:25", "closed": "2019-07-12 11:10:27", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Cannot mix and match YAML and XML on Jet and IMDG configs", "body": "When Jet uses default (XML) configuration and provided with YAML configuration for IMDG, it tries to parse the YAML IMDG configuration as XML. There shouldn't be restriction to have them both in the same type.\r\n\r\n```\r\nobjc[41663]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/bin/java (0x1031b64c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10327e4e0). One of the two will be used. Which one is undefined.\r\nJul 05, 2019 6:58:39 PM com.hazelcast.config.AbstractConfigLocator\r\nINFO: Loading 'hazelcast-jet-default.xml' from the classpath.\r\nJul 05, 2019 6:58:39 PM com.hazelcast.jet.config.JetConfig\r\nINFO: jet.home is /Users/emindemirci/Development/testbed\r\nJul 05, 2019 6:58:40 PM com.hazelcast.config.AbstractConfigLocator\r\nINFO: Loading configuration '/Users/emindemirci/Development/testbed/src/main/resources/hazelcast.yaml' from System property 'hazelcast.config'\r\nJul 05, 2019 6:58:40 PM com.hazelcast.config.AbstractConfigLocator\r\nINFO: Using configuration file at /Users/emindemirci/Development/testbed/src/main/resources/hazelcast.yaml\r\n[Fatal Error] :1:1: Content is not allowed in prolog.\r\nJul 05, 2019 6:58:40 PM com.hazelcast.config.XmlConfigBuilder\r\nSEVERE: Failed to parse the inputstream\r\nException: Content is not allowed in prolog.\r\nHazelcast startup interrupted.\r\nException in thread \"main\" com.hazelcast.config.InvalidConfigurationException: Content is not allowed in prolog.\r\n\tat com.hazelcast.config.XmlConfigBuilder.parse(XmlConfigBuilder.java:211)\r\n\tat com.hazelcast.config.XmlConfigBuilder.parseAndBuildConfig(XmlConfigBuilder.java:154)\r\n\tat com.hazelcast.config.XmlConfigBuilder.build(XmlConfigBuilder.java:146)\r\n\tat com.hazelcast.config.XmlConfigBuilder.build(XmlConfigBuilder.java:139)\r\n\tat com.hazelcast.jet.impl.config.XmlJetConfigBuilder.getMemberConfig(XmlJetConfigBuilder.java:178)\r\n\tat com.hazelcast.jet.impl.config.XmlJetConfigBuilder.build(XmlJetConfigBuilder.java:158)\r\n\tat com.hazelcast.jet.impl.config.XmlJetConfigBuilder.build(XmlJetConfigBuilder.java:147)\r\n\tat com.hazelcast.jet.impl.config.ConfigProvider.locateAndGetJetConfig(ConfigProvider.java:64)\r\n\tat com.hazelcast.jet.impl.config.ConfigProvider.locateAndGetJetConfig(ConfigProvider.java:72)\r\n\tat com.hazelcast.jet.Jet.newJetInstance(Jet.java:82)\r\n\tat Test.main(Test.java:26)\r\nCaused by: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.\r\n\tat com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:257)\r\n\tat com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)\r\n\tat javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:121)\r\n\tat com.hazelcast.config.XmlConfigBuilder.parse(XmlConfigBuilder.java:192)\r\n\t... 10 more\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1472", "user": "eminn", "labels": ["configuration", "defect"], "created": "2019-07-05 16:04:36", "closed": "2019-07-08 09:14:17", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Use green ticks in Sources and Sinks table in Chrome", "body": "Section `5.2. Overview of Sources and Sinks` includes `Table 1. Sources and Sinks` which contains crosses and ticks. \r\n\r\nIt is displayed correctly in Firefox:\r\n![Screenshot_2019-04-01 Hazelcast Jet Reference Manual](https://user-images.githubusercontent.com/2005025/55309352-d42e3300-545d-11e9-9c29-0b8e37f83698.png)\r\n\r\nHowever Chrome (`Version 70.0.3538.77`) displays those ticks in white color which makes them almost invisible. It should also use green ticks to have more contrast from background. See:\r\n![jet_sources_and_sink_table_chrome](https://user-images.githubusercontent.com/2005025/55309367-dd1f0480-545d-11e9-884a-ea6846b55f10.png)\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1466", "user": "olukas", "labels": ["defect", "reference-manual"], "created": "2019-04-01 07:10:47", "closed": "2019-08-27 10:14:49", "commits": {"7ed9fb6849353995177d53ac5915650aed3c38cc": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 148.00027777777777, "commitsDetails": [{"commitHash": "7ed9fb6849353995177d53ac5915650aed3c38cc", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["a7c9e001d5f741b1211fbf0ed865cb1efd1f49fb"], "nameRev": "7ed9fb6849353995177d53ac5915650aed3c38cc tags/v3.2~56", "commitMessage": "Replace unicode chars with images (#1574)\n\nThe unicode characters were rendered very differently in various browsers.\r\n\r\nFixes #1466", "commitDateTime": "2019-08-27 12:14:47", "authoredDateTime": "2019-08-27 12:14:47", "commitGitStats": [{"filePath": "hazelcast-jet-reference-manual/src/main/asciidoc/images/check-mark.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-reference-manual/src/main/asciidoc/images/cross-mark.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-reference-manual/src/main/asciidoc/source-sink-connectors/overview.adoc", "insertions": 101, "deletions": 101, "lines": 202}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Some code snippet have ugly formatting", "body": "This is barely readable:\r\n![image](https://user-images.githubusercontent.com/158619/58764284-9173fe80-8565-11e9-841d-d06b130d2fcb.png)\r\n\r\nThis is a very important part of the reference manual yet the code is almost unreadable. \r\n\r\n\r\nI have enough space on my screen:\r\n![image](https://user-images.githubusercontent.com/158619/58764294-a94b8280-8565-11e9-8524-dac885953307.png)\r\n\r\nLink: https://docs.hazelcast.org/docs/jet/3.0/manual/#pipeline-cheatsheet", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1462", "user": "jerrinot", "labels": ["defect", "reference-manual"], "created": "2019-06-02 16:39:20", "closed": "2019-07-02 09:33:33", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "Hazelcast Jet doesn't respect system property for hazelcast shutdownhook during initialization", "body": "```\r\n\r\n        Properties jetProps = jetConfig.getProperties();\r\n        Properties hzProperties = hzConfig.getProperties();\r\n\r\n        // Disable HZ shutdown hook, as we will use the Jet-specific property instead\r\n        String hzHookEnabled = hzProperties.getProperty(\r\n                SHUTDOWNHOOK_ENABLED.getName(), SHUTDOWNHOOK_ENABLED.getDefaultValue()\r\n        );\r\n        if (!jetProps.containsKey(JET_SHUTDOWNHOOK_ENABLED)) {\r\n            jetProps.setProperty(JET_SHUTDOWNHOOK_ENABLED.getName(), hzHookEnabled);\r\n        }\r\n        hzConfig.setProperty(SHUTDOWNHOOK_ENABLED.getName(), \"false\");\r\n\r\n        // copy Jet properties to HZ properties\r\n        for (String prop : jetProps.stringPropertyNames()) {\r\n            hzProperties.setProperty(prop, jetProps.getProperty(prop));\r\n        }\r\n```\r\n\r\nThis part of code in Jet.java never reads from hzConfig doing Config.getProperty so it never gets system property and then overrides the system property for jet shutdown hook and hazelcast shutdown hook so it will never access the system property anymore. ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1458", "user": "Alexichlol", "labels": ["defect"], "created": "2019-06-25 21:36:21", "closed": "2019-07-01 07:57:35", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "jet-start.sh and jet.sh scripts does not work with multiple java options", "body": "This gives error `JAVA_OPTS=\"-Xmx1G -ea\" bin/jet-start.sh`\r\n```\r\n########################################\r\n# JAVA=/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java\r\n# JAVA_OPTS=-Xmx1G -ea\r\n# CLASSPATH=/java/workspace/hazelcast-jet/hazelcast-jet-distribution/target/hazelcast-jet-3.1/lib/hazelcast-jet-3.1.jar:\r\n# starting now....\r\n########################################\r\nInvalid maximum heap size: -Xmx1G -ea\r\nError: Could not create the Java Virtual Machine.\r\nError: A fatal exception has occurred. Program will exit.\r\n```\r\n\r\nwhile this works ok `JAVA_OPTS=\"-Xmx1G\" bin/jet-start.sh`\r\n\r\n\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1447", "user": "gurbuzali", "labels": ["cli", "defect"], "created": "2019-06-17 13:11:32", "closed": "2019-08-23 15:04:24", "commits": {"946f334c9dd2ee134c73ea753e045eabae11d14e": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}, "73a22652dd982c4280f6d6d30b67699a74a337ee": {"commitGHEventType": "referenced", "commitUser": "gurbuzali"}, "bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 67.00027777777778, "commitsDetails": [{"commitHash": "946f334c9dd2ee134c73ea753e045eabae11d14e", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["23696b28c9c1c63259392c12a12d71e705d32453"], "nameRev": "946f334c9dd2ee134c73ea753e045eabae11d14e tags/v3.2~120", "commitMessage": "Fix space handling in JAVA_OPTS (#1448)\n\nFixes #1447", "commitDateTime": "2019-06-18 08:14:53", "authoredDateTime": "2019-06-18 08:14:53", "commitGitStats": [{"filePath": "hazelcast-jet-distribution/src/main/resources/bin/common.sh", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "73a22652dd982c4280f6d6d30b67699a74a337ee", "commitGHEventType": "referenced", "commitUser": "gurbuzali", "commitParents": ["00807bae9d3b2ef8ffb69395155f0f3e3ab8bb81"], "nameRev": "73a22652dd982c4280f6d6d30b67699a74a337ee tags/v3.1~2", "commitMessage": "Fix space handling in JAVA_OPTS (#1448)\n\nFixes #1447", "commitDateTime": "2019-06-18 10:22:27", "authoredDateTime": "2019-06-18 08:14:53", "commitGitStats": [{"filePath": "hazelcast-jet-distribution/src/main/resources/bin/common.sh", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["d67c200b22114b38dd9a585a30964dbb414ca24d"], "nameRev": "bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04 tags/v3.2~60", "commitMessage": "Command line interface fixes (#1556)\n\n* Sort printed snapshots by name (Fixes #1537)\r\n* Fix test on Windows\r\n* Remove help option from some commands (Fixes #1534)\r\n* Move the raw job and snapshot name to the end (Fixes #1522)\r\n* Add option to print full job name in list-snapshots, always print full job and snapshot name when at the end (Fixes #1520)\r\n* Fix printing of JAVA_OPTS (Fixes #1447)", "commitDateTime": "2019-08-23 17:04:21", "authoredDateTime": "2019-08-23 17:04:21", "commitGitStats": [{"filePath": "hazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetCommandLine.java", "insertions": 31, "deletions": 25, "lines": 56}, {"filePath": "hazelcast-jet-all/src/test/java/com/hazelcast/jet/server/JetCommandLineTest.java", "insertions": 26, "deletions": 6, "lines": 32}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/jet-start.sh", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetCommandLine.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.cluster(com.hazelcast.jet.server.JetCommandLine$Verbosity)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listJobs(com.hazelcast.jet.server.JetCommandLine$Verbosity,boolean)", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listSnapshots(com.hazelcast.jet.server.JetCommandLine$Verbosity)", "TOT": 15, "UPD": 5, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.submit(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String,java.lang.String,java.io.File,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.suspend(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.shorten(java.lang.String,int)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listSnapshots(com.hazelcast.jet.server.JetCommandLine$Verbosity,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.shorten(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetCommandLineTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.beforeClass()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.newJob()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.test_listJobs_dirtyName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.newJob(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "De-serialization exception for Object[] with remoteMap sink to pure IMDG cluster", "body": "See https://github.com/hazelcast/hazelcast/issues/15181 and https://github.com/hazelcast/hazelcast/issues/15179\r\n\r\nIMDG only clusters and IMDG+JET clusters have a mismatching definition for certain object types.\r\n\r\nFor example, https://github.com/hazelcast/hazelcast-jet/blob/master/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/serialization/SerializerHookConstants.java#L32 defines -302 for `Object[]`\r\n\r\nIf a job uses `Object[]` in the output and remote map sink to an IMDG only cluster, the job works. However, the data record in the remote IMDG only cluster has type -302 which the IMDG only cluster cannot recognise.\r\n\r\nThis gives \r\n```\r\ncom.hazelcast.nio.serialization.HazelcastSerializationException: There is no suitable de-serializer for type -302. This exception is likely to be caused by differences in the serialization configuration between members or between clients and members.\r\n```\r\nwhen the remote IMDG only cluster attempts to deserialize the data record.\r\n\r\nRemote source appears to be ok. Jet will receive the data record for `Object[]`. It won't be tagged with -302 and perhaps then gets picked up by default serialization handling from IMDG. Probably needs further investigation to be sure if remote source if ok in general.\r\n\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1444", "user": "neilstevenson", "labels": ["defect"], "created": "2019-06-15 15:07:33", "closed": "2019-09-19 13:14:13", "commits": {}, "ttf": 95.00027777777778, "commitsDetails": []}, {"title": "Incorrect message when auto-scaling is off and coordinator is shut down", "body": "When batch job is running on cluster with more nodes (and auto-scaling is set to `false`) and job coordinator is shutdowned then `TopologyChangedException` with incorrect message is thrown on other members. It shows incorrect time and also execution is set on weird value `0000-0000-0000-0000`:\r\n```\r\nSEVERE: [192.168.1.114]:5701 [jet] [3.1-SNAPSHOT] Execution of job 'e237-6ee0-9112-aa95', execution 0000-0000-0000-0000 failed after 28,037,450 ms\r\ncom.hazelcast.jet.core.TopologyChangedException\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.completeMasterContextIfJobAlreadyCompleted(JobCoordinationService.java:793)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.startJobIfNotStartedOrCompleted(JobCoordinationService.java:765)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.lambda$joinSubmittedJob$7(JobCoordinationService.java:264)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.lambda$submitToCoordinatorThread$30(JobCoordinationService.java:897)\r\n\tat com.hazelcast.util.executor.CompletableFutureTask.run(CompletableFutureTask.java:67)\r\n\tat com.hazelcast.util.executor.CachedExecutorServiceDelegate$Worker.run(CachedExecutorServiceDelegate.java:227)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1436", "user": "olukas", "labels": ["defect"], "created": "2019-06-11 13:17:51", "closed": "2019-06-13 11:36:32", "commits": {"8f2a99b8a7dbb9ab187650b3ef76df40c4dbf9c4": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8f2a99b8a7dbb9ab187650b3ef76df40c4dbf9c4", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["4d32a771a50bff386a67defaf4be55f4e072e509"], "nameRev": "8f2a99b8a7dbb9ab187650b3ef76df40c4dbf9c4 tags/v3.1~6", "commitMessage": "Always initialize executionStartTime (#1437)\n\nFixes #1436.\r\n\r\nIt fixes the execution duration when the `executionStartTime` was not\r\ninitialized and was 0. On Linux `System.nanoTime` returns 0 at about OS\r\nboot, which explains the 8 hours of runtime. The value was printed\r\nbecause we've set the `executionStartTime` deeply in `tryStartJob`, but\r\nthis time the job was finalized before `tryStartJob` was called. Also\r\nmoves the initialization of `executionStartTime` at the very beginning\r\nof `tryStartJob` because other exceptions could lead to garbage duration\r\nlogged.\r\n\r\nThe commit does not fix the \"execution 0000-0000-0000-0000\" - it means\r\nthat no execution began yet. It might be surprising, but it's at least\r\nnot a garbage value.", "commitDateTime": "2019-06-13 13:36:31", "authoredDateTime": "2019-06-13 13:36:31", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterJobContext.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterJobContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext.resolveDagAndCL(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Snapshotting logs too verbose", "body": "When I enable fault-tolerance then I see this every 10s:\r\n```\r\n[2019-06-02 19:50:14.266] [INFO   ] com.hazelcast.jet.impl.MasterSnapshotContext - [10.0.0.158]:5701 [jet] [3.0] Starting snapshot 62 for job 'tempJob', execution 3815-4e34-a33b-d1ba \r\n[2019-06-02 19:50:14.656] [INFO   ] com.hazelcast.jet.impl.MasterSnapshotContext - [10.0.0.158]:5701 [jet] [3.0] Snapshot 62 for job 'tempJob', execution 3815-4e34-a33b-d1ba completed with status SUCCESS in 402ms, 25\u00a0004 bytes, 484 keys in 14 chunks, stored in '__jet.snapshot.ab01-9013-a145-4b95.0' \r\n```\r\n\r\nThis seems to be excessive, snapshoting is business as usual, no need to bother user when everything is going fine.\r\n\r\nSome thoughts:\r\n1. Perhaps 10s is too aggressive default?\r\n2. Perhaps we could still log on INFO/WARNING when it takes < threshold. \r\n\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1425", "user": "jerrinot", "labels": ["core", "defect"], "created": "2019-06-02 17:52:45", "closed": "2019-08-27 06:41:14", "commits": {"e387c2aa91b73335bcbf27f7eadfa865e552407f": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 85.00027777777778, "commitsDetails": [{"commitHash": "e387c2aa91b73335bcbf27f7eadfa865e552407f", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["bfcf677a1a4b3a4b294d4b4d0135e0db19f3ae04"], "nameRev": "e387c2aa91b73335bcbf27f7eadfa865e552407f tags/v3.2~59", "commitMessage": "Reduce visibility of snapshot logs (#1573)\n\nFixes #1425", "commitDateTime": "2019-08-27 08:41:13", "authoredDateTime": "2019-08-27 08:41:13", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterSnapshotContext.java", "insertions": 11, "deletions": 9, "lines": 20}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/LoggingUtil.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartStressTestBase.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSnapshotContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.MasterSnapshotContext.tryBeginSnapshot()", "TOT": 12, "UPD": 5, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterSnapshotContext.onSnapshotCompleted(java.util.Collection,long,long,java.lang.String,boolean,boolean,java.util.concurrent.CompletableFuture)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LoggingUtil.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.LoggingUtil.logFine(com.hazelcast.logging.ILogger,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRestartStressTestBase.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobRestartStressTestBase.stressTest(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Classloading issue when a job submitted via jet.sh", "body": "When I submitted a JAR file which shades log4j logger I do get the following exception.\r\n\r\n```\r\npicocli.CommandLine$ExecutionException: Error while calling command (public void com.hazelcast.jet.server.JetCommandLine.submit(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String,java.lang.String,java.io.File,java.util.List) throws java.lang.Exception): java.lang.reflect.InvocationTargetException\r\n    at picocli.CommandLine.execute(CommandLine.java:1207)\r\n    at picocli.CommandLine.access$800(CommandLine.java:141)\r\n    at picocli.CommandLine$RunAll.handle(CommandLine.java:1416)\r\n    at picocli.CommandLine$RunAll.handle(CommandLine.java:1376)\r\n    at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1243)\r\n    at picocli.CommandLine.parseWithHandlers(CommandLine.java:1526)\r\n    at com.hazelcast.jet.server.JetCommandLine.runCommandLine(JetCommandLine.java:153)\r\n    at com.hazelcast.jet.server.JetCommandLine.main(JetCommandLine.java:131)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke(Method.java:498)\r\n    at com.hazelcast.jet.server.JetBootstrap.executeJar(JetBootstrap.java:146)\r\n    at com.hazelcast.jet.server.JetCommandLine.submit(JetCommandLine.java:197)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke(Method.java:498)\r\n    at picocli.CommandLine.execute(CommandLine.java:1189)\r\n    ... 7 more\r\nCaused by: java.lang.NoClassDefFoundError: org/apache/log4j/Logger\r\n    at com.hazelcast.logging.Log4jFactory.createLogger(Log4jFactory.java:29)\r\n    at com.hazelcast.logging.LoggerFactorySupport$1.createNew(LoggerFactorySupport.java:32)\r\n    at com.hazelcast.logging.LoggerFactorySupport$1.createNew(LoggerFactorySupport.java:30)\r\n    at com.hazelcast.util.ConcurrencyUtil.getOrPutIfAbsent(ConcurrencyUtil.java:125)\r\n    at com.hazelcast.logging.LoggerFactorySupport.getLogger(LoggerFactorySupport.java:38)\r\n    at com.hazelcast.logging.Logger.getLogger(Logger.java:110)\r\n    at com.hazelcast.logging.Logger.getLogger(Logger.java:64)\r\n    at com.hazelcast.jet.Jet.<clinit>(Jet.java:61)\r\n    at com.hazelcast.jet.server.JetBootstrap.lambda$static$0(JetBootstrap.java:105)\r\n    at com.hazelcast.jet.impl.util.ConcurrentMemoizingSupplier.get(ConcurrentMemoizingSupplier.java:50)\r\n    at com.hazelcast.jet.server.JetBootstrap.getInstance(JetBootstrap.java:170)\r\n    at com.hazelcast.jet.benchmark.trademonitor.JetTradeMonitor.main(JetTradeMonitor.java:124)\r\n    ... 18 more\r\nCaused by: java.lang.ClassNotFoundException: org.apache.log4j.Logger\r\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:382)\r\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)\r\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n    ... 30 more\r\n```\r\n\r\nIt appears that the classes inside the JAR file is not loaded by the job submitting JVM.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1420", "user": "eminn", "labels": ["defect"], "created": "2019-05-29 14:04:45", "closed": "2020-03-02 08:45:32", "commits": {}, "ttf": 277.0002777777778, "commitsDetails": []}, {"title": "`jet.sh submit` doesn't allow arbitrary arguments for the jar", "body": "This command:\r\n\r\n```unix\r\n$ jet.sh submit myJob.jar --jobOption option\r\n```\r\nproduces:\r\n```\r\nUnknown option: --jobOption\r\n```\r\nWhile \r\n```unix\r\n$ jet.sh submit myJob.jar option\r\n```\r\nproduces:\r\n```\r\nSubmitting JAR 'myJob.jar' with arguments [option]\r\n```\r\n\r\nAny option after the jar name should be passed verbatim to the `main` method in the jar.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1401", "user": "viliam-durina", "labels": ["cli", "defect"], "created": "2019-05-21 10:17:15", "closed": "2019-05-24 12:03:14", "commits": {"4f2951fc41b35ec7eccea62abb1f0fcfcb302e07": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "4f2951fc41b35ec7eccea62abb1f0fcfcb302e07", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["da8d986b2b0e2f032bc548ee738cb31852e86481"], "nameRev": "4f2951fc41b35ec7eccea62abb1f0fcfcb302e07 tags/v3.1~26", "commitMessage": "Test `jet.sh submit` and fix options for the jar (#1409)\n\n* Test `jet.sh submit` and fix options for the jar\r\n\r\nThe syntax of submit command is\r\n\r\n  jet.sh submit [options] <jarFile> [<argsForJarFile>...]\r\n\r\nHowever, if the argument for jar file contained an option starting with\r\n\"-\", it was an option of the submit command and the script failed. This\r\nwas fixed by setting a flag on picocli parser.\r\n\r\nAlso adds test for the `submit` command. In `JetBootstrap` a possibility\r\nto set the client was added.\r\n\r\nFixes #1401\r\n\r\n* Improve logging on jet submit to include job name and snapshot name\r\n\r\nFixes #1349\r\n", "commitDateTime": "2019-05-24 14:03:13", "authoredDateTime": "2019-05-24 14:03:13", "commitGitStats": [{"filePath": "hazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetBootstrap.java", "insertions": 13, "deletions": 24, "lines": 37}, {"filePath": "hazelcast-jet-all/src/main/java/com/hazelcast/jet/server/JetCommandLine.java", "insertions": 17, "deletions": 7, "lines": 24}, {"filePath": "hazelcast-jet-all/src/test/java/com/hazelcast/jet/server/JetCommandLineTest.java", "insertions": 77, "deletions": 2, "lines": 79}, {"filePath": "hazelcast-jet-all/src/test/resources/com/hazelcast/jet/server/testjob.jar", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetBootstrap.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetBootstrap", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.server.JetBootstrap.executeJar(com.hazelcast.client.config.ClientConfig,java.lang.String,java.lang.String,java.lang.String,java.util.List)", "TOT": 8, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.server.JetBootstrap.getInstance()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetBootstrap.InstanceProxy", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetBootstrap.InstanceProxy.newJob(com.hazelcast.jet.core.DAG)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetBootstrap.executeJar(java.util.function.Supplier,java.lang.String,java.lang.String,java.lang.String,java.util.List)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetCommandLine.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.call()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.suspend(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.cancel(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.saveSnapshot(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String,java.lang.String,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.deleteSnapshot(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.restart(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.resume(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listJobs(com.hazelcast.jet.server.JetCommandLine$Verbosity,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.listSnapshots(com.hazelcast.jet.server.JetCommandLine$Verbosity)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.cluster(com.hazelcast.jet.server.JetCommandLine$Verbosity)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.submit(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.lang.String,java.lang.String,java.io.File,java.util.List)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.runWithJet(com.hazelcast.jet.server.JetCommandLine$Verbosity,java.util.function.Consumer)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.getJetClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLine.runCommandLine(java.util.function.Function,java.io.PrintStream,java.io.PrintStream,boolean,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetCommandLineTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.setup()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.run(java.lang.String[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.beforeClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.afterClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.after()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.test_submit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.test_submit_clientShutdownWhenDone()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.test_submit_nameUsed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.server.JetCommandLineTest.test_submit_argsPassing()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "StreamSource without createSnapshotFn throws NPE during job restart", "body": "_master_ (commit 2326ffae153c1fbf17bbddda1b021a6aae762917)\r\n\r\nIn case when `StreamSource` is created by `SourceBuilder` and `createSnapshotFn`/`restoreSnapshotFn` is not configured then NPE is thrown when job is restarted. It leads to failing that job.\r\n\r\nThis is regression - it works correctly with Hazelcast jet 3.0 - job is restarted and running there.\r\n\r\nThrown NPE:\r\n```\r\nINFO: [192.168.86.58]:5701 [jet] [3.1-SNAPSHOT] Starting snapshot 0 for job 'fb8a-cf67-785f-2084', execution 18f0-8b91-e41c-22b7, terminal\r\nMay 21, 2019 8:20:24 AM com.hazelcast.jet.impl.execution.TaskletExecutionService\r\nWARNING: [192.168.86.58]:5701 [jet] [3.1-SNAPSHOT] Exception in ProcessorTasklet{src#0}\r\njava.lang.NullPointerException\r\n\tat com.hazelcast.jet.impl.connector.ConvenientSourceP.saveToSnapshot(ConvenientSourceP.java:145)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:327)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:232)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:239)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nSimplest way for reproduction this issue is remove `createSnapshotFn` and `restoreSnapshotFn` from this `test_faultTolerance()` test - https://github.com/hazelcast/hazelcast-jet/blob/2326ffa/hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SourceBuilderTest.java#L332", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1399", "user": "olukas", "labels": ["defect", "pipeline-api"], "created": "2019-05-21 06:34:13", "closed": "2019-05-23 13:17:34", "commits": {"b68d2da557971c44977ce1eb4ba7f74640e9a923": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "b68d2da557971c44977ce1eb4ba7f74640e9a923", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["14600ce24926ccc900bad0e7726a1daaf9e382c5"], "nameRev": "b68d2da557971c44977ce1eb4ba7f74640e9a923 tags/v3.1~28", "commitMessage": "Fix snapshots without FT in SourceBuilder (#1400)\n\nFixes #1399", "commitDateTime": "2019-05-23 15:17:33", "authoredDateTime": "2019-05-23 15:17:33", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/SourceBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JetTestSupport.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartStressTestBase.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartWithSnapshotTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/OperationLossTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SourceBuilderTest.java", "insertions": 27, "deletions": 0, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SourceBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.SourceBuilder", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetTestSupport.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JetTestSupport.waitForFirstSnapshot(com.hazelcast.jet.impl.JobRepository,long,int)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.JetTestSupport.waitForFirstSnapshot(com.hazelcast.jet.impl.JobRepository,long,int,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRestartStressTestBase.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobRestartStressTestBase.stressTest(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRestartWithSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobRestartWithSnapshotTest.when_nodeDown_then_jobRestartsFromSnapshot(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OperationLossTest.java", "spoonMethods": []}, {"spoonFilePath": "SourceBuilderTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.SourceBuilderTest.test_faultToleranceUnspecified_and_snapshotsOn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Classloading issue when using mapUsingImap(mapName, lookupKeyFn, mapFn)", "body": "I have been debugging a class loading issue between Jet & hazelcast. Below is the setup:\r\n1. Standalone jet/hazelcast cluster\r\n2. Remote client (java webapp) submits 2 pipelines (adds all relevant classes and jars in classpath to jobconfig):\r\np1: load data from disk to an Imap which has an indexed field \r\np2: data pipeline operation \r\n\r\n3. User Code deployment enable on both server and client.  Some classes (just the Map V classes) added on the client side for user code deployment\r\n\r\n\r\np1:\r\n```java\r\nBatchStage<ViewerVO> stage = pipeline\r\n  .drawFrom(SourceBuilder\r\n    .batch(\"file-source\", c -> {\r\n        log.info(\"No of Files:\" + files.size());                                                                      \r\n        log.info(\"Total parallelism:\" + c.totalParallelism());\r\n        log.info(\"Global Index parallelism:\" + c.globalProcessorIndex());\r\n        List<List<URI>> partitionedFiles =  DistributedUtils\r\n                          .partition(files, c.totalParallelism());\r\n        log.info(\"No of partitions:\" + partitionedFiles.size());\r\n        return FileUtils.concatStreams(c.globalProcessorIndex() < partitionedFiles.size() ?\r\n                        partitionedFiles.get(c.globalProcessorIndex()) :\r\n                        Collections.emptyList());\r\n    }                         \r\n    )\r\n    .<String>fillBufferFn((in, buf) -> {\r\n        String line = in.readLine();\r\n        if (line == null) {\r\n           buf.close();                \r\n           return;\r\n        }         \r\n        buf.add(line);                             \r\n    })\r\n    .distributed(4)\r\n    .build())    \r\n  .map(l -> parseViewer(l));\r\n\r\nstage\r\n.<Entry<Object, Viewer>>map(vv -> Util.entry(vv.getId(), vv.getViewer()))\r\n.drainTo(Sinks.map(DistributedCollectionUtils.getDefaultCollectionName(Viewer.class)));\r\n\r\nstage\r\n.<Entry<Object, ViewerSegments>>map(vv -> Util.entry(vv.getId(), vv.getViewerSegments()))\r\n.drainTo(Sinks.map(DistributedCollectionUtils.getDefaultCollectionName(ViewerSegments.class)));\r\n```\r\n\r\np2:\r\n```java\r\nDataPipeline pipeline = DataPipeline.create();\t\r\nfinal String resultId = pipeline.getResultId();\r\nfinal Predicate<Object, ViewerSegments> predicate = predicate1;\r\n\r\npipeline\r\n .<Entry<Object, ViewerSegments>>drawFrom(Sources.map(IDistributedEntity.getDefaultCollectionName(ViewerSegments.class),\r\n\t\t\t\t\t\t\tpredicate, \r\n\t\t\t\t\t\t\tProjections.identity()))\r\n .<Object, Viewer, Viewer>mapUsingIMap(DistributedCollectionUtils.getDefaultCollectionName(Viewer.class), vs -> vs.getKey(), (e,viewer) -> viewer) \r\n .groupingKey(viewer -> viewer.getDma())\r\n .aggregate(AggregateOperations.counting())\r\n .drainTo(Sinks.map(resultId));\r\n```\r\n\r\nExecution of p2 results in a class not found error:\r\n```\r\n2019-05-12 21:53:53.081 ERROR 23204 --- [.async.thread-2] com.hazelcast.jet.impl.MasterJobContext  : [127.0.0.1]:5701 [local] [3.0] Execution of job '8253-fb08-e162-69cf', execution b8f0-0a19-7b89-02f6 failed after 151,138 ms\r\nCaused by: java.lang.ClassCastException: xxx.Viewer cannot be cast to xxx.Viewer\r\n\tat com.hazelcast.jet.function.BiFunctionEx.apply(BiFunctionEx.java:41) ~[hazelcast-jet-3.0.jar:3.0]\r\n\tat com.hazelcast.jet.pipeline.GeneralStage.lambda$null$0(GeneralStage.java:440) ~[hazelcast-jet-3.0.jar:3.0]\r\n\tat java.util.concurrent.CompletableFuture.uniApply(CompletableFuture.java:602) ~[na:1.8.0_121]\r\n\tat java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:577) ~[na:1.8.0_121]\r\n\tat java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474) ~[na:1.8.0_121]\r\n\tat java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962) ~[na:1.8.0_121]\r\n\tat com.hazelcast.jet.Util$1.onResponse(Util.java:170) ~[hazelcast-jet-3.0.jar:3.0]\r\n\tat com.hazelcast.util.executor.DelegatingFuture$DelegatingExecutionCallback.onResponse(DelegatingFuture.java:177) ~[hazelcast-3.12.jar:3.12]\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:256) ~[hazelcast-3.12.jar:3.12]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_121]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_121]\r\n\tat java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_121]\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64) ~[hazelcast-3.12.jar:3.12]\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80) ~[hazelcast-3.12.jar:3.12]\r\n```\r\n\r\n\r\nMy own debugging reveals the following:\r\n1. P1 was earlier failing if indexing was enabled (on ViewerSegments) and I did not add the Map V classes in userCodedeployment settings on client. After I added these classes, P1 started working. Ideally, I think I should not have to add classes to userCodedeployment. The JetClassLoader should be passed down to the partiton thread.\r\n\r\n2. P2 still fails. Apparently, since the same class is being loaded by both JetClassLoader and UserCodeDeploymentClassLoader. \r\n\r\nWhy is the JetClassLoader not visible to Partition threads to avoid the duplicate class loading?\r\nOr, alternately, make the UserCodeDepoymentClassLoader parent to JetClassLoader.\r\n\r\nAny suggestions?\r\n\r\nthanks!!\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1393", "user": "rajivgandhi1", "labels": ["core", "defect"], "created": "2019-05-13 05:09:44", "closed": "2019-05-22 11:34:26", "commits": {"14600ce24926ccc900bad0e7726a1daaf9e382c5": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "14600ce24926ccc900bad0e7726a1daaf9e382c5", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["cc648f7ea1c9e8ca275e95361d1e38a77976b5a4"], "nameRev": "14600ce24926ccc900bad0e7726a1daaf9e382c5 tags/v3.1~29", "commitMessage": "Make IMDG's class loader parent of JetClassLoader (#1395)\n\nFixes #1393\r\n\r\nAlso includes:\r\n* Use `JetClassLoader` in `Processor.init()` and `close()` methods", "commitDateTime": "2019-05-22 13:34:25", "authoredDateTime": "2019-05-22 13:34:25", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobExecutionService.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterJobContext.java", "insertions": 5, "deletions": 12, "lines": 17}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/TaskletExecutionService.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JetTestSupport.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/AbstractDeploymentTest.java", "insertions": 33, "deletions": 4, "lines": 37}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/ClientDeploymentTest.java", "insertions": 37, "deletions": 2, "lines": 39}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/LoadPersonIsolated.java", "insertions": 28, "deletions": 2, "lines": 30}, {"filePath": "hazelcast-jet-core/src/test/resources/Car.class.gz", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-core/src/test/resources/Person$Appereance.class.gz", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-core/src/test/resources/Person.class.gz", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-core/src/test/resources/cp1/com/sample/pojo/person/Person.class", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-core/src/test/resources/cp2/com/sample/pojo/car/Car.class", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JobExecutionService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobExecutionService.getClassLoader(com.hazelcast.jet.config.JobConfig,long)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JobExecutionService.completeExecution(long,java.lang.Throwable)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MasterJobContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext.tryStartJob(java.util.function.Function)", "TOT": 20, "UPD": 4, "INS": 1, "MOV": 7, "DEL": 8}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext.invokeStartExecution()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext.invokeCompleteExecution(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext.finalizeJob(java.lang.Throwable)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext.getResult(java.lang.String,java.util.Collection)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext.groupResponses(java.util.Collection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterJobContext.swapContextClassLoader(java.lang.ClassLoader)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TaskletExecutionService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.TaskletExecutionService.submitCooperativeTasklets(com.hazelcast.jet.impl.execution.TaskletExecutionService$ExecutionTracker,java.lang.ClassLoader,java.util.List)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.TaskletExecutionService.trackersToString()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.Util.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.Util.doWithClassLoader(java.lang.ClassLoader,com.hazelcast.jet.impl.util.Util$RunnableExc)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.Util", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetTestSupport.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JetTestSupport.assertTask(com.hazelcast.jet.impl.util.Util.RunnableExc).1.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.JetTestSupport.assertTask(com.hazelcast.jet.impl.util.Util.RunnableExc)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractDeploymentTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.deployment.AbstractDeploymentTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.AbstractDeploymentTest.testDeployment_whenJarAddedAsResource_thenClassesAvailableOnClassLoader()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.AbstractDeploymentTest.testDeployment_whenClassAddedAsResource_thenClassAvailableOnClassLoader()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.AbstractDeploymentTest.testDeployment_whenClassAddedAsResource_then_availableInDestroyWhenCancelled()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientDeploymentTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.deployment.ClientDeploymentTest.createCluster(com.hazelcast.jet.config.JetConfig,com.hazelcast.jet.config.JetClientConfig)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.ClientDeploymentTest.when_classAddedUsingUcd_then_visibleToJet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.ClientDeploymentTest.createCluster()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 0}]}, {"spoonFilePath": "LoadPersonIsolated.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.deployment.LoadPersonIsolated.complete()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.LoadPersonIsolated", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.LoadPersonIsolated.init(com.hazelcast.jet.impl.deployment.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.LoadPersonIsolated.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "hazelcast.jet.config is ignored if given file does not have file extension \"xml\", \"yaml\" or \"yml\"", "body": "Jet counterpart of https://github.com/hazelcast/hazelcast/issues/14924", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1380", "user": "eminn", "labels": ["defect"], "created": "2019-04-26 08:34:20", "closed": "2019-05-07 07:30:49", "commits": {"28149ba048f92b61e8974994b34615b9f1711731": {"commitGHEventType": "referenced", "commitUser": "eminn"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "28149ba048f92b61e8974994b34615b9f1711731", "commitGHEventType": "referenced", "commitUser": "eminn", "commitParents": ["c3299e20837fa62b7c9ece5ad27048c05414a9c7"], "nameRev": "28149ba048f92b61e8974994b34615b9f1711731 tags/v3.1~41", "commitMessage": "Fix regression in declarative config file resolution (#1383)\n\n* Changed behavior to treat an XML configuration file which has a non .xml\r\nfile extension as XML files to satisfy backwards compatibility.\r\n\r\nYAML configuration has a stricter requirement on file extensions\r\nwhich only accepts .yaml or .yml extension.\r\n\r\nFixes #1380\r\n\r\n* Checkstyle fixes\r\n", "commitDateTime": "2019-05-07 10:30:48", "authoredDateTime": "2019-05-07 10:30:48", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/ConfigProvider.java", "insertions": 12, "deletions": 11, "lines": 23}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/XmlJetClientConfigLocator.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/XmlJetConfigLocator.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/XmlJetMemberConfigLocator.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/YamlJetClientConfigLocator.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/YamlJetConfigBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/YamlJetConfigLocator.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/YamlJetMemberConfigLocator.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/AbstractJetConfigLoadFromFileSystemOrClasspathTest.java", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/AbstractJetConfigWithSystemPropertyTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/JetConfigIllegalArgumentsTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/XmlConfigTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/XmlJetConfigImportVariableReplacementTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/XmlJetConfigLoadFromFileSystemOrClasspathTest.java", "insertions": 4, "deletions": 30, "lines": 34}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/XmlJetConfigWithSystemPropertyTest.java", "insertions": 58, "deletions": 1, "lines": 59}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigImportVariableReplacementTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigLoadFromFileSystemOrClasspathTest.java", "insertions": 3, "deletions": 30, "lines": 33}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/YamlJetConfigWithSystemPropertyTest.java", "insertions": 73, "deletions": 1, "lines": 74}, {"filePath": "hazelcast-jet-core/src/test/resources/hazelcast-jet-foo.bar", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "hazelcast-jet-core/src/test/resources/hazelcast-jet-test.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/resources/hazelcast-jet-test.yaml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConfigProvider.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.ConfigProvider.locateAndGetJetConfig(java.util.Properties)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.ConfigProvider.locateAndGetClientConfig()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "XmlJetClientConfigLocator.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetClientConfigLocator.locateFromSystemProperty()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetClientConfigLocator", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlJetConfigLocator.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigLocator.locateFromSystemProperty()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigLocator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlJetMemberConfigLocator.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetMemberConfigLocator.locateFromSystemProperty()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetMemberConfigLocator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlJetClientConfigLocator.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.YamlJetClientConfigLocator", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlJetConfigBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.YamlJetConfigBuilder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlJetConfigLocator.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.YamlJetConfigLocator", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlJetMemberConfigLocator.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.YamlJetMemberConfigLocator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractJetConfigLoadFromFileSystemOrClasspathTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.AbstractJetConfigLoadFromFileSystemOrClasspathTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.config.AbstractJetConfigLoadFromFileSystemOrClasspathTest.when_fileSystemPathSpecified_usesSpecifiedFile()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.config.AbstractJetConfigLoadFromFileSystemOrClasspathTest.when_classpathSpecified_usesSpecifiedResource()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractJetConfigWithSystemPropertyTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.AbstractJetConfigWithSystemPropertyTest.assertConfig(com.hazelcast.jet.config.JetConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetConfigIllegalArgumentsTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetConfigIllegalArgumentsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlConfigTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.XmlConfigTest.assertConfig(com.hazelcast.jet.config.JetConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.XmlConfigTest.when_configHasVariable_variablesAreReplaced()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlJetConfigImportVariableReplacementTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigImportVariableReplacementTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlJetConfigLoadFromFileSystemOrClasspathTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigLoadFromFileSystemOrClasspathTest.when_fileSystemPathSpecified_usesSpecifiedFile()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigLoadFromFileSystemOrClasspathTest.when_classpathSpecified_usesSpecifiedResource()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigLoadFromFileSystemOrClasspathTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlJetConfigWithSystemPropertyTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigWithSystemPropertyTest.when_configHasVariable_variablesAreReplaced()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigWithSystemPropertyTest.when_filePathMemberSpecifiedNonExistingNonXmlFile_thenThrowsException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigWithSystemPropertyTest.when_classpathMemberSpecifiedNonExistingNonXmlFile_thenThrowsException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigWithSystemPropertyTest.when_filePathSpecifiedNonXml_then_loadedAsXml()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigWithSystemPropertyTest.when_classPathSpecifiedNonXml_then_loadedAsXml()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.XmlJetConfigWithSystemPropertyTest.loadingThroughSystemPropertyViaLocator_nonXmlSuffix()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlJetConfigImportVariableReplacementTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigImportVariableReplacementTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlJetConfigLoadFromFileSystemOrClasspathTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigLoadFromFileSystemOrClasspathTest.when_fileSystemPathSpecified_usesSpecifiedFile()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigLoadFromFileSystemOrClasspathTest.when_classpathSpecified_usesSpecifiedResource()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigLoadFromFileSystemOrClasspathTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlJetConfigWithSystemPropertyTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigWithSystemPropertyTest.when_configHasVariable_variablesAreReplaced()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigWithSystemPropertyTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigWithSystemPropertyTest.when_filePathSpecifiedNonExistingNonYamlFile_thenThrowsException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigWithSystemPropertyTest.when_filePathMemberSpecifiedNonExistingNonYamlFile_thenThrowsException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigWithSystemPropertyTest.when_classpathSpecifiedNonExistingNonYamlFile_thenThrowsException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigWithSystemPropertyTest.when_classpathMemberSpecifiedNonExistingNonYamlFile_thenThrowsException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigWithSystemPropertyTest.loadingThroughSystemPropertyWithLocator_nonYamlSuffix()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.YamlJetConfigWithSystemPropertyTest.loadingThroughSystemPropertyWithLocator_existingClasspathResource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Job is sometimes not restarted on bigger brain after split brain", "body": "### Issue description:\r\nWhen job is started on Jet cluster and split brain occurs then job is not restarted on bigger brain if job coordinator is on any of members on bigger brain. It is restarted correctly on bigger brain if job coordinator was on member which is in smaller brain.\r\n\r\nOutput + Exceptions which are thrown in member on bigger part and which was job coordinator (there was cluster with 3 members and split brain splits it two clusters with 2 members and 1 member):\r\n```\r\nApr 18, 2019 1:25:07 PM com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor\r\nINFO: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] Invocations:99 timeouts:1 backup-timeouts:0\r\nApr 18, 2019 1:25:20 PM com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager\r\nWARNING: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] Suspecting Member [192.168.86.119]:5701 - 10a00e92-8da0-4e48-8294-7001027b48f8 because it has not sent any heartbeats since 2019-04-18 13:24:16.553. Now: 2019-04-18 13:25:20.400, heartbeat timeout: 60000 ms, suspicion level: 1.00\r\nApr 18, 2019 1:25:20 PM com.hazelcast.nio.tcp.TcpIpConnection\r\nINFO: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] Connection[id=2, /192.168.86.57:5701->/192.168.86.119:41701, qualifier=null, endpoint=[192.168.86.119]:5701, alive=false, type=MEMBER] closed. Reason: Suspecting Member [192.168.86.119]:5701 - 10a00e92-8da0-4e48-8294-7001027b48f8 because it has not sent any heartbeats since 2019-04-18 13:24:16.553. Now: 2019-04-18 13:25:20.400, heartbeat timeout: 60000 ms, suspicion level: 1.00\r\nApr 18, 2019 1:25:20 PM com.hazelcast.internal.cluster.impl.MembershipManager\r\nINFO: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] Removing Member [192.168.86.119]:5701 - 10a00e92-8da0-4e48-8294-7001027b48f8\r\nApr 18, 2019 1:25:20 PM com.hazelcast.internal.cluster.ClusterService\r\nINFO: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] \r\n\r\nMembers {size:2, ver:4} [\r\n\tMember [192.168.86.57]:5701 - 3e32cca5-fa73-4f1e-a7ca-b0a5f7c15c1a this\r\n\tMember [192.168.86.57]:5702 - 245ea079-dc00-4b6a-803e-50606a5d371a\r\n]\r\n\r\nApr 18, 2019 1:25:20 PM com.hazelcast.nio.tcp.TcpIpConnector\r\nINFO: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] Connecting to /192.168.86.119:5701, timeout: 10000, bind-any: true\r\nApr 18, 2019 1:25:20 PM com.hazelcast.transaction.TransactionManagerService\r\nINFO: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] Committing/rolling-back live transactions of [192.168.86.119]:5701, UUID: 10a00e92-8da0-4e48-8294-7001027b48f8\r\nApr 18, 2019 1:25:20 PM com.hazelcast.jet.impl.JobCoordinationService\r\nWARNING: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] Exception during member state check\r\ncom.hazelcast.core.MemberLeftException: Member [192.168.86.119]:5701 - 10a00e92-8da0-4e48-8294-7001027b48f8 has left cluster!\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor$OnMemberLeftTask.onTargetLoss(InvocationMonitor.java:424)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor$OnMemberLeftTask.run0(InvocationMonitor.java:391)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor$MonitorTask.run(InvocationMonitor.java:250)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:126)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:79)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:163)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.lambda$allMembersHaveSameState$21(JobCoordinationService.java:534)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n\tat java.util.ArrayList$ArrayListSpliterator.tryAdvance(ArrayList.java:1359)\r\n\tat java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)\r\n\tat java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)\r\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\r\n\tat java.util.stream.MatchOps$MatchOp.evaluateSequential(MatchOps.java:230)\r\n\tat java.util.stream.MatchOps$MatchOp.evaluateSequential(MatchOps.java:196)\r\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.util.stream.ReferencePipeline.allMatch(ReferencePipeline.java:454)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.allMembersHaveSameState(JobCoordinationService.java:547)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.shouldStartJobs(JobCoordinationService.java:499)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.scanJobs(JobCoordinationService.java:834)\r\n\tat com.hazelcast.spi.impl.executionservice.impl.DelegateAndSkipOnConcurrentExecutionDecorator$DelegateDecorator.run(DelegateAndSkipOnConcurrentExecutionDecorator.java:77)\r\n\tat com.hazelcast.util.executor.CachedExecutorServiceDelegate$Worker.run(CachedExecutorServiceDelegate.java:227)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n\r\nApr 18, 2019 1:25:20 PM com.hazelcast.jet.impl.MasterJobContext\r\nSEVERE: [192.168.86.57]:5701 [jet] [3.1-SNAPSHOT] Execution of job '261e-4751-83fe-e5a8', execution cabb-fef7-0116-6aa2 failed after 75,323 ms\r\ncom.hazelcast.core.OperationTimeoutException: StartExecutionOperation invocation failed to complete due to operation-heartbeat-timeout. Current time: 2019-04-18 13:25:07.520. Start time: 2019-04-18 13:24:05.768. Total elapsed time: 61754 ms. Last operation heartbeat: 2019-04-18 13:24:06.711. Last operation heartbeat from member: 2019-04-18 13:24:06.711. Invocation{op=com.hazelcast.jet.impl.operation.StartExecutionOperation{serviceName='hz:impl:jetService', identityHash=587799080, partitionId=-1, replicaIndex=0, callId=-2239, invocationTime=1555586645768 (2019-04-18 13:24:05.768), waitTimeout=-1, callTimeout=60000}, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeoutMillis=60000, firstInvocationTimeMs=1555586645768, firstInvocationTime='2019-04-18 13:24:05.768', lastHeartbeatMillis=1555586646711, lastHeartbeatTime='2019-04-18 13:24:06.711', target=[192.168.86.119]:5701, pendingResponse={VOID}, backupsAcksExpected=0, backupsAcksReceived=0, connection=Connection[id=2, /192.168.86.57:5701->/192.168.86.119:41701, qualifier=null, endpoint=[192.168.86.119]:5701, alive=true, type=MEMBER]}\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.newOperationTimeoutException(InvocationFuture.java:163)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:106)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:251)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n```\r\n### Reproducer:\r\nFollowing code is used in reproducer for server and for client:\r\n**Server code:**\r\n```\r\nprivate static void server() {\r\n    JetConfig config = new JetConfig();\r\n    config.getHazelcastConfig().getMapEventJournalConfig(\"source\")\r\n            .setCapacity(100_000)\r\n            .setEnabled(true);\r\n    JetInstance jet = Jet.newJetInstance(config);\r\n\r\n    String property = System.getProperty(\"startProducer\");\r\n    if (property != null && property.equals(\"true\")) {\r\n        Thread producerThread = new Thread(() -> {\r\n            IMapJet<Integer, Integer> map = jet.getMap(\"source\");\r\n            for (int i = 0; i < 1_000_000; i++) {\r\n                map.put(i, i);\r\n                LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(1000));\r\n            }\r\n        });\r\n        producerThread.setDaemon(true);\r\n        producerThread.start();\r\n    }\r\n}\r\n```\r\n\r\n**Client code:**\r\n```\r\nprivate static void client() throws InterruptedException {\r\n    String memberIp = System.getProperty(\"memberIp\");\r\n    if (memberIp == null) {\r\n        throw new RuntimeException(\"memberIp has to be configured for client mode\");\r\n    }\r\n    Pipeline p = Pipeline.create();\r\n    p.drawFrom(Sources.<Integer, Integer>mapJournal(\"source\", START_FROM_OLDEST))\r\n            .withoutTimestamps()\r\n            .map(Map.Entry::getValue)\r\n            .drainTo(logger());\r\n\r\n    ClientConfig config = new ClientConfig();\r\n    config.getGroupConfig().setName(\"jet\");\r\n    config.getNetworkConfig().addAddress(memberIp);\r\n    JetInstance client = Jet.newJetClient(config);\r\n\r\n    JobConfig jobConfig = new JobConfig().setSplitBrainProtection(true);\r\n\r\n    client.newJob(p, jobConfig);\r\n}\r\n```\r\n\r\nEasiest way for `MachineA` and `MachineB` is use to different machines and simulate split brain by removing one of them from network.\r\n\r\n**Steps to reproduce:**\r\n1. Unzip attached reproducer and compile it by `mvn clean package`\r\n2. Start Jet server on `MachineA` which will also be producer for source Map:\r\n`java -DstartProducer=true -jar target/split-brain-reproducer.jar`\r\n3. Start another Jet server on `MachineA` to ensure that `MachineA` is machine with bigger brain:\r\n`java target/split-brain-reproducer.jar`\r\n4. Start Jet server on `MachineB`:\r\n`java target/split-brain-reproducer.jar`\r\n5. Wait until cluster is formed and then run client:\r\n`java -DrunAsClient=true -DmemberIp=${IP_AND_PORT_FIRST_SERVER} -jar target/split-brain-reproducer.jar`\r\n6. Simulate split brain by removing `MachineB` from network and wait ~1minute. In case when job coordinator was on `MachineB` then job is restarted correctly on bigger brain. In case when job coordinator was on `MachineA` then job is not restarted and aforementioned Exception is thrown.\r\n\r\n[split-brain-reproducer.zip](https://github.com/hazelcast/hazelcast-jet/files/3094281/split-brain-reproducer.zip)\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1375", "user": "olukas", "labels": ["core", "defect"], "created": "2019-04-18 11:48:56", "closed": "2019-05-17 06:46:21", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "CLI throws an error if download path includes spaces", "body": "```\r\n emindemirci \ue0b0 ~/Downloads/hazelcast-jet-3.0 2 \ue0b0 \r\n\ue0b1 ./bin/jet-start.sh \r\n########################################\r\n# JAVA=/Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home/bin/java\r\n# JAVA_OPTS= -Dhazelcast.config=/Users/emindemirci/Downloads/hazelcast-jet-3.0 2/config/hazelcast.xml -Djet.home=/Users/emindemirci/Downloads/hazelcast-jet-3.0 2 -Dhazelcast.client.config=/Users/emindemirci/Downloads/hazelcast-jet-3.0 2/config/hazelcast-client.xml -Dhazelcast.jet.config=/Users/emindemirci/Downloads/hazelcast-jet-3.0 2/config/hazelcast-jet.xml\r\n# CLASSPATH=/Users/emindemirci/Downloads/hazelcast-jet-3.0 2/lib/hazelcast-jet-3.0.jar:\r\n# starting now....\r\n########################################\r\nError: Could not find or load main class 2.config.hazelcast.xml\r\nCaused by: java.lang.ClassNotFoundException: 2.config.hazelcast.xml\r\n 1 \ue0b0 emindemirci \ue0b0 ~/Downloads/hazelcast-jet-3.0 2 \ue0b0 \r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1366", "user": "eminn", "labels": ["cli", "defect"], "created": "2019-04-15 09:17:55", "closed": "2019-05-27 09:13:04", "commits": {"b6f13d976e3031e32c6d26c55150d0739273b802": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "b6f13d976e3031e32c6d26c55150d0739273b802", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["4f2951fc41b35ec7eccea62abb1f0fcfcb302e07"], "nameRev": "b6f13d976e3031e32c6d26c55150d0739273b802 tags/v3.1~25", "commitMessage": "Fix running jet scripts directory with space (#1411)\n\nFixes #1366\r\n\r\nNeeded to use bash and arrays, there's no correct way to do it with /bin/sh", "commitDateTime": "2019-05-27 11:13:03", "authoredDateTime": "2019-05-27 11:13:03", "commitGitStats": [{"filePath": "hazelcast-jet-distribution/src/main/resources/bin/common.sh", "insertions": 18, "deletions": 15, "lines": 33}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/jet-start.sh", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/jet-stop.sh", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-distribution/src/main/resources/bin/jet.sh", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Exception for invalid snapshot name is too verbose", "body": "```\r\ncom.hazelcast.jet.JetException: State for job 'Trade Analyser', execution ae85-41b5-8dff-42ff\r\n was supposed to be restored from '__jet.exportedSnapshot.snapshot-4', but \r\nthat map doesn't contain the validation record: not an IMap with Jet snapshot or corrupted\r\n```\r\n\r\nWe should just say specified snapshot name \"snapshot-4\" doesn't exist.\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1348", "user": "cangencer", "labels": ["core", "defect"], "created": "2019-04-02 09:07:45", "closed": "2019-05-24 10:52:33", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "Jet stuck on starting Job", "body": " I'm starting many jobs at once (~30, some are triggered slightly before other). However, when my Hazelcast Jet job count hits 26 (magic number?), all processing got stuck.\r\n\r\nIn the threadumps I see following info:\r\n```\r\n\"hz._hzInstance_1_jet.cached.thread-1\" #37 prio=5 os_prio=0 cpu=1093.29ms elapsed=393.62s tid=0x00007f95dc007000 nid=0x6bfc in Object.wait()  [0x00007f95e6af4000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n    at java.lang.Object.wait(java.base@11.0.2/Native Method)\r\n    - waiting on <no object reference available>\r\n    at com.hazelcast.spi.impl.AbstractCompletableFuture.get(AbstractCompletableFuture.java:229)\r\n    - waiting to re-lock in wait() <0x00000007864b7040> (a com.hazelcast.internal.util.SimpleCompletableFuture)\r\n    at com.hazelcast.spi.impl.AbstractCompletableFuture.get(AbstractCompletableFuture.java:191)\r\n    at com.hazelcast.spi.impl.operationservice.impl.InvokeOnPartitions.invoke(InvokeOnPartitions.java:88)\r\n    at com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl.invokeOnAllPartitions(OperationServiceImpl.java:385)\r\n    at com.hazelcast.map.impl.proxy.MapProxySupport.clearInternal(MapProxySupport.java:1016)\r\n    at com.hazelcast.map.impl.proxy.MapProxyImpl.clearInternal(MapProxyImpl.java:109)\r\n    at com.hazelcast.map.impl.proxy.MapProxyImpl.clear(MapProxyImpl.java:698)\r\n    at com.hazelcast.jet.impl.JobRepository.clearSnapshotData(JobRepository.java:464)\r\n    at com.hazelcast.jet.impl.MasterJobContext.tryStartJob(MasterJobContext.java:233)\r\n    at com.hazelcast.jet.impl.JobCoordinationService.tryStartJob(JobCoordinationService.java:776)\r\n    at com.hazelcast.jet.impl.JobCoordinationService.lambda$submitJob$0(JobCoordinationService.java:200)\r\n    at com.hazelcast.jet.impl.JobCoordinationService$$Lambda$634/0x00000008009ce840.run(Unknown Source)\r\n```\r\n\r\nand also:\r\n\r\n```\r\n\"hz._hzInstance_1_jet.async.thread-2\" #81 prio=5 os_prio=0 cpu=0.00ms elapsed=661.98s tid=0x0000025bb23ef000 nid=0x43bc in Object.wait()  [0x0000005d492fe000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n    at java.lang.Object.wait(java.base@11/Native Method)\r\n    - waiting on <no object reference available>\r\n    at com.hazelcast.spi.impl.AbstractCompletableFuture.get(AbstractCompletableFuture.java:229)\r\n    - waiting to re-lock in wait() <0x0000000725600100> (a com.hazelcast.internal.util.SimpleCompletableFuture)\r\n    at com.hazelcast.spi.impl.AbstractCompletableFuture.get(AbstractCompletableFuture.java:191)\r\n    at com.hazelcast.spi.impl.operationservice.impl.InvokeOnPartitions.invoke(InvokeOnPartitions.java:88)\r\n    at com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl.invokeOnAllPartitions(OperationServiceImpl.java:385)\r\n    at com.hazelcast.map.impl.proxy.MapProxySupport.removeAllInternal(MapProxySupport.java:619)\r\n    at com.hazelcast.map.impl.proxy.MapProxyImpl.removeAll(MapProxyImpl.java:285)\r\n    at com.hazelcast.jet.impl.JobRepository.deleteJob(JobRepository.java:332)\r\n    at com.hazelcast.jet.impl.JobRepository.completeJob(JobRepository.java:316)\r\n    at com.hazelcast.jet.impl.JobCoordinationService.completeJob(JobCoordinationService.java:576)\r\n    at com.hazelcast.jet.impl.MasterJobContext.lambda$finalizeJob$13(MasterJobContext.java:620)\r\n    at com.hazelcast.jet.impl.MasterJobContext$$Lambda$783/0x0000000800b26840.run(Unknown Source)\r\n    at com.hazelcast.jet.impl.MasterJobContext.finalizeJob(MasterJobContext.java:632)\r\n    at com.hazelcast.jet.impl.MasterJobContext.onCompleteExecutionCompleted(MasterJobContext.java:564)\r\n    at com.hazelcast.jet.impl.MasterJobContext.lambda$invokeCompleteExecution$6(MasterJobContext.java:544)\r\n    at com.hazelcast.jet.impl.MasterJobContext$$Lambda$779/0x0000000800b27840.accept(Unknown Source)\r\n    at com.hazelcast.jet.impl.MasterContext.lambda$invokeOnParticipants$0(MasterContext.java:242)\r\n    at com.hazelcast.jet.impl.MasterContext$$Lambda$726/0x0000000800a1c040.accept(Unknown Source)\r\n    at com.hazelcast.jet.impl.util.Util$2.onResponse(Util.java:172)\r\n    at com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:256)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@11/ThreadPoolExecutor.java:1128)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@11/ThreadPoolExecutor.java:628)\r\n    at java.lang.Thread.run(java.base@11/Thread.java:834)\r\n    at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n    at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n```\r\n\r\nMy setup: \r\n- Java 11 \r\n- Hazelcast 3.12 Snapshot \r\n- Hazelcast Jet 3.0 Snapshot (I can't revert to previous version, it will break my logic; I need n:m joins which will be added in 3.1) \r\n- CPU cores: 4 \r\n- RAM: 7 GB \r\n- Jet mode: server, connects to other cluster as a client to insert final data\r\n\r\nSimple repro:\r\n```\r\nimport com.hazelcast.core.IMap;\r\nimport com.hazelcast.jet.Jet;\r\nimport com.hazelcast.jet.JetInstance;\r\nimport com.hazelcast.jet.core.JobStatus;\r\nimport com.hazelcast.jet.pipeline.Pipeline;\r\nimport com.hazelcast.jet.pipeline.Sources;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.concurrent.CompletableFuture;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.stream.Collectors;\r\n\r\nimport static com.hazelcast.jet.aggregate.AggregateOperations.summingDouble;\r\nimport static com.hazelcast.jet.pipeline.Sinks.logger;\r\nimport static java.math.RoundingMode.HALF_UP;\r\nimport static java.util.stream.Collectors.groupingBy;\r\n\r\npublic class JobStuckingReproducer {\r\n\r\n    private static final int NUMBER_OF_JOBS = 30;\r\n    private static volatile boolean shouldRun = true;\r\n\r\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\r\n        JetInstance jet = Jet.newJetInstance();\r\n        List<IMap<Integer, Integer>> maps = new ArrayList<>();\r\n        for (int i = 0; i < NUMBER_OF_JOBS; i++) {\r\n            var map = jet.<Integer, Integer>getMap(\"map\" + i);\r\n            for (int j = 0; j < 10_000; j++) {\r\n                map.put(j, j);\r\n            }\r\n            maps.add(map);\r\n        }\r\n\r\n        List<CompletableFuture<Void>> futures = new ArrayList<>();\r\n        for (int i = 0; i < NUMBER_OF_JOBS; i++) {\r\n            var map = maps.get(i);\r\n            Pipeline p = Pipeline.create();\r\n            p.drawFrom(Sources.map(map))\r\n                    .map(e -> {\r\n                        var bd = new BigDecimal(e.getValue());\r\n\r\n                        return bd.pow(11).subtract(bd.divide(new BigDecimal(19), HALF_UP)); // simulate any CPU usage\r\n                    })\r\n                    .groupingKey(e -> e.setScale(0, HALF_UP).intValue() % 10)\r\n                    .aggregate(summingDouble(e -> e.doubleValue()))\r\n                    .drainTo(logger());\r\n\r\n            var job = jet.newJob(p);\r\n            futures.add(job.getFuture());\r\n        }\r\n\r\n        new Thread(() -> {\r\n            while (shouldRun) {\r\n                try {\r\n                    Thread.sleep(2000);\r\n\r\n                    var jobByStatus = jet.getJobs().stream().collect(groupingBy(e -> e.getStatus(), Collectors.counting()));\r\n                    for (JobStatus status : jobByStatus.keySet()) {\r\n                        System.out.println(\"\\t\" + status + \" -> \" + jobByStatus.get(status));\r\n                    }\r\n                    System.out.println(\"in total: \" + jet.getJobs().size());\r\n                } catch (InterruptedException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n        }, \"jet-jobs-printer\").start();\r\n\r\n        var combined = CompletableFuture.allOf(futures.toArray(new CompletableFuture[0]));\r\n\r\n        combined.get();\r\n        shouldRun = false;\r\n        jet.shutdown();\r\n    }\r\n}\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1339", "user": "TomaszGaweda", "labels": ["core", "defect"], "created": "2019-03-21 09:38:33", "closed": "2019-03-26 16:31:19", "commits": {"ead92da55a333053517511a9a39aadffb5b60180": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "ead92da55a333053517511a9a39aadffb5b60180", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["52bac7d3143926117b628eba55f2fedde0e8ec99"], "nameRev": "ead92da55a333053517511a9a39aadffb5b60180 tags/v3.0~5", "commitMessage": "Offload blocking tasks from async thread (#1340)\n\n* Offload blocking tasks from async thread\r\n\r\nA deadlock is possible when calling methods that execute operations\r\nbacked by `InvokeOnPartitions` from an async thread. This is an issue of\r\nIMDG and it will probably be checked and disallowed in future version\r\n(see hazelcast/hazelcast#14734 for description of the deadlock).\r\n\r\nIn case of Jet, we call `IMap.clear()` and `IMap.removeAll()` as part of\r\nhandling of operation response using `ExecutionCallback`, which is\r\nnormally executed on an async thread, which could cause the deadlock\r\nunder load.\r\n\r\nThe fix in this commit is to offload all such handling to own thread, we\r\nuse the cached thread pool in `JobCoordinationService`.\r\n\r\nFixes #1339\r\n\r\n* Address review\r\n\r\n* Fix retrying of operations (fixes JetCommandLineTest failures)\r\n\r\n* Make all now-async operations extend AsyncOperation\r\n\r\n* Make AsyncOperation.doRun return CompletableFuture\r\n\r\n* refactoring and simplification\r\n\r\n* remove redundant implements\r\n\r\n* Fix deregistering responses\r\n", "commitDateTime": "2019-03-26 17:31:19", "authoredDateTime": "2019-03-26 17:31:19", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 255, "deletions": 201, "lines": 456}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterJobContext.java", "insertions": 14, "deletions": 10, "lines": 24}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterSnapshotContext.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/JetGetJobIdsByNameMessageTask.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/JetGetJobIdsMessageTask.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/JetGetJobStatusMessageTask.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/JetGetJobSubmissionTimeMessageTask.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/JetGetJobSummaryListMessageTask.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/JetTerminateJobMessageTask.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ExecutionContext.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/metrics/management/ReadMetricsOperation.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java", "insertions": 27, "deletions": 6, "lines": 33}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/GetJobIdsByNameOperation.java", "insertions": 4, "deletions": 20, "lines": 24}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/GetJobIdsOperation.java", "insertions": 4, "deletions": 25, "lines": 29}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/GetJobStatusOperation.java", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/GetJobSubmissionTimeOperation.java", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/GetJobSummaryListOperation.java", "insertions": 4, "deletions": 24, "lines": 28}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/JoinSubmittedJobOperation.java", "insertions": 2, "deletions": 10, "lines": 12}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/NotifyMemberShutdownOperation.java", "insertions": 2, "deletions": 7, "lines": 9}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/PrepareForPassiveClusterOperation.java", "insertions": 3, "deletions": 8, "lines": 11}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/SnapshotOperation.java", "insertions": 24, "deletions": 16, "lines": 40}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/StartExecutionOperation.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/SubmitJobOperation.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/TerminateJobOperation.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ParallelStressTest.java", "insertions": 91, "deletions": 0, "lines": 91}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SplitBrainTest.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Sources.fileWatcher re-emits all the lines on Linux", "body": "The fileWatcher is supposed to emit new lines added to a file in a specified directory.\r\n\r\nOn Linux, it emits all the lines in a file every time the line is added and the file is saved. It works properly on macOS.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1323", "user": "vladoschreiner", "labels": ["core", "defect"], "created": "2019-03-08 16:48:56", "closed": "2019-03-11 11:09:08", "commits": {"fe66afd5f51331aee626aa273a622cdfef3e1fb6": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "fe66afd5f51331aee626aa273a622cdfef3e1fb6", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["9f809ec69ac0370a1e4c4d087f6bdf1f17fcdb8f"], "nameRev": "fe66afd5f51331aee626aa273a622cdfef3e1fb6 tags/v3.0~18", "commitMessage": "Add test for picking up multiple additions (#1324)\n\n* Add test for picking up multiple additions\r\n* Add note about text editors\r\n\r\nFixes #1323", "commitDateTime": "2019-03-11 12:09:06", "authoredDateTime": "2019-03-11 12:09:06", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/FileSourceBuilder.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/Sources.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/StreamFilesPTest.java", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileSourceBuilder.java", "spoonMethods": []}, {"spoonFilePath": "Sources.java", "spoonMethods": []}, {"spoonFilePath": "StreamFilesPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.when_multipleLinesAdded_then_seenOneByOne()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Unnecesssary deserialization of map entries", "body": "When we don't use projection or predicate, the member doesn't have to know the value class because no deserialization happens on the remote member. But for `Sources.mapJournal` if we don't use predicate/projection, Jet uses `alwaysTrue()` and `mapEventNewValue()`, which breaks this.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1304", "user": "viliam-durina", "labels": ["defect"], "created": "2019-02-28 16:08:04", "closed": "2019-03-07 14:35:54", "commits": {"f8d0bf89ee26fa9290ddc574d7dab52c03a91de7": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "f8d0bf89ee26fa9290ddc574d7dab52c03a91de7", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["0af5450284ced61d06b2f388efe6cd8ba0b219e5"], "nameRev": "f8d0bf89ee26fa9290ddc574d7dab52c03a91de7 tags/v3.0~21", "commitMessage": "Don't require UCD for remote journal value (#1306)\n\n* Uses the new predicates/projections in imdg that do not require remote\r\ndeserialization.\r\n\r\nFixes #1304\r\n\r\n* Fail fast with missing predicate, better error\r\n\r\nFixes #1158\r\n", "commitDateTime": "2019-03-07 15:35:51", "authoredDateTime": "2019-03-07 15:35:51", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Jet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Util.java", "insertions": 22, "deletions": 6, "lines": 28}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/function/FunctionEx.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/function/PredicateEx.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/StreamEventJournalP.java", "insertions": 28, "deletions": 17, "lines": 45}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP_MigrationDetectionTest.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/StreamEventJournalPTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/StreamEventJournalP_WmCoalescingTest.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/AbstractDeploymentTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/DeploymentTest.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/LoadPersonIsolated.java", "insertions": 0, "deletions": 32, "lines": 32}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SourcesTest.java", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/Sources_withEventJournalTest.java", "insertions": 62, "deletions": 2, "lines": 64}, {"filePath": "hazelcast-jet-core/src/test/resources/deployment/sample-pojo-1.0-car.jar", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "hazelcast-jet-core/src/test/resources/deployment/sample-pojo-1.0-deployment.jar", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jet.java", "spoonMethods": []}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.Util.wrapImdgPredicate(com.hazelcast.util.function.Predicate)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.Util.maybeUnwrapImdgPredicate(com.hazelcast.jet.function.PredicateEx)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.Util.wrapImdgFunction(com.hazelcast.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.Util.maybeUnwrapImdgFunction(com.hazelcast.jet.function.FunctionEx)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.Util.ImdgPredicateWrapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.Util.ImdgFunctionWrapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FunctionEx.java", "spoonMethods": []}, {"spoonFilePath": "PredicateEx.java", "spoonMethods": []}, {"spoonFilePath": "StreamEventJournalP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP.toResultSet(com.hazelcast.core.ICompletableFuture)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP.readFromJournal(int,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP.toProjection(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP.init(com.hazelcast.jet.impl.connector.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadWithPartitionIteratorP_MigrationDetectionTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP_MigrationDetectionTest.when_migration_then_detected(boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "StreamEventJournalPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalPTest.smokeTest()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalPTest.when_newData()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalPTest.when_lostItems()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalPTest.when_lostItems_afterRestore()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalPTest.when_futureSequence_thenResetOffset()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalPTest.assertRestore(java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StreamEventJournalP_WmCoalescingTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP_WmCoalescingTest.setUp()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP_WmCoalescingTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP_WmCoalescingTest.when_entryInEachPartition_then_wmForwarded()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP_WmCoalescingTest.when_allPartitionsIdle_then_idleMessageOutput()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP_WmCoalescingTest.when_allPartitionsIdleAndThenRecover_then_wmOutput()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP_WmCoalescingTest.test_nonFirstPartition()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP_WmCoalescingTest.when_entryInOnePartition_then_wmForwardedAfterIdleTime()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractDeploymentTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.deployment.AbstractDeploymentTest.testDeployment_whenJarAddedAsResource_thenClassesAvailableOnClassLoader()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.AbstractDeploymentTest.testDeployment_whenClassAddedAsResource_thenClassAvailableOnClassLoader()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DeploymentTest.java", "spoonMethods": []}, {"spoonFilePath": "LoadPersonIsolated.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.deployment.LoadPersonIsolated.LoadPersonIsolatedSupplier", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.deployment.LoadPersonIsolated.LoadPersonIsolatedMetaSupplier", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SourcesTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.SourcesTest.cache_byName()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.SourcesTest.remoteMapWithUnknownValueClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.SourcesTest.remoteCacheWithUnknownValueClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.SourcesTest.remoteCache()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}]}, {"spoonFilePath": "Sources_withEventJournalTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.Sources_withEventJournalTest.testCacheJournal(com.hazelcast.cache.ICache,com.hazelcast.jet.pipeline.StreamSource)", "TOT": 7, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.Sources_withEventJournalTest.testCacheJournal_withPredicateAndProjection(com.hazelcast.cache.ICache,com.hazelcast.jet.pipeline.StreamSource)", "TOT": 9, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.pipeline.Sources_withEventJournalTest.remoteMapJournal_withUnknownValueClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.Sources_withEventJournalTest.remoteCacheJournal_withUnknownValueClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Fix `customTransform`", "body": "- add overrides returning `StreamStage` and `BatchStage`\r\n- use `ProcessorMetaSupplier`\r\n- add tests", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1250", "user": "viliam-durina", "labels": ["defect", "enhancement", "pipeline-api"], "created": "2019-02-11 08:40:23", "closed": "2019-02-13 11:36:08", "commits": {"ebf5aa3cc9607396c1e9aa00ab1d95196dcfd8b7": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "ebf5aa3cc9607396c1e9aa00ab1d95196dcfd8b7", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["46a1d36d17acb4cd272c76d05faad883c18357fc"], "nameRev": "ebf5aa3cc9607396c1e9aa00ab1d95196dcfd8b7 tags/v3.0~89", "commitMessage": "Fix `customTransform` (#1251)\n\n* add overrides returning `StreamStage` and `BatchStage`\r\n* add 3 overloads taking each form of processor supplier\r\n* add missing tests\r\n\r\nFixes #1250", "commitDateTime": "2019-02-13 12:36:05", "authoredDateTime": "2019-02-13 12:36:05", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/BatchStageImpl.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/BatchStageWithKeyImpl.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/ComputeStageImplBase.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/StreamStageImpl.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/StreamStageWithKeyImpl.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/PartitionedProcessorTransform.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/ProcessorTransform.java", "insertions": 11, "deletions": 12, "lines": 23}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/BatchStage.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/BatchStageWithKey.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/GeneralStage.java", "insertions": 38, "deletions": 4, "lines": 42}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/GeneralStageWithKey.java", "insertions": 35, "deletions": 1, "lines": 36}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/StreamStage.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/StreamStageWithKey.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/BatchStageTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/StreamStageTest.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BatchStageImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.BatchStageImpl.customTransform(java.lang.String,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BatchStageWithKeyImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.BatchStageWithKeyImpl.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorSupplier)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ComputeStageImplBase.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.ComputeStageImplBase.attachCustomTransform(java.lang.String,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.ComputeStageImplBase.attachPartitionedCustomTransform(java.lang.String,com.hazelcast.jet.core.ProcessorSupplier,com.hazelcast.jet.function.DistributedFunction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamStageImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.StreamStageImpl.customTransform(java.lang.String,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamStageWithKeyImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.StreamStageWithKeyImpl.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorSupplier)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PartitionedProcessorTransform.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.PartitionedProcessorTransform", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.PartitionedProcessorTransform.partitionedCustomProcessorTransform(java.lang.String,com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.core.ProcessorSupplier,com.hazelcast.jet.function.DistributedFunction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.PartitionedProcessorTransform.mapUsingContextPartitionedTransform(com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.pipeline.ContextFactory,com.hazelcast.jet.function.DistributedBiFunction,com.hazelcast.jet.function.DistributedFunction)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.PartitionedProcessorTransform.filterUsingPartitionedContextTransform(com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.pipeline.ContextFactory,com.hazelcast.jet.function.DistributedBiPredicate,com.hazelcast.jet.function.DistributedFunction)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.PartitionedProcessorTransform.flatMapUsingPartitionedContextTransform(com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.pipeline.ContextFactory,com.hazelcast.jet.function.DistributedBiFunction,com.hazelcast.jet.function.DistributedFunction)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.PartitionedProcessorTransform.flatMapUsingPartitionedContextAsyncTransform(com.hazelcast.jet.impl.pipeline.transform.Transform,java.lang.String,com.hazelcast.jet.pipeline.ContextFactory,com.hazelcast.jet.function.DistributedBiFunction,com.hazelcast.jet.function.DistributedFunction)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ProcessorTransform.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.ProcessorTransform", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.ProcessorTransform.customProcessorTransform(java.lang.String,com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.ProcessorTransform.mapUsingContextTransform(com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.pipeline.ContextFactory,com.hazelcast.jet.function.DistributedBiFunction)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.ProcessorTransform.filterUsingContextTransform(com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.pipeline.ContextFactory,com.hazelcast.jet.function.DistributedBiPredicate)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.ProcessorTransform.flatMapUsingContextTransform(com.hazelcast.jet.impl.pipeline.transform.Transform,com.hazelcast.jet.pipeline.ContextFactory,com.hazelcast.jet.function.DistributedBiFunction)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.ProcessorTransform.flatMapUsingContextAsyncTransform(com.hazelcast.jet.impl.pipeline.transform.Transform,java.lang.String,com.hazelcast.jet.pipeline.ContextFactory,com.hazelcast.jet.function.DistributedBiFunction)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BatchStage.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorMetaSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "BatchStageWithKey.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorMetaSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GeneralStage.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorMetaSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GeneralStageWithKey.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorMetaSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamStage.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorMetaSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "StreamStageWithKey.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.function.DistributedSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.customTransform(java.lang.String,com.hazelcast.jet.core.ProcessorMetaSupplier)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BatchStageTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.BatchStageTest.customTransform_keyed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamStageTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.StreamStageTest.customTransform_keyed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Jet Cli overrides job-name and initial-snapshot ", "body": "Jet Cli overrides job-name and initial-snapshot with null when they are not passed as an argument to the `submit`. Expected behavior should be override these values only if they are passed as an argument to the cli.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1245", "user": "gurbuzali", "labels": ["cli", "defect"], "created": "2019-02-07 12:19:22", "closed": "2019-02-07 12:58:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Corrupted snapshot when adding a new instance?", "body": "[This code](https://github.com/jerrinot/jetexper/blob/master/src/main/java/info/jerrinot/jetexper/Main.java) reliably fails with:\r\n```\r\nException in thread \"main\" java.util.concurrent.CompletionException: com.hazelcast.jet.JetException: State for job 'myJob', execution d9fa-ce2c-9188-f677 in '__jet.snapshot.c03f-1517-ca24-b017.1' corrupted: it should have 3 entries, but has 10 entries\r\n\tat java.base/java.util.concurrent.CompletableFuture.reportJoin(CompletableFuture.java:412)\r\n\tat java.base/java.util.concurrent.CompletableFuture.join(CompletableFuture.java:2044)\r\n\tat com.hazelcast.jet.Job.join(Job.java:104)\r\n\tat info.jerrinot.jetexper.Main.main(Main.java:78)\r\nCaused by: com.hazelcast.jet.JetException: State for job 'myJob', execution d9fa-ce2c-9188-f677 in '__jet.snapshot.c03f-1517-ca24-b017.1' corrupted: it should have 3 entries, but has 10 entries\r\n\tat com.hazelcast.jet.impl.SnapshotValidator.validateSnapshot(SnapshotValidator.java:52)\r\n\tat com.hazelcast.jet.impl.MasterContext.rewriteDagWithSnapshotRestore(MasterContext.java:510)\r\n\tat com.hazelcast.jet.impl.MasterContext.tryStartJob(MasterContext.java:474)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.tryStartJob(JobCoordinationService.java:711)\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.restartJob(JobCoordinationService.java:557)\r\n\tat com.hazelcast.jet.impl.MasterContext.lambda$finalizeJob$16(MasterContext.java:937)\r\n\tat com.hazelcast.jet.impl.MasterContext.finalizeJob(MasterContext.java:970)\r\n\tat com.hazelcast.jet.impl.MasterContext.lambda$onCompleteExecutionCompleted$14(MasterContext.java:901)\r\n\tat com.hazelcast.jet.impl.util.ExceptionUtil.lambda$withTryCatch$0(ExceptionUtil.java:176)\r\n\tat java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837)\r\n\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:479)\r\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\r\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1603)\r\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:250)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:844)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n```\r\n\r\nI am aware sources created via `SourceBuilder` do not provide any processing guarantees, but still I would not expect this.\r\n\r\nI am on c268f2dced", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1234", "user": "jerrinot", "labels": ["core", "defect"], "created": "2019-02-04 23:10:55", "closed": "2019-02-05 14:46:14", "commits": {"e1c209bfe22688a5b499efa79790bddd640ab90b": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e1c209bfe22688a5b499efa79790bddd640ab90b", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["5c488e6d95a9e0f52cc9ba605a2a7f2e17bd0d38"], "nameRev": "e1c209bfe22688a5b499efa79790bddd640ab90b tags/v3.0~98", "commitMessage": "Fix validation record & data for large chunks (#1235)\n\nFixes #1234", "commitDateTime": "2019-02-05 15:46:13", "authoredDateTime": "2019-02-05 15:46:13", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/SnapshotValidationRecord.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/SnapshotValidator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriterImpl.java", "insertions": 9, "deletions": 5, "lines": 14}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/SnapshotLargeChunk_IntegrationTest.java", "insertions": 96, "deletions": 0, "lines": 96}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriterImplTest.java", "insertions": 19, "deletions": 3, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SnapshotValidationRecord.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.SnapshotValidationRecord.numChunks()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SnapshotValidator.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.SnapshotValidator.validateSnapshot(long,java.lang.String,com.hazelcast.core.IMap)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AsyncSnapshotWriterImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.offer(java.util.Map$Entry)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.getBufferContentsAndClear(com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl$CustomByteArrayOutputStream)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImpl.putAsyncToMap(int,java.util.function.Supplier)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SnapshotLargeChunk_IntegrationTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.SnapshotLargeChunk_IntegrationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AsyncSnapshotWriterImplTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.when_singleLargeEntry_then_flushedImmediately()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.util.AsyncSnapshotWriterImplTest.when_singleLargeEntry_then_flushedImmediatelyAndDeserializesCorrectly()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Job cannot be resumed when a named snapshot has been deleted", "body": "```\r\nemindemirci \ue0b0 /private/tmp/hazelcast-jet-0.8-SNAPSHOT \ue0b0 \r\n\ue0b1 bin/jet.sh -a 127.0.0.1:5701 -g jet jobs \r\nNAME                     ID                  STATUS             SUBMISSION TIME        \r\nBatch Job - 0            47de-2bd0-a70c-d604 RUNNING            2019-01-31T14:49:06.642\r\n\r\n emindemirci \ue0b0 /private/tmp/hazelcast-jet-0.8-SNAPSHOT \ue0b0 \r\n\ue0b1 bin/jet.sh -a 127.0.0.1:5701 -g jet save-snapshot 47de-2bd0-a70c-d604 test-2 \r\nSaving snapshot with name 'test-2' from job 'id=47de-2bd0-a70c-d604, name=Batch Job - 0, submissionTime=2019-01-31T14:49:06.642'...\r\nSnapshot was successfully exported.\r\n\r\n emindemirci \ue0b0 /private/tmp/hazelcast-jet-0.8-SNAPSHOT \ue0b0 \r\n\ue0b1 bin/jet.sh -a 127.0.0.1:5701 -g jet delete-snapshot test-2   \r\nSnapshot was successfully deleted.\r\n\r\n emindemirci \ue0b0 /private/tmp/hazelcast-jet-0.8-SNAPSHOT \ue0b0 \r\n\ue0b1 bin/jet.sh -a 127.0.0.1:5701 -g jet suspend 47de-2bd0-a70c-d604  \r\nSuspending job id=47de-2bd0-a70c-d604, name=Batch Job - 0, submissionTime=2019-01-31T14:49:06.642...\r\nJob was successfully suspended.\r\n\r\n emindemirci \ue0b0 /private/tmp/hazelcast-jet-0.8-SNAPSHOT \ue0b0 \r\n\ue0b1 bin/jet.sh -a 127.0.0.1:5701 -g jet resume 47de-2bd0-a70c-d604  \r\nResuming job id=47de-2bd0-a70c-d604, name=Batch Job - 0, submissionTime=2019-01-31T14:49:06.642...\r\n\r\n```\r\n\r\nOn the node it throws following exception\r\n\r\n```\r\n 14:49:53,301 DEBUG || - [MasterContext] hz._hzInstance_1_jet.client.thread-7 - [127.0.0.1]:5701 [jet] [0.8-SNAPSHOT] Resuming job Batch Job - 0\r\n14:49:53,306 DEBUG || - [JobRepository] hz._hzInstance_1_jet.client.thread-7 - [127.0.0.1]:5701 [jet] [0.8-SNAPSHOT] Cleared snapshot data map __jet.snapshot.47de-2bd0-a70c-d604.1\r\n14:49:53,307  WARN || - [MasterContext] hz._hzInstance_1_jet.client.thread-7 - [127.0.0.1]:5701 [jet] [0.8-SNAPSHOT] Execution of job 'Batch Job - 0', execution 1557-42c0-7433-d495 failed after 5 ms\r\ncom.hazelcast.jet.JetException: State for job 'Batch Job - 0', execution 1557-42c0-7433-d495 was supposed to be restored from '__jet.snapshot.47de-2bd0-a70c-d604.0', but that map doesn't contain the validation key: not an IMap with Jet snapshot or corrupted\r\n    at com.hazelcast.jet.impl.SnapshotValidator.validateSnapshot(SnapshotValidator.java:43)\r\n    at com.hazelcast.jet.impl.MasterContext.rewriteDagWithSnapshotRestore(MasterContext.java:510)\r\n    at com.hazelcast.jet.impl.MasterContext.tryStartJob(MasterContext.java:474)\r\n    at com.hazelcast.jet.impl.MasterContext.resumeJob(MasterContext.java:1108)\r\n    at com.hazelcast.jet.impl.JobCoordinationService.resumeJob(JobCoordinationService.java:391)\r\n    at com.hazelcast.jet.impl.operation.ResumeJobOperation.run(ResumeJobOperation.java:37)\r\n    at com.hazelcast.spi.Operation.call(Operation.java:170)\r\n    at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:210)\r\n    at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:199)\r\n    at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:407)\r\n    at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:434)\r\n    at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:651)\r\n    at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:636)\r\n    at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:595)\r\n    at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:253)\r\n    at com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:60)\r\n    at com.hazelcast.client.impl.protocol.task.AbstractInvocationMessageTask.processMessage(AbstractInvocationMessageTask.java:40)\r\n    at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:123)\r\n    at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.doRun(AbstractMessageTask.java:111)\r\n    at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:101)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n    at java.lang.Thread.run(Thread.java:745)\r\n    at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n    at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n14:49:53,318 DEBUG || - [JobRepository] hz._hzInstance_1_jet.client.thread-7 - [127.0.0.1]:5701 [jet] [0.8-SNAPSHOT] Destroyed both snapshot maps for job 47de-2bd0-a70c-d604\r\n\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1227", "user": "eminn", "labels": ["core", "defect"], "created": "2019-01-31 13:15:30", "closed": "2019-02-01 07:54:33", "commits": {"3dedfbe5fb0c7723bd2802eedff8078b00b8b077": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3dedfbe5fb0c7723bd2802eedff8078b00b8b077", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["65147b43d1cc8c6cc28d61bd3a99bed2d5b4c788"], "nameRev": "3dedfbe5fb0c7723bd2802eedff8078b00b8b077 tags/v3.0~105", "commitMessage": "Don't update snapshotId when exporting snapshot\n\nFixes #1227\n", "commitDateTime": "2019-02-01 08:54:30", "authoredDateTime": "2019-01-31 14:45:56", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobExecutionRecord.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExportSnapshotTest.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JobExecutionRecord.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobExecutionRecord.ongoingSnapshotDone(long,long,long,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ExportSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExportSnapshotTest.test_nonSnapshottedJob_exportSnapshotAndRestart()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3dedfbe5fb0c7723bd2802eedff8078b00b8b077"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl"], "changesInPackagesSPOON": ["com.hazelcast.jet.impl.JobExecutionRecord.ongoingSnapshotDone(long,long,long,java.lang.String)"]}, {"title": "Disallow reusing same Source instance in Pipeline API", "body": "Currently it's not allowed to attach a `Sink` instance to a pipeline twice. The following should hold true for `Source` as well. The code below should also not allowed:\r\n\r\n```\r\nPipeline p = Pipeline.create();\r\n\r\nStreamSource<Entry<Object, Object>> map = mapJournal(\"map\", JournalInitialPosition.START_FROM_OLDEST);\r\n\r\np.drawFrom(map).withIngestionTimestamps().drainTo(Sinks.logger());\r\np.drawFrom(map).withoutTimestamps().drainTo(Sinks.logger());\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1226", "user": "cangencer", "labels": ["defect", "pipeline-api"], "created": "2019-01-31 11:34:28", "closed": "2019-02-05 12:49:04", "commits": {"5c488e6d95a9e0f52cc9ba605a2a7f2e17bd0d38": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "5c488e6d95a9e0f52cc9ba605a2a7f2e17bd0d38", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["cea7f7f9341c693905937599ce3253940b9c72df"], "nameRev": "5c488e6d95a9e0f52cc9ba605a2a7f2e17bd0d38 tags/v3.0~99", "commitMessage": "Disallow reusing same Source instance (#1236)\n\nFixes #1226", "commitDateTime": "2019-02-05 13:49:03", "authoredDateTime": "2019-02-05 13:49:03", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/PipelineImpl.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/SinkImpl.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/BatchSourceTransform.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/transform/StreamSourceTransform.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SourcesTest.java", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PipelineImpl.java", "spoonMethods": []}, {"spoonFilePath": "SinkImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.SinkImpl", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.SinkImpl.onAssignToStage()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "BatchSourceTransform.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.BatchSourceTransform", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.BatchSourceTransform.onAssignToStage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamSourceTransform.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.StreamSourceTransform", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.pipeline.transform.StreamSourceTransform.onAssignToStage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SourcesTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.SourcesTest.when_batchSourceUsedTwice_then_throwException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.SourcesTest.when_streamSourceUsedTwice_then_throwException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "CLI has an issue with the job names with spaces", "body": "```\r\nbin/jet.sh -a 127.0.0.1:5701 -g jet suspend \"Batch Job\"\r\n\r\nUnmatched argument: Job\r\nUsage: jet suspend [-hV] <job name or id>\r\nSuspends a running job\r\n      <job name or id>   Name of the job to suspend\r\n  -h, --help             Show this help message and exit.\r\n  -V, --version          Print version information and exit.\r\n```\r\n\r\nSame command works fine when run with the job id instead of actual job name.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1224", "user": "eminn", "labels": ["cli", "defect"], "created": "2019-01-31 10:57:16", "closed": "2019-02-01 08:03:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "JobConfig should always be serialized and deserialized", "body": "If you submit a job to a member `JetInstance` and modify the `JobConfig` objects afterward, this affects the `JobConfig` reference that is used on the member-side. This should never be allowed.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1222", "user": "cangencer", "labels": ["defect"], "created": "2019-01-30 14:19:17", "closed": "2019-02-07 21:24:40", "commits": {"68094d1a9b13e6941d8b34e7bfb226903aafec8f": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "68094d1a9b13e6941d8b34e7bfb226903aafec8f", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["13105b130861cf77a767ed73a9962ef3fe9286aa"], "nameRev": "68094d1a9b13e6941d8b34e7bfb226903aafec8f tags/v3.0~92", "commitMessage": "Always force JobConfig serialization (#1233)\n\nFixes #1222", "commitDateTime": "2019-02-07 22:24:38", "authoredDateTime": "2019-02-07 22:24:38", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobProxy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/client/JetSubmitJobMessageTask.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/SubmitJobOperation.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobTest.java", "insertions": 18, "deletions": 0, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.submitJob(long,com.hazelcast.nio.serialization.Data,com.hazelcast.jet.config.JobConfig)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.submitJob(long,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobProxy.invokeSubmitJob(com.hazelcast.nio.serialization.Data,com.hazelcast.jet.config.JobConfig)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JetSubmitJobMessageTask.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.client.JetSubmitJobMessageTask.prepareOperation()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "SubmitJobOperation.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.operation.SubmitJobOperation", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.SubmitJobOperation.writeInternal(com.hazelcast.nio.ObjectDataOutput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.SubmitJobOperation.readInternal(com.hazelcast.nio.ObjectDataInput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PriorityQueueHook throws illegal argument exception if queue is empty", "body": "", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1169", "user": "gurbuzali", "labels": ["core", "defect", "test-failure"], "created": "2018-12-11 15:15:50", "closed": "2018-12-14 07:55:48", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Improve exception handling for job.join()", "body": "Currently when you cancel a job and do `join()` the exception looks like follows:\r\n\r\n```\r\nException in thread \"main\" java.util.concurrent.CancellationException\r\n\tat com.hazelcast.jet.impl.MasterContext.getResult(MasterContext.java:853)\r\n\tat com.hazelcast.jet.impl.MasterContext.onExecuteStepCompleted(MasterContext.java:807)\r\n\tat com.hazelcast.jet.impl.MasterContext.lambda$invokeOnParticipants$19(MasterContext.java:1074)\r\n\tat com.hazelcast.jet.impl.util.Util$2.onFailure(Util.java:174)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:253)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:250)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n```\r\n\r\nThis lacks both a message and also doesn't point to user code but instead to MasterContext. It should instead say something like \"Job was cancelled\"", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1167", "user": "cangencer", "labels": ["core", "defect"], "created": "2018-12-10 14:18:25", "closed": "2018-12-11 14:06:26", "commits": {"0a6336e09472f9522e8db935652bfd67eb0ce3f7": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0a6336e09472f9522e8db935652bfd67eb0ce3f7", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["8137432882ce1320f917091a071760d830ac69a4"], "nameRev": "0a6336e09472f9522e8db935652bfd67eb0ce3f7 tags/v3.0~136", "commitMessage": "Don't store Throwable in JobResult (#1168)\n\nIf custom exception class is thrown, ManCenter will not be able to\r\ndeserialize it. We store it as a string. Fixes #1149.\r\n\r\nPartly fixes #1167 - use getFuture().join() instead of get(), semantics\r\nmore akin to well-known join().\r\n", "commitDateTime": "2018-12-17 13:08:40", "authoredDateTime": "2018-12-17 13:08:40", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobRepository.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobResult.java", "insertions": 35, "deletions": 22, "lines": 57}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSummary.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterContext.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/MulticastDiscoveryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/CancellationTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExecutionLifecycleTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExportSnapshotTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartWithSnapshotTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendResumeTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/JobSummaryTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/JmsIntegrationTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP_MigrationDetectionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/WriteJdbcPTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/NonSmartClientTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Job.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.join()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.completeMasterContextIfJobAlreadyCompleted(com.hazelcast.jet.impl.MasterContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.getJobSummaryList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRepository.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobRepository.completeJob(long,java.lang.String,long,java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JobResult.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobResult", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.getFailure()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.getFailureReason()", "TOT": 8, "UPD": 5, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.writeData(com.hazelcast.nio.ObjectDataOutput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.readData(com.hazelcast.nio.ObjectDataInput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.isSuccessful()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.getJobStatus()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.asCompletableFuture()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.toString()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.isSuccessfulOrCancelled()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "JobSummary.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobSummary", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummary.getFailureReason()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummary.writeData(com.hazelcast.nio.ObjectDataOutput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummary.readData(com.hazelcast.nio.ObjectDataInput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummary.toString()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.isSuccess(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.requestTermination(com.hazelcast.jet.impl.TerminationMode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MulticastDiscoveryTest.java", "spoonMethods": []}, {"spoonFilePath": "CancellationTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelled_then_jobStatusIsSetEventually()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelledFromClient_then_jobStatusIsSetEventually()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelled_then_jobStatusIsSetDuringCancellation()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExecutionLifecycleTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertJobSucceeded(com.hazelcast.jet.Job)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertJobFailed(com.hazelcast.jet.Job,java.lang.Throwable)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "ExportSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExportSnapshotTest.smokeTest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExportSnapshotTest.when_snapshottingDisabled_then_exportAndRestoreWorks()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExportSnapshotTest.test_exportStateWhileSuspended(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRestartWithSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobRestartWithSnapshotTest.stressTest_cancelWithSnapshotAndResubmit()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobTest.when_jobIsCancelled_then_jobStatusIsCompletedEventually()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.JobTest.when_jobIsCancelled_then_trackedJobCanQueryJobResult()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.JobTest.when_trackedJobCancels_then_jobCompletes()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SuspendResumeTest.java", "spoonMethods": []}, {"spoonFilePath": "JobSummaryTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_batchJob()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_job_failed()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_streamingJobLifecycle()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_manyJobs_then_sortedBySubmissionTime()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JmsIntegrationTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.JmsIntegrationTest.cancelJob()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadWithPartitionIteratorP_MigrationDetectionTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP_MigrationDetectionTest.when_migration_then_detected(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WriteJdbcPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteJdbcPTest.testFailJob_withNonTransientException()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NonSmartClientTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.deployment.NonSmartClientTest.when_jobCancelled_Then_jobStatusIsCompleted()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Don't store Throwable in JobResult", "body": "If custom exception class is used, ManCenter will not be able to deserialize it. We should store it as a string.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1149", "user": "viliam-durina", "labels": ["core", "defect"], "created": "2018-11-15 16:26:31", "closed": "2018-12-17 12:08:41", "commits": {"0a6336e09472f9522e8db935652bfd67eb0ce3f7": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 31.00027777777778, "commitsDetails": [{"commitHash": "0a6336e09472f9522e8db935652bfd67eb0ce3f7", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["8137432882ce1320f917091a071760d830ac69a4"], "nameRev": "0a6336e09472f9522e8db935652bfd67eb0ce3f7 tags/v3.0~136", "commitMessage": "Don't store Throwable in JobResult (#1168)\n\nIf custom exception class is thrown, ManCenter will not be able to\r\ndeserialize it. We store it as a string. Fixes #1149.\r\n\r\nPartly fixes #1167 - use getFuture().join() instead of get(), semantics\r\nmore akin to well-known join().\r\n", "commitDateTime": "2018-12-17 13:08:40", "authoredDateTime": "2018-12-17 13:08:40", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobRepository.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobResult.java", "insertions": 35, "deletions": 22, "lines": 57}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobSummary.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterContext.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/MulticastDiscoveryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/CancellationTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExecutionLifecycleTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExportSnapshotTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartWithSnapshotTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendResumeTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/JobSummaryTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/JmsIntegrationTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP_MigrationDetectionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/WriteJdbcPTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/deployment/NonSmartClientTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Job.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.join()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.completeMasterContextIfJobAlreadyCompleted(com.hazelcast.jet.impl.MasterContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.getJobSummaryList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRepository.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobRepository.completeJob(long,java.lang.String,long,java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JobResult.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobResult", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.getFailure()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.getFailureReason()", "TOT": 8, "UPD": 5, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.writeData(com.hazelcast.nio.ObjectDataOutput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.readData(com.hazelcast.nio.ObjectDataInput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.isSuccessful()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.getJobStatus()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.asCompletableFuture()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.toString()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobResult.isSuccessfulOrCancelled()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "JobSummary.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobSummary", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummary.getFailureReason()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummary.writeData(com.hazelcast.nio.ObjectDataOutput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummary.readData(com.hazelcast.nio.ObjectDataInput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummary.toString()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.isSuccess(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.requestTermination(com.hazelcast.jet.impl.TerminationMode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MulticastDiscoveryTest.java", "spoonMethods": []}, {"spoonFilePath": "CancellationTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelled_then_jobStatusIsSetEventually()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelledFromClient_then_jobStatusIsSetEventually()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelled_then_jobStatusIsSetDuringCancellation()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExecutionLifecycleTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertJobSucceeded(com.hazelcast.jet.Job)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExecutionLifecycleTest.assertJobFailed(com.hazelcast.jet.Job,java.lang.Throwable)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "ExportSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExportSnapshotTest.smokeTest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExportSnapshotTest.when_snapshottingDisabled_then_exportAndRestoreWorks()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExportSnapshotTest.test_exportStateWhileSuspended(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRestartWithSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobRestartWithSnapshotTest.stressTest_cancelWithSnapshotAndResubmit()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobTest.when_jobIsCancelled_then_jobStatusIsCompletedEventually()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.JobTest.when_jobIsCancelled_then_trackedJobCanQueryJobResult()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.JobTest.when_trackedJobCancels_then_jobCompletes()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SuspendResumeTest.java", "spoonMethods": []}, {"spoonFilePath": "JobSummaryTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_batchJob()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_job_failed()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_streamingJobLifecycle()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JobSummaryTest.when_manyJobs_then_sortedBySubmissionTime()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JmsIntegrationTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.JmsIntegrationTest.cancelJob()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadWithPartitionIteratorP_MigrationDetectionTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP_MigrationDetectionTest.when_migration_then_detected(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WriteJdbcPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteJdbcPTest.testFailJob_withNonTransientException()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NonSmartClientTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.deployment.NonSmartClientTest.when_jobCancelled_Then_jobStatusIsCompleted()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "scaleUpDelay is missing from config xml", "body": "It seems like it's not possible to configure scaleUpDelay through xml files or spring", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1139", "user": "cangencer", "labels": ["core", "defect"], "created": "2018-11-06 09:06:03", "closed": "2018-11-12 09:20:44", "commits": {"deea9335a9d56c9cc2b03af6fad6a0d227c15f2d": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}, "fb87206211c821af71ddf01b1b2b23764574cda1": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "deea9335a9d56c9cc2b03af6fad6a0d227c15f2d", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["140c84433d19c381b7f146005bda30d788d8a96f"], "nameRev": "deea9335a9d56c9cc2b03af6fad6a0d227c15f2d tags/v3.0~154", "commitMessage": "Add scaleUpDelay config option to XML (#1143)\n\nFixes #1139", "commitDateTime": "2018-11-12 10:20:43", "authoredDateTime": "2018-11-12 10:20:43", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/XmlJetConfigBuilder.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/resources/hazelcast-jet-config-0.8.xsd", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/resources/hazelcast-jet-default.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/resources/hazelcast-jet-full-example.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/JetConfigTest_loadFromClassPath.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/XmlConfigTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/resources/hazelcast-jet-test.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "hazelcast-jet-core/src/test/resources/hazelcast-jet-with-variables.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "hazelcast-jet-spring/src/main/resources/hazelcast-jet-spring-0.8.xsd", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "hazelcast-jet-spring/src/test/java/com/hazelcast/jet/spring/TestApplicationContext.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "hazelcast-jet-spring/src/test/resources/com/hazelcast/jet/spring/application-context-jet.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "XmlJetConfigBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.longValue(org.w3c.dom.Node)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.parseInstanceConfig(org.w3c.dom.Node)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetConfigTest_loadFromClassPath.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetConfigTest_loadFromClassPath.when_customProperties_then_used()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlConfigTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.XmlConfigTest.when_configHasVariable_variablesAreReplaced()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.XmlConfigTest.assertConfig(com.hazelcast.jet.config.JetConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestApplicationContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.spring.TestApplicationContext.assertJetConfig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "fb87206211c821af71ddf01b1b2b23764574cda1", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["a1c803e1d2ac1c2973973f8844274d227ff14948"], "nameRev": "fb87206211c821af71ddf01b1b2b23764574cda1 tags/v0.7.1~9", "commitMessage": "Add scaleUpDelay config option to XML (backport of #1143) (#1148)\n\nFixes #1139", "commitDateTime": "2018-11-12 17:09:06", "authoredDateTime": "2018-11-12 17:09:06", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/XmlJetConfigBuilder.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/resources/{hazelcast-jet-config-0.7.xsd => hazelcast-jet-config-0.7.1.xsd}", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/resources/hazelcast-jet-default.xml", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/resources/hazelcast-jet-full-example.xml", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/JetConfigTest_loadFromClassPath.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/XmlConfigTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/resources/hazelcast-jet-test.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/resources/hazelcast-jet-with-variables.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-spring/src/main/resources/META-INF/spring.schemas", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "hazelcast-jet-spring/src/main/resources/{hazelcast-jet-spring-0.7.xsd => hazelcast-jet-spring-0.7.1.xsd}", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "hazelcast-jet-spring/src/test/java/com/hazelcast/jet/spring/TestApplicationContext.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "hazelcast-jet-spring/src/test/resources/com/hazelcast/jet/spring/application-context-jet.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-spring/src/test/resources/com/hazelcast/jet/spring/application-context-processor.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "XmlJetConfigBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.getReleaseVersion()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.longValue(org.w3c.dom.Node)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.parseInstanceConfig(org.w3c.dom.Node)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetConfigTest_loadFromClassPath.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetConfigTest_loadFromClassPath.when_customProperties_then_used()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlConfigTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.XmlConfigTest.when_configHasVariable_variablesAreReplaced()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.XmlConfigTest.assertConfig(com.hazelcast.jet.config.JetConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestApplicationContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.spring.TestApplicationContext.assertJetConfig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Non-smart client cannot submit a job if it connects to a non-master member", "body": "```\r\nJob 0c50-8223-aa06-42f2 (name ??) failed because it has received a non-restartable exception during submission\r\ncom.hazelcast.jet.JetException: Cannot submit job 0c50-8223-aa06-42f2 from non-master node.\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1128", "user": "eminn", "labels": ["core", "defect"], "created": "2018-11-05 07:08:42", "closed": "2018-11-05 09:17:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "JobConfig.setAutoScaling: Javadoc doesn't specify the default value", "body": "", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1115", "user": "mtopolnik", "labels": ["defect", "javadoc"], "created": "2018-10-17 11:39:52", "closed": "2018-10-23 09:37:32", "commits": {"e17aa89de29c995738df497ee2ba3a3fb8957884": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "e17aa89de29c995738df497ee2ba3a3fb8957884", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["de19cf4732030a07a52a200e9c20378539762ad7"], "nameRev": "e17aa89de29c995738df497ee2ba3a3fb8957884 tags/v3.0~169", "commitMessage": "Reuse snapshot maps (#1104)\n\nChanges the mode of operation where we created new maps for each\r\nsnapshot and destroyed the maps when deleting the snapshot to a mode\r\nwhere we have 2 maps and use one for writing and one for storing.\r\n\r\nNotes:\r\n- responsibility for updating JobExecutionRecord, which contains \r\nchanging data from JobRecord moved from JobCoordinationService to \r\nMasterContext\r\n\r\n- MasterContext contains final field with JobExecutionRecord. It mutates \r\nit (therefore some fields in it are volatile) and writes it out after \r\neach change. Since it can be mutated in parallel and parallel writes can \r\nbe reordered, we use timestamp to ensure that an older update doesn't \r\noverwrite a newer one.\r\n\r\n- One snapshot is stored in one map (previously, each vertex used its \r\nown map). The chunk key now contains vertex name and snapshotId. \r\nSnapshotId was added to it to distinguish zombie writes, should they \r\never happen, or if writing after a failed `IMap.clear`. When reading, \r\nunknown vertices and snapshotIds are logged and ignored.\r\n\r\n- Which data map is used for new snapshot is communicated to members\r\nusing SnapshotOp. Because target member must know this before it starts\r\nwriting, we've removed the (rare) possibility that snapshot is written\r\nbefore the operation is received.\r\n\r\n- SnapshotRecord and SnapshotRepository classes were removed\r\n\r\nFixes #1115", "commitDateTime": "2018-10-23 11:37:29", "authoredDateTime": "2018-10-23 11:37:29", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/aggregate/AggregateOperation.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/config/JobConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJetInstance.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ExplodeSnapshotP.java", "insertions": 31, "deletions": 2, "lines": 33}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetService.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 55, "deletions": 85, "lines": 140}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobExecutionRecord.java", "insertions": 308, "deletions": 0, "lines": 308}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobRecord.java", "insertions": 7, "deletions": 34, "lines": 41}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobRepository.java", "insertions": 137, "deletions": 108, "lines": 245}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterContext.java", "insertions": 89, "deletions": 57, "lines": 146}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/SnapshotRepository.java", "insertions": 0, "deletions": 249, "lines": 249}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ExecutionContext.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/SnapshotContext.java", "insertions": 49, "deletions": 46, "lines": 95}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/SnapshotRecord.java", "insertions": 0, "deletions": 188, "lines": 188}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/StoreSnapshotTasklet.java", "insertions": 2, "deletions": 17, "lines": 19}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/JetInitDataSerializerHook.java", "insertions": 12, "deletions": 16, "lines": 28}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/SnapshotOperation.java", "insertions": 20, "deletions": 15, "lines": 35}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/SlidingWindowP.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/SnapshotKey.java", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriter.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriterImpl.java", "insertions": 80, "deletions": 34, "lines": 114}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExecutionLifecycleTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/GracefulShutdownTest.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartWithSnapshotTest.java", "insertions": 47, "deletions": 128, "lines": 175}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ManualRestartTest.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/PostponedSnapshotTest.java", "insertions": 12, "deletions": 19, "lines": 31}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SnapshotFailureTest.java", "insertions": 3, "deletions": 26, "lines": 29}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SplitBrainTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/SuspendResumeTest.java", "insertions": 14, "deletions": 4, "lines": 18}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/TopologyChangeTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/JobRepositoryTest.java", "insertions": 20, "deletions": 41, "lines": 61}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/SnapshotRepositoryTest.java", "insertions": 0, "deletions": 83, "lines": 83}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ProcessorTaskletTest_Snapshots.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ProcessorTaskletTest_Watermarks.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/SnapshotContextSimpleTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/SnapshotContextTest.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/StoreSnapshotTaskletTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/init/DetermineLocalParallelismTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/init/JetInitDataSerializerHookTest.java", "insertions": 126, "deletions": 0, "lines": 126}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/EqualityTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/AsyncSnapshotWriterImplTest.java", "insertions": 24, "deletions": 20, "lines": 44}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/util/MockAsyncSnapshotWriter.java", "insertions": 1, "deletions": 5, "lines": 6}, {"filePath": "hazelcast-jet-kafka/src/test/java/com/hazelcast/jet/kafka/impl/StreamKafkaPTest.java", "insertions": 14, "deletions": 28, "lines": 42}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Snapshot restore edge to source processor is not higher priority", "body": "Snapshot is not started until all higher-priority edges are completed. Snapshot restoring is done using such edges. However, in the case of source, the restore edge isn't higher priority, because it's the only edge. It can happen that the first snapshot is done before the state of the source is restored.\r\n\r\nIt's very hard to run into this issue because:\r\n- snapshot interval must be shorter than it takes to restore the snapshot\r\n- all other vertices except the source one must be already restored\r\n\r\nIf the state is small, it's quick to restore. If the state is large, it's typically not the source which has large state.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1100", "user": "viliam-durina", "labels": ["core", "defect"], "created": "2018-10-04 10:47:14", "closed": "2018-10-10 14:16:19", "commits": {"74e303e755374ed2e538f5359baa44b85865a142": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}, "2734792d5724328f0603f1fa64373a745b3fff84": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "74e303e755374ed2e538f5359baa44b85865a142", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["9bc22d902550b94bfbd54830bdf5521b93f5a2a7"], "nameRev": "74e303e755374ed2e538f5359baa44b85865a142 tags/v3.0~176", "commitMessage": "Make single SnapshotRestore input higher priority (#1102)\n\nSnapshot is not started until all higher-priority edges are completed.\r\nSnapshot restoring is done using such edges. However, in the case of\r\nsource, the restore edge wasn't higher priority, because it's the only\r\nedge. It can happen that the first snapshot is done before the state of\r\nthe source is restored.\r\n\r\nFixes #1100", "commitDateTime": "2018-10-10 16:16:18", "authoredDateTime": "2018-10-10 16:16:18", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/VertexDef.java", "insertions": 9, "deletions": 2, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertexDef.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef.isHigherPriorityUpstream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2734792d5724328f0603f1fa64373a745b3fff84", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["e64546e4837d4ea1720bd13444f8c2a0692f33df"], "nameRev": "2734792d5724328f0603f1fa64373a745b3fff84 tags/v0.7.1~21", "commitMessage": "Make single SnapshotRestore input higher priority (#1102)\n\nSnapshot is not started until all higher-priority edges are completed.\r\nSnapshot restoring is done using such edges. However, in the case of\r\nsource, the restore edge wasn't higher priority, because it's the only\r\nedge. It can happen that the first snapshot is done before the state of\r\nthe source is restored.\r\n\r\nFixes #1100", "commitDateTime": "2018-11-09 13:32:22", "authoredDateTime": "2018-10-10 16:16:18", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/VertexDef.java", "insertions": 9, "deletions": 2, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VertexDef.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.VertexDef.isHigherPriorityUpstream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NotifyMemberShutdownOperation times out", "body": "```\r\n10:54:07,466  WARN || - [JetService] hz._hzInstance_3_jet.async.thread-8 - [127.0.0.1]:5003 [jet] [0.7-SNAPSHOT] Failed to notify master member that this member is shutting down, will retry in 5 seconds\r\ncom.hazelcast.core.OperationTimeoutException: NotifyMemberShutdownOperation invocation failed to complete due to operation-heartbeat-timeout. Current time: 2018-10-03 10:54:07.466. Start time: 2018-10-03 10:52:07.358. Total elapsed time: 120108 ms. Last operation heartbeat: never. Last operation heartbeat from member: 2018-10-03 10:54:00.763. Invocation{op=com.hazelcast.jet.impl.operation.NotifyMemberShutdownOperation{serviceName='hz:impl:jetService', identityHash=731775452, partitionId=-1, replicaIndex=0, callId=-56860, invocationTime=1538556727358 (2018-10-03 10:52:07.358), waitTimeout=0, callTimeout=60000}, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeoutMillis=60000, firstInvocationTimeMs=1538556727358, firstInvocationTime='2018-10-03 10:52:07.358', lastHeartbeatMillis=0, lastHeartbeatTime='1970-01-01 01:00:00.000', target=[127.0.0.1]:5001, pendingResponse={VOID}, backupsAcksExpected=0, backupsAcksReceived=0, connection=MockConnection{localEndpoint=[127.0.0.1]:5003, remoteEndpoint=[127.0.0.1]:5001}}\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.newOperationTimeoutException(InvocationFuture.java:164)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:106)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:250)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1094", "user": "viliam-durina", "labels": ["defect"], "created": "2018-10-03 09:00:09", "closed": "2018-10-04 10:31:45", "commits": {"1fab207070fc7516b921414c139d1d0405a022e2": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "1fab207070fc7516b921414c139d1d0405a022e2", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["a77165f7042c02d080d08c18a282e63d5d3068f1"], "nameRev": "1fab207070fc7516b921414c139d1d0405a022e2 tags/v0.7~4", "commitMessage": "Have NotifyMemberShutdownOp registered on live operations registry (#1098)\n\nIncludes some refactoring of operation base classes\r\n\r\nFixes\u00a0#1094 ", "commitDateTime": "2018-10-04 12:30:55", "authoredDateTime": "2018-10-04 12:30:55", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AbstractJobOperation.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncJobOperation.java", "insertions": 15, "deletions": 42, "lines": 57}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/AsyncOperation.java", "insertions": 77, "deletions": 0, "lines": 77}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/NotifyMemberShutdownOperation.java", "insertions": 2, "deletions": 15, "lines": 17}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/operation/SnapshotOperation.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJobOperation.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.operation.AbstractJobOperation", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AsyncJobOperation.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation.run()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation.onInvocationException(java.lang.Throwable)", "TOT": 8, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation.doRun()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation.doSendResponse(java.lang.Object)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation.beforeRun()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation.returnsResponse()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation.getResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncJobOperation.writeInternal(com.hazelcast.nio.ObjectDataOutput)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AsyncOperation.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.operation.AsyncOperation", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NotifyMemberShutdownOperation.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.operation.NotifyMemberShutdownOperation.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.NotifyMemberShutdownOperation", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.NotifyMemberShutdownOperation.getFactoryId()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.operation.NotifyMemberShutdownOperation.returnsResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SnapshotOperation.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.operation.SnapshotOperation.doRun()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Timestamped stream with no windowing does noThrottling", "body": "If you have a timestamped pipeline which doesn't do any windowing defaults to `noThrottling()` on the watermarks. This can cause generation of  large amount of WMs which do not serve any purpose.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1063", "user": "cangencer", "labels": ["defect", "pipeline-api"], "created": "2018-09-24 08:32:15", "closed": "2018-10-10 08:58:46", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "Kafka cancelled exception not suppressed", "body": "Not sure if this is a recurrence of https://github.com/hazelcast/hazelcast-jet/issues/824\r\n\r\nStopping a job with `job.cancel()` throws an Interrupted Exception from Kafka 2.0.0,\r\nusing hazelcast-jet-kafka-0.7-20180919.141941-164 snapshot build\r\n\r\nJob is doing\r\n```\r\n\t\tStreamStage<Entry<Object, Object>> source = \r\n\t\t\t\tpipeline.drawFrom(KafkaSources.kafka(properties, \"neil\"))\r\n\r\n```\r\n\r\nGives this\r\n\r\n```\r\n23:21:54.290 [hz._hzInstance_1_oktobap.jet.blocking.ProcessorTasklet{kafkaSource#2}] WARN  com.hazelcast.jet.impl.execution.TaskletExecutionService - [127.0.0.1]:5701 [oktobap] [0.7-SNAPSHOT] Exception in ProcessorTasklet{kafkaSource#2}\r\n org.apache.kafka.common.errors.InterruptException: java.lang.InterruptedException\r\n\tat org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.maybeThrowInterruptException(ConsumerNetworkClient.java:492) ~[kafka-clients-1.0.2.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:274) ~[kafka-clients-1.0.2.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:230) ~[kafka-clients-1.0.2.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:206) ~[kafka-clients-1.0.2.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:601) ~[kafka-clients-1.0.2.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1211) ~[kafka-clients-1.0.2.jar!/:?]\r\n\tat com.hazelcast.jet.kafka.impl.StreamKafkaP.complete(StreamKafkaP.java:200) ~[hazelcast-jet-kafka-0.7-SNAPSHOT.jar!/:0.7-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:343) ~[hazelcast-jet-0.7-SNAPSHOT.jar!/:0.7-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212) ~[hazelcast-jet-0.7-SNAPSHOT.jar!/:0.7-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205) ~[hazelcast-jet-0.7-SNAPSHOT.jar!/:0.7-SNAPSHOT]\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:235) [hazelcast-jet-0.7-SNAPSHOT.jar!/:0.7-SNAPSHOT]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_181]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_181]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_181]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_181]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_181]\r\nCaused by: java.lang.InterruptedException\r\n\t... 16 more\r\n23:21:54.360 [hz._hzInstance_1_oktobap.async.thread-4] INFO  com.hazelcast.jet.impl.MasterContext - [127.0.0.1]:5701 [oktobap] [0.7-SNAPSHOT] Execution of job 'GPS Load', execution 4c4f-9dd3-6bb7-6fbe completed in 4,095 ms, reason=java.util.concurrent.CancellationException\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1058", "user": "neilstevenson", "labels": ["defect", "kafka"], "created": "2018-09-19 22:29:43", "closed": "2018-09-27 16:07:50", "commits": {"403f3933ac01e597a49488eed05861755a513fb5": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "403f3933ac01e597a49488eed05861755a513fb5", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["82345ee67fd1f326fcf0299651e7f1900718d20b"], "nameRev": "403f3933ac01e597a49488eed05861755a513fb5 tags/v0.7~20", "commitMessage": "Include Kafka's commitSync in try-catch block (#1078)\n\nFixes #1058", "commitDateTime": "2018-09-27 18:07:50", "authoredDateTime": "2018-09-27 18:07:50", "commitGitStats": [{"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/kafka/impl/StreamKafkaP.java", "insertions": 19, "deletions": 22, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StreamKafkaP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.kafka.impl.StreamKafkaP.complete()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.kafka.impl.StreamKafkaP.close()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Rolling aggregation does not add timestamps", "body": "```java\r\npublic class TestCustomSource {\r\n\r\n    public static final class MyAccu {\r\n        private long lastTime;\r\n    }\r\n\r\n    @Test\r\n    public void foo() {\r\n        StreamSource<String> uuidSource = SourceBuilder.timestampedStream(\"my source\", context -> \"\")\r\n                .<String>fillBufferFn((a, b) -> b.add(UuidUtil.newUnsecureUuidString()))\r\n                .build();\r\n\r\n        AggregateOperation1<Object, MyAccu, Long> latencyBetweenElementsOp = AggregateOperation.withCreate(MyAccu::new)\r\n                .andAccumulate0((acc, event) -> {})\r\n                .andExportFinish(acc -> {\r\n                    long now = System.nanoTime();\r\n                    long delta = now - acc.lastTime;\r\n                    acc.lastTime = now;\r\n                    return delta;\r\n                });\r\n\r\n        Pipeline pipeline = Pipeline.create();\r\n        pipeline.drawFrom(uuidSource)\r\n                .map(String::toLowerCase)\r\n                .rollingAggregate(latencyBetweenElementsOp)\r\n                .window(WindowDefinition.sliding(10000, 1000))\r\n                .aggregate(AggregateOperations.averagingLong(e -> e))\r\n                .drainTo(logger());\r\n\r\n        JetInstance instance = Jet.newJetInstance();\r\n        instance.newJob(pipeline).join();\r\n    }\r\n}\r\n```\r\n\r\nis failing with:\r\n```\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Exception in ProcessorTasklet{sliding-window-step1#4}\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nSep 19, 2018 5:41:30 PM com.hazelcast.jet.impl.execution.TaskletExecutionService\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Exception in ProcessorTasklet{sliding-window-step1#0}\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nSep 19, 2018 5:41:30 PM com.hazelcast.jet.impl.execution.TaskletExecutionService\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Exception in ProcessorTasklet{sliding-window-step1#7}\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nSep 19, 2018 5:41:30 PM com.hazelcast.jet.impl.execution.TaskletExecutionService\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Exception in ProcessorTasklet{sliding-window-step1#1}\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nSep 19, 2018 5:41:30 PM com.hazelcast.jet.impl.execution.TaskletExecutionService\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Exception in ProcessorTasklet{sliding-window-step1#6}\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nSep 19, 2018 5:41:30 PM com.hazelcast.jet.impl.execution.TaskletExecutionService\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Exception in ProcessorTasklet{sliding-window-step1#5}\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nSep 19, 2018 5:41:30 PM com.hazelcast.jet.impl.execution.TaskletExecutionService\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Exception in ProcessorTasklet{sliding-window-step1#2}\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nSep 19, 2018 5:41:30 PM com.hazelcast.jet.impl.execution.TaskletExecutionService\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Exception in ProcessorTasklet{sliding-window-step1#3}\r\njava.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nSep 19, 2018 5:41:30 PM com.hazelcast.jet.impl.MasterContext\r\nWARNING: [192.168.86.241]:5701 [jet] [0.7-SNAPSHOT] Execution of job 'e56d-6a2a-e68b-9af4', execution e2a7-e4ac-589c-a4d3 failed after 126 ms\r\ncom.hazelcast.jet.JetException: Exception in ProcessorTasklet{sliding-window-step1#4}: java.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:304)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:250)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\nCaused by: java.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n\r\njava.util.concurrent.ExecutionException: com.hazelcast.jet.JetException: Exception in ProcessorTasklet{sliding-window-step1#4}: java.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\r\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)\r\n\tat java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1895)\r\n\tat com.hazelcast.jet.Job.lambda$join$0(Job.java:92)\r\n\tat com.hazelcast.jet.impl.util.Util.uncheckRun(Util.java:111)\r\n\tat com.hazelcast.jet.Job.join(Job.java:92)\r\n\tat TestCustomSource.foo(TestCustomSource.java:46)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: com.hazelcast.jet.JetException: Exception in ProcessorTasklet{sliding-window-step1#4}: java.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:304)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:250)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:250)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\nCaused by: java.lang.ClassCastException: java.lang.Long cannot be cast to com.hazelcast.jet.impl.JetEvent\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.core.processor.Processors.lambda$toFrameTimestampFn$cdcc75bb$1(Processors.java:571)\r\n\tat com.hazelcast.jet.function.DistributedToLongFunction.applyAsLong(DistributedToLongFunction.java:39)\r\n\tat com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(SlidingWindowP.java:148)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.tryProcess0(AbstractProcessor.java:190)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process0(AbstractProcessor.java:590)\r\n\tat com.hazelcast.jet.core.AbstractProcessor.process(AbstractProcessor.java:111)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:269)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:240)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:212)\r\n\tat com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:205)\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$CooperativeWorker.run(TaskletExecutionService.java:296)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1057", "user": "jerrinot", "labels": ["defect", "pipeline-api"], "created": "2018-09-19 15:42:14", "closed": "2018-09-25 08:05:41", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Logs for ReceiverTasklet contain no context", "body": "The logger name doesn't include vertex name or the job name. It should also only log when there is a change in the window size.\r\n\r\n```\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800\r\n00:01:25,509 TRACE || - [ReceiverTasklet] hz._hzInstance_1_jet.cached.thread-4 - receiveWindowCompressed=800```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1054", "user": "cangencer", "labels": ["core", "defect"], "created": "2018-09-19 13:03:12", "closed": "2019-02-14 11:19:04", "commits": {"c8076ec24a206554b3ef3effa07858ff44d5c82d": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 147.00027777777777, "commitsDetails": [{"commitHash": "c8076ec24a206554b3ef3effa07858ff44d5c82d", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["4edad6564b27693ca585d587edbec8e1b7b47c6d"], "nameRev": "c8076ec24a206554b3ef3effa07858ff44d5c82d tags/v3.0~76", "commitMessage": "Add context to ReceiverTasklet logs (#1253)\n\nFixes #1054\r\n", "commitDateTime": "2019-02-14 12:19:04", "authoredDateTime": "2019-02-14 12:19:04", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/ReceiverTasklet.java", "insertions": 14, "deletions": 9, "lines": 23}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ReceiverTaskletSendLimitTest.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/execution/ReceiverTaskletTest.java", "insertions": 5, "deletions": 3, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReceiverTasklet.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ReceiverTasklet", "TOT": 9, "UPD": 4, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ReceiverTasklet.updateAndGetSendSeqLimitCompressed(long)", "TOT": 13, "UPD": 4, "INS": 4, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "ExecutionPlan.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.createIfAbsentReceiverTasklet(com.hazelcast.jet.impl.execution.init.EdgeDef,int[][],int,com.hazelcast.internal.metrics.ProbeBuilder)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReceiverTaskletSendLimitTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ReceiverTaskletSendLimitTest", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ReceiverTaskletSendLimitTest.before()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReceiverTaskletTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.ReceiverTaskletTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.ReceiverTaskletTest.before()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NullPointerException after a batch job completed.", "body": "After a batch job completed, below stack trace logs continuously.\r\n\r\n```\r\n52:08,256 [10.0.0.144]:5701 [jet] [0.7-SNAPSHOT] Execution of job '5f85-7712-ce6a-daba', execution 91e6-e2f6-1f3e-054e completed in 57,594 ms\r\nException in thread \"hz._hzInstance_1_jet.cached.thread-27\" java.lang.NullPointerException\r\n    at com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.whenComplete(JmxPublisher.java:120)\r\n    at com.hazelcast.jet.impl.metrics.JetMetricsService.lambda$init$0(JetMetricsService.java:98)\r\n    at com.hazelcast.spi.impl.executionservice.impl.DelegateAndSkipOnConcurrentExecutionDecorator$DelegateDecorator.run(DelegateAndSkipOnConcurrentExecutionDecorator.java:66)\r\n    at com.hazelcast.util.executor.CachedExecutorServiceDelegate$Worker.run(CachedExecutorServiceDelegate.java:227)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n    at java.lang.Thread.run(Thread.java:748)\r\n    at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n    at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1019", "user": "gokhanoner", "labels": ["defect"], "created": "2018-08-23 10:11:48", "closed": "2018-08-23 14:33:05", "commits": {"37ad589fec210ca7878f4d0f48fdd6aac31e7a3a": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "37ad589fec210ca7878f4d0f48fdd6aac31e7a3a", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["5484a01001eb1bb0a35036764a9e4a7afb063dbb"], "nameRev": "37ad589fec210ca7878f4d0f48fdd6aac31e7a3a tags/v0.7~63", "commitMessage": "Fix value escaping in MBean's ObjectName (#1020)\n\nFixes #1019", "commitDateTime": "2018-08-23 16:33:04", "authoredDateTime": "2018-08-23 16:33:04", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/metrics/jmx/JmxPublisher.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/metrics/jmx/JmxPublisherTest.java", "insertions": 68, "deletions": 0, "lines": 68}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JmxPublisher.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.renderNumber(java.lang.String,java.lang.Number)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.publishLong(java.lang.String,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.publishDouble(java.lang.String,double)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.escapeObjectNameValue(java.lang.String)", "TOT": 9, "UPD": 1, "INS": 2, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "JmxPublisherTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisherTest.when_metricNotRendered_then_mBeanRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisherTest.when_badCharacters1_then_escaped()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisherTest.when_badCharacters2_then_escaped()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisherTest.when_badCharacters3_then_escaped()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisherTest.when_badCharacters4_then_escaped()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisherTest.when_badCharacters5_then_escaped()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisherTest.when_badCharacters_then_escaped(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PR build occassionally fails when creating javadoc", "body": "https://hazelcast-l337.ci.cloudbees.com/job/jet-pr-builder/3061/console\r\n\r\n```\r\n18:52:00 [ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.0.0:jar (attach-javadocs) on project hazelcast-jet-core: MavenReportException: Error while generating Javadoc: \r\n18:52:00 [ERROR] Exit code: 1 - /scratch/jenkins/workspace/jet-pr-builder/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/GrAggBuilder.java:44: error: cannot find symbol\r\n18:52:00 [ERROR] import static com.hazelcast.jet.impl.pipeline.JetEventFunctionAdapter.adaptAggregateOperation;\r\n18:52:00 [ERROR]                                              ^\r\n18:52:00 [ERROR]   symbol:   class JetEventFunctionAdapter\r\n18:52:00 [ERROR]   location: package com.hazelcast.jet.impl.pipeline\r\n18:52:00 [ERROR] /scratch/jenkins/workspace/jet-pr-builder/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/GrAggBuilder.java:44: error: static import only from classes and interfaces\r\n18:52:00 [ERROR] import static com.hazelcast.jet.impl.pipeline.JetEventFunctionAdapter.adaptAggregateOperation;\r\n```\r\n\r\nRestarting the build often helps.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/1012", "user": "viliam-durina", "labels": ["defect"], "created": "2018-08-21 16:06:42", "closed": "2018-09-07 13:15:14", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "Cancellation of completed job should not fail with exception", "body": "Currently cancelling an already completed job fails with:\r\n\r\n```\r\nError Message\r\nCannot CANCEL job 3a9b-69fb-12d6-1e6b because it already has a result: JobResult{coordinatorUUID='828296e9-2948-4371-913b-12363024628b', jobId=3a9b-69fb-12d6-1e6b, name=null, creationTime=2018-08-14T17:41:07.061, completionTime=2018-08-14T17:41:08.249, failure=null}\r\nStacktrace\r\njava.lang.IllegalStateException: Cannot CANCEL job 3a9b-69fb-12d6-1e6b because it already has a result: JobResult{coordinatorUUID='828296e9-2948-4371-913b-12363024628b', jobId=3a9b-69fb-12d6-1e6b, name=null, creationTime=2018-08-14T17:41:07.061, completionTime=2018-08-14T17:41:08.249, failure=null}\r\n```\r\n\r\nIt could be that several clients try to cancel a job at the same time, and this should not cause a race between them.\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/992", "user": "cangencer", "labels": ["core", "defect"], "created": "2018-08-15 06:11:05", "closed": "2018-08-17 10:12:39", "commits": {"06213dfb525c0fca9055358fac56ba30e4457511": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "06213dfb525c0fca9055358fac56ba30e4457511", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["8d903897ed0fcb418b88920954a443260f4e995d"], "nameRev": "06213dfb525c0fca9055358fac56ba30e4457511 tags/v0.7~77", "commitMessage": "Make cancellation of completed job not fail (#1001)\n\nFixes #992", "commitDateTime": "2018-08-17 12:12:38", "authoredDateTime": "2018-08-17 12:12:38", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/Sources.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/CancellationTest.java", "insertions": 56, "deletions": 20, "lines": 76}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Job.java", "spoonMethods": []}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.terminateJob(long,com.hazelcast.jet.impl.TerminationMode)", "TOT": 16, "UPD": 1, "INS": 6, "MOV": 7, "DEL": 2}]}, {"spoonFilePath": "Sources.java", "spoonMethods": []}, {"spoonFilePath": "CancellationTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.newInstance()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelledOnMultipleNodes_then_terminatedEventually()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelledFromClient_then_terminatedEventually()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelledFromClient_then_jobStatusIsSetEventually()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobFailsOnOnInitiatorNode_then_cancelledOnOtherNodes()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelledOnSingleNode_then_terminatedEventually()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelled_then_jobStatusIsSetEventually()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelled_then_trackedJobsGetNotified()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCancelled_then_jobStatusIsSetDuringCancellation()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobFailsOnOnNonInitiatorNode_then_cancelledOnInitiatorNode()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_shutdown_then_jobFuturesCanceled(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_jobCanceled_then_jobFutureCanceled()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.CancellationTest.when_multipleClientsCancel_then_allSucceed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "@SpringAware annotation not processed for sinks", "body": "When a custom sink annotated by @SpringAware is added to the pipeline, it is wrapped in an AdaptingProcessor. Therefore, the @SpringAware annotation is not seen and autowiring is not performed.\r\n\r\nSink can be defined as:\r\n\r\n```\r\n@SpringAware\r\npublic class WriteSink extends AbstractProcessor\r\n{\r\n   public WriteNotificationSink()\r\n   {\r\n      setCooperative(false);\r\n   }\r\n\r\n   @Override\r\n   protected boolean tryProcess(int oridinal, Object item)\r\n   {\r\n      Assert.assertNotNull(mDatabase); // This will fail.\r\n   }\r\n\r\n   @Resource\r\n   private Database mDatabase;\r\n\r\n   private static class Supplier implements ProcessorSupplier\r\n   {\r\n      @Override\r\n      public Collection<? extends Processor> get(int count)\r\n      {\r\n         return Stream.generate(() -> new WriteSink()).limit(count).collect(Collectors.toList());\r\n      }\r\n   }\r\n\r\n   private static final class MetaSupplier implements ProcessorMetaSupplier\r\n   {\r\n      static final long serialVersionUID = 1L;\r\n\r\n      private MetaSupplier()\r\n      {\r\n      }\r\n\r\n      @Override\r\n      public Function<Address, ProcessorSupplier> get(List<Address> addresses)\r\n      {\r\n         return address -> new Supplier();\r\n      }\r\n   }\r\n\r\n   public static Sink<Object> notificationSink()\r\n   {\r\n      return new SinkImpl<>(\"writeSink\", new MetaSupplier());\r\n   }\r\n}\r\n```\r\n\r\nAnd used as:\r\n\r\n```\r\nList<String> text = jet.getList(\"text\");\r\ntext.add(\"One\");\r\ntext.add(\"Two\");\r\nPipeline p = Pipeline.create();\r\np.drawFrom(Sources.<String>list(\"text\")).drainTo(writeSink());\r\njet.newJob(p);\r\n```\r\n  ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/988", "user": "PeeWee2201", "labels": ["defect", "spring"], "created": "2018-08-14 14:25:18", "closed": "2018-08-17 11:09:22", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Failed to instantiate [com.hazelcast.jet.JetInstance]", "body": "When I use an artifact 'hazelcast-jet-spring' with Spring Boot I have this error:\r\n\r\nCaused by: java.lang.IllegalArgumentException: DataSerializableFactory[-45] is already registered! com.hazelcast.internal.journal.EventJournalDataSerializerHook$1@67887bf2 -> com.hazelcast.journal.EventJournalDataSerializerHook$1@3ce2c454\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/977", "user": "Ultar", "labels": ["defect", "spring"], "created": "2018-07-24 10:43:21", "closed": "2018-08-15 06:28:37", "commits": {"75708485bed97724079d5d83af243d388d9957e7": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "75708485bed97724079d5d83af243d388d9957e7", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["7f69e4c3656165fd444554a8169c25663d2ca821"], "nameRev": "75708485bed97724079d5d83af243d388d9957e7 tags/v0.7~86", "commitMessage": "Fix for dependencies of hazelcast-jet-spring (#978)\n\nThe shaded hazelcast-jet-spring jar had a dependency on hazelcast-jet-core\r\nand hazelcast-spring, which in turn introduced dependencies on hazelcast. \r\nSince spring-boot references an older version of hazelcast in its \r\ndependencyManagement section, this caused a conflict of versions when \r\nspring-boot was used. \r\n\r\nFixes #977", "commitDateTime": "2018-08-15 08:28:36", "authoredDateTime": "2018-08-15 08:28:36", "commitGitStats": [{"filePath": "hazelcast-jet-spring/pom.xml", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "mapWithMerging / mapWithUpdating sinks are inefficient with bulk updates", "body": "`mapWithMerging` and `mapWithUpdating` sinks can be inefficient when sending bulk updates because all of the data is sent to all the nodes regardless if they're needed or not.\r\n\r\nA copy of the EntryProcessor is also created for each partition when taking backups, which adds another overhead.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/970", "user": "cangencer", "labels": ["defect"], "created": "2018-07-16 07:57:25", "closed": "2018-10-16 13:04:15", "commits": {"d7d211e9d046fd3f3c8ebdd2e0d1995c8381d760": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 92.00027777777778, "commitsDetails": [{"commitHash": "d7d211e9d046fd3f3c8ebdd2e0d1995c8381d760", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["6df1d50996c481398e015e31c301d8e24b65a781"], "nameRev": "d7d211e9d046fd3f3c8ebdd2e0d1995c8381d760 tags/v3.0~172", "commitMessage": "Use submitToKeys to merge to IMap (#1107)\n\nIMap.executeOnKeys has an issue that a copy of the EntryProcessor (EP)\r\nis sent to each member and, additionally, one copy is sent again for\r\nbackup. The EP used for `mapWithMerging` contained a HashMap with a\r\nvalue for each key. The problem was, that the map got copied many times,\r\nwasting a lot of memory.\r\n\r\nThis commit splits the HashMap into a submap, one for each partition,\r\nand uses one `submitToKeys` call for each partition.\r\n\r\nFixes #970\r\n\r\nAlso fix ReadWithPartitionIteratorP_MigrationDetectionTest: the job \r\ndidn't create execution plans before migration was over (fixes #1107)", "commitDateTime": "2018-10-16 15:04:14", "authoredDateTime": "2018-10-16 15:04:14", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/test/TestSupport.java", "insertions": 37, "deletions": 10, "lines": 47}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/HazelcastWriters.java", "insertions": 207, "deletions": 48, "lines": 255}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/AsyncMapWriter.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/Sinks.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/test/TestSupportTest.java", "insertions": 62, "deletions": 2, "lines": 64}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP_MigrationDetectionTest.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SinksTest.java", "insertions": 66, "deletions": 0, "lines": 66}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Don't use stateful flush function in mapWithMerging", "body": "See #967 where a quick workaround was merged.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/968", "user": "viliam-durina", "labels": ["defect"], "created": "2018-07-13 14:13:13", "closed": "2018-08-21 21:00:40", "commits": {"db55cc258a56ff651fec33b2ec1855e02b23945d": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "db55cc258a56ff651fec33b2ec1855e02b23945d", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["5d4400a94ee3eac1fc6650cc6098709c33919c09"], "nameRev": "db55cc258a56ff651fec33b2ec1855e02b23945d tags/v0.7~72", "commitMessage": "Make the flushFn function stateless (#1008)\n\nFixes #968\r\n", "commitDateTime": "2018-08-21 23:00:38", "authoredDateTime": "2018-08-21 23:00:38", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/HazelcastWriters.java", "insertions": 64, "deletions": 40, "lines": 104}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/SinksTest.java", "insertions": 2, "deletions": 11, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HazelcastWriters.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastWriters.updateMapSupplier(java.lang.String,com.hazelcast.client.config.ClientConfig,com.hazelcast.jet.function.DistributedFunction,com.hazelcast.jet.function.DistributedBiFunction)", "TOT": 54, "UPD": 8, "INS": 1, "MOV": 28, "DEL": 17}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastWriters.HazelcastWriterSupplier", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastWriters.HazelcastWriterSupplier.init(com.hazelcast.jet.impl.connector.Context)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastWriters.HazelcastWriterSupplier.get(int)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastWriters.ApplyFnEntryProcessor", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastWriters.UpdateMapContext", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastWriters.UpdateMapContext.flush(com.hazelcast.core.HazelcastInstance)", "TOT": 16, "UPD": 0, "INS": 16, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SinksTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.SinksTest.mapWithUpdating()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Avro and Spring modules are missing in distribution", "body": "Avro module is currently missing in distribution zip but should be added there.\r\nSpring module is also missing", "url": "https://github.com/hazelcast/hazelcast-jet/issues/966", "user": "cangencer", "labels": ["avro", "defect", "spring"], "created": "2018-07-12 17:05:31", "closed": "2018-07-17 06:06:56", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "SerializableClientConfig ignores all configs other than group name/password", "body": "```\r\n Pipeline.create()\r\n  .drawFrom(Sources.<Integer, Val>remoteMap(\"test\", clientConfig))\r\n  .drainTo(Sinks.remoteMapWithEntryProcessor(\"test\", clientConfig, entryKey(), o -> new EP(5)));       \r\n```\r\n\r\nProblem is, data in `test` IMAP & `EP` class is `IdentifiedDataSerializable`. I have Serialization config in my client config but I see that it ignored since client config wrapped into `SerializableClientConfig` which only contains group name/password & list of addresses.\r\n\r\nThat causes below exception:\r\n\r\n```\r\nWARNING: [192.168.5.73]:5702 [jet] [0.6.1] Execution of job bd10-2644-260a-50cc, execution 2fe1-65a9-d2f3-9ee6 failed after 590 ms\r\ncom.hazelcast.jet.JetException: Exception in ProcessorTasklet{remoteMapWithEntryProcessorSink(test)#0}: java.util.concurrent.ExecutionException: com.hazelcast.nio.serialization.HazelcastSerializationException: No DataSerializerFactory registered for namespace: 1\r\n\tat com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:210)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n```\r\n\r\n\r\n\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/949", "user": "gokhanoner", "labels": ["defect", "pipeline-api"], "created": "2018-06-29 18:16:35", "closed": "2018-12-04 13:04:33", "commits": {}, "ttf": 157.00027777777777, "commitsDetails": []}, {"title": "Handle TimeoutException in kafka sink", "body": "The `KafkaProducer.send` is an async operation, but can block if the internal buffer is full. We need to ignore this error.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/947", "user": "viliam-durina", "labels": ["defect", "kafka"], "created": "2018-06-29 09:10:29", "closed": "2019-02-28 08:02:27", "commits": {}, "ttf": 243.00027777777777, "commitsDetails": []}, {"title": "Race when deregistering MBeans", "body": "There is likely a race between MBean deregistration in shutdown and after rendering, leading to the following error:\r\n\r\n```\r\nException in thread \u201chz._hzInstance_2_jet.cached.thread-2\u201d java.lang.RuntimeException: javax.management.InstanceNotFoundException: com.hazelcast:type=Metrics,instance=_hzInstance_2_jet,tag0=tcp,tag1=\u201cconnection[/192.168.0.2:49890->/192.168.0.2:5701]\u201c,tag2=in\r\n    at com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.whenComplete(JmxPublisher.java:109)\r\n    at com.hazelcast.jet.impl.metrics.JetMetricsService.lambda$init$0(JetMetricsService.java:98)\r\n    at com.hazelcast.spi.impl.executionservice.impl.DelegateAndSkipOnConcurrentExecutionDecorator$DelegateDecorator.run(DelegateAndSkipOnConcurrentExecutionDecorator.java:66)\r\n    at com.hazelcast.util.executor.CachedExecutorServiceDelegate$Worker.run(CachedExecutorServiceDelegate.java:227)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n    at java.lang.Thread.run(Thread.java:748)\r\n    at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n    at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\nCaused by: javax.management.InstanceNotFoundException: com.hazelcast:type=Metrics,instance=_hzInstance_2_jet,tag0=tcp,tag1=\u201cconnection[/192.168.0.2:49890->/192.168.0.2:5701]\u201c,tag2=in\r\n    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)\r\n    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)\r\n    at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)\r\n    at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)\r\n    at com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.whenComplete(JmxPublisher.java:107)\r\n    ... 8 more\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/942", "user": "viliam-durina", "labels": ["core", "defect"], "created": "2018-06-26 09:51:58", "closed": "2018-08-21 20:55:45", "commits": {"5d4400a94ee3eac1fc6650cc6098709c33919c09": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 56.000277777777775, "commitsDetails": [{"commitHash": "5d4400a94ee3eac1fc6650cc6098709c33919c09", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["0b0bb29f137ccca5c1e25111b4492860cf910483"], "nameRev": "5d4400a94ee3eac1fc6650cc6098709c33919c09 tags/v0.7~73", "commitMessage": "Ignore race when deregistreing MBeans (#1006)\n\nFixes #942", "commitDateTime": "2018-08-21 22:55:45", "authoredDateTime": "2018-08-21 22:55:45", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/config/JobConfig.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/metrics/jmx/JmxPublisher.java", "insertions": 27, "deletions": 10, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JobConfig.java", "spoonMethods": []}, {"spoonFilePath": "JmxPublisher.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.shutdown()", "TOT": 12, "UPD": 1, "INS": 4, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.whenComplete()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.unregisterMBeanIgnoreError(javax.management.ObjectName)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.metrics.jmx.JmxPublisher.renderNumber(java.lang.String,java.lang.Number)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Using results of a window aggregation in another aggregation causes window shift", "body": "When cascading windowing operations, for example using the output of a 1 minute tumbling window to calculate a 10 min by 1 min sliding window, the output of the first stage will not be placed in the correct window in the second stage. \r\n\r\nThis is because the output of the first windowing stage will have the same timestamp as the end of the window, and because window calculations include only events happening _before_ the window end time, the event will not be included in the same window for the second aggregation. ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/898", "user": "cangencer", "labels": ["defect", "pipeline-api"], "created": "2018-06-04 10:18:50", "closed": "2018-06-22 07:19:57", "commits": {"ccc56100b26674319f3a5b732faf702653e4894e": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "ccc56100b26674319f3a5b732faf702653e4894e", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["f26fe0c38f32ce298444bb18f0d540007204d704"], "nameRev": "ccc56100b26674319f3a5b732faf702653e4894e tags/v0.7~121", "commitMessage": " Fix aggregation of window aggregation results (#932)\n\nFixes #898\r\n\r\nAlso cotains:\r\n* Log eventTime from JetEvent in `peek`", "commitDateTime": "2018-06-22 09:19:54", "authoredDateTime": "2018-06-22 09:19:54", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/pipeline/FunctionAdapter.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/PeekWrappedP.java", "insertions": 9, "deletions": 5, "lines": 14}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/PeekingWrapperTest.java", "insertions": 22, "deletions": 2, "lines": 24}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/pipeline/WindowGroupAggregateTest.java", "insertions": 37, "deletions": 5, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FunctionAdapter.java", "spoonMethods": []}, {"spoonFilePath": "PeekWrappedP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.PeekWrappedP.log(java.lang.String,java.lang.Object)", "TOT": 9, "UPD": 1, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.PeekWrappedP.LoggingInbox.log(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PeekingWrapperTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.PeekingWrapperTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.PeekingWrapperTest.before()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.PeekingWrapperTest.assertPeekInput()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.PeekingWrapperTest.assertPeekOutput()", "TOT": 9, "UPD": 0, "INS": 8, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.PeekingWrapperTest.peekOutputProcessorSupplier()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WindowGroupAggregateTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.sessionWindow()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.aggregate2_withSeparateAggrOps()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.aggregate2_withAggrOp2()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.testAggregate2_withOutputFn(com.hazelcast.jet.function.TriFunction)", "TOT": 7, "UPD": 3, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.testAggregate3(com.hazelcast.jet.function.TriFunction)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.testAggregate2(java.util.function.BiFunction)", "TOT": 26, "UPD": 4, "INS": 1, "MOV": 20, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.validateAggrBuilder(com.hazelcast.jet.pipeline.StreamStage,com.hazelcast.jet.pipeline.WindowGroupAggregateTest$AggregateBuilderFixture,int,com.hazelcast.jet.datamodel.Tag,com.hazelcast.jet.datamodel.Tag,com.hazelcast.jet.function.DistributedTriFunction)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.testAggregate3_withOutputFn(com.hazelcast.jet.pipeline.BatchAggregateTest.QuadFunction)", "TOT": 9, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.log(java.lang.String,java.lang.Object)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateTest.slidingWindow_twoAggregations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "JetInstance.newJetClient is not compatible with new async connection mode", "body": "It's not possible to create a new Jet client using the [async connection mode](http://docs.hazelcast.org/docs/latest-dev/manual/html-single/index.html#async-start-and-reconnect-modes), as you get an exception:\r\n\r\n```\r\nCaused by: com.hazelcast.client.HazelcastClientOfflineException: Client connecting to cluster\r\n\tat com.hazelcast.client.spi.ProxyManager.findNextAddressToSendCreateRequest(ProxyManager.java:443) ~[hazelcast-client-3.10.jar:3.10]\r\n\tat com.hazelcast.client.spi.ProxyManager.initialize(ProxyManager.java:430) ~[hazelcast-client-3.10.jar:3.10]\r\n\tat com.hazelcast.client.spi.ProxyManager.initializeWithRetry(ProxyManager.java:395) ~[hazelcast-client-3.10.jar:3.10]\r\n\tat com.hazelcast.client.spi.ProxyManager.getOrCreateProxy(ProxyManager.java:316) ~[hazelcast-client-3.10.jar:3.10]\r\n\tat com.hazelcast.client.impl.HazelcastClientInstanceImpl.getDistributedObject(HazelcastClientInstanceImpl.java:707) ~[hazelcast-client-3.10.jar:3.10]\r\n\tat com.hazelcast.client.impl.HazelcastClientInstanceImpl.getMap(HazelcastClientInstanceImpl.java:511) ~[hazelcast-client-3.10.jar:3.10]\r\n\tat com.hazelcast.jet.impl.JobRepository.<init>(JobRepository.java:115) ~[classes/:na]\r\n\tat com.hazelcast.jet.impl.AbstractJetInstance.<init>(AbstractJetInstance.java:39) ~[classes/:na]\r\n\tat com.hazelcast.jet.impl.JetClientInstanceImpl.<init>(JetClientInstanceImpl.java:67) ~[classes/:na]\r\n\tat com.hazelcast.jet.Jet.getJetClientInstance(Jet.java:99) ~[classes/:na]\r\n\tat com.hazelcast.jet.Jet.newJetClient(Jet.java:87) ~[classes/:na]\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/878", "user": "cangencer", "labels": ["core", "defect"], "created": "2018-05-22 13:27:25", "closed": "2018-05-22 14:48:17", "commits": {"f266608a1803880082c01898694e4dcd5208ce40": {"commitGHEventType": "referenced", "commitUser": "eminn"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f266608a1803880082c01898694e4dcd5208ce40", "commitGHEventType": "referenced", "commitUser": "eminn", "commitParents": ["0105e986925234e66a14b5eb84182716fa852251"], "nameRev": "f266608a1803880082c01898694e4dcd5208ce40 tags/v0.7~162", "commitMessage": "Lazy initialisation of JobRepository (#879)\n\nFixes #878", "commitDateTime": "2018-05-22 17:48:17", "authoredDateTime": "2018-05-22 16:48:17", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJetInstance.java", "insertions": 5, "deletions": 3, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJetInstance.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.uploadResourcesAndAssignId(com.hazelcast.jet.config.JobConfig)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "XSDs out of date ", "body": "https://github.com/hazelcast/hazelcast-jet/blob/master/hazelcast-jet-core/src/main/resources/hazelcast-jet-client-default.xml\r\nreferences `hazelcast-client-config-3.9.xsd` but embedded IMDG is 3.10\r\n\r\nSame for https://github.com/hazelcast/hazelcast-jet/blob/master/hazelcast-jet-core/src/main/resources/hazelcast-jet-member-default.xml", "url": "https://github.com/hazelcast/hazelcast-jet/issues/852", "user": "neilstevenson", "labels": ["defect"], "created": "2018-04-26 13:30:10", "closed": "2018-04-26 18:29:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "XmlJetConfigLocator visibility", "body": "Class `XmlJetConfigLocator` isn't public\r\n\r\nCan't do\r\n```\r\nProperties properties = new Properties();\r\nproperties.put(com.hazelcast.jet.impl.config.XmlJetConfigLocator.HAZELCAST_JET_CONFIG_PROPERTY, \r\n    \"classpath:hazelcast-jet.xml\");\r\nJetConfig jetConfig = XmlJetConfigBuilder.getConfig(properties);\r\n```\r\n\r\nAlso, the Hazelcast IMDG equivalent `com.hazelcast.config.XmlConfigLocator` isn't in an impl package\r\n\r\nShould really be able to configure without using internal classes", "url": "https://github.com/hazelcast/hazelcast-jet/issues/851", "user": "neilstevenson", "labels": ["defect"], "created": "2018-04-26 13:16:04", "closed": "2018-04-27 11:45:33", "commits": {"e2c66c53312672fa6484eabad17a26460db4c405": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}, "8a5eb96d85b53c70937cd627749bec39ab6e8a1f": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e2c66c53312672fa6484eabad17a26460db4c405", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["010e397ca196eb5facfa86fb56c761bf0b67e481"], "nameRev": "e2c66c53312672fa6484eabad17a26460db4c405 tags/v0.7~168", "commitMessage": "Util to load JetConfig from classpath or file (#856)\n\nFixes #851", "commitDateTime": "2018-04-27 13:45:31", "authoredDateTime": "2018-04-27 13:45:31", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Jet.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/config/JetConfig.java", "insertions": 140, "deletions": 2, "lines": 142}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/XmlJetConfigBuilder.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/WindowGroupAggregateBuilder.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/JetTestInstanceFactory.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/JetConfigTest_loadFromClassPath.java", "insertions": 59, "deletions": 0, "lines": 59}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/config/XmlConfigTest.java", "insertions": 8, "deletions": 8, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jet.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.Jet.newJetInstance()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "JetConfig.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetConfig", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadDefault()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadDefault(java.util.Properties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadFromClasspath(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadFromClasspath(java.lang.String,java.util.Properties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadFromStream(java.io.InputStream)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadFromStream(java.io.InputStream,java.util.Properties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlJetConfigBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.getConfig(java.util.Properties)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.parseEdgeDefaults(org.w3c.dom.Node)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.getMemberConfig(java.util.Properties)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.getConfig()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.handleConfig(org.w3c.dom.Element)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.loadConfig(java.io.InputStream,java.util.Properties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WindowGroupAggregateBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateBuilder", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateBuilder.add(com.hazelcast.jet.pipeline.StreamStageWithGrouping)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateBuilder.build(com.hazelcast.jet.aggregate.AggregateOperation,com.hazelcast.jet.function.KeyedWindowResultFunction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateBuilder.build(com.hazelcast.jet.aggregate.AggregateOperation)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetTestInstanceFactory.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.JetTestInstanceFactory.newMember()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetConfigTest_loadFromClassPath.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetConfigTest_loadFromClassPath", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlConfigTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_noConfigSpecified_usesDefaultConfig()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_filePathSpecified_usesSpecifiedFile()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_filePathMemberSpecified_usesSpecifiedFile()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_classpathSpecified_usesSpecifiedResource()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_classpathMemberSpecified_usesSpecifiedResource()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_configHasVariable_variablesAreReplaced()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_configMemberHasVariable_variablesAreReplaced()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_edgeDefaultsSpecified_usesSpecified()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8a5eb96d85b53c70937cd627749bec39ab6e8a1f", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["19261eaed8f445a51643cad4e49c5cf1c377cceb"], "nameRev": "8a5eb96d85b53c70937cd627749bec39ab6e8a1f tags/v0.6.1~3", "commitMessage": "Util to load JetConfig from classpath or file (#856) \n\nFixes #851", "commitDateTime": "2018-04-27 17:09:21", "authoredDateTime": "2018-04-27 17:09:21", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Jet.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/config/JetConfig.java", "insertions": 140, "deletions": 2, "lines": 142}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/config/XmlJetConfigBuilder.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/WindowGroupAggregateBuilder.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/JetTestInstanceFactory.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/config/JetConfigTest_loadFromClassPath.java", "insertions": 59, "deletions": 0, "lines": 59}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/config/XmlConfigTest.java", "insertions": 8, "deletions": 8, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jet.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.Jet.newJetInstance()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "JetConfig.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetConfig", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadDefault()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadDefault(java.util.Properties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadFromClasspath(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadFromClasspath(java.lang.String,java.util.Properties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadFromStream(java.io.InputStream)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.loadFromStream(java.io.InputStream,java.util.Properties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlJetConfigBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.getConfig(java.util.Properties)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.parseEdgeDefaults(org.w3c.dom.Node)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.getMemberConfig(java.util.Properties)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.getConfig()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.handleConfig(org.w3c.dom.Element)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlJetConfigBuilder.loadConfig(java.io.InputStream,java.util.Properties)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WindowGroupAggregateBuilder.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateBuilder", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateBuilder.add(com.hazelcast.jet.pipeline.StreamStageWithGrouping)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateBuilder.build(com.hazelcast.jet.aggregate.AggregateOperation,com.hazelcast.jet.function.KeyedWindowResultFunction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.pipeline.WindowGroupAggregateBuilder.build(com.hazelcast.jet.aggregate.AggregateOperation)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetTestInstanceFactory.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.JetTestInstanceFactory.newMember()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetConfigTest_loadFromClassPath.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetConfigTest_loadFromClassPath", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XmlConfigTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_noConfigSpecified_usesDefaultConfig()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_filePathSpecified_usesSpecifiedFile()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_filePathMemberSpecified_usesSpecifiedFile()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_classpathSpecified_usesSpecifiedResource()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_classpathMemberSpecified_usesSpecifiedResource()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_configHasVariable_variablesAreReplaced()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_configMemberHasVariable_variablesAreReplaced()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.config.XmlConfigTest.when_edgeDefaultsSpecified_usesSpecified()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Detect partition migration when reading an IMap", "body": "Currently the iteration can silently miss or duplicate some events in case a partition migration takes place while iterating. If a member is added, the job will continue to run, but is likely to produce incorrect output silently. We need to interrupt and restart the job in this case (IMap reading is also used for snapshot restore).", "url": "https://github.com/hazelcast/hazelcast-jet/issues/830", "user": "viliam-durina", "labels": ["defect"], "created": "2018-04-19 15:08:08", "closed": "2018-10-12 06:38:03", "commits": {"4624de08f34a2e270962c968f6989400bc628910": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}, "753f829b04685f0ee9411fcc7b92e9f8c5c91b67": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 175.00027777777777, "commitsDetails": [{"commitHash": "4624de08f34a2e270962c968f6989400bc628910", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["74e303e755374ed2e538f5359baa44b85865a142"], "nameRev": "4624de08f34a2e270962c968f6989400bc628910 tags/v3.0~175", "commitMessage": "Add partition migration detection (#1076)\n\nFixes #830", "commitDateTime": "2018-10-12 08:38:02", "authoredDateTime": "2018-10-12 08:38:02", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/RestartableException.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterContext.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP.java", "insertions": 114, "deletions": 5, "lines": 119}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/Sources.java", "insertions": 40, "deletions": 16, "lines": 56}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorPTest.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP_MigrationDetectionTest.java", "insertions": 131, "deletions": 0, "lines": 131}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RestartableException.java", "spoonMethods": []}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.scheduleRestart(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.getResult(java.lang.String,java.util.Map)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.invokeCompleteExecution(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.finalizeJob(java.lang.Throwable)", "TOT": 8, "UPD": 4, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.jobName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadWithPartitionIteratorP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.checkMigration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.MigrationWatcher", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.complete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.getProcessors(int,java.util.List,java.util.function.Function,com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP$MigrationWatcher)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.RemoteClusterProcessorSupplier", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.LocalClusterProcessorSupplier", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.LocalClusterProcessorSupplier.close(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.RemoteClusterProcessorSupplier.init(com.hazelcast.jet.impl.connector.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.RemoteClusterProcessorSupplier.close(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.LocalClusterProcessorSupplier.init(com.hazelcast.jet.impl.connector.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.RemoteClusterProcessorSupplier.get(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.LocalClusterProcessorSupplier.get(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.Util.processorToPartitions(int,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Sources.java", "spoonMethods": []}, {"spoonFilePath": "ReadWithPartitionIteratorPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorPTest.when_readFromTwoPartitions_then_emitRoundRobin()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadWithPartitionIteratorP_MigrationDetectionTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP_MigrationDetectionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "753f829b04685f0ee9411fcc7b92e9f8c5c91b67", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["2734792d5724328f0603f1fa64373a745b3fff84"], "nameRev": "753f829b04685f0ee9411fcc7b92e9f8c5c91b67 tags/v0.7.1~20", "commitMessage": "Add partition migration detection (#1076)\n\nFixes #830", "commitDateTime": "2018-11-09 13:32:22", "authoredDateTime": "2018-10-12 08:38:02", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/RestartableException.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterContext.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP.java", "insertions": 114, "deletions": 5, "lines": 119}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/Sources.java", "insertions": 40, "deletions": 16, "lines": 56}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorPTest.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP_MigrationDetectionTest.java", "insertions": 131, "deletions": 0, "lines": 131}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RestartableException.java", "spoonMethods": []}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.scheduleRestart(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.getResult(java.lang.String,java.util.Map)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.invokeCompleteExecution(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.finalizeJob(java.lang.Throwable)", "TOT": 8, "UPD": 4, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.jobName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadWithPartitionIteratorP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.checkMigration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.MigrationWatcher", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.complete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.getProcessors(int,java.util.List,java.util.function.Function,com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP$MigrationWatcher)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.RemoteClusterProcessorSupplier", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.LocalClusterProcessorSupplier", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.LocalClusterProcessorSupplier.close(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.RemoteClusterProcessorSupplier.init(com.hazelcast.jet.impl.connector.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.RemoteClusterProcessorSupplier.close(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.LocalClusterProcessorSupplier.init(com.hazelcast.jet.impl.connector.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.RemoteClusterProcessorSupplier.get(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP.LocalClusterProcessorSupplier.get(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.Util.processorToPartitions(int,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Sources.java", "spoonMethods": []}, {"spoonFilePath": "ReadWithPartitionIteratorPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorPTest.when_readFromTwoPartitions_then_emitRoundRobin()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadWithPartitionIteratorP_MigrationDetectionTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP_MigrationDetectionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Kafka exception not suppressed on Job cancel", "body": "I saw this once or twice, Jet 0.6, closing a job with a Kafka source\r\n\r\n```\r\n12:19:52.854 WARN  hz._hzInstance_1_amsjug.jet.blocking.thread-3 c.h.j.i.e.TaskletExecutionService - [127.0.0.1]:5701 [xxx] [0.6] Exception in ProcessorTasklet{Kafka Source#3} \r\norg.apache.kafka.common.errors.InterruptException: java.lang.InterruptedException\r\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.maybeThrowInterruptException(ConsumerNetworkClient.java:447)\r\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:254)\r\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:214)\r\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:190)\r\n    at org.apache.kafka.clients.consumer.internals.Fetcher.getTopicMetadata(Fetcher.java:314)\r\n    at org.apache.kafka.clients.consumer.KafkaConsumer.partitionsFor(KafkaConsumer.java:1481)\r\n    at com.hazelcast.jet.kafka.impl.StreamKafkaP.assignPartitions(StreamKafkaP.java:116)\r\n    at com.hazelcast.jet.kafka.impl.StreamKafkaP.complete(StreamKafkaP.java:165)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:253)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:143)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:136)\r\n    at com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:187)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n    at java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.InterruptedException: null\r\n    ... 17 common frames omitted\r\n```\r\n\r\n@viliam-durina  Thinks it should be suppressed, not a real issue but will cause confusion", "url": "https://github.com/hazelcast/hazelcast-jet/issues/824", "user": "neilstevenson", "labels": ["core", "defect", "kafka"], "created": "2018-04-17 11:28:30", "closed": "2018-05-09 14:34:38", "commits": {"4753cd7eba7e537f46ac6d4a76be9fa38d8bee11": {"commitGHEventType": "referenced", "commitUser": "cangencer"}, "c51154534bd775bb165b1e9957bf6c85ed85342f": {"commitGHEventType": "referenced", "commitUser": "cangencer"}, "3091a0416c1398f1f780d98efaec748e0d4a8a8b": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "4753cd7eba7e537f46ac6d4a76be9fa38d8bee11", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["894f3a8c2140dbbb9371048baccafc62512039fe"], "nameRev": "4753cd7eba7e537f46ac6d4a76be9fa38d8bee11 tags/v0.7~175", "commitMessage": "Handle InterruptException in Kafka.partitionsFor (#842)\n\nFixes #824", "commitDateTime": "2018-04-26 10:35:40", "authoredDateTime": "2018-04-26 10:35:40", "commitGitStats": [{"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/kafka/impl/StreamKafkaP.java", "insertions": 10, "deletions": 12, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StreamKafkaP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.kafka.impl.StreamKafkaP.complete()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c51154534bd775bb165b1e9957bf6c85ed85342f", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["ddaeec1afe0f6afdce0e26814d747abb788473c7"], "nameRev": "c51154534bd775bb165b1e9957bf6c85ed85342f tags/v0.6.1~9", "commitMessage": "Handle InterruptException in Kafka.partitionsFor (#842) \n\nFixes #824", "commitDateTime": "2018-04-26 11:06:57", "authoredDateTime": "2018-04-26 11:06:57", "commitGitStats": [{"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/kafka/impl/StreamKafkaP.java", "insertions": 10, "deletions": 12, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StreamKafkaP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.kafka.impl.StreamKafkaP.complete()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3091a0416c1398f1f780d98efaec748e0d4a8a8b", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["2bcd382a460db4444c7fb43f05d49cc8d64f27f5"], "nameRev": "3091a0416c1398f1f780d98efaec748e0d4a8a8b tags/v0.7~166", "commitMessage": "Catch InterruptException in `StreamKafkaP.close` (#870)\n\nFixes #824", "commitDateTime": "2018-05-09 16:34:38", "authoredDateTime": "2018-05-09 16:34:38", "commitGitStats": [{"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/kafka/impl/StreamKafkaP.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StreamKafkaP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.kafka.impl.StreamKafkaP.close(java.lang.Throwable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 3, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Do no fail job if HDFS Source reverse DNS lookup fails", "body": "Currently when the Jet HDFS source tries to distribute HDFS splits to all the members it tries to make use of data locality by matching the IP address of the member to the hostname of the datanode where a split is present. The member IP address is converted to a hostname using a reverse DNS lookup. However if the lookup fails with `UnknownHostException` the job will fail to start. Even though this typically points to a configuration error, it might be better to print a warning instead and not fail the job. The caveat will be that Jet will not be able to make use of data locality if reverse DNS resolution isn't working.\r\n\r\nAlternatively, we could only use forward lookups and match HDFS hosts against IP addresses instead.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/810", "user": "cangencer", "labels": ["defect", "hadoop"], "created": "2018-04-09 07:18:14", "closed": "2018-04-27 09:40:14", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "Job failure due to missing class not reported to client", "body": "Steps to reproduce:\r\n1. start standalone jet instance\r\n2. in another jvm, create a client instance and submit a job, without adding the classes to `JobConfig`\r\n3. the job fails on member due to the missing class, as expected\r\n4. call `Job.join()` on the client, it blocks indefinitely. \r\n\r\nExpected behavior: `Job.join()` should throw an exception.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/786", "user": "viliam-durina", "labels": ["core", "defect"], "created": "2018-03-19 14:28:07", "closed": "2018-03-26 11:22:50", "commits": {"8220e1260039c47246d17905a313af35329a3942": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "8220e1260039c47246d17905a313af35329a3942", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["861b86c27a9d79b742f5e102cd5dbff53c337f73"], "nameRev": "8220e1260039c47246d17905a313af35329a3942 tags/v0.6~11", "commitMessage": "Fix deserialization error reporting from master (#794)\n\nFixes #786", "commitDateTime": "2018-03-26 13:22:49", "authoredDateTime": "2018-03-26 13:22:49", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/MasterContext.java", "insertions": 18, "deletions": 15, "lines": 33}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/ExceptionHandlingTest.java", "insertions": 83, "deletions": 0, "lines": 83}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.onCompleteStepCompleted(java.lang.Throwable)", "TOT": 13, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 5}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.tryStartJob(java.util.function.Function)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.setJobStatusToStarting()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.invokeCompleteExecution(java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.MasterContext.finalizeJob(java.lang.Throwable)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExceptionHandlingTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.ExceptionHandlingTest.when_deserializationOnMembersFails_then_jobSubmissionFails__member()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExceptionHandlingTest.when_deserializationOnMembersFails_then_jobSubmissionFails__client()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExceptionHandlingTest.when_deserializationOnMembersFails_then_jobSubmissionFails(com.hazelcast.jet.JetInstance)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExceptionHandlingTest.when_deserializationOnMasterFails_then_jobSubmissionFails_member()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExceptionHandlingTest.when_deserializationOnMasterFails_then_jobSubmissionFails_client()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExceptionHandlingTest.when_deserializationOnMasterFails_then_jobSubmissionFails(com.hazelcast.jet.JetInstance)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExceptionHandlingTest.NotDeserializableProcessorSupplier", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.ExceptionHandlingTest.NotDeserializableProcessorMetaSupplier", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Receive window shrinks in lull-and-burst sending pattern", "body": "Default flow control window interval is 100ms. If the job is aggregating into windows sliding by 1000ms, data transfer over distributed edge occurs only once in 1000ms. So there is 990 ms of inactivity and 10ms of activity on the edge. During the inactivity, the receive windows shrinks to 1. When transfer starts, unnecessary backpressure might be applied. The receive window will grow, but it will introduce latency.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/785", "user": "viliam-durina", "labels": ["core", "defect"], "created": "2018-03-19 13:52:35", "closed": "2018-04-16 13:38:12", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "Serialization issue when using windowed aggregation in Pipeline API", "body": "```\r\ncom.hazelcast.jet.JetException: Exception in ProcessorTasklet{vertex=listSink(sink), processor=com.hazelcast.jet.impl.pipeline.FunctionAdapter$AdaptingProcessor@60cfb273}: com.hazelcast.nio.serialization.HazelcastSerializationException: Failed to serialize 'com.hazelcast.jet.datamodel.TimestampedItem'\r\n    at com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:196)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)\r\n    at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)\r\n    at java.util.concurrent.FutureTask.run(FutureTask.java)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n    at java.lang.Thread.run(Thread.java:745)\r\nCaused by: com.hazelcast.nio.serialization.HazelcastSerializationException: Failed to serialize 'com.hazelcast.jet.datamodel.TimestampedItem'\r\n    at com.hazelcast.internal.serialization.impl.SerializationUtil.handleSerializeException(SerializationUtil.java:75)\r\n    at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:161)\r\n    at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:137)\r\n    at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toData(AbstractSerializationService.java:122)\r\n    at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toData(AbstractSerializationService.java:110)\r\n    at com.hazelcast.spi.impl.NodeEngineImpl.toData(NodeEngineImpl.java:307)\r\n    at com.hazelcast.collection.impl.collection.AbstractCollectionProxyImpl.addAll(AbstractCollectionProxyImpl.java:166)\r\n    at com.hazelcast.jet.impl.connector.HazelcastWriters.lambda$null$3c5c3833$1(HazelcastWriters.java:205)\r\n    at com.hazelcast.jet.impl.connector.WriteBufferedP.process(WriteBufferedP.java:77)\r\n    at com.hazelcast.jet.impl.processor.ProcessorWrapper.process(ProcessorWrapper.java:49)\r\n    at com.hazelcast.jet.impl.pipeline.FunctionAdapter$AdaptingProcessor.process(FunctionAdapter.java:126)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:185)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:156)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:143)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:136)\r\n    at com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:185)\r\n    ... 7 more\r\nCaused by: java.io.NotSerializableException: com.hazelcast.jet.datamodel.TwoBags\r\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\r\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\r\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\r\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\r\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\r\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\r\n    at com.hazelcast.internal.serialization.impl.JavaDefaultSerializers$JavaSerializer.write(JavaDefaultSerializers.java:111)\r\n    at com.hazelcast.internal.serialization.impl.JavaDefaultSerializers$JavaSerializer.write(JavaDefaultSerializers.java:104)\r\n    at com.hazelcast.internal.serialization.impl.StreamSerializerAdapter.write(StreamSerializerAdapter.java:43)\r\n    at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:158)\r\n    ... 21 more\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/751", "user": "eminn", "labels": ["defect", "pipeline-api"], "created": "2018-02-27 12:56:22", "closed": "2018-02-28 07:18:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SessionWindowP doesn't drop late events", "body": "SessionWindowP currently doesn't drop late events and will include them in the next session instead.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/747", "user": "cangencer", "labels": ["core", "defect"], "created": "2018-02-27 10:02:13", "closed": "2018-02-28 10:42:08", "commits": {"6f5bcb1f07edeec4d796f0e9a2443c465e57c97a": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "6f5bcb1f07edeec4d796f0e9a2443c465e57c97a", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["4052344752b2085d4972fc37bd542f2c25d54b98"], "nameRev": "6f5bcb1f07edeec4d796f0e9a2443c465e57c97a tags/v0.6~45", "commitMessage": "Drop late events in SessionWindowP (#756)\n\nFixes #747", "commitDateTime": "2018-02-28 11:42:07", "authoredDateTime": "2018-02-28 11:42:07", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/test/TestSupport.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/SessionWindowP.java", "insertions": 46, "deletions": 2, "lines": 48}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/SlidingWindowP.java", "insertions": 5, "deletions": 20, "lines": 25}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/Util.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/SessionWindowPTest.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/SessionWindowP_failoverTest.java", "insertions": 97, "deletions": 0, "lines": 97}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestSupport.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.test.TestSupport.snapshotAndRestore(com.hazelcast.jet.core.Processor[],com.hazelcast.jet.core.test.TestOutbox[],java.util.List,boolean,int,int[])", "TOT": 9, "UPD": 1, "INS": 4, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.test.TestSupport.runTest(boolean,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionWindowP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP.init(com.hazelcast.jet.impl.processor.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP.Keys", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP.tryProcess(int,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP.tryProcessWatermark(com.hazelcast.jet.core.Watermark)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP.restoreFromSnapshot(java.lang.Object,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP.finishSnapshotRestore()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP.saveToSnapshot()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SlidingWindowP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.SlidingWindowP.tryProcess(int,java.lang.Object)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SlidingWindowP.restoreFromSnapshot(java.lang.Object,java.lang.Object)", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SlidingWindowP.logLateEvent(long,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.Util.logLateEvent(com.hazelcast.logging.ILogger,long,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionWindowPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowPTest.when_lateEvent_then_dropped()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionWindowP_failoverTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.SessionWindowP_failoverTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "One cannot set backup-count to 0 for InstanceConfig declaratively", "body": "xsd forces to set backup-count to a positive integer\r\nhttps://github.com/hazelcast/hazelcast-jet/blob/master/hazelcast-jet-core/src/main/resources/hazelcast-jet-config-0.6.xsd#L33\r\n\r\nThis is true for flow-control-period too, it is possible to set it to 0 programmatically. I think we should restrict it programmatically too.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/740", "user": "gurbuzali", "labels": ["core", "defect"], "created": "2018-02-24 14:34:13", "closed": "2018-03-02 13:07:51", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Password in group section obsolete", "body": "Group password is being dropped (https://github.com/hazelcast/hazelcast/issues/11667) so should be removed from Jet's IMDG XML.\r\n\r\nAffects\r\nhttps://github.com/hazelcast/hazelcast-jet/blob/master/hazelcast-jet-core/src/main/resources/hazelcast-jet-member-default.xml#L23\r\nand\r\nhttps://github.com/hazelcast/hazelcast-jet/blob/master/hazelcast-jet-core/src/main/resources/hazelcast-jet-client-default.xml#L23", "url": "https://github.com/hazelcast/hazelcast-jet/issues/734", "user": "neilstevenson", "labels": ["core", "defect"], "created": "2018-02-23 09:50:31", "closed": "2019-03-01 07:50:24", "commits": {"343e6093857b0cdd0a5bdbab0616b795813d5cbe": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 370.0002777777778, "commitsDetails": [{"commitHash": "343e6093857b0cdd0a5bdbab0616b795813d5cbe", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["bc0ea9891247b063b3ef2105affb9e282d494eba"], "nameRev": "343e6093857b0cdd0a5bdbab0616b795813d5cbe tags/v3.0~38", "commitMessage": "Remove deprecated password from Jet (#1302)\n\nFixes #734", "commitDateTime": "2019-03-01 08:50:23", "authoredDateTime": "2019-03-01 08:50:23", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/config/JetClientConfig.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/config/JetConfig.java", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/resources/hazelcast-jet-client-default.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "hazelcast-jet-core/src/main/resources/hazelcast-jet-member-default.xml", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetClientConfig.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetClientConfig", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JetConfig.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.config.JetConfig", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.config.JetConfig.defaultHazelcastConfig()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Wrong JavaDoc for the Logger Sinks", "body": "The contract of the logger sinks [says](https://github.com/jerrinot/hazelcast-jet/blob/fb43b4db4aa6b5d11a751b5b4f4ec9a05514d720/hazelcast-jet-core/src/main/java/com/hazelcast/jet/pipeline/Sinks.java#L542-L543):\r\n```\r\nIt doesn't log {@link com.hazelcast.jet.core.Watermark watermark} items.\r\n```\r\n\r\nbut I can actually see watermarks being logged:\r\n```\r\n16:17:06,849  INFO || - [loggerSink#0] hz._hzInstance_1_jet.jet.blocking.thread-2 - [192.168.0.118]:5701 [jet] [0.6-SNAPSHOT] Watermark{ts=1518535012006, formattedTs=2018-02-13T16:16:52.006}\r\n16:17:12,466  INFO || - [loggerSink#0] hz._hzInstance_1_jet.jet.blocking.thread-2 - [192.168.0.118]:5701 [jet] [0.6-SNAPSHOT] Watermark{ts=1518535012037, formattedTs=2018-02-13T16:16:52.037}\r\n```\r\n\r\nand it makes sense given the implementation of the [WriteLoggerP](https://github.com/jerrinot/hazelcast-jet/blob/9cb2c63d0c33429130747376ae78efbe96ebdc07/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteLoggerP.java#L45-L48) processor:\r\n```java\r\n    @Override\r\n    public boolean tryProcessWatermark(@Nonnull Watermark watermark) {\r\n        getLogger().info(watermark.toString());\r\n        return true;\r\n    }\r\n```\r\n\r\n@viliam-durina: I believe this is a side-effect of [this change](https://github.com/jerrinot/hazelcast-jet/commit/6088e45a2456ca6a2accf43469fdb5242599b39f#diff-bb46663d89ca699761938c0efb09292cR45). I don't think this was intentional, it was probably used for debugging when implementing the watermark coalescing? ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/713", "user": "jerrinot", "labels": ["defect", "javadoc"], "created": "2018-02-13 15:22:40", "closed": "2018-02-14 09:03:12", "commits": {"b016e2bf968798f6b1a699ba8e3067aa902bb20d": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b016e2bf968798f6b1a699ba8e3067aa902bb20d", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["7c957357ca025015918b919ed5debc3eaf372710"], "nameRev": "b016e2bf968798f6b1a699ba8e3067aa902bb20d tags/v0.6~69", "commitMessage": "Log WMs at FINE level in WriteLoggerP (#714)\n\nFixes #713", "commitDateTime": "2018-02-14 10:03:11", "authoredDateTime": "2018-02-14 10:03:11", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Sinks.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/processor/DiagnosticProcessors.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/WriteLoggerP.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/WriteLoggerPTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Sinks.java", "spoonMethods": []}, {"spoonFilePath": "DiagnosticProcessors.java", "spoonMethods": []}, {"spoonFilePath": "WriteLoggerP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteLoggerP.tryProcessWatermark(com.hazelcast.jet.core.Watermark)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WriteLoggerPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.WriteLoggerPTest.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "`AutoRestartOnMemberFailure` is false and the job still restarts", "body": "1. start 2 members\r\n2. submit a job with `JobConfig.setAutoRestartOnMemberFailure(false)`\r\n3. shut down one of the members\r\n4. the job restarts", "url": "https://github.com/hazelcast/hazelcast-jet/issues/682", "user": "viliam-durina", "labels": ["defect"], "created": "2018-01-23 09:21:28", "closed": "2018-01-31 10:52:04", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Element supports custom serialization but array is not serializable", "body": "`Tuple2` doesn't implement `java.io.Serializable`, but has serialization hook. The same is true for `java.util.Map.Entry`, but `Entry[]` is serializable.\r\n\r\n            IList<Tuple2[]> tmp = inst[0].getList(\"test\");\r\n            tmp.add(new Tuple2[]{tuple2(1, 2)});\r\n\r\nEception:\r\n\r\n    Exception in thread \"main\" com.hazelcast.nio.serialization.HazelcastSerializationException: Failed to serialize 'com.hazelcast.jet.datamodel.Tuple2'\r\n        at com.hazelcast.internal.serialization.impl.SerializationUtil.handleSerializeException(SerializationUtil.java:75)\r\n        at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:155)\r\n        at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toData(AbstractSerializationService.java:122)\r\n        at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toData(AbstractSerializationService.java:110)\r\n        at com.hazelcast.spi.impl.NodeEngineImpl.toData(NodeEngineImpl.java:334)\r\n        at com.hazelcast.collection.impl.collection.AbstractCollectionProxyImpl.add(AbstractCollectionProxyImpl.java:101)\r\n        at com.hazelcast.jet.stream.impl.ListDecorator.add(ListDecorator.java:106)\r\n        at BatchMapping.main(BatchMapping.java:72)\r\n    Caused by: com.hazelcast.nio.serialization.HazelcastSerializationException: Failed to serialize '[Lcom.hazelcast.jet.datamodel.Tuple2;'\r\n        at com.hazelcast.internal.serialization.impl.SerializationUtil.handleSerializeException(SerializationUtil.java:75)\r\n        at com.hazelcast.internal.serialization.impl.AbstractSerializationService.writeObject(AbstractSerializationService.java:252)\r\n        at com.hazelcast.internal.serialization.impl.ByteArrayObjectDataOutput.writeObject(ByteArrayObjectDataOutput.java:370)\r\n        at com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple2Hook$1.write(DataModelSerializerHooks.java:139)\r\n        at com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple2Hook$1.write(DataModelSerializerHooks.java:135)\r\n        at com.hazelcast.internal.serialization.impl.StreamSerializerAdapter.write(StreamSerializerAdapter.java:43)\r\n        at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toBytes(AbstractSerializationService.java:152)\r\n        ... 6 more\r\n    Caused by: java.io.NotSerializableException: com.hazelcast.jet.datamodel.Tuple2\r\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\r\n        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1378)\r\n        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\r\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\r\n        at com.hazelcast.internal.serialization.impl.JavaDefaultSerializers$JavaSerializer.write(JavaDefaultSerializers.java:242)\r\n        at com.hazelcast.internal.serialization.impl.StreamSerializerAdapter.write(StreamSerializerAdapter.java:43)\r\n        at com.hazelcast.internal.serialization.impl.AbstractSerializationService.writeObject(AbstractSerializationService.java:250)\r\n        ... 11 more", "url": "https://github.com/hazelcast/hazelcast-jet/issues/679", "user": "viliam-durina", "labels": ["core", "defect"], "created": "2018-01-18 10:53:29", "closed": "2018-02-02 08:14:33", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "Sinks.mapWithUpdating fails with java.io.NotSerializableException", "body": "[AbstractEntryProcessor](https://github.com/hazelcast/hazelcast-jet/blob/5f8e59640e9536123e4838a100044b25804b788d/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/HazelcastWriters.java#L105) in `HazelcastWriters.updateMapP` forces Java serialization on entries.\r\n\r\n```\r\nat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348) ~[na:1.8.0_152]\r\n\tat com.hazelcast.internal.serialization.impl.JavaDefaultSerializers$JavaSerializer.write(JavaDefaultSerializers.java:242) ~[hazelcast-jet-0.6-20180109.155423-37.jar:0.6-SNAPSHOT]\r\n\tat com.hazelcast.internal.serialization.impl.StreamSerializerAdapter.write(StreamSerializerAdapter.java:43) ~[hazelcast-jet-0.6-20180109.155423-37.jar:0.6-SNAPSHOT]\r\n\tat com.hazelcast.internal.serialization.impl.AbstractSerializationService.writeObject(AbstractSerializationService.java:250) ~[hazelcast-jet-0.6-20180109.155423-37.jar:0.6-SNAPSHOT]\r\n```\r\nhazelcast/hazelcast#11851", "url": "https://github.com/hazelcast/hazelcast-jet/issues/671", "user": "lukasherman", "labels": ["core", "defect"], "created": "2018-01-12 10:01:01", "closed": "2018-01-12 14:57:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "No results are written into sink when projected field is nullable", "body": "Consider the following example, Hazelcast Member:\r\n```\r\n        Config config = new Config();\r\n        config.getSerializationConfig().addPortableFactory(1, new PortableFactoryImpl());\r\n        HazelcastInstance hazelcastInstance = Hazelcast.newHazelcastInstance(config);\r\n\r\n        IMap<String, User> mapTest1 = hazelcastInstance.getMap(\"test1\");\r\n        mapTest1.put(\"k0\", new User(\"k0\", \"n0\", LocalDate.now()));\r\n        mapTest1.put(\"k1\", new User(\"k1\", \"n1\", LocalDate.now()));\r\n        mapTest1.put(\"k2\", new User(\"k2\", null, LocalDate.now()));\r\n        mapTest1.put(\"k3\", new User(\"k3\", null, LocalDate.now()));\r\n        mapTest1.put(\"k4\", new User(\"k4\", \"n4\", LocalDate.now()));\r\n        mapTest1.put(\"k5\", new User(\"k5\", \"n5\", LocalDate.now()));\r\n\r\n        System.out.println(\"Users count: \" + mapTest1.size());\r\n```\r\nand Jet Member:\r\n```\r\n        JetInstance jet = Jet.newJetInstance();\r\n        Pipeline p1 = Pipeline.create();\r\n\r\n        p1.drawFrom(Sources.<String, ImdgMember.User, String>remoteMap(\"test1\", new ClientConfig(),\r\n// Workaround is to filter out NULLs\r\n//                Predicates.and(Predicates.in(\"id\", \"k1\", \"k2\", \"k3\", \"k4\"), Predicates.not(Predicates.equal(\"name\", null))),\r\n                Predicates.in(\"id\", \"k1\", \"k2\", \"k3\", \"k4\"),\r\n                Projections.singleAttribute(\"name\"))).drainTo(Sinks.list(\"test1\"));\r\n\r\n        jet.newJob(p1).join();\r\n\r\n        IList<String> sink = jet.getList(\"test1\");\r\n        System.out.println(\"Fetched (count=\" + sink.size() + \"): \" + sink.subList(0, sink.size()));\r\n```\r\n\r\nNo items are written to the sink List when some of the matching entries have `null` as the value of field `name`.\r\n\r\n  ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/669", "user": "ncherkas", "labels": ["core", "defect", "kafka"], "created": "2018-01-09 14:58:55", "closed": "2018-01-15 09:30:18", "commits": {"79f029bff68ca6121465da03c4a809dfb25c67b8": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "79f029bff68ca6121465da03c4a809dfb25c67b8", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["29f3af2140f11a8ac8963c4ef6f9b1898e090b77"], "nameRev": "79f029bff68ca6121465da03c4a809dfb25c67b8 tags/v0.6~99", "commitMessage": "Fix & document projection to null (#673)\n\nLinks in javadoc will work when hazelcast/hazelcast#12142 is merged and\r\npom.xml references imdg 3.10. Fixes #669.", "commitDateTime": "2018-01-15 10:30:17", "authoredDateTime": "2018-01-15 10:30:17", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/ComputeStage.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Sources.java", "insertions": 32, "deletions": 3, "lines": 35}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Traverser.java", "insertions": 21, "deletions": 11, "lines": 32}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Traversers.java", "insertions": 25, "deletions": 1, "lines": 26}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/processor/Processors.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/processor/SourceProcessors.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/ReadWithPartitionIteratorP.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/StreamEventJournalP.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/TraverserTest.java", "insertions": 218, "deletions": 0, "lines": 218}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/TraversersTest.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/HazelcastConnectorTest.java", "insertions": 59, "deletions": 4, "lines": 63}, {"filePath": "hazelcast-jet-hadoop/src/main/java/com/hazelcast/jet/HdfsSources.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "hazelcast-jet-hadoop/src/main/java/com/hazelcast/jet/impl/connector/hadoop/ReadHdfsP.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "hazelcast-jet-hadoop/src/test/java/com/hazelcast/jet/impl/connector/hadoop/ReadHdfsPTest.java", "insertions": 37, "deletions": 28, "lines": 65}, {"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/KafkaSources.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/impl/connector/kafka/StreamKafkaP.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "hazelcast-jet-kafka/src/test/java/com/hazelcast/jet/impl/connector/kafka/KafkaTestSupport.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "hazelcast-jet-kafka/src/test/java/com/hazelcast/jet/impl/connector/kafka/StreamKafkaPTest.java", "insertions": 20, "deletions": 0, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ComputeStage.java", "spoonMethods": []}, {"spoonFilePath": "Sources.java", "spoonMethods": []}, {"spoonFilePath": "Traverser.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.flatMap(java.util.function.Function)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.map(java.util.function.Function)", "TOT": 10, "UPD": 1, "INS": 2, "MOV": 5, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.takeWhile(java.util.function.Predicate).1.next()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.dropWhile(java.util.function.Predicate).2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Traversers.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.Traversers.traverseIterator(java.util.Iterator,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Processors.java", "spoonMethods": []}, {"spoonFilePath": "SourceProcessors.java", "spoonMethods": []}, {"spoonFilePath": "ReadWithPartitionIteratorP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadWithPartitionIteratorP", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "StreamEventJournalP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamEventJournalP.nextTraverser()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TraverserTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.TraverserTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TraversersTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.TraversersTest.when_traverseIteratorIgnoringNulls_then_filteredOut()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastConnectorTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_readMap_withPredicateAndDistributedFunction()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_readCache_and_writeCache()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_streamCache()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_streamCache_withFilterAndProjection()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_readMap_withNativePredicateAndProjection()", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_readMap_withProjectionToNull_then_nullsSkipped()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.checkContents_projectedToNull(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_streamMap_withProjectionToNull_then_nullsSkipped()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_streamMap_withFilterAndProjection()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.HazelcastConnectorTest.when_streamMap()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "HdfsSources.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.HdfsSources.hdfs(org.apache.hadoop.mapred.JobConf,com.hazelcast.jet.function.DistributedBiFunction)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReadHdfsP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsP", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsP.traverseRecordReader(org.apache.hadoop.mapred.RecordReader)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsP.Supplier.get(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ReadHdfsPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest.parameters()", "TOT": 20, "UPD": 1, "INS": 7, "MOV": 5, "DEL": 7}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest.setupClass()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest.testReadHdfs()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest.testJus()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest.writeToFile()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest.createPath(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest.expectedSinkSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.hadoop.ReadHdfsPTest.EMapperType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KafkaSources.java", "spoonMethods": []}, {"spoonFilePath": "StreamKafkaP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.StreamKafkaP.validateEnoughPartitions(java.util.List,java.util.List,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.StreamKafkaP.saveToSnapshot()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.StreamKafkaP.complete()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "KafkaTestSupport.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.KafkaTestSupport.createKafkaCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamKafkaPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.StreamKafkaPTest.when_customProjectionToNull_then_filteredOut()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "StreamFilesP should retry emitting line if outbox full", "body": "Currently StreamFilesP doesn't retry emitting the current line if outbox is full.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/658", "user": "cangencer", "labels": ["core", "defect"], "created": "2017-12-20 10:58:12", "closed": "2018-01-31 10:47:22", "commits": {"f07db1a63e53966bc9303a060b8725fa95fc2ffc": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "f07db1a63e53966bc9303a060b8725fa95fc2ffc", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["cddff9e76f04257f4555d1e2e4e3ccfd16782f7a"], "nameRev": "f07db1a63e53966bc9303a060b8725fa95fc2ffc tags/v0.6~91", "commitMessage": "Fix cooperative emission in StreamFilesP (#691)\n\nOther fixes:\r\n\r\n- Fix the case when EOF is encountered mid-line and the reading of the\r\nline resumes later\r\n\r\n- The processor tried to finish watcher events after it was closed,\r\nwhich is nonsense. It's only closed when the job is cancelled or the\r\nwatched directory was deleted. In neither case we should continue the\r\nwork.\r\n\r\n- Updated the test to check cooperative emission.\r\n\r\n- Fix TestProcessorContext.getLogger: the logger was created in\r\nconstructor even though the vertexName or globalProcessorIndex could be\r\nchanged later\r\n\r\nFixes #658\r\n", "commitDateTime": "2018-01-31 11:47:21", "authoredDateTime": "2018-01-31 11:47:21", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/JetInstance.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/test/TestProcessorContext.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/StreamFilesP.java", "insertions": 66, "deletions": 27, "lines": 93}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/StreamFilesPTest.java", "insertions": 72, "deletions": 27, "lines": 99}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetInstance.java", "spoonMethods": []}, {"spoonFilePath": "TestProcessorContext.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.test.TestProcessorContext.logger()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.test.TestProcessorContext", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StreamFilesP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.ensureFileOpen()", "TOT": 11, "UPD": 4, "INS": 4, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.close()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.findNextLine(java.io.Reader,long)", "TOT": 15, "UPD": 2, "INS": 0, "MOV": 12, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.complete()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.processFile()", "TOT": 14, "UPD": 0, "INS": 7, "MOV": 3, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.readCompleteLine(java.io.Reader)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.findEndOfLine(java.io.Reader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.FileOffset", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesP.init(com.hazelcast.jet.impl.connector.Context)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "StreamFilesPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.driveProcessor()", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.after()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.when_fileModifiedButNotAppended_then_seeNoLines()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.initializeProcessor(java.lang.String)", "TOT": 23, "UPD": 7, "INS": 2, "MOV": 12, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.assertEmittedCountEventually(long)", "TOT": 10, "UPD": 2, "INS": 4, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.before()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.when_watchedDirDeleted_then_complete()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.StreamFilesPTest.writeToFile(java.nio.file.Path,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "WriteKafkaP does not handle watermark", "body": "Exception while running kafka-long-running-test with ansible\r\n```\r\nWARNING: [10.0.0.165]:5701 [jet] [0.5.1] Exception in ProcessorTasklet{vertex=write-kafka, processor=com.hazelcast.jet.impl.connector.kafka.WriteKafkaP@6b8478c9}\r\njava.lang.ClassCastException: com.hazelcast.jet.core.Watermark cannot be cast to java.lang.String\r\n    at com.hazelcast.jet.core.processor.KafkaProcessors.lambda$writeKafkaP$fcd060f5$1(KafkaProcessors.java:74)\r\n    at com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.lambda$process$1(WriteKafkaP.java:77)\r\n    at com.hazelcast.jet.core.Inbox.drain(Inbox.java:76)\r\n    at com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.process(WriteKafkaP.java:74)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.stateMachineStep(ProcessorTasklet.java:140)\r\n    at com.hazelcast.jet.impl.execution.ProcessorTasklet.call(ProcessorTasklet.java:124)\r\n    at com.hazelcast.jet.impl.execution.TaskletExecutionService$BlockingWorker.run(TaskletExecutionService.java:185)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n    at java.lang.Thread.run(Thread.java:748)\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/638", "user": "gurbuzali", "labels": ["defect", "kafka"], "created": "2017-12-01 17:43:36", "closed": "2017-12-02 14:28:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Warning reported for incorrect XML schema name", "body": "When using the provided XML config files, on startup we get a warning:\r\n\r\n`Name of the hazelcast schema location incorrect using default`\r\n\r\nWe must fix the XML schema name in our XMLs.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/613", "user": "mtopolnik", "labels": ["core", "defect"], "created": "2017-11-24 10:58:09", "closed": "2017-11-29 08:24:15", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "WriteKafkaP might not meet at least once guarantee", "body": "`KafkaProducer.send` is asynchronous. The Kafka sink might theoretically lose records when snapshot is made, job fails just after it and the async call is not complete yet.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/605", "user": "viliam-durina", "labels": ["defect", "kafka"], "created": "2017-11-21 09:03:24", "closed": "2017-11-28 14:43:37", "commits": {"3f305b20f74fc76c03e2fffa5d3e96a44e197f6c": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}, "13a6e3c00f0a651d6efa2139c5eef586128164a8": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "3f305b20f74fc76c03e2fffa5d3e96a44e197f6c", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["6fee0e7fa658f4be99a8a7b52aa010574dda36a5"], "nameRev": "3f305b20f74fc76c03e2fffa5d3e96a44e197f6c tags/v0.6~129", "commitMessage": "Fix Kafka writer issues (#611)\n\n`KafkaProducer.send()` call is async. This scenario was possible:\r\n- send a record\r\n- do a successful snapshot\r\n- member fails before the async record is sent\r\n- after restart, the record is lost and the at-least-once guarantee broken.\r\n\r\nThis was resolved by calling `producer.flush()` in `saveToSnapshot()`.\r\n\r\nAnother fixes:\r\n- checking for errors from async calls\r\n- improve `Processor.tryProcess()` javadoc\r\n\r\nFixes #605", "commitDateTime": "2017-11-28 15:43:36", "authoredDateTime": "2017-11-28 15:43:36", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/Processor.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/KafkaSinks.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/impl/connector/kafka/WriteKafkaP.java", "insertions": 47, "deletions": 7, "lines": 54}, {"filePath": "hazelcast-jet-kafka/src/test/java/com/hazelcast/jet/KafkaSinkTest.java", "insertions": 121, "deletions": 36, "lines": 157}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Processor.java", "spoonMethods": []}, {"spoonFilePath": "KafkaSinks.java", "spoonMethods": []}, {"spoonFilePath": "WriteKafkaP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.tryProcess(int,java.lang.Object)", "TOT": 10, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.tryProcess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.saveToSnapshot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.ensureAllWritten()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.checkError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.complete()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.Supplier", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KafkaSinkTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.testWriteToTopic()", "TOT": 39, "UPD": 12, "INS": 1, "MOV": 23, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.testWriteToSpecificPartitions()", "TOT": 50, "UPD": 20, "INS": 1, "MOV": 25, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.when_recordLingerEnabled_then_sentOnCompletion()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.when_recordLingerEnabled_then_sentOnSnapshot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.assertTopicContentsEventually(java.util.Map,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.ProcessorWithEntryAndLatch", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.setup()", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "13a6e3c00f0a651d6efa2139c5eef586128164a8", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["730e1f25b65fc0248722f010410c35cf9ebc09c7"], "nameRev": "13a6e3c00f0a651d6efa2139c5eef586128164a8 tags/v0.5.1~10", "commitMessage": "Fix Kafka writer issues (backport of #611)\n\n`KafkaProducer.send()` call is async. This scenario was possible:\r\n- send a record\r\n- do a successful snapshot\r\n- member fails before the async record is sent\r\n- after restart, the record is lost and the at-least-once guarantee broken.\r\n\r\nThis was resolved by calling `producer.flush()` in `saveToSnapshot()`.\r\n\r\nAnother fixes:\r\n- checking for errors from async calls\r\n- improve `Processor.tryProcess()` javadoc\r\n\r\nFixes #605", "commitDateTime": "2017-11-28 16:08:42", "authoredDateTime": "2017-11-28 16:08:42", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/core/Processor.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/KafkaSinks.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "hazelcast-jet-kafka/src/main/java/com/hazelcast/jet/impl/connector/kafka/WriteKafkaP.java", "insertions": 47, "deletions": 7, "lines": 54}, {"filePath": "hazelcast-jet-kafka/src/test/java/com/hazelcast/jet/KafkaSinkTest.java", "insertions": 121, "deletions": 36, "lines": 157}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Processor.java", "spoonMethods": []}, {"spoonFilePath": "KafkaSinks.java", "spoonMethods": []}, {"spoonFilePath": "WriteKafkaP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.tryProcess(int,java.lang.Object)", "TOT": 10, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.tryProcess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.saveToSnapshot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.ensureAllWritten()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.checkError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.complete()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.kafka.WriteKafkaP.Supplier", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "KafkaSinkTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.testWriteToTopic()", "TOT": 39, "UPD": 12, "INS": 1, "MOV": 23, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.testWriteToSpecificPartitions()", "TOT": 50, "UPD": 20, "INS": 1, "MOV": 25, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.when_recordLingerEnabled_then_sentOnCompletion()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.when_recordLingerEnabled_then_sentOnSnapshot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.assertTopicContentsEventually(java.util.Map,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.ProcessorWithEntryAndLatch", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.KafkaSinkTest.setup()", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "JetInstance.getJobs() should not create pending invocations for each running Job", "body": "Currently when you call `JetInstance.getJobs()` it creates pending invocations for each job because it sends a `JoinJobOperation` per job.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/602", "user": "cangencer", "labels": ["core", "defect"], "created": "2017-11-16 14:03:31", "closed": "2017-12-01 09:26:21", "commits": {"02dedba3c2f4dcc1cb7c18ebba6ac101bc27b866": {"commitGHEventType": "referenced", "commitUser": "cangencer"}, "60a48f1a2bbcb30e752f61fe0ca9deb015490ab6": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "02dedba3c2f4dcc1cb7c18ebba6ac101bc27b866", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["50f85293bd21c8f3b911936641f03c3dfea7c90b"], "nameRev": "02dedba3c2f4dcc1cb7c18ebba6ac101bc27b866 tags/v0.6~125", "commitMessage": "Send join request for job only when Job.getFuture() is called (#628)\n\nIncludes refactoring of job proxies\r\n\r\nFixes #602 ", "commitDateTime": "2017-12-01 10:26:20", "authoredDateTime": "2017-12-01 10:26:20", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/JetInstance.java", "insertions": 21, "deletions": 6, "lines": 27}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJetInstance.java", "insertions": 18, "deletions": 10, "lines": 28}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJobImpl.java", "insertions": 0, "deletions": 160, "lines": 160}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJobProxy.java", "insertions": 192, "deletions": 0, "lines": 192}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractSubmittedJobImpl.java", "insertions": 0, "deletions": 80, "lines": 80}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractTrackedJobImpl.java", "insertions": 0, "deletions": 35, "lines": 35}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java", "insertions": 201, "deletions": 0, "lines": 201}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetClientInstanceImpl.java", "insertions": 20, "deletions": 221, "lines": 241}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetInstanceImpl.java", "insertions": 17, "deletions": 117, "lines": 134}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobProxy.java", "insertions": 90, "deletions": 0, "lines": 90}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/ExceptionUtil.java", "insertions": 7, "deletions": 7, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetInstance.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.getConfig()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.getName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getHazelcastInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.newJob(com.hazelcast.jet.core.DAG)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.newJob(com.hazelcast.jet.core.DAG,com.hazelcast.jet.config.JobConfig)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.newJob(com.hazelcast.jet.Pipeline)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.newJob(com.hazelcast.jet.Pipeline,com.hazelcast.jet.config.JobConfig)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getJobs()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getMap(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getList(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getCacheManager()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractJetInstance.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.uploadResourcesAndAssignId(com.hazelcast.jet.config.JobConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getHazelcastInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getMap(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getList(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getCacheManager()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractJobImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractJobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJobProxy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSubmittedJobImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractSubmittedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractTrackedJobImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractTrackedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClientJobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.ClientJobProxy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetClientInstanceImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.newJob(com.hazelcast.jet.core.DAG,com.hazelcast.jet.config.JobConfig)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.masterAddress()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.getJobs()", "TOT": 27, "UPD": 5, "INS": 4, "MOV": 7, "DEL": 11}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.newJob(com.hazelcast.jet.core.DAG)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.sendJobStatusRequest(long,boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.getLogger(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.jobObjectName(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.SubmittedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.TrackedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.ExecutionFuture", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.getConfig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.masterAddress(com.hazelcast.core.Cluster)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetInstanceImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.newJob(com.hazelcast.jet.core.DAG,com.hazelcast.jet.config.JobConfig)", "TOT": 13, "UPD": 4, "INS": 2, "MOV": 3, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.getJobs()", "TOT": 19, "UPD": 3, "INS": 3, "MOV": 4, "DEL": 9}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.newJob(com.hazelcast.jet.core.DAG)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.sendJobStatusRequest(long,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.SubmittedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.TrackedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.getConfig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.SubmittedJobImpl.sendJoinRequest(com.hazelcast.nio.Address)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.getJobStatus(long)", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 6, "DEL": 0}]}, {"spoonFilePath": "JobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobProxy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExceptionUtil.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.ExceptionUtil.peel(java.lang.Throwable)", "TOT": 11, "UPD": 6, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "60a48f1a2bbcb30e752f61fe0ca9deb015490ab6", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["7605093f5e2be776f9c361ac811781db5f03e2b2"], "nameRev": "60a48f1a2bbcb30e752f61fe0ca9deb015490ab6 tags/v0.5.1~7", "commitMessage": "Send join request for job only when Job.getFuture() is called (#628)\n\nIncludes refactoring of job proxies\r\n\r\nFixes #602 ", "commitDateTime": "2017-12-01 11:06:19", "authoredDateTime": "2017-12-01 10:26:20", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/JetInstance.java", "insertions": 21, "deletions": 6, "lines": 27}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJetInstance.java", "insertions": 18, "deletions": 10, "lines": 28}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJobImpl.java", "insertions": 0, "deletions": 160, "lines": 160}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJobProxy.java", "insertions": 192, "deletions": 0, "lines": 192}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractSubmittedJobImpl.java", "insertions": 0, "deletions": 80, "lines": 80}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractTrackedJobImpl.java", "insertions": 0, "deletions": 35, "lines": 35}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/ClientJobProxy.java", "insertions": 201, "deletions": 0, "lines": 201}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetClientInstanceImpl.java", "insertions": 20, "deletions": 221, "lines": 241}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JetInstanceImpl.java", "insertions": 17, "deletions": 117, "lines": 134}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobCoordinationService.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobProxy.java", "insertions": 90, "deletions": 0, "lines": 90}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/util/ExceptionUtil.java", "insertions": 7, "deletions": 7, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JetInstance.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.getConfig()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.getName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getHazelcastInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.newJob(com.hazelcast.jet.core.DAG)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.newJob(com.hazelcast.jet.core.DAG,com.hazelcast.jet.config.JobConfig)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.newJob(com.hazelcast.jet.Pipeline)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.newJob(com.hazelcast.jet.Pipeline,com.hazelcast.jet.config.JobConfig)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getJobs()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getMap(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getList(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.getCacheManager()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractJetInstance.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.uploadResourcesAndAssignId(com.hazelcast.jet.config.JobConfig)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getCluster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getHazelcastInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getMap(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getList(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.AbstractJetInstance.getCacheManager()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractJobImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractJobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJobProxy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSubmittedJobImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractSubmittedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractTrackedJobImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractTrackedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClientJobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.ClientJobProxy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetClientInstanceImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.newJob(com.hazelcast.jet.core.DAG,com.hazelcast.jet.config.JobConfig)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.masterAddress()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.getJobs()", "TOT": 27, "UPD": 5, "INS": 4, "MOV": 7, "DEL": 11}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.newJob(com.hazelcast.jet.core.DAG)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.sendJobStatusRequest(long,boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.getLogger(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.jobObjectName(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.SubmittedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.TrackedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.ExecutionFuture", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.getConfig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JetClientInstanceImpl.masterAddress(com.hazelcast.core.Cluster)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetInstanceImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.newJob(com.hazelcast.jet.core.DAG,com.hazelcast.jet.config.JobConfig)", "TOT": 13, "UPD": 4, "INS": 2, "MOV": 3, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.getJobs()", "TOT": 19, "UPD": 3, "INS": 3, "MOV": 4, "DEL": 9}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.newJob(com.hazelcast.jet.core.DAG)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.sendJobStatusRequest(long,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.SubmittedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.TrackedJobImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.getConfig()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.JetInstanceImpl.SubmittedJobImpl.sendJoinRequest(com.hazelcast.nio.Address)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JobCoordinationService.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobCoordinationService.getJobStatus(long)", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 6, "DEL": 0}]}, {"spoonFilePath": "JobProxy.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobProxy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExceptionUtil.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.util.ExceptionUtil.peel(java.lang.Throwable)", "TOT": 11, "UPD": 6, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PeekWrappedP obscures actual class of the processor", "body": "When logging using PeekWrappedP it obscures the class of the actual processor:\r\n\r\n```16:05:29,650  INFO || - [com.hazelcast.jet.impl.processor.PeekWrappedP.groupByKey.cd6373be.stage2#0] hz._hzInstance_1_jet.jet.cooperative.thread-1 - [10.0.1.3]:5701 [jet] [0.6-SNAPSHOT] Output to 0: accusers=6```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/595", "user": "cangencer", "labels": ["core", "defect"], "created": "2017-11-14 15:08:33", "closed": "2017-11-27 07:49:49", "commits": {"dbfd6e47408b8fcc3ece8187e92785bc1b631720": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}, "acec997bbf0a6c324168ebbe42f7fc85f9fc0e22": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "dbfd6e47408b8fcc3ece8187e92785bc1b631720", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["b3f1d239d0745f21f074bf63bf41a680abfb41e1"], "nameRev": "dbfd6e47408b8fcc3ece8187e92785bc1b631720 tags/v0.6~133", "commitMessage": "PeekWrappedP changes logger for wrapped processor (#610)\n\nFixes #595", "commitDateTime": "2017-11-27 08:49:49", "authoredDateTime": "2017-11-27 08:49:49", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/PeekWrappedP.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExecutionPlan.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.initialize(com.hazelcast.spi.NodeEngine,long,long,com.hazelcast.jet.impl.execution.SnapshotContext)", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.createLoggerName(java.lang.String,java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PeekWrappedP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.PeekWrappedP.init(com.hazelcast.jet.core.Outbox,com.hazelcast.jet.impl.processor.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "acec997bbf0a6c324168ebbe42f7fc85f9fc0e22", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["eed3a8c1192fefa91f95774aefe2e5bcd287c3ec"], "nameRev": "acec997bbf0a6c324168ebbe42f7fc85f9fc0e22 tags/v0.5.1~13", "commitMessage": "PeekWrappedP changes logger for wrapped processor (#617)\n\nFixes #595", "commitDateTime": "2017-11-27 09:17:02", "authoredDateTime": "2017-11-27 09:17:02", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/execution/init/ExecutionPlan.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/PeekWrappedP.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExecutionPlan.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.initialize(com.hazelcast.spi.NodeEngine,long,long,com.hazelcast.jet.impl.execution.SnapshotContext)", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.execution.init.ExecutionPlan.createLoggerName(java.lang.String,java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PeekWrappedP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.PeekWrappedP.init(com.hazelcast.jet.core.Outbox,com.hazelcast.jet.impl.processor.Context)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Setting ttl on 'default' map affects JobRepository.JOB_RECORDS_MAP_NAME", "body": "Hello Jet Team,\r\nI have observed during debugging mysterious disappearing jobs issue that the ttl set on map entries referenced by JobRepository.JOB_RECORDS_MAP_NAME is the same as set on 'default' map via MapConfig. \r\nCan you please ensure that 'default' map settings do not interfere with JobRepository entries?\r\n\r\nRegards\r\nLH", "url": "https://github.com/hazelcast/hazelcast-jet/issues/592", "user": "lukasherman", "labels": ["core", "defect"], "created": "2017-11-10 14:43:41", "closed": "2017-11-14 11:35:19", "commits": {"96a75a67911f810e53dac08e3bbb4aef9dc45f04": {"commitGHEventType": "closed", "commitUser": "viliam-durina"}, "7605093f5e2be776f9c361ac811781db5f03e2b2": {"commitGHEventType": "referenced", "commitUser": "viliam-durina"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "96a75a67911f810e53dac08e3bbb4aef9dc45f04", "commitGHEventType": "closed", "commitUser": "viliam-durina", "commitParents": ["3b30a74ba268eba115d720da567d8da880ce53a8"], "nameRev": "96a75a67911f810e53dac08e3bbb4aef9dc45f04 tags/v0.6~135", "commitMessage": "Hat-trick fix (#594)\n\n* Don't inherit default config for Jet maps\r\nFixes #592\r\n\r\n* Fix JobRestartWithSnapshotTest on Enterprise HZ\r\nFixes #591\r\n\r\n* Make the internal objects prefix public\r\nFixes #583\r\n", "commitDateTime": "2017-11-14 12:35:18", "authoredDateTime": "2017-11-14 12:35:18", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Jet.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobRepository.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/JetTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartWithSnapshotTest.java", "insertions": 5, "deletions": 6, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jet.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.Jet", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.Jet.configureJetService(com.hazelcast.jet.config.JetConfig)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "JobRepository.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobRepository", "TOT": 10, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 4}]}, {"spoonFilePath": "JetTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.JetTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRestartWithSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobRestartWithSnapshotTest.waitForNextSnapshot(com.hazelcast.jet.stream.IStreamMap,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.JobRestartWithSnapshotTest.when_nodeDown_then_jobRestartsFromSnapshot(boolean)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7605093f5e2be776f9c361ac811781db5f03e2b2", "commitGHEventType": "referenced", "commitUser": "viliam-durina", "commitParents": ["a727dacdad3cc44b25a257c0ee1fd47c64c09416"], "nameRev": "7605093f5e2be776f9c361ac811781db5f03e2b2 tags/v0.5.1~8", "commitMessage": "Hat-trick fix (backport of #594)\n\n* Don't inherit default config for Jet maps\r\nFixes #592\r\n\r\n* Fix JobRestartWithSnapshotTest on Enterprise HZ\r\nFixes #591\r\n\r\n* Make the internal objects prefix public\r\nFixes #583", "commitDateTime": "2017-11-30 10:13:44", "authoredDateTime": "2017-11-30 10:13:44", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Jet.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/JobRepository.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/JetTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobRestartWithSnapshotTest.java", "insertions": 5, "deletions": 6, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jet.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.Jet", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.Jet.configureJetService(com.hazelcast.jet.config.JetConfig)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "JobRepository.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.JobRepository", "TOT": 10, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 4}]}, {"spoonFilePath": "JetTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.JetTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JobRestartWithSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobRestartWithSnapshotTest.waitForNextSnapshot(com.hazelcast.jet.stream.IStreamMap,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.core.JobRestartWithSnapshotTest.when_nodeDown_then_jobRestartsFromSnapshot(boolean)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "KafkaReader doesn't close cleanly when cancelling job", "body": "When reading from Kafka and cancelling the job, this exception is sometimes thrown:\r\n\r\n```55:26,612 [10.0.1.3]:5702 [jet] [0.5-SNAPSHOT] job ff48-7219-d4ca-c9a5, execution c12a-9c40-7ed7-86b2 encountered an exception in ProcessorSupplier.complete(), ignoring it\r\njava.util.ConcurrentModificationException: KafkaConsumer is not safe for multi-threaded access\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.acquire(KafkaConsumer.java:1673)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.close(KafkaConsumer.java:1571)\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.close(KafkaConsumer.java:1549)\r\n\tat com.hazelcast.jet.impl.connector.kafka.StreamKafkaP.close(StreamKafkaP.java:186)\r\n\tat com.hazelcast.jet.core.CloseableProcessorSupplier.complete(CloseableProcessorSupplier.java:83)\r\n\tat com.hazelcast.jet.impl.execution.ExecutionContext.lambda$complete$2(ExecutionContext.java:151)```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/589", "user": "cangencer", "labels": ["core", "defect"], "created": "2017-11-10 08:56:36", "closed": "2017-11-27 07:56:28", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "When snapshotting enabled, sliding window processor producing incorrect results.", "body": "This is a log from single node jet single node kafka setup of `LongRunningKafkaTest`\r\n with snapshotting enabled. Repeated runs shows that there is a correlation with the incorrect window results and snapshotting happening that time.\r\n\r\n```\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Starting snapshot 5 for job d5d1-4883-c9c2-0c3c, execution 07bb-4e08-00ba-e627\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Watermark{ts=881, formattedTs=02:00:00.881}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Watermark{ts=881, formattedTs=02:00:00.881}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Watermark{ts=881, formattedTs=02:00:00.881}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Watermark{ts=881, formattedTs=02:00:00.881}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#2\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#0\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#6\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.processor.PeekWrappedP.insert-punctuation#4\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Output to 0: Trade{time=882, ticker='MAR', quantity=100, price=10000}\r\nNov 07, 2017 3:16:34 PM com.hazelcast.jet.impl.JobCoordinationService\r\nINFO: [192.168.2.31]:5701 [jet] [0.5-SNAPSHOT] Snapshot 5 for job d5d1-4883-c9c2-0c3c completed with status SUCCESSFUL in 29ms\r\n```\r\n\r\n```\r\ncom.hazelcast.jet.JetException: Exception in ProcessorTasklet{vertex=verification, \r\nprocessor=tests.kafka.VerificationProcessor@2ae8cb02}: java.lang.AssertionError: produced \r\nresults are not matching for ticker -> MAR expected -> 100, actual -> 56\r\n\tat tests.kafka.VerificationProcessor.tryProcess0(VerificationProcessor.java:59)\r\n\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/584", "user": "eminn", "labels": ["core", "defect", "test-failure"], "created": "2017-11-07 13:25:21", "closed": "2017-11-07 15:34:42", "commits": {"02ab909954b089aef311f7a380e3d86edbdbf9bc": {"commitGHEventType": "referenced", "commitUser": "gurbuzali"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "02ab909954b089aef311f7a380e3d86edbdbf9bc", "commitGHEventType": "referenced", "commitUser": "gurbuzali", "commitParents": ["a04cc7f959201d72dd830e46a50f56b4b4466fe1"], "nameRev": "02ab909954b089aef311f7a380e3d86edbdbf9bc tags/v0.5~11", "commitMessage": "nextWmToEmit should not move forwards when flushing buffers in SlidingWindowP\n\nThis causes the internal pointer to next watermark to advance too quickly and\ncan cause windows to be not accumulated correctly.\n\nFixes #584", "commitDateTime": "2017-11-07 17:34:40", "authoredDateTime": "2017-11-07 15:17:55", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor/SlidingWindowP.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/processor/SlidingWindowP_twoStageSnapshotTest.java", "insertions": 25, "deletions": 8, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SlidingWindowP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.SlidingWindowP.windowTraverserAndEvictor(long)", "TOT": 18, "UPD": 1, "INS": 4, "MOV": 7, "DEL": 6}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SlidingWindowP", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SlidingWindowP_twoStageSnapshotTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.processor.SlidingWindowP_twoStageSnapshotTest", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SlidingWindowP_twoStageSnapshotTest.data()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.processor.SlidingWindowP_twoStageSnapshotTest.test()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["02ab909954b089aef311f7a380e3d86edbdbf9bc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 6, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 20, "UPD": 1, "INS": 5, "MOV": 8, "DEL": 6, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/processor"], "changesInPackagesSPOON": ["com.hazelcast.jet.impl.processor.SlidingWindowP", "com.hazelcast.jet.impl.processor.SlidingWindowP.windowTraverserAndEvictor(long)"]}, {"title": "Exception on JobStatus query", "body": "When a job submitted from client or non-master member and if job status is queried, following exception is thrown\r\n\r\n```\r\njava.lang.IllegalArgumentException: Job 7c96-a61f-545d-7e52 not found\r\n\tat com.hazelcast.jet.impl.JobCoordinationService.getJobStatus(JobCoordinationService.java:309)\r\n\tat com.hazelcast.jet.impl.JetService.getJobStatus(JetService.java:166)\r\n\tat com.hazelcast.jet.impl.operation.GetJobStatusOperation.run(GetJobStatusOperation.java:45)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:194)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:406)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:433)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:569)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:554)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:513)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:207)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:60)\r\n\tat com.hazelcast.client.impl.protocol.task.AbstractInvocationMessageTask.processMessage(AbstractInvocationMessageTask.java:42)\r\n\tat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:123)\r\n\tat com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:103)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:243)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n\tat com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.client.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:96)\r\n\tat com.hazelcast.client.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:33)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:155)\r\n\tat com.hazelcast.jet.impl.JetClientInstanceImpl.sendJobStatusRequest(JetClientInstanceImpl.java:120)\r\n\tat com.hazelcast.jet.impl.JetClientInstanceImpl.access$300(JetClientInstanceImpl.java:60)\r\n\tat com.hazelcast.jet.impl.JetClientInstanceImpl$SubmittedJobImpl.sendJobStatusRequest(JetClientInstanceImpl.java:161)\r\n\tat com.hazelcast.jet.impl.AbstractJobImpl.getJobStatus(AbstractJobImpl.java:89)\r\n\tat com.hazelcast.jet.tests.kafka.LongRunningKafkaSessionWindowTest.kafkaTest(LongRunningKafkaSessionWindowTest.java:151)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:77)\r\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:36)\r\n\tat com.hazelcast.jet.tests.kafka.LongRunningKafkaSessionWindowTest.main(LongRunningKafkaSessionWindowTest.java:85)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.hazelcast.jet.server.JetBootstrap.main(JetBootstrap.java:130)\r\n\r\nFAILURES!!!\r\nTests run: 1,  Failures: 1\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/581", "user": "eminn", "labels": ["core", "defect", "test-failure"], "created": "2017-11-06 10:24:12", "closed": "2017-11-07 11:53:03", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Job.getJobStatus() doesn't reflect actual status during cancellation", "body": "When a job is cancelled, getJobStatus() immediately returns the job as completed, even though it might still be running on the cluster. This makes detection of actual job completion impossible.\r\n\r\nhttps://groups.google.com/forum/#!topic/hazelcast-jet/BuBn2yZf7as ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/579", "user": "cangencer", "labels": ["core", "defect"], "created": "2017-11-03 13:41:39", "closed": "2017-11-06 08:03:20", "commits": {"b62a5897a6568c99d69f4b4a6d8c6dfb8a983d06": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "b62a5897a6568c99d69f4b4a6d8c6dfb8a983d06", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["d37ed01bac17f893901293658ff863410b40286e"], "nameRev": "b62a5897a6568c99d69f4b4a6d8c6dfb8a983d06 tags/v0.5~13", "commitMessage": "Return actual job status on job cancellation (#580)\n\nWhen a job is cancelled, instead of JobStatus.COMPLETED return\r\nthe actual status. Fixes #579.", "commitDateTime": "2017-11-06 09:03:19", "authoredDateTime": "2017-11-06 09:03:19", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/Job.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/AbstractJobImpl.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/core/JobTest.java", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Job.java", "spoonMethods": []}, {"spoonFilePath": "AbstractJobImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.AbstractJobImpl.getJobStatus()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "JobTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.core.JobTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "When init phase for the job fails, StreamKafkaP throws NPE", "body": "```\r\nOct 26, 2017 10:31:47 AM com.hazelcast.jet.core.CloseableProcessorSupplier.read-kafka#ProcessorSupplier\r\nSEVERE: [192.168.2.36]:5703 [jet] [0.5-SNAPSHOT] null\r\njava.lang.NullPointerException\r\n\tat com.hazelcast.jet.impl.connector.kafka.StreamKafkaP.close(StreamKafkaP.java:179)\r\n\tat com.hazelcast.jet.core.CloseableProcessorSupplier.complete(CloseableProcessorSupplier.java:83)\r\n\tat com.hazelcast.jet.impl.execution.ExecutionContext.lambda$complete$2(ExecutionContext.java:151)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1249)\r\n\tat java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)\r\n\tat com.hazelcast.jet.impl.execution.ExecutionContext.complete(ExecutionContext.java:149)\r\n\tat com.hazelcast.jet.impl.JobExecutionService.completeExecution(JobExecutionService.java:279)\r\n\tat com.hazelcast.jet.impl.JetService.completeExecution(JetService.java:162)\r\n\tat com.hazelcast.jet.impl.operation.CompleteOperation.run(CompleteOperation.java:63)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:194)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:409)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:115)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:100)\r\n```\r\n\r\n`L:177-180 StreamKafkaP` \r\n\r\n```\r\n    @Override\r\n    public void close() {\r\n        consumer.close();\r\n    }\r\n```\r\nA null check should be added there.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/566", "user": "eminn", "labels": ["defect", "kafka"], "created": "2017-10-26 10:32:12", "closed": "2017-10-26 11:32:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "When a Jet job is cancelled and progress made on hdfs is lost", "body": "Since the `complete()` method is not called on the `WriteHdfsP` the tasks' output cannot be committed correctly and the files cannot be written to the hdfs.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/565", "user": "eminn", "labels": ["defect", "hadoop"], "created": "2017-10-26 10:28:37", "closed": "2017-10-30 13:48:03", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Startup fails in a Spring boot application.", "body": "I am trying to start Jet as a simple spring boot application with no other dependencies.\r\n\r\nAdded a Bean that creates a Jet instance with default configuration.\r\n\r\n>  @Bean\r\n    public JetInstance getJetInstance(){\r\n        return Jet.newJetInstance();\r\n    }\r\n\r\nJet version is 0.4\r\n\r\nBelow is the error:\r\nCaused by: java.lang.IllegalStateException: Failed to introspect Class [com.hazelcast.jet.impl.JetInstanceImpl] from ClassLoader [sun.misc.Launcher$AppClassLoader@18b4aac2]\r\n\tat org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:656) ~[spring-core-5.0.0.RC2.jar:5.0.0.RC2]\r\n\r\nCaused by: java.lang.ClassNotFoundException: javax.cache.Cache\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_74]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_74]\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) ~[na:1.8.0_74]\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_74]\r\n\t... 47 common frames omitted\r\n\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/483", "user": "manishonline", "labels": ["core", "defect"], "created": "2017-07-11 06:31:34", "closed": "2017-07-18 14:08:03", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Traversers.traverseStream does not close the stream", "body": "The contract of `Stream` is such that the stream is not automatically closed when exhausted. When the stream's source is a file or other system resource, it doesn't get released.\r\n\r\nProposed fix:\r\n\r\n```java\r\n/**\r\n * Returns a traverser over the given stream of non-null elements. It will \r\n * traverse the stream through its spliterator, which it obtains \r\n * immediately. When it exhausts the stream, it will close it.\r\n */\r\n@Nonnull\r\npublic static <T> Traverser<T> traverseStream(@Nonnull Stream<T> stream) {\r\n    return spliterate(stream.spliterator()).onFirstNull(stream::close);\r\n}\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/482", "user": "mtopolnik", "labels": ["core", "defect"], "created": "2017-07-05 06:15:35", "closed": "2017-10-25 13:34:02", "commits": {}, "ttf": 112.00027777777778, "commitsDetails": []}, {"title": "Kafka connector may miss heartbeat/session timeout interval", "body": "Hi All,\r\n\r\nIn the complete() method of ReadKafkaP, we emitCooperatively() the last polled batch and do not poll until the batch is done. If the downstream vertices are slow, it is possible that the emitting takes longer than session timeout for kafka in which case, kafka will assume the node to be dead and issue a rebalance, which is an expensive operation. We should ensure that processing time has no/minimal impact on the timeouts by:\r\n\r\n1. pausing the partitions once data is fetched\r\n2. Doing (empty) poll more frequently to stay within heartbeat/session timeout range\r\n3. resuming the partitions once emitCooperatively() returns true. ", "url": "https://github.com/hazelcast/hazelcast-jet/issues/428", "user": "sandeepmalik", "labels": ["defect", "kafka"], "created": "2017-05-09 23:56:57", "closed": "2017-09-21 08:47:08", "commits": {}, "ttf": 134.00027777777777, "commitsDetails": []}, {"title": "jet requires JCache - 0.3.2-SNASHOT", "body": "last updated snapshot requires jcache `20170328042018`\r\n\r\n```\r\nException in thread \"main\" java.lang.NoClassDefFoundError: javax/cache/Cache$Entry\r\n\tat com.hazelcast.jet.impl.execution.init.JetSerializerHook$CacheEntry.getSerializationType(JetSerializerHook.java:148)\r\n\tat com.hazelcast.internal.serialization.impl.SerializerHookLoader.load(SerializerHookLoader.java:63)\r\n\tat com.hazelcast.internal.serialization.impl.SerializerHookLoader.<init>(SerializerHookLoader.java:55)\r\n\tat com.hazelcast.internal.serialization.impl.DefaultSerializationServiceBuilder.registerSerializerHooks(DefaultSerializationServiceBuilder.java:282)\r\n\tat com.hazelcast.internal.serialization.impl.DefaultSerializationServiceBuilder.build(DefaultSerializationServiceBuilder.java:223)\r\n\tat com.hazelcast.internal.serialization.impl.DefaultSerializationServiceBuilder.build(DefaultSerializationServiceBuilder.java:49)\r\n\tat com.hazelcast.instance.DefaultNodeExtension.createSerializationService(DefaultNodeExtension.java:151)\r\n\tat com.hazelcast.instance.Node.<init>(Node.java:201)\r\n\tat com.hazelcast.instance.HazelcastInstanceImpl.createNode(HazelcastInstanceImpl.java:163)\r\n\tat com.hazelcast.instance.HazelcastInstanceImpl.<init>(HazelcastInstanceImpl.java:130)\r\n\tat com.hazelcast.instance.HazelcastInstanceFactory.constructHazelcastInstance(HazelcastInstanceFactory.java:218)\r\n\tat com.hazelcast.instance.HazelcastInstanceFactory.newHazelcastInstance(HazelcastInstanceFactory.java:176)\r\n\tat com.hazelcast.instance.HazelcastInstanceFactory.newHazelcastInstance(HazelcastInstanceFactory.java:126)\r\n\tat com.hazelcast.core.Hazelcast.newHazelcastInstance(Hazelcast.java:58)\r\n\tat com.hazelcast.jet.Jet.newJetInstance(Jet.java:49)\r\n\tat com.hazelcast.jet.Jet.newJetInstance(Jet.java:58)\r\n\tat com.hazelcast.techops.jet.training.essentials.MyJetInstance.main(MyJetInstance.java:19)\r\nCaused by: java.lang.ClassNotFoundException: javax.cache.Cache$Entry\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\t... 17 more\r\n```", "url": "https://github.com/hazelcast/hazelcast-jet/issues/366", "user": "gAmUssA", "labels": ["critical", "defect"], "created": "2017-03-28 13:01:06", "closed": "2017-03-29 07:34:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ReadSocketTextStreamP should emit items as they come", "body": "Currently ReadSocketTextStreamP waits until Outbox is full before returning. It should only emit one item and immediately return.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/334", "user": "cangencer", "labels": ["defect"], "created": "2017-03-06 08:22:20", "closed": "2017-03-07 08:46:06", "commits": {"193ed6d13fc9b9e93958a8414b8bdce20848cf94": {"commitGHEventType": "referenced", "commitUser": "cangencer"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "193ed6d13fc9b9e93958a8414b8bdce20848cf94", "commitGHEventType": "referenced", "commitUser": "cangencer", "commitParents": ["efca6c1239769a9275344e10ad720f0e8380cfa0"], "nameRev": "193ed6d13fc9b9e93958a8414b8bdce20848cf94 tags/v0.3.1~20", "commitMessage": "ReadSocketTextStreamP should immediately emit items after reading\n\nFixes #334\n", "commitDateTime": "2017-03-07 09:46:05", "authoredDateTime": "2017-03-06 14:45:54", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector/ReadSocketTextStreamP.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/impl/connector/ReadSocketTextStreamPTest.java", "insertions": 10, "deletions": 5, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReadSocketTextStreamP.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadSocketTextStreamP.tryComplete()", "TOT": 12, "UPD": 1, "INS": 3, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadSocketTextStreamP", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadSocketTextStreamP.init(com.hazelcast.jet.impl.connector.Context)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "ReadSocketTextStreamPTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadSocketTextStreamPTest.when_dataWrittenToSocket_then_dataReadFromReader()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.impl.connector.ReadSocketTextStreamPTest.when_dataWrittenToSocket_then_dataImmediatelyEmitted()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["193ed6d13fc9b9e93958a8414b8bdce20848cf94"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 8, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 18, "UPD": 1, "INS": 5, "MOV": 8, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/connector"], "changesInPackagesSPOON": ["com.hazelcast.jet.impl.connector.ReadSocketTextStreamP", "com.hazelcast.jet.impl.connector.ReadSocketTextStreamP.tryComplete()", "com.hazelcast.jet.impl.connector.ReadSocketTextStreamP.init(com.hazelcast.jet.impl.connector.Context)"]}, {"title": "Getting exception during process of Word Count example", "body": "Hi \r\n\r\nJust trying with some example on my local  and I found that there is a issue when we try to configure the Management center with Hazelcast Config and Jet Config as:\r\n\r\n\tConfig hzCfg = new Config();\r\n    \thzCfg.setManagementCenterConfig(new ManagementCenterConfig(\"http://localhost:8082/mancenter\", 3).setEnabled(true));\r\n        JetConfig cfg = new JetConfig();\r\n        cfg.setInstanceConfig(new InstanceConfig().setCooperativeThreadCount(\r\n                Math.max(1, getRuntime().availableProcessors() / 2)));\r\n        cfg.setHazelcastConfig(hzCfg);\r\n\r\nI tried with WordCount example available in Sample repository of Hazelcast Jet.\r\n\r\n\r\nCreating Jet instance 1\r\nFeb 15, 2017 1:06:28 PM com.hazelcast.instance.DefaultAddressPicker\r\nINFO: [LOCAL] [dev] [0.3] [3.8-RC1] Prefer IPv4 stack is true.\r\nFeb 15, 2017 1:06:29 PM com.hazelcast.instance.DefaultAddressPicker\r\nINFO: [LOCAL] [dev] [0.3] [3.8-RC1] Picked [10.162.55.6]:5701, using socket ServerSocket[addr=/0:0:0:0:0:0:0:0,localport=5701], bind any local is true\r\nFeb 15, 2017 1:06:29 PM com.hazelcast.system\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Hazelcast 3.8-RC1 (20170201 - 609ebbc) starting at [10.162.55.6]:5701\r\nFeb 15, 2017 1:06:29 PM com.hazelcast.system\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Copyright (c) 2008-2016, Hazelcast, Inc. All Rights Reserved.\r\nFeb 15, 2017 1:06:29 PM com.hazelcast.system\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Configured Hazelcast Serialization version : 1\r\nFeb 15, 2017 1:06:29 PM com.hazelcast.spi.impl.operationservice.impl.BackpressureRegulator\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Backpressure is disabled\r\nFeb 15, 2017 1:06:31 PM com.hazelcast.instance.Node\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Creating MulticastJoiner\r\nFeb 15, 2017 1:06:31 PM com.hazelcast.jet.impl.JetService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Starting Jet 0.3 (20170206 - 5c8738d) \r\nFeb 15, 2017 1:06:31 PM com.hazelcast.jet.impl.JetService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Setting number of cooperative threads and default parallelism to 2\r\nFeb 15, 2017 1:06:31 PM com.hazelcast.jet.impl.JetService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] \r\n\to   o   o   o---o o---o o     o---o   o   o---o o-o-o        o o---o o-o-o\r\n\t|   |  / \\     /  |     |     |      / \\  |       |          | |       |  \r\n\to---o o---o   o   o-o   |     o     o---o o---o   |          | o-o     |  \r\n\t|   | |   |  /    |     |     |     |   |     |   |      \\   | |       |  \r\n\to   o o   o o---o o---o o---o o---o o   o o---o   o       o--o o---o   o   \r\nFeb 15, 2017 1:06:31 PM com.hazelcast.jet.impl.JetService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Copyright (c) 2008-2017, Hazelcast, Inc. All Rights Reserved.\r\nFeb 15, 2017 1:06:31 PM com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Starting 4 partition threads\r\nFeb 15, 2017 1:06:31 PM com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Starting 3 generic threads (1 dedicated for priority tasks)\r\nFeb 15, 2017 1:06:31 PM com.hazelcast.core.LifecycleService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] [10.162.55.6]:5701 is STARTING\r\nFeb 15, 2017 1:06:34 PM com.hazelcast.system\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Cluster version set to 3.8\r\nFeb 15, 2017 1:06:34 PM com.hazelcast.internal.cluster.impl.MulticastJoiner\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] \r\n\r\n\r\nMembers [1] {\r\n\tMember [10.162.55.6]:5701 - d8f937ea-a992-458b-b172-f280f62f77a7 this\r\n}\r\n\r\nFeb 15, 2017 1:06:35 PM com.hazelcast.internal.management.ManagementCenterService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Hazelcast will connect to Hazelcast Management Center on address: \r\nhttp://localhost:8082/mancenter\r\nCreating Jet instance 2\r\nFeb 15, 2017 1:06:35 PM com.hazelcast.core.LifecycleService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] [10.162.55.6]:5701 is STARTED\r\nFeb 15, 2017 1:06:35 PM com.hazelcast.instance.DefaultAddressPicker\r\nINFO: [LOCAL] [dev] [0.3] [3.8-RC1] Prefer IPv4 stack is true.\r\nFeb 15, 2017 1:06:36 PM com.hazelcast.instance.DefaultAddressPicker\r\nINFO: [LOCAL] [dev] [0.3] [3.8-RC1] Picked [10.162.55.6]:5703, using socket ServerSocket[addr=/0:0:0:0:0:0:0:0,localport=5703], bind any local is true\r\nFeb 15, 2017 1:06:36 PM com.hazelcast.system\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Hazelcast 3.8-RC1 (20170201 - 609ebbc) starting at [10.162.55.6]:5703\r\nFeb 15, 2017 1:06:36 PM com.hazelcast.system\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Copyright (c) 2008-2016, Hazelcast, Inc. All Rights Reserved.\r\nFeb 15, 2017 1:06:36 PM com.hazelcast.system\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Configured Hazelcast Serialization version : 1\r\nFeb 15, 2017 1:06:36 PM com.hazelcast.spi.impl.operationservice.impl.BackpressureRegulator\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Backpressure is disabled\r\nFeb 15, 2017 1:06:36 PM com.hazelcast.internal.partition.impl.PartitionStateManager\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Initializing cluster partition table arrangement...\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.instance.Node\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Creating MulticastJoiner\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.jet.impl.JetService\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Starting Jet 0.3 (20170206 - 5c8738d) \r\nFeb 15, 2017 1:06:38 PM com.hazelcast.jet.impl.JetService\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Setting number of cooperative threads and default parallelism to 2\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.jet.impl.JetService\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] \r\n\to   o   o   o---o o---o o     o---o   o   o---o o-o-o        o o---o o-o-o\r\n\t|   |  / \\     /  |     |     |      / \\  |       |          | |       |  \r\n\to---o o---o   o   o-o   |     o     o---o o---o   |          | o-o     |  \r\n\t|   | |   |  /    |     |     |     |   |     |   |      \\   | |       |  \r\n\to   o o   o o---o o---o o---o o---o o   o o---o   o       o--o o---o   o   \r\nFeb 15, 2017 1:06:38 PM com.hazelcast.jet.impl.JetService\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Copyright (c) 2008-2017, Hazelcast, Inc. All Rights Reserved.\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Starting 4 partition threads\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Starting 3 generic threads (1 dedicated for priority tasks)\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.core.LifecycleService\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] [10.162.55.6]:5703 is STARTING\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.internal.cluster.impl.MulticastJoiner\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Trying to join to discovered node: [10.162.55.6]:5701\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.nio.tcp.InitConnectionTask\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Connecting to /10.162.55.6:5701, timeout: 0, bind-any: true\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.nio.tcp.SocketAcceptorThread\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Accepting socket connection from /10.162.55.6:61739\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.nio.tcp.TcpIpConnectionManager\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Established socket connection between /10.162.55.6:61739 and /10.162.55.6:5701\r\nFeb 15, 2017 1:06:38 PM com.hazelcast.nio.tcp.TcpIpConnectionManager\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Established socket connection between /10.162.55.6:5701 and /10.162.55.6:61739\r\nFeb 15, 2017 1:06:44 PM com.hazelcast.internal.cluster.ClusterService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] \r\n\r\nMembers [2] {\r\n\tMember [10.162.55.6]:5701 - d8f937ea-a992-458b-b172-f280f62f77a7 this\r\n\tMember [10.162.55.6]:5703 - 4c910316-302b-4a1d-89ca-40ac9e065468\r\n}\r\n\r\nFeb 15, 2017 1:06:44 PM com.hazelcast.system\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Cluster version set to 3.8\r\nFeb 15, 2017 1:06:44 PM com.hazelcast.internal.cluster.ClusterService\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] \r\n\r\nMembers [2] {\r\n\tMember [10.162.55.6]:5701 - d8f937ea-a992-458b-b172-f280f62f77a7\r\n\tMember [10.162.55.6]:5703 - 4c910316-302b-4a1d-89ca-40ac9e065468 this\r\n}\r\n\r\nFeb 15, 2017 1:06:44 PM com.hazelcast.internal.partition.impl.MigrationManager\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Re-partitioning cluster data... Migration queue size: 271\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.instance.Node\r\nWARNING: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Config seed port is 5701 and cluster size is 2. Some of the ports seem occupied!\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.internal.management.ManagementCenterService\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Hazelcast will connect to Hazelcast Management Center on address: \r\nhttp://localhost:8082/mancenter\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.core.LifecycleService\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] [10.162.55.6]:5703 is STARTED\r\nThese books will be analyzed:\r\nadventures-of-sherlock-holmes.txt\r\nanderson-fairy-tales.txt\r\nanna-karenina.txt\r\naround-the-world-in-eighty-days.txt\r\na-tale-of-two-cities.txt\r\nawakening.txt\r\nbenjamin-franklin-autobiography.txt\r\nbeyond-good-and-evil.txt\r\nbrothers-karamazov.txt\r\ncanterbury-tales.txt\r\nclarissa-harlowe.txt\r\nconfessions-of-st-augustine.txt\r\nconnecticut-yankee.txt\r\ncrime-punishment.txt\r\ncritique-of-pure-reason.txt\r\ndavid-copperfield.txt\r\ndecameron.txt\r\ndivine-comedy.txt\r\ndon-juan.txt\r\ndon-quixote.txt\r\ndorian-gray.txt\r\ndracula.txt\r\nedgar-allan-poe-works-1.txt\r\nedgar-allan-poe-works-2.txt\r\nedgar-allan-poe-works-3.txt\r\nemma.txt\r\nfaust.txt\r\nfrankenstein.txt\r\ngilded-age.txt\r\ngreat-expectations.txt\r\ngrimm-brothers.txt\r\ngullivers-travels.txt\r\nguy-de-maupassant-shorts.txt\r\nhard-times.txt\r\nheart-of-darkness.txt\r\nhistory-of-peloponnesian-war.txt\r\nhound-of-the-baskervilles.txt\r\nhuckleberry-finn.txt\r\niliad.txt\r\nivanhoe.txt\r\nking-james-bible.txt\r\nland-of-oz.txt\r\nleaves-of-grass.txt\r\nles-miserables.txt\r\nleviathan.txt\r\nlittle-women.txt\r\nmadame-bovary.txt\r\nman-who-was-thursday.txt\r\nmark-twain-mysterious-strangers.txt\r\nmeditations.txt\r\nmichel-montaigne-essays.txt\r\nmiddlemarch.txt\r\nmoby-dick.txt\r\nmonte-cristo.txt\r\nmy-secret-life.txt\r\nnorth-and-south.txt\r\nnotebooks-of-leonardo-da-vinci.txt\r\nodyssey.txt\r\nolaudah-equiano.txt\r\noliver-twist.txt\r\norigin-of-species.txt\r\nparadise-lost.txt\r\npeter-pan.txt\r\nportrait-of-artist-as-a-young-man.txt\r\npractice-and-science-of-drawing.txt\r\npride-and-prejudice.txt\r\nproblems-of-philosophy.txt\r\nrelativity-special-and-general-theory.txt\r\nreturn-of-sherlock-holmes.txt\r\nroom-with-a-view.txt\r\nsatyricon.txt\r\nscarlet-letter.txt\r\nsense-sensibility.txt\r\nshakespeare-complete-works.txt\r\nshort-history-of-world.txt\r\nsiddharta.txt\r\nsorrows-of-young-werther.txt\r\nsouls-of-black-folk.txt\r\nswanns-way.txt\r\nthe-30000-dollar-request.txt\r\nthe-jungle.txt\r\nthe-republic.txt\r\nthe-trial.txt\r\nthree-musketeers.txt\r\nthrough-the-looking-glass.txt\r\nthus-spake-zarathustra.txt\r\ntime-machine.txt\r\ntom-sawyer.txt\r\nulysses.txt\r\nuncle-toms-cabin.txt\r\nutopia.txt\r\nwalden-and-duty-of-civil-disobedience.txt\r\nwar-and-peace.txt\r\nwar-of-the-worlds.txt\r\nwealth-of-nations.txt\r\nwhat-is-man.txt\r\nwuthering-heights.txt\r\n\r\nCounting words... Feb 15, 2017 1:06:46 PM com.hazelcast.jet.impl.operation.ExecuteJobOperation\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Start executing job 0.\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.jet.impl.operation.InitOperation\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Initializing execution plan for job 0 from [10.162.55.6]:5701.\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.internal.partition.InternalPartitionService\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Remaining migration tasks in queue => 67\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.jet.impl.operation.InitOperation\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Initializing execution plan for job 0 from [10.162.55.6]:5701.\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.jet.impl.operation.ExecuteJobOperation\r\nSEVERE: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] null\r\njava.lang.NullPointerException\r\n\tat com.hazelcast.jet.impl.operation.ExecuteJobOperation.doRun(ExecuteJobOperation.java:101)\r\n\tat com.hazelcast.jet.impl.operation.AsyncExecutionOperation.run(AsyncExecutionOperation.java:56)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:186)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:373)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:400)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:534)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:519)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:490)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:200)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\r\n\tat com.hazelcast.jet.impl.JetInstanceImpl$JobImpl.execute(JetInstanceImpl.java:95)\r\n\tat WordCount.go(WordCount.java:153)\r\n\tat WordCount.main(WordCount.java:145)\r\n\r\nException in thread \"main\" java.util.concurrent.ExecutionException: java.lang.NullPointerException\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:88)\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:147)\r\n\tat WordCount.go(WordCount.java:153)\r\n\tat WordCount.main(WordCount.java:145)\r\nCaused by: java.lang.NullPointerException\r\n\tat com.hazelcast.jet.impl.operation.ExecuteJobOperation.doRun(ExecuteJobOperation.java:101)\r\n\tat com.hazelcast.jet.impl.operation.AsyncExecutionOperation.run(AsyncExecutionOperation.java:56)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:186)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:373)\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:400)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:534)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:519)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:490)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:200)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59)\r\n\tat com.hazelcast.jet.impl.JetInstanceImpl$JobImpl.execute(JetInstanceImpl.java:95)\r\n\tat WordCount.go(WordCount.java:153)\r\n\tat WordCount.main(WordCount.java:145)\r\n\tat ------ submitted from ------.(Unknown Source)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:114)\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:75)\r\n\t... 3 more\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.jet.impl.operation.ExecuteOperation\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Start execution of plan for job 0 from caller [10.162.55.6]:5701.\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.jet.impl.operation.ExecuteOperation\r\nINFO: [10.162.55.6]:5703 [dev] [0.3] [3.8-RC1] Start execution of plan for job 0 from caller [10.162.55.6]:5701.\r\nFeb 15, 2017 1:06:46 PM com.hazelcast.jet.impl.operation.ExecuteJobOperation\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] Execution of job 0 completed in 300ms.\r\nFeb 15, 2017 1:06:48 PM com.hazelcast.internal.partition.impl.MigrationThread\r\nINFO: [10.162.55.6]:5701 [dev] [0.3] [3.8-RC1] All migration tasks have been completed, queues are empty.\r\n\r\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/319", "user": "mukul4u2005", "labels": ["defect"], "created": "2017-02-15 18:20:01", "closed": "2017-02-20 12:38:39", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Replace `ReadFileStreamP` with batch file processor", "body": "The current API tries to use `WatchService` for watching changes to files in a directory and stream them. However, it's very unreliable, and thus unusable beyond some may-be-working example. Stream-processing of log files cannot be reliably done using files.\r\n\r\nWe need to replace it with a processor, that will process all files in a directory and then finish. This will handle the use case for batch processing of log files, for example.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/311", "user": "viliam-durina", "labels": ["defect"], "created": "2017-02-13 14:09:45", "closed": "2017-04-20 08:58:26", "commits": {}, "ttf": 65.00027777777778, "commitsDetails": []}, {"title": "Top-level collectors should not be allowed to be passed in as downstream collectors", "body": "Currently specific top-level collectors such as IMap, IList and a few others should be disconnected from `DistributedCollector` interface, so that they can't be used as downstream collectors.", "url": "https://github.com/hazelcast/hazelcast-jet/issues/309", "user": "cangencer", "labels": ["defect"], "created": "2017-02-09 14:09:51", "closed": "2017-02-14 20:09:40", "commits": {"ab3633f1b3248c268a79f0687555e0ba7d0e9131": {"commitGHEventType": "referenced", "commitUser": "mtopolnik"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "ab3633f1b3248c268a79f0687555e0ba7d0e9131", "commitGHEventType": "referenced", "commitUser": "mtopolnik", "commitParents": ["21da0a6acb4f4dd9fac17ed536710b49c5242829"], "nameRev": "ab3633f1b3248c268a79f0687555e0ba7d0e9131 tags/v0.3.1~38", "commitMessage": "Refactor of Jet collectors into a new type called Reducer\n\nThe `Reducer` is a generalisation of j.u.s `Collector` and\nmodels the terminal operation of a stream, and has the\nresponsbility to build the DAG and execute it.\n\nThe new interface also allows a distinction between j.u.s.\nCollectors which can be used downstream, and Jet-specific\nconstructs such as `DistributedCollectors.toIMap()`\n\nFixes #309\n", "commitDateTime": "2017-02-14 21:09:39", "authoredDateTime": "2017-02-14 16:35:05", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/DistributedCollector.java", "insertions": 38, "deletions": 30, "lines": 68}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/DistributedCollectors.java", "insertions": 100, "deletions": 99, "lines": 199}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/DistributedStream.java", "insertions": 25, "deletions": 22, "lines": 47}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/collectors/AbstractCollector.java", "insertions": 0, "deletions": 49, "lines": 49}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/pipeline/AbstractIntermediatePipeline.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/pipeline/AbstractPipeline.java", "insertions": 61, "deletions": 42, "lines": 103}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/pipeline/DoublePipeline.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/pipeline/IntPipeline.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/pipeline/LongPipeline.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors/AbstractHazelcastCollector.java => reducers/AbstractSinkReducer.java}", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{terminal/Matcher.java => reducers/AnyMatchReducer.java}", "insertions": 20, "deletions": 25, "lines": 45}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors/CustomStreamCollector.java => reducers/BiConsumerCombinerReducer.java}", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors/DistributedCollectorImpl.java => reducers/CollectorReducer.java}", "insertions": 27, "deletions": 64, "lines": 91}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/reducers/DistributedCollectorImpl.java", "insertions": 83, "deletions": 0, "lines": 83}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors => reducers}/DistributedStringJoiner.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors/HazelcastGroupingMapCollector.java => reducers/GroupingIMapReducer.java}", "insertions": 9, "deletions": 10, "lines": 19}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors/HazelcastListCollector.java => reducers/IListReducer.java}", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors/HazelcastMapCollector.java => reducers/IMapReducer.java}", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors/HazelcastMergingMapCollector.java => reducers/MergingIMapReducer.java}", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{terminal/Reducer.java => reducers/Reducers.java}", "insertions": 62, "deletions": 47, "lines": 109}, {"filePath": "hazelcast-jet-core/src/test/java/com/hazelcast/jet/stream/{HazelcastCollectorTest.java => JetCollectorTest.java}", "insertions": 13, "deletions": 9, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DistributedCollector.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.supplier()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.accumulator()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.combiner()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.finisher()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.of(com.hazelcast.jet.Distributed.Supplier,com.hazelcast.jet.Distributed.BiConsumer,com.hazelcast.jet.Distributed.BinaryOperator,java.util.stream.Collector$Characteristics[])", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.of(com.hazelcast.jet.Distributed.Supplier,com.hazelcast.jet.Distributed.BiConsumer,com.hazelcast.jet.Distributed.BinaryOperator,com.hazelcast.jet.Distributed.Function,java.util.stream.Collector$Characteristics[])", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DistributedCollectors.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.DistributedCollectors.toIMap(Distributed.Function,Distributed.Function)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.DistributedCollectors.toIMap()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.DistributedCollectors.toIMap(Distributed.Function,Distributed.Function,com.hazelcast.jet.Distributed$BinaryOperator)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.DistributedCollectors.toIList()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.DistributedCollectors.groupingByToIMap(Distributed.Function)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.DistributedCollectors.groupingByToIMap(Distributed.Function,com.hazelcast.jet.stream.DistributedCollector)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.DistributedCollectors.joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DistributedStream.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.collect(java.util.stream.Collector)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.stream.collect(com.hazelcast.jet.stream.DistributedCollector)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractCollector.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.AbstractCollector", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractIntermediatePipeline.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractIntermediatePipeline", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractPipeline.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.collect(com.hazelcast.jet.stream.DistributedCollector)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.reduce(java.lang.Object,java.util.function.BinaryOperator)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.reduce(java.util.function.BinaryOperator)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)", "TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.anyMatch(java.util.function.Predicate)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.allMatch(java.util.function.Predicate)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.filter(java.util.function.Predicate)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.map(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.mapToInt(java.util.function.ToIntFunction)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.mapToLong(java.util.function.ToLongFunction)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.mapToDouble(java.util.function.ToDoubleFunction)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.flatMap(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.flatMapToInt(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.flatMapToLong(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.flatMapToDouble(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.sorted(java.util.Comparator)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.peek(java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.forEach(java.util.function.Consumer)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.forEachOrdered(java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.toArray()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.toArray(java.util.function.IntFunction)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.min(java.util.Comparator)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.max(java.util.Comparator)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.noneMatch(java.util.function.Predicate)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.findFirst()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.iterator()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.collect(com.hazelcast.jet.stream.DistributedCollector.Reducer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.collect(java.util.stream.Collector)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DoublePipeline.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.DoublePipeline.reduce(double,java.util.function.DoubleBinaryOperator)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.DoublePipeline.reduce(java.util.function.DoubleBinaryOperator)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "IntPipeline.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.IntPipeline.reduce(int,java.util.function.IntBinaryOperator)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.IntPipeline.reduce(java.util.function.IntBinaryOperator)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LongPipeline.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.LongPipeline.reduce(long,java.util.function.LongBinaryOperator)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.pipeline.LongPipeline.reduce(java.util.function.LongBinaryOperator)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AbstractSinkReducer.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.AbstractHazelcastCollector", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.AbstractHazelcastCollector.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.AbstractHazelcastCollector.getSinkSupplier()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnyMatchReducer.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Matcher", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Matcher.anyMatch(com.hazelcast.jet.stream.impl.pipeline.Pipeline,Distributed.Predicate)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Matcher.execute(com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex)", "TOT": 12, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Matcher.anyMatch(com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.util.function.Predicate)", "TOT": 10, "UPD": 1, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.reducers.AnyMatchReducer.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BiConsumerCombinerReducer.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.CustomStreamCollector", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.CustomStreamCollector.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CollectorReducer.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl", "TOT": 16, "UPD": 14, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.buildAccumulator(com.hazelcast.jet.DAG,com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.util.function.Supplier,java.util.function.BiConsumer)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.buildCombiner(com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex,java.lang.Object,java.util.function.Function)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.execute(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.getCombinerSupplier(java.lang.Object,java.util.function.Function)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.reducers.CollectorReducer.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DistributedCollectorImpl.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.reducers.DistributedCollectorImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DistributedStringJoiner.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.setEmptyValue(java.lang.CharSequence)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.add(java.lang.CharSequence)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.merge(com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.prepareBuilder()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.toString()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.length()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupingIMapReducer.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastGroupingMapCollector", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastGroupingMapCollector.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IListReducer.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastListCollector", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastListCollector.getSinkSupplier()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastListCollector.getName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastListCollector.getTarget(com.hazelcast.jet.JetInstance)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IMapReducer.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastMapCollector", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastMapCollector.getSinkSupplier()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastMapCollector.getName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastMapCollector.getTarget(com.hazelcast.jet.JetInstance)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MergingIMapReducer.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastMergingMapCollector", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.collectors.HazelcastMergingMapCollector.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Reducers.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer.reduce(com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.util.function.BinaryOperator)", "TOT": 10, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 7}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer.reduce(com.hazelcast.jet.stream.impl.pipeline.Pipeline,com.hazelcast.jet.Distributed$BinaryOperator)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer.buildCombiner(com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex,java.util.function.BinaryOperator)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer.execute(com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer.buildMappingAccumulator(com.hazelcast.jet.DAG,com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.lang.Object,java.util.function.BiFunction)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer.reduceVertex(java.util.function.BinaryOperator,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer.reduce(com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)", "TOT": 12, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 8}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.terminal.Reducer.reduce(com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.lang.Object,java.util.function.BinaryOperator)", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 7}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.reducers.Reducers", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.reducers.Reducers.AccumulateCombineWithIdentity.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.reducers.Reducers.BinaryAccumulate.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.reducers.Reducers.BinaryAccumulateWithIdentity.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.impl.reducers.Reducers.execute(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JetCollectorTest.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.imapCollect_whenNoIntermediaries()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.imapCollectWithMerge()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.grouping_whenSourceMap()", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.twoLevelGrouping_whenSourceMap()", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.grouping_whenSourceList()", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.wordCount()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.imapCollectWithMerge_whenSourceList()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.ilistCollect_whenNoIntermediaries()", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.hazelcast.jet.stream.HazelcastCollectorTest.ilistCollect_whenSourceMap()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.hazelcast.jet.stream.JetCollectorTest.ilistCollect_whenSourceMap()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ab3633f1b3248c268a79f0687555e0ba7d0e9131"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 477, "deletions": 436, "lines": 913, "gitFilesChange": 20}, "spoonStatsSummary": {"TOT": 359, "UPD": 173, "INS": 46, "MOV": 46, "DEL": 94, "spoonFilesChanged": 20, "spoonMethodsChanged": 105}, "statsSkippedReason": "", "changesInPackagesGIT": ["hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{terminal", "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors", "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream", "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/{collectors => reducers}", "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/pipeline", "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/reducers", "hazelcast-jet-core/src/main/java/com/hazelcast/jet/stream/impl/collectors"], "changesInPackagesSPOON": ["com.hazelcast.jet.stream.impl.terminal.Reducer.reduce(com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.util.function.BinaryOperator)", "com.hazelcast.jet.stream.impl.terminal.Matcher.anyMatch(com.hazelcast.jet.stream.impl.pipeline.Pipeline,Distributed.Predicate)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.forEachOrdered(java.util.function.Consumer)", "com.hazelcast.jet.stream.impl.reducers.Reducers", "com.hazelcast.jet.stream.DistributedCollectors.toIMap(Distributed.Function,Distributed.Function,com.hazelcast.jet.Distributed$BinaryOperator)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.noneMatch(java.util.function.Predicate)", "com.hazelcast.jet.stream.impl.collectors.HazelcastGroupingMapCollector", "com.hazelcast.jet.stream.DistributedCollectors.toIList()", "com.hazelcast.jet.stream.impl.collectors.AbstractHazelcastCollector.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.accumulator()", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.max(java.util.Comparator)", "com.hazelcast.jet.stream.impl.pipeline.AbstractIntermediatePipeline", "com.hazelcast.jet.stream.impl.reducers.Reducers.BinaryAccumulateWithIdentity.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.impl.collectors.HazelcastMergingMapCollector", "com.hazelcast.jet.stream.impl.reducers.Reducers.AccumulateCombineWithIdentity.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.impl.collectors.HazelcastMergingMapCollector.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.supplier()", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.mapToInt(java.util.function.ToIntFunction)", "com.hazelcast.jet.stream.finisher()", "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.add(java.lang.CharSequence)", "com.hazelcast.jet.stream.impl.terminal.Reducer", "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.execute(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex)", "com.hazelcast.jet.stream.combiner()", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.collect(com.hazelcast.jet.stream.DistributedCollector)", "com.hazelcast.jet.stream.impl.collectors.AbstractHazelcastCollector", "com.hazelcast.jet.stream.impl.collectors.CustomStreamCollector", "com.hazelcast.jet.stream.impl.collectors.AbstractHazelcastCollector.getSinkSupplier()", "com.hazelcast.jet.stream.impl.reducers.Reducers.BinaryAccumulate.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.DistributedCollectors.groupingByToIMap(Distributed.Function,com.hazelcast.jet.stream.DistributedCollector)", "com.hazelcast.jet.stream.impl.terminal.Matcher.anyMatch(com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.util.function.Predicate)", "com.hazelcast.jet.stream.impl.terminal.Reducer.buildMappingAccumulator(com.hazelcast.jet.DAG,com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.lang.Object,java.util.function.BiFunction)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.reduce(java.util.function.BinaryOperator)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.anyMatch(java.util.function.Predicate)", "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.prepareBuilder()", "com.hazelcast.jet.stream.collect(java.util.stream.Collector)", "com.hazelcast.jet.stream.impl.collectors.HazelcastListCollector.getSinkSupplier()", "com.hazelcast.jet.stream.impl.collectors.CustomStreamCollector.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.flatMapToInt(java.util.function.Function)", "com.hazelcast.jet.stream.DistributedCollectors.groupingByToIMap(Distributed.Function)", "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.buildCombiner(com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex,java.lang.Object,java.util.function.Function)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.forEach(java.util.function.Consumer)", "com.hazelcast.jet.stream.impl.pipeline.IntPipeline.reduce(java.util.function.IntBinaryOperator)", "com.hazelcast.jet.stream.of(com.hazelcast.jet.Distributed.Supplier,com.hazelcast.jet.Distributed.BiConsumer,com.hazelcast.jet.Distributed.BinaryOperator,com.hazelcast.jet.Distributed.Function,java.util.stream.Collector$Characteristics[])", "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.buildAccumulator(com.hazelcast.jet.DAG,com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.util.function.Supplier,java.util.function.BiConsumer)", "com.hazelcast.jet.stream.impl.terminal.Reducer.reduce(com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)", "com.hazelcast.jet.stream.impl.collectors.HazelcastListCollector.getName()", "com.hazelcast.jet.stream.impl.terminal.Reducer.execute(com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex)", "com.hazelcast.jet.stream.impl.collectors.HazelcastMapCollector.getSinkSupplier()", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.reduce(java.lang.Object,java.util.function.BiFunction,java.util.function.BinaryOperator)", "com.hazelcast.jet.stream.impl.collectors.HazelcastMapCollector.getName()", "com.hazelcast.jet.stream.impl.reducers.DistributedCollectorImpl", "com.hazelcast.jet.stream.impl.pipeline.LongPipeline.reduce(java.util.function.LongBinaryOperator)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.filter(java.util.function.Predicate)", "com.hazelcast.jet.stream.impl.collectors.HazelcastMapCollector", "com.hazelcast.jet.stream.DistributedCollectors.joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.flatMapToDouble(java.util.function.Function)", "com.hazelcast.jet.stream.impl.pipeline.LongPipeline.reduce(long,java.util.function.LongBinaryOperator)", "com.hazelcast.jet.stream.impl.pipeline.DoublePipeline.reduce(double,java.util.function.DoubleBinaryOperator)", "com.hazelcast.jet.stream.collect(com.hazelcast.jet.stream.DistributedCollector)", "com.hazelcast.jet.stream.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.impl.terminal.Matcher.execute(com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex)", "com.hazelcast.jet.stream.impl.reducers.Reducers.execute(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex)", "com.hazelcast.jet.stream.DistributedCollectors.toIMap(Distributed.Function,Distributed.Function)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.collect(com.hazelcast.jet.stream.DistributedCollector.Reducer)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.map(java.util.function.Function)", "com.hazelcast.jet.stream.impl.collectors.HazelcastListCollector", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.reduce(java.lang.Object,java.util.function.BinaryOperator)", "com.hazelcast.jet.stream.impl.collectors.HazelcastListCollector.getTarget(com.hazelcast.jet.JetInstance)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.toArray(java.util.function.IntFunction)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.flatMapToLong(java.util.function.Function)", "com.hazelcast.jet.stream.impl.reducers.AnyMatchReducer.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.impl.terminal.Matcher", "com.hazelcast.jet.stream.impl.collectors.HazelcastGroupingMapCollector.collect(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.mapToLong(java.util.function.ToLongFunction)", "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.setEmptyValue(java.lang.CharSequence)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.iterator()", "com.hazelcast.jet.stream.impl.reducers.CollectorReducer.reduce(com.hazelcast.jet.stream.impl.pipeline.StreamContext,com.hazelcast.jet.stream.impl.pipeline.Pipeline)", "com.hazelcast.jet.stream.impl.pipeline.IntPipeline.reduce(int,java.util.function.IntBinaryOperator)", "com.hazelcast.jet.stream.impl.terminal.Reducer.reduce(com.hazelcast.jet.stream.impl.pipeline.Pipeline,com.hazelcast.jet.Distributed$BinaryOperator)", "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)", "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.merge(com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.mapToDouble(java.util.function.ToDoubleFunction)", "com.hazelcast.jet.stream.impl.terminal.Reducer.buildCombiner(com.hazelcast.jet.DAG,com.hazelcast.jet.Vertex,java.util.function.BinaryOperator)", "com.hazelcast.jet.stream.DistributedCollectors.toIMap()", "com.hazelcast.jet.stream.impl.collectors.AbstractCollector", "com.hazelcast.jet.stream.of(com.hazelcast.jet.Distributed.Supplier,com.hazelcast.jet.Distributed.BiConsumer,com.hazelcast.jet.Distributed.BinaryOperator,java.util.stream.Collector$Characteristics[])", "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.length()", "com.hazelcast.jet.stream.impl.collectors.DistributedCollectorImpl.getCombinerSupplier(java.lang.Object,java.util.function.Function)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.findFirst()", "com.hazelcast.jet.stream", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.min(java.util.Comparator)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.flatMap(java.util.function.Function)", "com.hazelcast.jet.stream.impl.collectors.HazelcastMapCollector.getTarget(com.hazelcast.jet.JetInstance)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.allMatch(java.util.function.Predicate)", "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.toArray()", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.collect(java.util.stream.Collector)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.peek(java.util.function.Consumer)", "com.hazelcast.jet.stream.impl.terminal.Reducer.reduce(com.hazelcast.jet.stream.impl.pipeline.Pipeline,java.lang.Object,java.util.function.BinaryOperator)", "com.hazelcast.jet.stream.impl.pipeline.AbstractPipeline.sorted(java.util.Comparator)", "com.hazelcast.jet.stream.impl.terminal.Reducer.reduceVertex(java.util.function.BinaryOperator,java.lang.Object)", "com.hazelcast.jet.stream.impl.pipeline.DoublePipeline.reduce(java.util.function.DoubleBinaryOperator)", "com.hazelcast.jet.stream.impl.collectors.DistributedStringJoiner.toString()"]}, {"title": "[j.u.s] Comparator serialization issue in client-cluster mode", "body": "code like \n\n```\n.stream()\n     .sorted((Distributed.Comparator<Map.Entry<String, Integer>>) (o1, o2) -> o2.getValue().compareTo(o1.getValue()))\n```\n\nthrows\n\n```\nException in thread \"main\" com.hazelcast.nio.serialization.HazelcastSerializationException: java.io.IOException: unexpected exception type\n```\n\nin client-cluster mode\n\nThank you\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/175", "user": "gAmUssA", "labels": ["defect"], "created": "2016-10-04 20:08:00", "closed": "2017-02-07 09:13:36", "commits": {}, "ttf": 125.00027777777778, "commitsDetails": []}, {"title": "JobStateMachine is a thread-unsafe concurrent object", "body": "Both the user's thread and Jet's internal threads update `JobStateMachine`, but it's coded as a single-threaded object.\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/147", "user": "mtopolnik", "labels": ["defect"], "created": "2016-09-07 10:57:11", "closed": "2016-09-07 12:45:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Packet corruption after exception thrown in a job", "body": "After an exception is thrown in a Job, an another Job is run afterwards sometimes the second application will hang or a OutOfMemory error will be thrown due to trying to allocate a too large JetPacket. Only happens when running the Job in a cluster.\n\nTest to reproduce:\n\n``` java/*\n package com.hazelcast.jet;\n\nimport com.hazelcast.core.HazelcastInstance;\nimport com.hazelcast.core.IMap;\nimport com.hazelcast.jet.runtime.InputChunk;\nimport com.hazelcast.jet.runtime.OutputCollector;\nimport com.hazelcast.jet.runtime.TaskContext;\nimport com.hazelcast.jet.sink.MapSink;\nimport com.hazelcast.jet.source.MapSource;\nimport com.hazelcast.test.HazelcastParallelClassRunner;\nimport com.hazelcast.test.annotation.QuickTest;\nimport com.hazelcast.test.annotation.Repeat;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport org.junit.experimental.categories.Category;\nimport org.junit.runner.RunWith;\n\nimport java.util.concurrent.ExecutionException;\n\n@Category(QuickTest.class)\n@RunWith(HazelcastParallelClassRunner.class)\npublic class ExecuteJobTest extends JetTestSupport {\n\n    private static final int NODE_COUNT = 3;\n    private static final int COUNT = 10000;\n\n    private static HazelcastInstance instance;\n    private static IMap<Object, Object> sink;\n    private static IMap<Object, Object> source;\n\n    @BeforeClass\n    public static void setUp() throws Exception {\n        instance = createCluster(NODE_COUNT);\n        sink = instance.getMap(\"sink\");\n        source = instance.getMap(\"source\");\n\n        for (int i = 0; i < COUNT; i++) {\n            source.put(i, i);\n        }\n    }\n\n    @Test\n    @Repeat(100)\n    public void testExecute() throws ExecutionException, InterruptedException {\n        DAG dag = new DAG();\n        dag.addVertex(\n                new Vertex(\"vertex\", ExecutionProcessor.class)\n                        .addSink(new MapSink(sink.getName()))\n                        .addSource(new MapSource(source.getName()))\n                        .parallelism(8)\n        );\n        Job job = JetEngine.getJob(instance, \"testExecute\", dag);\n        try {\n            job.execute().get();\n        } catch (Exception e) {\n            DAG dag2 = new DAG();\n            dag2.addVertex(new Vertex(\"vertex\", TestProcessors.Noop.class)\n                    .addSink(new MapSink(sink.getName()))\n                    .addSource(new MapSource(source.getName()))\n                    .parallelism(8));\n            Job job2 = JetEngine.getJob(instance, \"testExecute2\", dag2);\n            job2.execute().get();\n            job2.destroy();\n        } finally {\n            job.destroy();\n        }\n    }\n\n    public static class ExecutionProcessor implements Processor {\n\n        private int i;\n\n        @Override\n        public void before(TaskContext taskContext) {\n            i = 0;\n        }\n\n        @Override\n        public boolean process(InputChunk input, OutputCollector output, String source) throws Exception {\n            throw new IllegalArgumentException(\"exception\");\n        }\n    }\n}\n```\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/143", "user": "cangencer", "labels": ["defect"], "created": "2016-09-07 07:08:46", "closed": "2016-11-07 10:22:29", "commits": {}, "ttf": 61.000277777777775, "commitsDetails": []}, {"title": "Proxy thread pool creation", "body": "Everytime a new job is created and invoked, a new thread pool is created for submitting invocations. These should not need to create thread pool but rather handled differently. These threads have a TTL and eventually get killed, but when running a lot of applications one after another, it will result in a lot of unused threads.\n\nIt should be possible to avoid creating an executor here completely, and rely on async callbacks. \n\nSee: \nhttps://github.com/hazelcast/hazelcast-jet/blob/02a8d0ed372604d4a8ee0ac37ad345e5fef0da33/hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/job/JobProxy.java#L50\n\nSimilar problem exists in ClientJobProxy\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/128", "user": "cangencer", "labels": ["defect"], "created": "2016-08-23 09:51:59", "closed": "2016-09-06 14:20:22", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "ProcessingStrategy.BROADCAST with shuffling doesn't work", "body": "When using ProcessingStrategy.BROADCAST, shuffling has no effect. The expectation would be that it would broadcast the output to all tasks in all nodes, not just local tasks.\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/126", "user": "cangencer", "labels": ["defect"], "created": "2016-08-22 09:02:31", "closed": "2016-08-26 07:36:55", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Asynchronous operations", "body": "Implement Hazelcast operations for JET as async  to prevent blocking of operation thread\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/30", "user": "toktarev", "labels": ["defect"], "created": "2016-03-05 08:38:42", "closed": "2016-06-15 14:38:56", "commits": {}, "ttf": 102.00027777777778, "commitsDetails": []}, {"title": "Distributed deadlock happens on discovery prodedure", "body": "Distributed deadlock happens on discovery prodedure\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/18", "user": "toktarev", "labels": ["defect"], "created": "2016-02-24 11:23:59", "closed": "2016-06-13 13:14:38", "commits": {}, "ttf": 110.00027777777778, "commitsDetails": []}, {"title": "ApplicationMaster state machine has some unused transitions", "body": "In the `ApplicationMasterState.DAG_SUBMITTED` state, there is no request that is firing  `ApplicationMasterEvent.EXECUTION_PLAN_BUILD_FAILED` event.\n", "url": "https://github.com/hazelcast/hazelcast-jet/issues/6", "user": "eminn", "labels": ["defect"], "created": "2016-02-11 13:19:16", "closed": "2016-09-09 12:40:12", "commits": {"7ab16390c86b810ef79d71c1fdd9001d874a2fd3": {"commitGHEventType": "referenced", "commitUser": "mtopolnik"}}, "ttf": 210.00027777777777, "commitsDetails": [{"commitHash": "7ab16390c86b810ef79d71c1fdd9001d874a2fd3", "commitGHEventType": "referenced", "commitUser": "mtopolnik", "commitParents": ["bc30ab9e1294e67e1fbfef253a82bc2419c9ca6d"], "nameRev": "7ab16390c86b810ef79d71c1fdd9001d874a2fd3 tags/0.2~2", "commitMessage": "Delete unused event JobManagerEvent.EXECUTION_PLAN_BUILD_FAILED (#153)\n\nFixes #6", "commitDateTime": "2016-09-09 14:40:12", "authoredDateTime": "2016-09-09 14:40:12", "commitGitStats": [{"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/runtime/jobmanager/JobManagerEvent.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "hazelcast-jet-core/src/main/java/com/hazelcast/jet/impl/statemachine/jobmanager/JobManagerStateMachine.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JobManagerEvent.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.runtime.jobmanager.JobManagerEvent", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JobManagerStateMachine.java", "spoonMethods": [{"spoonMethodName": "com.hazelcast.jet.impl.statemachine.jobmanager.JobManagerStateMachine", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}]}