{"bugLabels": ["breaking change", "bug", "service bug", "test bug"], "projectName": "Azure/azure-iot-sdk-java", "captureTime": "Fri Jul  3 18:09:10 2020", "issues": [{"created": "2018-05-18 03:59:37", "user": "Ernest-su", "body": "`com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack`\r\n interface Function name 'PropertyCall' should start with a lowercase letter", "closed": "2019-06-24 18:33:17", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/242", "ttf": 402.0002777777778, "commits": {}, "labels": ["breaking change", "enhancement"], "title": "PropertyCallBack interface Function name 'PropertyCall' should start with a lowercase letter"}, {"created": "2018-04-30 23:18:26", "user": "JonathanGiles", "body": "It seems the standard convention in Java SDKs for Azure is to have non-public API in an 'internal' package (with subpackages as appropriate). This makes it clearer to developers what API they should and shouldn't use.\r\n\r\nMy understanding is that the following packages represent all public API - all other packages would then ideally be relocated under `com.microsoft.azure.sdk.iot.internal`:\r\n\r\n```\r\ncom.microsoft.azure.sdk.iot.device\r\ncom.microsoft.azure.sdk.iot.device.DeviceTwin\r\ncom.microsoft.azure.sdk.iot.device.exceptions\r\ncom.microsoft.azure.sdk.iot.device.transport.amqps.exceptions\r\ncom.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions\r\ncom.microsoft.azure.sdk.iot.provisioning.device\r\ncom.microsoft.azure.sdk.iot.provisioning.security\r\ncom.microsoft.azure.sdk.iot.provisioning.security.exceptions\r\ncom.microsoft.azure.sdk.iot.provisioning.service\r\ncom.microsoft.azure.sdk.iot.provisioning.service.exceptions\r\ncom.microsoft.azure.sdk.iot.service\r\ncom.microsoft.azure.sdk.iot.service.devicetwin\r\ncom.microsoft.azure.sdk.iot.service.exceptions\r\ncom.microsoft.azure.sdk.iot.service.jobs\r\n```\r\n\r\n", "closed": "2019-06-24 18:24:38", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/232", "ttf": 419.0002777777778, "commits": {}, "labels": ["breaking change", "enhancement"], "title": "Consider refactoring package names"}, {"created": "2018-02-13 17:21:51", "user": "zoe-mcelderry", "body": "I guess that this will become a feature now so that other people's code doesn't break, but just wanted to report that I noticed a typo in your service API.  It can throw an IotHubUnathorizedException.", "closed": "2019-06-24 18:31:18", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/208", "ttf": 496.0002777777778, "commits": {}, "labels": ["breaking change", "enhancement"], "title": "Typo in the service API : IotHubUnathorizedException"}, {"created": "2017-04-20 18:26:33", "user": "mwm-twx", "body": "OS: Linux x64 (Fedora 25)\r\nJava: 1.8.0_121\r\nSDK: 1.2.18\r\n\r\n# Description of the issue:\r\nA simple scenario of starting the DeviceTwin and updating reported properties is over-complicated in Java compared to other SDKs.\r\n\r\nIn Node, there are two separate callbacks: one provided to `getTwin` which receives the twin and one to `twin.properties.reported.update` which is notified when the updates were written.\r\n\r\nIn .NET, these APIs return `Task`s, which I believe are similar to `CompletableFuture`s; so there are two separate \"action completed\" notifications.\r\n\r\nIn Java, there is a single callback provided to `startDeviceTwin` which is called when any asynchronous action is completed.  Starting the twin and writing properties, while also waiting for the completion of each of those actions, then requires a callback with some state to track the operations.\r\n\r\nThe asynchronous operations should each take an explicit `IotHubEventCallback` (and context object) to simplify usage and better match with the other IoT SDKs.\r\n", "closed": "2019-06-25 21:39:09", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/88", "ttf": 796.0002777777778, "commits": {}, "labels": ["breaking change", "enhancement"], "title": "[Device SDK] DeviceTwin API is awkward and differs from other azure-iot SDKs"}, {"created": "2017-03-21 08:50:50", "user": "JMayrbaeurl", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** 1.7 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.0.21 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nIt's generally a bad idea to catch Throwables in Java. See guidance at http://javarevisited.blogspot.co.at/2014/02/why-catching-throwable-or-error-is-bad.html. But doing this in com.microsoft.azure.sdk.iot.device.transport.IotHubSendTask.run() and com.microsoft.azure.sdk.iot.device.transport.IotHubReceiveTask.run() is very bad, because it'll lead to endless loops or blocking when system critical exceptions like OutOfMemoryError, StackOverFlowError, ThreadDeath are thrown and swallowed in the code. The same is true for trying to end processes and threads with Interrupt Exceptions.\r\n\r\n# Code sample exhibiting the issue:\r\n\r\npublic final class IotHubSendTask implements Runnable\r\n{\r\n    protected final IotHubTransport transport;\r\n\r\n    public IotHubSendTask(IotHubTransport transport)\r\n    {\r\n        // Codes_SRS_IOTHUBSENDTASK_11_001: [The constructor shall save the transport.]\r\n        this.transport = transport;\r\n    }\r\n\r\n    public void run()\r\n    {\r\n        try\r\n        {\r\n            // Codes_SRS_IOTHUBSENDTASK_11_002: [The function shall send all messages on the transport queue.]\r\n            this.transport.sendMessages();\r\n            // Codes_SRS_IOTHUBSENDTASK_11_003: [The function shall invoke all callbacks on the transport's callback queue.]\r\n            this.transport.invokeCallbacks();\r\n        }\r\n        // Codes_SRS_IOTHUBSENDTASK_11_005: [The function shall not crash because of an IOException thrown by the transport.]\r\n        // Codes_SRS_IOTHUBSENDTASK_11_008: [The function shall not crash because of any error or exception thrown by the transport.]\r\n        catch (Throwable e)\r\n        {\r\n            System.out.println(e.toString() + \": \" + e.getMessage());\r\n            for (StackTraceElement el : e.getStackTrace())\r\n            {\r\n                System.out.println(el);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "closed": "2020-04-13 22:06:45", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/64", "ttf": 1119.0002777777777, "commits": {}, "labels": ["IoTSDK", "breaking change", "enhancement"], "title": "Don't catch Throwable in IotHubReceiveTask.run() and IotHubSendTask.run()"}, {"created": "2017-03-16 13:32:54", "user": "JMayrbaeurl", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** 1.8 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.0.21 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nPlease follow common best practices and guidelines for package naming (http://www.oracle.com/technetwork/java/codeconventions-135099.html ). E.g. Package 'com.microsoft.azure.sdk.iot.device.DeviceTwin' should be renamed to 'com.microsoft.azure.sdk.iot.device.devicetwin'.\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "closed": "2019-06-24 18:28:39", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/56", "ttf": 830.0002777777778, "commits": {}, "labels": ["breaking change", "enhancement"], "title": "Follow package name guidelines - only lowercase characters"}, {"created": "2020-02-28 20:06:47", "user": "timtay-microsoft", "body": "In the logic for the feedback receiver and file upload notification receiver, it is possible that the SDK receives and acknowledges multiple messages on its link, but the SDK only propagates up one of those messages to the user. In effect, the SDK is consuming these messages and not telling the user about them.\r\n\r\nFix coming in PR #713 ", "closed": "2020-03-02 18:53:14", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/720", "ttf": 2.000277777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "IoTHub Service client swallows feedback messages and file upload notifications occasionally"}, {"created": "2020-02-26 17:36:36", "user": "JoshuaBaunach", "body": "- **OS and version used:** Windows 10\r\n\r\n- **Java runtime used:** JRE 1.8.0_241\r\n\r\n- **SDK version used:** IoT Device Client 1.18.0\r\n\r\n\r\n# Description of the issue:\r\nWe are trying to use a proxy that returns its responses in HTTP 1.0. However, IoT SDK is only checking for responses that start with the string \"HTTP/1.1\", causing exceptions to be thrown.\r\n\r\nIs it possible for the IoT Device Client library to support these kinds of proxies?\r\n\r\n# Code sample exhibiting the issue:\r\n```java\r\nString azureConnectionString = \"ourConnectionString\";\r\n\r\nclient = new DeviceClient(azureConnectionString, IotHubClientProtocol.MQTT_WS);\r\nRetryPolicy policy = new ExponentialBackoffWithJitter(RETRY_COUNT, RETRY_MIN_BACKOFF, RETRY_MAX_BACKOFF, RETRY_DELTA_BACKOFF, true);\r\nclient.setOperationTimeout(OPERATION_TIMEOUT);\r\nclient.setRetryPolicy(policy);\r\n\r\n/* \r\nThese two lines retrieve the proxy information\r\nThe proxy for this issue has no authentication information.\r\n*/\r\nConfiguration configuration = Configuration.build();\r\nOptional<ProxySettings> proxySettings = getProxySettingsFrom(configuration);\r\n\r\nproxySettings.ifPresent(settings -> client.setProxySettings(settings));\r\n\r\nclient.open(); // This line throws the exceptions\r\n```\r\n\r\n# Console log of the issue:\r\n```java\r\n2020-02-25 15:22:14,680 [Thread-9] DEBUG com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection  - Opening MQTT connection...\r\n2020-02-25 15:22:14,785 [Thread-9] DEBUG com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt  - Sending MQTT CONNECT packet...\r\n2020-02-25 15:22:14,795 [MQTT Con: 4dc22e9c-0893-4630-bfee-7cdf3759f284] DEBUG com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket  - Sending tunnel handshake to HTTP proxy\r\n2020-02-25 15:22:14,829 [Thread-9] WARN  com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt  - Exception encountered while sending MQTT CONNECT packet\r\nMqttException (0) - java.io.IOException: Unable to tunnel through companyname.azure-devices.net:443.  Expected first response line to start with HTTP/1.1, but proxy returns \"HTTP/1.0 200 Connection established\"\r\n\tat org.eclipse.paho.client.mqttv3.internal.ExceptionHelper.createMqttException(ExceptionHelper.java:38)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG.run(ClientComms.java:736)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.io.IOException: Unable to tunnel through companyname.azure-devices.net:443.  Expected first response line to start with HTTP/1.1, but proxy returns \"HTTP/1.0 200 Connection established\"\r\n\tat com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.doTunnelHandshake(ProxiedSSLSocket.java:128)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(ProxiedSSLSocket.java:67)\r\n\tat org.eclipse.paho.client.mqttv3.internal.TCPNetworkModule.start(TCPNetworkModule.java:74)\r\n\tat org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule.start(SSLNetworkModule.java:130)\r\n\tat org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketSecureNetworkModule.start(WebSocketSecureNetworkModule.java:63)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG.run(ClientComms.java:722)\r\n\t... 1 more\r\n2020-02-25 15:22:14,834 [Thread-9] DEBUG com.companyname.software.web.WebServer  - doStart() exception=\r\njava.io.IOException: Could not open the connection\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:162)\r\n\tat com.microsoft.azure.sdk.iot.device.InternalClient.open(InternalClient.java:123)\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceClient.open(DeviceClient.java:316)\r\n\tat com.companyname.software.azure.AzureConnection.initialize(AzureConnection.java:184)\r\n\tat com.companyname.software.web.WebServer.lambda$doStart$0(WebServer.java:309)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.microsoft.azure.sdk.iot.device.exceptions.ProtocolException: Unable to establish MQTT connection\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.PahoExceptionTranslator.convertToMqttException(PahoExceptionTranslator.java:47)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect(Mqtt.java:130)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.start(MqttMessaging.java:57)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(MqttIotHubConnection.java:187)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.openConnection(IotHubTransport.java:707)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(IotHubTransport.java:273)\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:158)\r\n\t... 5 more\r\nCaused by: MqttException (0) - java.io.IOException: Unable to tunnel through companyname.azure-devices.net:443.  Expected first response line to start with HTTP/1.1, but proxy returns \"HTTP/1.0 200 Connection established\"\r\n\tat org.eclipse.paho.client.mqttv3.internal.ExceptionHelper.createMqttException(ExceptionHelper.java:38)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG.run(ClientComms.java:736)\r\n\t... 1 more\r\nCaused by: java.io.IOException: Unable to tunnel through companyname.azure-devices.net:443.  Expected first response line to start with HTTP/1.1, but proxy returns \"HTTP/1.0 200 Connection established\"\r\n\tat com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.doTunnelHandshake(ProxiedSSLSocket.java:128)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.ProxiedSSLSocket.connect(ProxiedSSLSocket.java:67)\r\n\tat org.eclipse.paho.client.mqttv3.internal.TCPNetworkModule.start(TCPNetworkModule.java:74)\r\n\tat org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule.start(SSLNetworkModule.java:130)\r\n\tat org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketSecureNetworkModule.start(WebSocketSecureNetworkModule.java:63)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG.run(ClientComms.java:722)\r\n\t... 1 more\r\n```", "closed": "2020-02-27 23:59:51", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/715", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug"], "title": "Cannot Use Proxy That Returns Responses That Start With \"HTTP/1.0\""}, {"created": "2020-01-30 19:38:53", "user": "bouff", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->\r\nmacOS 10.15.2\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->\r\nJDK 1.8\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->\r\niot-service-client version 1.19.0\r\n\r\n# Description of the issue:\r\n\r\nAs per the IoT Hub documentation, the depth limitation for desired properties, reported properties, and tag is 10.\r\n\r\nhttps://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins#tags-and-properties-format\r\n\r\nThe value is currently hard-coded at 6.\r\n\r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/master/deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/TwinCollection.java\r\n\r\nThis is essentially a reincarnation of the following issue:\r\nhttps://github.com/Azure/azure-iot-sdk-java/issues/338\r\n\r\nWould it be possible to either update the value (or remove that validation, as discussed in the previous issue)?\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).", "closed": "2020-02-13 00:42:56", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/699", "ttf": 13.000277777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "TwinCollection Max Depth Issue"}, {"created": "2019-10-21 22:34:44", "user": "timtay-microsoft", "body": "If a client sets the retry policy to no retry, or if the client encounters a non-retryable exception, the connection status callback still reports DISCONNECTED_RETRYING and then immediately reports DISCONNECTED. This is misleading; the client should only report DISCONNECTED in these cases", "closed": "2020-03-18 22:44:33", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/606", "ttf": 149.00027777777777, "commits": {}, "labels": ["bug"], "title": "Connection Status Callback reports DISCONNECTED_RETRYING even on non-retryable errors"}, {"created": "2019-10-18 22:27:38", "user": "timtay-microsoft", "body": "If a device client or module client instance gets disconnected due to network issues, and the retry policy runs to completion, the client reports the connection status as DISCONNECTED. However, within the deviceIO layer, it still reports as CONNECTED. This is a bug due to the transport layer not communicating to the deviceIO layer when a disconnection/reconnection event occurs", "closed": "2020-03-18 22:46:53", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/603", "ttf": 152.00027777777777, "commits": {}, "labels": ["bug"], "title": "Device Client cannot be re-opened after retry policy has been exhausted"}, {"created": "2019-06-10 16:02:55", "user": "hurtmil", "body": "# OS Version\r\n   Android 8.1.0\r\n\r\n# Azure SDK Version\r\n    implementation 'com.microsoft.azure.sdk.iot:iot-device-client:1.17.3'\r\n    implementation 'com.microsoft.azure.sdk.iot.provisioning:provisioning-device-client:1.7.1'\r\n    implementation 'com.microsoft.azure.sdk.iot.provisioning.security:x509-provider:1.1.3'\r\n\r\n# Description of the issue:\r\nWhile we are connected to the IotHub via the DeviceClient, we turn lte/wifi off on the connection we are currently using, after we detect the adapter is off we proceed to call closeNow on the DeviceClient and wait for the callback that we are in the DISCONNECTED state instead of the DISCONNECTED_RETRYING state, after that we then try to call open on DeviceClient again when we detect we have an adapter available (lte or wifi). After we go through this disconnect and reconnect cycle we noticed that a thread seems to be leaked under the name: \"MQTT Con:\" Here is a sample of how it looks after a few disconnect/reconnect cycles:\r\nsystem        2293  4318   633 4365148  64608 0                   0 S MQTT Con: 437tv\r\nsystem        2293  4579   633 4365148  64608 0                   0 S MQTT Con: 437tv\r\nsystem        2293  4672   633 4365148  64608 0                   0 S MQTT Con: 437tv\r\nsystem        2293  4761   633 4365148  64608 0                   0 S MQTT Con: 437tv\r\nsystem        2293  4831   633 4365148  64608 0                   0 S MQTT Call: 437t\r\nsystem        2293  4836   633 4365148  64608 0                   0 S MQTT Rec: 437tv\r\nsystem        2293  4837   633 4365148  64608 0                   0 S MQTT Snd: 437tv\r\nsystem        2293  4840   633 4365148  64608 0                   0 S MQTT Ping: 437t\r\n\r\n", "closed": "2019-09-30 22:52:27", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/541", "ttf": 112.00027777777778, "commits": {}, "labels": ["Underlying Library Issue", "bug", "fix checked in"], "title": "When losing a connection and then calling closeNow and open on a DeviceClient a connection thread is leaked"}, {"created": "2019-05-23 17:59:09", "user": "larrype", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->\r\nObserved issue on Windows 10 and Android API 29\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->\r\nJDK 1.8 for Windows and Android\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->\r\niot-device-client 1.17.2\r\nsecurity-provider 1.3.0\r\nx509-provider 1.1.3\r\nprovisioning-device-client 1.7.0\r\niot-deps 0.8.3\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nWhen creating the DeviceClient using DeviceClient.createFromSecurityProvider we are unable to receive C2D messages (sent either via azure portal or using service sdk). When created using the connection string and certificate files or strings [ \"new DeviceClient( ... )\" ] then c2d messages work fine. Further, using the connection string method one time will cause c2d messages to work even when connecting using createFromSecurityProvider.\r\n\r\nFor production our device has high security requirements and we use a custom security provider and therefore we require the use of createFromSecurityProvider.\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\nIf you only ever connect to iot hub like this, cannot receive c2d message...\r\n`deviceClient = DeviceClient.createFromSecurityProvider(iotHubUri, deviceId, securityProviderX509, IotHubClientProtocol.MQTT);`\r\n\r\nIf you connect like this then c2d messages can be received AND after connecting like this once it seems that subsequent connections using createFromSecurityProvider work as well.\r\n`deviceClient = new DeviceClient(connStringX509, IotHubClientProtocol.MQTT, this.getCertPath(), true,\r\n                    this.getKeyPath(), true);`\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2019-06-04 19:48:38", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/528", "ttf": 12.000277777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Cannot receive C2D messages when connect using DeviceClient.createFromSecurityProvider"}, {"created": "2019-05-21 02:05:39", "user": "anhashia", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <VERSION>  Windows 10, Ubuntu 16.04\r\n\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** <VERSION> 1.17.2\r\n\r\n\r\n# Description of the issue:\r\nIf the underlying network connection is lost, then EventCallback is not called on the message expiration.  It is only called when the connection is regained. \r\nProtocol used : MQTT and AMQP. \r\n\r\n# Code sample exhibiting the issue:\r\n\r\n**Reproduction steps** \r\n\r\n1.) Set message expiration for **1 second**. Send 10 messages at an interval of **2 seconds** \r\n``\r\nmsg.setExpiryTime(1000)\r\n``\r\n2.) On 5th message, plug out the network cable\r\n3.) Wait for another 10 seconds\r\n4.) Reconnect back the network cable\r\n\r\n**Expected result**\r\nUnable to send new messages as the connection has been lost. But as soon as message expires after 1 second, the call back related to message expiration should happen.\r\n\r\n**Actual result**\r\nNo call back happens. Call back happens only when network connectivity is regained.\r\n\r\n**Reproduction rate**\r\n100% if message expiration is set by the user. By default, there is **no** expiration. So this scenario (use case)  is applicable only when the user explicitly sets the message expiration value.\r\n\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2019-06-04 19:48:52", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/523", "ttf": 14.000277777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "On message expiration, callback not called on connection loss scenario"}, {"created": "2019-05-17 06:29:46", "user": "pawankaushal", "body": "We are building our application on Azure IOT platform and we need to get connection status for a device but unfortunately the property is not available in POJO DeviceTwinDevice.  Please see the feasibility of adding this field. \r\n\r\nPS: I can see the JSON document for a device coming from hub response clearly has the property connectionState.", "closed": "2019-09-30 22:53:28", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/520", "ttf": 136.00027777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "connectionState property not visible in com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice "}, {"created": "2019-02-26 23:09:06", "user": "terrymandin", "body": "<VERSION>  Windows 10\r\nSR # 119022421000006\r\n\r\nMy customer is sending a cap on the number of messages they can send to the IoT Hub S3 SKU via the Java SDK at ~ 80 messages / second.\r\n\r\nTo duplicate I have an IoT Hub configured with a single unit of S3. I have created a .netcore app that sends messages to a **single** device in the hub. I have removed the 'await' functionality, but ensure that no more than 5000 messages are sent every second. I created an ASA job that does a count over a 1 second tumbling window and sends the results to Power BI. I am seeing a 750 messages/second ceiling. I am expecting to see up to 6000 messages per second as per the documentation. What's up?\r\n\r\n# Code sample exhibiting the issue:\r\n        private async Task SendEvent()\r\n        {\r\n            string dataBuffer;\r\n\r\n            Console.WriteLine(\"Device sending {0} messages to IoTHub...\\n\", MessageCount);\r\n\r\n            DateTime monitor = DateTime.Now;\r\n            int sent = 0;\r\n            for (int count = 0; count < MessageCount; count++)\r\n            {\r\n                _temperature = s_randomGenerator.Next(20, 35);\r\n                _humidity = s_randomGenerator.Next(60, 80);\r\n                _timestamp = DateTime.Now.ToUniversalTime().ToString();\r\n                dataBuffer = $\"{{\\\"messageId\\\":{count},\\\"temperature\\\":{_temperature},\\\"humidity\\\":{_humidity},\\\"timestamp\\\":\\\"{_timestamp}\\\"}}\";\r\n                Message eventMessage = new Message(Encoding.UTF8.GetBytes(dataBuffer));\r\n                if (sent >= 5000)\r\n                {\r\n                    var diff = DateTime.Now.Subtract(monitor);\r\n                    Console.WriteLine(\"Sent 5000 messages in {0} seconds\", diff.TotalSeconds.ToString());\r\n                    int sleepTime = Convert.ToInt16(1000 - diff.TotalMilliseconds);\r\n                    if (sleepTime > 0)\r\n                        System.Threading.Thread.Sleep(sleepTime);\r\n                    sent = 0;\r\n                    monitor = DateTime.Now;\r\n                }\r\n                _deviceClient.SendEventAsync(eventMessage);\r\n                sent += 1;\r\n            }\r\n            System.Threading.Thread.Sleep(600000);\r\n        }\r\n\r\n", "closed": "2019-05-01 16:33:28", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/452", "ttf": 63.000277777777775, "commits": {}, "labels": ["bug"], "title": "B3 SKU being throttled to ~750 messages / second"}, {"created": "2019-02-24 19:53:29", "user": "wickste", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\nI am trying to connect a downstream device with the Azure IoT Java device SDK to my IoT Edge gateway. I am using this guide: https://docs.microsoft.com/en-us/azure/iot-edge/how-to-connect-downstream-device#use-certificates-with-azure-iot-sdks  \r\n\r\nHowever, specifying the GatewayHostName in the connection string seems to be ignored by the Java SDK. The device continues to connect to IoTHub directly, not to the Edge device. No error message on the device or in the edgeHub logs. I know I can reach the Edge device because when I put the gateway's DNS name as the Hostname in the connection string I see an error in the edgeHub logs. Also on the same machine it works correctly when using .NET and C-SDK.\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->\r\nWindows 10 1809 (build 17763.316) Enterprise\r\n\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->\r\nopenjdk 11.0.2 2019-01-15 LTS\r\nOpenJDK Runtime Environment 19.1-(Zulu-11.29+3-win_x64)-Microsoft-Azure-restricted (build 11.0.2+7-LTS)\r\nOpenJDK 64-Bit Server VM 19.1-(Zulu-11.29+3-win_x64)-Microsoft-Azure-restricted (build 11.0.2+7-LTS, mixed mode)\r\n\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->\r\n1.13.30\r\n\r\n# Description of the issue:\r\nI am starting with the Java quickstart for sending telemetry to IoTHub. Then I modify the connection string by appending \";GatewayHostName=<gateway_dns_name>\". This seems to be ignored by the Java SDK, it continues to connect to IoTHub instead of edgeHub. No error on the device or the edge.\r\n\r\n# Code sample exhibiting the issue:\r\nRepros with the quickstart sample code from the SDK\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\nThere is no error. The bug is that it connects to IoTHub instead of edgeHub.\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2019-04-16 20:40:38", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/447", "ttf": 51.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Downstream device connects to IoTHub instead of IoT Edge gateway"}, {"created": "2018-11-28 10:08:18", "user": "ShubankerSharma", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <windows 7> <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:*jdk8* <jdk8> <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** <1.14.1> <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nDeviceClient.sendEventAsync is not actually sending the messages on reaching messagesentfunction .I am getting an exception almost for all the messges which i have sent to iotHUb:\r\nMQTT Call: b33-7aae4421-0007@1 com.microsoft.azure.sdk.iot.device.transport.IotHubTransport - Message with message id 31d74f20-c393-4048-b879-594c3fa58c30 was delivered to IoTHub, but was never sent, method name is onMessageSent \r\nI got messages in Service explorer but what i am thinking is it is delivered to Hub but just not acknowledged .\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n                               Message messageToSendFromDeviceToHub = null;\r\n                                if (data == null || data.equalsIgnoreCase(\"\")) {\r\n                                    messageToSendFromDeviceToHub = new Message(payload);\r\n                                } else {\r\n                                    //replace test data in the payload\r\n                                    rootJsonObject = new JSONObject(payload);\r\n                                    String[] dataArray = lines[lineNo].split(\",\");\r\n                                    int valueNo = 0;\r\n                                    for (String s1 : ol) {\r\n                                        xpathCount = 0;\r\n                                        replaceTestDataInPayload(rootJsonObject, s1.replace(\"/wrapper/\", \"\"), dataArray[valueNo++]);\r\n                                    }\r\n                                    String prettyJson = rootJsonObject.toString(4);\r\n                                    System.out.println(\"Message no. \" + currentMessageCount + \" : \" + prettyJson);\r\n                                    messageToSendFromDeviceToHub = new Message(prettyJson);\r\n                                    lineNo++;\r\n                                    if (lineNo >= lines.length) {\r\n                                        lineNo = 0;\r\n                                    }\r\n                                }\r\n                                //deviceClient.sendEventAsync(messageToSendFromDeviceToHub, new IotHubEventCallbackImpl() , null);\r\n                                deviceClient.sendEventAsync(messageToSendFromDeviceToHub, null, null);\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n**MQTT Call: b33-7aae4421-0007@1 com.microsoft.azure.sdk.iot.device.transport.IotHubTransport - Message with message id 31d74f20-c393-4048-b879-594c3fa58c30 was delivered to IoTHub, but was never sent, method name is onMessageSent**\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2019-04-16 20:40:16", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/380", "ttf": 139.00027777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "DeviceClient.sendEventAsync is not actually sending the messages "}, {"created": "2018-11-20 10:33:01", "user": "soloxio", "body": "- **OS and version used:** Windows 10\r\n\r\n- **Java runtime used:** 1.8\r\n\r\n- **SDK version used:** 1.11.2\r\n\r\n\r\n# Description of the issue:\r\nWhen implementing DeviceMethodCallback for Client (by using Azure-IoT-SDK for java like [here](https://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-samples/device-method-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/DeviceMethodSample.java)) in order to send the response back to IoT Hub, the message received by IoT Hub contains backslashes \"\\\". These backslashes are before each double quotes in the payload. It makes the parser process failed.\r\nMessages received by IoTHub with backslashes:\r\n\r\n```\r\n{\r\n     \"status\": 123,\r\n     \"payload\": \"{\\\"abc\\\": \\\"xzy\\\"}\"\r\n}\r\n```\r\n\r\nI tried to use Azure-IoT-SDK for python and the payload are in json format (correct format). Then, of course the parser can execute successfully:\r\n\r\n```\r\n{\r\n     \"status\": 123,\r\n     \"payload\": {\"abc\": \"xyz\"}\r\n}\r\n```\r\n\r\nIs there any way for Client to handle DeviceMethodCallback (java) to send the message like in python?", "closed": "2019-03-06 22:51:55", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/378", "ttf": 106.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[Device Client] DeviceMethodCallback message contains backslashes"}, {"created": "2018-11-07 10:01:42", "user": "RudyEvers", "body": "- **OS and version used:** \r\nAndroid 8+, CompileSDKVersion 28\r\n\r\n- **Java runtime used:** \r\njava version \"1.8.0_65\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_65-b17)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.65-b01, mixed mode)\r\n\r\n- **SDK version used:**\r\napi 'com.microsoft.azure.sdk.iot:iot-device-client:1.14.1'\r\nimplementation 'com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.3.3'\r\nimplementation 'com.microsoft.azure.sdk.iot.provisioning:provisioning-device-client:1.3.3'\r\napi group: 'com.microsoft.azure.sdk.iot.provisioning.security', name: 'x509-provider', version: '1.1.1'\r\napi group: 'com.microsoft.azure.sdk.iot.provisioning.security', name: 'security-provider', version: '1.1.1'\r\napi group: 'com.microsoft.msr', name: 'DiceRIoTEmulator', version: '1.0'\r\n\r\n# Description of the issue:\r\nAfter implementing the sample found in the microsoft documentation\r\n\r\n for registering an enrolled device to the IOT Hub, the code goes into an infinite state where the \"Waiting for Provisioning Service to register\" keeps repeating without any progress. Please note we had to change the cryptography type from \"BC\" to \"SC\" due to a deprecation issue in the SDK caused by changes in the Android OS, for more information please see the following: https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html\r\n\r\n# Code sample exhibiting the issue:\r\n \r\nPlease see the attached files, I have also added the changes to the cryptography type just in case\r\n\r\n# Console log of the issue:\r\nPlease see the attached files\r\n\r\n\r\n[OurRIoT.txt](https://github.com/Azure/azure-iot-sdk-java/files/2556899/OurRIoT.txt)\r\n[OurSecurityProviderX509Cert.txt](https://github.com/Azure/azure-iot-sdk-java/files/2556900/OurSecurityProviderX509Cert.txt)\r\n[ProvisioningX509.txt](https://github.com/Azure/azure-iot-sdk-java/files/2556901/ProvisioningX509.txt)\r\n[Enrollment.txt](https://github.com/Azure/azure-iot-sdk-java/files/2556902/Enrollment.txt)\r\n", "closed": "2018-12-04 22:20:09", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/368", "ttf": 27.00027777777778, "commits": {}, "labels": ["Android", "bug", "fix checked in"], "title": "Device provisioning goes into an infinite state waiting"}, {"created": "2018-11-06 10:40:12", "user": "Sensing-Control-DevTeam", "body": "- **OS and version used:** Windows 10 / Raspbian\r\n\r\n- **Java runtime used:** 1.8\r\n\r\n- **SDK version used:** 1.14.1\r\n\r\n\r\n# Description of the issue:\r\nWhen using AMQP (WS) we're seeing this exception and reconnection about 1 time every hour, as the system knows the token expiration date it should automatically try to refresh it in advance so these exceptions do not happen.\r\n\r\n# Console log of the issue:\r\n\r\n```\r\n2018-11-06 08:36:35,944 AzureIoTHub [pool-18680-thread-1] DEBUG: IoTHub connection state callback, status: DISCONNECTED_RETRYING reason: BAD_CREDENTIAL\r\ncom.microsoft.azure.sdk.iot.device.transport.amqps.exceptions.AmqpUnauthorizedAccessException: Token Invalid.\r\n        at com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsExceptionTranslator.convertToAmqpException(AmqpsExceptionTranslator.java:87)\r\n        at com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.getTransportExceptionFromEvent(AmqpsIotHubConnection.java:1161)\r\n        at com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onLinkRemoteClose(AmqpsIotHubConnection.java:730)\r\n        at org.apache.qpid.proton.engine.BaseHandler.handle(BaseHandler.java:176)\r\n        at org.apache.qpid.proton.engine.impl.EventImpl.dispatch(EventImpl.java:108)\r\n        at org.apache.qpid.proton.reactor.impl.ReactorImpl.dispatch(ReactorImpl.java:324)\r\n        at org.apache.qpid.proton.reactor.impl.ReactorImpl.process(ReactorImpl.java:291)\r\n        at com.microsoft.azure.sdk.iot.device.transport.amqps.IotHubReactor.run(IotHubReactor.java:28)\r\n        at com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection$ReactorRunner.call(AmqpsIotHubConnection.java:810)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n2018-11-06 08:36:37,239 AzureIoTHub [pool-18680-thread-1] DEBUG: IoTHub connection state callback, status: CONNECTED reason: CONNECTION_OK\r\n\r\n```\r\n", "closed": "2018-11-30 20:07:37", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/365", "ttf": 24.00027777777778, "commits": {}, "labels": ["bug"], "title": "[Device Client] AMQP should refresh token automatically to avoid reconnection"}, {"created": "2018-11-06 08:40:09", "commits": {"4fda6f0f18b334eab45eabb9791ae8eb51a8b33c": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "7226bf14eba8c1e3233d0d3ac7767a51116c9a81": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "81de4e3da1b3e903f1b3bb0deaf714812d573de4": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "714ec47ddfdb1a159c8dc50ce208f38f82cd0b80": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(com.microsoft.azure.sdk.iot.device.transport.mqtt.IMqttDeliveryToken)"], "closed": "2018-11-14 20:22:24", "filteredCommits": ["81de4e3da1b3e903f1b3bb0deaf714812d573de4"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "4fda6f0f18b334eab45eabb9791ae8eb51a8b33c", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "7226bf14eba8c1e3233d0d3ac7767a51116c9a81", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "81de4e3da1b3e903f1b3bb0deaf714812d573de4 tags/2018-12-3~9", "commitMessage": "fix(iot-dev): fix issue where mqtt layer unacknowledgedSentMessages never removed messages after they were ack'd\n\nissue #364\n", "commitParents": ["7e8356e2179c93c3cc73c76e48b5d5fac1ea465f"], "spoonStatsSkippedReason": "", "commitHash": "81de4e3da1b3e903f1b3bb0deaf714812d573de4", "authoredDateTime": "2018-11-06 11:06:55", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTest.java"}], "commitDateTime": "2018-11-14 10:36:57", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.deliveryCompleteNotifiesListener()"}], "spoonFilePath": "MqttTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.deliveryComplete(com.microsoft.azure.sdk.iot.device.transport.mqtt.IMqttDeliveryToken)"}], "spoonFilePath": "Mqtt.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "714ec47ddfdb1a159c8dc50ce208f38f82cd0b80", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/364", "ttf": 8.000277777777777, "gitStatsSummary": {"insertions": 2.0, "deletions": 2.0, "lines": 4.0, "gitFilesChange": 1}, "title": "MemoryLeak: Mqtt unacknowledged messages are never deleted from tracking list", "statsSkippedReason": "", "user": "BoeseB", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 2.0, "spoonMethodsChanged": 1, "TOT": 4.0, "MOV": 1.0, "INS": 0.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "SDK Version: 1.14.0\r\n\r\nUsing the SDK is currently not possible for us, as the implementation has a memory leak where all messages are collected in a dictionary of unacknowledged messages and never removed from this dictionary again.\r\n\r\nAfter just 12 Hours the heap of our IoT device is exhausted because of this.\r\n\r\nIs deleting the messages in the following function the right aproach to fix this issue? \r\nWhere to put the line? \r\nDelete only when listeners are present?\r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/cf900dcc29f7cedfba1af9d0426c1c7e13fb4d21/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java#L384-L415\r\n\r\n", "labels": ["bug"]}, {"created": "2018-10-18 11:58:35", "commits": {"6f3c68a4ffbf9ed7bf156bc232f653a56238c686": {"commitGHEventType": "referenced", "commitUser": "jasmineymlo"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.getPrivateKey(java.lang.Object)", "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getPrivateKey(java.lang.Object)"], "closed": "2018-12-04 22:20:44", "filteredCommits": ["6f3c68a4ffbf9ed7bf156bc232f653a56238c686"], "commitsDetails": [{"nameRev": "6f3c68a4ffbf9ed7bf156bc232f653a56238c686 tags/2018-12-3~8", "commitMessage": "fix(device): remove explicit specifiying BC provider to support Android Pie #348\n", "commitParents": ["81de4e3da1b3e903f1b3bb0deaf714812d573de4"], "spoonStatsSkippedReason": "", "commitHash": "6f3c68a4ffbf9ed7bf156bc232f653a56238c686", "authoredDateTime": "2018-11-27 13:07:29", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/auth/IotHubSSLContext.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "iot-e2e-tests/android/app/build.gradle"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "provisioning/security/x509-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderX509Cert.java"}], "commitDateTime": "2018-11-27 13:35:04", "commitUser": "jasmineymlo", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 2, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.getPrivateKey(java.lang.Object)"}], "spoonFilePath": "IotHubSSLContext.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 2, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getPrivateKey(java.lang.Object)"}], "spoonFilePath": "SecurityProviderX509Cert.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/348", "ttf": 47.000277777777775, "gitStatsSummary": {"insertions": 7, "deletions": 7, "lines": 14, "gitFilesChange": 3}, "title": "[Android][API28] Client can not connect while using X509 Certification ", "statsSkippedReason": "", "user": "kaki0000", "changesInPackagesGIT": ["iot-e2e-tests/android/app", "provisioning/security/x509-provider/src/main/java/com/microsoft/azure/sdk", "deps/src/main/java/com/microsoft/azure/sdk/iot/deps"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 8, "MOV": 4, "INS": 0, "DEL": 4, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- **OS and version used:  Android\r\n\r\n- **Java runtime used: Android SDK 28\r\n\r\n- **SDK version used: com.microsoft.azure.sdk.iot:iot-device-client:1.14.0\r\n\r\n# Description of the issue:\r\nI try to send message with X509 Certification (reference the code https://github.com/Azure/azure-iot-sdk-java/tree/master/device/iot-device-samples/send-event-x509) in Android APP.\r\nBut can not open the connection. \r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\n\r\n# Code sample exhibiting the issue:\r\n    private final String connString = \"HostName=XXXX.azure-devices.net;DeviceId=mydevice;x509=true\";\r\n    private final String deviceId = \"mydevice\";\r\n    private static String publicKeyCertificateString = \"-----BEGIN CERTIFICATE-----\\n\" +\r\n            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n            \"-----END CERTIFICATE-----\\n\";\r\n\r\n    //PEM encoded representation of the private key\r\n    private static String privateKeyString =  \"-----BEGIN PRIVATE KEY-----\\n\" +\r\n            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n            \"-----END PRIVATE KEY-----\\n\";\r\n\r\n    IotHubClientProtocol protocol = IotHubClientProtocol.MQTT;\r\n    client = new DeviceClient(connString, protocol, publicKeyCertificateString, false, privateKeyString, false);\r\n    client.open();\r\n\r\n# Console log of the issue:\r\n2018-10-17 11:32:23.740 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: Exception while opening IoTHub connection: Could not open the connection\r\n2018-10-17 11:32:23.740 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: java.io.IOException: Could not open the connection\r\n2018-10-17 11:32:23.740 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:164)\r\n2018-10-17 11:32:23.740 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.InternalClient.open(InternalClient.java:130)\r\n2018-10-17 11:32:23.740 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.DeviceClient.open(DeviceClient.java:317)\r\n2018-10-17 11:32:23.740 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.iothub.azure.microsoft.com.androidsample.MainActivity.InitClient(MainActivity.java:152)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.iothub.azure.microsoft.com.androidsample.MainActivity.onCreate(MainActivity.java:83)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.app.Activity.performCreate(Activity.java:7016)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1214)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2783)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2905)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1606)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.os.Handler.dispatchMessage(Handler.java:105)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.os.Looper.loop(Looper.java:169)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at android.app.ActivityThread.main(ActivityThread.java:6595)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at java.lang.reflect.Method.invoke(Native Method)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)\r\n2018-10-17 11:32:23.741 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)\r\n2018-10-17 11:32:23.742 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: Caused by: com.microsoft.azure.sdk.iot.device.exceptions.TransportException: java.io.IOException: java.security.cert.CertificateException: org.bouncycastle.openssl.PEMException: unable to convert key pair: no such algorithm: ECDSA for provider BC\r\n2018-10-17 11:32:23.742 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(MqttIotHubConnection.java:202)\r\n2018-10-17 11:32:23.742 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.openConnection(IotHubTransport.java:640)\r\n2018-10-17 11:32:23.742 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(IotHubTransport.java:277)\r\n2018-10-17 11:32:23.742 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:160)\r\n2018-10-17 11:32:23.742 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: ... 16 more\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: Caused by: java.io.IOException: java.security.cert.CertificateException: org.bouncycastle.openssl.PEMException: unable to convert key pair: no such algorithm: ECDSA for provider BC\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.getSSLContext(IotHubX509SoftwareAuthenticationProvider.java:66)\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(MqttIotHubConnection.java:123)\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: ... 19 more\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: Caused by: java.security.cert.CertificateException: org.bouncycastle.openssl.PEMException: unable to convert key pair: no such algorithm: ECDSA for provider BC\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.parsePrivateKey(IotHubSSLContext.java:288)\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.generateSSLContextWithKeys(IotHubSSLContext.java:188)\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.<init>(IotHubSSLContext.java:160)\r\n2018-10-17 11:32:23.743 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.generateSSLContext(IotHubX509SoftwareAuthenticationProvider.java:96)\r\n2018-10-17 11:32:23.744 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.getSSLContext(IotHubX509SoftwareAuthenticationProvider.java:56)\r\n2018-10-17 11:32:23.744 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: ... 20 more\r\n2018-10-17 11:32:23.744 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: Caused by: org.bouncycastle.openssl.PEMException: unable to convert key pair: no such algorithm: ECDSA for provider BC\r\n2018-10-17 11:32:23.744 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:46)\r\n2018-10-17 11:32:23.744 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.getPrivateKey(IotHubSSLContext.java:352)\r\n2018-10-17 11:32:23.744 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at com.microsoft.azure.sdk.iot.deps.auth.IotHubSSLContext.parsePrivateKey(IotHubSSLContext.java:283)\r\n2018-10-17 11:32:23.744 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: ... 24 more\r\n2018-10-17 11:32:23.761 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: Caused by: java.security.NoSuchAlgorithmException: no such algorithm: ECDSA for provider BC\r\n2018-10-17 11:32:23.761 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at sun.security.jca.GetInstance.getService(GetInstance.java:87)\r\n2018-10-17 11:32:23.761 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at sun.security.jca.GetInstance.getInstance(GetInstance.java:206)\r\n2018-10-17 11:32:23.761 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at java.security.KeyFactory.getInstance(KeyFactory.java:234)\r\n2018-10-17 11:32:23.761 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyFactory(Unknown Source:2)\r\n2018-10-17 11:32:23.761 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getKeyFactory(Unknown Source:20)\r\n2018-10-17 11:32:23.761 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err:     at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:4)\r\n2018-10-17 11:32:23.761 3101-3101/com.iothub.azure.microsoft.com.androidsample W/System.err: ... 26 more\r\n\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "labels": ["Android", "bug", "fix checked in"]}, {"created": "2018-09-26 17:27:35", "commits": {"84e685969d96408fc074e50d3e6a7f9bf73453bd": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "3cacc197d1c0139d12eabb5c54bab7fd22ee151d": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "1e06c0d1934e9ad166bc595d3e7075019a72c488": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "42bb4fc3742e5237d4d9b188ea181ce90850591e": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.InternalClient.setOption(java.lang.String,java.lang.Object)", "com.microsoft.azure.sdk.iot.device.DeviceClient.setOption(java.lang.String,java.lang.Object)"], "closed": "2018-10-11 23:20:14", "filteredCommits": ["1e06c0d1934e9ad166bc595d3e7075019a72c488", "3cacc197d1c0139d12eabb5c54bab7fd22ee151d"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "84e685969d96408fc074e50d3e6a7f9bf73453bd", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "42bb4fc3742e5237d4d9b188ea181ce90850591e", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "1e06c0d1934e9ad166bc595d3e7075019a72c488 tags/2018-10-11~9", "commitMessage": "fix(iot-device): Fix issue where device clients using mqtt cannot set certificate path (Issue #342)\n", "commitParents": ["029a7a067126a892a9f2f2f4e42e709b3f9e55b0"], "spoonStatsSkippedReason": "", "commitHash": "1e06c0d1934e9ad166bc595d3e7075019a72c488", "authoredDateTime": "2018-09-25 14:41:18", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 2, "lines": 8, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java"}, {"insertions": 77, "deletions": 0, "lines": 77, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/InternalClientTest.java"}], "commitDateTime": "2018-09-26 10:35:51", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 6, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.InternalClient.setOption(java.lang.String,java.lang.Object)"}], "spoonFilePath": "InternalClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.InternalClientTest.setCertificatePathWorksForAmqpsWs()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.InternalClientTest.setCertificatePathFailsForHttps()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.InternalClientTest.setCertificatePathWorksForAmqps()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.InternalClientTest.setCertificatePathWorksForMqtt()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.InternalClientTest.setCertificatePathWorksForMqttWs()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.InternalClientTest.setCertificatePath(tests.unit.com.microsoft.azure.sdk.iot.device.IotHubClientProtocol)"}], "spoonFilePath": "InternalClientTest.java"}]}, {"nameRev": "3cacc197d1c0139d12eabb5c54bab7fd22ee151d tags/2018-10-11~8", "commitMessage": "fix(iot-device): Fix issue where device clients cannot set certificate authority(Issue #342)\n", "commitParents": ["1e06c0d1934e9ad166bc595d3e7075019a72c488"], "spoonStatsSkippedReason": "", "commitHash": "3cacc197d1c0139d12eabb5c54bab7fd22ee151d", "authoredDateTime": "2018-09-25 14:41:37", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 69, "deletions": 3, "lines": 72, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceClientTest.java"}, {"insertions": 13, "deletions": 0, "lines": 13, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java"}], "commitDateTime": "2018-09-26 10:35:52", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.DeviceClient.setOption(java.lang.String,java.lang.Object)"}], "spoonFilePath": "DeviceClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceClientTest.setCertificateAuthoritySucceeds()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceClientTest.constructorSuccess().2"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceClientTest.constructorSuccessX509().4"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceClientTest.constructorTransportClientSuccess().1"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceClientTest.setCertificateAuthorityThrowsIfOpenTransportClient()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceClientTest.deviceClientInstanceExpectation(tests.unit.com.microsoft.azure.sdk.iot.device.IotHubClientProtocol).74"}], "spoonFilePath": "DeviceClientTest.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/342", "ttf": 15.000277777777777, "gitStatsSummary": {"insertions": 19.0, "deletions": 2.0, "lines": 21.0, "gitFilesChange": 2}, "title": "[DeviceClient] Cannot set trusted certificate path when using MQTT", "statsSkippedReason": "", "user": "timtay-microsoft", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 2.0, "spoonMethodsChanged": 2, "TOT": 7.0, "MOV": 1.0, "INS": 2.0, "DEL": 2.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- **OS and version used:** Windows 10\r\n\r\n- **Java runtime used:** 8\r\n\r\n- **SDK version used:** 1.14.0\r\n\r\n\r\n# Description of the issue:\r\nThe SetOption API allows a device client object to set the certificate path of a custom trusted certificate. However, the API throws an exception if the device client is using MQTT or MQTT_WS, even though it would work.\r\n\r\nAlso, the DeviceClient doesn't allow you to use the SetCertificateAuthority option like ModuleClient does. \r\n\r\n# Code sample exhibiting the issue:\r\n\r\n```\r\nDeviceClient client = new DeviceClient(\"connection string\", MQTT)\r\nclient.setOption(\"SetCertificatePath\", \"some trusted cert's path\"); //throws\r\nclient.setOption(\"SetCertificateAuthority\", \"some trusted cert\"); //throws\r\n```", "labels": ["bug", "fix checked in"]}, {"created": "2018-09-18 16:32:27", "commits": {"2755b0b71b860655f992ef859a0b6e5647c3c8b5": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "0331dac6be9f2c78d72964ba85de7e929ba14e41": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.jsonToDeviceTwinDevice(java.lang.String)", "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.toString()", "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setModuleId(java.lang.String)"], "closed": "2018-10-11 23:20:56", "filteredCommits": ["0331dac6be9f2c78d72964ba85de7e929ba14e41"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "2755b0b71b860655f992ef859a0b6e5647c3c8b5", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "0331dac6be9f2c78d72964ba85de7e929ba14e41 tags/2018-10-11~16", "commitMessage": "fix(iot-service): Fix bug where Module Id is not included in the results of module twin queries\n\nissue #340\n", "commitParents": ["72361ee6c6cba9cbc71325957420040518d8e600"], "spoonStatsSkippedReason": "", "commitHash": "0331dac6be9f2c78d72964ba85de7e929ba14e41", "authoredDateTime": "2018-09-18 10:43:33", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 75, "deletions": 2, "lines": 77, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java"}, {"insertions": 15, "deletions": 1, "lines": 16, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDevice.java"}, {"insertions": 5, "deletions": 0, "lines": 5, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java"}, {"insertions": 18, "deletions": 0, "lines": 18, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDeviceTest.java"}], "commitDateTime": "2018-09-20 10:56:51", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setModuleId(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.toString()"}], "spoonFilePath": "DeviceTwinDevice.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextRetrievesCorrectlyWithoutModuleId().32"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.scheduleUpdateTwinScheduleUpdateTwinFailed(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.Job,tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).43"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.scheduleUpdateTwinCreateJobSucceed(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.Job,tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).39"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.schedule(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.Job,tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).41"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextRetrievesCorrectlyWithModuleId()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.scheduleUpdateTwinCreateJobFailed(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.Job,tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).40"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextThrowsIfNonStringRetrieved(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).38"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getNextDeviceTwinCollectionWithoutOptionsCallsGetNextDeviceTwinCollectionWithOptions().47"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.hasNextDeviceTwinQueryCollectionSuccess().50"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextRetrievesCorrectly()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextThrowsOnNullQuery(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).34"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextThrowsIfNonStringRetrieved(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).37"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.schedule(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.Job,tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).42"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextThrowsIfNoNewElements(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).36"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getNextDeviceTwinCollectionWithOptionsSuccess().49"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.queryTwinCollectionWithPageSizeSuccess().45"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.queryTwinCollectionWithoutPageSizeUsesDefaultPageSize().44"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getNextDeviceTwinCollectionWithoutOptionsCallsGetNextDeviceTwinCollectionWithOptions().46"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextThrowsOnQueryNextThrows(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).35"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getNextDeviceTwinCollectionWithOptionsReturnsNullIfDoesNotHaveNext().48"}], "spoonFilePath": "DeviceTwinTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDeviceTest.setModuleIdSets()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDeviceTest.toStringReturnsAllNoETag()"}], "spoonFilePath": "DeviceTwinDeviceTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.jsonToDeviceTwinDevice(java.lang.String)"}], "spoonFilePath": "DeviceTwin.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/340", "ttf": 23.00027777777778, "gitStatsSummary": {"insertions": 20.0, "deletions": 1.0, "lines": 21.0, "gitFilesChange": 2}, "title": "Module Id not included in the results of module twin queries", "statsSkippedReason": "", "user": "rajsachdev-bn", "changesInPackagesGIT": ["service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 3, "TOT": 3.0, "MOV": 0.0, "INS": 3.0, "DEL": 0.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- OS and version used: Ubuntu 14.04\r\n\r\n- Java runtime used: jdk 8u171\r\n\r\n- SDK version used: 1.15.0\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nThe result of an SqlQuery across all modules in an IotHub does not include the moduleId in the modules returned.\r\n\r\nLooks like the issue lies in the following link. The module id is never extracted from the json.\r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/master/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java#L486\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n```\r\n     //creating the sql query\r\n      SqlQuery sqlQuery = SqlQuery.createSqlQuery(\"*\", FromType.MODULES, null, null);\r\n    \r\n      //executing the sql query\r\n      Query twinQuery = twinClient.queryTwin(sqlQuery.getQuery());\r\n     \r\n       //iterating through the results\r\n      while (twinClient.hasNextDeviceTwin(twinQuery)) {\r\n          // ISSUE: the following line does not store any moduleId into the device object.\r\n          // Looks like the moduleId is never parsed from the module twin json.\r\n          DeviceTwinDevice device = twinClient. getNextDeviceTwin(twinQuery);\r\n          System.out.println(device);\r\n      }\r\n```\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n```\r\nDevice ID: device-1-f5e06842b\r\nETag: AAAAAAAAAAE=\r\nVersion: 3\r\nTags:{}\r\nReported Properties: {}\r\nDesired Properties: {}\r\n```\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2018-09-14 18:18:02", "user": "sam-findler", "body": "- **OS and version used:** Ubuntu 14.04\r\n\r\n- **Java runtime used:** jdk 8u171\r\n\r\n- **SDK version used:** 1.14.0\r\n\r\n\r\n# Description of the issue:\r\nAcccording to https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins#tags-and-properties-format , the nesting level inside of the reported_properties, desired_properties and tags is supposed to be 5, starting from the inside of the map.  However, the code in the client (https://github.com/Azure/azure-iot-sdk-java/blob/master/deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/TwinCollection.java) indicates that the nesting level is being counted from the top level.  We have not seen this issue in the c/python client, only in the java client.\r\n\r\n# Code sample exhibiting the issue:\r\n\r\n``` \r\n//creating the property\r\nprivate static Property createAlertProperty(int dataIndex) {\r\n    Map<String, Object> alertProperties = new HashMap<>();\r\n    Map<String, Object> sourceProperties = new HashMap<>();\r\n    sourceProperties.put(TwinFields.OK.value(), 1);\r\n    Map<String, Object> data = new HashMap<>();\r\n    data.put(\"data_index\", dataIndex);\r\n    sourceProperties.put(TwinFields.DATA.value(), data);\r\n    alertProperties.put(\"some_source_1\", sourceProperties);\r\n    alertProperties.put(TwinFields.PRIORITY.value(), 1);\r\n\r\n    return new Property(\"some_alert_1\", alertProperties);\r\n  }\r\n/*\r\nThis produces the reported property:\r\n\"some_alert_1\":{  \r\n            \"some_source_1\":{  \r\n               \"data\":{  \r\n                  \"data_index\":0\r\n               },\r\n               \"ok\":1\r\n            },\r\n            \"priority\":1\r\n }\r\nWhich is only a nesting level of 3 deep\r\n*/\r\n```\r\n```\r\n//sending the reported property\r\nProperty property = createAlertProperty(i);\r\nSystem.out.println(\"Sending Property\" + property.getKey());\r\nmoduleClient.sendReportedProperties(new HashSet<>(Arrays.asList(property)));\r\n```\r\n```\r\n//trying to get the remote device twin state from the service client\r\n\r\nDeviceTwin service = DeviceTwin\r\n        .createFromConnectionString(iotHubTestController.getIotHubConnectionString());\r\nDeviceTwinDevice device = new DeviceTwinDevice(moduleController.getModule().getDeviceId(),\r\n        moduleController.getModule().getId());\r\n//this is when the exception occurs\r\nservice.getTwin(device);\r\n```\r\n\r\n# Console log of the issue:\r\n```\r\njava.lang.IllegalArgumentException: Map exceed maximum of 5 levels\r\n\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:237)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:233)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:233)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:233)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:233)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap(ParserUtility.java:205)\r\n\tat com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.put(TwinCollection.java:231)\r\n\tat com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.put(TwinCollection.java:96)\r\n\tat com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(MapTypeAdapterFactory.java:188)\r\n\tat com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(MapTypeAdapterFactory.java:145)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:129)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:220)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:129)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:220)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:887)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:852)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:801)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:773)\r\n\tat com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromTwinJson(TwinState.java:297)\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwinOperation(DeviceTwin.java:113)\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwin(DeviceTwin.java:88)\r\n```\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-10-11 23:21:35", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/338", "ttf": 27.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "GetTwin Method Misapplies 5 nesting depth limit for module and device twin"}, {"created": "2018-09-12 22:21:33", "user": "vernazza", "body": "- **OS and version used:** <VERSION> Android\r\n\r\n- **Java runtime used:** <VERSION> Android SDK 28\r\n\r\n- **SDK version used:** <VERSION> com.microsoft.azure.sdk.iot:iot-device-client:1.14.0\r\n\r\n# Description of the issue:\r\nWhen in the Iot message queue there are many messages in the cloud to device message queue (i.e. at least 12), the iothub client can't connect.\r\nThe `DeviceClient.open()` function throws an exception, after very few mseconds\r\n\r\n# Code sample exhibiting the issue:\r\n>                deviceClient = new DeviceClient(connectionString, IotHubClientProtocol.MQTT);\r\n>                deviceClient.setMessageCallback(this, this);\r\n>                deviceClient.registerConnectionStatusChangeCallback(this, this);\r\n>                deviceClient.open();\r\n\r\n\r\n# Console log of the issue:\r\nAn exception is thrown. The exception is\r\n`java.io.IOException: Could not open the connection`\r\n\r\nThe cause field of the exception is:\r\n`com.microsoft.azure.sdk.iot.device.exceptions.ProtocolException: Unable to subscribe to topic :devices/DEVICEID/messages/devicebound/#`\r\n\r\nAnd the cause field in the cause field is\r\n`Timed out waiting for a response from the server (32000)`\r\n\r\nThe exception is thrown very quickly, so it doesn't seem to match the \"timeout\" reason", "closed": "2019-03-06 22:46:46", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/334", "ttf": 175.00027777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Android client can't connect if many messages in the queue"}, {"created": "2018-09-06 21:11:56", "user": "timtay-microsoft", "body": "# Description of the issue:\r\nWhen registering a device over the provisioning device client, and the wrong registration id, an improper exception is bubble up when using mqtt/amqps (http works, though)\r\n\r\n# Code sample exhibiting the issue:\r\nProvisioningDeviceClient provisioningDeviceClient = null;\r\nProvisioningStatus provisioningStatus = new ProvisioningStatus();\r\n\r\n        Collection<String> signerCertificates = new LinkedList<>();\r\n        SecurityProvider securityProviderX509 = new SecurityProviderX509Cert(leafPublicPem, leafPrivateKey, signerCertificates);\r\n\r\n        provisioningDeviceClient = ProvisioningDeviceClient.create(getGlobalEndpoint(), getScopeId(), getProtocol(), securityProviderX509);\r\n\r\n        provisioningDeviceClient.registerDevice(new ProvisioningDeviceClientRegistrationCallbackImpl(), provisioningStatus);\r\n\r\n        while (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() != ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ASSIGNED) {\r\n            if (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ERROR\r\n                    || provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_DISABLED\r\n                    || provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_FAILED) {\r\n                provisioningStatus.exception.printStackTrace();\r\n                System.out.println(\"Registration error, bailing out\");\r\n                break;\r\n            }\r\n            System.out.println(\"Waiting for Provisioning Service to register\");\r\n            Thread.sleep(MAX_TIME_TO_WAIT_FOR_REGISTRATION);\r\n        } \r\n\r\n# Console log of the issue:\r\njava.util.concurrent.ExecutionException: java.lang.IllegalArgumentException: JSON does not contain Operation Id or Status\r\nat java.util.concurrent.FutureTask.report(FutureTask.java:122)\r\nat java.util.concurrent.FutureTask.get(FutureTask.java:206)\r\nat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.invokeRegister(ProvisioningTask.java:111)\r\nat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.call(ProvisioningTask.java:283)\r\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\nat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.IllegalArgumentException: JSON does not contain Operation Id or Status\r\nat com.microsoft.azure.sdk.iot.provisioning.device.internal.parser.RegistrationOperationStatusParser.createFromJson(RegistrationOperationStatusParser.java:71)\r\nat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.authenticateWithX509(RegisterTask.java:136)\r\nat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.authenticateWithDPS(RegisterTask.java:283)\r\nat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.call(RegisterTask.java:308)\r\nat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.call(RegisterTask.java:33)\r\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n... 4 more\r\nRegistration error, bailing out\r\n", "closed": "2018-10-11 23:22:12", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/332", "ttf": 35.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Provisioning Device Client not handling certain exceptions"}, {"created": "2018-09-04 09:12:49", "user": "taroyutao", "body": "When I use the method uploadToBlobAsync() in java, it works fine. but when i use it in Android, it doesn't work.\r\n\r\nsomething wrong in the following code:\r\n`\r\n    public CloudBlockBlob(final StorageUri blobAbsoluteUri) throws StorageException {\r\n        super(BlobType.BLOCK_BLOB);\r\n\r\n        **Utility.assertNotNull(\"blobAbsoluteUri\", blobAbsoluteUri);**\r\n        this.setStorageUri(blobAbsoluteUri);\r\n        this.parseURIQueryStringAndVerify(blobAbsoluteUri, null,\r\n                Utility.determinePathStyleFromUri(blobAbsoluteUri.getPrimaryUri()));\r\n    }\r\n`\r\n\r\nhow can we use the method in Android?\r\n\r\nThanks in anvance.\r\n", "closed": "2018-10-15 15:52:21", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/331", "ttf": 41.000277777777775, "commits": {}, "labels": ["Android", "bug"], "title": "The method uploadToBlobAsync() doesn't work when used in Android"}, {"created": "2018-09-03 11:43:44", "commits": {"75200d9a0d0089b39d2652e7b1aa498fe97a15a7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "deb92dfece3704fae9da453b09c170582e48a181": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "7bdb7c8e835e0b0c37daa9c487113b7527112839": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.service.exceptions.IotHubBadFormatException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubInvalidOperationException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubTooManyDevicesException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubTooManyRequestsException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubServerBusyException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubGatewayTimeoutException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubDeviceMaximumQueueDepthExceededException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubNotFoundException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubDeviceNotFoundException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubInternalServerErrorException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubNotSupportedException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubPreconditionFailedException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubUnathorizedException", "com.microsoft.azure.sdk.iot.service.exceptions.IotHubBadGatewayException"], "closed": "2018-12-06 23:31:16", "filteredCommits": ["deb92dfece3704fae9da453b09c170582e48a181"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "75200d9a0d0089b39d2652e7b1aa498fe97a15a7", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "deb92dfece3704fae9da453b09c170582e48a181 tags/2019-4-19~84", "commitMessage": "refactor(iot-service): Removing additional implied exception details to http exceptions\n\nissue #329\n\nAdditional exception context beyond what the service provided was more confusing than helpful in certain circumstances\n", "commitParents": ["15185fe9b67a665da820084c95c3863ea9ea18c5"], "spoonStatsSkippedReason": "", "commitHash": "deb92dfece3704fae9da453b09c170582e48a181", "authoredDateTime": "2018-11-15 12:24:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 5, "lines": 10, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/exceptions/IotHubExceptionManagerTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubDeviceMaximumQueueDepthExceededException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubNotSupportedException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubGatewayTimeoutException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubPreconditionFailedException.java"}, {"insertions": 4, "deletions": 1, "lines": 5, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubUnathorizedException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubNotFoundException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubDeviceNotFoundException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubServerBusyException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubBadFormatException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubInvalidOperationException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubTooManyRequestsException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubInternalServerErrorException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubTooManyDevicesException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubMessageTooLargeException.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/exceptions/IotHubBadGatewayException.java"}], "commitDateTime": "2018-12-06 13:26:55", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubBadFormatException"}], "spoonFilePath": "IotHubBadFormatException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubPreconditionFailedException"}], "spoonFilePath": "IotHubPreconditionFailedException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubException"}], "spoonFilePath": "IotHubException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubUnathorizedException"}], "spoonFilePath": "IotHubUnathorizedException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubInternalServerErrorException"}], "spoonFilePath": "IotHubInternalServerErrorException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubTooManyDevicesException"}], "spoonFilePath": "IotHubTooManyDevicesException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubInvalidOperationException"}], "spoonFilePath": "IotHubInvalidOperationException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubNotSupportedException"}], "spoonFilePath": "IotHubNotSupportedException.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManagerTest.httpResponseVerification400WithNULLErrorReason()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManagerTest.httpResponseVerification400WithInnerMessageAndException()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManagerTest.httpResponseVerification400WithEmptyErrorReason()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManagerTest.httpResponseVerification400WithErrorReason()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManagerTest.httpResponseVerification400WithMessageAndException()"}], "spoonFilePath": "IotHubExceptionManagerTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubMessageTooLargeException"}], "spoonFilePath": "IotHubMessageTooLargeException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubTooManyRequestsException"}], "spoonFilePath": "IotHubTooManyRequestsException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubBadGatewayException"}], "spoonFilePath": "IotHubBadGatewayException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubDeviceMaximumQueueDepthExceededException"}], "spoonFilePath": "IotHubDeviceMaximumQueueDepthExceededException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubDeviceNotFoundException"}], "spoonFilePath": "IotHubDeviceNotFoundException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubServerBusyException"}], "spoonFilePath": "IotHubServerBusyException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubNotFoundException"}], "spoonFilePath": "IotHubNotFoundException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.exceptions.IotHubGatewayTimeoutException"}], "spoonFilePath": "IotHubGatewayTimeoutException.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "7bdb7c8e835e0b0c37daa9c487113b7527112839", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/329", "ttf": 94.00027777777778, "gitStatsSummary": {"insertions": 19.0, "deletions": 16.0, "lines": 35.0, "gitFilesChange": 16}, "title": "After a direct method invocation I get sometimes IoTHubNotFoundException (with error codes 404001, 404103)", "statsSkippedReason": "", "user": "datoga", "changesInPackagesGIT": ["service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 16, "TOT": 32.0, "MOV": 0.0, "INS": 16.0, "DEL": 16.0, "spoonFilesChanged": 16}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- **OS and version used:** Alpine 3.8 (via Docker): openjdk:8-jre-alpine\r\n\r\n- **Java runtime used:** JDK 8 (8u171).\r\n\r\n- **SDK version used:** Azure IoT Service Client: 1.14\r\n\r\n# Description of the issue:\r\nWe have a connected device, ready to listen some commands.\r\n\r\nSometimes (that's important, we cannot found any pattern to make it fail, sorry!), a direct method invocation to the IoT Hub API returns IoT Hub not found (IotHubNotFoundException) with error codes 404001 or 404003 (the error code depends but the error is the same). The rest of requests work properly.\r\n\r\nLooking for the error code I haven't found any reference to IoT Hub not found with that error code, only \r\nhttps://github.com/Azure/azure-iot-sdk-csharp/issues/431, but it refers to a not registered device, it seems not related to our error.\r\n\r\nSome clues:\r\n- It seems that, after failing one time, the probability to fail raises (burst errors?).\r\n- If the invocation fails, after retrying the next invocation may be ok (or not!).\r\n\r\n# Code sample exhibiting the issue:\r\n\r\n```\r\nMap<String, Object> payload = new HashMap<>();\r\npayload.put(\"method\", \"pairingcode\");\r\npayload.put(\"code\", \"CODE\");\r\n\r\nDeviceMethod methodClient = DeviceMethod.\r\n    createFromConnectionString(iotHubConnectionString); // X.509 connection\r\nMethodResult result = methodClient.\r\n    invoke(\"qacarlos32dev\", \"runcommand\", responseTimeout, connectTimeout, payload);\r\n\r\n//connectTimeout = 5 responseTimeout = 200\r\n```\r\n\r\n# Console log of the issue:\r\n```\r\nIoT Hub not found! {\"errorCode\":404001,\"trackingId\":\"a9ded5c59eda49e1adbe8e1eacc78c9a-G:1-TimeStamp:09/03/2018 10:45:52\",\"message\":\"qacarlos32dev\",\"timestampUtc\":\"2018-09-03T10:45:52.88087Z\"} \r\ncom.microsoft.azure.sdk.iot.service.exceptions.IotHubNotFoundException: IoT Hub not found! {\"errorCode\":404001,\"trackingId\":\"a9ded5c59eda49e1adbe8e1eacc78c9a-G:1-TimeStamp:09/03/2018 10:45:52\",\"message\":\"qacarlos32dev\",\"timestampUtc\":\"2018-09-03T10:45:52.88087Z\"} \r\n\tat com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManager.httpResponseVerification(IotHubExceptionManager.java:71) ~[iot-service-client-1.14.0.jar!/:na]\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request(DeviceOperations.java:137) ~[iot-service-client-1.14.0.jar!/:na]\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invokeMethod(DeviceMethod.java:175) ~[iot-service-client-1.14.0.jar!/:na]\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(DeviceMethod.java:81) ~[iot-service-client-1.14.0.jar!/:na]\r\n\r\nIoT Hub not found! {\"errorCode\":404103,\"trackingId\":\"871115953cfb48dea4d28a980c170be7-G:19-TimeStamp:09/03/2018 12:08:48\",\"message\":\"NotFound\",\"timestampUtc\":\"2018-09-03T12:08:48.382931Z\"} \r\ncom.microsoft.azure.sdk.iot.service.exceptions.IotHubNotFoundException: IoT Hub not found! {\"errorCode\":404103,\"trackingId\":\"871115953cfb48dea4d28a980c170be7-G:19-TimeStamp:09/03/2018 12:08:48\",\"message\":\"NotFound\",\"timestampUtc\":\"2018-09-03T12:08:48.382931Z\"} \r\n\tat com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManager.httpResponseVerification(IotHubExceptionManager.java:71) ~[iot-service-client-1.14.0.jar!/:na]\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request(DeviceOperations.java:137) ~[iot-service-client-1.14.0.jar!/:na]\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invokeMethod(DeviceMethod.java:175) ~[iot-service-client-1.14.0.jar!/:na]\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceMethod.invoke(DeviceMethod.java:81) ~[iot-service-client-1.14.0.jar!/:na]\r\n```\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2018-08-24 21:25:34", "user": "timtay-microsoft", "body": "- **OS and version used:** Windows 10\r\n\r\n- **Java runtime used:** 8\r\n\r\n- **SDK version used:** latest\r\n\r\n\r\n# Description of the issue:\r\nWhen multiplexing, messages are only ever sent over the one of the N telemetry sending links, regardless of which device sent the message.\r\n\r\nThe issue here is that the SDK chooses which set of links to use based on the deviceId of the default config rather than based on the deviceId of the device that sent the message. Before sending the message, the connectionDeviceId should be set so that the AMQP layer can make this distinction properly.", "closed": "2018-08-30 23:30:12", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/318", "ttf": 6.000277777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[DeviceClient] Multiplexing sending messages over the wrong amqp links"}, {"created": "2018-08-24 17:39:27", "commits": {"a8418c61e5d9b1dce0a2ef136e3400e6bd1a4888": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "06b35e6d5c62c31df6351c3ae07eb445906b0e0e": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "e1b4d22e063dd69e3f47eede6d3c56ac72dfa41b": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "637ed35d666641b9fce301391063b79e183955e6": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.setTokenValidSecs(long)"], "closed": "2018-08-30 23:30:27", "filteredCommits": ["a8418c61e5d9b1dce0a2ef136e3400e6bd1a4888"], "commitsDetails": [{"nameRev": "a8418c61e5d9b1dce0a2ef136e3400e6bd1a4888 tags/2018-10-11~38", "commitMessage": "fix(iot-dev): Fix issue where setting sas token expiry time doesn't affect the first sas token\n\ngithub issue #317\n", "commitParents": ["cba33a3981c483074d93838c9591c877dfa9d3cc"], "spoonStatsSkippedReason": "", "commitHash": "a8418c61e5d9b1dce0a2ef136e3400e6bd1a4888", "authoredDateTime": "2018-08-24 12:03:04", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 25, "deletions": 0, "lines": 25, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java"}, {"insertions": 11, "deletions": 0, "lines": 11, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/auth/IotHubSasTokenSoftwareAuthenticationProvider.java"}, {"insertions": 8, "deletions": 7, "lines": 15, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java"}], "commitDateTime": "2018-08-24 12:46:52", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "InternalClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.setTokenValidSecs(long)"}], "spoonFilePath": "IotHubSasTokenSoftwareAuthenticationProvider.java"}, {"spoonMethods": [], "spoonFilePath": "DeviceClient.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "06b35e6d5c62c31df6351c3ae07eb445906b0e0e", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "e1b4d22e063dd69e3f47eede6d3c56ac72dfa41b", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "637ed35d666641b9fce301391063b79e183955e6", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/317", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 44.0, "deletions": 7.0, "lines": 51.0, "gitFilesChange": 3}, "title": "[DeviceClient] SetSASTokenExpiryTime doesn't work for first sas token", "statsSkippedReason": "", "user": "timtay-microsoft", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 1.0, "MOV": 0.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- **OS and version used:** any\r\n\r\n- **Java runtime used:** any\r\n\r\n- **SDK version used:** any\r\n\r\n# Description of the issue:\r\n\r\nSetting the sas token expiry time before calling open does not set the sas token expiry time of the first generated sas token. Even though the first sas token is not needed until open is called, it is generated during the DeviceClient constructor anyways. The sas token should not be generated until open() is called so that a user can alter the expiry time of that first sas token.\r\n\r\n# Code sample exhibiting the issue:\r\n```java\r\n    DeviceClient client = new DeviceClient(connString, protocol);\r\n    client.setOption(\"SetSASTokenExpiryTime\", 10L);\r\n    client.open(); //connection won't expire until the default 60 minutes have passed\r\n```\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2018-08-24 13:12:56", "commits": {"9911c9e9ce2ae9642c49f08a97675ea81e1328a8": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "a43a04582ba288a2c716402f347f0c483782b15d": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "cba33a3981c483074d93838c9591c877dfa9d3cc": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "683425b4a5fc22abb95e65a5b6ec9ede320b9ab2": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.DeviceTwin.Property.getLastUpdated()", "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwin.getProperty(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,java.lang.String,boolean)", "com.microsoft.azure.sdk.iot.device.DeviceTwin.Property", "com.microsoft.azure.sdk.iot.device.DeviceTwin.Property.getLastUpdatedVersion()"], "closed": "2018-08-30 23:30:38", "filteredCommits": ["cba33a3981c483074d93838c9591c877dfa9d3cc"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9911c9e9ce2ae9642c49f08a97675ea81e1328a8", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a43a04582ba288a2c716402f347f0c483782b15d", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "cba33a3981c483074d93838c9591c877dfa9d3cc tags/2018-10-11~39", "commitMessage": "fix(iot-dev): Fix issue where DeviceTwin doesn't expose lastUpdatedVersion or lastUpdated properties\n\ngithub issue #315\n", "commitParents": ["22ff7463779376bd59921f00ae6a695c1dab5f77"], "spoonStatsSkippedReason": "", "commitHash": "cba33a3981c483074d93838c9591c877dfa9d3cc", "authoredDateTime": "2018-08-24 10:56:16", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 17, "deletions": 1, "lines": 18, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceTwin/Property.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceTwin.java"}, {"insertions": 16, "deletions": 9, "lines": 25, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/PropertyTest.java"}, {"insertions": 12, "deletions": 12, "lines": 24, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceTwinTest.java"}], "commitDateTime": "2018-08-24 12:46:52", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.DeviceTwin.Property.getLastUpdated()"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.DeviceTwin.Property"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.DeviceTwin.Property.getLastUpdatedVersion()"}], "spoonFilePath": "Property.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwin.getProperty(com.microsoft.azure.sdk.iot.deps.twin.TwinCollection,java.lang.String,boolean)"}], "spoonFilePath": "DeviceTwin.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 4, "INS": 8, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).44"}, {"UPD": 0, "TOT": 12, "MOV": 4, "INS": 8, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithPropertiesWithMetadataCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).45"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithReportedPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).42"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithDesiredPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).40"}], "spoonFilePath": "DeviceTwinTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyTest.constructorWithMetadataSetsKeyAndValue()"}, {"UPD": 1, "TOT": 8, "MOV": 0, "INS": 7, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyTest.constructorWithMetadataSetsMetadata()"}], "spoonFilePath": "PropertyTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "683425b4a5fc22abb95e65a5b6ec9ede320b9ab2", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/315", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 20.0, "deletions": 2.0, "lines": 22.0, "gitFilesChange": 2}, "title": "DeviceTwin lastUpdatedVersion on Property object", "statsSkippedReason": "", "user": "FranAlterados", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 4, "TOT": 9.0, "MOV": 0.0, "INS": 8.0, "DEL": 0.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Property object doesn't have lastUpdatedVersion and I need it to know if an isolated property has changed.\r\n\r\nI found the trouble in this piece of code. Variables lastUpdate and lastUpdatedVersion are setted but never used.\r\n\r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/bab29cedfaad0cfd923d6ad81624ce6060584997/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceTwin.java#L196-L212\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2018-08-22 23:21:06", "user": "timtay-microsoft", "body": "Basic SKUs do not support twin or methods operations, but the amqp connections in this SDK will attempt to open twin and method links even when you don't send anything over them. As a result, users cannot use an amqp connection to a Basic SKU iot hub. This either needs proper documentation, or the amqp connection should not establish links that aren't needed.\r\n", "closed": "2019-04-24 18:14:42", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/314", "ttf": 244.00027777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "AMQP connections with Basic SKU"}, {"created": "2018-08-22 17:33:24", "user": "jasmineymlo", "body": "I can't use the new version 1.13.2 in android. (android API level : 19)\u3002Only dependency this SDK\u3002\r\nAt first,errMsg was\r\n> Annotation processors must be explicitly declared now.  The following dependencies on the compile classpath are found to contain annotation processor.  Please add them to the annotationProcessor configuration.\r\n    - log4j-core-2.11.0.jar (org.apache.logging.log4j:log4j-core:2.11.0)\r\n  Alternatively, set android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true to continue with previous behavior.  Note that this option is deprecated and will be removed in the future.\r\n  See https://developer.android.com/r/tools/annotation-processor-error-message.html for more details.\r\nafter I add this StatementjavaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true,errMsg became\r\nCaused by: com.android.tools.r8.utils.AbortException: Error: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\r\n\tat com.android.tools.r8.utils.Reporter.failIfPendingErrors(Reporter.java:116)\r\n\tat com.android.tools.r8.utils.Reporter.fatalError(Reporter.java:74)\r\n\tat com.android.tools.r8.utils.ExceptionUtils.withCompilationHandler(ExceptionUtils.java:59)\r\n\t... 10 more\r\nso I included the following within build.gradle\r\nandroid {\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\nstill fail:\r\nerror processing C:\\Users\\YMZ\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.11.0\\bede79a3f150711634a3047985517431bf6499f2\\log4j-api-2.11.0.jar\r\njava.lang.RuntimeException\r\n\tat org.objectweb.asm.ClassVisitor.visitModule(ClassVisitor.java:148)\r\n\tat org.objectweb.asm.ClassReader.readModule(ClassReader.java:731)\r\n\tat org.objectweb.asm.ClassReader.accept(ClassReader.java:632)\r\n\tat org.objectweb.asm.ClassReader.accept(ClassReader.java:500)\r\n\tat com.android.builder.desugaring.DesugaringClassAnalyzer.analyze(DesugaringClassAnalyzer.java:144)\r\n\tat com.android.builder.desugaring.DesugaringClassAnalyzer.analyzeJar(DesugaringClassAnalyzer.java:92)\r\n\tat com.android.builder.desugaring.DesugaringClassAnalyzer.analyze(DesugaringClassAnalyzer.java:63)\r\n\tat com.android.build.gradle.internal.transforms.DesugarIncrementalTransformHelper.lambda$getInitalGraphData$4(DesugarIncrementalTransformHelper.java:150)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1424)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\njava.lang.RuntimeException: java.lang.RuntimeException\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n\tat java.util.concurrent.ForkJoinTask.reportException(ForkJoinTask.java:677)\r\n\tat java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:720)\r\n\tat com.android.ide.common.internal.WaitableExecutor.waitForTasksWithQuickFail(WaitableExecutor.java:146)\r\n\tat com.android.build.gradle.internal.transforms.DesugarIncrementalTransformHelper.getInitalGraphData(DesugarIncrementalTransformHelper.java:162)\r\n\tat com.android.build.gradle.internal.transforms.DesugarIncrementalTransformHelper.makeDesugaringGraph(DesugarIncrementalTransformHelper.java:130)\r\n\tat com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.get(Suppliers.java:160)\r\n\tat com.android.build.gradle.internal.transforms.DesugarIncrementalTransformHelper.getDependenciesPaths(DesugarIncrementalTransformHelper.java:231)\r\n\tat com.android.build.gradle.internal.transforms.DexArchiveBuilderTransform.getD8DesugaringCacheInfo(DexArchiveBuilderTransform.java:461)\r\n\tat com.android.build.gradle.internal.transforms.DexArchiveBuilderTransform.transform(DexArchiveBuilderTransform.java:375)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:239)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:235)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:230)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:50)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:124)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:113)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:95)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:73)\r\n\tat org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101)\r\n\tat org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44)\r\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.run(DefaultTaskGraphExecuter.java:256)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:597)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.RuntimeException\r\n\tat org.objectweb.asm.ClassVisitor.visitModule(ClassVisitor.java:148)\r\n\tat org.objectweb.asm.ClassReader.readModule(ClassReader.java:731)\r\n\tat org.objectweb.asm.ClassReader.accept(ClassReader.java:632)\r\n\tat org.objectweb.asm.ClassReader.accept(ClassReader.java:500)\r\n\tat com.android.builder.desugaring.DesugaringClassAnalyzer.analyze(DesugaringClassAnalyzer.java:144)\r\n\tat com.android.builder.desugaring.DesugaringClassAnalyzer.analyzeJar(DesugaringClassAnalyzer.java:92)\r\n\tat com.android.builder.desugaring.DesugaringClassAnalyzer.analyze(DesugaringClassAnalyzer.java:63)\r\n\tat com.android.build.gradle.internal.transforms.DesugarIncrementalTransformHelper.lambda$getInitalGraphData$4(DesugarIncrementalTransformHelper.java:150)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1424)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\n\r\n:app:transformClassesWithDexBuilderForDebug FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':app:transformClassesWithDexBuilderForDebug'.\r\n> com.android.build.api.transform.TransformException: java.lang.RuntimeException: java.lang.RuntimeException\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\r\n\r\n* Get more help at https://help.gradle.org\r\n\r\nBUILD FAILED in 5s\r\nWhy log4j-api-2.11.0.jar process fail in android?\r\n", "closed": "2018-09-05 16:57:26", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/313", "ttf": 13.000277777777777, "commits": {}, "labels": ["Android", "bug"], "title": "Android build failed with device client v1.13.2"}, {"created": "2018-08-17 07:12:54", "user": "JMayrbaeurl", "body": "- **OS and version used:** Windows 10\r\n\r\n- **Java runtime used:** 1.8\r\n\r\n- **SDK version used:** Service 1.14.1\r\n\r\n\r\n# Description of the issue:\r\nJava 8 class CompleteableFuture used in code, but compiler settings set to Java 1.6\r\n\r\n# Code sample exhibiting the issue:\r\nIn main method of samples.com.microsoft.azure.sdk.iot.ServiceClientSample\r\n\r\n```\r\n        // Receive FileUploadNotification\r\n        CompletableFuture<FileUploadNotification> fileUploadNotificationCompletableFuture = fileUploadNotificationReceiver.receiveAsync(RECEIVER_TIMEOUT);\r\n        FileUploadNotification fileUploadNotification = fileUploadNotificationCompletableFuture.get();\r\n\r\n```\r\nand pom.xml\r\n\r\n```\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.3</version>\r\n                <configuration>\r\n                    <source>1.6</source>\r\n                    <target>1.6</target>\r\n                </configuration>\r\n            </plugin>\r\n\r\n```\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-08-30 23:31:13", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/309", "ttf": 13.000277777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "service-client-sample using wrong Java compiler version 1.6"}, {"created": "2018-08-15 15:48:44", "user": "kugelbit", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <VERSION>  Yocto Linux \r\n\r\n- **Java runtime used:** <VERSION> openjdk 1.8 \r\n\r\n- **SDK version used:** <VERSION> 1.13.2 \r\n\r\n- **transmission protocol** <VERSION>  AMQP \r\n\r\n\r\n# Description of the issue:\r\nIn my application i have to face long internet-connection drops. So i was testing around with your SDK. I wrote my own retry-policy, where i try to connect infinitely. I already set setOperationTimeout(Long.MAX_VALUE) to make the infinitely retry logic possible. In my test i connect to the azure cloud and send a telemetry message once in a second. After some time i cut the connection and let the retry policy kick in. After some more time (i run the app overnigth without any connection) i provide the connection again. If i do so i get the following exception:\r\n\r\n`Exception in thread \"main\" java.lang.NullPointerException\r\n\tat java.lang.StringBuilder.<init>(Unknown Source)\r\n\tat com.microsoft.azure.sdk.iot.device.net.IotHubUri.<init>(IotHubUri.java:76)\r\n\tat com.microsoft.azure.sdk.iot.device.net.IotHubUri.<init>(IotHubUri.java:112)\r\n\tat com.microsoft.azure.sdk.iot.device.net.IotHubUri.getResourceUri(IotHubUri.java:171)\r\n\tat com.microsoft.azure.sdk.iot.device.auth.IotHubSasToken.<init>(IotHubSasToken.java:80)\r\n\tat com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenSoftwareAuthenticationProvider.getRenewedSasToken(IotHubSasTokenSoftwareAuthenticationProvider.java:99)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS.createCBSAuthenticationMessage(AmqpsDeviceAuthenticationCBS.java:305)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS.authenticate(AmqpsDeviceAuthenticationCBS.java:234)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionDeviceOperation.authenticate(AmqpsSessionDeviceOperation.java:129)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager.authenticate(AmqpsSessionManager.java:149)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.authenticate(AmqpsIotHubConnection.java:275)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open(AmqpsIotHubConnection.java:203)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.openConnection(IotHubTransport.java:641)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(IotHubTransport.java:277)\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:160)\r\n\tat com.microsoft.azure.sdk.iot.device.InternalClient.open(InternalClient.java:130)\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceClient.open(DeviceClient.java:317)\r\n\tat de.XXXXX.mantiscloudinterface.MantisAzureClient.mainLoop(MantisAzureClient.java:242)\r\n\tat de.XXXXX.mantiscloudinterface.MantisAzureClient.main(MantisAzureClient.java:160)\r\n`\r\n\r\nThe last debug log entry i get from the sdk is:\r\n\r\n`06:50:13.954 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionDeviceOperation - Entered in method authenticate`\r\n\r\n\r\nSo in the authenticate() function  the amqpsDeviceAuthentication.authenticate() function is called.\r\nIm using the standard config with SAS-Tokens so i think the resulting function call is the authenticate() function from the AmqpsDeviceAuthenticationCBS Class. In this function the class internal function   createCBSAuthenticationMessage() is called. In this function im not sure what happens but i think it tries to get an new SAS token with the function deviceClientConfig.getSasTokenAuthentication().getRenewedSasToken().  I use the standard config so i think the resulationg SasTokenAuthentication()-Provider is the IotHubSasTokenSoftwareAuthenticationProvider. In the getRenewedSasToken() function  a new IotHubSasToken is created and the constructor of the IoTHubSasToken calls the  getResourceUri() function where the null pointer exception cames from.\r\n\r\nIs there something wrong with my configuration ? Or does the carbage collector delete the requiered Object ? Or is there something with my memory?", "closed": "2018-08-30 23:31:26", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/306", "ttf": 15.000277777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[Device Client] null pointer exception after long connection drop"}, {"created": "2018-08-14 16:02:12", "user": "rkanubaddhi", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 7 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** 1.8 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.13.2 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\n\r\nI'm seeing following error with every connection success event consistently. I do not have any messages coming from Cloud to Device\r\n\r\n11:39:22.249 [azure-iot-sdk-ReactorRunner] ERROR com.microsoft.azure.sdk.iot.device.transport.IotHubTransport - Exception encountered while receiving messages from service, method name is onMessageReceived\r\n11:39:22.249 [azure-iot-sdk-ReactorRunner] ERROR com.microsoft.azure.sdk.iot.device.transport.IotHubTransport - com.microsoft.azure.sdk.iot.device.exceptions.TransportException: Received response from service about a message that this client did not send\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-08-30 23:31:36", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/305", "ttf": 16.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Exception encountered while receiving messages from service, method name is onMessageReceived"}, {"created": "2018-08-13 12:44:17", "user": "pizerg", "body": "- **OS and version used:** Windows 10, Raspbian\r\n\r\n- **Java runtime used:** Java 1.8\r\n\r\n- **SDK version used:** Device Client 1.13.2\r\n\r\n# Description of the issue:\r\nTried with the following protocols (same or equivalent results with all of them): AMQPS_WS, MQTT_WS and MQTT\r\n\r\nAfter a successful connection it runs for a while (less than 2 hours) and without a visible reason the client disconnects (see exception below), status callback is called with DISCONNECTED_RETRYING but it never reconnects again (internet connection never drops during the tests).\r\n\r\nBesides that, after updating to 1.13.2 the log has been flooded with the following (even after the connection drops which shouldn't be saying \"Successfully send all queued messages\" as new messages are queued but they're never sent as the client has disconnected)\r\n\r\n```\r\n2018-08-13 12:19:13,226 IotHubSendTask [azure-iot-sdk-IotHubSendTask] TRACE: Now sending all queued messages to IoT Hub\r\n2018-08-13 12:19:13,226 IotHubSendTask [azure-iot-sdk-IotHubSendTask] TRACE: Now invoking all queued callbacks\r\n2018-08-13 12:19:13,226 IotHubSendTask [azure-iot-sdk-IotHubSendTask] TRACE: Successfully send all queued messages to IoT Hub\r\n```\r\n\r\n# Console log of the issue:\r\n```\r\ncom.microsoft.azure.sdk.iot.device.exceptions.ProtocolException: Mqtt connection lost\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.PahoExceptionTranslator.convertToMqttException(PahoExceptionTranslator.java:75)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(Mqtt.java:346)\r\n\tat org.eclipse.paho.client.mqttv3.internal.CommsCallback.connectionLost(CommsCallback.java:292)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms.shutdownConnection(ClientComms.java:423)\r\n\tat org.eclipse.paho.client.mqttv3.internal.CommsReceiver.run(CommsReceiver.java:181)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: Connection lost (32109) - java.io.EOFException\r\n\t... 8 more\r\nCaused by: java.io.EOFException\r\n\tat java.io.DataInputStream.readByte(DataInputStream.java:267)\r\n\tat org.eclipse.paho.client.mqttv3.internal.wire.MqttInputStream.readMqttWireMessage(MqttInputStream.java:92)\r\n\tat org.eclipse.paho.client.mqttv3.internal.CommsReceiver.run(CommsReceiver.java:133)\r\n\t... 7 more\r\n```", "closed": "2018-08-30 23:31:51", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/304", "ttf": 17.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[Device Client] Disconnects and never reconnects"}, {"created": "2018-08-13 09:35:48", "user": "adashen", "body": "- **OS and version used:**  Ubuntu 18.04\r\n\r\n- **Java runtime used:** open-jdk 8\r\n\r\n- **SDK version used:** 1.13.2\r\n\r\n\r\n# Description of the issue:\r\nCannot subscribe to the input channel.\r\n\r\n# Code sample exhibiting the issue:\r\n        ModuleClient client = ModuleClient.createFromEnvironment(protocol);\r\n        client.setMessageCallback(\"input1\", msgCallback, client);\r\n\r\nFound detail at: https://github.com/adashen/testjavasdk/blob/master/src/main/java/com/microsoft/App.java\r\n\r\n# Console log of the issue:\r\nFrom edgeHub log:\r\n2018-08-13 08:00:22.722 +00:00 [WRN] - No subscription for receiving messages found for deviceId/moduleId\r\n\r\n", "closed": "2018-08-15 21:36:40", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/303", "ttf": 2.000277777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[moduleClient] Cannot subscribe to input channel"}, {"created": "2018-08-02 13:04:49", "user": "gabiSRC", "body": "\r\n\r\n- **OS and version used:** macOs Sierra 10.12.6\r\n\r\n- **Java runtime used:** Java 1.8.0_10\r\n\r\n- **SDK version used:** iot-deps 0.5.3\r\n\r\n\r\n# Description of the issue:\r\nWhen trying to get Twin devices, I get the exception `java.lang.IllegalArgumentException: parameter contains non UTF-8 character`\r\n\r\n# Code sample exhibiting the issue:\r\n```\r\nQueryCollection twinQuery = deviceTwinClient.queryTwinCollection(\"SELECT * FROM devices\");\r\n\r\n        while (deviceTwinClient.hasNext(twinQuery)) {\r\n            try {\r\n                QueryCollectionResponse<DeviceTwinDevice> response = deviceTwinClient.next(twinQuery);\r\n                response.getCollection().forEach(twin -> devicesId.add(twin.getDeviceId()));\r\n            } catch (IllegalArgumentException e) {\r\n                LOGGER.warn(\"Error while getting twin device\", e);\r\n            }\r\n        }\r\n```\r\n\r\n\r\nI checked to method and I thing the comparison is wrong: `if(str.getBytes(\"UTF-8\").length != str.length()) ` whereas it should be `if(str.getBytes(\"UTF-8\").length != str..getBytes().length) `\r\n\r\nMaybe I am wrong so if so, please could you help me solve this?\r\n\r\nI already checked my devices data and there is no non-UTF-8 characters.\r\n\r\nThank you.", "closed": "2018-08-07 10:34:32", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/296", "ttf": 4.000277777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "validateStringUTF8 issue in "}, {"created": "2018-08-02 00:49:55", "user": "sjyang18", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->\r\nCentOS 7\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->\r\nopenjdk version \"1.8.0_181\"\r\nOpenJDK Runtime Environment (build 1.8.0_181-b13)\r\n\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->\r\n<dependency>\r\n            <groupId>com.microsoft.azure.sdk.iot</groupId>\r\n            <artifactId>iot-service-client</artifactId>\r\n            <version>1.14.0</version>\r\n            <type>jar</type>\r\n</dependency>\r\n\r\n# Description of the issue:\r\nThe logic implemented in Node and Java to send Cloud2Device messages shows the different performance behavior.  I used the same code from Azure tutorial for comparison analysis. \r\njava version: https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-java-java-c2d\r\nNode version: https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-node-node-c2d\r\n\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\npackage azurecat;\r\nimport com.microsoft.azure.sdk.iot.service.*;\r\nimport java.io.IOException;\r\nimport java.net.URISyntaxException;\r\nimport java.time.Duration;\r\nimport java.time.Instant;\r\nimport java.time.LocalDateTime;\r\n\r\npublic class App \r\n{\r\n    private static final String connectionString = \"XYZ\";\r\n    private static final String deviceId = \"XYZ-device-id\";\r\n    private static final IotHubServiceClientProtocol protocol = IotHubServiceClientProtocol.AMQPS_WS;\r\n\r\n    public static void main( String[] args ) throws IOException, URISyntaxException, Exception\r\n    {\r\n        ServiceClient serviceClient = ServiceClient.createFromConnectionString(connectionString, protocol);\r\n\r\n        if (serviceClient != null) {\r\n            serviceClient.open();\r\n            System.out.println(\"after serviceClient.open\");\r\n\r\n            FeedbackReceiver feedbackReceiver = serviceClient.getFeedbackReceiver();\r\n            if (feedbackReceiver != null) feedbackReceiver.open();\r\n            System.out.println(\"after feebackReceiver.open\");\r\n\r\n            Message messageToSend = new Message(\"Cloud to device message thru Java\");\r\n            messageToSend.setDeliveryAcknowledgement(DeliveryAcknowledgement.Full);\r\n            System.out.println(\"Start time to compare with feebacktime : \" + LocalDateTime.now());\r\n\r\n            Instant start = Instant.now();\r\n            System.out.println(\"Start to measuring the elpase time to send and feeback\");\r\n            serviceClient.send(deviceId, messageToSend);\r\n            long timeElasped = Duration.between(start, Instant.now()).toMillis();\r\n            System.out.println(\"Elaspse time upto send : \" + Math.floor(timeElasped/1000));\r\n\r\n            FeedbackBatch feedbackBatch = feedbackReceiver.receive(50000);\r\n            if (feedbackBatch != null) {\r\n                long timeElasped2 = Duration.between(start, Instant.now()).toMillis();\r\n                System.out.println(\"Elaspse time upto feeback: \" + Math.floor(timeElasped2/1000));\r\n                System.out.println(\"Message feedback received, feedback time: \"\r\n                    + feedbackBatch.getEnqueuedTimeUtc().toString());\r\n            }\r\n\r\n            if (feedbackReceiver != null) feedbackReceiver.close();\r\n            serviceClient.close();\r\n        }\r\n    }\r\n}\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\nafter serviceClient.open\r\nafter feebackReceiver.open\r\nStart time to compare with feebacktime : 2018-08-02T00:10:33.242\r\nStart to measuring the elpase time to send and feeback\r\nElaspse time upto send : 30.0\r\nElaspse time upto feeback: 61.0\r\nMessage feedback received, feedback time: 2018-08-02T00:10:34.002928300Z\r\n\r\nComparison logs with Node:\r\nhttps://github.com/Azure/azure-iot-sdk-java/files/2251613/IotSDK_Issue.pptx\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice] to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-08-30 23:32:39", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/295", "ttf": 28.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "ServiceClient.Send and ServiceClient.SendAsync in Java takes the significant longer time to return or call back to the calling routine, compared to the same logic implemented in Node."}, {"created": "2018-08-01 20:33:09", "user": "rkanubaddhi", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 7 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** 1.8 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.11.0 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nI'm seeing following exception once in a while, not sure why AmqpsDeviceAuthenticationCBSTokenRenewalTask is getting rejected. I don't see any issues even though I'm seeing this exception. I still have bidirectional communication. As it is a warning level logging, I want to make sure everything still works fine after this warning message.\r\n\r\nI would like to understand in what scenarios I might see the following exception?\r\n\r\nWARNING [10:08:28 02-Jul-18 CDT][com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBSTokenRenewalTask] java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@17d990 rejected from java.util.concurrent.ScheduledThreadPoolExecutor@d03b62[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 1]: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@17d990 rejected from java.util.concurrent.ScheduledThreadPoolExecutor@d03b62[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 1]\r\n\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-10-11 23:22:36", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/294", "ttf": 71.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "RejectedExecutionException for AmqpsDeviceAuthenticationCBSTokenRenewalTask"}, {"created": "2018-07-30 18:08:12", "user": "JMayrbaeurl", "body": "- **OS and version used:** Windows 10\r\n\r\n- **Java runtime used:** 1.8\r\n\r\n- **SDK version used:**  Service Client SDK 1.14.0\r\n\r\n# Description of the issue:\r\nRemoving a device from IoT Hub fails with IotHubPreconditionFailedException invalid ETag\r\n\r\n# Code sample exhibiting the issue\r\n```\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\tRegistryManager manager = null;\r\n\t\ttry {\r\n\t\t\tmanager = RegistryManager.createFromConnectionString(args[0]);\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tDevice edgeDevice;\r\n\t\ttry {\r\n\t\t\tedgeDevice = manager.getDevice(args[1]);\r\n\t\t} catch (JsonSyntaxException | IOException | IotHubException e1) {\r\n\t\t\te1.printStackTrace();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tmanager.removeDevice(edgeDevice);\r\n\t\t} catch (IllegalArgumentException | IOException | IotHubException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n```\r\n\r\n# Console log of the issue:\r\n```\r\ncom.microsoft.azure.sdk.iot.service.exceptions.IotHubPreconditionFailedException: Precondition failed! ErrorCode:PreconditionFailed;Precondition failed: Invalid ETag Tracking ID:bd6f32154462454986bdcb7f7083a49f-G:2-TimeStamp:07/30/2018 18:02:31\r\n\tat com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManager.httpResponseVerification(IotHubExceptionManager.java:76)\r\n\tat com.microsoft.azure.sdk.iot.service.RegistryManager.removeDeviceOperation(RegistryManager.java:557)\r\n\tat com.microsoft.azure.sdk.iot.service.RegistryManager.removeDevice(RegistryManager.java:516)\r\n\tat samples.com.microsoft.azure.jm.iot.RemoveEdgeDevice.main(RemoveEdgeDevice.java:41)\r\n\r\n```\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-08-11 01:00:50", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/292", "ttf": 11.000277777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "RegistryManager.removeDevice(Device) fails with IotHubPreconditionFailedException"}, {"created": "2018-07-30 05:37:42", "user": "JMayrbaeurl", "body": "- **OS and version used:** Windows 10\r\n\r\n- **Java runtime used:** 1.8\r\n\r\n- **SDK version used:** Service client 1.14.0 with iot-deps 0.6.1\r\n\r\n# Description of the issue:\r\nService Client SDK throws IllegalArgumentException on getting the twin for a module. Module twin introduced an extra level in it's Json format and the former check < 5 doesn't work any more. It has to be increased to 6.\r\n\r\n# Code sample exhibiting the issue:\r\n```\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\tDeviceTwin twin = null;\r\n\t\t\r\n\t\ttry {\r\n\t\t\ttwin = DeviceTwin.createFromConnectionString(args[0]);\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tDeviceTwinDevice device = new DeviceTwinDevice(args[1], args[2]);\r\n\t\ttry {\r\n\t\t\ttwin.getTwin(device);\r\n\t\t} catch (IllegalArgumentException | IotHubException | IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(device.getDesiredProperties());\r\n\t}\r\n```\r\n# Console log of the issue:\r\n```\r\njava.lang.IllegalArgumentException: Map exceed maximum of 5 levels\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:237)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:233)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:233)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:233)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMapInternal(ParserUtility.java:233)\r\n\tat com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.validateMap(ParserUtility.java:205)\r\n\tat com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.put(TwinCollection.java:231)\r\n\tat com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.put(TwinCollection.java:1)\r\n\tat com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(MapTypeAdapterFactory.java:188)\r\n\tat com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter.read(MapTypeAdapterFactory.java:145)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:129)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:220)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:129)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:220)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:887)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:852)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:801)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:773)\r\n\tat com.microsoft.azure.sdk.iot.deps.twin.TwinState.createFromTwinJson(TwinState.java:297)\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwinOperation(DeviceTwin.java:113)\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwin(DeviceTwin.java:88)\r\n\tat samples.com.microsoft.azure.jm.iot.GetDeploymentForSingDeviceApp.main(GetDeploymentForSingDeviceApp.java:35)\r\n\r\n```\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-08-11 01:00:29", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/290", "ttf": 11.000277777777777, "commits": {}, "labels": ["bug", "fix checked in"], "title": "IllegalArgumentException on DeviceTwin.getTwin for module twins"}, {"created": "2018-07-27 08:10:26", "user": "vikramtamboli", "body": "when we try to registed a device using DPS, it throws below exception.\r\n\r\nWaiting for Provisioning Service to register\r\njava.util.concurrent.ExecutionException: java.lang.IllegalArgumentException: JSON does not contain Operation Id or Status\r\n\tat java.util.concurrent.FutureTask.report(FutureTask.java:122)\r\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:206)\r\n\tat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.invokeRegister(ProvisioningTask.java:111)\r\n\tat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.call(ProvisioningTask.java:283)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.IllegalArgumentException: JSON does not contain Operation Id or Status\r\n\tat com.microsoft.azure.sdk.iot.provisioning.device.internal.parser.RegistrationOperationStatusParser.createFromJson(RegistrationOperationStatusParser.java:71)\r\n\tat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.authenticateWithX509(RegisterTask.java:136)\r\n\tat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.authenticateWithDPS(RegisterTask.java:283)\r\n\tat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.call(RegisterTask.java:308)\r\n\tat com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.call(RegisterTask.java:33)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\t... 4 more\r\nRegistration error, bailing out\r\n\r\n**Source Code**\r\n\r\nProvisioningDeviceClient provisioningDeviceClient = null;\r\n            ProvisioningStatus provisioningStatus = new ProvisioningStatus();\r\n\r\n            Collection<String> signerCertificates = new LinkedList<>();\r\n            SecurityProvider securityProviderX509 = new SecurityProviderX509Cert(leafPublicPem, leafPrivateKey, signerCertificates);\r\n\r\n            provisioningDeviceClient = ProvisioningDeviceClient.create(getGlobalEndpoint(), getScopeId(), getProtocol(), securityProviderX509);\r\n\r\n            provisioningDeviceClient.registerDevice(new ProvisioningDeviceClientRegistrationCallbackImpl(), provisioningStatus);\r\n\r\n            while (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() != ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ASSIGNED) {\r\n                if (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ERROR\r\n                        || provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_DISABLED\r\n                        || provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_FAILED) {\r\n                    provisioningStatus.exception.printStackTrace();\r\n                    System.out.println(\"Registration error, bailing out\");\r\n                    break;\r\n                }\r\n                System.out.println(\"Waiting for Provisioning Service to register\");\r\n                Thread.sleep(MAX_TIME_TO_WAIT_FOR_REGISTRATION);\r\n            } \r\n\r\ncan you please help us to understand what we are missing here?\r\n", "closed": "2018-09-06 20:48:36", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/289", "ttf": 41.000277777777775, "commits": {}, "labels": ["bug"], "title": "java.lang.IllegalArgumentException: JSON does not contain Operation Id or Status"}, {"created": "2018-07-25 15:11:31", "user": "JMayrbaeurl", "body": "- **OS and version used:** Windows 10 with Docker CE and Linux containers\r\n\r\n- **Java runtime used:** OpenJDK 8\r\n\r\n- **SDK version used:** 1.13.1\r\n\r\n# Description of the issue:\r\nSending a message with ModuleClient.sendEventAsync to a defined module output, enqueues the message on EdgeHub correctly and forwards it to IoT Hub. Unfortunately the messages never arrive at IoT Hub. All logs look good. Edge Hub shows sending to IoT Hub in log without errors and IotHubEventCallback gets called with status code OK_EMPTY. Checking IoT Hub with Device Explorer doesn't show any messages.\r\n\r\n# Code sample exhibiting the issue:\r\n```\r\npackage samples.com.microsoft.azure.jm.iot;\r\n\r\nimport java.io.IOException;\r\n\r\nimport org.apache.log4j.Logger;\r\n\r\nimport com.microsoft.azure.sdk.iot.device.IotHubClientProtocol;\r\nimport com.microsoft.azure.sdk.iot.device.IotHubEventCallback;\r\nimport com.microsoft.azure.sdk.iot.device.IotHubStatusCode;\r\nimport com.microsoft.azure.sdk.iot.device.Message;\r\nimport com.microsoft.azure.sdk.iot.device.ModuleClient;\r\nimport com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException;\r\n\r\npublic class SimpleJavaIoTEdgeApp {\r\n\r\n\tprivate static final Logger logger = Logger.getLogger(SimpleJavaIoTEdgeApp.class);\r\n\t\r\n\tpublic SimpleJavaIoTEdgeApp() {}\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tModuleClient client = null;\r\n\t\t\r\n\t\tlogger.info(\"Simple Java module app started\");\r\n\t\t\r\n\t\ttry {\r\n\t\t\tclient = ModuleClient.createFromEnvironment(IotHubClientProtocol.MQTT);\r\n\t\t\tclient.open();\r\n\t\t} catch (ModuleClientException e) {\r\n\t\t\tlogger.error(\"Exception creating ModuleClient from env: \", e);\r\n\t\t\treturn;\r\n\t\t} catch (IOException e) {\r\n\t\t\tlogger.error(\"Exception open ModuleClient: \", e);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\twhile(true) {\r\n\t\t\t\r\n\t\t\tlogger.info(\"Now sending message to Edge hub\");\r\n\t\t\t\r\n\t\t\tMessage msg = new Message(\"Sent from Java module\");\r\n\t\t\tEventCallback callback = new EventCallback();\r\n\t\t\tclient.sendEventAsync(msg, callback, msg, \"output1\");\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(1000);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tclient.close();\r\n\t\t} catch (IOException e) {\r\n\t\t\tlogger.error(\"Exception on closing ModuleClient\", e);\r\n\t\t}\r\n\t}\r\n\r\n    private static class EventCallback implements IotHubEventCallback\r\n    {\r\n        public void execute(IotHubStatusCode status, Object context)\r\n        {\r\n            Message msg = (Message) context;\r\n\r\n            logger.info(\"IoT Hub responded to message \"+ msg.getMessageId()  + \" with status \" + status.name());\r\n\r\n            if (status==IotHubStatusCode.MESSAGE_CANCELLED_ONCLOSE)\r\n            {\r\n                logger.error(\"IoT Hub responded with cancelled on close\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n# Console log of the issue:\r\n```\r\n2018-07-25 08:12:27 INFO  IotHubTransport:23 - The connection to the IoT Hub has been established, method name is onConnectionEstablished \r\n2018-07-25 08:12:27 INFO  SimpleJavaIoTEdgeApp:39 - Now sending message to Edge hub\r\n2018-07-25 08:12:27 INFO  DeviceIO:23 - Message with messageid 3cf27ad6-bd8f-415c-bc2d-6f92eed66088 along with callback and callbackcontext is added to the queue, method name is sendEventAsync \r\n2018-07-25 08:12:27 INFO  IotHubTransport:23 - Get the message from waiting message queue to be sent to IoT Hub, method name is sendMessages \r\n2018-07-25 08:12:27 INFO  IotHubTransport:23 - Invoking the callback function for sent message, IoT Hub responded to message with status OK_EMPTY, method name is invokeCallbacks \r\n2018-07-25 08:12:27 INFO  SimpleJavaIoTEdgeApp:65 - IoT Hub responded to message 3cf27ad6-bd8f-415c-bc2d-6f92eed66088 with status OK_EMPTY\r\n2018-07-25 08:12:28 INFO  SimpleJavaIoTEdgeApp:39 - Now sending message to Edge hub\r\n2018-07-25 08:12:28 INFO  DeviceIO:23 - Message with messageid 6f8c80e7-2a6c-420e-aea4-c5e804b79916 along with callback and callbackcontext is added to the queue, method name is sendEventAsync \r\n2018-07-25 08:12:28 INFO  IotHubTransport:23 - Get the message from waiting message queue to be sent to IoT Hub, method name is sendMessages \r\n2018-07-25 08:12:28 INFO  IotHubTransport:23 - Invoking the callback function for sent message, IoT Hub responded to message with status OK_EMPTY, method name is invokeCallbacks \r\n2018-07-25 08:12:28 INFO  SimpleJavaIoTEdgeApp:65 - IoT Hub responded to message 6f8c80e7-2a6c-420e-aea4-c5e804b79916 with status OK_EMPTY\r\n\r\n```\r\nAnd the Edge Hub log:\r\n\r\n```\r\n2018-07-25 08:12:28.280 +00:00 [DBG] [Microsoft.Azure.Devices.Edge.Hub.Mqtt.MessagingServiceClient] - Sending message for device Id jurgenmaEdgeP50/SampleModule\r\n2018-07-25 08:12:28.280 +00:00 [DBG] [Microsoft.Azure.Devices.Edge.Hub.Core.Routing.RoutingEdgeHub] - Received message from jurgenmaEdgeP50/SampleModule\r\n2018-07-25 08:12:29.280 +00:00 [DBG] [Microsoft.Azure.Devices.Edge.Hub.Mqtt.MessagingServiceClient] - Sending message for device Id jurgenmaEdgeP50/SampleModule\r\n2018-07-25 08:12:29.281 +00:00 [DBG] [Microsoft.Azure.Devices.Edge.Hub.Core.Routing.RoutingEdgeHub] - Received message from jurgenmaEdgeP50/SampleModule\r\n2018-07-25 08:12:30.283 +00:00 [DBG] [Microsoft.Azure.Devices.Edge.Hub.Mqtt.MessagingServiceClient] - Sending message for device Id jurgenmaEdgeP50/SampleModule\r\n2018-07-25 08:12:30.283 +00:00 [DBG] [Microsoft.Azure.Devices.Edge.Hub.Core.Routing.RoutingEdgeHub] - Received message from jurgenmaEdgeP50/SampleModule\r\n2018-07-25 08:12:31.292 +00:00 [DBG] [Microsoft.Azure.Devices.Edge.Hub.Mqtt.MessagingServiceClient] - Sending message for device Id jurgenmaEdgeP50/SampleModule\r\n2018-07-25 08:12:31.292 +00:00 [DBG] [Microsoft.Azure.Devices.Edge.Hub.Core.Routing.RoutingEdgeHub] - Received message from jurgenmaEdgeP50/SampleModule\r\n\r\n```\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-08-11 01:01:51", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/283", "ttf": 16.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "ModuleClient.sendEventAsync doesn't send to IoT Hub"}, {"created": "2018-07-18 10:33:23", "user": "JMayrbaeurl", "body": "- **OS and version used:** <VERSION> Windows 10 with Docker CE and Linux containers\r\n\r\n- **Java runtime used:** <VERSION> OpenJDK 8\r\n\r\n- **SDK version used:** <VERSION> 1.13.1\r\n\r\n\r\n# Description of the issue:\r\nOn calling ModuleClient.createFromEnvironment() with MQTT as protocol at startup, the method fails with an IllegalArgumentException. com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.sign() method is using HttpsClient and tries to open a connection to \"IOTEDGE_WORKLOADURI=http://10.0.75.1:15581/\", that will fail because the URL contains 'http' but not 'https'\r\n\r\n# Code sample exhibiting the issue:\r\n```\r\n\tprivate ModuleClient createModuleClientWithDefaultTransport() throws ModuleClientException {\r\n\t\t\r\n\t\treturn ModuleClient.createFromEnvironment(\r\n\t\t\t\tIotHubClientProtocol.valueOf(this.getTransportType())); \r\n\t}\r\n```\r\n\r\n# Console log of the issue:\r\n```\r\nCaused by: java.lang.IllegalArgumentException: Expected URL that uses protocol HTTPS but received one that uses protocol 'http'.\r\n\r\n        at com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.<init>(HttpsConnection.java:71) ~[iot-device-client-1.13.1.jar!/:na]\r\n        at com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.<init>(HttpsRequest.java:41) ~[iot-device-client-1.13.1.jar!/:na]\r\n        at com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.sign(HttpsHsmClient.java:71) ~[iot-device-client-1.13.1.jar!/:na]\r\n        at com.microsoft.azure.sdk.iot.device.hsm.HttpHsmSignatureProvider.sign(HttpHsmSignatureProvider.java:84) ~[iot-device-client-1.13.1.jar!/:na]\r\n        at com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.createNewSasToken(IotHubSasTokenHsmAuthenticationProvider.java:80) ~[iot-device-client-1.13.1.jar!/:na]\r\n        at com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.create(IotHubSasTokenHsmAuthenticationProvider.java:48) ~[iot-device-client-1.13.1.jar!/:na]\r\n        at com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(ModuleClient.java:234) ~[iot-device-client-1.13.1.jar!/:na]\r\n \r\n\r\n             \"Env\": [\r\n                \"IOTEDGE_WORKLOADURI=http://10.0.75.1:15581/\",\r\n                \"IOTEDGE_AUTHSCHEME=sasToken\",\r\n                \"IOTEDGE_APIVERSION=2018-06-28\",\r\n                \"EdgeDeviceHostName=vie-jurgenma\",\r\n                \"IOTEDGE_MODULEGENERATIONID=636666470330034949\",\r\n                \"IOTEDGE_IOTHUBHOSTNAME=jmedgetestiothub2.azure-devices.net\",\r\n                \"RuntimeLogLevel=Information\",\r\n                \"IOTEDGE_DEVICEID=jurgenmaEdgeP50\",\r\n                \"IOTEDGE_MODULEID=$edgeHub\",\r\n                \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\r\n                \"ASPNETCORE_URLS=http://+:80\",\r\n                \"DOTNET_RUNNING_IN_CONTAINER=true\",\r\n                \"DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true\",\r\n                \"DOTNET_VERSION=2.1.0\",\r\n                \"SSL_CERTIFICATE_PATH=/app/certs\",\r\n                \"SSL_CERTIFICATE_NAME=mqtt-server.pfx\"\r\n            ],\r\n```\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-08-11 01:02:14", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/281", "ttf": 23.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[ModuleClient] IllegalArgumentException on ModuleClient.createFromEnvironment"}, {"created": "2018-07-18 01:06:09", "user": "adashen", "body": "- **OS and version used:** Ubuntu 18.04\r\n\r\n- **Java runtime used:** open-jdk 8\r\n- **SDK version used:** 1.13.1\r\n\r\n\r\n# Description of the issue:\r\nmvn install module-invoke-method-sample\r\nhttps://github.com/Azure/azure-iot-sdk-java/tree/master/device/iot-device-samples/module-invoke-method-sample\r\n\r\nAnd containerize the result with Docker file:\r\n\r\nFROM openjdk:8-jdk-alpine\r\nCOPY target/module-invoke-method-sample-1.13.1-with-deps.jar /app.jar\r\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\r\n\r\nFollow instruction https://docs.microsoft.com/en-us/azure/iot-edge/quickstart-linux\r\nto deploy the java module to Ubuntu 18.04\r\n\r\nAnd got the StackOverFlow Error during \r\nModuleClient client = ModuleClient.createFromEnvironment(IotHubClientProtocol.MQTT)\r\n\r\n# Code sample exhibiting the issue:\r\nModuleClient client = ModuleClient.createFromEnvironment(IotHubClientProtocol.MQTT)\r\n\r\n# Console log of the issue:\r\nException in thread \"main\" java.lang.StackOverflowError\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:353)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:378)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:383)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:378)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:383)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:378)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:383)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:378)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:383)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:378)\r\n        at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:383)\r\n....\r\nat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:158)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)\r\n        at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)\r\n        at com.google.gson.Gson.getAdapter(Gson.java:423)\r\n\r\n\r\n", "closed": "2018-08-11 01:02:33", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/280", "ttf": 23.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[ModuleClient] GSON StackOverflowError when ModuleClient.createFromEnvironment(MQTT)"}, {"created": "2018-07-15 21:45:56", "user": "mkohns", "body": "Hi, I have strange behavior using the sdk with iot edge.\r\n\r\nIOT Edge:\r\nOS: ubuntu 18.04\r\niotedge version: 1.0.0 (52ef77db24126bf473265fc09c53d35290a2dd6b)\r\nmoby version:  1.0.0-1\r\ndocker version: 18.06.0-dev, build daf021fe\r\nInstallations Instructions: https://docs.microsoft.com/de-de/azure/iot-edge/quickstart-linux\r\n\r\nazure-iot-sdk-java:\r\n```    \r\n<dependency>\r\n      <groupId>com.microsoft.azure.sdk.iot</groupId>\r\n      <artifactId>iot-device-client</artifactId>\r\n      <version>1.13.1</version>\r\n</dependency>\r\n```\r\n\r\nIn my code I initialize my test iot edge module with\r\n\r\n`ModuleClient module = ModuleClient.createFromEnvironment(IotHubClientProtocol.MQTT);`\r\n\r\nand get the Exception\r\n\r\n```\r\ncom.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException: java.net.MalformedURLException: unknown protocol: unix\r\n        at com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(ModuleClient.java:251)\r\n        at com.microsoft.docs.iothub.samples.SimulatedDevice.main(SimulatedDevice.java:172)\r\nCaused by: java.net.MalformedURLException: unknown protocol: unix\r\n        at java.net.URL.<init>(URL.java:600)\r\n        at java.net.URL.<init>(URL.java:490)\r\n        at java.net.URL.<init>(URL.java:439)\r\n        at com.microsoft.azure.sdk.iot.device.hsm.HttpsHsmClient.sign(HttpsHsmClient.java:71)\r\n        at com.microsoft.azure.sdk.iot.device.hsm.HttpHsmSignatureProvider.sign(HttpHsmSignatureProvider.java:84)\r\n        at com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.createNewSasToken(IotHubSasTokenHsmAuthenticationProvider.java:80)\r\n        at com.microsoft.azure.sdk.iot.device.hsm.IotHubSasTokenHsmAuthenticationProvider.create(IotHubSasTokenHsmAuthenticationProvider.java:48)\r\n        at com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(ModuleClient.java:234)\r\n        ... 1 more\r\n```\r\n\r\ndocker inspect shows the injected environment variables from iotedge\r\n\r\n```\r\n           \"Env\": [\r\n                \"RuntimeLogLevel=Information\",\r\n                \"IOTEDGE_DEVICEID=edgeDevice1\",\r\n                \"IOTEDGE_GATEWAYHOSTNAME=ubuntu-bionic\",\r\n                \"IOTEDGE_APIVERSION=2018-06-28\",\r\n                \"IOTEDGE_MODULEID=simulated-device-3\",\r\n                \"IOTEDGE_IOTHUBHOSTNAME=iothubtest1mk.azure-devices.net\",\r\n                \"IOTEDGE_WORKLOADURI=unix:///var/run/iotedge/workload.sock\",\r\n                \"IOTEDGE_MODULEGENERATIONID=636672829613278709\",\r\n                \"IOTEDGE_AUTHSCHEME=sasToken\",\r\n                \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\r\n            ],\r\n```\r\nplease note the IOTEDGE_WORKLOADURI\r\n\r\nI actully assumed due to this documentation: https://docs.microsoft.com/de-de/azure/iot-edge/module-development that `EdgeHubConnectionString` is injected into docker environment. This seems not to be the case.\r\nTherefor \"else\" tree of com.microsoft.azure.sdk.iot.device.ModuleClient(line 170) is evaulated which produced the error if IOTEDGE_WORKLOADURI starts with `unix`\r\n\r\nMaybe I am confused of iotedge v1/v2 versions and mixing up sdk\u00b4s", "closed": "2020-02-28 19:57:45", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/274", "ttf": 592.0002777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "com.microsoft.azure.sdk.iot.device.exceptions.ModuleClientException: java.net.MalformedURLException: unknown protocol: unix"}, {"created": "2018-07-12 07:01:12", "user": "palg", "body": "- **OS and version used:** Red Hat Enterprise Linux 7 x86_64\r\n\r\n- **Java runtime used:** Java(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\n\r\n- **SDK version used:** com.microsoft.azure.sdk.iot.iot-device-client 1.11.0\r\n\r\n\r\n# Description of the issue:\r\nUsing iot-device-client SDK, when we create a `DeviceClient `using AMQPS over websockets, in order to update the reported properties of the device twin, if the connection fails the SDK creates several threads in order to reconnect, but these threads are never destroyed, creating a memory leak after several requests. All these threads are alive after closing the 'DeviceClient'.\r\n\r\nFor example, at `com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection`, doing some debug, we have seen that the method `scheduleReconnection `manages reconnections creating a `ScheduledExecutorService `as local variable, so the method `shutdown` of this executor is never invoked, leaving the reconnection thread as parked forever:\r\n\r\n```\r\nprivate void scheduleReconnection(Throwable throwable)\r\n{\r\n    if (!reconnectionScheduled)\r\n    {\r\n        reconnectionScheduled = true;\r\n        ScheduledExecutorService reconnectThread = Executors.newScheduledThreadPool(1);\r\n        reconnectThread.schedule(new ReconnectionTask(throwable, this.listener, this.connectionId), 0, TimeUnit.MILLISECONDS);\r\n    }\r\n} \r\n\r\n```\r\n# Code sample exhibiting the issue:\r\n```\r\nDeviceClient deviceClient = new DeviceClient(deviceConnectionString, IotHubClientProtocol.AMQPS_WS);\r\ndeviceClient.open();\r\ndeviceClient.startDeviceTwin(...);\r\n...\r\ndeviceClient.sendReportedProperties(message);\r\n...\r\ndeviceClient.closeNow();\r\n```\r\n\r\n# Console log of the issue:\r\nThis is a VisualVM snapshot showing the leaked thread created after several invocations:\r\n\r\n![imagen](https://user-images.githubusercontent.com/3263163/42616203-a7f77f64-85ad-11e8-864a-b509dcb5e88e.png)\r\n\r\nSome logs:\r\n```\r\n0    [main] INFO  com.microsoft.azure.sdk.iot.device.IotHubConnectionString  - IotHubConnectionString object is created successfully for iothub-xxxxx.azure-devices.net, method name is <init> \r\n591  [main] INFO  com.microsoft.azure.sdk.iot.device.DeviceClientConfig  - DeviceClientConfig object is created successfully with IotHubName=iothub-xxxxx.azure-devices.net, deviceID=xxxxx , method name is <init> \r\n1075 [main] INFO  com.microsoft.azure.sdk.iot.device.DeviceIO  - DeviceIO object is created successfully, method name is <init> \r\n1076 [main] INFO  com.microsoft.azure.sdk.iot.device.DeviceClient  - DeviceClient object is created successfully, method name is commonConstructorSetup \r\n52549 [main] INFO  com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - AmqpsIotHubConnection object is created successfully using port 443 in <init> method \r\n60363 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method open\r\n60363 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method openAsync\r\n60363 [azure-iot-sdk-AmqpsDeviceAuthenticationCBSTokenRenewalTask] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionDeviceOperation  - Entered in method renewToken\r\n60364 [azure-iot-sdk-AmqpsDeviceAuthenticationCBSTokenRenewalTask] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionDeviceOperation  - Exited from method renewToken\r\n60469 [main] INFO  com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Reactor is assigned to executor service, method name is openAsync \r\n60508 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onReactorInit\r\n60530 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onReactorInit\r\n60548 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onConnectionInit\r\n60548 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Entered in method onConnectionInit\r\n60557 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Entered in method openLinks\r\n60586 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Exited from method openLinks\r\n60586 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Exited from method onConnectionInit\r\n60586 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onConnectionInit\r\n61120 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onLinkInit\r\n61120 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Entered in method onLinkInit\r\n61120 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Entered in method initLink\r\n61122 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Exited from method initLink\r\n61122 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Exited from method onLinkInit\r\n61122 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onLinkInit\r\n61122 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onLinkInit\r\n61123 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Entered in method onLinkInit\r\n61123 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Entered in method initLink\r\n61125 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Exited from method initLink\r\n61125 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Exited from method onLinkInit\r\n61126 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onLinkInit\r\n61126 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onConnectionBound\r\n61151 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Entered in method onConnectionBound\r\n61856 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Exited from method onConnectionBound\r\n61856 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onConnectionBound\r\n61958 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onTransportError\r\n62015 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onTransportError\r\n62016 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onConnectionUnbound\r\n62016 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onConnectionUnbound\r\n62016 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onReactorFinal\r\n62016 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onReactorFinal\r\n62016 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method authenticate\r\n62017 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method authenticate\r\n62017 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method openLinks\r\n62017 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method openLinks\r\n78594 [main] INFO  com.microsoft.azure.sdk.iot.device.DeviceClient  - Connection closed with success, method name is closeNow \r\n\r\njava.io.IOException: Could not open the connection\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:164)\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceClient.open(DeviceClient.java:372)\r\n\tat com.ericsson.m2m.components.cloudcon.impl.azure.manager.AzureManager.send(AzureManager.java:55)\r\n\t... 25 more\r\nCaused by: com.microsoft.azure.sdk.iot.device.transport.amqps.exceptions.AmqpConnectionFramingErrorException\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsExceptionTranslator.convertToAmqpException(AmqpsExceptionTranslator.java:36)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(AmqpsIotHubConnection.java:738)\r\n\tat org.apache.qpid.proton.engine.BaseHandler.handle(BaseHandler.java:191)\r\n\tat org.apache.qpid.proton.engine.impl.EventImpl.dispatch(EventImpl.java:108)\r\n\tat org.apache.qpid.proton.reactor.impl.ReactorImpl.dispatch(ReactorImpl.java:324)\r\n\tat org.apache.qpid.proton.reactor.impl.ReactorImpl.process(ReactorImpl.java:291)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.IotHubReactor.run(IotHubReactor.java:28)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection$ReactorRunner.call(AmqpsIotHubConnection.java:799)\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n```", "closed": "2018-08-11 01:03:06", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/273", "ttf": 29.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Memory leak using DeviceClient with AMQPS (over WS) due to network issues"}, {"created": "2018-07-02 16:55:46", "user": "akulofficial", "body": "OS used: Mac OS X 10.13.4\r\nJava runtime: 1.8.0_172\r\nAzure IoT Device Client SDK version 1.12.0\r\n\r\nI have a custom module (essentially a web server running within a Docker container)  in an IoT Edge device that won't connect to the IoT Hub, regardless of which messaging protocol I use (particularly AMQPS). This problem has occurred pretty much every time I have attempted to use this service and I have yet to find any fixes for it. \r\n\r\nBelow is the code sample that throws the error (it's the open function that seems to do it):\r\nMOD_CLIENT = ModuleClient.createFromEnvironment();\r\n\r\n            MOD_CLIENT.open();\r\n\r\n            MOD_CLIENT.subscribeToMethod(new DirectMethodCallback(), null, new DirectMethodStatusCallback(), null);\r\n\r\n            MOD_CLIENT.setMessageCallback(new IotHubMessageCallback(), new HashMap<>());\r\n\r\n            MOD_CLIENT.sendEventAsync(new Message(\"Hello from LRAM.\"), new IotHubEventCallbackImpl(), null);\r\n\r\n\r\nAnd here is a console log (or at least the relevant part) of the issue:\r\n[Connection string object created successfully, redacted due to private info]\r\n[DeviceClientConfig successfully created, redacted due to private info]\r\n2018-07-02 15:01:33,999 [main] INFO  com.microsoft.azure.sdk.iot.device.DeviceIO  - DeviceIO object is created successfully, method name is <init> \r\n2018-07-02 15:01:34,009 [main] INFO  com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - AmqpsIotHubConnection object is created successfully using port 5671 in <init> method \r\n2018-07-02 15:01:34,029 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method open\r\n2018-07-02 15:01:34,029 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method openAsync\r\n2018-07-02 15:01:34,029 [azure-iot-sdk-AmqpsDeviceAuthenticationCBSTokenRenewalTask] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionDeviceOperation  - Entered in method renewToken\r\n2018-07-02 15:01:34,030 [azure-iot-sdk-AmqpsDeviceAuthenticationCBSTokenRenewalTask] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionDeviceOperation  - Exited from method renewToken\r\n2018-07-02 15:01:34,049 [main] INFO  com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Reactor is assigned to executor service, method name is openAsync \r\n2018-07-02 15:01:34,058 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onReactorInit\r\n2018-07-02 15:01:34,070 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onReactorInit\r\n2018-07-02 15:01:34,076 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onConnectionInit\r\n2018-07-02 15:01:34,076 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Entered in method onConnectionInit\r\n2018-07-02 15:01:34,079 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Entered in method openLinks\r\n2018-07-02 15:01:34,085 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Exited from method openLinks\r\n2018-07-02 15:01:34,086 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Exited from method onConnectionInit\r\n2018-07-02 15:01:34,086 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onConnectionInit\r\n2018-07-02 15:01:34,214 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onLinkInit\r\n2018-07-02 15:01:34,214 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Entered in method onLinkInit\r\n2018-07-02 15:01:34,214 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Entered in method initLink\r\n2018-07-02 15:01:34,215 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Exited from method initLink\r\n2018-07-02 15:01:34,216 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Exited from method onLinkInit\r\n2018-07-02 15:01:34,216 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onLinkInit\r\n2018-07-02 15:01:34,216 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onLinkInit\r\n2018-07-02 15:01:34,216 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Entered in method onLinkInit\r\n2018-07-02 15:01:34,216 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Entered in method initLink\r\n2018-07-02 15:01:34,217 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBS  - Exited from method initLink\r\n2018-07-02 15:01:34,217 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Exited from method onLinkInit\r\n2018-07-02 15:01:34,217 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onLinkInit\r\n2018-07-02 15:01:34,217 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onConnectionBound\r\n2018-07-02 15:01:34,217 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Entered in method onConnectionBound\r\n2018-07-02 15:01:34,433 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager  - Exited from method onConnectionBound\r\n2018-07-02 15:01:34,433 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onConnectionBound\r\n2018-07-02 15:01:34,477 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onTransportError\r\n2018-07-02 15:01:34,491 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onTransportError\r\n2018-07-02 15:01:34,492 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onConnectionUnbound\r\n2018-07-02 15:01:34,492 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onConnectionUnbound\r\n2018-07-02 15:01:34,492 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method onReactorFinal\r\n2018-07-02 15:01:34,492 [azure-iot-sdk-ReactorRunner] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method onReactorFinal\r\n2018-07-02 15:01:34,492 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method authenticate\r\n2018-07-02 15:01:34,493 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method authenticate\r\n2018-07-02 15:01:34,493 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Entered in method openLinks\r\n2018-07-02 15:01:34,493 [main] DEBUG com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection  - Exited from method openLinks\r\n2018-07-02 15:01:34,493 [main] WARN  com.lexmark.champs.collector.azure.AzureConnection  - An IOException occurred.\r\njava.io.IOException: Could not open the connection\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:164)\r\n\tat com.microsoft.azure.sdk.iot.device.InternalClient.open(InternalClient.java:130)\r\n\tat com.lexmark.champs.collector.azure.AzureConnection.initialize(AzureConnection.java:53)\r\n\tat com.lexmark.champs.collector.web.WebServer.init(WebServer.java:226)\r\n\tat com.lexmark.champs.collector.daemon.UnixDaemon.main(UnixDaemon.java:53)\r\nCaused by: com.microsoft.azure.sdk.iot.device.transport.amqps.exceptions.AmqpConnectionFramingErrorException\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsExceptionTranslator.convertToAmqpException(AmqpsExceptionTranslator.java:36)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(AmqpsIotHubConnection.java:745)\r\n\tat org.apache.qpid.proton.engine.BaseHandler.handle(BaseHandler.java:191)\r\n\tat org.apache.qpid.proton.engine.impl.EventImpl.dispatch(EventImpl.java:108)\r\n\tat org.apache.qpid.proton.reactor.impl.ReactorImpl.dispatch(ReactorImpl.java:324)\r\n\tat org.apache.qpid.proton.reactor.impl.ReactorImpl.process(ReactorImpl.java:291)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.IotHubReactor.run(IotHubReactor.java:28)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection$ReactorRunner.call(AmqpsIotHubConnection.java:808)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n2018-07-02 15:01:34,501 [main] DEBUG uk.org.lidalia.sysoutslf4j.context.SysOutOverSLF4JInitialiser  - Your logging framework class org.slf4j.impl.Log4jLoggerAdapter should not need access to the standard println methods on the console, so you should not need to register a logging system package.\r\n2018-07-02 15:01:34,512 [main] INFO  uk.org.lidalia.sysoutslf4j.context.SysOutOverSLF4J  - Replaced standard System.out and System.err PrintStreams with SLF4JPrintStreams\r\n2018-07-02 15:01:34,517 [main] INFO  uk.org.lidalia.sysoutslf4j.context.SysOutOverSLF4J  - Redirected System.out and System.err to SLF4J for this context\r\n\r\nAny information would be greatly appreciated, thanks.", "closed": "2018-08-21 04:11:45", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/269", "ttf": 49.000277777777775, "commits": {}, "labels": ["bug"], "title": "[ModuleClient] AMQPS connectivity issues"}, {"created": "2018-07-02 07:28:43", "user": "pizerg", "body": "- **OS and version used:** Raspbian Jessie and Windows 10\r\n\r\n- **Java runtime used:** JDK 1.8 (Oracle's)\r\n\r\n- **SDK version used:** 1.11.2\r\n\r\n\r\n# Description of the issue:\r\nAround 2 minuts after a connection drop, a socket timeout is wrongly identified as non-retryable BAD_CREDENTIALS exception and the reconnection process stops (we have it configured to keep trying to reconnect 'forever' as operation timeout is set to Long.MAX_VALUE) making us having to restart all affected devices. Haven't tried with the latest version of the sdk because the release notes do not state any change or bugfix, only new features.\r\n\r\nDespite this being a bug with exceptions classification, it'd be nice to have an option or configuration for the sdk to keep trying to reconnect indefinitely (recreating any needed objects/connections in case a critical exception happens)\r\n\r\n# Code sample exhibiting the issue:\r\n```\r\nDeviceClient client = new DeviceClient(CS_HERE, IotHubClientProtocol.MQTT);\r\nclient.setOperationTimeout(Long.MAX_VALUE);\r\nclient.registerConnectionStatusChangeCallback(CALLBACK_CODE_HERE)\r\nclient.open()\r\n....\r\nwait for a connection drop\r\n....\r\n```\r\n\r\n# Console log of the issue:\r\nThe first message on the connection callback status are correctly identified as NO_NETWORK:\r\n\r\n```\r\n2018-07-01 09:04:43,841 AzureIoTHub [MQTT Rec: SOME_ID] DEBUG: IoTHub connection state callback, status: DISCONNECTED_RETRYING reason: NO_NETWORK\r\n2018-07-01 09:04:43,841 AzureIoTHub [MQTT Rec: SOME_ID] DEBUG: IoTHub connection state callback error\r\ncom.microsoft.azure.sdk.iot.device.exceptions.ProtocolException: Mqtt connection lost\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.PahoExceptionTranslator.convertToMqttException(PahoExceptionTranslator.java:69)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(Mqtt.java:332)\r\n\tat org.eclipse.paho.client.mqttv3.internal.CommsCallback.connectionLost(CommsCallback.java:292)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms.shutdownConnection(ClientComms.java:423)\r\n\tat org.eclipse.paho.client.mqttv3.internal.CommsReceiver.run(CommsReceiver.java:181)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: Connection lost (32109) - java.io.EOFException\r\n\t... 8 more\r\nCaused by: java.io.EOFException\r\n\tat java.io.DataInputStream.readByte(DataInputStream.java:267)\r\n\tat org.eclipse.paho.client.mqttv3.internal.wire.MqttInputStream.readMqttWireMessage(MqttInputStream.java:92)\r\n\tat org.eclipse.paho.client.mqttv3.internal.CommsReceiver.run(CommsReceiver.java:133)\r\n\t... 7 more\r\n```\r\n\r\nTwo minutes later a timeout is detected as BAD_CREDENTIALS which the code treats as \"non retryable\" exception.\r\n\r\n```\r\n2018-07-01 09:06:04,726 AzureIoTHub [MQTT Rec: SOME_ID] DEBUG: IoTHub connection state callback, status: DISCONNECTED reason: BAD_CREDENTIAL\r\n2018-07-01 09:06:04,727 AzureIoTHub [MQTT Rec: SOME_ID] DEBUG: IoTHub connection state callback error\r\ncom.microsoft.azure.sdk.iot.device.exceptions.ProtocolException: Unable to establish MQTT connection\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.PahoExceptionTranslator.convertToMqttException(PahoExceptionTranslator.java:41)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect(Mqtt.java:105)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.start(MqttMessaging.java:40)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(MqttIotHubConnection.java:181)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.openConnection(IotHubTransport.java:642)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.singleReconnectAttempt(IotHubTransport.java:760)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.reconnect(IotHubTransport.java:714)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleDisconnection(IotHubTransport.java:672)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost(IotHubTransport.java:205)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(Mqtt.java:340)\r\n\tat org.eclipse.paho.client.mqttv3.internal.CommsCallback.connectionLost(CommsCallback.java:292)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms.shutdownConnection(ClientComms.java:423)\r\n\tat org.eclipse.paho.client.mqttv3.internal.CommsReceiver.run(CommsReceiver.java:181)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: MqttException (0) - java.net.SocketTimeoutException: connect timed out\r\n\tat org.eclipse.paho.client.mqttv3.internal.ExceptionHelper.createMqttException(ExceptionHelper.java:38)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG.run(ClientComms.java:715)\r\n\t... 7 more\r\nCaused by: java.net.SocketTimeoutException: connect timed out\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat org.eclipse.paho.client.mqttv3.internal.TCPNetworkModule.start(TCPNetworkModule.java:80)\r\n\tat org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule.start(SSLNetworkModule.java:103)\r\n\tat org.eclipse.paho.client.mqttv3.internal.ClientComms$ConnectBG.run(ClientComms.java:701)\r\n\t... 7 more\r\n```\r\n", "closed": "2018-08-11 01:03:20", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/268", "ttf": 39.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[Device Client] MQTT error reconnecting"}, {"created": "2018-06-28 12:20:47", "user": "hylinux", "body": "Here's My environment\r\n1. OS : Win10 and Ubuntu 16.04\r\n2. Java Version:  1.8.0_171\r\n3. SDK version: Tags: 2018-6-27\r\n\r\n\r\nDescription issue:\r\n  Can't use X509 certificates connect to IoT Hub by Java JDK\r\n\r\n\r\nreproduces steps:\r\n\r\n1. create root CA and Proof of Procession:\r\n\r\nI used this bash script: https://github.com/Azure/azure-iot-sdk-c/blob/master/tools/CACertificates/certGen.sh, also follow this document create root CA:\r\nhttps://github.com/Azure/azure-iot-sdk-c/blob/master/tools/CACertificates/CACertificateOverview.md\r\nand then upload the root ca file to IoT hub, and do the Proof of Procession. IoT Hub told me it is verify success.\r\n\r\n2. create a device on IoT Hub named \"mydevice\"  and choose \"X509 CA signed\", and enabled.\r\n\r\n3. create device signed certificate file by tools which from item 1 document( which is:  https://github.com/Azure/azure-iot-sdk-c/blob/master/tools/CACertificates/CACertificateOverview.md\r\n), please pay a attention, I already put the certificate chain by the action item #4, the leaf device.  which is: cat new-device.cert.pem azure-iot-test-only.intermediate.cert.pem azure-iot-test-only.root.ca.cert.pem > new-device-full-chain.cert.pem\r\nthen, I got a private key file in directory private and the public certificate file :  new-device-full-chain.cert.pem\r\n\r\n4. check out the examples in java jdk: azure-iot-sdk-java/device/iot-device-samples/send-event-x509\r\n5. modified the file : src/main/java/samples/com/microsoft/azure/sdk/iot/SendEventX509.java\r\nline:  123 , from \r\n[code]\r\n\r\nDeviceClient client = new DeviceClient(connectionString, protocol, publicKeyCertificateString, false, privateKeyString, false);\r\n[/code]\r\n \r\nto \r\n[code]\r\n\r\n\r\n DeviceClient client = new DeviceClient(connectionString, protocol,   \"/home/ghw/test/new-device-full-chain.cert.pem\",  true,  \"/home/ghw/test/new-device.key.pem\", true);\r\n[/code]\r\n\r\n\r\nI assume these two files were putted into directory \"/home/ghw/test\"\r\n\r\n\r\n6. run : mvn clean package\r\n\r\n7. run: \r\n\r\nmvn exec:java -Dexec.mainClass=\"samples.com.microsoft.azure.sdk.iot.SendEventX509\" -Dex\r\n.args=\"\\\"HostName=mytestiothub.azure-devices.cn;DeviceId=mydevice;x509=true\\\" 10 mqtt\"\r\n\r\n\r\nthen it will jump  to exceptions:\r\n\r\nStarting...\r\nBeginning setup.\r\nHostName=mytestiothub.azure-devices.cn;DeviceId=mydevice;x509=true\r\nSuccessfully read input parameters.\r\nUsing communication protocol MQTT.\r\nlog4j:WARN No appenders could be found for logger (com.microsoft.azure.sdk.iot.device.IotHubConnectionString).\r\nlog4j:WARN Please initialize the log4j system properly.\r\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\r\nSuccessfully created an IoT Hub client.\r\n[WARNING]\r\njava.io.IOException: Could not open the connection\r\n    at com.microsoft.azure.sdk.iot.device.DeviceIO.open (DeviceIO.java:164)\r\n    at com.microsoft.azure.sdk.iot.device.InternalClient.open (InternalClient.java:130)\r\n    at com.microsoft.azure.sdk.iot.device.DeviceClient.open (DeviceClient.java:307)\r\n    at samples.com.microsoft.azure.sdk.iot.SendEventX509.main (SendEventX509.java:134)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.mojo.exec.ExecJavaMojo$1.run (ExecJavaMojo.java:282)\r\n    at java.lang.Thread.run (Thread.java:748)\r\nCaused by: com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.MqttUnauthorizedException: Unable to establish MQTT connection\r\n    at com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.PahoExceptionTranslator.convertToMqttException (PahoExceptionTranslator.java:57)\r\n    at com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect (Mqtt.java:110)\r\n    at com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.start (MqttMessaging.java:49)\r\n    at com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open (MqttIotHubConnection.java:174)\r\n    at com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.openConnection (IotHubTransport.java:642)\r\n    at com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open (IotHubTransport.java:277)\r\n    at com.microsoft.azure.sdk.iot.device.DeviceIO.open (DeviceIO.java:160)\r\n    at com.microsoft.azure.sdk.iot.device.InternalClient.open (InternalClient.java:130)\r\n    at com.microsoft.azure.sdk.iot.device.DeviceClient.open (DeviceClient.java:307)\r\n    at samples.com.microsoft.azure.sdk.iot.SendEventX509.main (SendEventX509.java:134)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.mojo.exec.ExecJavaMojo$1.run (ExecJavaMojo.java:282)\r\n    at java.lang.Thread.run (Thread.java:748)\r\nCaused by: org.eclipse.paho.client.mqttv3.MqttSecurityException: Not authorized to connect\r\n    at org.eclipse.paho.client.mqttv3.internal.ExceptionHelper.createMqttException (ExceptionHelper.java:28)\r\n    at org.eclipse.paho.client.mqttv3.internal.ClientState.notifyReceivedAck (ClientState.java:988)\r\n    at org.eclipse.paho.client.mqttv3.internal.CommsReceiver.run (CommsReceiver.java:145)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:511)\r\n    at java.util.concurrent.FutureTask.run (FutureTask.java:266)\r\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201 (ScheduledThreadPoolExecutor.java:180)\r\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run (ScheduledThreadPoolExecutor.java:293)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1149)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:624)\r\n    at java.lang.Thread.run (Thread.java:748)\r\n\r\n\r\n\r\nI already searched this issue on GitHub, I found there is same issues, and people say it should be bash script issues.  but I did more research about this. \r\n\r\nI found these certificates file works fine for C SDK and C example here:\r\nhttps://github.com/Azure/azure-iot-sdk-c/tree/master/iothub_client/samples/iothub_ll_client_x509_sample\r\n\r\ntotally same tools, and totally same certificate files.   C works fine. \r\n\r\nand then, I dig more,  I found people talked about the difference in that tools between PowerShell script and Bash script:\r\n\r\nhttps://github.com/Azure/azure-iot-sdk-csharp/issues/232\r\nthe guy named \"anhashia\" comments.  told me the difference between PowerShell tool and Bash tools.\r\nwhich is Bash script have  structure is\r\nRoot CA -> Intermediate CA -> Device cert, but PowerShell have structure is:  Root CA -> Device cert\r\n\r\nbut any way the C work find with Bash script.   don't know why java sdk example can't.\r\n\r\nand more interesting thing is:\r\nI try to modified the bash script, make it have same structure like PowerShell, it is mean: \r\n  Root CA -> Device cert, I attached the bash here. please check it.\r\nand this time,  Java SDK works fine!\r\n\r\nso, which means,  Java SDK can't support the CA structure  like : Root CA -> Intermediate CA -> Device cert, but support  Root CA -> Device cert?\r\n\r\nwould you guys help about this issues?\r\n\r\nMany thanks\r\n\r\n\r\n\r\n", "closed": "2018-08-11 01:01:09", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/266", "ttf": 43.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Can't use X509 certificates connect to IoT Hub by Java JDK"}, {"created": "2018-06-04 04:43:47", "commits": {"f5c44420d3e5915b98b2cc309e8ece571d1a89b8": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "1d502963d58cfb2790d949b93f008ce201babee3": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["tests.integration.com.microsoft.azure.sdk.iot.serviceclient.ExportImportIT.export_import_e2e()", "tests.integration.com.microsoft.azure.sdk.iot.serviceclient.ExportImportIT.setUp()", "com.microsoft.azure.sdk.iot.service.JobProperties.toJobPropertiesParser()", "tests.integration.com.microsoft.azure.sdk.iot.serviceclient.ExportImportIT.tearDown()", "tests.integration.com.microsoft.azure.sdk.iot.serviceclient.ExportImportIT"], "closed": "2018-06-18 16:58:19", "filteredCommits": ["f5c44420d3e5915b98b2cc309e8ece571d1a89b8"], "commitsDetails": [{"nameRev": "f5c44420d3e5915b98b2cc309e8ece571d1a89b8 tags/2018-6-15~6", "commitMessage": "fix(iot-service): Fix bug where export import jobs don't work due to capitalization of job type\n\ngithub bug #258\n", "commitParents": ["6e645b7af8d7b1ec7a74895c8c44d55291ddfa44"], "spoonStatsSkippedReason": "", "commitHash": "f5c44420d3e5915b98b2cc309e8ece571d1a89b8", "authoredDateTime": "2018-06-04 11:20:10", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 4, "lines": 4, "filePath": "iot-e2e-tests/jvm/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/serviceclient/ExportImportIT.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/JobProperties.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/JobPropertiesTest.java"}], "commitDateTime": "2018-06-05 14:14:51", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.JobPropertiesTest.toJobPropertiesParser()"}], "spoonFilePath": "JobPropertiesTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.serviceclient.ExportImportIT.export_import_e2e()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.serviceclient.ExportImportIT.setUp()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.serviceclient.ExportImportIT.tearDown()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.serviceclient.ExportImportIT"}], "spoonFilePath": "ExportImportIT.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.JobProperties.toJobPropertiesParser()"}], "spoonFilePath": "JobProperties.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "1d502963d58cfb2790d949b93f008ce201babee3", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/258", "ttf": 14.000277777777777, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "title": "Cannot import the device in bulk", "statsSkippedReason": "", "user": "chenzheng1988", "changesInPackagesGIT": ["service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 5, "TOT": 7.0, "MOV": 1.0, "INS": 1.0, "DEL": 4.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": " SDK Version:iot-service-client 1.13.3\r\nThe code for batch importing devices is as follows:\r\n    \r\n        System.out.println(\"Starting import sample...\");\r\n        // Creating Azure storage container and getting its URI\r\n        CloudStorageAccount storageAccount = CloudStorageAccount.parse(SampleUtils.storageConnectionString);\r\n        CloudBlobClient blobClient = storageAccount.createCloudBlobClient();\r\n        CloudBlobContainer container = blobClient.getContainerReference(importContainerName);\r\n        container.createIfNotExists();\r\n        String containerSasUri = SampleUtils.getContainerSasUri(container);\r\n\r\n       \r\n        // Creating the list of devices to be submitted for import\r\n        StringBuilder devicesToImport = new StringBuilder();\r\n        for (int i = 0; i < 5; i++)\r\n        {\r\n            String deviceId = UUID.randomUUID().toString();\r\n            Device device = Device.createFromId(deviceId, null, null);\r\n            AuthenticationMechanism authentication = new AuthenticationMechanism(device.getSymmetricKey());\r\n\r\n            ExportImportDevice deviceToAdd = new ExportImportDevice();\r\n            deviceToAdd.setId(deviceId);\r\n            deviceToAdd.setAuthentication(authentication);\r\n            deviceToAdd.setStatus(DeviceStatus.Enabled);\r\n            deviceToAdd.setImportMode(ImportMode.CreateOrUpdate);\r\n\r\n            devicesToImport.append(gson.toJson(deviceToAdd));\r\n\r\n            if (i < numberOfDevice - 1)\r\n            {\r\n                devicesToImport.append(\"\\r\\n\");\r\n            }\r\n        }\r\n\r\n        byte[] blobToImport = devicesToImport.toString().getBytes(StandardCharsets.UTF_8);\r\n\r\n        // Creating the Azure storage blob and uploading the serialized string of devices\r\n        System.out.println(\"Uploading \" + blobToImport.length + \" bytes into Azure storage.\");\r\n        InputStream stream = new ByteArrayInputStream(blobToImport);\r\n        CloudBlockBlob importBlob = container.getBlockBlobReference(importBlobName);\r\n        importBlob.deleteIfExists();\r\n        importBlob.upload(stream, blobToImport.length);\r\n\r\n        // Starting the import job\r\n        RegistryManager registryManager = RegistryManager.createFromConnectionString(SampleUtils.iotHubConnectionString);\r\n        JobProperties importJob = registryManager.importDevices(containerSasUri, containerSasUri);\r\n\r\n        // Waiting for the import job to complete\r\n        while(true)\r\n        {\r\n            importJob = registryManager.getJob(importJob.getJobId());\r\n            if (importJob.getStatus() == JobProperties.JobStatus.COMPLETED\r\n                    || importJob.getStatus() == JobProperties.JobStatus.FAILED)\r\n            {\r\n                break;\r\n            }\r\n            Thread.sleep(500);\r\n        }\r\n\r\n        // Checking the result of the import job\r\n        if (importJob.getStatus() == JobProperties.JobStatus.COMPLETED)\r\n        {\r\n            System.out.println(\"Import job completed. The new devices are now added to the hub.\");\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"Import job failed. Failure reason: \" + importJob.getFailureReason());\r\n        }\r\n\r\n        //Cleaning up the blob\r\n        for(ListBlobItem blobItem : container.listBlobs())\r\n        {\r\n            if (blobItem instanceof CloudBlob)\r\n            {\r\n                CloudBlob blob = (CloudBlockBlob) blobItem;\r\n                blob.deleteIfExists();\r\n            }\r\n        }\r\n\r\n        registryManager.close();\r\nresult of enforcement:\r\n     \r\n     Starting import sample...\r\n     Uploading 1260 bytes into Azure storage.\r\n     Import job failed. Failure reason: Internal server error.\r\n     End Batch Add Properties.....", "labels": ["bug", "fix checked in"]}, {"created": "2018-05-30 07:46:55", "user": "msdevanms", "body": "- **OS and version used:** <VERSION> Ubuntu 15.04\r\n\r\n- **Java runtime used:** <VERSION>   JDK 1.7 \r\n\r\n- **SDK version used:** <VERSION> provisioning-device-client - 1.3.0 and iot-device-client 1.9.0\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nHi Team, currently we are using Java SDK for Device provisioning and Device twin update. When we are provisioning a device with X.509 certificate we are facing some strange issue. \r\n\r\nWhen we add X.509 certificate in DPS it is showing a thumbprint as,\r\n\r\nD2F9770B46AD9377C2E6A1D0217AD780388516D8\r\n\r\nFrom https://github.com/Azure/azure-iot-sdk-java/raw/master/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/auth/X509Thumbprint.java we understand that the **maximum length is 40** and the regex is     \r\n\r\n`private static final String THUMBPRINT_REGEX = \"^([A-Fa-f0-9]{2}){20}$\";\r\n`\r\n\r\nBut we checked the thumbprint stored in device twin is as below,\r\n\r\n`{\r\n  \"deviceId\": \"test_dps\",\r\n  \"etag\": \"AAAAAAAAAAE=\",\r\n  \"deviceEtag\": \"NTEwOTM0NjY0\",\r\n  \"status\": \"enabled\",\r\n  \"statusUpdateTime\": \"0001-01-01T00:00:00\",\r\n  \"connectionState\": \"Disconnected\",\r\n  \"lastActivityTime\": \"2018-05-30T07:13:01.2055269\",\r\n  \"cloudToDeviceMessageCount\": 0,\r\n  \"authenticationType\": \"selfSigned\",\r\n  \"x509Thumbprint\": {\r\n    \"primaryThumbprint\": \"E6463282482D4741DE04DC08FE2722ECB39A723F804FAB11B528E65860E562E0\",\r\n    \"secondaryThumbprint\": \"E6463282482D4741DE04DC08FE2722ECB39A723F804FAB11B528E65860E562E0\"\r\n  },\r\n  \"version\": 6,\r\n  \"properties\": {\r\n    \"desired\": {\r\n      \"$metadata\": {\r\n        \"$lastUpdated\": \"2018-05-30T06:48:36.0918929Z\",\r\n        \"$lastUpdatedVersion\": 1\r\n      },\r\n      \"$version\": 1\r\n    },\r\n    \"reported\": {\r\n      \"mac_id\": \"00:00:00:00:00:00\",\r\n      \"$metadata\": {\r\n        \"$lastUpdated\": \"2018-05-30T07:12:58.0772104Z\",\r\n        \"mac_id\": {\r\n          \"$lastUpdated\": \"2018-05-30T07:12:58.0772104Z\"\r\n        }\r\n      },\r\n      \"$version\": 5\r\n    }\r\n  }\r\n}`\r\n\r\nPrimary thumbprint is **E6463282482D4741DE04DC08FE2722ECB39A723F804FAB11B528E65860E562E0**  which is not matching with the regex and when we are trying to get this device using **RegistryManager** it is showing following exception.\r\n\r\n`\r\nException in thread main java.lang.IllegalArgumentException: Invalid format for primary/secondary thumbprint\r\nat com.microsoft.azure.sdk.iot.service.auth.X509Thumbprint.validateThumbprint(X509Thumbprint.java:129)\r\nat com.microsoft.azure.sdk.iot.service.auth.X509Thumbprint.setPrimaryThumbprint(X509Thumbprint.java:76)\r\nat com.microsoft.azure.sdk.iot.service.auth.AuthenticationMechanism.setPrimaryThumbprint(AuthenticationMechanism.java:151)\r\nat com.microsoft.azure.sdk.iot.service.Device.setThumbprint(Device.java:263)\r\nat com.microsoft.azure.sdk.iot.service.Device.<init>(Device.java:592)\r\nat com.microsoft.azure.sdk.iot.service.RegistryManager.getDevice(RegistryManager.java:198)\r\nat `\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\tRegistryManager registryManager = RegistryManager.createFromConnectionString(iothubConnectionString);\r\n\t\tDevice device = registryManager.getDevice(deviceId);\r\n\t\tif (null != device) {\r\n\t\t\tdevice.setStatus(DeviceStatus.Disabled);\r\n\t\t\tregistryManager.updateDevice(device);\r\n\t\t}\r\n\tregistryManager.close();\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-06-18 16:58:26", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/253", "ttf": 19.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Invalid format for primary/secondary thumbprint - When trying to update device status of devices enrolled using DPS with X509 Self Signed certificates"}, {"created": "2018-05-29 10:13:00", "commits": {"b4e3bb56599c0bae551fc61382b3bc403440cd49": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "9307c709aa922f8cb80004d6d7b60a2b20aede04": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["tests.integration.com.microsoft.azure.sdk.iot.iothubservices.DeviceTwinIT.testUpdateDesiredUpdates()", "tests.integration.com.microsoft.azure.sdk.iot.iothubservices.DeviceTwinIT.testUpdateTagUpdates()", "com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement()"], "closed": "2018-06-18 16:58:32", "filteredCommits": ["9307c709aa922f8cb80004d6d7b60a2b20aede04"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "b4e3bb56599c0bae551fc61382b3bc403440cd49", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "9307c709aa922f8cb80004d6d7b60a2b20aede04 tags/2018-6-15~9", "commitMessage": "fix(iot-deps): Fix bug where setting tag to null did not delete it\n\nGithub bug #251\n", "commitParents": ["9e40c6ac1e63e857d0037b69f4845e03be18c724"], "spoonStatsSkippedReason": "", "commitHash": "9307c709aa922f8cb80004d6d7b60a2b20aede04", "authoredDateTime": "2018-05-30 10:33:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 46, "deletions": 0, "lines": 46, "filePath": "iot-e2e-tests/jvm/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothubservices/DeviceTwinIT.java"}, {"insertions": 7, "deletions": 18, "lines": 25, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/twin/TwinStateTest.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/TwinState.java"}], "commitDateTime": "2018-05-31 11:28:42", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest.createFromPropertiesJsonSucceed()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest.toJsonElementReturnsTagsAndProperties()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest.toJsonElementReturnsEmptyJson()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest.toJsonElementReturnsTags()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest.createFromTwinJsonWithTagsAndProperties()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest.toJsonElementReturnsProperties()"}], "spoonFilePath": "TwinStateTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.iothubservices.DeviceTwinIT.testUpdateDesiredUpdates()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.iothubservices.DeviceTwinIT.testUpdateTagUpdates()"}], "spoonFilePath": "DeviceTwinIT.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement()"}], "spoonFilePath": "TwinState.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/251", "ttf": 20.00027777777778, "gitStatsSummary": {"insertions": 2.0, "deletions": 1.0, "lines": 3.0, "gitFilesChange": 1}, "title": "cannot remove tags", "statsSkippedReason": "", "user": "janbols", "changesInPackagesGIT": ["deps/src/main/java/com/microsoft/azure/sdk/iot/deps"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 3, "TOT": 7.0, "MOV": 1.0, "INS": 5.0, "DEL": 0.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Ubuntu 18.04\r\n\r\n- **Java runtime used:** JDK8\r\n\r\n- **SDK version used:** iot-service-client:1.13.3\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nCurrently the only way of updating tags on a device is by calling `com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin#updateTwin` because `replaceTags` is not implemented yet.\r\n\r\nWhen I call `updateTwin` with an updated `tagsMap` on the device, the updates are only persisted when adding or modifying existing tags. However, when removing a key in the map of tags or a key in one of the submaps in the tags, the updates on those keys are ignored.\r\n\r\nFor example:\r\nexisting tags map:\r\n```json\r\n{\r\n    \"tag1\": \"valueOfTag1,\r\n    \"tag2\": {\r\n        \"tag2-1\": \"valueOfTag2-1\",\r\n        \"tag2-2\": \"valueOfTag2-2\"\r\n    }\r\n  }\r\n```\r\nUpdating the above map of tags to the following ...\r\n```json\r\n{\r\n    \"tag1\": \"valueOfTag1,\r\n    \"tag2\": {\r\n        \"tag2-1\": \"valueOfTag2-1\"\r\n    }\r\n  }\r\n```\r\nwill not remove `tag2-2`.\r\n\r\nOne workaround is to set the json object to some simple field and then set it back to a new json object like below: First update to ...\r\n```json\r\n{\r\n    \"tag1\": \"valueOfTag1,\r\n    \"tag2\": false\r\n  }\r\n```\r\nand then update to ...\r\n```json\r\n{\r\n    \"tag1\": \"valueOfTag1,\r\n    \"tag2\": {\r\n        \"tag2-1\": \"valueOfTag2-1\"\r\n    }\r\n  }\r\n```\r\n\r\n\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2018-05-24 09:30:04", "user": "Mauli317", "body": "- **OS and version used:** Android 6.0.1\r\n- **Java runtime used:** 1.7\r\n\r\n- **SDK version used:** iot-device-client:1.10.0\r\n\r\n\r\n# Description of the issue:\r\nWhen I call open() method, it first gives IotHubConnectionStatus as CONNECTED in IotHubConnectionStatusChangeCallback and immediately after that it throws error \"java.io.IOException: Could not open the connection\" and does not notify of IotHubConnectionStatus DISCONNECTED in IotHubConnectionStatusChangeCallback. And when I try to send any message, it throws exception \"java.lang.IllegalStateException: Cannot send event from an IoT Hub client that is closed.\".\r\n\r\nI have not observed this frequently but poor internet connection can be possible reason for this kind of behaviour. But in my code I have made sure that I call any method after checking internet availability.\r\n\r\nSo, issue here is it does not notify of IotHubConnectionStatus in IotHubConnectionStatusChangeCallback if anything goes wrong.\r\n\r\n# Code sample exhibiting the issue:\r\n```\r\nprivate void start() {\r\n        try {\r\n            sClient = new DeviceClient(sConnString, IotHubClientProtocol.MQTT);\r\n            sClient.registerConnectionStatusChangeCallback(new IotConnStatusCallback(), this);\r\n            sClient.open();\r\n        } catch (URISyntaxException | IOException e) {\r\n            Log.e(TAG, \"Exception in onStart()\", e);\r\n            mError = ERROR_STATE.ERROR;\r\n        }\r\n}\r\n```\r\n\r\n# Console log of the issue:\r\n```\r\n05-24 06:25:34.767 12805-13007/com.myapplication D/IotHubSvc: IotHubConnectionStatusChangeCallback status : CONNECTED. And reason : CONNECTION_OK\r\n05-24 06:25:35.806 12805-13007/com.myapplication E/IotHubSvc: Exception in start()\r\n    java.io.IOException: Could not open the connection\r\n        at com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:164)\r\n        at com.microsoft.azure.sdk.iot.device.DeviceClient.open(DeviceClient.java:372)\r\n        at com.myapplication.Services.IoTHubService.start(IoTHubService.java:256)\r\n        at com.myapplication.Services.IoTHubService.onHandleIntent(IoTHubService.java:103)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:148)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n     Caused by: com.microsoft.azure.sdk.iot.device.exceptions.ProtocolException: Unable to subscribe to topic :\r\n        at com.microsoft.azure.sdk.iot.device.transport.mqtt.exceptions.PahoExceptionTranslator.convertToMqttException(PahoExceptionTranslator.java:69)\r\n        at com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe(Mqtt.java:267)\r\n        at com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.start(MqttMessaging.java:41)\r\n        at com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(MqttIotHubConnection.java:177)\r\n        at com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.openConnection(IotHubTransport.java:630)\r\n        at com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(IotHubTransport.java:264)\r\n        at com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:160)\r\n        at com.microsoft.azure.sdk.iot.device.DeviceClient.open(DeviceClient.java:372) \r\n        at com.myapplication.Services.IoTHubService.start(IoTHubService.java:256) \r\n        at com.myapplication.Services.IoTHubService.onHandleIntent(IoTHubService.java:103) \r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66) \r\n        at android.os.Handler.dispatchMessage(Handler.java:102) \r\n        at android.os.Looper.loop(Looper.java:148) \r\n        at android.os.HandlerThread.run(HandlerThread.java:61) \r\n     Caused by: Timed out waiting for a response from the server (32000)\r\n        at org.eclipse.paho.client.mqttv3.internal.Token.waitForCompletion(Token.java:112)\r\n        at org.eclipse.paho.client.mqttv3.MqttToken.waitForCompletion(MqttToken.java:67)\r\n        at com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.subscribe(Mqtt.java:262)\r\n        at com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.start(MqttMessaging.java:41) \r\n        at com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(MqttIotHubConnection.java:177) \r\n        at com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.openConnection(IotHubTransport.java:630) \r\n        at com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open(IotHubTransport.java:264) \r\n        at com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:160) \r\n        at com.microsoft.azure.sdk.iot.device.DeviceClient.open(DeviceClient.java:372) \r\n        at com.myapplication.Services.IoTHubService.start(IoTHubService.java:256) \r\n        at com.myapplication.Services.IoTHubService.onHandleIntent(IoTHubService.java:103) \r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66) \r\n        at android.os.Handler.dispatchMessage(Handler.java:102) \r\n        at android.os.Looper.loop(Looper.java:148) \r\n        at android.os.HandlerThread.run(HandlerThread.java:61) \r\n05-24 06:25:35.807 12805-13007/com.myapplication D/IotHubSvc: IotHub Connection Status is CONNECTED\r\n    IoTHubService did not start due to some unexpected error\r\n05-24 06:25:35.808 12805-13007/com.myapplication E/IotHubSvc: OnHandleIntent action = com.myapplication.action.ACTION_SEND\r\n05-24 06:25:35.808 12805-13007/com.myapplication D/IotHubSvc: Current IoTHub connection status is CONNECTED, message can be sent\r\n05-24 06:25:35.812 12805-13007/com.myapplication V/IotHubSvc: sending 295 bytes, callback key=1\r\n05-24 06:25:35.813 12805-13007/com.myapplication E/IotHubSvc: Exception uploading to IoTHub:\r\n    java.lang.IllegalStateException: Cannot send event from an IoT Hub client that is closed.\r\n        at com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync(DeviceIO.java:280)\r\n        at com.microsoft.azure.sdk.iot.device.DeviceClient.sendEventAsync(DeviceClient.java:477)\r\n        at com.myapplication.Services.IoTHubService.onSendData(IoTHubService.java:346)\r\n        at com.myapplication.Services.IoTHubService.onHandleIntent(IoTHubService.java:122)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:148)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n```", "closed": "2018-05-25 20:15:56", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/249", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[Device Client - MQTT] IotHubConnectionStatusChangeCallback not being called even if received error on DeviceClient.open()"}, {"created": "2018-05-16 17:59:23", "commits": {"c3ba13bc3137cc5c9f02617b01fad10121396df5": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "6e645b7af8d7b1ec7a74895c8c44d55291ddfa44": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "cd20b096447f565421cb1917d733ad82d64c2b84": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["tests.integration.com.microsoft.azure.sdk.iot.iothubservices.SendMessagesIT.sendMessagesWithThrottlingNoRetry()", "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessageException(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket,com.microsoft.azure.sdk.iot.device.transport.TransportException)"], "closed": "2018-06-18 16:58:41", "filteredCommits": ["6e645b7af8d7b1ec7a74895c8c44d55291ddfa44"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "c3ba13bc3137cc5c9f02617b01fad10121396df5", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "6e645b7af8d7b1ec7a74895c8c44d55291ddfa44 tags/2018-6-15~7", "commitMessage": "fix(iot-dev): Fix bug where throttling over AMQP wasn't reported correctly reported in message callback\n\nGithub Bug #240\n", "commitParents": ["ea866c1678613f980be68373bf9a420b843b758a"], "spoonStatsSkippedReason": "", "commitHash": "6e645b7af8d7b1ec7a74895c8c44d55291ddfa44", "authoredDateTime": "2018-05-30 11:33:19", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 27, "deletions": 7, "lines": 34, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportTest.java"}, {"insertions": 9, "deletions": 0, "lines": 9, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "iot-e2e-tests/jvm/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothubservices/SendMessagesIT.java"}], "commitDateTime": "2018-05-31 11:28:42", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.iothubservices.SendMessagesIT.sendMessagesWithThrottlingNoRetry()"}], "spoonFilePath": "SendMessagesIT.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfExceptionIsNotRetryable(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode).68"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeCallbacksInvokesAllCallbacks(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode).48"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfExceptionIsNotRetryable().67"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeCallbacksInvokesAllCallbacks().47"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeCallbacksInvokesAllCallbacks().48"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfExceptionIsNotRetryable().68"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfExceptionIsNotRetryable(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfDeviceOperationTimedOut().65"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeCallbacksInvokesAllCallbacks(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode).47"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfDeviceOperationTimedOut(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfExceptionIsNotRetryable(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode).67"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfDeviceOperationTimedOut().66"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfDeviceOperationTimedOut(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode).66"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeCallbacksInvokesAllCallbacks(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode).70"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfDeviceOperationTimedOut(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode).65"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry().69"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeCallbacksInvokesAllCallbacks()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubStatusCode).69"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionChecksForAmqpThrottling()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry().70"}], "spoonFilePath": "IotHubTransportTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessageException(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportPacket,com.microsoft.azure.sdk.iot.device.transport.TransportException)"}], "spoonFilePath": "IotHubTransport.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "cd20b096447f565421cb1917d733ad82d64c2b84", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/240", "ttf": 32.000277777777775, "gitStatsSummary": {"insertions": 9.0, "deletions": 0.0, "lines": 9.0, "gitFilesChange": 1}, "title": "429-THROTTLED error code AMQPS over WS for Azure IoThub", "statsSkippedReason": "", "user": "rkanubaddhi", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 2, "TOT": 2.0, "MOV": 0.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** Java 8 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.11.0 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nI have S1 instance of IoT hub with 1 IoT hub unit, I have tried sending 10000 messages without any delay simultaneously. I was expecting to receive error code 429-THROTTLED, but I'm not getting any error code back, messages are getting to IoT hub slowly(it took 2hours once, it took 1minutes once without consistency). Behavior is same for AMQPS over WS or MQTT. I'm using java SDK, I have tried it with 1.11.0, 1.10.0 and also with 1.5.37\r\n\r\nWhat should I do to get 429-THROTTLED error code?\r\n\r\nPlease find the question here: https://stackoverflow.com/questions/50160972/429-throttled-error-code-amqps-over-ws-for-azure-iothub\r\n\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2018-05-16 02:22:24", "commits": {"e453aa8ddbed265e7f035c1bc0fae0e23da0e257": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "db6ad599cf15209e50e3f6741e4788de3654f33d": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "e7426efe1280271f4e85339d7810a96e970e54ca": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "604ecd3b055c5f2872dbf616986f63d2b175f18c": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "87dc66fa69c1dbae86b6c013d7d850f12d15af22": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.deps.serializer.JobsParser.toJson()"], "closed": "2018-05-25 20:17:16", "filteredCommits": ["e453aa8ddbed265e7f035c1bc0fae0e23da0e257"], "commitsDetails": [{"nameRev": "e453aa8ddbed265e7f035c1bc0fae0e23da0e257 tags/2018-5-25~1", "commitMessage": "fix(iot-service): Fix bug where JobsParser would ignore twin properties with null values\n\ngithub bug #238\n", "commitParents": ["88442adb5f17cc6cbe0320536fcb840f1eaef724"], "spoonStatsSkippedReason": "", "commitHash": "e453aa8ddbed265e7f035c1bc0fae0e23da0e257", "authoredDateTime": "2018-05-21 11:42:17", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobsParser.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/JobsParserTest.java"}], "commitDateTime": "2018-05-24 13:15:43", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 8, "MOV": 1, "INS": 3, "DEL": 2, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.JobsParserTest.toJsonMethodSucceed()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.JobsParserTest.toJsonTwinSucceed()"}], "spoonFilePath": "JobsParserTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.JobsParser.toJson()"}], "spoonFilePath": "JobsParser.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "db6ad599cf15209e50e3f6741e4788de3654f33d", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "e7426efe1280271f4e85339d7810a96e970e54ca", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "604ecd3b055c5f2872dbf616986f63d2b175f18c", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "87dc66fa69c1dbae86b6c013d7d850f12d15af22", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/238", "ttf": 9.000277777777777, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "title": "The batch removal device attribute failed", "statsSkippedReason": "", "user": "chenzheng1988", "changesInPackagesGIT": ["deps/src/main/java/com/microsoft/azure/sdk/iot/deps"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 1, "TOT": 3.0, "MOV": 1.0, "INS": 1.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 4, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The device attribute failed to be removed in batch, the device property was set to null, the batch update was performed, and the final device attribute was still present and was not removed.\r\n\r\n        // new set of desired properties\r\n        Set<Pair> desiredProperties = new HashSet<Pair>();\r\n        //desiredProperties.add(new Pair(\"temp\", new Random().nextInt(TEMPERATURE_RANGE)));\r\n        desiredProperties.add(new Pair(\"Name\", \"wo\"));\r\n        device.setDesiredProperties(desiredProperties);\r\n\r\n        // date when the update shall be executed\r\n        Date updateDateInFuture = new Date(new Date().getTime() + ADD_10_SECONDS_IN_MILLISECONDS); // 10 seconds in the future.\r\n\r\n        // query condition that defines the list of device to be updated\r\n        String queryCondition = \"DeviceId IN \" + deviceIds + \"\";\r\n\r\n        System.out.println(\"Schedule updating Device twin (new temp, hum) in 10 seconds\");\r\n        Job job = twinClient.scheduleUpdateTwin(queryCondition, device, updateDateInFuture, MAX_EXECUTION_TIME_IN_SECONDS);\r\n\r\n        System.out.println(\"Wait for job completed...\"+job.getJobId());\r\n        JobResult jobResult = job.get();\r\n        while (jobResult.getJobStatus() != JobStatus.completed)\r\n        {\r\n            Thread.sleep(GIVE_100_MILLISECONDS_TO_IOTHUB);\r\n            jobResult = job.get();\r\n        }\r\n        System.out.println(\"job completed\");\r\n\r\n        System.out.println(\"Getting the updated Device twin\");\r\n        twinClient.getTwin(device);\r\n        System.out.println(device);\r\n\r\npom.xml:\r\n       <dependency>\r\n            <groupId>com.microsoft.azure.sdk.iot</groupId>\r\n            <artifactId>iot-service-client</artifactId>\r\n            <version>1.13.2</version>\r\n        </dependency>", "labels": ["bug", "fix checked in"]}, {"created": "2018-04-21 13:32:03", "user": "GamalMohamed", "body": "I'm trying to use this Service SDK \"'com.microsoft.azure.sdk.iot:iot-service-client:1.9.25'\" on an android application extending the \"android-sample\" project here, but it immediately crashes once I run it..\r\nI'm using a real device running Android Oreo 8.0 (API 26)..\r\nThe code is barely the same as the sample except I added the Service SDK dependency in the build.gradle, after which the app crashes upon startup directly..\r\nWorth mentioning that it crashes too on any emulator running API 26, but surprisingly works normally on emulator running API 27 and without any code changes!!)..\r\n\r\nSo any idea why is this happening and how to make it run on API 26 physical device ??\r\n\r\n\r\n**Here's my build.gradle:**\r\n\r\n\r\n    apply plugin: 'com.android.application'\r\n    \r\n    android {\r\n         compileSdkVersion 26\r\n         defaultConfig {\r\n         applicationId \"com.example.jimmy.android_iothub\"\r\n         minSdkVersion 26\r\n         targetSdkVersion 26\r\n         versionCode 1\r\n         versionName \"1.0\"\r\n         testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n     }\r\n         buildTypes {\r\n             release {\r\n               minifyEnabled false\r\n               proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    packagingOptions {\r\n        exclude \"META-INF/MSFTSIG.SF\"\r\n        exclude \"META-INF/MSFTSIG.RSA\"\r\n        exclude 'META-INF/DEPENDENCIES'\r\n        exclude 'META-INF/NOTICE'\r\n        exclude 'META-INF/LICENSE'\r\n        exclude 'META-INF/LICENSE.txt'\r\n        exclude 'META-INF/NOTICE.txt'\r\n        exclude 'thirdpartynotice.txt'\r\n        }\r\n    }\r\n\r\n    dependencies {\r\n        implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n        implementation 'com.android.support:appcompat-v7:26.1.0'\r\n        implementation 'com.android.support.constraint:constraint-layout:1.1.0'\r\n        implementation 'com.android.support:design:26.1.0'\r\n        testImplementation 'junit:junit:4.12'\r\n        androidTestImplementation 'com.android.support.test:runner:1.0.1'\r\n        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'\r\n    }\r\n\r\n    repositories {\r\n        mavenCentral()\r\n    }\r\n\r\n    dependencies {\r\n        // Remote binary dependency\r\n        compile 'com.microsoft.azure.sdk.iot:iot-device-client:1.5.37'\r\n        compile 'com.microsoft.azure.sdk.iot:iot-service-client:1.9.25'\r\n    }\r\n", "closed": "2018-11-26 22:14:36", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/229", "ttf": 219.00027777777777, "commits": {}, "labels": ["Android", "bug"], "title": "Android app crashes when trying to run service client SDK"}, {"created": "2018-04-09 13:12:42", "user": "VitSolcik", "body": "Hi,\r\nI am trying to deploy an Android service app, but I have some issue with connecting to IoT HUB.\r\n\r\nAs I know client library already work with AMQPS protocol on android using Proton-J library.\r\n\r\nBut I am afraid that service library doesn't works with Proton-J library on Android (desktop meaven sample works).\r\n\r\nPlease could You let me know, if someone was trying to make a service Android app or any suggestions are welcome.\r\n\r\nI am thinking that this may be certificate problem.\r\n\r\nBest regards,\r\nVit Solcik.", "closed": "2018-11-26 22:13:22", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/224", "ttf": 231.00027777777777, "commits": {}, "labels": ["Android", "bug"], "title": "Android service app, Proton-J AMQPS"}, {"created": "2018-04-05 13:54:53", "commits": {"ac54902a4e4b16eb7beb70bc8b87985533257598": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "2d33430a76ec7f39de1d5c5d87256115cabca368": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "367d721212f8f57d86c0a705da479e5ed2df80ec": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "92cde074c32ae1a8b069231c48adaa7d4be38991": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "59b327dc1a5999105170ae871ba68aa6e68ceea6": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement()"], "closed": "2018-05-07 18:05:39", "filteredCommits": ["367d721212f8f57d86c0a705da479e5ed2df80ec"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "ac54902a4e4b16eb7beb70bc8b87985533257598", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "2d33430a76ec7f39de1d5c5d87256115cabca368", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "367d721212f8f57d86c0a705da479e5ed2df80ec tags/2018-5-4~17", "commitMessage": "fix(iot-service): Fix bug where setting desired properties to null didn't delete them from the device\n\nGithub Bug #221\n", "commitParents": ["f7a0815c343679826b4d61c306f32f6de428ca1e"], "spoonStatsSkippedReason": "", "commitHash": "367d721212f8f57d86c0a705da479e5ed2df80ec", "authoredDateTime": "2018-04-23 13:32:51", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 38, "deletions": 3, "lines": 41, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/twin/TwinStateTest.java"}, {"insertions": 11, "deletions": 1, "lines": 12, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/TwinState.java"}], "commitDateTime": "2018-04-26 14:11:24", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest.toJsonElementPreservesNullDesiredProperties()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.twin.TwinStateTest.toJsonElementPreservesNullReportedProperties()"}], "spoonFilePath": "TwinStateTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.twin.TwinState.toJsonElement()"}], "spoonFilePath": "TwinState.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "92cde074c32ae1a8b069231c48adaa7d4be38991", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "59b327dc1a5999105170ae871ba68aa6e68ceea6", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/221", "ttf": 32.000277777777775, "gitStatsSummary": {"insertions": 11.0, "deletions": 1.0, "lines": 12.0, "gitFilesChange": 1}, "title": "Set Desired Property with DeviceTwinDevice to null doesn't work", "statsSkippedReason": "", "user": "MaximilianKarl", "changesInPackagesGIT": ["deps/src/main/java/com/microsoft/azure/sdk/iot/deps"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 4.0, "MOV": 1.0, "INS": 3.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 4, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello,\r\n\r\nI got an issue when I try to delete a property from the DeviceTwin. When I set the value to null, then the value will not be deleted. \r\n\r\nSetup:\r\n\r\nWindows 8 \r\nJava Runtime: 1.8\r\n ```\r\n  <dependency>\r\n            <groupId>com.microsoft.azure.sdk.iot</groupId>\r\n            <artifactId>iot-service-client</artifactId>\r\n            <version>1.13.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.google.code.gson</groupId>\r\n            <artifactId>gson</artifactId>\r\n            <version>2.8.2</version>\r\n        </dependency>\r\n```\r\n\r\nCode:\r\n\r\n```\r\n        DeviceTwin twinClient = DeviceTwin.createFromConnectionString(connString);\r\n        DeviceTwinDevice device = new DeviceTwinDevice(deviceId);\r\n\r\n        twinClient.getTwin(device);\r\n        System.out.println(\"Started with Device:\");\r\n        System.out.println(device);\r\n\r\n        JsonObject mainObj = new JsonObject();\r\n        mainObj.addProperty(\"test\",\"set\");\r\n        mainObj.addProperty(\"test2\",\"set2\");\r\n        System.out.println(mainObj);\r\n\r\n        HashSet<Pair> tags = new HashSet<Pair>();\r\n        tags.add(new Pair(\"eConfig\", mainObj));\r\n        device.setDesiredProperties(tags);\r\n        twinClient.updateTwin(device);\r\n        twinClient.getTwin(device);\r\n        System.out.println(device);\r\n\r\n        JsonObject mainObj2 = new JsonObject();\r\n        mainObj2.addProperty(\"test\",\"nope\");\r\n        mainObj2.add(\"test2\",null);\r\n        System.out.println(mainObj2);\r\n\r\n        HashSet<Pair> tags2 = new HashSet<Pair>();\r\n        tags2.add(new Pair(\"eConfig\", mainObj2));\r\n        device.setDesiredProperties(tags2);\r\n        twinClient.updateTwin(device);\r\n        twinClient.getTwin(device);\r\n        System.out.println(device);\r\n```\r\n\r\n\r\nConsole:\r\n\r\n```\r\nStarted with Device:\r\nDevice ID: TestDevice\r\nETag: AAAAAAAAABE=\r\nTags:{}\r\nReported Properties{}\r\nDesired Properties: {\"eConfig\":{\"test2\":\"set2\",\"test\":\"nope\"},\"$version\":17,\"$metadata\":{\"$lastUpdated\":\"2018-04-05T13:37:40.68Z\",\"$lastUpdatedVersion\":17,\"eConfig\":{\"$lastUpdated\":\"2018-04-05T13:37:40.68Z\",\"$lastUpdatedVersion\":17}}}\r\n\r\n{\"test\":\"set\",\"test2\":\"set2\"}\r\nDevice ID: TestDevice\r\nETag: AAAAAAAAABI=\r\nTags:{}\r\nReported Properties{}\r\nDesired Properties: {\"eConfig\":{\"test2\":\"set2\",\"test\":\"set\"},\"$version\":18,\"$metadata\":{\"$lastUpdated\":\"2018-04-05T13:38:15.177Z\",\"$lastUpdatedVersion\":18,\"eConfig\":{\"$lastUpdated\":\"2018-04-05T13:38:15.177Z\",\"$lastUpdatedVersion\":18}}}\r\n\r\n{\"test\":\"nope\",\"test2\":null}\r\nDevice ID: TestDevice\r\nETag: AAAAAAAAABM=\r\nTags:{}\r\nReported Properties{}\r\nDesired Properties: {\"eConfig\":{\"test2\":\"set2\",\"test\":\"nope\"},\"$version\":19,\"$metadata\":{\"$lastUpdated\":\"2018-04-05T13:38:15.240Z\",\"$lastUpdatedVersion\":19,\"eConfig\":{\"$lastUpdated\":\"2018-04-05T13:38:15.240Z\",\"$lastUpdatedVersion\":19}}}\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\nAt the last print there should be no test2 key and value anymore\r\nEven :\r\n        `tags.add(new Pair(\"eConfig\", null));`\r\n\r\ndoesn't do something\r\n\r\nGreetings", "labels": ["bug", "fix checked in"]}, {"created": "2018-04-05 08:41:29", "user": "pizerg", "body": "- **OS and version used:** Raspbian Jessie\r\n\r\n- **Java runtime used:** 1.8\r\n\r\n- **SDK version used:** iot-device-client 1.9.0\r\n\r\n# Description of the issue:\r\nAfter receiving a CONNECTION_DROP and reconnecting (less than a second later a CONNECTION_SUCCESS is received) all messages sent are returning ERROR.\r\n\r\n# Code sample exhibiting the issue:\r\nJust set up a client using a connection string + MQTT protocol and call subscribeToDeviceMethod(...), setMessageCallback(...), registerConnectionStateCallback(..) with any context object (or null context) and logging callbacks, then wait or provoke a connection drop + reconnect. Try to call sendEventAsync afterwards.\r\n\r\n# Console log of the issue:\r\nFrom state callback\r\n\r\n> 2018-04-05 02:44:55,186 DEBUG: IoTHub connection state callback: CONNECTION_DROP\r\n> 2018-04-05 02:44:55,864 DEBUG: IoTHub connection state callback: CONNECTION_SUCCESS\r\n\r\nFrom IotHubEventCallback after calling sendEventAsync method:\r\n\r\n> 2018-04-05 02:45:17,143 DEBUG: In result callback with status: ERROR", "closed": "2018-04-24 17:48:45", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/219", "ttf": 19.00027777777778, "commits": {}, "labels": ["bug"], "title": "[Device Client - MQTT] After connection reconnect, all messages return ERROR"}, {"created": "2018-03-28 16:01:32", "commits": {"a38b96d7ccfab88c72994f001ee1324b1bee4814": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "23d7c90125a9ee5e35fa3e527812b89e95ef1bd3": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "b9c8f28d08c530fad2d0c3bf49cdfcf4dde8361c": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "ce3237a0c93849dfcd75f975520746a884f79c73": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.receiveMessage()", "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished(java.lang.String)", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open(java.util.Queue)", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.transport.mqtt.Message)", "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost(java.lang.Throwable,java.lang.String)", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.onMessageArrived(int)", "com.microsoft.azure.sdk.iot.device.transport.onConnectionEstablished(java.lang.String)", "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect()", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethod", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.sendEvent(com.microsoft.azure.sdk.iot.device.transport.mqtt.Message)", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.getConnectionId()", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.getConnectionId()", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.ReconnectionTask", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(java.util.Queue)", "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished()", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.scheduleReconnection(java.lang.Throwable)", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.ReactorRunner", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.setListener(com.microsoft.azure.sdk.iot.device.transport.mqtt.IotHubListener)", "com.microsoft.azure.sdk.iot.device.transport.getConnectionId()", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.close()", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.ReactorRunner.call()", "com.microsoft.azure.sdk.iot.device.transport.onConnectionLost(java.lang.Throwable,java.lang.String)", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.openAsync()", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging", "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(java.lang.Throwable)", "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.ReconnectionTask.call()", "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt", "com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.getConnectionId()"], "closed": "2018-05-25 20:18:19", "filteredCommits": ["ce3237a0c93849dfcd75f975520746a884f79c73", "23d7c90125a9ee5e35fa3e527812b89e95ef1bd3"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a38b96d7ccfab88c72994f001ee1324b1bee4814", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "ce3237a0c93849dfcd75f975520746a884f79c73 tags/2018-5-4~2", "commitMessage": "fix(iot-dev): Fix bug where AMQP disconnect would spawn multiple threads to reconnect\n\ngithub bug #217\n", "commitParents": ["ab587e114984ce609867ae4bd9a973ca0ff5e80d"], "spoonStatsSkippedReason": "", "commitHash": "ce3237a0c93849dfcd75f975520746a884f79c73", "authoredDateTime": "2018-05-03 13:12:19", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 10, "deletions": 2, "lines": 12, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java"}], "commitDateTime": "2018-05-03 14:19:41", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.scheduleReconnection(java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection"}], "spoonFilePath": "AmqpsIotHubConnection.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "b9c8f28d08c530fad2d0c3bf49cdfcf4dde8361c", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "23d7c90125a9ee5e35fa3e527812b89e95ef1bd3 tags/2018-5-25~6", "commitMessage": "fix(iot-dev): Fix bug where connection status updates for old connections affected current connections\n\ngithub bug #217\n", "commitParents": ["cdf0e7304642514ce05e82ae94db2da0635cf1e9"], "spoonStatsSkippedReason": "", "commitHash": "23d7c90125a9ee5e35fa3e527812b89e95ef1bd3", "authoredDateTime": "2018-05-07 15:37:07", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 57, "deletions": 5, "lines": 62, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportTest.java"}, {"insertions": 18, "deletions": 18, "lines": 36, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceMethodTest.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java"}, {"insertions": 22, "deletions": 8, "lines": 30, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java"}, {"insertions": 18, "deletions": 18, "lines": 36, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessagingTest.java"}, {"insertions": 4, "deletions": 2, "lines": 6, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubListener.java"}, {"insertions": 29, "deletions": 29, "lines": 58, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java"}, {"insertions": 17, "deletions": 6, "lines": 23, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java"}, {"insertions": 5, "deletions": 3, "lines": 8, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java"}, {"insertions": 14, "deletions": 0, "lines": 14, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnectionTest.java"}, {"insertions": 15, "deletions": 15, "lines": 30, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTest.java"}, {"insertions": 8, "deletions": 0, "lines": 8, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransportConnection.java"}, {"insertions": 22, "deletions": 4, "lines": 26, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnectionTest.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceMethod.java"}, {"insertions": 18, "deletions": 6, "lines": 24, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java"}, {"insertions": 29, "deletions": 12, "lines": 41, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnectionTest.java"}, {"insertions": 7, "deletions": 7, "lines": 14, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java"}], "commitDateTime": "2018-05-15 14:25:37", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccess()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveThrowsExceptionWhenConfigurationIsNotSet()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveFailureFromInvalidPropertyStringThrowsIllegalArgumentException()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccessCustomPropertyHasUnusualCharacters()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccessNoCustomProperties()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveThrowsIotHubServiceExceptionWhenParsePayloadReturnsNull()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.connectionLostAttemptsToReconnectWithSASTokenStillValid().44"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.instantiateMqtt(boolean,com.microsoft.azure.sdk.iot.device.transport.IotHubListener)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveReturnsNullMessageIfTopicNotFound()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.deliveryCompleteNotifiesListener()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveReturnsNullMessageWhenParseTopicReturnsNull()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.connectionDropFiresCallbackWithMqttException().51"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.connectSuccess().12"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.constructorThrowsExceptionIfConnectionIsNotInitialised()"}], "spoonFilePath": "MqttTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.constructorSucceeds(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.receiveReturnsNullMessageIfTopicNotFound()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendSucceedsCallsPublish(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendThrowsOnSendingResponseWithoutReceivingMethodInvoke()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.receiveThrowsIfRIDCouldNotBeParsed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.startSucceedsCalls(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendThrowsOnMessageNull()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.receiveReturnsNullMessageIfTopicWasNotPost()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendThrowsIfNotStarted(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.receiveThrowsIfMethodNameCouldNotBeParsed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.receiveSucceeds()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendThrowsOnNullRequestID()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendDoesNotSendOnDifferentMessageType(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendThrowsOnMismatchedRequestType()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.startSucceedsDoesNotCallsSubscribeIfStarted(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendThrowsOnInvalidOperation(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.receiveReturnsEmptyPayLoadIfNullPayloadParsed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendSucceedsCallsSubscribe(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}], "spoonFilePath": "MqttDeviceMethodTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.OnTransportErrorReportsErrorCodeIfPresent().81"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.getConnectionIdReturnsSavedConnectionId()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.OnLinkRemoteCloseReportsErrorCodeIfPresent()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.OnLinkRemoteCloseReportsErrorCodeIfPresent().83"}], "spoonFilePath": "AmqpsIotHubConnectionTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.receiveMessage()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.sendEvent(com.microsoft.azure.sdk.iot.device.transport.mqtt.Message)"}, {"UPD": 3, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.close()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.transport.mqtt.Message)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.getConnectionId()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.setListener(com.microsoft.azure.sdk.iot.device.transport.mqtt.IotHubListener)"}, {"UPD": 3, "TOT": 6, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.onMessageArrived(int)"}, {"UPD": 3, "TOT": 10, "MOV": 4, "INS": 3, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(java.util.Queue)"}], "spoonFilePath": "MqttIotHubConnection.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.getConnectionId()"}], "spoonFilePath": "IotHubTransportConnection.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin"}], "spoonFilePath": "MqttDeviceTwin.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnectionTest.getConnectionIdReturnsEmptyString()"}], "spoonFilePath": "HttpsIotHubConnectionTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.onConnectionLost(java.lang.Throwable,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.onConnectionEstablished(java.lang.String)"}], "spoonFilePath": "IotHubListener.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionLost(java.lang.Throwable,java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.onConnectionEstablished(java.lang.String)"}], "spoonFilePath": "IotHubTransport.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.scheduleReconnection(java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.ReconnectionTask.call()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.openAsync()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.ReactorRunner"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open(java.util.Queue)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.getConnectionId()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.ReconnectionTask"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.ReactorRunner.call()"}], "spoonFilePath": "AmqpsIotHubConnection.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetsDataForDesiredPropNotifResp()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessageForGetTwinOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetVersionForDesiredPropNotifRespIfFound()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessage(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.constructorConstructsSubscribeTopicForTwin(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.startThrowsExceptionIfSubscribesFails(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetsReqIdOnResTopic()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetsVersionOnResTopic()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendDoesNotThrowsIoExceptionIfMessageIsEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesResponseTopicForGetTwinSucceeds()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesResponseTopicInvalidStatusThrowsException()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveThrowsTransportExceptionOnAnythingOtherThenPatchOrResTopic()"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveReturnsNullMessageIfTopicNotFound(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveDoesNotSetVersionOnResTopicIfNotFound()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsIllegalArgumentExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveDoesNotSetVersionForDesiredPropNotifRespIfNotFound()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesResponseTopicForUpdateReportedPropertiesSucceeds()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveSetsDataForGetTwinResp()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsIllegalArgumentExceptionIfMessageIsNull(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveDoesNotSetReqIdOnResTopicIfNotFound()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsIllegalArgumentExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesResponseTopicMandatoryStatusNotFoundException()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveThrowsTransportExceptionOnAnythingOtherThenPatchDesiredProp()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.startSubscribesToDeviceTwinResponse(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveDoesNotSetDataForUpdateReportedPropResp()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.receiveParsesPatchTopicForDesiredPropertiesNotificationSucceeds()"}], "spoonFilePath": "MqttDeviceTwinTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection.getConnectionId()"}], "spoonFilePath": "HttpsIotHubConnection.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeAllCustomPropertiesInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeCorrelationIdInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeUserIdInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.startThrowsIoExceptionIfConnectFails(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.startCallsConnectAndSubscribe(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallThrowTransportExceptionIfMessageIsNull(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallMessageToLowerLayer(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.constructorFailsIfMqttConnectionIsNull()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeToInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallThrowIllegalArgumentExceptionIfMessageIsEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.stopCallsDisconnect(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.constructorFailsIfDeviceIDIsEmpty()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.startThrowsIoExceptionIfSubscribeFails(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.constructorFailsIfDeviceIDIsNull()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeAllSystemPropertiesAndAllCustomPropertiesInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.constructorCallsBaseConstructorWithArguments(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeMessageIdInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.stopIfDisconnectFailsThrowsIOException(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}], "spoonFilePath": "MqttMessagingTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.getConnectionIdReturnsSavedConnectionId()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.openThrowsTransportExceptionIfConnectionFailsInMethod().17"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 3, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.openExpectations().58"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 3, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.openThrowsTransportExceptionIfConnectionFailsInTwin().21"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.openSavesListenerToMessagingClient().47"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.openThrowsTransportExceptionIfConnectionFails().14"}], "spoonFilePath": "MqttIotHubConnectionTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connect()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.connectionLost(java.lang.Throwable)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt"}], "spoonFilePath": "Mqtt.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging"}], "spoonFilePath": "MqttMessaging.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.singleReconnectAttemptReturnsEncounteredException().59"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isSasTokenExpiredAuthenticationTypeIsSasTokenAndNotExpired().92"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionLostWithWrongConnectionIdDoesNothing().11"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openDoesNothingIfConnectionStatusIsConnected().20"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionInAmqpUnauthorizedAccessException()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionLostWithTransportExceptionCallsHandleDisconnection().12"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.closeWhenDisconnectedDoesNothing().24"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionEstablishedCallsUpdateStatus().15"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectUpdatesStatusIfClosingFailed().75"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionWithOtherTransportException()"}, {"UPD": 1, "TOT": 7, "MOV": 5, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionLostWithTransportExceptionCallsHandleDisconnection()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionLostWhileDisconnectedDoesNothing()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageAcknowledgesAReceivedMessages().51"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.updateStatusConnectionStatusNotChanged().86"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketFailsToSendAndExpectsAck().113"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionInUnauthorizedException()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionLostWithOtherExceptionType().13"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionSchedulesRetryIfRetryable().61"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketFailsToSend().112"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionSchedulesRetryIfRetryable().62"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeCallbacksInvokesAllCallbacks().45"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithAmqps().36"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendMessagesSendsMessages().44"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.addReceivedMessagesOverHttpToReceivedQueueChecksForHttpMessages().55"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isMessageValidWithMessageNotExpiredSasTokenExpired().81"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionInMqttUnauthroizedException().97"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleDisconnectionClearsInProgressAndReconnects().56"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.acknowledgeReceivedMessageSendsAck().52"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithHttp().29"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfDeviceOperationTimedOut()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeConnectionStatusChangeCallbackWithNullCallback().90"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfExceptionIsNotRetryable().65"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.addToCallbackQueuePacketNoCallback(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubEventCallback).95"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.hasOperationTimedOutFalse().41"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageAcknowledgesAReceivedMessages().50"}, {"UPD": 1, "TOT": 3, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionInMqttUnauthroizedException()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithAmqps().35"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithMqttWS().33"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithAmqpsWS().37"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketHappyPathWithoutAck().109"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketFailsToSendAndExpectsAck()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.acknowledgeReceivedMessageSendsAck().53"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.updateStatusConnectionStatusChangedToDisconnected().88"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketHappyPathWithAck().106"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.acknowledgeReceivedMessageReQueuesFailedMessages().54"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectAttemptsToReconnectUntilExceptionNotRetryable().74"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionLostWithOtherExceptionType().15"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openThrowsIfSasTokenExpired().17"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.closeMovesAllWaitingAndInProgressMessagesToCallbackQueueWithStatusMessageCancelledOnClose().23"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeCallbacksInvokesAllCallbacks().46"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openThrowsIfSasTokenExpired()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionEstablishedCallsUpdateStatus()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageChecksForHttpMessages().48"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.hasOperationTimedOutTrue().39"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithHttp().30"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithMqtt().31"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionInMqttUnauthroizedException().96"}, {"UPD": 0, "TOT": 7, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry().68"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.hasOperationTimedOutTrue()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.updateStatusConnectionStatusChangedToConnected().83"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.invokeConnectionStatusChangeCallbackWithCallback().89"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionWithExpiredSASToken().102"}, {"UPD": 2, "TOT": 5, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openDoesNothingIfConnectionStatusIsConnected()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.addToCallbackQueuePacketHasCallback(tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubEventCallback).94"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleDisconnectionClearsInProgressAndReconnects().57"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isMessageValidWithMessageExpired().78"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectAttemptsToReconnectUntilOperationTimesOut()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.updateStatusConnectionStatusChangedToConnected().84"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isMessageValidWithMessageNotExpiredAndValidSasToken().79"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isMessageValidWithMessageNotExpiredSasTokenExpired().82"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectAttemptsToReconnectUntilRetryPolicyEnds().70"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionLostWithWrongConnectionIdDoesNothing()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.updateStatusConnectionStatusChangedToDisconnected().87"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.singleReconnectAttemptReturnsEncounteredException().60"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectAttemptsToReconnectUntilExceptionNotRetryable().73"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isSasTokenExpiredAuthenticationTypeIsSasTokenAndExpired().91"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.singleReconnectAttemptSuccess().58"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openCallsOpenConnection().19"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketReceivesStatusThatIsNotOkOrOkEmpty().108"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageChecksForHttpMessages().49"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfRetryPolicySaysToNotRetry().67"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isSasTokenExpiredAuthenticationTypeNotSasToken().93"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketFailsToSend()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.exceptionToStatusChangeReasonSasTokenExpired().27"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isMessageValidWithMessageExpired().77"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectAttemptsToReconnectUntilOperationTimesOut().71"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.closeWhenDisconnectedDoesNothing().25"}, {"UPD": 0, "TOT": 7, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithAmqpsWS()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.closeMovesAllWaitingAndInProgressMessagesToCallbackQueueWithStatusMessageCancelledOnClose().22"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendMessagesSendsMessages().43"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.exceptionToStatusChangeReasonWithRetryableTransportException().26"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openCallsOpenConnection().18"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfDeviceOperationTimedOut().64"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionEstablishedCallsUpdateStatus().17"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.updateStatusConnectionStatusNotChanged().85"}, {"UPD": 0, "TOT": 7, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithMqttWS()"}, {"UPD": 0, "TOT": 7, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithAmqps()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketHappyPathWithoutAck().110"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfExceptionIsNotRetryable().66"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionWithExpiredSASToken().103"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.exceptionToStatusChangeReasonBadCredential().28"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectAttemptsToReconnectUntilRetryPolicyEnds().69"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.checkForUnauthorizedExceptionWithExpiredSASToken()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionEstablishedCallsUpdateStatus().16"}, {"UPD": 0, "TOT": 7, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithMqtt()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.addMessageAddsMessage().42"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.hasOperationTimedOutReturnsFalseIfProvidedTimeIsZero().40"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketFailsToSend().111"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.isMessageValidWithMessageNotExpiredAndValidSasToken().80"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openConnectionWithMqtt().32"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.hasOperationTimedOutReturnsFalseIfProvidedTimeIsZero()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectAttemptsToReconnectUntilRetryPolicyEnds()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.sendPacketReceivesStatusThatIsNotOkOrOkEmpty().107"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.openDoesNothingIfConnectionStatusIsConnected().21"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.reconnectUpdatesStatusIfClosingFailed().76"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 3, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.onConnectionLostWithOtherExceptionType()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageExceptionDoesNotRetryIfDeviceOperationTimedOut().63"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.IotHubTransportTest.handleMessageDoesNothingIfNotConnected().47"}], "spoonFilePath": "IotHubTransportTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethod"}], "spoonFilePath": "MqttDeviceMethod.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/217", "ttf": 58.000277777777775, "gitStatsSummary": {"insertions": 104.0, "deletions": 40.0, "lines": 144.0, "gitFilesChange": 10}, "title": "Multiple CONNECTION_SUCCESS responses for ConnectionStateCallbacks", "statsSkippedReason": "", "user": "rkanubaddhi", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 17.0, "spoonMethodsChanged": 31, "TOT": 66.0, "MOV": 11.0, "INS": 38.0, "DEL": 0.0, "spoonFilesChanged": 10}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used: Windows 10** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used: Java 8** <VERSION> <!-- Please include runtime and version -->\r\n\r\n- **SDK version used: 1.9.0** <VERSION> <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\n\r\nI'm opening a connection using deviceClient.open(), before opening the connection I'm registering the connection callbacks. execute method of IotHubConnectionStateCallback is getting executed multiple times for single open() and I'm getting IotHubConnectionState.CONNECTION_SUCCESS for 7 times in the multiple execute calls. Please look at the code below.\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n```\r\npublic void connect() throws URISyntaxException\r\n  {\r\n    dc = new DeviceClient(deviceconnectionString, IotHubClientProtocol.AMQPS_WS);\r\n    try\r\n    {\r\n      dc.registerConnectionStateCallback(new IotHubConnectionStateCallback()\r\n         {\r\n           @Override\r\n           public void execute(IotHubConnectionState msgCode, Object context)\r\n           {\r\n             if(msgCode == IotHubConnectionState.CONNECTION_SUCCESS)\r\n              System.out.println(\"Connection Success:\" +msgCode);\r\n           }\r\n         }, null);\r\n      dc.open();\r\n    }\r\n    catch (IOException e)\r\n    {\r\n      e.printStackTrace();\r\n    }\r\n}\r\n```\r\n\r\n \r\n\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\nI see the connection success log 7 times.\r\n\r\nConnection Success:CONNECTION_SUCCESS\r\nConnection Success:CONNECTION_SUCCESS\r\nConnection Success:CONNECTION_SUCCESS\r\nConnection Success:CONNECTION_SUCCESS\r\nConnection Success:CONNECTION_SUCCESS\r\nConnection Success:CONNECTION_SUCCESS\r\nConnection Success:CONNECTION_SUCCESS\r\n\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2018-02-27 13:53:18", "user": "Ken1S", "body": "- **OS and version used:** <VERSION> Windows 10\r\n\r\n- **Java runtime used:** <VERSION> 1.8\r\n\r\n- **SDK version used:** <VERSION> 1.9\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nThe class Mqtt uses System.out instead of log,\r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java\r\nsee row 369 and 433\r\n", "closed": "2018-04-17 04:29:12", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/210", "ttf": 48.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Log statements uses System.out in Mqtt class"}, {"created": "2018-02-22 13:51:33", "user": "milunko", "body": "Hi, recently we upgraded to version 1.8 and there are some exceptions happening after the upgrade that weren't there before.\r\n\r\n\r\n- **OS and version used:** Linux Debian based distribution \r\n\r\n- **Java runtime used:** Java embedded runtime 1.8\r\n\r\n- **SDK version used:** 1.8 \r\n\r\nWe are connectiong to the IOT hub via amqps protocol. and we are using a connection string based authentication.\r\n\r\n# Description of the issue:\r\nExceptions appearing after update to 1.8 that were not present prior to upgrade\r\n`2018-02-22 07:21:51,597 ERROR c.m.a.s.i.d.t.IotHubReceiveTask [pool-14-thread-1] java.lang.IllegalStateException: No handler found for received message!: No handler found for received message!\r\n2018-02-22 07:21:51,606 ERROR c.m.a.s.i.d.t.IotHubReceiveTask [pool-14-thread-2] java.lang.IllegalStateException: No handler found for received message!: No handler found for received message!\r\n2018-02-22 08:07:45,661 ERROR c.m.a.s.i.d.t.a.AmqpsDeviceAuthenticationCBSTokenRenewalTask [pool-12-thread-1] java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@c1b190 rejected from java.util.concurrent.ScheduledThreadPoolExecutor@65c38[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 1]: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@c1b190 rejected from java.util.concurrent.ScheduledThreadPoolExecutor@65c38[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 1]\r\n2018-02-22 08:51:32,686 ERROR c.m.a.s.i.d.t.IotHubReceiveTask [pool-14-thread-1] java.lang.IllegalStateException: No handler found for received message!: No handler found for received message!\r\n2018-02-22 08:51:36,437 ERROR c.m.a.s.i.d.t.IotHubReceiveTask [pool-14-thread-2] java.lang.IllegalStateException: No handler found for received message!: No handler found for received message!\r\n2018-02-22 09:37:27,002 ERROR c.m.a.s.i.d.t.a.AmqpsDeviceAuthenticationCBSTokenRenewalTask [pool-12-thread-1] java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@16b190d rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1ace510[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 1]: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@16b190d rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1ace510[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 1]`\r\n\r\n\r\n\r\nIllegalState exception is happening right after the boot of the device if there are any messages on the iot hub side as far as we have noticed. But anyway here is the trace:\r\n`2018-02-22 10:38:47,115 DEBUG c.m.a.s.i.d.t.IotHubReceiveTask [pool-14-thread-2] Exception on receiving queued messages to IoT Hub\r\njava.lang.IllegalStateException: No handler found for received message!\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.handleMessage(AmqpsTransport.java:421) ~[zuehlke-iot-platform-all.jar:?]\r\n\tat com.microsoft.azure.sdk.iot.device.transport.IotHubReceiveTask.run(IotHubReceiveTask.java:41) ~[zuehlke-iot-platform-all.jar:?]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[?:1.8.0_111]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]`\r\n\r\n\r\nCBS Token error stacktrace:\r\n`2018-02-22 09:37:27,010 DEBUG c.m.a.s.i.d.t.a.AmqpsDeviceAuthenticationCBSTokenRenewalTask [pool-12-thread-1] Exception on housekeeping\r\njava.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@16b190d rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1ace510[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 1]\r\n\tat java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:326) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor.scheduleAtFixedRate(ScheduledThreadPoolExecutor.java:573) ~[?:1.8.0_111]\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionDeviceOperation.scheduleRenewalThread(AmqpsSessionDeviceOperation.java:504) ~[zuehlke-iot-platform-all.jar:?]\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionDeviceOperation.renewToken(AmqpsSessionDeviceOperation.java:152) ~[zuehlke-iot-platform-all.jar:?]\r\n\tat com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsDeviceAuthenticationCBSTokenRenewalTask.run(AmqpsDeviceAuthenticationCBSTokenRenewalTask.java:38) ~[zuehlke-iot-platform-all.jar:?]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[?:1.8.0_111]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[?:1.8.0_111]\r\n\tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_111]`\r\n\r\n\r\n\r\n", "closed": "2018-04-17 04:30:30", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/209", "ttf": 53.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Exception thrown after upgrade to SDK 1.8"}, {"created": "2018-02-13 14:17:42", "commits": {"fcb22a866a9a93bf6ce72667f0d5a20442610910": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "6441fd975dd8e6a8b917fca33384d236690175e4": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "d2e2bd609e9ecc5af7d62ee9bb3407f3ab4bd4d5": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "00d0fe730e6d75a561ddaff95c2b24eda1f69529": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.setReportedProp(com.microsoft.azure.sdk.iot.device.DeviceTwin.Property)", "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwin.updateReportedProperties(java.util.Set,java.lang.Integer)"], "closed": "2018-06-28 22:44:49", "filteredCommits": ["6441fd975dd8e6a8b917fca33384d236690175e4"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "fcb22a866a9a93bf6ce72667f0d5a20442610910", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "6441fd975dd8e6a8b917fca33384d236690175e4 tags/2018-6-27~2^2", "commitMessage": "fix(iot-dev): Fix bug where users could try to send reported properties set with duplicate keys\n\ngithub bug #207\n", "commitParents": ["692654a8d2528b11e2f19b52f726957d7c74f6cb"], "spoonStatsSkippedReason": "", "commitHash": "6441fd975dd8e6a8b917fca33384d236690175e4", "authoredDateTime": "2018-06-18 13:50:09", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceTest.java"}, {"insertions": 20, "deletions": 0, "lines": 20, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceTwin/Device.java"}, {"insertions": 32, "deletions": 6, "lines": 38, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceTwinTest.java"}, {"insertions": 6, "deletions": 0, "lines": 6, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceTwin.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java"}], "commitDateTime": "2018-06-25 14:25:27", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "DeviceClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwin.updateReportedProperties(java.util.Set,java.lang.Integer)"}], "spoonFilePath": "DeviceTwin.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropOnResponseCallsStatusCBErrorIfMessageTypeIsNotDeviceTwin()"}, {"UPD": 0, "TOT": 9, "MOV": 9, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredTwinPropertySetsCorrectOperation(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredTwinPropertyCallsGenericCBOnDesiredChangeIfNoUserCBFound(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack).36"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.desiredChangeResponseCallsGenericTwinCBCBWithDesiredChangeIfNullTwinCB().46"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropThrowsForDuplicateKeys(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropWithVersionNullCallsTwinAPIForSerialization(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithDesiredPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).39"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).43"}, {"UPD": 0, "TOT": 12, "MOV": 12, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredDoesNotSubscribeIfAlreadySubscribed(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredCallsGenericCBOnDesiredChangeIfNoUserCBFound(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack).35"}, {"UPD": 0, "TOT": 12, "MOV": 12, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredTwinPropertyDoesNotSubscribeIfAlreadySubscribed(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithDesiredPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredSetsCorrectOperation(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack).26"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropWithVersionNullCallsTwinAPIForSerialization(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).20"}, {"UPD": 2, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredTwinPropertyDoesNotSubscribeIfAlreadySubscribed(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack).31"}, {"UPD": 2, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredDoesNotSubscribeIfAlreadySubscribed(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack).29"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithReportedPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property)"}, {"UPD": 1, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropOnResponseCallsStatusCB().22"}, {"UPD": 2, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredSetsCorrectOperation(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack).25"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.desiredChangeResponseCallsUserGenericCBWithDesiredChangeIfUnsubscribedYet().47"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropOnResponseCallsStatusCBErrorIfMessageTypeIsNotDeviceTwin().25"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropOnResponseCallsStatusCB()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropWithVersionNullCallsTwinAPIForSerialization(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).19"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropWithVersionCallsTwinAPIForSerialization(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).18"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithPropertiesWithMetadataCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.desiredChangeResponseCallsGenericCBCBWithDesiredChangeIfNullCB().45"}, {"UPD": 1, "TOT": 4, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropOnResponseCallsStatusCBErrorIfNullStatus().23"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithReportedPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).41"}, {"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithReportedPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).42"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredTwinPropertySetsCorrectOperation(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack).28"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredCallsUserCBOnDesiredChangeIfUserCBFound(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack).37"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredTwinPropertyCallsUserCBOnDesiredChangeIfUserCBFound(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack).38"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.desiredPropResponseDoesNotCallsUserStatusCBOnNotification(com.microsoft.azure.sdk.iot.deps.twin.TwinState,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection).34"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.desiredChangeResponseCallsUserGenericTwinCBWithDesiredChangeIfUnsubscribedYet().48"}, {"UPD": 1, "TOT": 11, "MOV": 10, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropOnResponseCallsStatusCBErrorIfNullStatus()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropWithVersionNullCallsTwinAPIForSerialization(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).21"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredTwinPropertyDoesNotSubscribeIfAlreadySubscribed(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack).32"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropWithVersionCallsTwinAPIForSerialization(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredDoesNotSubscribeIfAlreadySubscribed(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack).30"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.updateReportedPropWithVersionCallsTwinAPIForSerialization(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).17"}, {"UPD": 0, "TOT": 8, "MOV": 8, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredSetsCorrectOperation(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack)"}, {"UPD": 0, "TOT": 9, "MOV": 9, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.desiredChangeResponseCallsUserGenericTwinCBWithDesiredChangeIfUnsubscribedYet()"}, {"UPD": 0, "TOT": 9, "MOV": 9, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.desiredChangeResponseCallsUserGenericCBWithDesiredChangeIfUnsubscribedYet()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.desiredPropResponseDoesNotCallsUserStatusCBOnNotification(com.microsoft.azure.sdk.iot.deps.twin.TwinState,com.microsoft.azure.sdk.iot.deps.twin.TwinCollection).33"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.getDeviceTwinResponseWithDesiredPropertiesCallsTwinPropertyCallBack(tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.Property).40"}, {"UPD": 2, "TOT": 6, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwinTest.subscribeToDesiredTwinPropertySetsCorrectOperation(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.TwinPropertyCallBack).27"}], "spoonFilePath": "DeviceTwinTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.setReportedProp(com.microsoft.azure.sdk.iot.device.DeviceTwin.Property)"}], "spoonFilePath": "Device.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTest.setReportedPropertyAddsToAlteredReportedProperty()"}], "spoonFilePath": "DeviceTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "d2e2bd609e9ecc5af7d62ee9bb3407f3ab4bd4d5", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "00d0fe730e6d75a561ddaff95c2b24eda1f69529", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/207", "ttf": 135.00027777777777, "gitStatsSummary": {"insertions": 26.0, "deletions": 1.0, "lines": 27.0, "gitFilesChange": 3}, "title": "Inconsistent results of sendReportedProperties method multiple call", "statsSkippedReason": "", "user": "BratnerMichal", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 2, "TOT": 4.0, "MOV": 0.0, "INS": 4.0, "DEL": 0.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Linux Kernel 3.2.0 on embedded device\r\n\r\n- **Java runtime used:** 1.8.0_144\r\n\r\n- **SDK version used:** iot-device-client 1.8.0\r\n\r\n\r\n# Description of the issue:\r\nHello, I want to use IotHub Device Twins to store properties from embedded device. I'm testing update properties by `sendReportedProperties()` method. However I noticed that when I call this method multiple times in short period, not every change is always propagated to IotHub. \r\n\r\nWhen I run the same application with the same properties changes repeatedly, final properties state on IotHub is almost always different. This inconsistent behavior looks like sometimes some `sendReportedProperties()` method calls are not processed on IotHub but every time I get `OK_EMPTY` response for every request.\r\n\r\n# Code sample exhibiting the issue:\r\n\r\nInternal `IotHubProperty` object\r\n```\r\npublic class IotHubProperty {\r\n   public String key;\r\n   public Object value;\r\n\t\r\n   public IotHubProperty() {\r\n   }\r\n\t\r\n   public IotHubProperty(String key, Object value) {\r\n      this.key = key;\r\n      this.value = value;\r\n   }\r\n\r\n   public String getKey() {\r\n      return this.key;\r\n   }\r\n\t\r\n   public Object getValue() {\r\n      return this.value;\r\n   }\r\n}\r\n```\r\n\r\nMethod that tries update of reported properties\r\n```\r\nprivate void sendTestProperties() throws IOException {\r\n   DeviceClient client = new DeviceClient(connectionString, IotHubClientProtocol.MQTT);\r\n   IotDeviceManager deviceManager = new IotDeviceManager(client);\r\n \r\n   deviceManager.clientConnect();\r\n\r\n   IotHubProperty prop1 = new IotHubProperty(\"key1\", \"value1\");\r\n   IotHubProperty prop2 = new IotHubProperty(\"key2\", \"value2\");\r\n\r\n   deviceManager.setProperty(prop1);\r\n   deviceManager.setProperty(prop2);\r\n\r\n   prop1.value = \"new value1\";\r\n   prop2.value = \"new value2\";\r\n\r\n   deviceManager.setProperty(prop2);\r\n   deviceManager.setProperty(prop1);\r\n}\r\n```\r\n\r\nClass which manages sending properties to IotHub\r\n```\r\npublic class IotDeviceManager {\r\n   List<IotHubProperty> reported = new ArrayList<IotHubProperty>();  // List of properties in internal objects\r\n   DeviceClient client;\r\n   DesiredPropertiesListener telemetryConfig = new DesiredPropertiesListener();\r\n\r\n   public IotDeviceManager(DeviceClient client) {\r\n      this.client = client;\r\n   }\r\n\r\n   public void clientConnect() throws IOException {\r\n      client.open();\r\n      client.startDeviceTwin(new DeviceTwinStatusCallBack(), null, telemetryConfig, null);\r\n      client.subscribeToDesiredProperties(telemetryConfig.getDesiredProp());\r\n    }\r\n\r\n   public void setProperty(IotHubProperty property) {\r\n      for(IotHubProperty prop: reported) {\r\n         if(prop.getKey().equals(property.getKey())) {\r\n            // Exchange for property with new value\r\n    \t    reported.remove(prop);\r\n            reported.add(property);\r\n            sendReportedProperties();\r\n            return;\r\n         }\r\n      }\r\n      reported.add(property);\r\n      sendReportedProperties();\r\n   }\r\n\r\n   private void sendReportedProperties() {\r\n      for(IotHubProperty property: reported) {\r\n         telemetryConfig.setReportedProp(new Property(property.getKey(), property.getValue()));\r\n      }\r\n      try {\r\n         client.sendReportedProperties(telemetryConfig.getReportedProp());\r\n      } catch (IOException e) {\r\n         // Handle the exception\r\n      }\r\n   }\r\n   \r\n   private class DesiredPropertiesListener extends Device \r\n   {\r\n      @Override\r\n      public void PropertyCall(String propertyKey, Object propertyValue, Object context) \r\n      {\r\n         // Reading desired properties, it works fine\r\n      }\r\n   }\r\n\r\n   protected static class DeviceTwinStatusCallBack implements IotHubEventCallback {\r\n      public void execute(IotHubStatusCode status, Object context) {\r\n         System.out.println(\"IoT Hub responded to device twin operation with status \" + status.name());\r\n      }\r\n   }\r\n}\r\n```\r\n\r\n# Final properties state on IotHub:\r\nAfter this part of code, I would expect on IotHub properties in this state:\r\n```\r\n\"key1\":\"new value1\",\r\n\"key2\":\"new value2\"\r\n```\r\n\r\nBut sometimes there is\r\n```\r\n\"key1\":\"value1\",\r\n\"key2\":\"value2\"\r\n```\r\n\r\nor \r\n```\r\n\"key1\":\"value1\",\r\n\"key2\":\"new value2\"\r\n```\r\n\r\nAre there some request count or properties update count limits per time which may cause that some of later updates are not sometimes processed? If so, I would expect negative response from IotHub after exceeding these limits.\r\n\r\nI also tried sort properties by key before send and add 2 seconds timeout after `client.sendReportedProperties()` method but nothing helps.\r\n\r\nWe use S1 Azure IotHub unit.", "labels": ["bug", "fix checked in", "investigation-required"]}, {"created": "2018-02-08 21:22:06", "commits": {"0e6fb4a431e6cc8841dbe60e1f9ec7ffdb22be69": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "eec1f7fffc24b2128168dc22e2013f9be4d7bfee": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "5e9224fbc0babef61a5164404ad9fc5fa4d23c74": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "54b005931e5d54fd770020252bc4d40ea608509c": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "475c6c54ecd18806a52f8a6a23eb3815b0fd342e": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "282bed123309bfef6580c41ff859de31dd556cef": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "8d07c2bd45589581ef4bd8b2a547d9aa473b7823": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "8e3969c1100a0b879db6ed15511a3ffdd12d4288": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "12a8c9958da66b43f3478122a103b208d6e03d63": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "dc4a30b05ec1e12c34f0768d7b6c7792542a61fa": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "ef4478b939f058ff872c569dee9cdee3d41e8c30": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.startReconnect()"], "closed": "2018-02-12 19:49:18", "filteredCommits": ["282bed123309bfef6580c41ff859de31dd556cef"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "0e6fb4a431e6cc8841dbe60e1f9ec7ffdb22be69", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "eec1f7fffc24b2128168dc22e2013f9be4d7bfee", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "5e9224fbc0babef61a5164404ad9fc5fa4d23c74", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8d07c2bd45589581ef4bd8b2a547d9aa473b7823", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "475c6c54ecd18806a52f8a6a23eb3815b0fd342e", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8e3969c1100a0b879db6ed15511a3ffdd12d4288", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "54b005931e5d54fd770020252bc4d40ea608509c", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "282bed123309bfef6580c41ff859de31dd556cef tags/2018-2-9~1", "commitMessage": "refactor(iot-dev): Remove print to console from reconnection logic for AMQP\n\nGithub Issue #205\n", "commitParents": ["c4b9ff2fec5ce8ef37bf823a0c6f8a13b06e13a9"], "spoonStatsSkippedReason": "", "commitHash": "282bed123309bfef6580c41ff859de31dd556cef", "authoredDateTime": "2018-02-08 14:18:31", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java"}], "commitDateTime": "2018-02-08 16:56:40", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.startReconnect()"}], "spoonFilePath": "AmqpsIotHubConnection.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "12a8c9958da66b43f3478122a103b208d6e03d63", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "dc4a30b05ec1e12c34f0768d7b6c7792542a61fa", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "ef4478b939f058ff872c569dee9cdee3d41e8c30", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/205", "ttf": 3.000277777777778, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "title": "Cannot suppress output of \"Lost connection to the server....\"", "statsSkippedReason": "", "user": "Ken1S", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 1.0, "INS": 0.0, "DEL": 1.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 10, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 \r\n\r\n- **Java runtime used:** <VERSION> Java 8\r\n\r\n- **SDK version used:** <VERSION> 1.7.0\r\n\r\n\r\n# Description of the issue:\r\nPrintout of \"Lost connection to the server.\" is printed both to System.out and to log.\r\nThis makes it harder/impossible to suppres that output that would go to log with info level.\r\n\r\nI found the message in \r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java#L769\r\n\r\n---\r\nSystem.out.println(\"Lost connection to the server. Reconnection attempt \" + currentReconnectionAttempt++ + \"...\");\r\n        logger.LogInfo(\"Lost connection to the server. Reconnection attempt %s, method name is %s \", currentReconnectionAttempt, logger.getMethodName());\r\n---\r\n\r\nMy suggestion is to remove the System.out line \r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2018-02-07 05:53:34", "user": "xtrycatchx", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** macOS 10.13.3\r\n\r\n- **Java runtime used:** 1.8.0_45\r\n\r\n- **SDK version used:** 1.8.0_45\r\n\r\n\r\n# Description of the issue:\r\nI uploaded and verified my rootCA cert in DPS\r\nIn the DPS Manage Enrollment, I created an Enrollment Group with Identity Attestation Information as Intermediate Certificate (the same cert for primary and secondary)\r\n\r\nMy device cert is signed by the Intermediate Certificate in the Enrollment Group.\r\n\r\n# Code sample exhibiting the issue:\r\nmodified /src/main/java/samples/com/microsoft/azure/sdk/iot/ProvisioningX509Sample.java\r\n\r\nwith the correct entries for :\r\n```\r\nprivate static final String idScope = \"[My ID scope]\";\r\nprivate static final String globalEndpoint = \"global.azure-devices-provisioning.net\";\r\nprivate static final ProvisioningDeviceClientTransportProtocol PROVISIONING_DEVICE_CLIENT_TRANSPORT_PROTOCOL = ProvisioningDeviceClientTransportProtocol.HTTPS;\r\nprivate static final String leafPublicPem = \"<My Device Public PEM Certificate here>\";\r\nprivate static final String leafPrivateKey = \"<My Device Private PEM Key here>\";\r\n```\r\n\r\nAlso I added the chain in the sample java code, where in main I got this:\r\n```\r\nString intermediatePem = \"<My Intermediate CA Cert Uploaded Signer Certificate here>\";          \r\nString rootPem = \"<My Root Certificate used to Signed My Intermediate CA here>\";\r\n\r\nsignerCertificates.add(intermediatePem);\r\nsignerCertificates.add(root);\r\n```\r\n\r\n# Console log of the issue:\r\nHowever building (mvn clean package install) and running the output, I encountered this error:\r\n\r\n```\r\nStarting...\r\nBeginning setup.\r\nWaiting for Provisioning Service to register\r\njava.util.concurrent.ExecutionException: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions.ProvisioningDeviceHubException: {\"errorCode\":401002,\"trackingId\":\"5abb3624-8dfc-47b1-a787-7173e9188197\",\"message\":\"Unauthorized\",\"timestampUtc\":\"2018-02-07T05:40:30.9608217Z\"}\r\n        at java.util.concurrent.FutureTask.report(FutureTask.java:122)\r\n        at java.util.concurrent.FutureTask.get(FutureTask.java:206)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.invokeRegister(ProvisioningTask.java:111)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.call(ProvisioningTask.java:283)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\nCaused by: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions.ProvisioningDeviceHubException: {\"errorCode\":401002,\"trackingId\":\"5abb3624-8dfc-47b1-a787-7173e9188197\",\"message\":\"Unauthorized\",\"timestampUtc\":\"2018-02-07T05:40:30.9608217Z\"}\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions.ProvisioningDeviceClientExceptionManager.verifyHttpResponse(ProvisioningDeviceClientExceptionManager.java:28)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.http.ContractAPIHttp.sendRequest(ContractAPIHttp.java:140)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.http.ContractAPIHttp.authenticateWithProvisioningService(ContractAPIHttp.java:282)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.authenticateWithX509(RegisterTask.java:130)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.authenticateWithDPS(RegisterTask.java:283)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.call(RegisterTask.java:308)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RegisterTask.call(RegisterTask.java:33)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        ... 4 more\r\nRegistration error, bailing out\r\nPress any key to exit...\r\n```\r\n\r\nand if i removed the intermediate CA pem from the signerCertificates list, I got this another issue:\r\n```\r\n//signerCertificates.add(intermediatePem);\r\nsignerCertificates.add(root);\r\n```\r\nissue:\r\nStarting...\r\n```\r\nBeginning setup.\r\nWaiting for Provisioning Service to register\r\nWaiting for Provisioning Service to register\r\ncom.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions.ProvisioningDeviceHubException: CA certificate not found\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.executeStateMachineForStatus(ProvisioningTask.java:232)\r\n        at com.microsoft.azure.sdk.iot.provisioning.device.internal.task.ProvisioningTask.call(ProvisioningTask.java:285)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\nRegistration error, bailing out\r\nPress any key to exit...\r\n```\r\nAnd by the way, my rootCA was generated using openssl and is not issued from a trusted CA:\r\n```\r\nopenssl genrsa -out rootCA.key 2048\r\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1024 -out rootCA.pem\r\n```\r\nand also, my intermediate CA was generated using openssl:\r\n```\r\nopenssl genrsa -out intermediate.key 2048\r\nopenssl req -new -key intermediate.key -out intermediate.csr\r\nopenssl x509 -req -days 360 -in intermediate.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out intermediate.pem\r\n```\r\n", "closed": "2018-02-14 22:18:59", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/203", "ttf": 7.000277777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Device Provisioning throws CA certificate not found and errorCode:401002 Unauthorized"}, {"created": "2018-02-05 09:14:40", "commits": {"cc5257ff6d215497f539002242c282e9f7498472": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "c547c1068334af437aa792a58984f4b1428e216a": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.MessageProperty"], "closed": "2018-02-14 22:19:44", "filteredCommits": ["cc5257ff6d215497f539002242c282e9f7498472"], "commitsDetails": [{"nameRev": "cc5257ff6d215497f539002242c282e9f7498472 tags/2018-2-9~4", "commitMessage": "Fixed \"Logging does not match problem in MessageProperty\"\nSee #201\n", "commitParents": ["00ca4d35c1f1ad4718ac8ae56eb681d1fa89c33e"], "spoonStatsSkippedReason": "", "commitHash": "cc5257ff6d215497f539002242c282e9f7498472", "authoredDateTime": "2018-02-06 07:43:57", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/MessageProperty.java"}], "commitDateTime": "2018-02-08 15:19:50", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.MessageProperty"}], "spoonFilePath": "MessageProperty.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "c547c1068334af437aa792a58984f4b1428e216a", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/201", "ttf": 9.000277777777777, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "title": "Logging does not match problem in MessageProperty", "statsSkippedReason": "", "user": "letsfindaway", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 2.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/Azure/azure-iot-sdk-java/blob/f2de6124070b4bd9dc142fa2a20ae45fcb002010/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/MessageProperty.java#L87\r\n\r\nThe log message emit on this line does not match the problem detected.", "labels": ["bug", "help wanted"]}, {"created": "2018-01-25 12:46:51", "user": "sruthi06", "body": "Hi,\r\nWe are using Android environment for developing a Cloud connector for our business application in the mobile device. \r\nOS and version used: Android 7.1\r\nJava runtime used: JDK \"1.8.0_45\"\r\nSDK version used: IoT Device Client 1.6.0 for Java\r\n\r\n# Description of the issue:\r\nWe have tried using the latest device client (1.6.0) for connecting to IoTHub and sending the telemetry data to cloud. We are using the amqps_ws as the protocol. In case of any network disconnection and reconnection, we are not getting the status for the messages sent after the network connection is established.  The issue is happening only in AMQPS_WS. For HTTPS, we are able to get the status and connect again.\r\n\r\n# Console log of the issue:\r\nAMQPS_WS\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":0,\"temperature\":27.265127882630047,\"humidity\":41.55051693352014}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":1,\"temperature\":28.09823132482363,\"humidity\":43.03031529049137}\r\nI/System.out: IoT Hub responded to message 0 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 1 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":2,\"temperature\":24.28038629171875,\"humidity\":35.42120489711317}\r\nI/System.out: IoT Hub responded to message 2 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":3,\"temperature\":20.378097272054813,\"humidity\":40.18882228944083}\r\nI/System.out: IoT Hub responded to message 3 with status OK_EMPTY\r\nI/System.out: Lost connection to the server. Reconnection attempt 1...\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":4,\"temperature\":22.6837198495695,\"humidity\":39.140708178577164}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":5,\"temperature\":28.844251509319506,\"humidity\":43.800107704575495}\r\nI/art: Do partial code cache collection, code=23KB, data=30KB\r\nI/art: After code cache collection, code=22KB, data=29KB\r\nI/art: Increasing code cache capacity to 128KB\r\nI/System.out: Lost connection to the server. Reconnection attempt 2...\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":6,\"temperature\":26.528258414112187,\"humidity\":41.22386004811512}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":7,\"temperature\":28.751660248844658,\"humidity\":37.07716120722981}\r\nI/System.out: Lost connection to the server. Reconnection attempt 3...\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":8,\"temperature\":22.656229242833433,\"humidity\":39.464921098803615}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":9,\"temperature\":20.642468019494565,\"humidity\":43.64581997752576}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":10,\"temperature\":28.891527989837776,\"humidity\":48.41881737455572}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":11,\"temperature\":28.698486106662727,\"humidity\":39.34208303703676}\r\nI/System.out: Lost connection to the server. Reconnection attempt 4...\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":12,\"temperature\":25.712768986297966,\"humidity\":48.23723443557215}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":13,\"temperature\":22.929790247021785,\"humidity\":39.319483471458376}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":14,\"temperature\":28.43960342966726,\"humidity\":39.931153688815996}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":15,\"temperature\":26.755178987778905,\"humidity\":35.217900948164946}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":16,\"temperature\":28.512970987506957,\"humidity\":46.76258579622369}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":17,\"temperature\":20.425427131134867,\"humidity\":34.88973411998207}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":18,\"temperature\":26.03150932258102,\"humidity\":31.249846473301446}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":19,\"temperature\":20.28651622726968,\"humidity\":41.75314537039405}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":20,\"temperature\":22.567740094769736,\"humidity\":37.3675438840267}\r\nI/System.out: Lost connection to the server. Reconnection attempt 5...\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":21,\"temperature\":27.175903497455458,\"humidity\":30.609816531420165}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":22,\"temperature\":26.111890606079115,\"humidity\":41.71107139100205}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":23,\"temperature\":20.835386646747732,\"humidity\":35.672595438402624}\r\n\r\nFor AMQPS_WS , I have disconnected and reconnected, but we are not sure, if the messages are sent after the reconnection since we have not received any response.\r\nAMQPS_WS is the most used transport protocol for the production environment..\r\n\r\nHTTPS:\r\n\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":0,\"temperature\":24.93539497476906,\"humidity\":37.748547055114436}\r\nD/NetworkSecurityConfig: No Network Security Config specified, using platform default\r\nI/System.out: IoT Hub responded to message 0 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":1,\"temperature\":22.358710761999763,\"humidity\":32.13751606161822}\r\nI/System.out: IoT Hub responded to message 1 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":2,\"temperature\":29.392580974338454,\"humidity\":43.9910355348116}\r\nI/System.out: IoT Hub responded to message 2 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":3,\"temperature\":28.207687733736805,\"humidity\":36.53007840764335}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":4,\"temperature\":21.0791596953777,\"humidity\":49.2447614708915}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":5,\"temperature\":23.105064366696347,\"humidity\":31.166310340368604}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":6,\"temperature\":21.922837844046864,\"humidity\":42.52836616436349}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":7,\"temperature\":28.413192203592708,\"humidity\":39.04857989437019}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":8,\"temperature\":26.12267938300398,\"humidity\":36.03361581025468}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":9,\"temperature\":27.570247197541086,\"humidity\":43.53390764848262}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":10,\"temperature\":21.528604429066785,\"humidity\":46.60262753356571}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":11,\"temperature\":23.8681051734403,\"humidity\":33.162836554045874}\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":12,\"temperature\":23.480500305029505,\"humidity\":46.93648172692531}\r\nI/System.out: IoT Hub responded to message 3 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":13,\"temperature\":25.30485161791569,\"humidity\":34.28029086688981}\r\nI/System.out: IoT Hub responded to message 4 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 5 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 6 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 7 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 8 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 9 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 10 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 11 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 12 with status OK_EMPTY\r\nI/System.out: IoT Hub responded to message 13 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":14,\"temperature\":21.48200465538674,\"humidity\":45.61054215414081}\r\nI/System.out: IoT Hub responded to message 14 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":15,\"temperature\":24.372334042532238,\"humidity\":47.4475803242526}\r\nI/System.out: IoT Hub responded to message 15 with status OK_EMPTY\r\nI/System.out: {\"deviceId\":\"SruthiDevice\",\"messageId\":16,\"temperature\":27.570350150978157,\"humidity\":47.10070366678545}\r\nI/System.out: IoT Hub responded to message 16 with status OK_EMPTY\r\n\r\nFor HTTPS, we can see the response coming after reconnection and it behaves as expected.\r\n\r\nThanks,\r\nSruthi\r\n\r\n", "closed": "2018-02-27 00:04:01", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/198", "ttf": 32.000277777777775, "commits": {}, "labels": ["bug"], "title": "Network Reconnection Issue in Device Client 1.6.0 for AMQPS_WS"}, {"created": "2018-01-22 11:02:46", "commits": {"699b8e6535b850be486b06f18ba7e61f1ffc0053": {"commitGHEventType": "referenced", "commitUser": "prmathur-microsoft"}, "97067318eff608ca285ca262db2353640ad87e21": {"commitGHEventType": "referenced", "commitUser": "prmathur-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.activateIdentityKey(byte[])", "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMHsm.activateIdentityKey(byte[])"], "closed": "2018-02-14 22:20:06", "filteredCommits": ["699b8e6535b850be486b06f18ba7e61f1ffc0053"], "commitsDetails": [{"nameRev": "699b8e6535b850be486b06f18ba7e61f1ffc0053 tags/2018-2-9~10", "commitMessage": "Remove deprecated version of EncryptDecrypt (Fix Github issue #196)\n", "commitParents": ["7f6264a47effdd99a6393708c5727dc32526958b"], "spoonStatsSkippedReason": "", "commitHash": "699b8e6535b850be486b06f18ba7e61f1ffc0053", "authoredDateTime": "2018-01-29 14:45:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "provisioning/security/tpm-provider/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMHsmTest.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "provisioning/security/tpm-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMHsm.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulator.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "provisioning/security/tpm-provider-emulator/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMEmulatorTest.java"}], "commitDateTime": "2018-01-31 14:46:11", "commitUser": "prmathur-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMHsmTest"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMHsmTest.activateIdentityKeyThrowsOnEncryptDecryptResponseNull().23"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMHsmTest.activateIdentityKeySucceeds().11"}], "spoonFilePath": "SecurityProviderTPMHsmTest.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulatorTest.activateIdentityKeySucceeds().11"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulatorTest"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulatorTest.activateIdentityKeyThrowsOnEncryptDecryptResponseNull().23"}], "spoonFilePath": "SecurityProviderTPMEmulatorTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMHsm.activateIdentityKey(byte[])"}], "spoonFilePath": "SecurityProviderTPMHsm.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderTPMEmulator.activateIdentityKey(byte[])"}], "spoonFilePath": "SecurityProviderTPMEmulator.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "97067318eff608ca285ca262db2353640ad87e21", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "prmathur-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/196", "ttf": 23.00027777777778, "gitStatsSummary": {"insertions": 4.0, "deletions": 2.0, "lines": 6.0, "gitFilesChange": 2}, "title": "EncryptDecrypt is depricated", "statsSkippedReason": "", "user": "mathias-nickl", "changesInPackagesGIT": ["provisioning/security/tpm-provider/src/main/java/com/microsoft/azure/sdk", "provisioning/security/tpm-provider-emulator/src/main/java/com/microsoft/azure/sdk"], "spoonStatsSummary": {"UPD": 4.0, "spoonMethodsChanged": 2, "TOT": 6.0, "MOV": 2.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "https://github.com/Azure/azure-iot-sdk-java/blob/2b2eed39e1b2893462a1eb87818897e71879442c/provisioning/security/tpm-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderTPMHsm.java#L337\r\n\r\nDear Provisioning team, \r\n\r\nTPM command EncryptDecrypt (0x164) is depricated and not supported on newer hardware. It is recommended to use EncryptDecrypt2 instead. \r\n\r\nBest \r\n\r\nMN", "labels": ["bug", "fix checked in"]}, {"created": "2018-01-16 09:26:34", "user": "milunko", "body": "<!--\r\nI am running latest iot sdk for java version 1.6.0 on a machine with arm processor and java version:\r\njava -version\r\njava version \"1.8.0_91\"\r\nJava(TM) SE Embedded Runtime Environment (build 1.8.0_91-b14)\r\nJava HotSpot(TM) Embedded Client VM (build 25.91-b14, mixed mode)\r\n\r\nOS is debian.\r\n-->\r\n\r\nWe were using version 1.5.37 and were experiencing same issues as described in:\r\nhttps://github.com/Azure/azure-iot-sdk-java/issues/148\r\nBecause of this we upgraded to 1.6.0 and currently we have a issue that our connection gets dropped after some time (1h of running or more) and SDK never reconnects back to IOT hub. \r\n\r\nWarn log from SDK produces:\r\n\r\n```\r\n2018-01-15 16:39:02,106 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_SUCCESS\r\n2018-01-15 16:39:02,116 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_SUCCESS\r\n2018-01-15 16:39:02,118 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_SUCCESS\r\n2018-01-15 16:39:02,121 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_SUCCESS\r\n2018-01-15 16:39:02,124 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_SUCCESS\r\n2018-01-15 16:39:02,129 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_SUCCESS\r\n2018-01-15 17:44:02,655 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:44:04,684 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:44:08,687 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:44:16,824 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:44:32,830 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:45:04,833 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:46:05,302 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:47:05,753 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:48:06,202 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:49:06,653 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:50:07,073 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:51:07,976 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:52:08,399 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:53:08,805 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:54:09,237 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:55:15,072 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:56:15,495 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:57:15,930 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:58:16,348 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 17:59:16,760 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:00:17,733 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:01:18,237 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:02:18,642 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:03:19,148 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:04:19,571 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:05:20,034 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:06:20,455 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:07:20,872 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:08:21,288 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:09:21,681 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:10:22,099 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:11:22,493 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:12:22,891 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:13:23,305 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:14:23,713 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:15:24,109 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:16:24,518 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:17:24,935 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:18:25,670 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-15 18:19:26,088 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n```\r\n.... and so on....\r\n\r\nSo for the first one hour everything works fine, and then connection is never recovered.\r\nIf I close the connection manually and connect again to IOT hub same behaviour is repeated.\r\n\r\nIn the debug log information shown when connection is dropped:\r\n```\r\n2018-01-16 09:19:42,206 INFO c.m.a.s.i.d.t.a.AmqpsIotHubConnection [pool-11-thread-1] Proton reactor has been stopped, method name is closeAsync \r\n2018-01-16 09:19:42,210 INFO c.m.a.s.i.d.t.a.AmqpsIotHubConnection [pool-11-thread-1] Reactor is assigned to executor service, method name is openAsync \r\n2018-01-16 09:19:42,561 INFO c.m.a.s.i.d.t.a.AmqpsIotHubConnection [pool-11-thread-1] Starting to reconnect to IotHub, method name is onLinkRemoteClose \r\n2018-01-16 09:19:42,562 INFO c.m.a.s.i.d.t.a.AmqpsTransport [pool-11-thread-1] The messages in progress are buffered to be sent again due to a connection loss, method name is connectionLost \r\n2018-01-16 09:19:42,562 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-16 09:19:42,563 INFO c.m.a.s.i.d.t.a.AmqpsIotHubConnection [pool-11-thread-1] Lost connection to the server. Reconnection attempt 933, method name is startReconnect \r\n2018-01-16 09:20:42,564 INFO c.m.a.s.i.d.t.a.AmqpsIotHubConnection [pool-11-thread-1] Proton reactor has been stopped, method name is closeAsync \r\n2018-01-16 09:20:42,567 INFO c.m.a.s.i.d.t.a.AmqpsIotHubConnection [pool-11-thread-1] Reactor is assigned to executor service, method name is openAsync \r\n2018-01-16 09:20:42,943 INFO c.m.a.s.i.d.t.a.AmqpsIotHubConnection [pool-11-thread-1] Starting to reconnect to IotHub, method name is onLinkRemoteClose \r\n2018-01-16 09:20:42,945 INFO c.m.a.s.i.d.t.a.AmqpsTransport [pool-11-thread-1] The messages in progress are buffered to be sent again due to a connection loss, method name is connectionLost \r\n2018-01-16 09:20:42,945 WARN c.z.i.p.a.AzureIotHubBlock [pool-11-thread-1] Connection state changed to CONNECTION_DROP\r\n2018-01-16 09:20:42,949 INFO c.m.a.s.i.d.t.a.AmqpsIotHubConnection [pool-11-thread-1] Lost connection to the server. Reconnection attempt 934, method name is startReconnect \r\n2018-01-16 09:20:57,191 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,197 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,207 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,218 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,228 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,237 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,247 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,257 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,267 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,277 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,287 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,297 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,307 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,317 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,328 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,337 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,347 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,357 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,367 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,377 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,387 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,397 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,408 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,417 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,427 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,437 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,447 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,457 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,467 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,477 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,488 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,497 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,508 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,517 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,527 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,537 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,547 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,557 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,567 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,584 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,588 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,597 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,608 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,617 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,627 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,637 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,647 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,657 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,667 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,677 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,687 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,697 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,707 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,718 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,727 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,737 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,747 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,757 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,768 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,777 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,787 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,797 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,807 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,817 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,827 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,837 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,847 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,857 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,867 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,877 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,887 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,897 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,907 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,917 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,927 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,937 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,948 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,957 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,967 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,977 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,988 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:57,997 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,007 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,017 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,028 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,037 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,047 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,057 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,068 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,078 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,087 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,097 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,107 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,117 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,127 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,137 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,147 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,157 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,168 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,177 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,187 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,197 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,207 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,217 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-2] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,227 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n2018-01-16 09:20:58,237 DEBUG c.m.a.s.i.d.t.a.AmqpsTransport [pool-12-thread-1] Get the callback function for the received message, method name is handleMessage \r\n```\r\n...\r\n\r\nand this pattern repeats with the same message in the log for ~1 minute.\r\n\r\nBest,\r\nMilos\r\n", "closed": "2018-02-27 18:03:02", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/192", "ttf": 42.000277777777775, "commits": {}, "labels": ["bug"], "title": "Azure Java iot sdk never reconnecting back to the iot hub after connection loss."}, {"created": "2017-11-13 16:06:58", "commits": {"ac4e02bffb341d1638c3b0185e9fe569013ec069": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "5c34509d361c346f95bc5599281d85075f5f9461": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "34b89f63c481b202c2f66cee59394844a055fbe7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "9f3c7d097a1d3c176778221e6a1262cfb9fac036": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "d9afb349bdbc6ecddc00f0c278bfb30bef5bef7f": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "d61cf166308cc8c9568e6f6b05077efca7bc11d5": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "3ce16650a0617736532fa81bf2dbfc1796ae3c7a": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.send(com.microsoft.azure.sdk.iot.device.Message)"], "closed": "2017-12-05 18:01:25", "filteredCommits": ["34b89f63c481b202c2f66cee59394844a055fbe7"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "ac4e02bffb341d1638c3b0185e9fe569013ec069", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "5c34509d361c346f95bc5599281d85075f5f9461", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "34b89f63c481b202c2f66cee59394844a055fbe7 tags/2017-12-2~7", "commitMessage": "Fix issue where MQTT messages sent from device client don't include system properties unless custom properties are present too\n\nGithub Issue #179\n", "commitParents": ["4aeb60b0aff63fb6495a775e3f0322eb11c499c7"], "spoonStatsSkippedReason": "", "commitHash": "34b89f63c481b202c2f66cee59394844a055fbe7", "authoredDateTime": "2017-11-30 12:10:54", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 58, "deletions": 66, "lines": 124, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java"}, {"insertions": 6, "deletions": 3, "lines": 9, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqttmessaging_requirements.md"}, {"insertions": 186, "deletions": 40, "lines": 226, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessagingTest.java"}], "commitDateTime": "2017-11-30 12:22:08", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 11, "MOV": 9, "INS": 0, "DEL": 2, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging.send(com.microsoft.azure.sdk.iot.device.Message)"}], "spoonFilePath": "MqttMessaging.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeAllCustomPropertiesInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).17"}, {"UPD": 12, "TOT": 22, "MOV": 10, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallMessageWithPropsAndMessageIdToLowerLayer(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeUserIdInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 3, "TOT": 14, "MOV": 10, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallMessageWithPropertiesToLowerLayer(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).16"}, {"UPD": 3, "TOT": 9, "MOV": 5, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallMessageWithPropsAndMessageIdToLowerLayer(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).19"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeAllCustomPropertiesInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 9, "MOV": 0, "INS": 9, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeAllSystemPropertiesAndAllCustomPropertiesInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).26"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeToInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 3, "TOT": 11, "MOV": 7, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallMessageWithPropsAndMessageIdToLowerLayer(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).18"}, {"UPD": 13, "TOT": 32, "MOV": 15, "INS": 0, "DEL": 4, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallMessageWithPropertiesToLowerLayer(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 2, "TOT": 8, "MOV": 6, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallMessageWithPropertiesToLowerLayer(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).17"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeCorrelationIdInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 7, "MOV": 0, "INS": 7, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeAllSystemPropertiesAndAllCustomPropertiesInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessagingTest.sendShallIncludeMessageIdInPublishTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}], "spoonFilePath": "MqttMessagingTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9f3c7d097a1d3c176778221e6a1262cfb9fac036", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "d9afb349bdbc6ecddc00f0c278bfb30bef5bef7f", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "d61cf166308cc8c9568e6f6b05077efca7bc11d5", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "3ce16650a0617736532fa81bf2dbfc1796ae3c7a", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/179", "ttf": 22.00027777777778, "gitStatsSummary": {"insertions": 58.0, "deletions": 66.0, "lines": 124.0, "gitFilesChange": 1}, "title": "MessageId not added with the MQTT protocol", "statsSkippedReason": "", "user": "robrechtdelanghe", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 11.0, "MOV": 9.0, "INS": 0.0, "DEL": 2.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 6, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- **OS and version used:** Windows 7\r\n\r\n- **Java runtime used:** 1.8.0_111-b14\r\n\r\n- **SDK version used:** 1.5.37\r\n\r\n# Description of the issue:\r\nIssue: The MessageId is not added to the MQTT message if there are no custom properties set.\r\nWhen sending with the AMQP protocol the MessageID is set even without properties added.\r\n\r\n# Code sample exhibiting the issue:\r\n## Code sample that DOES NOT send the MessageId:\r\n```\r\nIotHubClientProtocol protocol= IotHubClientProtocol.MQTT;\r\nDeviceClient client = new DeviceClient(\"<connection-string>\", protocol);\r\nMessage msg = new Message(\"{}\");\r\nmsg.setMessageId(\"<UUID>\");\r\nclient.sendEventAsync(msg, <callback>, <callbackContext>);\r\n```\r\n\r\n## Code sample that DOES send the MessageId:\r\n```\r\nIotHubClientProtocol protocol= IotHubClientProtocol.MQTT;\r\nDeviceClient client = new DeviceClient(\"<connection-string>\", protocol);\r\nMessage msg = new Message(\"{}\");\r\nmsg.setMessageId(\"<UUID>\");\r\nmsg.setProperty(\"this\", \"fixes it\"); // This line fixes it\r\nclient.sendEventAsync(msg, <callback>, <callbackContext>);\r\n```\r\n\r\n## Code and class that is the problem:\r\nClass: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttMessaging\r\nMethod: send(Message message) throws IOException\r\nCode:\r\n```\r\n        if(messageProperties.length > 0)\r\n        {\r\n            /* SOME CODE */\r\n\r\n            /*\r\n             **Tests_SRS_MqttMessaging_21_027: [**send method shall append the messageid to publishTopic before publishing using the key name `$.mid`.**]**\r\n             */\r\n            if (message.getMessageId() != null)\r\n            {\r\n                stringBuilder.append(MESSAGE_ID);\r\n                stringBuilder.append(MESSAGE_PROPERTY_KEY_VALUE_SEPARATOR);\r\n                stringBuilder.append(message.getMessageId());\r\n\r\n                separatorNeeded = true;\r\n            }\r\n\r\n            /* SOME MORE CODE */\r\n        }\r\n```\r\n\r\n# Expected result:\r\nIs it possible to send the MessageId idependently of the presence of custom properties?\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-11-06 09:50:59", "commits": {"0ca3267eab68c74981078d9ec3d06b43225b7f04": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "af9c41f81f26d07afeccb56d44e1b5d3f8816f2a": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "869e53793c38db446491438f5de7f8bcadf3e07d": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "e64003e0893f2531b6bc8ad258a1dcc47f9e6aa0": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollectionResponse", "tests.integration.com.microsoft.azure.sdk.iot.iothubservices.DeviceTwinIT.queryCollectionCanReturnEmptyQueryResults()"], "closed": "2017-12-05 18:01:52", "filteredCommits": ["af9c41f81f26d07afeccb56d44e1b5d3f8816f2a"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "e64003e0893f2531b6bc8ad258a1dcc47f9e6aa0", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "af9c41f81f26d07afeccb56d44e1b5d3f8816f2a tags/2017-12-2~51", "commitMessage": "Fixed bug where QueryCollection queries throw when results are empty\n\nGithub bug #176\n", "commitParents": ["947c870294674636079bcff4c7010aad5bcdcb8a"], "spoonStatsSkippedReason": "", "commitHash": "af9c41f81f26d07afeccb56d44e1b5d3f8816f2a", "authoredDateTime": "2017-11-06 10:47:16", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 19, "deletions": 0, "lines": 19, "filePath": "iot-e2e-tests/jvm/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothubservices/DeviceTwinIT.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/QueryCollectionResponse.java"}, {"insertions": 1, "deletions": 14, "lines": 15, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/QueryCollectionResponseTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/DeviceTwin/querycollectionresponse_requirements.md"}], "commitDateTime": "2017-11-06 10:47:16", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollectionResponseTest.constructorWithCollectionThrowsForEmptyCollection()"}], "spoonFilePath": "QueryCollectionResponseTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.iothubservices.DeviceTwinIT.queryCollectionCanReturnEmptyQueryResults()"}], "spoonFilePath": "DeviceTwinIT.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.QueryCollectionResponse"}], "spoonFilePath": "QueryCollectionResponse.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "869e53793c38db446491438f5de7f8bcadf3e07d", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "0ca3267eab68c74981078d9ec3d06b43225b7f04", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/176", "ttf": 29.00027777777778, "gitStatsSummary": {"insertions": 4.0, "deletions": 4.0, "lines": 8.0, "gitFilesChange": 1}, "title": "QueryCollectionResponse throw IllegalArgumentException: Provided Collection must not be null and cannot be empty", "statsSkippedReason": "", "user": "zhang-hua", "changesInPackagesGIT": ["service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 2, "TOT": 4.0, "MOV": 1.0, "INS": 1.0, "DEL": 1.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 3, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->Windows 10\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->JDK 1.8.0_141\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version --> Java Service Client (com.microsoft.azure.sdk.iot:iot-service-client:1.9.24)\r\n- **IDE**:  IntelliJ IDEA\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nQueryCollectionResponse throw \"IllegalArgumentException: Provided Collection must not be null and cannot be empty\" when the twin query result is empty. It should not throw this exception and just return an empty result.\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/master/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java#L566\r\n\r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/master/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/QueryCollectionResponse.java#L52\r\n\r\nTest Code:\r\n```\r\n@Test(timeout = 100000)\r\npublic void queryWithContinuationTokenTest() {\r\n        try {\r\n            String fullQuery = \"select * from devices where deviceId='nonexistdevice'\";\r\n            DeviceTwin twinClient = DeviceTwin.createFromConnectionString(\"HostName=...\");\r\n            QueryCollection twinQuery = twinClient.queryTwinCollection(fullQuery);\r\n            QueryOptions options = new QueryOptions();\r\n            while (twinClient.hasNext(twinQuery)) {\r\n                QueryCollectionResponse<DeviceTwinDevice> response = twinClient.next(twinQuery, options);\r\n                for (DeviceTwinDevice twin : response.getCollection()) {\r\n                    System.out.println(twin.getDeviceId() + \":\" + response.getContinuationToken());\r\n                }\r\n            }\r\n        } catch (IllegalArgumentException e) {\r\n            Assert.fail(e.getMessage());\r\n        } catch (Exception e){\r\n            Assert.fail(e.getMessage());\r\n        }\r\n}\r\n```\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-10-25 09:03:23", "user": "kevinledinh", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Android 6.0\r\n\r\n- **Java runtime used:** Not sure\r\n\r\n- **SDK version used:** 1.0.16\r\n\r\n\r\n# Description of the issue:\r\nSeveral months ago (July-Aug 2017), the IoT Device SDK 1.0.16 was tested ok on my company's Android box. But all communications stops about a month ago. Looking at the debug trace shows that the Android box attempts to establish a connection to the Cloud Service but unable to do so. \r\n\r\n# Code sample exhibiting the issue:\r\nProblem exhibits when Device.open() is called.\r\n\r\n# Console log of the issue:\r\nPlease see attached for debug log.\r\n[20171025-SN02-logcat-DemoApponly.txt](https://github.com/Azure/azure-iot-sdk-java/files/1413941/20171025-SN02-logcat-DemoApponly.txt)\r\n\r\n", "closed": "2018-03-26 19:58:15", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/172", "ttf": 152.00027777777777, "commits": {}, "labels": ["bug", "service"], "title": "Problem with Connection to Cloud on Android with Device SDK 1.0.16"}, {"created": "2017-10-17 17:21:17", "user": "sirianni", "body": "There are several places throughout the SDK code where exceptions are not chained/propagated properly.  This makes it very difficult to see the root cause of errors.  \r\n\r\nIn general, it appears that `e.getCause()` is being used several places where simply `e` would be more proper.\r\n\r\nFor example:\r\n\r\n```java\r\n            catch (MqttException e)\r\n            {\r\n                /*\r\n                ** Codes_SRS_Mqtt_25_007: [**If an MQTT connection is unable to be established for any reason, the function shall throw an IOException.**]**\r\n                 */\r\n                throw new IOException(\"Unable to connect to service\" + e.getCause());\r\n            }\r\n```\r\nShould be:\r\n```java\r\n                throw new IOException(\"Unable to connect to service:\" + e.getMessage(), e);\r\n```\r\n\r\n```java\r\n            catch (Exception e)\r\n            {\r\n                this.state = State.CLOSED;\r\n                // Codes_SRS_MQTTIOTHUBCONNECTION_15_005: [If an MQTT connection is unable to be established\r\n                // for any reason, the function shall throw an IOException.]\r\n                if (this.deviceMethod != null)\r\n                {\r\n                    this.deviceMethod.stop();\r\n                }\r\n                if (this.deviceTwin != null )\r\n                {\r\n                    this.deviceTwin.stop();\r\n                }\r\n                if (this.deviceMessaging != null)\r\n                {\r\n                    this.deviceMessaging.stop();\r\n                }\r\n                throw new IOException(e.getMessage(), e.getCause());\r\n            }\r\n```\r\n\r\nShould be:\r\n```java\r\n                throw new IOException(e.getMessage(), e);\r\n```", "closed": "2017-12-05 18:02:41", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/169", "ttf": 49.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Improper chaining of exceptions"}, {"created": "2017-10-17 16:17:03", "commits": {"838b98f3f14ce030defded9302b8435a5bc2d4b0": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "56850b87270c576694a49c0efc832a16a0dfb2c8": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "8f191d456b11c2725505525c50b19b955374be23": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "8e34f4b2714a8d1d7a0e799ca7907a05d8846a84": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "400e3fda243080740b41bd6c2adee3d02c3153c1": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "7044a5964c72a60e3fd0cad71e7e5779c5167508": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "165bec47dc8384ef2868e056180db723752dc584": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "3771bf9f48d4a4a1277fbf3a60371612ca93c5e4": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "4548b7befb55a9e71bfc8ced55f17d95a6eb9310": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "eacca2bf47209befe9559425a3332b15c8117309": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "660f803d49756a37e79f82dbaf9bbf2410e70ba4": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "1c26024ce8d5c062532645e42b0e532c1704b38b": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "028a75a4500f3598f4c1eb4f8297634ca8502316": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "ebdc426371112a0fffcd637f51f196baabf93ba7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "7def063ea4525d541b05fa09ffef6732e844d6bd": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "be820fd5078df997b3e68cf44e1c0c2f6d33d80e": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "e77fbb9d3e65adbcc8976280b6fd017494037aad": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "ab5e16789d1c741335ac86adf57a61429b006495": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "d5acec8b31852f358744bd9aa9c5d0679ee4d6c8": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "d330d03efba4a4f4f5cd22426ce5ba0b7bf59cfe": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "6a0732f80acb58e74c2861741583f519ddb7363b": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.convertPemToPrivateKey(java.lang.String)", "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.convertPemToCertificate(java.lang.String)", "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.parsePrivateKey(java.lang.String)", "com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContext.generateSSLContextWithKeys(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.device.auth.IotHubCertificateManager)", "com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContext.parsePublicKeyCertificate(java.lang.String)", "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getPrivateKeyFromPEMKeyPair(org.bouncycastle.openssl.PEMKeyPair)", "com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContext.getPrivateKeyFromPEMKeyPair(org.bouncycastle.openssl.PEMKeyPair)", "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.parsePublicKeyCertificate(java.lang.String)", "com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContext.parsePrivateKey(java.lang.String)", "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert"], "closed": "2018-01-23 23:38:52", "filteredCommits": ["165bec47dc8384ef2868e056180db723752dc584"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "660f803d49756a37e79f82dbaf9bbf2410e70ba4", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "838b98f3f14ce030defded9302b8435a5bc2d4b0", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "56850b87270c576694a49c0efc832a16a0dfb2c8", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8f191d456b11c2725505525c50b19b955374be23", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8e34f4b2714a8d1d7a0e799ca7907a05d8846a84", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "400e3fda243080740b41bd6c2adee3d02c3153c1", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "7044a5964c72a60e3fd0cad71e7e5779c5167508", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "165bec47dc8384ef2868e056180db723752dc584 tags/2018-1-22~12", "commitMessage": "Updating all BouncyCastle references to newer library\n\nGithub issue #168\n", "commitParents": ["b1b4a462a58588e86af7441278e8e3453fae7218"], "spoonStatsSkippedReason": "", "commitHash": "165bec47dc8384ef2868e056180db723752dc584", "authoredDateTime": "2017-12-05 10:43:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 139, "deletions": 85, "lines": 224, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/auth/IotHubSSLContextTest.java"}, {"insertions": 141, "deletions": 0, "lines": 141, "filePath": "provisioning/security/x509-provider/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderX509CertTest.java"}, {"insertions": 0, "deletions": 13, "lines": 13, "filePath": "provisioning/security/x509-provider/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityClientX509CertTest.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "device/iot-device-client/pom.xml"}, {"insertions": 10, "deletions": 9, "lines": 19, "filePath": "provisioning/security/x509-provider/pom.xml"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/auth/iothubsslcontext_requirements.md"}, {"insertions": 55, "deletions": 31, "lines": 86, "filePath": "provisioning/security/x509-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/hsm/SecurityProviderX509Cert.java"}, {"insertions": 52, "deletions": 20, "lines": 72, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/auth/IotHubSSLContext.java"}], "commitDateTime": "2017-12-11 14:18:50", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContext.parsePublicKeyCertificate(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContext.parsePrivateKey(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContext.getPrivateKeyFromPEMKeyPair(org.bouncycastle.openssl.PEMKeyPair)"}, {"UPD": 14, "TOT": 48, "MOV": 32, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContext.generateSSLContextWithKeys(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.device.auth.IotHubCertificateManager)"}], "spoonFilePath": "IotHubSSLContext.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityClientX509CertTest"}], "spoonFilePath": "SecurityClientX509CertTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509CertTest"}], "spoonFilePath": "SecurityProviderX509CertTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 15, "MOV": 1, "INS": 8, "DEL": 5, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.generateSSLContextVerifications().2"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.parsePrivateKeySuccess()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.parsePublicKeyCertificateExceptionsWrappedInCertificateException().16"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.parsePublicKeyCertificateExceptionsWrappedInCertificateException()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.constructorCreatesSSLContext()"}, {"UPD": 2, "TOT": 26, "MOV": 5, "INS": 4, "DEL": 15, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.constructorWithDefaultCertPathAndPublicCertAndPrivateKey().11"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.parsePublicKeyCertificateSuccess()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.parsePrivateKeyExceptionsWrappedInCertificateException()"}, {"UPD": 10, "TOT": 36, "MOV": 26, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.constructorWithCertAndKeySuccess().3"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.getterGetsContext()"}, {"UPD": 0, "TOT": 13, "MOV": 11, "INS": 1, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.constructorWithDefaultCertAndPublicCertAndPrivateKey()"}, {"UPD": 9, "TOT": 40, "MOV": 29, "INS": 0, "DEL": 2, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.constructorWithDefaultCertAndPublicCertAndPrivateKey().9"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.constructorWithDefaultCertPathAndPublicCertAndPrivateKey()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.parsePrivateKeyExceptionsWrappedInCertificateException().14"}, {"UPD": 0, "TOT": 16, "MOV": 14, "INS": 1, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.auth.IotHubSSLContextTest.constructorWithCertAndKeySuccess()"}], "spoonFilePath": "IotHubSSLContextTest.java"}, {"spoonMethods": [{"UPD": 9, "TOT": 22, "MOV": 11, "INS": 0, "DEL": 2, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.convertPemToPrivateKey(java.lang.String)"}, {"UPD": 8, "TOT": 15, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.convertPemToCertificate(java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.getPrivateKeyFromPEMKeyPair(org.bouncycastle.openssl.PEMKeyPair)"}, {"UPD": 4, "TOT": 6, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.parsePrivateKey(java.lang.String)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.provisioning.security.hsm.SecurityProviderX509Cert.parsePublicKeyCertificate(java.lang.String)"}], "spoonFilePath": "SecurityProviderX509Cert.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "3771bf9f48d4a4a1277fbf3a60371612ca93c5e4", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "4548b7befb55a9e71bfc8ced55f17d95a6eb9310", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "eacca2bf47209befe9559425a3332b15c8117309", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "be820fd5078df997b3e68cf44e1c0c2f6d33d80e", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "d330d03efba4a4f4f5cd22426ce5ba0b7bf59cfe", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "028a75a4500f3598f4c1eb4f8297634ca8502316", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "6a0732f80acb58e74c2861741583f519ddb7363b", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "ebdc426371112a0fffcd637f51f196baabf93ba7", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "7def063ea4525d541b05fa09ffef6732e844d6bd", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "e77fbb9d3e65adbcc8976280b6fd017494037aad", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "d5acec8b31852f358744bd9aa9c5d0679ee4d6c8", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "1c26024ce8d5c062532645e42b0e532c1704b38b", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "ab5e16789d1c741335ac86adf57a61429b006495", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/168", "ttf": 98.00027777777778, "gitStatsSummary": {"insertions": 107.0, "deletions": 51.0, "lines": 158.0, "gitFilesChange": 2}, "title": "BouncyCastle dependency is out of date", "statsSkippedReason": "", "user": "sirianni", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot", "provisioning/security/x509-provider/src/main/java/com/microsoft/azure/sdk"], "spoonStatsSummary": {"UPD": 35.0, "spoonMethodsChanged": 10, "TOT": 99.0, "MOV": 51.0, "INS": 10.0, "DEL": 3.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 20, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The SDK lists `bcprov-jdk16` as a dependency, which is significantly out of date.\r\n\r\nhttp://bouncy-castle.1462172.n4.nabble.com/Bouncycaslte-bcprov-jdk15-vs-bcprov-jdk16-td4656252.html\r\n\r\nThis causes conflicts with apps that are using a more modern version of bouncycastle.  Please upgrade the SDK to use `bcprov-jdk15on`.\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-10-16 20:30:44", "commits": {"098428e3d637c1095236cbf423f97e693e164799": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "22e78f7417e0c4805009a55aaa21a652dafe95aa": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "dddacf43ed99a88b16d44e1d3de48be8cb138f3d": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "795d5d1b56d3a3f1be170a2bbda87877bb499c29": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "cbf23a179809bd0dae505afaed3d9f7213872c71": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "5efa24ffbeb26d1b5801a4325fe3e0beed99b804": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "5315b893ec130cdc09c56bdf538e20faaa44f79b": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "1dfb8859fe4029ba2d3764bcda129a6a4d2b2015": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethod.stop()", "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.unsubscribe(java.lang.String)", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.stop()"], "closed": "2017-12-05 18:03:11", "filteredCommits": ["5315b893ec130cdc09c56bdf538e20faaa44f79b"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "098428e3d637c1095236cbf423f97e693e164799", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "22e78f7417e0c4805009a55aaa21a652dafe95aa", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "dddacf43ed99a88b16d44e1d3de48be8cb138f3d", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "795d5d1b56d3a3f1be170a2bbda87877bb499c29", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "cbf23a179809bd0dae505afaed3d9f7213872c71", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "5efa24ffbeb26d1b5801a4325fe3e0beed99b804", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "5315b893ec130cdc09c56bdf538e20faaa44f79b tags/2017-12-2~21^2", "commitMessage": "Fixing a bug where deadlock can occur in MQTT when internet connection is lost\n\ngithub bug #167\n", "commitParents": ["da34ccf610e1e6584c8e7c6063e5eb6cbe555247"], "spoonStatsSkippedReason": "", "commitHash": "5315b893ec130cdc09c56bdf538e20faaa44f79b", "authoredDateTime": "2017-11-16 10:11:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 63, "lines": 63, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceMethodTest.java"}, {"insertions": 2, "deletions": 8, "lines": 10, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceMethod.java"}, {"insertions": 0, "deletions": 50, "lines": 50, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqttdevicetwin_requirements.md"}, {"insertions": 0, "deletions": 44, "lines": 44, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java"}, {"insertions": 1, "deletions": 8, "lines": 9, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java"}, {"insertions": 7, "deletions": 23, "lines": 30, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqtt_requirements.md"}, {"insertions": 0, "deletions": 25, "lines": 25, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqttdevicemethod_requirements.md"}], "commitDateTime": "2017-11-16 10:11:48", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.unsubscribeThrowsExceptionWhenUserSuppliedSASTokenHasExpired()"}], "spoonFilePath": "MqttTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendDoesNotThrowsIoExceptionIfMessageIsEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).20"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).11"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessageForGetTwinOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).7"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).15"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.stopUnsubscribesFromDeviceTwinResponse(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).4"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsIoExceptionIfMessageIsNull(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).18"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).8"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).17"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessageForUpdateReportedPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).10"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendDoesNotThrowsIoExceptionIfMessageIsEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).19"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendDoesNotPublishesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).14"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.stopThrowsExceptionIfUnSubscribesFails(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsExceptionForGetTwinOnCorrectTopicIfReqIdIsNullOrEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).9"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendSubscribesMessageForSubscribeToDesiredPropertiesOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).16"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).12"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.stopUnsubscribesFromDeviceTwinResponse(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendPublishesMessageForGetTwinOnCorrectTopic(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).6"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwinTest.sendThrowsExceptionForUpdateReportedPropertiesOnCorrectTopicIfReqIdIsNullOrEmpty(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt,com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage).13"}], "spoonFilePath": "MqttDeviceTwinTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.stop()"}], "spoonFilePath": "MqttDeviceTwin.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethod.stop()"}], "spoonFilePath": "MqttDeviceMethod.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.stopSucceedsDoesNotCallUnSubscribeIfStopped(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendDoesNotSendOnDifferentMessageType(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).9"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendSucceedsCallsSubscribe(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).7"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.stopSucceedsCallsUnSubscribe(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.stopSucceedsDoesNotCallUnSubscribeIfNotStarted(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceMethodTest.sendSucceedsCallsPublish(com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt).8"}], "spoonFilePath": "MqttDeviceMethodTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.unsubscribe(java.lang.String)"}], "spoonFilePath": "Mqtt.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "1dfb8859fe4029ba2d3764bcda129a6a4d2b2015", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/167", "ttf": 49.000277777777775, "gitStatsSummary": {"insertions": 3.0, "deletions": 60.0, "lines": 63.0, "gitFilesChange": 3}, "title": "DeviceClient.closeNow() blocks forever", "statsSkippedReason": "", "user": "a18250", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 3, "TOT": 5.0, "MOV": 2.0, "INS": 0.0, "DEL": 3.0, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 7, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <Android 7.1.1> <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** <Java 8> <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** <1.5.36> <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nMy code on mobile device calls SDK in following order:\r\n\r\n0. network is available\r\n1. DeviceClient.open()\r\n2. DeviceClient.setMessageCallback()\r\n3. subscribeToDeviceMethod()\r\n4. device is now listening for incoming IoT message/method\r\n5. network connection lost\r\n6. DeviceClient.closeNow()\r\n\r\nProblem is that at step 6, the closeNow() never returns and the calling thread is blocked forever (at least I waited for minutes).\r\n\r\nIf I remove step 3, then there is no block at step 6. This seems indicate the issue is related with direct method handling.\r\n\r\nStep into SDK code with Android Studio, it appears the code is blocked on a wait object at:\r\n\r\n```\r\nvoid unsubscribe(String topic) throws IOException {\r\n    synchronized(this.mqttLock) { <<<< lock here\r\n        try {\r\n            if(!this.mqttConnection.getMqttAsyncClient().isConnected()) {\r\n                throw new IOException(\"Cannot unsubscribe when mqtt client is disconnected\");\r\n            }\r\n\r\n            if(this.userSpecifiedSASTokenExpiredOnRetry) {\r\n                throw new IOException(\"Cannot unsubscribe when user supplied SAS token has expired\");\r\n            }\r\n\r\n            IMqttToken e = this.mqttConnection.getMqttAsyncClient().unsubscribe(topic);\r\n            e.waitForCompletion();\r\n        } catch (MqttException var5) {\r\n            throw new IOException(\"Unable to unsubscribe to topic :\" + topic + \"because \" + var5.getCause() + var5.getMessage());\r\n        }\r\n\r\n    }\r\n}\r\n```\r\n\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\nJust the 6 steps above\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-10-12 12:26:18", "commits": {"9b02e833cbd9ccbd6eead67b31a568c7f19034a5": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "40138afd02951f492d8c4f5297fda68e8b6e40d9": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "39e423c25551471f42a909ad35addb748078fb6f": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "b1b4a462a58588e86af7441278e8e3453fae7218": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "c3dec2dc11223c20d350e31ca5f31161ec258595": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.clean()"], "closed": "2018-01-23 23:40:00", "filteredCommits": ["b1b4a462a58588e86af7441278e8e3453fae7218"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "9b02e833cbd9ccbd6eead67b31a568c7f19034a5", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "40138afd02951f492d8c4f5297fda68e8b6e40d9", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "39e423c25551471f42a909ad35addb748078fb6f", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "b1b4a462a58588e86af7441278e8e3453fae7218 tags/2018-1-22~13", "commitMessage": "Fixed bug where device.clean() broke state of a Device object\n\nGithub bug #164\n", "commitParents": ["05c5c48d0b018f683fff2dacdc8895db99febc3b"], "spoonStatsSkippedReason": "", "commitHash": "b1b4a462a58588e86af7441278e8e3453fae7218", "authoredDateTime": "2017-12-07 16:30:27", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/transport/amqp/AmqpMessageTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/amqp/ProvisioningAmqpOperations.java"}, {"insertions": 1, "deletions": 6, "lines": 7, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceTwin/Device.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/transport/amqp/AmqpMessage.java"}, {"insertions": 8, "deletions": 5, "lines": 13, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/DeviceTwin/DeviceTest.java"}, {"insertions": 4, "deletions": 5, "lines": 9, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/DeviceTwin/device_requirements.md"}], "commitDateTime": "2017-12-11 13:37:31", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "AmqpMessageTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.DeviceTwin.Device.clean()"}], "spoonFilePath": "Device.java"}, {"spoonMethods": [], "spoonFilePath": "ProvisioningAmqpOperations.java"}, {"spoonMethods": [], "spoonFilePath": "AmqpMessage.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 4, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTest.freeEmptiesAllProperties()"}], "spoonFilePath": "DeviceTest.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "c3dec2dc11223c20d350e31ca5f31161ec258595", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/164", "ttf": 103.00027777777778, "gitStatsSummary": {"insertions": 3.0, "deletions": 8.0, "lines": 11.0, "gitFilesChange": 3}, "title": "device.clean() should not set reportedProp to null", "statsSkippedReason": "", "user": "carocad", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot", "provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot", "deps/src/main/java/com/microsoft/azure/sdk/iot/deps"], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 1, "TOT": 2.0, "MOV": 0.0, "INS": 0.0, "DEL": 2.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 4, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "OS and version used: MAC OS X 10.11.6\r\n\r\nJava runtime used: Android JDK 1.7\r\n\r\nSDK version used: iot-device-client:1.5.35\r\n\r\n# Description of the issue:\r\nThe abstract class `Device` in `package com.microsoft.azure.sdk.iot.device.DeviceTwin;` contains a method `clean()` which sets the `reportedProp` to null. However if a user calls `setReportedProp` afterwards, the code throws a `NullPointerException` because `reportedProp` was set to `null` instead of being [clear](https://docs.oracle.com/javase/7/docs/api/java/util/HashSet.html#clear())\r\n\r\n# Code sample exhibiting the issue:\r\n```java\r\nclient = new DeviceClient(connString, protocol);\r\nfinal Device homeKit = new Device() {\r\n            @Override\r\n            public void PropertyCall(String propertyKey, Object propertyValue, Object context) {\r\n                Log.i(TAG, propertyKey + \" changed to \" + propertyValue);\r\n                try {\r\n                    this.setReportedProp(new Property(propertyKey, propertyValue));\r\n                    client.sendReportedProperties(this.getReportedProp());\r\n                    this.clean();\r\n                    return;\r\n                } catch (Exception e) {\r\n                    // null pointer exception whenever a property is changed\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        };\r\nclient.startDeviceTwin(new DeviceTwinStatusCallBack(), null, homeKit, null);\r\n```", "labels": ["bug", "fix checked in"]}, {"created": "2017-10-10 15:28:11", "user": "carocad", "body": "- **OS and version used:** MAC OS X 10.11.6\r\n\r\n- **Java runtime used:** Android JDK 1.7\r\n\r\n- **SDK version used:** iot-device-client:1.5.35\r\n\r\n\r\n# Description of the issue:\r\nHey guys, I am trying to get the device properties on `client.connect()`. I have already registered a `MessageCallback` and an `IotHubEventCallback`. Through these I can get the properties changes once I am connected and I correctly get the messages sent from the iot Hub.\r\n\r\nHowever I dont get the complete `desired properties` on `connect`. I only get the changed values after I have connected. \r\n\r\nIf I delete the device twin from the iot hub and then connect, I do get the full `desired properties` !!. I would expect this to be the behavior whenever I connect to the iot hub.\r\n\r\nAdditionally I also tried using the Node.js sdk and there the complete `desired properties` are fetched on `connect`.\r\n\r\n# Code sample exhibiting the issue:\r\n```java\r\nString connString = CONNECTION_TEMPLATE.replace(PLACEHOLDER_HOSTNAME, object.data.azure.hostname)\r\n                                                        .replace(PLACEHOLDER_ID, myID)\r\n                                                        .replace(PLACEHOLDER_AZURE_PRIMARY_KEY, object.data.azure.primarykey);\r\n                try {\r\n                    IotHubClientProtocol protocol = IotHubClientProtocol.MQTT;\r\n                    client = new DeviceClient(connString, protocol);\r\n                    MessageCallbackMqtt callback = new MessageCallbackMqtt();\r\n                    //Counter counter = new Counter(0);\r\n                    client.setMessageCallback(callback, java.util.UUID.randomUUID().toString());\r\n                    // Create a Device object to store the device twin properties\r\n                    Device dataCollector = new Device() {\r\n                        // Print details when a property value changes\r\n                        @Override\r\n                        public void PropertyCall(String propertyKey, Object propertyValue, Object context) {\r\n                            Log.i(TAG, propertyKey + \" changed to \" + propertyValue);\r\n                        }\r\n                    };\r\n                    dataCollector.setDesiredPropertyCallback(new com.microsoft.azure.sdk.iot.device.DeviceTwin.Property(\"foo\", false),\r\n                            new PropertyCallBack<String, Object>() {\r\n                                @Override\r\n                                public void PropertyCall(String propertyKey, Object propertyValue, Object context) {\r\n                                    Log.i(TAG, \"My FOO changed to \" + propertyValue);\r\n                                }\r\n                            }, null);\r\n                    // Create a reported property and send it to your IoT hub.\r\n                    //dataCollector.setReportedProp(new com.microsoft.azure.sdk.iot.device.DeviceTwin.Property(\"connectivityType\", \"cellular\"));\r\n                    // start client connection\r\n                    client.open();\r\n                    client.startDeviceTwin(new EventCallback(), null, dataCollector, null);\r\n                    //client.sendReportedProperties(dataCollector.getReportedProp());\r\n                    client.subscribeToDesiredProperties(dataCollector.getDesiredProp());\r\n                }\r\n                catch(IOException e1) {\r\n                    Log.e(TAG, \"Exception while opening IoTHub connection: \" + e1.toString());\r\n                } catch(Exception e2)\r\n                {\r\n                    Log.e(TAG, \"Exception while opening IoTHub connection: \" + e2.toString());\r\n                }\r\n```\r\n\r\n# Console log of the issue:\r\n```\r\n10-10 17:07:16.695 20759-20759/my.app W/System.err: log4j:WARN No appenders could be found for logger (com.microsoft.azure.sdk.iot.device.IotHubConnectionString).\r\n10-10 17:07:17.515 20759-20914/my.app V/AzureSystemStatePlugin: IoT Hub responded to message 7626ad3c-b4e8-4b1f-b669-93ec8eca5fb7 with status OK_EMPTY\r\n10-10 17:07:19.875 20759-20915/my.app V/AzureSystemStatePlugin: IoT Hub responded to message 1d01a59c-1f3e-426d-acaf-0de8f14161c0 with status OK_EMPTY\r\n10-10 17:07:20.925 20759-20915/my.app V/AzureSystemStatePlugin: IoT Hub responded to message 0d200d03-0619-43f8-b522-af880342e060 with status OK_EMPTY\r\n10-10 17:07:21.415 20759-20914/my.app V/AzureSystemStatePlugin: IoT Hub responded to message be5a205d-04e6-48a0-981e-efcfec6651f4 with status OK_EMPTY\r\n10-10 17:07:22.105 20759-20914/my.app V/AzureSystemStatePlugin: IoT Hub responded to message ed0956c0-bbe5-4dff-ada9-20afb68b9cb1 with status OK_EMPTY\r\n10-10 17:07:22.795 20759-20914/my.app V/AzureSystemStatePlugin: IoT Hub responded to message 058417cb-d7de-4318-bc2e-8b574620dcf6 with status OK_EMPTY\r\n10-10 17:07:26.856 20759-20915/my.app V/AzureSystemStatePlugin: IoT Hub responded to message 96923f94-87a8-438e-9fa8-364128cdc925 with status OK_EMPTY\r\n10-10 17:07:31.906 20759-20914/my.app V/AzureSystemStatePlugin: IoT Hub responded to message aa4780c5-25fd-4657-87ed-262053e1274f with status OK_EMPTY\r\n10-10 17:07:33.495 20759-20914/my.app V/AzureSystemStatePlugin: IoT Hub responded to message 7336c4b7-f45e-47a6-9989-e4dc6213c395 with status OK_EMPTY\r\n```\r\n\r\n", "closed": "2018-02-14 22:20:47", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/160", "ttf": 127.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Fetch DeviceTwin properties on connect doesnt work"}, {"created": "2017-10-09 05:48:00", "commits": {"4173315fa8f27abbd969eb7d68a22f0bb03cd2a7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "a4f98bad82877e514d871cc6f595d9ddf080313a": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "8818a2f2e0a7a7191a69fbeefdd61529a44ce968": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "c26822306660c1f612157a4aec950aae7ed94696": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "03789faba3c51ca369065265e47c75a975404627": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 0, "closed": "2017-10-24 17:41:43", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "4173315fa8f27abbd969eb7d68a22f0bb03cd2a7", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "03789faba3c51ca369065265e47c75a975404627 tags/2017-12-2~65", "commitMessage": "Fix issues #158 and #134. Twin accepts 5 leves of nested properties with metadata.\n", "commitParents": ["061ccff5ec4ccae7b31e972bb08267cd06a4172c"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "03789faba3c51ca369065265e47c75a975404627", "authoredDateTime": "2017-10-18 15:47:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadNotificationParser.java"}, {"insertions": 38, "deletions": 10, "lines": 48, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinProperty.java"}, {"insertions": 37, "deletions": 1, "lines": 38, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinParser.java"}, {"insertions": 70, "deletions": 13, "lines": 83, "filePath": "deps/devdoc/requirement_docs/com/microsoft/azure/sdk/iot/deps/serializer/parserutility.md"}, {"insertions": 123, "deletions": 12, "lines": 135, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtility.java"}, {"insertions": 304, "deletions": 21, "lines": 325, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtilityTest.java"}, {"insertions": 29, "deletions": 0, "lines": 29, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinTags.java"}, {"insertions": 124, "deletions": 6, "lines": 130, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/TwinParserTest.java"}, {"insertions": 21, "deletions": 3, "lines": 24, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinProperties.java"}], "commitDateTime": "2017-10-19 15:47:08", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8818a2f2e0a7a7191a69fbeefdd61529a44ce968", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "c26822306660c1f612157a4aec950aae7ed94696", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a4f98bad82877e514d871cc6f595d9ddf080313a", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/158", "ttf": 15.000277777777777, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "TwinParser throw IllegalArgumentException when nested twin properties exceed 5 levels", "statsSkippedReason": "", "user": "zhang-hua", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 4, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->Windows 10\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->JDK 1.8.0_141\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->Java SDK Dependency (com.microsoft.azure.sdk.iot:iot-deps:0.1.2)\r\n- **IDE:**: IntelliJ IDEA\r\n\r\n\r\n# Description of the issue:\r\nBased on the [document of Iothub](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins), the maximum allowed depth is 5. For example:\r\n```\r\n{\r\n      ...\r\n      \"tags\": {\r\n          \"one\": {\r\n              \"two\": {\r\n                  \"three\": {\r\n                      \"four\": {\r\n                          \"five\": {\r\n                              \"property\": \"value\"\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      },\r\n      ...\r\n  }\r\n```\r\nBut we still get IllegalArgumentException thrown by TwinParser which complains \"Malformed Json: exceed 5 levels\" at [line 1061](https://github.com/Azure/azure-iot-sdk-java/blob/master/deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinParser.java#L1061).\r\n\r\nHere is an example of failing twin reported property. Based on description in the document, there are 4 levels under reported property starting from \"Telemetry\", but 6 levels starting from '$metadata' which might be the root cause of this issue.\r\n```\r\n\"reported\": { \r\n        \"Protocol\": \"MQTT\",\r\n        \"SupportedMethods\": \"Reboot,FirmwareUpdate,EmergencyValveRelease,IncreasePressure\",\r\n        \"Telemetry\": {                            -> Level 1\r\n          \"chiller-sensors;v1\": {              -> Level 2\r\n            \"Interval\": \"00:00:10\",\r\n            \"MessageTemplate\": \"{\\\"temperature\\\":${temperature},\\\"temperature_unit\\\":\\\"${temperature_unit}\\\",\\\"humidity\\\":${humidity},\\\"humidity_unit\\\":\\\"${humidity_unit}\\\",\\\"pressure\\\":${pressure},\\\"pressure_unit\\\":\\\"${pressure_unit}\\\"}\",\r\n            \"MessageSchema\": {             -> Level 3\r\n              \"Name\": \"chiller-sensors;v1\",\r\n              \"Format\": \"JSON\",\r\n              \"Fields\": {                             -> Level 4\r\n                \"temperature\": \"Double\", \r\n                \"temperature_unit\": \"Text\",\r\n                \"humidity\": \"Double\",\r\n                \"humidity_unit\": \"Text\",\r\n                \"pressure\": \"Double\",\r\n                \"pressure_unit\": \"Text\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n       \"$metadata\": {                                        -> Level 1\r\n          \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\",\r\n          \"Protocol\": {\r\n            \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n          },\r\n          \"SupportedMethods\": {\r\n            \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n          },\r\n          \"Telemetry\": {                                         -> Level 2\r\n            \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\",\r\n            \"chiller-sensors;v1\": {   -> Level 3\r\n              \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\",\r\n              \"Interval\": {\r\n                \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n              },\r\n              \"MessageTemplate\": {\r\n                \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n              },\r\n              \"MessageSchema\": {                         -> Level 4\r\n                \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\",\r\n                \"Name\": {  \r\n                  \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n                },\r\n                \"Format\": {\r\n                  \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n                },\r\n                \"Fields\": {                                         -> Level 5\r\n                  \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\",\r\n                  \"temperature\": {                            -> Level 6\r\n                    \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n                  },\r\n                  \"temperature_unit\": {\r\n                    \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n                  },\r\n                  \"humidity\": {\r\n                    \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n                  },\r\n                  \"humidity_unit\": {\r\n                    \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n                  },\r\n                  \"pressure\": {\r\n                    \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n                  },\r\n                  \"pressure_unit\": {\r\n                    \"$lastUpdated\": \"2017-10-09T02:48:53.2792086Z\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n```\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-09-25 04:04:00", "commits": {"464c49a11ab81711824674892b6ddbb427ff74fd": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-10-07 00:47:50", "filteredCommits": [], "commitsDetails": [{"nameRev": "464c49a11ab81711824674892b6ddbb427ff74fd tags/2017-10-6~1", "commitMessage": "Fix issues #152 [allow Query without jobType and jobStatus], and #146 [Missing eTag on getTwin]\n", "commitParents": ["2932c48ab5bf01c066bd277f26fa967c2120cf56"], "spoonStatsSkippedReason": "", "commitHash": "464c49a11ab81711824674892b6ddbb427ff74fd", "authoredDateTime": "2017-10-05 09:46:45", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 70, "deletions": 0, "lines": 70, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/IotHubConnectionStringTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/DeviceTwin/devicetwin_requirements.md"}, {"insertions": 3, "deletions": 7, "lines": 10, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java"}, {"insertions": 21, "deletions": 14, "lines": 35, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/jobs/JobClientTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/jobs/jobclient_requirements.md"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/sdk/iothubconnectionstring_requirements.md"}, {"insertions": 8, "deletions": 2, "lines": 10, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java"}, {"insertions": 16, "deletions": 8, "lines": 24, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/IotHubConnectionString.java"}], "commitDateTime": "2017-10-05 09:52:23", "commitUser": "mamokarz", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwin(com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getNextDeviceTwin(com.microsoft.azure.sdk.iot.service.devicetwin.Query)"}], "spoonFilePath": "DeviceTwin.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextRetrievesCorrectly()"}, {"UPD": 1, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinSucceeds(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).3"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextRetrievesCorrectly().40"}], "spoonFilePath": "DeviceTwinTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 10, "MOV": 8, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.IotHubConnectionString.getUrlQuery(java.lang.String,java.lang.String)"}], "spoonFilePath": "IotHubConnectionString.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.hasNextThrowsIfQueryHasNextThrows(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).52"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.queryJobResponseThrowsOnNewQueryThrows(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).48"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextRetrievesCorrectly(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).54"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextThrowsOnQueryNextThrows(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).56"}, {"UPD": 1, "TOT": 11, "MOV": 8, "INS": 0, "DEL": 2, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.queryJobResponseThrowsOnNullType()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.hasNextSucceeds(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).49"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.hasNextSucceeds(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).50"}, {"UPD": 3, "TOT": 7, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.queryJobResponseThrowsOnNullStatus()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextThrowsIfNoNewElements(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).57"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextRetrievesCorrectly(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).53"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextThrowsOnNullQuery(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).55"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.queryJobResponseWithoutJobTypeAndJobJobStausSucceeds(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextThrowsIfNonStringRetrieved(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).58"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.hasNextThrowsOnNullQuery(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).51"}], "spoonFilePath": "JobClientTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 4, "INS": 4, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(com.microsoft.azure.sdk.iot.service.jobs.JobType,com.microsoft.azure.sdk.iot.service.jobs.JobStatus,java.lang.Integer)"}], "spoonFilePath": "JobClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.IotHubConnectionStringTest.getUrlQueryWithoutJobTypeSucceeds()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.IotHubConnectionStringTest.getUrlQueryWithoutJobStatusSucceeds()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.IotHubConnectionStringTest.getUrlQueryWithoutJobTypeAndJobStatusSucceeds()"}], "spoonFilePath": "IotHubConnectionStringTest.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/152", "ttf": 11.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Query job with empty jobType or jobStatus should return result", "statsSkippedReason": "", "user": "zhang-hua", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->Windows 10\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->JDK 1.8.0_141\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->Java SDK Dependency (com.microsoft.azure.sdk.iot:iot-deps:0.1.2)\r\n- **IDE:**: IntelliJ IDEA\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\n\r\nQuery job with empty jobType or jobStatus should return result, not just throw InvalidInputException.\r\nCurrent Java SDK only support non-null jobType and jobStatus parameters in Job client query. We can not retrieve all jobs without specify them.\r\n\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\npublic synchronized Query queryJobResponse(JobType jobType, JobStatus jobStatus, Integer pageSize) throws IOException, IotHubException {\r\nif (jobType == null || jobStatus == null)\r\n{\r\n//Codes_SRS_JOBCLIENT_25_041: [If the input parameters are null, the queryJobResponse shall throw IllegalArgumentException.]\r\nthrow new IllegalArgumentException(\"jobType and jobStatus cannot be null\");\r\n}\r\n...\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-09-14 11:51:42", "commits": {"7fc53adcadd0a56a3178864a103c5b54b2521f27": {"commitGHEventType": "referenced", "commitUser": "prmathur-microsoft"}}, "closed": "2017-12-21 21:26:50", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "7fc53adcadd0a56a3178864a103c5b54b2521f27", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "prmathur-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/148", "ttf": 98.00027777777778, "title": "BufferOverflowException and Java Heap Space full", "statsSkippedReason": "", "user": "MirkoBianchetti", "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi, i want to segnalate this.\r\nI have an app using IoTHub Java SDK and using AMQPS protocol.\r\nI'm sending many messages, I can't quantify how many exactly because i don't know the size of the payload, however i send one message/sec with a variable one from few bytes up to 100kb (I understand that internally the sdk split it in many messages).\r\nLooking at logs I have the java.nio.BufferoverflowException that is risen I suppose from AmqpsIotHubConnection.sendMessage because internally the function the proton engine has a limited bufferSize, that is doubled every BufferoverflowException rised. So if I understand, it isn't a problem, cause after N cycles the buffer will have the right size to accept my big message (it is better if that log doesn't appear cause fill all my logfile).\r\nThe second exception is blocking:\r\nIotHubSendTask - java.lang.OutOfMemoryError: Java heap space: Java heap space\r\nI think I had same problem when i tried to manage messages in my local db to bypass problems of internet down and/or power loss. I think the problem is when there is a period of down for IoT Hub connection and messages are collected in not limited queues (waitingMessages, inProgressMessages, receivedMessages, callbackList in AmqpsTransport class) and they can become very large. After that, you play move elements from a queue to another but, on big numbers, these operations keep much more busy the Garbage Collector until it explode with a Java Heap Space exception. \r\nI think it is the problem, can you investigate? Thanks\r\n\r\nBianchetti Mirko\r\n\r\nHere the logs\r\n\r\n> ERROR 14/09/2017 - 10:22:22.561 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:22.561 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:22.561 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:22.561 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:22.770 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:25.049 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:25.050 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:25.050 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:25.784 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:25.958 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:25.958 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:26.162 c.m.a.s.i.d.t.a.AmqpsIotHubConnection - java.nio.BufferOverflowException\r\nERROR 14/09/2017 - 10:22:26.566 c.m.a.s.i.d.t.IotHubSendTask - java.lang.OutOfMemoryError: Java heap space: Java heap space\r\nERROR 14/09/2017 - 10:22:38.966 c.m.a.s.i.d.t.IotHubSendTask - java.lang.OutOfMemoryError: Java heap space: Java heap space\r\nWARN  14/09/2017 - 10:22:40.532 c.m.a.s.i.d.Message - The message with messageid 1a700186-6d85-4955-9442-13873da16a49 expired on Thu Sep 14 10:22:39 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:40.956 c.m.a.s.i.d.Message - The message with messageid d43fbe72-e7f8-46db-95a3-9cdc3181ec64 expired on Thu Sep 14 10:22:40 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.166 c.m.a.s.i.d.Message - The message with messageid 346d58e0-2884-4c14-a5b3-3a9ae75f639b expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.166 c.m.a.s.i.d.Message - The message with messageid d5fdccc1-963b-4ab8-8643-88c39bae50a9 expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.369 c.m.a.s.i.d.Message - The message with messageid a597e4f1-12b3-47db-bb4e-1c1145e84453 expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.369 c.m.a.s.i.d.Message - The message with messageid 1d1c7955-23a3-4ddd-8f62-02da46a99199 expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.369 c.m.a.s.i.d.Message - The message with messageid b0042822-c176-48c2-adc8-2c4ffa4092c4 expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.582 c.m.a.s.i.d.Message - The message with messageid 3edb1aef-881a-4435-88ec-19500add51b6 expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.583 c.m.a.s.i.d.Message - The message with messageid 5f4fd5de-b549-4650-bee4-f3d7aa243b48 expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.583 c.m.a.s.i.d.Message - The message with messageid 2a49fcc7-580b-47c9-96b9-ec1299121c8a expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.583 c.m.a.s.i.d.Message - The message with messageid f5807041-4549-4f32-a152-d6c2ba6df499 expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nWARN  14/09/2017 - 10:22:41.583 c.m.a.s.i.d.Message - The message with messageid 2437b772-e4b6-4669-9135-c7e5e1e97a73 expired on Thu Sep 14 10:22:41 CEST 2017, method name is isExpired \r\nERROR 14/09/2017 - 10:22:45.642 c.m.a.s.i.d.t.IotHubSendTask - java.lang.OutOfMemoryError: Java heap space: Java heap space\r\nERROR 14/09/2017 - 10:22:46.896 c.m.a.s.i.d.t.IotHubSendTask - java.lang.OutOfMemoryError: Java heap space: Java heap space\r\nWARN  14/09/2017 - 10:22:48.520 c.m.a.s.i.d.Message - The message with messageid 9c5be491-ae46-400d-a26b-2a8cce143959 expired on Thu Sep 14 10:22:46 CEST 2017, method name is isExpired \r\nERROR 14/09/2017 - 10:26:57.370 c.m.a.s.i.d.t.IotHubReceiveTask - java.lang.OutOfMemoryError: Java heap space: Java heap space\r\nERROR 14/09/2017 - 10:28:19.572 c.m.a.s.i.d.t.IotHubReceiveTask - java.lang.OutOfMemoryError: Java heap space: Java heap space", "labels": ["bug"]}, {"created": "2017-09-13 05:58:21", "commits": {"464c49a11ab81711824674892b6ddbb427ff74fd": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-10-07 00:47:31", "filteredCommits": [], "commitsDetails": [{"nameRev": "464c49a11ab81711824674892b6ddbb427ff74fd tags/2017-10-6~1", "commitMessage": "Fix issues #152 [allow Query without jobType and jobStatus], and #146 [Missing eTag on getTwin]\n", "commitParents": ["2932c48ab5bf01c066bd277f26fa967c2120cf56"], "spoonStatsSkippedReason": "", "commitHash": "464c49a11ab81711824674892b6ddbb427ff74fd", "authoredDateTime": "2017-10-05 09:46:45", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 70, "deletions": 0, "lines": 70, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/IotHubConnectionStringTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/DeviceTwin/devicetwin_requirements.md"}, {"insertions": 3, "deletions": 7, "lines": 10, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobClient.java"}, {"insertions": 21, "deletions": 14, "lines": 35, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/jobs/JobClientTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/jobs/jobclient_requirements.md"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/sdk/iothubconnectionstring_requirements.md"}, {"insertions": 8, "deletions": 2, "lines": 10, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java"}, {"insertions": 16, "deletions": 8, "lines": 24, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/IotHubConnectionString.java"}], "commitDateTime": "2017-10-05 09:52:23", "commitUser": "mamokarz", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getTwin(com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin.getNextDeviceTwin(com.microsoft.azure.sdk.iot.service.devicetwin.Query)"}], "spoonFilePath": "DeviceTwin.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextRetrievesCorrectly()"}, {"UPD": 1, "TOT": 6, "MOV": 3, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.getTwinSucceeds(tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice).3"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinTest.nextRetrievesCorrectly().40"}], "spoonFilePath": "DeviceTwinTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 10, "MOV": 8, "INS": 2, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.IotHubConnectionString.getUrlQuery(java.lang.String,java.lang.String)"}], "spoonFilePath": "IotHubConnectionString.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.hasNextThrowsIfQueryHasNextThrows(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).52"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.queryJobResponseThrowsOnNewQueryThrows(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).48"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextRetrievesCorrectly(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).54"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextThrowsOnQueryNextThrows(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).56"}, {"UPD": 1, "TOT": 11, "MOV": 8, "INS": 0, "DEL": 2, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.queryJobResponseThrowsOnNullType()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.hasNextSucceeds(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).49"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.hasNextSucceeds(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).50"}, {"UPD": 3, "TOT": 7, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.queryJobResponseThrowsOnNullStatus()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextThrowsIfNoNewElements(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).57"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextRetrievesCorrectly(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).53"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextThrowsOnNullQuery(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).55"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.queryJobResponseWithoutJobTypeAndJobJobStausSucceeds(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.nextThrowsIfNonStringRetrieved(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).58"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobClientTest.hasNextThrowsOnNullQuery(tests.unit.com.microsoft.azure.sdk.iot.service.jobs.Query).51"}], "spoonFilePath": "JobClientTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 4, "INS": 4, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.jobs.JobClient.queryJobResponse(com.microsoft.azure.sdk.iot.service.jobs.JobType,com.microsoft.azure.sdk.iot.service.jobs.JobStatus,java.lang.Integer)"}], "spoonFilePath": "JobClient.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.IotHubConnectionStringTest.getUrlQueryWithoutJobTypeSucceeds()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.IotHubConnectionStringTest.getUrlQueryWithoutJobStatusSucceeds()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.IotHubConnectionStringTest.getUrlQueryWithoutJobTypeAndJobStatusSucceeds()"}], "spoonFilePath": "IotHubConnectionStringTest.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/146", "ttf": 23.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Missing eTag property when getting device twin", "statsSkippedReason": "", "user": "zhang-hua", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nETag property should be parsed and set for DeviceTwinDevice at:\r\ncom.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin:\r\n    public void getTwin(DeviceTwinDevice device) throws IotHubException, IOException{}\r\n\r\nhttps://github.com/Azure/azure-iot-sdk-java/blob/master/service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java#L103\r\n\r\nadding this line: \r\ndevice.setETag(device.getTwinParser().getETag());\r\n\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-09-07 17:12:19", "commits": {"4173315fa8f27abbd969eb7d68a22f0bb03cd2a7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "8818a2f2e0a7a7191a69fbeefdd61529a44ce968": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "c26822306660c1f612157a4aec950aae7ed94696": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "a4f98bad82877e514d871cc6f595d9ddf080313a": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "closed": "2017-10-24 17:42:29", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "4173315fa8f27abbd969eb7d68a22f0bb03cd2a7", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8818a2f2e0a7a7191a69fbeefdd61529a44ce968", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "c26822306660c1f612157a4aec950aae7ed94696", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a4f98bad82877e514d871cc6f595d9ddf080313a", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/145", "ttf": 47.000277777777775, "title": "ContinuationToken exposure for DeviceTwin ", "statsSkippedReason": "", "user": "timlaverty", "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 4, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Preconfigured solutions work, Java version of the IoTHubManager.\r\n\r\n# Description of the issue:\r\nIotHub Java SDK 1.5.22 doesn't expose continuationToken functions of device twin query to the client. You can only use DeviceTwin methods hasNextDeviceTwin and getNextDeviceTwin to query device twins. The request and response continuationToken are private members encapsulated in Query. This is not  equivalent to IotHub dotnet SDK. We need the Java SDK to expose this functionality to the client.\r\n\r\n\r\n# Code sample exhibiting the issue:\r\ncom.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin\r\n-          public synchronized DeviceTwinDevice getNextDeviceTwin(Query deviceTwinQuery) throws IOException, IotHubException, NoSuchElementException\r\n-          public synchronized boolean hasNextDeviceTwin(Query deviceTwinQuery) throws IotHubException, IOException\r\n-          \u2026\r\n \r\ncom.microsoft.azure.sdk.iot.service.devicetwin.Query\r\n-          continueQuery\r\n-          getContinuationToken\r\n-          \u2026\r\n\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-09-07 07:31:54", "commits": {"fd2b9ccb75767e142c921cf81aaafb3bf1dd4528": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}, "8503beed7b2bac0740a0776ca4864de49c21158e": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-09-27 18:57:44", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "fd2b9ccb75767e142c921cf81aaafb3bf1dd4528", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}, {"nameRev": "8503beed7b2bac0740a0776ca4864de49c21158e tags/2017-9-25~2", "commitMessage": "Add a new constructor to DeviceTwinDevice without deviceId (issue #143), add unknown jobtype (issue #144), and remove IotHubReactor#run test from AmqpsIotHubConnectionTest.openTriggersProtonReactor that was causing intermittent missing invocation fail\n", "commitParents": ["a312c64fba2179ccfdb864e9ad33fb5a603df5b9"], "spoonStatsSkippedReason": "", "commitHash": "8503beed7b2bac0740a0776ca4864de49c21158e", "authoredDateTime": "2017-09-19 11:23:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 9, "lines": 9, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnectionTest.java"}, {"insertions": 86, "deletions": 9, "lines": 95, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/jobs/JobResultTest.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobType.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/DeviceTwin/devicetwindevice_requirements.md"}, {"insertions": 17, "deletions": 7, "lines": 24, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDevice.java"}, {"insertions": 25, "deletions": 1, "lines": 26, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDeviceTest.java"}], "commitDateTime": "2017-09-19 11:23:05", "commitUser": "mamokarz", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 3, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice"}], "spoonFilePath": "DeviceTwinDevice.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.jobs.JobType"}], "spoonFilePath": "JobType.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageAcknowledgesProperlyBasedOnMessageResult().36"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteClose().67"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onDeliveryReceive().58"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteOpen().64"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeClosesAllProtonVariablesAndStopsProtonReactor().29"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionBoundNoWebSockets().40"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnectFailed().54"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkFlow().62"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openTriggersProtonReactor(org.apache.qpid.proton.reactor.Reactor)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorInit().44"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionBoundNoWebSockets().41"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionBoundWebSockets().42"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnect().53"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onDeliverySend().59"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteOpen().63"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkInit().68"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnectFailed().56"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportErrorReconnectionCounterRotate().74"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeThrowsIfShutdownThrows().31"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnectFailed().55"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportError().70"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnect().51"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeThrowsIfWaitLockThrows().24"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalNoReconnect().50"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorInitWithWebSockets().47"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeThrowsIfShutdownThrows().30"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionBoundWebSockets().43"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkFlow().61"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageAcknowledgesProperlyBasedOnMessageResult().37"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openWaitsForReactorToBeReadyAndForEnoughLinkCreditToBeAvailable().21"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeDoesNothingIfTheConnectionWasNeverOpened().25"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportError().71"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessage().32"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageDoublesBufferIfEncodeThrowsBufferOverflowException().34"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorInit().45"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openTriggersProtonReactor(org.apache.qpid.proton.reactor.Reactor).20"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeClosesAllProtonVariablesAndStopsProtonReactor().28"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeDoesNothingIfTheConnectionWasNeverOpened().26"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportErrorReconnectionCounterRotate().72"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageReturnsFalseIfAcknowledgeThrows().35"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openWaitsForReactorToBeReadyAndForEnoughLinkCreditToBeAvailable().22"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalNoReconnect().48"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorInitWithWebSockets().46"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportError().69"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteClose().66"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionInit().39"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnect().52"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteClose().65"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalNoReconnect().49"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageDoublesBufferIfEncodeThrowsBufferOverflowException().33"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onDeliveryReceive().57"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openFailsIfConnectionIsNotOpenedInTime().23"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.baseExpectations().75"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeClosesAllProtonVariablesAndStopsProtonReactor().27"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionInit().38"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportErrorReconnectionCounterRotate().73"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onDeliverySend().60"}], "spoonFilePath": "AmqpsIotHubConnectionTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.constructorStoreJsonContent()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.gettersTwinContent()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.constructorParseJson()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.gettersMethodContent(com.microsoft.azure.sdk.iot.deps.serializer.MethodParser)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.constructorStoreJsonContentNoTags()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.toStringReturnJobTypeUnknown()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.JobsResponseParserExpectations(java.lang.String,com.microsoft.azure.sdk.iot.deps.serializer.TwinParser,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.util.Date,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.lang.String).1"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.JobsResponseParserExpectations(java.lang.String,com.microsoft.azure.sdk.iot.deps.serializer.TwinParser,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.util.Date,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser).1"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.toStringReturnClassContent()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.JobsResponseParserExpectations(java.lang.String,com.microsoft.azure.sdk.iot.deps.serializer.TwinParser,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.util.Date,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.gettersEmptyOutcome(com.microsoft.azure.sdk.iot.deps.serializer.MethodParser)"}], "spoonFilePath": "JobResultTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDeviceTest.constructorCreatesNewDevice()"}], "spoonFilePath": "DeviceTwinDeviceTest.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/144", "ttf": 20.00027777777778, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "Unknown job type is returned by IotHub response but not supported in JobType enumeration", "statsSkippedReason": "", "user": "zhang-hua", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->Windows 10\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->JDK 1.8.0_141\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->Java SDK Dependency (com.microsoft.azure.sdk.iot:iot-deps:0.1.2)\r\n- **IDE:**: IntelliJ IDEA\r\n\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nWhen the jobs are retrieved from IoTHub, some jobs have \u2018unknown\u2019 job type which always fails JobClient.getJob and getNextJob method.\r\ncom.microsoft.azure.sdk.iot.service.jobs.JobType\r\npublic enum JobType\r\n{\r\n    // missing unknown value will fail JobClient to get jobs\r\n    //unknown,  \r\n    scheduleDeviceMethod,\r\n    scheduleUpdateTwin\r\n}\r\n\r\nError Message:\r\njava.lang.IllegalArgumentException: No enum constant com.microsoft.azure.sdk.iot.service.jobs.JobType.unknown\r\n                at java.lang.Enum.valueOf(Enum.java:238)\r\n                at com.microsoft.azure.sdk.iot.service.jobs.JobType.valueOf(JobType.java:8)\r\n                at com.microsoft.azure.sdk.iot.service.jobs.JobResult.<init>(JobResult.java:125)\r\n                at com.microsoft.azure.sdk.iot.service.jobs.JobClient.getJob(JobClient.java:240)\r\n              \r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-09-07 07:29:10", "commits": {"fd2b9ccb75767e142c921cf81aaafb3bf1dd4528": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}, "8503beed7b2bac0740a0776ca4864de49c21158e": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-09-27 18:57:59", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "fd2b9ccb75767e142c921cf81aaafb3bf1dd4528", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}, {"nameRev": "8503beed7b2bac0740a0776ca4864de49c21158e tags/2017-9-25~2", "commitMessage": "Add a new constructor to DeviceTwinDevice without deviceId (issue #143), add unknown jobtype (issue #144), and remove IotHubReactor#run test from AmqpsIotHubConnectionTest.openTriggersProtonReactor that was causing intermittent missing invocation fail\n", "commitParents": ["a312c64fba2179ccfdb864e9ad33fb5a603df5b9"], "spoonStatsSkippedReason": "", "commitHash": "8503beed7b2bac0740a0776ca4864de49c21158e", "authoredDateTime": "2017-09-19 11:23:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 9, "lines": 9, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnectionTest.java"}, {"insertions": 86, "deletions": 9, "lines": 95, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/jobs/JobResultTest.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/jobs/JobType.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "service/iot-service-client/devdoc/requirement_docs/com/microsoft/azure/iot/service/DeviceTwin/devicetwindevice_requirements.md"}, {"insertions": 17, "deletions": 7, "lines": 24, "filePath": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDevice.java"}, {"insertions": 25, "deletions": 1, "lines": 26, "filePath": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDeviceTest.java"}], "commitDateTime": "2017-09-19 11:23:05", "commitUser": "mamokarz", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 3, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice"}], "spoonFilePath": "DeviceTwinDevice.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.service.jobs.JobType"}], "spoonFilePath": "JobType.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageAcknowledgesProperlyBasedOnMessageResult().36"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteClose().67"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onDeliveryReceive().58"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteOpen().64"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeClosesAllProtonVariablesAndStopsProtonReactor().29"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionBoundNoWebSockets().40"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnectFailed().54"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkFlow().62"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openTriggersProtonReactor(org.apache.qpid.proton.reactor.Reactor)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorInit().44"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionBoundNoWebSockets().41"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionBoundWebSockets().42"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnect().53"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onDeliverySend().59"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteOpen().63"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkInit().68"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnectFailed().56"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportErrorReconnectionCounterRotate().74"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeThrowsIfShutdownThrows().31"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnectFailed().55"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportError().70"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnect().51"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeThrowsIfWaitLockThrows().24"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalNoReconnect().50"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorInitWithWebSockets().47"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeThrowsIfShutdownThrows().30"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionBoundWebSockets().43"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkFlow().61"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageAcknowledgesProperlyBasedOnMessageResult().37"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openWaitsForReactorToBeReadyAndForEnoughLinkCreditToBeAvailable().21"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeDoesNothingIfTheConnectionWasNeverOpened().25"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportError().71"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessage().32"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageDoublesBufferIfEncodeThrowsBufferOverflowException().34"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorInit().45"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openTriggersProtonReactor(org.apache.qpid.proton.reactor.Reactor).20"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeClosesAllProtonVariablesAndStopsProtonReactor().28"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeDoesNothingIfTheConnectionWasNeverOpened().26"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportErrorReconnectionCounterRotate().72"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageReturnsFalseIfAcknowledgeThrows().35"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openWaitsForReactorToBeReadyAndForEnoughLinkCreditToBeAvailable().22"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalNoReconnect().48"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorInitWithWebSockets().46"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportError().69"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteClose().66"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionInit().39"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalReconnect().52"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onLinkRemoteClose().65"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onReactorFinalNoReconnect().49"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.sendMessageDoublesBufferIfEncodeThrowsBufferOverflowException().33"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onDeliveryReceive().57"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.openFailsIfConnectionIsNotOpenedInTime().23"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.baseExpectations().75"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.closeClosesAllProtonVariablesAndStopsProtonReactor().27"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onConnectionInit().38"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onTransportErrorReconnectionCounterRotate().73"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnectionTest.onDeliverySend().60"}], "spoonFilePath": "AmqpsIotHubConnectionTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.constructorStoreJsonContent()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.gettersTwinContent()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.constructorParseJson()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.gettersMethodContent(com.microsoft.azure.sdk.iot.deps.serializer.MethodParser)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.constructorStoreJsonContentNoTags()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.toStringReturnJobTypeUnknown()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.JobsResponseParserExpectations(java.lang.String,com.microsoft.azure.sdk.iot.deps.serializer.TwinParser,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.util.Date,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.lang.String).1"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.JobsResponseParserExpectations(java.lang.String,com.microsoft.azure.sdk.iot.deps.serializer.TwinParser,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.util.Date,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser).1"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.toStringReturnClassContent()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.JobsResponseParserExpectations(java.lang.String,com.microsoft.azure.sdk.iot.deps.serializer.TwinParser,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.util.Date,com.microsoft.azure.sdk.iot.deps.serializer.MethodParser,java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.jobs.JobResultTest.gettersEmptyOutcome(com.microsoft.azure.sdk.iot.deps.serializer.MethodParser)"}], "spoonFilePath": "JobResultTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDeviceTest.constructorCreatesNewDevice()"}], "spoonFilePath": "DeviceTwinDeviceTest.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/143", "ttf": 20.00027777777778, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "Null device id should be allowed for DeviceTwinDevice object when scheduling twin job", "statsSkippedReason": "", "user": "zhang-hua", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->Windows 10\r\n\r\n\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->JDK 1.8.0_141\r\n\r\n\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version --> Java Service Client (com.microsoft.azure.sdk.iot:iot-service-client:1.9.24)\r\n\r\n- **IDE**:  IntelliJ IDEA\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nIt make sense to allow schedule a twin update job without specifying Device Id in DeviceTwinDevice object because query condition will filter the target devices. But current it is not allowed and will fail with IllegalArgumentException thrown in DeviceTwinDevice  constructor.\r\n\r\nsee the code below:\r\n\r\n public DeviceTwinDevice(String deviceId) throws IllegalArgumentException\r\n    {\r\n        if (deviceId == null || deviceId.length() == 0)\r\n        {\r\n            /*\r\n            **Codes_SRS_DEVICETWINDEVICE_25_002: [** The constructor shall throw IllegalArgumentException if the input string is empty or null.**]**\r\n             */\r\n            throw new IllegalArgumentException(\"Device ID cannot be null or empty\");\r\n        }\r\n...\r\n}\r\n\r\n\r\nError message:\r\njava.lang.IllegalArgumentException: Device ID cannot be null or empty\r\n                at com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.<init>(DeviceTwinDevice.java:41)\r\n\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-09-04 09:42:42", "commits": {"3bf250a8ab3cc6ed8123aec32ce75c3ac6f954b4": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "0b7b4da7a67e858a18b9ce1449a64652b0d17093": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "1c0943f98d1fedf429e8639695956489e8ee7c4e": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "2c5600d70c0c556006cf9f4bf75ef2a70c8db6a7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "f9ea20a41e6b8cfd1b69b3042e6dc1376548a704": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "97cd9d53c6972c705f7c192a8c0a91932628c3a7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "a9b6a4c8cf6fb4617f3a959c97b876c991562984": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "3a6e5e9985dc80d0d6f196b5fcb5213c4a719f6c": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "677d4a804a29d5d23982ed103877e2afc67d2196": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "863ce6c69f9b4602bf69eb310a0746cce4e5dbec": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "c0725db9df19b683bb43a2e650c660266b9a48dc": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "f303d63090d10d33677b3e5ccbe28c2961f82238": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "numCommits": 3, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect()", "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.close()"], "closed": "2018-03-26 19:06:50", "filteredCommits": ["97cd9d53c6972c705f7c192a8c0a91932628c3a7", "677d4a804a29d5d23982ed103877e2afc67d2196", "3a6e5e9985dc80d0d6f196b5fcb5213c4a719f6c"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "3bf250a8ab3cc6ed8123aec32ce75c3ac6f954b4", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "0b7b4da7a67e858a18b9ce1449a64652b0d17093", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "1c0943f98d1fedf429e8639695956489e8ee7c4e", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "2c5600d70c0c556006cf9f4bf75ef2a70c8db6a7", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "f9ea20a41e6b8cfd1b69b3042e6dc1376548a704", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "97cd9d53c6972c705f7c192a8c0a91932628c3a7 tags/2018-4-13~38", "commitMessage": "fix(iot-dev): Fix bug where Mqtt Conn thread survives device client close\n\ngithub #141\n", "commitParents": ["30d31756995225b50af96d2b91699e50fb34177e"], "spoonStatsSkippedReason": "", "commitHash": "97cd9d53c6972c705f7c192a8c0a91932628c3a7", "authoredDateTime": "2018-02-26 13:10:21", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 18, "lines": 34, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java"}, {"insertions": 62, "deletions": 7, "lines": 69, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTest.java"}, {"insertions": 4, "deletions": 2, "lines": 6, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqtt_requirements.md"}], "commitDateTime": "2018-02-26 16:00:15", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishThrowsExceptionWhenPublishTopicIsNull().26"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishThrowsIOExceptionWhenAnyOfTheAsyncMethodsThrow().23"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.connectionLostAttemptsToReconnectAgainIfConnectFails().46"}, {"UPD": 2, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishThrowsExceptionWhenPayloadIsNull().27"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.subscribeFailsWhenNotConnected().31"}, {"UPD": 2, "TOT": 9, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.disconnectSucceeds()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.disconnectDoesNothingWhenNotConnected().17"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveReturnsNullMessageWhenParseTopicReturnsNull()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.disconnectDoesNothingWhenNotConnected().18"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.subscribeSucceeds().29"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveThrowsIOExceptionWhenParsePayloadReturnsNull()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveThrowsExceptionWhenConfigurationIsNotSet()"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveFailureFromInvalidPropertyStringThrowsIllegalArgumentException()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveFailureFromInvalidPropertyStringThrowsIllegalArgumentException().48"}, {"UPD": 0, "TOT": 4, "MOV": 4, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.subscribeFailsWhenNotConnected()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishThrowsIOExceptionWhenAnyOfTheAsyncMethodsThrow().24"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccess().35"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccessNoCustomProperties().50"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccessCustomPropertyHasUnusualCharacters().51"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishThrowsExceptionWhenPublishTopicIsNull().25"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveFailureFromInvalidPropertyStringThrowsIllegalArgumentException().47"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.subscribeThrowsIOExceptionWhenMqttAsyncThrows().33"}, {"UPD": 0, "TOT": 2, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveReturnsNullMessageWhenParseTopicReturnsNull().38"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccessCustomPropertyHasUnusualCharacters()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishFailsWhenNotConnected()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.connectionLostAttemptsToReconnectWithUserSuppliedSASTokenAlreadyExpired().44"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishSucceedsWhenConnected().19"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveThrowsIOExceptionWhenParsePayloadReturnsNull().39"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.disconnectClosesMqttClient()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.subscribeSucceeds().30"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.disconnectDoesNothingWhenNotConnected()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.connectionLostAttemptsToReconnectWithUserSuppliedSharedKeyBasedSASTokenAlreadyExpired().43"}, {"UPD": 0, "TOT": 7, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.subscribeSucceeds()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishFailsWhenNotConnected().20"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishWithDifferentTopicsFromDifferentConcreteClassSucceeds().22"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.messageArrivedAddsToQueue().41"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccess().36"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccess()"}, {"UPD": 1, "TOT": 11, "MOV": 9, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishThrowsExceptionWhenPayloadIsNull()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.connectionLostAttemptsToReconnectWithSASTokenStillValid().42"}, {"UPD": 3, "TOT": 10, "MOV": 5, "INS": 0, "DEL": 2, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.disconnectSucceeds().16"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishFailsWhenConnectionBrokenWhilePublishing().21"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveReturnsNullMessageWhenParseTopicReturnsNull().37"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveThrowsExceptionWhenConfigurationIsNotSet().40"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishThrowsExceptionWhenPublishTopicIsNull()"}, {"UPD": 0, "TOT": 7, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.subscribeThrowsIOExceptionWhenMqttAsyncThrows()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.connectionLostAttemptsToReconnectAgainIfConnectFails().45"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.receiveSuccessNoCustomProperties().49"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.publishThrowsIOExceptionWhenAnyOfTheAsyncMethodsThrow()"}], "spoonFilePath": "MqttTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect()"}], "spoonFilePath": "Mqtt.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a9b6a4c8cf6fb4617f3a959c97b876c991562984", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "3a6e5e9985dc80d0d6f196b5fcb5213c4a719f6c tags/2018-4-13~32", "commitMessage": "fix(iot-dev): Fix bug where Mqtt threads survive unsuccessful Device Client close\n\nGithub issue #141\n", "commitParents": ["3947a89958e60a0f085b03761d198966eefdb7e0"], "spoonStatsSkippedReason": "", "commitHash": "3a6e5e9985dc80d0d6f196b5fcb5213c4a719f6c", "authoredDateTime": "2018-03-05 15:13:35", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 31, "deletions": 0, "lines": 31, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnectionTest.java"}, {"insertions": 19, "deletions": 9, "lines": 28, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqttiothubconnection_requirements.md"}], "commitDateTime": "2018-03-19 15:29:02", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.baseExpectations().52"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.openExpectations().53"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnectionTest.closeThrowsIOExceptionSetsStateToCLOSED()"}], "spoonFilePath": "MqttIotHubConnectionTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 12, "MOV": 6, "INS": 5, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.close()"}], "spoonFilePath": "MqttIotHubConnection.java"}]}, {"nameRev": "677d4a804a29d5d23982ed103877e2afc67d2196 tags/2018-2-23~5", "commitMessage": "fix(iot-dev): Fix bug where mqtt threads survive beyond device client close\n\ngithub bug #141\n", "commitParents": ["54a75c40407edb8adb1490f8a2a61979d1769861"], "spoonStatsSkippedReason": "", "commitHash": "677d4a804a29d5d23982ed103877e2afc67d2196", "authoredDateTime": "2018-02-21 10:13:51", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 0, "lines": 2, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTest.java"}], "commitDateTime": "2018-02-21 10:13:51", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTest.disconnectSucceeds().16"}], "spoonFilePath": "MqttTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.mqtt.Mqtt.disconnect()"}], "spoonFilePath": "Mqtt.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "863ce6c69f9b4602bf69eb310a0746cce4e5dbec", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "c0725db9df19b683bb43a2e650c660266b9a48dc", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "f303d63090d10d33677b3e5ccbe28c2961f82238", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/141", "ttf": 203.00027777777777, "gitStatsSummary": {"insertions": 37.0, "deletions": 27.0, "lines": 64.0, "gitFilesChange": 2}, "title": "[Device SDK / MQTT] Running threads after closeNow()", "statsSkippedReason": "", "user": "ApiO", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 1.0, "spoonMethodsChanged": 2, "TOT": 18.0, "MOV": 9.0, "INS": 7.0, "DEL": 1.0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 9, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi there! \r\n\r\n- **OS and version used**: Win10\r\n- **Java runtime used**: JDK 1.7.0_40\r\n- **SDK version used**:  iot-device-client,  v1.4.33\r\n- **IDE**: Eclipse Neon.3\r\n\r\n# Description of the issue\r\n\r\nUsing mqtt when I call closeNow function of DeviceClient I see that some threads are still alive, why ? I expect every thread to be killed.\r\n\r\n# Scenario\r\n- I instanciate a DeviceClient\r\n- subscribe to C2D\r\n- open the connection\r\n- subscribe to twins\r\n- wait some sec\r\n- close connection with closeNow\r\n- expect to see my application to terminate : but no.\r\n\r\nI'm using mqtt as transport. \r\nI have slow conection from -INF up to 200kb\\sec.\r\n\r\n**Console output**:\r\n\r\n> 190969 [main] INFO com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin  - Pending 1 responses from IotHub yet unsubscribed stop\r\n> 190970 [main] INFO com.microsoft.azure.sdk.iot.device.DeviceClient  - Connection closed with success, method name is closeNow \r\n\r\nHere is the debug view when I reach the end of my application:\r\n\r\n![image](https://user-images.githubusercontent.com/4429857/30020345-c7b6d88e-9163-11e7-89a8-af01a01f6290.png)\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-08-14 08:30:41", "commits": {"c782c89521adba98ea98871820dc85aed0f1d423": {"commitGHEventType": "referenced", "commitUser": "prmathur-microsoft"}}, "numCommits": 0, "closed": "2017-09-07 08:27:20", "filteredCommits": [], "commitsDetails": [{"nameRev": "c782c89521adba98ea98871820dc85aed0f1d423 tags/2017-9-8~4", "commitMessage": "Isolate Mqtt connection to enable multiple clients support multiple\nconnections (Fix #125, #136)\n", "commitParents": ["35647317a30ee686a43a64bbb4b4f5ae5eb05c3a"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "c782c89521adba98ea98871820dc85aed0f1d423", "authoredDateTime": "2017-08-25 11:25:54", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 178, "deletions": 111, "lines": 289, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnectionTest.java"}, {"insertions": 298, "deletions": 0, "lines": 298, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttConnectionTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/TopicParserTest.java"}, {"insertions": 11, "deletions": 21, "lines": 32, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java"}, {"insertions": 88, "deletions": 0, "lines": 88, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqttconnection_requirements.md"}, {"insertions": 39, "deletions": 48, "lines": 87, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessagingTest.java"}, {"insertions": 11, "deletions": 8, "lines": 19, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java"}, {"insertions": 47, "deletions": 185, "lines": 232, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java"}, {"insertions": 75, "deletions": 69, "lines": 144, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java"}, {"insertions": 4, "deletions": 25, "lines": 29, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqtt_requirements.md"}, {"insertions": 513, "deletions": 933, "lines": 1446, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransportTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceMethod.java"}, {"insertions": 48, "deletions": 28, "lines": 76, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceMethodTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java"}, {"insertions": 162, "deletions": 0, "lines": 162, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttConnection.java"}], "commitDateTime": "2017-09-05 17:08:29", "commitUser": "prmathur-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/136", "ttf": 23.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Incorrect IoTHub.ConnectionDeviceId in events  ", "statsSkippedReason": "", "user": "nzhechev-bosch", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "- **OS and version used:** Windows 7\r\n\r\n- **Java runtime used:** Java(TM) SE Runtime Environment (build 1.8.0_144-b01)\r\n\r\n- **SDK version used:** iot-device-client:1.3.32, iot-service-client:1.7.23\r\n\r\n# Description of the issue:\r\nIt seems that when there are more than one `DeviceClient` objects sending events concurrently through  `sendEventAsync` method all received messages  on the cloud have the same `IoTHub.ConnectionDeviceId` property, regardless of which device actually sent the message.\r\n\r\nAttached is a sample application ([events-test.zip](https://github.com/Azure/azure-iot-sdk-java/files/1221608/events-test.zip)) that creates two devices and starts sending events from two threads (one for each  `DeviceClient`) at 2 second intervals until `enter`is pressed. The messages are in JSON format with two properties - `deviceId` and `timestamp`.\r\n\r\nIn Azure Cloud there is a Stream Analytics job with input from IoT Hub from which I sample for 1 minute. \r\nThe attached [samples.zip](https://github.com/Azure/azure-iot-sdk-java/files/1221648/samples.zip) contains the outputs from two queries - `select *` and (for easier reading)  `select deviceid, iothub.ConnectionDeviceId` - from which is visible that, no matter which `DeviceClient` sends the messages the `ConnectionDeviceId` property is `device-A`.\r\n\r\n# Code sample exhibiting the issue:\r\n[events-test.zip](https://github.com/Azure/azure-iot-sdk-java/files/1221608/events-test.zip)\r\n\r\n# Console log of the issue:\r\n[app-log.TXT](https://github.com/Azure/azure-iot-sdk-java/files/1221653/app-log.TXT)\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-08-10 13:39:38", "commits": {"4173315fa8f27abbd969eb7d68a22f0bb03cd2a7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "a4f98bad82877e514d871cc6f595d9ddf080313a": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "8818a2f2e0a7a7191a69fbeefdd61529a44ce968": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "c26822306660c1f612157a4aec950aae7ed94696": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "03789faba3c51ca369065265e47c75a975404627": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 0, "closed": "2017-10-24 17:42:57", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "4173315fa8f27abbd969eb7d68a22f0bb03cd2a7", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "03789faba3c51ca369065265e47c75a975404627 tags/2017-12-2~65", "commitMessage": "Fix issues #158 and #134. Twin accepts 5 leves of nested properties with metadata.\n", "commitParents": ["061ccff5ec4ccae7b31e972bb08267cd06a4172c"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "03789faba3c51ca369065265e47c75a975404627", "authoredDateTime": "2017-10-18 15:47:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadNotificationParser.java"}, {"insertions": 38, "deletions": 10, "lines": 48, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinProperty.java"}, {"insertions": 37, "deletions": 1, "lines": 38, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinParser.java"}, {"insertions": 70, "deletions": 13, "lines": 83, "filePath": "deps/devdoc/requirement_docs/com/microsoft/azure/sdk/iot/deps/serializer/parserutility.md"}, {"insertions": 123, "deletions": 12, "lines": 135, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtility.java"}, {"insertions": 304, "deletions": 21, "lines": 325, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtilityTest.java"}, {"insertions": 29, "deletions": 0, "lines": 29, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinTags.java"}, {"insertions": 124, "deletions": 6, "lines": 130, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/TwinParserTest.java"}, {"insertions": 21, "deletions": 3, "lines": 24, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinProperties.java"}], "commitDateTime": "2017-10-19 15:47:08", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8818a2f2e0a7a7191a69fbeefdd61529a44ce968", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "c26822306660c1f612157a4aec950aae7ed94696", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a4f98bad82877e514d871cc6f595d9ddf080313a", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/134", "ttf": 75.00027777777778, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "title": "Cannot get properties at 4th nested level in DeviceTwin", "statsSkippedReason": "", "user": "gbidsilva", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 4, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Env. Details:\r\nSDK Used : Azure Service SDK\r\n\r\n```\r\n<dependency>\r\n\t<groupId>com.microsoft.azure.sdk.iot</groupId>\r\n\t<artifactId>iot-service-client</artifactId>\r\n\t<version>1.6.23</version>\r\n</dependency>\r\n```\r\nOn\r\nJava 1.8 + Cent OS (Linux)\r\n\r\nHi Team,\r\n\r\nI am facing some issues in retrieving Device Twin through Java Service SDK.\r\nAccording to the Device Twin documentation available at : https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins , we can have a Twin JSON structures up to 5 nested levels in Desired and Reported properties in DeviceTwin JSON.\r\nThe line which explains this is as follows,\r\n\"All JSON objects in tags, desired, and reported properties can have a maximum depth of 5\".\r\n\r\nI have following JSON structure in my Device Twin which is having 4 nested levels in Device Twins' reported section (I have also marked the respective levels in it too).\r\n\r\n```\r\n{\r\n  \"deviceId\": \"5253b83b4333\",\r\n  \"etag\": \"AAAAAAAE=\",  \r\n  \"properties\": { \r\n    \"desired\": { \r\n      \"$version\": 1\r\n    },\r\n    \"reported\": { -> Level 1\r\n      \"alerts\": { -> Level 2\r\n        \"alert_1\": { -> Level 3\r\n          \"alertCode\": \"alert_1\",\r\n          \"secondaryCode\": \"\",\r\n          \"variables\": { -> Level 4\r\n            \"Summary\": \"alert summary\"\r\n          },\r\n          \"alertStatus\": \"WARN\"          \r\n        }\r\n      },     \r\n      \"$version\": 2\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nBut, this cannot be retrieved by using `com.microsoft.azure.sdk.iot.service.devicetwin.getTwin()` method.\r\nI am getting the following exception when execute above method to retrieve above device twin.\r\n```\r\nMalformed Json: exceed 5 levels\r\n```\r\n\r\nThis should be a valid Twin JSON and it should also be retrievable because, I can see it in the device twin explore in Azure therefore, if this is not a valid one then I should not be able to push it to the device twin anyway.\r\n\r\nAppreciate your help on this.\r\nThanks.\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-08-04 18:43:27", "commits": {"199e106b70ac758b619f125c54799d75b7ef3926": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 1, "closed": "2017-09-11 20:59:18", "filteredCommits": ["199e106b70ac758b619f125c54799d75b7ef3926"], "commitsDetails": [{"nameRev": "199e106b70ac758b619f125c54799d75b7ef3926 tags/2017-9-8~7^2", "commitMessage": "Fix parser for Device Twin callback when JSON contains submaps (issue #133)\n", "commitParents": ["ecb38cf84481cf1ede6d5bb1e1304bb2f6a0e0ba"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "199e106b70ac758b619f125c54799d75b7ef3926", "authoredDateTime": "2017-08-29 09:53:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 4, "lines": 8, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinProperty.java"}, {"insertions": 15, "deletions": 0, "lines": 15, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/Helpers.java"}, {"insertions": 174, "deletions": 433, "lines": 607, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/TwinParserTest.java"}], "commitDateTime": "2017-08-29 13:46:23", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/133", "ttf": 38.000277777777775, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "title": "Cannot get JSON or Object structure from Device Twin desired property in device SDK", "statsSkippedReason": "", "user": "davesters", "changesInPackagesGIT": ["deps/src/main/java/com/microsoft/azure/sdk/iot/deps"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** OSX 10.12.1 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** JDK 1.8.0_131 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.3.32 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\n\r\nIssue #115 seems to still be affecting the device SDK. I am not sure if the fix was only done for the service SDK's `getTwin()` method, but I am seeing the same issue when receiving desired properties via the `PropertyCall` callback.\r\n\r\nWhen I have a JSON object set as the value for a desired property. I comes back as a string in the `PropertyCall` callback, but it is some `toString()` version, and not a properly formed JSON string. So I am unable to deserialize it into a POJO. As a workaround, I have to store the desired property as a serialized JSON string.\r\n\r\nIt would help if it came back as a properly formed JSON string, or if there is another way to deserialize the value to an object that I am not aware of I could use that.\r\n\r\n# Code sample exhibiting the issue:\r\n\r\n## Partial Device Twin\r\n\r\n    {\r\n      \"deviceId\": \"TEST\",\r\n      \"etag\": \"AAAAAAAAAC4=\",\r\n      \"properties\": {\r\n        \"desired\": {\r\n          \"sensors\": {\r\n            \"sensor1\": {\r\n              \"name\": \"foo\",\r\n              \"property\": \"bar\"\r\n            },\r\n            \"sensor2\": {\r\n              \"name\": \"foo\",\r\n              \"property\": \"bar\"\r\n            }\r\n          }\r\n        },\r\n        \"reported\": {}\r\n      }\r\n    }\r\n\r\n## Code Sample\r\n\r\n    DeviceClient client = new DeviceClient(connectionString, IotHubClientProtocol.MQTT);\r\n    Device device = new Device() {\r\n        @Override\r\n        public void PropertyCall(String propertyKey, Object propertyValue, Object context) {\r\n            // 'propertyValue' is a string, but JSON serialize fails here.\r\n        }\r\n    };\r\n\r\n    client.open();\r\n    client.startDeviceTwin(new DeviceTwinStatusCallBack(), null, device, null);\r\n    client.subscribeToDesiredProperties(device.getDesiredProp());\r\n\r\nThe `propertyValue` looks like this:\r\n\r\n    \"{sensors={sensor1={name=foo, property=bar}, sensor2={name=foo, property=bar}}\"\r\n\r\nAnd I would hope it would look like this:\r\n\r\n        \"{\\\"sensors\\\":{\\\"sensor1\\\":{\\\"name\\\":\\\"foo\\\", \\\"property\\\":\\\"bar\\\"}, \\\"sensor2\\\"{\\\"name:\\\"foo\\\", \\\"property\\\":\\\"bar\\\"}}\"\r\n\r\nThis is what I end up storing as the desired property as a work around.\r\n\r\nAs the propertyValue is returning a string, does this need to be fixed to return it as a JSON string, or is there another method I should be using to get the property deserialized to the object I want?\r\n\r\nAny help is appreciated!\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-07-25 08:42:30", "commits": {"195513340d52f3d36fa7b3dd494fe8e1278a95c3": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.deps.serializer.FileUploadRequestParser", "com.microsoft.azure.sdk.iot.deps.serializer.FileUploadNotificationParser", "com.microsoft.azure.sdk.iot.deps.serializer.FileUploadStatusParser", "com.microsoft.azure.sdk.iot.deps.serializer.FileUploadResponseParser", "com.microsoft.azure.sdk.iot.deps.serializer.JobsParser", "com.microsoft.azure.sdk.iot.deps.serializer.QueryResponseParser", "com.microsoft.azure.sdk.iot.deps.serializer.QueryRequestParser"], "closed": "2017-08-15 18:40:28", "filteredCommits": ["195513340d52f3d36fa7b3dd494fe8e1278a95c3"], "commitsDetails": [{"nameRev": "195513340d52f3d36fa7b3dd494fe8e1278a95c3 tags/2017-8-11~5", "commitMessage": "Add empty constructors on Parsers to make Gson happy (issue #127)\n", "commitParents": ["87d2c65c67ae7e1c3e5e2e6efce497853aa20b47"], "spoonStatsSkippedReason": "", "commitHash": "195513340d52f3d36fa7b3dd494fe8e1278a95c3", "authoredDateTime": "2017-08-02 17:07:37", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 0, "lines": 8, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadNotificationParser.java"}, {"insertions": 8, "deletions": 0, "lines": 8, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/QueryResponseParser.java"}, {"insertions": 0, "deletions": 3, "lines": 3, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobsResponseParser.java"}, {"insertions": 8, "deletions": 0, "lines": 8, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadRequestParser.java"}, {"insertions": 8, "deletions": 0, "lines": 8, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobsParser.java"}, {"insertions": 8, "deletions": 0, "lines": 8, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadStatusParser.java"}, {"insertions": 8, "deletions": 0, "lines": 8, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadResponseParser.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/QueryRequestParser.java"}], "commitDateTime": "2017-08-02 17:07:37", "commitUser": "mamokarz", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.FileUploadStatusParser"}], "spoonFilePath": "FileUploadStatusParser.java"}, {"spoonMethods": [], "spoonFilePath": "JobsResponseParser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.QueryRequestParser"}], "spoonFilePath": "QueryRequestParser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.JobsParser"}], "spoonFilePath": "JobsParser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.QueryResponseParser"}], "spoonFilePath": "QueryResponseParser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.FileUploadRequestParser"}], "spoonFilePath": "FileUploadRequestParser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.FileUploadResponseParser"}], "spoonFilePath": "FileUploadResponseParser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.FileUploadNotificationParser"}], "spoonFilePath": "FileUploadNotificationParser.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/127", "ttf": 21.00027777777778, "gitStatsSummary": {"insertions": 55, "deletions": 3, "lines": 58, "gitFilesChange": 8}, "title": "File upload", "statsSkippedReason": "", "user": "Pllvcn83", "changesInPackagesGIT": ["deps/src/main/java/com/microsoft/azure/sdk/iot/deps"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 7, "TOT": 7, "MOV": 0, "INS": 7, "DEL": 0, "spoonFilesChanged": 7}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "\r\n\r\n\u2022OS and version used: Windows 7 \r\n\r\n\r\n\u2022Java runtime used: JSE 1.8\r\n\r\n\r\n\u2022SDK version used: iot-device-client-1.3.29-with-deps.jar\r\n\r\n\r\n\r\n# Description of the issue:\r\nThis is the copy of defect 107 of Beppuc86\r\n\r\nI'm using the DeviceClient to send an uploadToBlobAsync request. Every time i call that api, the response is 11 error, and the following log.\r\n\r\nI've looked at the code, and I can't understand how can I do like suggested, because in the class FileUploadResponseParser is not exposed the GsonBuilder.\r\n\r\n# Code sample exhibiting the issue:\r\nclient.uploadToBlobAsync(file.getName(), new FileInputStream(file), file.length(), callback,\r\n                    callbackContext);\r\n\r\n# Console log of the issue:\r\nFile upload failed to upload the stream to the blob. java.lang.IllegalArgumentException: Malformed json:java.lang.RuntimeException: Unable to invoke no-args constructor for class com.microsoft.azure.sdk.iot.deps.serializer.FileUploadResponseParser. Register an InstanceCreator with Gson for this type may fix this problem.\r\n\r\n**I **resolved the issue adding a costructor into the class: FileUploadResponseParser****\r\n\r\nlike this\r\n\r\n    public FileUploadResponseParser() {\r\n    \tthis.hostName = \"\";\r\n        this.containerName = \"\";\r\n        this.correlationId = \"\";\r\n        this.blobName = \"\";\r\n        this.sasToken = \"\";\r\n   \r\n\t}\r\n\r\nIf you think the fix is valid can you insert this costructor in the next release.\r\n\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-07-22 03:17:27", "commits": {"c782c89521adba98ea98871820dc85aed0f1d423": {"commitGHEventType": "closed", "commitUser": "az-iot-builder-01"}}, "numCommits": 0, "closed": "2017-09-06 00:29:19", "filteredCommits": [], "commitsDetails": [{"nameRev": "c782c89521adba98ea98871820dc85aed0f1d423 tags/2017-9-8~4", "commitMessage": "Isolate Mqtt connection to enable multiple clients support multiple\nconnections (Fix #125, #136)\n", "commitParents": ["35647317a30ee686a43a64bbb4b4f5ae5eb05c3a"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "c782c89521adba98ea98871820dc85aed0f1d423", "authoredDateTime": "2017-08-25 11:25:54", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 178, "deletions": 111, "lines": 289, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnectionTest.java"}, {"insertions": 298, "deletions": 0, "lines": 298, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttConnectionTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/TopicParserTest.java"}, {"insertions": 11, "deletions": 21, "lines": 32, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessaging.java"}, {"insertions": 88, "deletions": 0, "lines": 88, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqttconnection_requirements.md"}, {"insertions": 39, "deletions": 48, "lines": 87, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttMessagingTest.java"}, {"insertions": 11, "deletions": 8, "lines": 19, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java"}, {"insertions": 47, "deletions": 185, "lines": 232, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java"}, {"insertions": 75, "deletions": 69, "lines": 144, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwinTest.java"}, {"insertions": 4, "deletions": 25, "lines": 29, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqtt_requirements.md"}, {"insertions": 513, "deletions": 933, "lines": 1446, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransportTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceMethod.java"}, {"insertions": 48, "deletions": 28, "lines": 76, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceMethodTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttDeviceTwin.java"}, {"insertions": 162, "deletions": 0, "lines": 162, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttConnection.java"}], "commitDateTime": "2017-09-05 17:08:29", "commitUser": "az-iot-builder-01", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/125", "ttf": 45.000277777777775, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Unable to connect multiple devices via MQTT protocol.", "statsSkippedReason": "", "user": "darrickc", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "- **OS and version used:** <Ubuntu 16.04> <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** <1.8> <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** <1.3.31> <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nWhen trying to connect multiple devices in the same application every other device fails with a disconnect and an exception. I'm trying to write a multithreaded simulator to simulate thousands of devices connecting and sending data simultaneously. Is this possible?\r\n\r\n> java.io.IOException: Unable to subscribe to topic :devices/sim_3/messages/devicebound/# because java.io.EOFExceptionConnection lost\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection.open(MqttIotHubConnection.java:140)\r\n\tat com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.open(MqttTransport.java:83)\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceIO.open(DeviceIO.java:212)\r\n\tat com.microsoft.azure.sdk.iot.device.DeviceClient.open(DeviceClient.java:197)\r\n\tat com.company.Main.lambda$main$0(Main.java:49)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1249)\r\n\tat com.company.Main.main(Main.java:45)\r\n\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n        IotHubClientProtocol protocol = IotHubClientProtocol.MQTT;\r\n        List<String> conns = new ArrayList<>();\r\n        conns.add(\"MY CONNECTION STRING\"); //10 TIMES\r\n        conns.forEach((newConnString) -> {\r\n            try {\r\n                DeviceClient client = new DeviceClient(newConnString, protocol);\r\n\r\n                client.open();\r\n                System.out.println(\"connected - \"+newConnString);\r\n\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n\r\n    }\r\n", "labels": ["bug"]}, {"created": "2017-07-21 20:35:49", "user": "mwm-twx", "body": "- **OS and version used:** Linux (Fedora 26)\r\n- **Java runtime used:** Java(TM) SE Runtime Environment (build 1.8.0_121-b13)\r\n- **SDK version used:** (Service SDK) 1.6.23\r\n\r\n\r\n# Description of the issue:\r\nCalling `JobClient.cancelJob` causes an `IotHubException` with the following message:\r\n```\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\"http://www.w3.org/TR/html4/strict.dtd\">\r\n<HTML><HEAD><TITLE>Length Required</TITLE>\r\n<META HTTP-EQUIV=\"Content-Type\" Content=\"text/html; charset=us-ascii\"></HEAD>\r\n<BODY><h2>Length Required</h2>\r\n<hr><p>HTTP Error 411. The request must be chunked or have a content length.</p>\r\n</BODY></HTML>\r\n```\r\n\r\nStacktrace:\r\n```\r\nat com.microsoft.azure.sdk.iot.service.exceptions.IotHubExceptionManager.httpResponseVerification(IotHubExceptionManager.java:112)\r\nat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request(DeviceOperations.java:137)\r\nat com.microsoft.azure.sdk.iot.service.jobs.JobClient.cancelJob(JobClient.java:273)\r\n...\r\n```\r\n\r\n# Code sample exhibiting the issue:\r\nAny `JobClient.cancelJob` call; regardless of whether the job ID is valid.\r\n\r\n", "closed": "2017-07-24 15:06:13", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/124", "ttf": 2.000277777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "JobClient.cancelJob makes invalid backend request"}, {"created": "2017-07-21 16:43:38", "commits": {"8c73182452c55461fd3dcec52d41d9e9beb92ced": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}, "a6630eba9115f6084d4ac63bbd8c7aa26c357302": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}, "63fa30d90e219497d32c42608f0602043fcb7ee6": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 1, "changesInPackagesSPOON": ["tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers.assertNowWithError(java.lang.String)", "com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility", "com.microsoft.azure.sdk.iot.deps.serializer.JobsResponseParser", "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers.getDateTimeUtc(java.lang.String)", "com.microsoft.azure.sdk.iot.deps.serializer.JobsResponseParser.createFromJson(java.lang.String)", "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers", "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers.assertDateWithError(java.lang.String,java.lang.String)", "com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.getDateTimeUtc(java.lang.String)", "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers.assertDateWithError(java.util.Date,java.lang.String)", "com.microsoft.azure.sdk.iot.deps.serializer.JobsParser", "com.microsoft.azure.sdk.iot.deps.serializer.TwinMetadata"], "closed": "2017-07-29 00:33:17", "filteredCommits": ["a6630eba9115f6084d4ac63bbd8c7aa26c357302"], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8c73182452c55461fd3dcec52d41d9e9beb92ced", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}, {"nameRev": "a6630eba9115f6084d4ac63bbd8c7aa26c357302 tags/2017-7-28~2", "commitMessage": "Fix date parser (issue #123)\n", "commitParents": ["a3135ca4a271f016c75e9a4538ae8180058c034a"], "spoonStatsSkippedReason": "", "commitHash": "a6630eba9115f6084d4ac63bbd8c7aa26c357302", "authoredDateTime": "2017-07-28 09:58:06", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinMetadata.java"}, {"insertions": 15, "deletions": 17, "lines": 32, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobsResponseParser.java"}, {"insertions": 3, "deletions": 1, "lines": 4, "filePath": "deps/devdoc/requirement_docs/com/microsoft/azure/sdk/iot/deps/serializer/parserutility.md"}, {"insertions": 38, "deletions": 7, "lines": 45, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtility.java"}, {"insertions": 57, "deletions": 5, "lines": 62, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtilityTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobsParser.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadNotificationParserTest.java"}, {"insertions": 59, "deletions": 11, "lines": 70, "filePath": "deps/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/Helpers.java"}], "commitDateTime": "2017-07-28 09:58:06", "commitUser": "mamokarz", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.FileUploadNotificationParserTest"}], "spoonFilePath": "FileUploadNotificationParserTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.TwinMetadata"}], "spoonFilePath": "TwinMetadata.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.JobsResponseParser"}, {"UPD": 14, "TOT": 16, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.JobsResponseParser.createFromJson(java.lang.String)"}], "spoonFilePath": "JobsResponseParser.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 20, "MOV": 13, "INS": 1, "DEL": 2, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers.assertNowWithError(java.lang.String)"}, {"UPD": 1, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers.assertDateWithError(java.util.Date,java.lang.String)"}, {"UPD": 2, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers.assertDateWithError(java.lang.String,java.lang.String)"}, {"UPD": 1, "TOT": 9, "MOV": 0, "INS": 8, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.Helpers.getDateTimeUtc(java.lang.String)"}], "spoonFilePath": "Helpers.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.ParserUtilityTest.getDateTimeUtcBigMillisecondsSucceed()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.ParserUtilityTest.getDateTimeUtcInvalid_textThrows()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.ParserUtilityTest.getDateTimeUtcInvalidMilliseconds()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.ParserUtilityTest.getDateTimeUtcShortMillisecondsSucceed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.ParserUtilityTest.getDateTimeUtcInvalidDate()"}, {"UPD": 1, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.ParserUtilityTest.getDateTimeUtcSucceed()"}, {"UPD": 2, "TOT": 9, "MOV": 7, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.ParserUtilityTest.getDateTimeUtc_wrong_formatThrows()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.ParserUtilityTest.getDateTimeUtcShort2MillisecondsSucceed()"}], "spoonFilePath": "ParserUtilityTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 8, "MOV": 0, "INS": 7, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility"}, {"UPD": 1, "TOT": 11, "MOV": 2, "INS": 6, "DEL": 2, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.ParserUtility.getDateTimeUtc(java.lang.String)"}], "spoonFilePath": "ParserUtility.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.deps.serializer.JobsParser"}], "spoonFilePath": "JobsParser.java"}]}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "63fa30d90e219497d32c42608f0602043fcb7ee6", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/123", "ttf": 7.000277777777778, "gitStatsSummary": {"insertions": 55.0, "deletions": 26.0, "lines": 81.0, "gitFilesChange": 4}, "title": "Several job (JobResult) dates incorrect", "statsSkippedReason": "", "user": "mwm-twx", "changesInPackagesGIT": ["deps/src/main/java/com/microsoft/azure/sdk/iot/deps"], "spoonStatsSummary": {"UPD": 27.0, "spoonMethodsChanged": 11, "TOT": 77.0, "MOV": 17.0, "INS": 24.0, "DEL": 9.0, "spoonFilesChanged": 5}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- **OS and version used:** Linux (Fedora 26)\r\n- **Java runtime used:** Java(TM) SE Runtime Environment (build 1.8.0_121-b13)\r\n- **SDK version used:** (Service SDK) 1.6.23\r\n\r\n# Description of the issue:\r\nQuerying a job through the JobClient returns a JobResult with dates that are nonsensical (created date is after start and end dates).\r\n\r\n`iothub-explorer` view:\r\n```\r\ncreatedTime:  2017-07-21T15:47:17.8802362Z\r\nstartTime:    2017-07-21T15:47:17.0594Z\r\nendTime:      2017-07-21T15:47:25.4144865Z\r\n```\r\n\r\n`JobResult` view:\r\n```\r\ncreatedTime:  Fri Jul 21 18:13:59 GMT 2017\r\nstartTime:    Fri Jul 21 15:47:17 GMT 2017\r\nendTime:      Fri Jul 21 16:56:29 GMT 2017\r\n```\r\n\r\nAs seen in the different views, the start-time is correct and the other two are not.  The other two dates have seven digits of sub-second precision, which is the underlying cause of this issue.\r\n\r\nThe `JobResponseParser` uses a `SimpleDateFormatter` with format `yyyy-MM-dd'T'HH:mm:ss.SSSS'Z'`.  As detailed in the javadocs, the number of pattern characters used for a numeric type only matters on parsing for consecutive fields.  Since that's not the case here, all seven digits are interpreted as milliseconds and throw the resulting date off by a minutes to hours.", "labels": ["bug", "fix checked in"]}, {"created": "2017-07-20 06:01:08", "commits": {"9cfc494bb4fcd3f8f38ab0ec7beec0b5a6b3176b": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.microsoft.azure.sdk.iot.device.exceptions.IotHubException", "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.inProgressListToMessage()", "com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage.addMessage(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)", "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.moveWaitingListToInProgressList()", "com.microsoft.azure.sdk.iot.device.exceptions.IotHubSizeExceededException", "tests.integration.com.microsoft.azure.sdk.iot.device.transport.HttpsBatchMessageIT.batchMessageSetsFieldsCorrectly()", "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages()"], "closed": "2017-08-14 22:15:30", "filteredCommits": ["9cfc494bb4fcd3f8f38ab0ec7beec0b5a6b3176b"], "commitsDetails": [{"nameRev": "9cfc494bb4fcd3f8f38ab0ec7beec0b5a6b3176b tags/2017-8-11~4", "commitMessage": "Replace SizeLimitExceededException by IotHubSizeExceededException (issue #120)\n", "commitParents": ["195513340d52f3d36fa7b3dd494fe8e1278a95c3"], "spoonStatsSkippedReason": "", "commitHash": "9cfc494bb4fcd3f8f38ab0ec7beec0b5a6b3176b", "authoredDateTime": "2017-08-03 10:19:36", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "device/iot-device-tests/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/device/transport/HttpsBatchMessageIT.java"}, {"insertions": 5, "deletions": 5, "lines": 10, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java"}, {"insertions": 8, "deletions": 8, "lines": 16, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransportTest.java"}, {"insertions": 11, "deletions": 1, "lines": 12, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/https/httpsbatchmessage_requirements.md"}, {"insertions": 22, "deletions": 0, "lines": 22, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/exceptions/IotHubException.java"}, {"insertions": 26, "deletions": 16, "lines": 42, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/https/HttpsBatchMessageTest.java"}, {"insertions": 16, "deletions": 8, "lines": 24, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsBatchMessage.java"}, {"insertions": 27, "deletions": 0, "lines": 27, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/exceptions/IotHubSizeExceededException.java"}], "commitDateTime": "2017-08-03 13:41:47", "commitUser": "mamokarz", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.addMessageEncodesBodyCorrectly(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.addMessageSetsPropertiesCorrectlyWhenNoPropertiesPresent(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.addMessageSetsPropertiesCorrectlyWhenThereAreSystemProperties(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,com.microsoft.azure.sdk.iot.device.MessageProperty)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.numMessagesInitializedCorrectly(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.getSystemPropertiesReturnsNoProperties()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.addMessageRejectsOverflowingMessageAndPreservesOldBatchState(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.numMessagesIncrementedCorrectly(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.addMessageSetsPropertiesCorrectly(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,com.microsoft.azure.sdk.iot.device.MessageProperty)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.testAddMessage(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessageTest.addMessageSetsBase64Correctly(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)"}], "spoonFilePath": "HttpsBatchMessageTest.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage.addMessage(com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage)"}], "spoonFilePath": "HttpsBatchMessage.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.moveWaitingListToInProgressList()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.inProgressListToMessage()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages()"}], "spoonFilePath": "HttpsTransport.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportTest.sendMessagesResendsFailedBatch(tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.Message,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubEventCallback,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.ResponseMessage)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportTest.isEmptyReturnsFalseIfCallbackListIsNotEmpty(tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.Message,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubEventCallback,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubStatusCode)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportTest.sendMessagesSendsSingleMesssageIfBatchFormatExceedsMaxSize(tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.Message,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubEventCallback,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubStatusCode).15"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportTest.sendMessagesInitializesHttpsConnection(tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.Message,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubEventCallback,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubStatusCode)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportTest.sendMessagesSendsAllMessages(tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.Message,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubEventCallback,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubStatusCode)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportTest.sendMessagesSendsSingleMesssageIfBatchFormatExceedsMaxSize(tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.Message,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubEventCallback,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubStatusCode)"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransportTest.isEmptyReturnsTrueIfEmpty(tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.Message,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsSingleMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubEventCallback,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.HttpsBatchMessage,tests.unit.com.microsoft.azure.sdk.iot.device.transport.https.IotHubStatusCode)"}], "spoonFilePath": "HttpsTransportTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.exceptions.IotHubSizeExceededException"}], "spoonFilePath": "IotHubSizeExceededException.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.microsoft.azure.sdk.iot.device.exceptions.IotHubException"}], "spoonFilePath": "IotHubException.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "tests.integration.com.microsoft.azure.sdk.iot.device.transport.HttpsBatchMessageIT.batchMessageSetsFieldsCorrectly()"}], "spoonFilePath": "HttpsBatchMessageIT.java"}]}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/120", "ttf": 25.00027777777778, "gitStatsSummary": {"insertions": 70, "deletions": 13, "lines": 83, "gitFilesChange": 4}, "title": "HTTPS protocol is not working in Android with Java Device Client SDK", "statsSkippedReason": "", "user": "AnnapoorniS", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {"UPD": 8, "spoonMethodsChanged": 7, "TOT": 10, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 5}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\r\nTrying with the latest java device client SDK 1.3.31 in android, couldn't send even a single message with HTTPS protocol. Previous SDKs works for HTTPS protocol, this overflows with Exception from the sendEventAsync(). It is a breaking change.\r\n\r\n- **OS and version used:** <VERSION> Android 7.1 \r\n\r\n- **Java runtime used:** <VERSION>  JDK \"1.8.0_45\"\r\n\r\n- **SDK version used:** <VERSION>  IoT Device Client 1.3.31 for Java \r\n\r\n\r\n# Description of the issue:\r\nI/System.out: {\"deviceId\":\"Sample\",\"messageId\":0,\"temperature\":20.83712863792431,\"humidity\"47.23667818960061}\r\nW/art: Unresolved exception class when finding catch block: javax.naming.SizeLimitExceededException\r\nW/art: Unresolved exception class when finding catch block: javax.naming.SizeLimitExceededException\r\nW/art: Unresolved exception class when finding catch block: javax.naming.SizeLimitExceededException\r\nW/art: Unresolved exception class when finding catch block: javax.naming.SizeLimitExceededException\r\n\r\n# Code sample exhibiting the issue:\r\nWhile debugging I found the the exception occurring here. Kindly fix this with high priority as it breaks the previously working functionality.\r\n![image](https://user-images.githubusercontent.com/22465018/28402161-007612da-6d3c-11e7-94e8-74fe4840c776.png)\r\n\r\n\r\n# Console log of the issue:\r\n![image](https://user-images.githubusercontent.com/22465018/28402174-10cbeaba-6d3c-11e7-9d96-bcd8885d0bee.png)\r\n![image](https://user-images.githubusercontent.com/22465018/28402196-311eb144-6d3c-11e7-9986-e7ce2d7c0cc7.png)\r\n\r\n\r\n", "labels": ["Android", "bug", "fix checked in"]}, {"created": "2017-07-06 12:38:54", "commits": {"531347892ab96c1cc2ac1c7523239f504c533fe1": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 0, "closed": "2017-07-15 01:21:48", "filteredCommits": [], "commitsDetails": [{"nameRev": "531347892ab96c1cc2ac1c7523239f504c533fe1 tags/2017-7-14~5^2^2^2^2", "commitMessage": "Fix TwinParser to support property removal (issue #110), and report correct JSON format on getTwin (issue #115).\n", "commitParents": ["36ce11d8ba7028a800d83852f5772594a189029f"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "531347892ab96c1cc2ac1c7523239f504c533fe1", "authoredDateTime": "2017-07-07 16:38:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 0, "lines": 9, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinMetadata.java"}, {"insertions": 23, "deletions": 4, "lines": 27, "filePath": "deps/serializer/devdoc/requirement_docs/com/microsoft/azure/iot/deps/serializer/parserutility.md"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "device/iot-device-samples/device-twin-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/DeviceTwinSample.java"}, {"insertions": 19, "deletions": 23, "lines": 42, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinParser.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/JobsParserTest.java"}, {"insertions": 7, "deletions": 7, "lines": 14, "filePath": "deps/serializer/devdoc/requirement_docs/com/microsoft/azure/iot/deps/serializer/twinparser.md"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinTags.java"}, {"insertions": 153, "deletions": 23, "lines": 176, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtilityTest.java"}, {"insertions": 16, "deletions": 1, "lines": 17, "filePath": "service/iot-service-samples/device-twin-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/DeviceTwinSample.java"}, {"insertions": 23, "deletions": 22, "lines": 45, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/MethodParserTest.java"}, {"insertions": 29, "deletions": 24, "lines": 53, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinProperty.java"}, {"insertions": 55, "deletions": 9, "lines": 64, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/Helpers.java"}, {"insertions": 53, "deletions": 6, "lines": 59, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtility.java"}, {"insertions": 21, "deletions": 10, "lines": 31, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/MethodParser.java"}, {"insertions": 878, "deletions": 1519, "lines": 2397, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/TwinParserTest.java"}], "commitDateTime": "2017-07-10 15:27:13", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/115", "ttf": 8.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Cannot get JSON or Object structure form getTwin() method in DeviceTwin", "statsSkippedReason": "", "user": "gbidsilva", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Env. Details:\r\nSDK Used : Azure Service SDK\r\n```\r\n<dependency>\r\n\t<groupId>com.microsoft.azure.sdk.iot</groupId>\r\n\t<artifactId>iot-service-client</artifactId>\r\n\t<version>1.5.22</version>\r\n</dependency>\r\n```\r\nOn\r\nJava 1.8 + Cent OS (Linux)\r\n\r\nHi Team,\r\n\r\nI am facing some issues in retriving Device Twin through Java Service SDK.\r\nWhen we use, \r\n```\r\nDeviceTwin twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\r\nDeviceTwinDevice device = new DeviceTwinDevice(deviceId);\r\ntry {\r\n\ttwinClient.getTwin(device);\r\n} catch (com.microsoft.azure.sdk.iot.service.exceptions.IotHubException e) {\r\n\te.printStackTrace();\r\n}\r\n```\r\n`getTwin()` method is returning values properly but not with a JSON format. It is returning some toString() value.\r\n\r\nConsider following device twin JSOS structure which is available in Azure Device Explorer (I have removed some prop. from following structure),\r\n\r\n```\r\n{\r\n  \"deviceId\": \"149933hgt335\",\r\n  \"etag\": \"AAAA22AAAAE=\",\r\n  \"properties\": {\r\n    \"desired\": {\r\n      \r\n    },\r\n    \"reported\": {\r\n\t  \"sensors\": {\r\n          \"sensor4\": \"4\",\r\n          \"sensor5\": \"5\",\r\n          \"sensor2\": \"2\",\r\n          \"sensor3\": \"3\",\r\n          \"sensor8\": \"8\",\r\n          \"sensor9\": \"9\",\r\n          \"sensor6\": \"6\",\r\n          \"sensor7\": \"7\",\r\n          \"sensor0\": \"0\",\r\n          \"sensor1\": \"1\"\r\n        }\r\n    },\r\n    \"metadata\": {\r\n        \r\n    }\r\n  },\r\n  \"$version\": 2\r\n}\r\n```\r\n\r\nFor above reported structure I am getting following reported string from the sdk.\r\n\r\n```\r\nfinal Set<Pair> reportedProperties = device.getReportedProperties();\r\n```\r\n\r\nThe value I am getting is : \r\n\r\n```\r\n{sensors={sensor4=4, sensor5=5, sensor2=2, sensor3=3, sensor8=8, sensor9=9, sensor6=6, sensor7=7, sensor0=0, sensor1=1}}\r\n```\r\n\r\nAbove is not in JSON Structure. This becomes problematic when we try to deserialize incoming twin values from SDK into the respective internal object structures or even into Maps.\r\nIf we are to do so then, we need to do some sort of String Manipulation or Tokenization process to get them deserialized - which I think is not the best practice.\r\n\r\nFollowing is the place where I think the root cause is,\r\n\r\nin `com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwin`, in `getTwin()` method, we have following...\r\n```\r\ndevice.getTwinParser().updateTwin(twin);\r\ndevice.setTags(device.getTwinParser().getTagsMap());\r\ndevice.setDesiredProperties(device.getTwinParser().getDesiredPropertyMap());\r\ndevice.setReportedProperties(device.getTwinParser().getReportedPropertyMap());\r\n```\r\nInside updateTwin(), somewhere down the line, following line is getting executed.\r\n\r\nin `com.microsoft.azure.sdk.iot.deps.serializer.TwinProperty` class, in `getPropertyMap()` method,\r\n```\r\npropertyMap.put(e.getKey(), e.getValue().value.toString());\r\n```\r\n`toString()` is causing the issue.\r\n\r\nIs this the intended behavior of getTwin() method ? If that is so, then what is the way to get JSON structure or object hierarchy such as Map from the SDK call ?", "labels": ["bug", "fix checked in"]}, {"created": "2017-06-29 09:35:31", "commits": {"531347892ab96c1cc2ac1c7523239f504c533fe1": {"commitGHEventType": "referenced", "commitUser": "mamokarz"}}, "numCommits": 0, "closed": "2017-07-15 01:21:03", "filteredCommits": [], "commitsDetails": [{"nameRev": "531347892ab96c1cc2ac1c7523239f504c533fe1 tags/2017-7-14~5^2^2^2^2", "commitMessage": "Fix TwinParser to support property removal (issue #110), and report correct JSON format on getTwin (issue #115).\n", "commitParents": ["36ce11d8ba7028a800d83852f5772594a189029f"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "531347892ab96c1cc2ac1c7523239f504c533fe1", "authoredDateTime": "2017-07-07 16:38:02", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 0, "lines": 9, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinMetadata.java"}, {"insertions": 23, "deletions": 4, "lines": 27, "filePath": "deps/serializer/devdoc/requirement_docs/com/microsoft/azure/iot/deps/serializer/parserutility.md"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "device/iot-device-samples/device-twin-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/DeviceTwinSample.java"}, {"insertions": 19, "deletions": 23, "lines": 42, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinParser.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/JobsParserTest.java"}, {"insertions": 7, "deletions": 7, "lines": 14, "filePath": "deps/serializer/devdoc/requirement_docs/com/microsoft/azure/iot/deps/serializer/twinparser.md"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinTags.java"}, {"insertions": 153, "deletions": 23, "lines": 176, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtilityTest.java"}, {"insertions": 16, "deletions": 1, "lines": 17, "filePath": "service/iot-service-samples/device-twin-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/DeviceTwinSample.java"}, {"insertions": 23, "deletions": 22, "lines": 45, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/MethodParserTest.java"}, {"insertions": 29, "deletions": 24, "lines": 53, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/TwinProperty.java"}, {"insertions": 55, "deletions": 9, "lines": 64, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/Helpers.java"}, {"insertions": 53, "deletions": 6, "lines": 59, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/ParserUtility.java"}, {"insertions": 21, "deletions": 10, "lines": 31, "filePath": "deps/serializer/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/MethodParser.java"}, {"insertions": 878, "deletions": 1519, "lines": 2397, "filePath": "deps/serializer/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/deps/serializer/TwinParserTest.java"}], "commitDateTime": "2017-07-10 15:27:13", "commitUser": "mamokarz", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/110", "ttf": 15.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Property removal in Device Twine does not work properly", "statsSkippedReason": "", "user": "gbidsilva", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "HI Team,\r\n\r\nJava SDK Device Client : 1.3.29\r\nFrom Cent OS 6.7\r\n\r\n\r\nI am using Device Twin explorer available in the Microsoft Azure Portal to view the device twine which I updated/ pushed using Java Device SDK. \r\n\r\nWhen I tried to remove a property available in 'Reported' section by setting the property value to 'null' it is not removing that property as explained under 'Device Operations' in : https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins \r\n\r\nI have the reported structure as follows,\r\n\r\n```\r\n\"reported\": {\r\n      \"alerts\": \"sample-alerts\",      \r\n      \"id\": \"abc\",\r\n      \"latest\": \"latest value\"\r\n}\r\n```\r\n\r\nAnd I want to remove the \"latest\" property. Then I mark it as null and saved it as follows - but it did not work. Instead, it gave me following error.\r\n\r\n```\r\n\"reported\": {\r\n      \"alerts\": \"sample-alerts\",      \r\n      \"id\": \"abc\",\r\n      \"latest\": null\r\n}\r\n```\r\n\r\nFailed to update device twin for '35dd3-d21a-4a02-ba0f-d3a8a0567c': 'Unable to update device twin.'\r\n\r\nI also tried the samething with Java device SDK and I did not get any exception and I received 'OK' status as a response but it did not remove that property.\r\n\r\n```\r\nhomeKit.setReportedProp(new Property(\"latest\", null));\r\nclient.sendReportedProperties(homeKit.getReportedProp());\r\n```\r\n\r\nAm I doing anything wrong here ?\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-06-26 01:12:00", "commits": {"84edf31e8aae9c4320bb838a579d83de82cd7399": {"commitGHEventType": "referenced", "commitUser": "anhashia"}}, "numCommits": 1, "closed": "2017-07-29 00:33:50", "filteredCommits": ["84edf31e8aae9c4320bb838a579d83de82cd7399"], "commitsDetails": [{"nameRev": "84edf31e8aae9c4320bb838a579d83de82cd7399 tags/2017-7-28~11", "commitMessage": "Renew SAS token if it expired on MQTT reconnect\n", "commitParents": ["3812908e711fcba458a27e057a60e782e461c40e"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "84edf31e8aae9c4320bb838a579d83de82cd7399", "authoredDateTime": "2017-07-14 14:58:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnectionTest.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqttiothubconnection_requirements.md"}, {"insertions": 14, "deletions": 0, "lines": 14, "filePath": "device/iot-device-client/devdoc/requirement_docs/com/microsoft/azure/iothub/transport/mqtt/mqtt_requirements.md"}, {"insertions": 3, "deletions": 0, "lines": 3, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java"}, {"insertions": 84, "deletions": 2, "lines": 86, "filePath": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/Mqtt.java"}, {"insertions": 289, "deletions": 2, "lines": 291, "filePath": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTest.java"}], "commitDateTime": "2017-07-14 14:58:00", "commitUser": "anhashia", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/109", "ttf": 32.000277777777775, "gitStatsSummary": {"insertions": 87, "deletions": 2, "lines": 89, "gitFilesChange": 2}, "title": "the MessageCallback was not been called", "statsSkippedReason": "", "user": "xiaolingcong", "changesInPackagesGIT": ["device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi Support,\r\nWe are using Android Version 4.4 for developing a Cloud connector for our business application in the mobile device.when I send  messages frequently with MQTT, the MessageCallback was not been called.It seems to be that messages was sent fail.So there maybe lost some datas.\r\n\r\nOS and version used: Android 4.4\r\n\r\nJava runtime used: JDK \"1.8.0_102\"\r\n\r\nSDK version used:iot-device-client:1.1.25 for Android\r\n\r\n\r\nthis is my logs\uff1a\r\n![qq 20170626091956](https://user-images.githubusercontent.com/7334065/27521538-b0e455ae-5a50-11e7-85cd-f203694ff531.png)\r\n\r\n\r\n\r\n\r\n\r\n", "labels": ["Android", "CSS", "bug", "fix checked in"]}, {"created": "2017-06-16 01:43:12", "user": "AnnapoorniS", "body": "\r\nHi,\r\nWe are having a common Cloud Tenent Api in c# to receive the messages from several device client, which could receive response message from c# device client using the Message's SystemProperties parameter \"correlation-id\". \r\n\r\nBut when we use Azure IoT Device Client for Java, to send the similar response messages to the common cloud Tenent in c# we are facing issues as the message properties differ across SDK.\r\nEspecially the **\"correlation-id\" parameter is not set for the Message through Java SDK** but, is set for the Message object sent through c# SDK to the SystemProperties parameter \"correlation-id\". \r\nWhich eventually gives back a default guid as response for SystemProperties parameter \"correlation-id\" while retrieving messages from Java SDK.\r\n\r\nWhen the same response \"Message\" is framed by us with both the device client, the device SDK inbuilt message framing is different across SDK's and we are facing issues in retrieving back in cloud Tenent. **Why there exist an inconsistent mechanism across all SDK\u2019s to access the correlation-id?**\r\n\r\n\r\n **OS and version used:** <VERSION>  Android 7.1 \r\n\r\n**Java runtime used:** <VERSION>  JDK \"1.8.0_45\"\r\n\r\n**SDK version used:** <VERSION>  IoT Device Client 1.2.27 for Java\r\n\r\n\r\n# Description of the issue:\r\nWhen sending response messages to the cloud using Azure IoT device client SDK for Java, the correlationId which I have set for the Message, I am unable to retrieve it back in the cloud in message.SystemProperties parameter \"correlation-id\". \r\n \r\n# Code sample exhibiting the issue:\r\n\r\nMessage framed in Java Device Client,\r\n\t\tMessage message = new Message(messageInBytes);\r\n\t\tmessage.setCorrelationId(UUID.randomUUID().toString());\r\n\t\tmessage.setMessageId(UUID.randomUUID().toString());\r\n\r\nCode to retrieve back the response in cloud,\r\nvar correlationIdString = GetStringValueOrEmpty(localMessage.SystemProperties, \"correlation-id\");\r\n \r\n\r\n# Console log of the issue:\r\nSetResponse [00000000-0000-0000-0000-000000000000]>> Got result for command=[Response], version=[1] \r\n \r\n\r\n", "closed": "2017-07-15 01:20:37", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/104", "ttf": 28.00027777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "Message CorrelationId property of DeviceClient differs across SDK's, making Cloud Tenent API not generic."}, {"created": "2017-06-08 04:47:52", "user": "allenhula", "body": "Environment:\r\n- **OS and version used:** Windows 10\r\n- **Java runtime version used:** 1.8.0_131\r\n- **SDK version used:** iot-device-client 1.2.28\r\n\r\n# Description of the issue:\r\nSend several C2D messages at first without setting the messageid, then using MQTT protocol on device side to receive the messages, only 1 message will be received no matter how many messages sent.\r\nBut if send messages with messageid, then device can receive all messages successfully.\r\nAnd if start receiver at first then sender, messages can be received successfully.\r\n\r\nSo to repro this issue, two key conditions:\r\n\r\n1. messages send without message id\r\n2. send at first then receive later\r\n\r\n# Code sample exhibiting the issue:\r\nC2D Sender (without setting messageid): \r\n```\r\nServiceClient serviceClient = ServiceClient.createFromConnectionString(connectionString, IotHubServiceClientProtocol.AMQPS);\r\nserviceClient.open();\r\nfor (int i=0; i<5; i++) {\r\n\tMessage messageToSend = new Message(\"Cloud to device message \" + i);\r\n\t//messageToSend.setMessageId(UUID.randomUUID().toString());\r\n\tmessageToSend.setDeliveryAcknowledgement(DeliveryAcknowledgement.Full);\r\n\r\n\tserviceClient.send(deviceId, messageToSend);\r\n\tSystem.out.println(\"Message sent to device \" + i);\r\n}\r\nserviceClient.close();\r\n```\r\nC2D Receiver:\r\n```\r\nDeviceClient client = new DeviceClient(connString, IotHubClientProtocol.MQTT);\r\nMessageCallback callback = new MessageCallback();\r\nclient.setMessageCallback(callback, null);\r\nclient.open();\r\n\r\nprivate static class MessageCallback implements\r\ncom.microsoft.azure.sdk.iot.device.MessageCallback {\r\n\tpublic IotHubMessageResult execute(Message msg, Object context) {\r\n\t\tSystem.out.println(\"Received message from hub: \"\r\n\t\t+ new String(msg.getBytes(), Message.DEFAULT_IOTHUB_MESSAGE_CHARSET)\r\n\t\t+ \" with message id \" + msg.getMessageId());\r\n\r\n\t\treturn IotHubMessageResult.COMPLETE;\r\n\t}\r\n}\r\n```\r\n\r\n# Console log of the issue:\r\nSender output (5 messages sent):\r\n\r\n> Message sent to device 0\r\n> Message sent to device 1\r\n> Message sent to device 2\r\n> Message sent to device 3\r\n> Message sent to device 4\r\n\r\nReceiver output (only 1 message received)\r\n\r\n> Received message from hub: Cloud to device message 4 with message id 7f67122e-c113-48f1-9a4b-f37280e7a55a", "closed": "2017-07-15 01:19:57", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/101", "ttf": 36.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[MQTT] [C2D] Only 1 message received if send before subscribe without messageid"}, {"created": "2017-06-01 15:02:38", "commits": {"f25c739e39edc7ea47cc074d99ba2d63e31ee42c": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "113029e01241f21603c33dd7f9222bec7b03f764": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "6665c380caa6f11e9a7df7f62d14c8d46b37e5a8": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "e89acba32cf8af212313440c094f2827394b09ba": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "e3a0a3583510d38c575d1be7ec91a72be64d28ef": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "18be20aa4921d380f0527cd6ed7dd483e7860d29": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "d51d1d180163a3ee08d2ef70cbf06c65ad2cf9dc": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "closed": "2018-02-12 19:51:09", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "f25c739e39edc7ea47cc074d99ba2d63e31ee42c", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "113029e01241f21603c33dd7f9222bec7b03f764", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "6665c380caa6f11e9a7df7f62d14c8d46b37e5a8", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "e89acba32cf8af212313440c094f2827394b09ba", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "e3a0a3583510d38c575d1be7ec91a72be64d28ef", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "18be20aa4921d380f0527cd6ed7dd483e7860d29", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "d51d1d180163a3ee08d2ef70cbf06c65ad2cf9dc", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/99", "ttf": 256.0002777777778, "title": "[Device SDK / MQTT] sendEventAsync blocks after connection is lost and message expiry time is ignored", "statsSkippedReason": "", "user": "pizerg", "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 7, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "- **OS and version used:** Windows 8 / OS X 10.12.5 / Raspbian Jessie\r\n\r\n- **Java runtime used:** 1.8 latest version available on each platform\r\n\r\n- **SDK version used:** 1.2.27\r\n\r\n# Description of the issue:\r\nThere are several issues happening when using MQTT protocol and internet connection drops:\r\n\r\n* The SDK allows to keep sending messages even when the connection is lost, this becomes a problem as the callback is invoked immediately with status OK_EMPTY\r\n\r\n* After a while the SDK becomes aware of the disconnection and starts the reconnection process, if we call sendEventAsync during the process and without restoring internet connection the method will block the execution due to the \"synchronized\" block in the implementation while adding the message to the sending queue. As the method is supposed to be async, this should never happen.\r\n\r\n* If we have set \"expiryTime\" property for the message we're sending the SDK ignores it, in case of disconnection and \"expiryTime\" set (or if for some other reason the server is not available at that moment) we should get the callback invoked with proper error status after expiryTime milliseconds have passed.\r\n\r\n# Code sample exhibiting the issue:\r\nSome code to reproduce the issue, it's a variation of one of the samples that sends continuously a message after 5 seconds, just fire it up and interrupt your internet connection after DeviceClient has opened the connection and sent at least one message, then just wait until it starts to reconnect and it will soon get blocked right after calling sendEventAsync\r\n\r\n```\r\n\r\npublic void reproIssue(){\r\n\tScanner sc = new Scanner(System.in);\r\n\t\r\n\tString connectionString = \"YOUR CONNECTION STRING HERE\";\r\n\t\t\r\n\tsc.nextLine();\r\n\t\t\r\n\tnew Thread(() -> {\r\n\t\tDeviceClient client = null;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tclient = new DeviceClient(connectionString, IotHubClientProtocol.MQTT);\r\n\t\t\tclient.open();\r\n\t\t} catch (Exception e1) {\r\n\t\t\te1.printStackTrace();\r\n\t\t}\r\n\t\t\t\r\n\t\twhile(isRunning){\r\n\t\t\tMessage m = new Message(\"test\");\r\n\t\t\tm.setMessageId(UUID.randomUUID().toString());\r\n\t\t\tm.setExpiryTime(4000);\r\n\t\t\t\r\n\t\t\tSystem.out.println(\"Before send async\");\r\n\t\t\tclient.sendEventAsync(m, new EventCallback(), m);\r\n\t\t\tSystem.out.println(\"After send async\");\r\n\t\t\r\n\t\t\ttry{\r\n\t\t\t\tThread.sleep(5000);\r\n\t\t\t} catch (Exception e){}\r\n\t\t}\r\n\t\t\t\r\n\t\ttry {\r\n\t\t\tclient.closeNow();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}).start();\r\n\t\t\r\n\tsc.nextLine();\r\n\tisRunning = false;\r\n\t\t\r\n\tsc.close();\r\n}\r\n\r\nprotected static class EventCallback implements IotHubEventCallback\r\n{\r\n        public void execute(IotHubStatusCode status, Object context)\r\n        {\r\n            Message msg = (Message) context;\r\n            \r\n            System.out.println(\"IoT Hub responded to message \"+ msg.getMessageId()  + \" with status \" + status.name());\r\n        }\r\n}\r\n\r\n```\r\n\r\n# Console log of the issue:\r\n\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message 29c3c899-8eb1-4668-bf54-c771f9650480 with status OK_EMPTY\r\n\r\n<------- INTERNET CONNECTION INTERRUPTED HERE ------>\r\n\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message f21524e5-4fbb-4139-af9d-4a05436d9146 with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message 2fc7ca40-9225-48c8-ab67-93b88dad0e84 with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message eaadb10d-25b3-4954-a13d-5b6d89f335ba with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message ec3c861d-9008-45dc-bb21-996e35265cf3 with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message 8f0c0c3f-097b-4bf0-80f5-f85518b76df7 with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message 895d6bb8-4931-4bee-9d6a-2eb53521fad2 with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message 4dcfdfac-c74b-44a7-a6cd-80f0b6c45959 with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message 257e94d3-338a-47a0-8ef3-8aa103344505 with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message 8d8b6c86-9964-4a42-b5ad-1b3fbf3af1cf with status OK_EMPTY\r\nBefore send async\r\nAfter send async\r\nIoT Hub responded to message ae7d7e9f-f33f-4883-85c8-d24e624fa49e with status OK_EMPTY\r\nLost connection to the server. Reconnecting 0 time.\r\nLost connection to the server. Reconnecting 1 time.\r\nBefore send async\r\nAfter send async\r\nLost connection to the server. Reconnecting 2 time.\r\nBefore send async\r\nLost connection to the server. Reconnecting 3 time.\r\nLost connection to the server. Reconnecting 4 time.\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-05-10 06:34:39", "commits": {"4173315fa8f27abbd969eb7d68a22f0bb03cd2a7": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "8818a2f2e0a7a7191a69fbeefdd61529a44ce968": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "c26822306660c1f612157a4aec950aae7ed94696": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}, "a4f98bad82877e514d871cc6f595d9ddf080313a": {"commitGHEventType": "referenced", "commitUser": "timtay-microsoft"}}, "closed": "2017-12-05 18:05:39", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "4173315fa8f27abbd969eb7d68a22f0bb03cd2a7", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8818a2f2e0a7a7191a69fbeefdd61529a44ce968", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "c26822306660c1f612157a4aec950aae7ed94696", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}, {"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "a4f98bad82877e514d871cc6f595d9ddf080313a", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "timtay-microsoft", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/94", "ttf": 209.00027777777777, "title": "SASToken Expired Exception was not getting thrown by the Device Client Open or Send", "statsSkippedReason": "", "user": "jkriba", "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 4, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi Support,\r\nWe are using Android Version 7.1 for developing a Cloud connector for our business application in the mobile device. Unlike the Azure IoT  Device Client provided by the .Net SDK , in case of  using an expired SAS token to Open / Send  events to IoTHub the device client of Java SDK is not throwing any exceptions and still trying to send the message which is eventually resulting in UN Authorization of the packet.\r\n\r\n- **OS and version used:** <VERSION> Android 7.1\r\n\r\n- **Java runtime used:** <VERSION> JDK \"1.8.0_45\"\r\n\r\n- **SDK version used:** <VERSION> IoT Device Client 1.1.26 for Java\r\n\r\n\r\n# Description of the issue:\r\nAzure IoT DeviceClient for Java is not throwing an exception when it uses an Expired SAS token to send an event to the Azure IoTHub. This was working perfect with the Microsoft .Net SDK i.e. DeviceClient . We were not able to manage the state of the application SAS Token without this exception handling.\r\n\r\n# Code sample exhibiting the issue:\r\nvoid CreateDeviceClient() throws TokenExpiredException, Exception\r\n{\r\n   try\r\n   {\r\n      _logger.LogDebug(GetConnectionString());\r\n\r\n      //Connection string with expired SAS Token       \r\n      deviceClient = new DeviceClient(GetConnectionString(),_protocol); \r\n\r\n     _logger.LogDebug(\"CreateDeviceClient() - created \");\r\n   }\r\n   catch (Exception e)\r\n   {\r\n      //Here the exception is not get caught like the .Net SDK for an Expired SAS Token\r\n      throw e;\r\n   }\r\n}\r\n\r\n\r\n# Console log of the issue:\r\nD/AndroidLog: 05/10/2017 11:55:37 AM :: IoTHubTransportEx.java:CreateDeviceClient:223 :: CreateDeviceClient() - created \r\nD/AndroidLog: 05/10/2017 11:55:37 AM :: IoTHubTransportEx.java:OpenDeviceClientAsync:258 :: OpenDeviceClientAsync() - opened \r\nV/AndroidLog: 05/10/2017 11:55:37 AM :: ConnectionMonitor.java:SendHeartBeat:311 :: Enter\r\nI/AndroidLog: 05/10/2017 11:55:37 AM :: ConnectionMonitor.java:SendHeartBeat:314 :: SendHeartbeatAsync() Sending heartbeat\r\nV/AndroidLog: 05/10/2017 11:55:37 AM :: IotHubConnectionPlugin.java:Send:188 :: Enter\r\nD/AndroidLog: 05/10/2017 11:55:37 AM :: IotHubConnectionPlugin.java:InternalSendAsync:228 :: D/AndroidLog: 05/10/2017 11:55:38 AM :: IoTHubTransportEx.java:execute:272 :: IoT Hub responded to message : HeartbeatRequest : 7f38d512-7918-4268-bfe6-07b13257843d with status UNAUTHORIZED\r\n\r\n\r\n", "labels": ["bug", "fix checked in"]}, {"created": "2017-04-19 14:21:43", "user": "mwm-twx", "body": "OS: Linux x64 (Fedora 25)\r\nJava: 1.8.0_121\r\nSDK: 1.2.18\r\n\r\n# Description of the issue:\r\nWhen performing a device-method call with the `iothub-explorer`, a `404 Not Found` is returned quickly if the device is offline.  Making the same request through the Java service API eventually times-out without a response from the server.\r\n\r\n# Code sample exhibiting the issue:\r\nAny `DeviceMethod` call.\r\n\r\n# HTTP Request/Response from iothub-explorer\r\n```\r\nPOST /twins/ServicesThing/methods?api-version=2016-11-14 HTTP/1.1\r\nContent-Type: application/json; charset=utf-8\r\nAuthorization: SharedAccessSignature sr=<HUB>.azure-devices.net&sig=<SIG>&skn=iothubowner&se=1492612127\r\nRequest-Id: 4997badb-adc3-4255-9942-8e9411037cbf\r\nUser-Agent: azure-iothub/1.1.9\r\nContent-Length: 64\r\nHost: <HUB>.azure-devices.net\r\nConnection: close\r\n\r\n{\"methodName\":\"echo\",\"payload\":\"asdfasdf\",\"timeoutInSeconds\":30}\r\n\r\n\r\nHTTP/1.1 404 Not Found\r\nContent-Length: 180\r\nContent-Type: application/json; charset=utf-8\r\nServer: Microsoft-HTTPAPI/2.0\r\niothub-errorcode: DeviceNotOnline\r\nDate: Wed, 19 Apr 2017 13:29:00 GMT\r\nConnection: close\r\n\r\n{\"Message\":\"ErrorCode:DeviceNotOnline;Timed out waiting for device to connect.\",\"ExceptionMessage\":\"Tracking ID:1024427cf6f84619ad8027a7a5295507-G:4-TimeStamp:04/19/2017 13:29:00\"}\r\n```\r\n\r\n# HTTP Request/Response from Java SDK\r\n```\r\nPOST /twins/ServicesThing/methods?api-version=2016-11-14 HTTP/1.1\r\nUser-Agent: com.microsoft.azure.sdk.iot.iot-service-client/1.2.18\r\nauthorization: SharedAccessSignature sr=<HUB>.azure-devices.net&sig=<SIG>&se=1524144960&skn=service\r\nRequest-Id: 0\r\nAccept: application/json\r\nContent-Type: application/json; charset=utf-8\r\nHost: <HUB>.azure-devices.net\r\nConnection: keep-alive\r\nContent-Length: 101\r\n\r\n{\"methodName\":\"echo\",\"responseTimeoutInSeconds\":30,\"connectTimeoutInSeconds\":30,\"payload\":\"fdsafdsa\"}\r\n\r\n<NO RESPONSE RECEIVED>\r\n```\r\n", "closed": "2017-06-06 19:07:55", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/85", "ttf": 48.000277777777775, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "DeviceMethod does not short-circuit if device is offline"}, {"created": "2017-04-19 13:55:35", "user": "mwm-twx", "body": "OS:  Linux x64 (Fedora 25)\r\nJava:  1.8.0_121\r\nSDK:  1.2.18\r\n\r\n# Description of the issue:\r\nBoth timeouts provided to `DeviceMethod.invoke` are ignored.  `DeviceOperations` always uses a default read timeout of 24 seconds and the time remote device does not receive the `timeoutInSeconds` key defined by the documentation.\r\n\r\n# Code sample exhibiting the issue:\r\nAny DeviceMethod call.\r\n\r\nResulting HTTP request:\r\n```\r\nPOST /twins/ServicesThing/methods?api-version=2016-11-14 HTTP/1.1\r\nUser-Agent: com.microsoft.azure.sdk.iot.iot-service-client/1.2.18\r\nauthorization: SharedAccessSignature sr=<HUB>.azure-devices.net&sig=<SIG>&skn=service\r\nRequest-Id: 0\r\nAccept: application/json\r\nContent-Type: application/json; charset=utf-8\r\nHost: <HUB>.azure-devices.net\r\nConnection: keep-alive\r\nContent-Length: 101\r\n\r\n{\"methodName\":\"echo\",\"responseTimeoutInSeconds\":30,\"connectTimeoutInSeconds\":30,\"payload\":\"fdsafdsa\"}\r\n```\r\n\r\n\r\n", "closed": "2017-06-06 19:08:09", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/84", "ttf": 48.000277777777775, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "DeviceMethod timeouts ignored"}, {"created": "2017-04-05 17:20:01", "user": "mrb-twx", "body": "The RegistryStatistics object returned from the RegistryManaged.getStatistics() method has protected fields for the enabled device count, disabled device count, and total device count but lacks public accessors for the fields.\r\n\r\nA user is unable to read the field values without using reflection.", "closed": "2017-04-07 01:26:24", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/77", "ttf": 1.0002777777777778, "commits": {}, "labels": ["bug"], "title": "RegistryStatistics class needs accessor methods for protected fields"}, {"created": "2017-03-22 05:46:15", "user": "james-hu", "body": "- **OS and version used:** Windows 10\r\n\r\n- **Java runtime used:** 8\r\n\r\n- **SDK version used:** com.microsoft.azure.sdk.iot:iot-device-client:1.0.21\r\n\r\n\r\n# Description of the issue:\r\nWhen using HTTPS as the transport, sometimes the SDK combines multiple messages into one HTTPS request. However, the body format in the request is not a valid JSON format, therefore, 400 bad request error is returned from IoT Hub.\r\n\r\nI think the problem is at this line:`jsonMsg.append(\"\\\"\" + msg.getBodyAsString() + \"\\\",\");` in HttpsBatchMessage.java.\r\n\r\n# Code sample exhibiting the issue:\r\nSend multiple messages one by one\r\n\r\n# Console log of the issue:\r\nRequest:\r\n`POST https://............................/messages/events?api-version=2016-02-03 HTTP/1.1\r\nUser-Agent: com.microsoft.azure.sdk.iot.iot-device-client/1.0.21\r\nauthorization: SharedAccessSignature .................\r\n..................\r\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\r\nConnection: keep-alive\r\nContent-Length: 8013\r\n\r\n[{\"body\":\"{\"HistorySamples\":[{\"ItemName\":\"sensor\",\"Quality\":\"Good\",\"Time\":\"2017-03-22T13:32:28.075+08:00\",\"Value\":80}..........`\r\n\r\nResponse:\r\n`HTTP/1.1 400 Bad Request\r\nContent-Length: 152\r\nContent-Type: application/json; charset=utf-8\r\nServer: Microsoft-HTTPAPI/2.0\r\niothub-errorcode: IotHubFormatError\r\nDate: Wed, 22 Mar 2017 05:33:35 GMT\r\n\r\n{\"Message\":\"ErrorCode:IotHubFormatError;BadRequest\",\"ExceptionMessage\":\"Tracking ID:429d18027c43471db3756a7c5d81fbd6-G:7-TimeStamp:03/22/2017 05:33:35\"}`\r\n", "closed": "2017-07-15 01:19:36", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/67", "ttf": 114.00027777777778, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "HTTPS batch message format is wrong"}, {"created": "2017-03-20 20:11:09", "user": "JMayrbaeurl", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** 1.7 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.0.21 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nIn over hundred of cases System.out.println or System.err.println is used in combination with a logger (Custom logger implementation) to log information in the source code. This is not necessary, since the logger can be configured this way. And the default case, logging to the console, leads to having log information written twice.\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "closed": "2017-04-07 01:30:04", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/62", "ttf": 17.00027777777778, "commits": {}, "labels": ["bug"], "title": "Don't use System.out and System.err for logging (in non test classes)"}, {"created": "2017-03-14 15:28:54", "user": "slgal", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** java version \"1.8.0_121\"<!-- Please include runtime and version -->\r\n\r\n- **SDK version used:**     'com.microsoft.azure.sdk.iot:iot-device-client:1.0.20'<!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nI tried to test Android Sample. I created device id and device key using sample for net. Once I tried to use it for Android I get such error on\r\n\r\n```\r\npublic void btnReceiveOnClick(View v) throws URISyntaxException, IOException {\r\n        Button button = (Button) v;\r\n\r\n        // Comment/uncomment from lines below to use HTTPS or MQTT protocol\r\n        // IotHubClientProtocol protocol = IotHubClientProtocol.HTTPS;\r\n        IotHubClientProtocol protocol = IotHubClientProtocol.MQTT;\r\n\r\n        DeviceClient client = new DeviceClient(connString, protocol);\r\n\r\n        if (protocol == IotHubClientProtocol.MQTT)\r\n        {\r\n            MessageCallbackMqtt callback = new MessageCallbackMqtt();\r\n            Counter counter = new Counter(0);\r\n            client.setMessageCallback(callback, counter);\r\n        }\r\n        else\r\n        {\r\n            MessageCallback callback = new MessageCallback();\r\n            Counter counter = new Counter(0);\r\n            client.setMessageCallback(callback, counter);\r\n        }\r\n\r\n        try {\r\n            client.open();\r\n.....\r\n```\r\n\r\n **client.open();**\r\n\r\nException while opening IoTHub connection: java.io.IOException: Cannot unsubscribe when mqtt client is disconnected\r\n\r\n\r\nCan you please explain what can cause that error?\r\n\r\n", "closed": "2017-03-15 09:12:15", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/49", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["bug"], "title": "Cannot unsubscribe when mqtt client is disconnected"}, {"created": "2017-03-14 13:41:55", "user": "JMayrbaeurl", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** 1.7 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.0.21 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nCalling DeviceClient.close() will end up in an endless loop (see code below -> while (!this.transport.isEmpty()) ) if there are still messages in the queue that haven't been sent to IoT Hub so far. E.g. in case of a missing Internet connection, this will lead to an endless loop.\r\n\r\n\r\n# Code sample exhibiting the issue:\r\n    public void close() throws IOException\r\n    {\r\n        // Codes_SRS_DEVICECLIENT_11_031: [If the client is already closed, the function shall do nothing.]\r\n        if (this.state == IotHubClientState.CLOSED)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Codes_SRS_DEVICECLIENT_11_010: [The function shall finish all ongoing tasks.]\r\n        // Codes_SRS_DEVICECLIENT_11_011: [The function shall cancel all recurring tasks.]\r\n        while (!this.transport.isEmpty())\r\n        {\r\n\r\n        }\r\n        this.taskScheduler.shutdown();\r\n        // Codes_SRS_DEVICECLIENT_11_037: [The function shall close the transport.]\r\n        this.transport.close();\r\n        this.state = IotHubClientState.CLOSED;\r\n    }\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "closed": "2017-05-08 19:07:46", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/48", "ttf": 55.000277777777775, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "Endless loop in com.microsoft.azure.sdk.iot.device.DeviceClient.close() when remaining messages can't be sent"}, {"created": "2017-03-14 13:33:12", "user": "JMayrbaeurl", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** 1.7 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.0.21 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nWhen MqttDeviceTwin.stop() gets called without having called MqttDeviceTwin.start() before, the method will try to unsubscribe a topic that wasn't subscribed yet, causing an error. Can be fixed quite easily, by checking the isStarted property (when it's set correctly, see my previous  issue)\r\n\r\n# Code sample exhibiting the issue:\r\n    public void stop() throws IOException\r\n    {\r\n        /*\r\n        **Codes_SRS_MQTTDEVICETWIN_25_020: [**stop method shall unsubscribe from twin response topic ($iothub/twin/res/#) and throw IoException otherwise.**]**\r\n         */\r\n        this.unsubscribe(subscribeTopic);\r\n    }\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "closed": "2017-03-23 21:59:58", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/47", "ttf": 9.000277777777777, "commits": {}, "labels": ["bug"], "title": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.stop() must not be processed when not started yet"}, {"created": "2017-03-14 13:27:37", "user": "JMayrbaeurl", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** Windows 10 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** 1.8 <!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** 1.0.21 <!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nThe method MqttDeviceTwin.start() doesn't set the property isStarted to true after a successful start\r\n\r\n# Code sample exhibiting the issue:\r\n    public void start() throws IOException\r\n    {\r\n        if (!isStarted)\r\n        {\r\n            /*\r\n            **Codes_SRS_MQTTDEVICETWIN_25_019: [**start method shall subscribe to twin response topic ($iothub/twin/res/#) if connected and throw IoException otherwise.**]**\r\n             */\r\n            this.subscribe(subscribeTopic);\r\n        }\r\n    }\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n", "closed": "2017-03-23 21:59:15", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/46", "ttf": 9.000277777777777, "commits": {}, "labels": ["bug"], "title": "com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttDeviceTwin.start() doesn't set isStarted property correctly"}, {"created": "2017-03-07 20:51:49", "user": "dluc", "body": "I'm trying to upgrade `iot-device-client` from `1.0.19` to `1.0.20` and the compilation fails complaining about a missing `org.testng#testng;RELEASE` dependency.\r\n\r\nI could not find any reference in the repo, however in iot-deps-serializer POM file published to [Maven Central](http://search.maven.org/#artifactdetails%7Ccom.microsoft.azure.sdk.iot.deps%7Ciot-deps-serializer%7C0.0.1%7Cjar) I can see this:\r\n\r\n```\r\n   <dependency>\r\n      <groupId>org.testng</groupId>\r\n      <artifactId>testng</artifactId>\r\n      <version>RELEASE</version>\r\n    </dependency>\r\n```", "closed": "2017-03-13 18:21:05", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/43", "ttf": 5.000277777777778, "commits": {}, "labels": ["bug", "fix checked in"], "title": "\"org.testng\" reference in iot-deps-serializer breaking upgrade to iot-device-client 1.0.20"}, {"created": "2017-02-26 14:18:56", "user": "meken", "body": "The RegistryManager.getDevices doesn't return the correct number of registered devices when a limit is provided. In my example the IoT Hub contains 3 registered devices. However, when I call the getDevices method with a limit that is less than 12, RegistryManager reports a single device, when limit is increased to up to and including 14, 2 devices are reported. The correct number of devices is only reported when the limit is set to >=15.\r\n\r\n```java\r\nString connectionString = String.format(\"HostName=%s;SharedAccessKeyName=%s;SharedAccessKey=%s\",\r\n                HOST_NAME, SA_KEY_NAME, SA_KEY_VALUE);\r\nRegistryManager registryManager = RegistryManager.createFromConnectionString(connectionString);\r\nregistryManager.getDevices(10).forEach(d -> System.out.println(d.getDeviceId()));\r\n```\r\n\r\nThe snippet above reports only a single device, whereas 3 devices are expected.\r\n\r\nThis happens using the Java SDK (com.microsoft.azure.iothub-java-client:iothub-java-device-client:1.0.16)   with Java 8.", "closed": "2017-04-27 19:40:26", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/41", "ttf": 60.000277777777775, "commits": {}, "labels": ["bug", "service"], "title": "[Java] RegistryManager.getDevices method returns too few devices"}, {"created": "2017-02-01 19:06:53", "user": "kevin-ledinh", "body": "[201702010851_MQTT_Azure_SDK_1.0.16_no_stack.txt](https://github.com/Azure/azure-iot-sdk-java/files/745827/201702010851_MQTT_Azure_SDK_1.0.16_no_stack.txt)\r\n\r\nHi Azure team, \r\n\r\nI'm running  IoT Hub Device SDK 1.0.16 with MQTT protocol on an Android board to send sensors data to back end. The sensor data is collected every 30 seconds.\r\n\r\nAfter running happily for 5 days without interruption, my Android board got a new IP address from the router and Android initiated a connection reset call\r\n\r\n`D/ConnectivityService( 1976): resetConnections(wlan0, 1)`\r\n\r\nImmediately after this, the Azure Device threw this exception and refused to work:\r\n\r\n````\r\n02-01 15:27:26.965 I/System.out(14971): java.lang.IllegalStateException: The MQTT connection is currently closed. Call open() before attempting to receive a message.: The MQTT connection is currently closed. Call open() before attempting to receive a message.\r\n\r\n02-01 15:27:26.965 I/System.out(14971): com.microsoft.azure.iothub.transport.mqtt.MqttIotHubConnection.receiveMessage(MqttIotHubConnection.java:245)\r\n\r\n02-01 15:27:26.965 I/System.out(14971): com.microsoft.azure.iothub.transport.mqtt.MqttTransport.handleMessage(MqttTransport.java:256)\r\n\r\n02-01 15:27:26.965 I/System.out(14971): com.microsoft.azure.iothub.transport.IotHubReceiveTask.run(IotHubReceiveTask.java:25)\r\n\r\n02-01 15:27:26.965 I/System.out(14971): java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n\r\n02-01 15:27:26.965 I/System.out(14971): java.util.concurrent.FutureTask.runAndReset(FutureTask.java:279)\r\n\r\n02-01 15:27:26.965 I/System.out(14971): java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:152)\r\n\r\n02-01 15:27:26.975 I/System.out(14971): java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:266)\r\n\r\n02-01 15:27:26.975 I/System.out(14971): java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n\r\n02-01 15:27:26.975 I/System.out(14971): java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n\r\n02-01 15:27:26.975 I/System.out(14971): java.lang.Thread.run(Thread.java:841)\r\n````\r\n\r\nThis exception is caused when the receiveTask continue to run while the connection has closed.  Please see the attached log file for more debug traces.\r\n\r\nCould you suggest a way to handle this case? \r\n\r\nBest wishes,\r\n\r\nKevin", "closed": "2017-03-13 18:20:20", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/31", "ttf": 39.000277777777775, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "[Android] MQTT auto closed after a connection resets"}, {"created": "2017-01-30 18:56:32", "user": "varunpuranik", "body": "If I use ServiceClient.SendAsync to send multiple messages at one time and then wait for all of them to complete, I don't get the right set of messages on the device. Instead, I get one message sent multiple times. \r\nHere is what my code was doing - \r\n\r\n- Call serviceClient.sendAsync for a batch of messages (say 20). \r\n- Collect all the CompletableFutures returned in an array.\r\n- Wait for all the futures to complete\r\n\r\nExpected behavior - \r\n- I get all the messages (in any order) on the device\r\n\r\nActual behavior - \r\n- I get one message sent multiple times on the device (for. e.g., instead of \"msg1, msg3, msg2, msg4...\", I was getting \"msg1, msg3, msg2, msg5, msg5, msg5, msg5....\" on the device).\r\n\r\nIf I add a sleep between the sends, then I get the messages properly. So it seems to be because of some internal data structures being shared across threads.", "closed": "2017-02-14 19:00:20", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/30", "ttf": 15.000277777777777, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "Java SDK - SendAsync is not thread safe"}, {"created": "2017-01-26 12:08:47", "user": "alexeyosminin", "body": "Hi, I've tried to run sample https://github.com/Azure/azure-iot-sdk-java/tree/master/device/iot-device-samples/android-sample. Build completes successfully, but when I'm trying to run it, packaging always fails with the following error:\r\nError:Execution failed for task ':app:transformResourcesWithMergeJavaResForDebug'.\r\ncom.android.build.api.transform.TransformException: com.android.builder.packaging.DuplicateFileException: Duplicate files copied in APK thirdpartynotice.txt\r\n\tFile1: ...\\Users\\...\\.gradle\\caches\\modules-2\\files-2.1\\com.microsoft.azure.sdk.iot\\iot-device-client\\1.0.17\\5400e262163a15494376dcaeab7db18656768c95\\iot-device-client-1.0.17.jar\r\n\tFile2: ...\\Users\\...\\.gradle\\caches\\modules-2\\files-2.1\\com.microsoft.azure.sdk.iot.deps\\websocket-transport-layer\\0.1.2\\3f35a8f3a5786a2c22b99b3db29e2550d86f1c2c\\websocket-transport-layer-0.1.2.jar \r\n\r\n I'm using com.android.tools.build:gradle:2.3.0-beta3 gradle.\r\n\r\nOnly the way I was able to run sample is replacing \"compile ('com.microsoft.azure.sdk.iot:iot-device-client:1.0.17')\" line to \"compile ('com.microsoft.azure.sdk.iot:iot-device-client:1.0.17') {\r\n        exclude group: 'com.microsoft.azure.sdk.iot.deps', module: 'websocket-transport-layer'\r\n    }\"\r\n\r\nP.S. original 1.0.16 version can't be resolved on my side and I had to replace it to 17", "closed": "2017-02-02 18:12:24", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/29", "ttf": 7.000277777777778, "commits": {}, "labels": ["CSS", "bug"], "title": "[Android] Azure iot sdk, Can't run sample for android"}, {"created": "2017-01-12 21:57:49", "user": "tameraw", "body": "_From @dluc on November 29, 2016 2:6_\n\nThe [documentation](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages) mentions a limit on the number of messages per device that can be enqueued:\r\n\r\n> Each device queue holds at most 50 cloud-to-device messages. Trying to send more messages to the same device results in an error\r\n\r\nWhen an application sends more than 50 C2D messages though, no error occurs. The code below for instance, sends **1000 messages** to the same device, without throwing any exception.\r\n\r\n1. Are the messages discarded without exceptions after the 50th, or are they actually enqueued (in which case the documentation doesn't reflect the service behavior) ? \r\n2. If \"50\" is a soft limit, what is the actual hard limit and what exception should one expect ?\r\n\r\nThanks\r\nDevis\r\n\r\nCode:\r\n\r\n```java\r\n/* \r\n    Dependencies:\r\n    iothub-java-service-client  1.0.10\r\n    iothub-java-device-client   1.0.15\r\n*/\r\n\r\nimport com.microsoft.azure.iot.service.sdk.DeliveryAcknowledgement;\r\nimport com.microsoft.azure.iot.service.sdk.IotHubServiceClientProtocol;\r\nimport com.microsoft.azure.iot.service.sdk.Message;\r\nimport com.microsoft.azure.iot.service.sdk.ServiceClient;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.Instant;\r\nimport java.util.Date;\r\nimport java.util.UUID;\r\n\r\npublic class Test\r\n{\r\n    static String hub = System.getenv(\"SDK_HUB_NAME\");\r\n    static String serviceKey = System.getenv(\"SDK_SERVICE_KEY\");\r\n    static String device = System.getenv(\"SDK_DEVICE_ID\");\r\n\r\n    static ServiceClient client;\r\n\r\n    public static void main(String[] args) throws Exception\r\n    {\r\n        log(\"Creating service client\");\r\n        String cs = \"HostName=\" + hub + \".azure-devices.net;SharedAccessKeyName=service;SharedAccessKey=\" + serviceKey;\r\n        client = ServiceClient.createFromConnectionString(cs, IotHubServiceClientProtocol.AMQPS);\r\n\r\n        log(\"Open service client connection\");\r\n        client.open();\r\n\r\n        for (int i = 0; i < 1000; i++) send(i);\r\n\r\n        log(\"Close service client connection\");\r\n        client.close();\r\n\r\n        log(\"Done\");\r\n    }\r\n\r\n    static void send(Integer i) throws Exception\r\n    {\r\n        Message msg = new Message(\"test\".getBytes(StandardCharsets.UTF_8));\r\n        msg.setTo(device);\r\n        msg.setDeliveryAcknowledgement(DeliveryAcknowledgement.Full);\r\n        msg.setExpiryTimeUtc(Date.from(Instant.now().plusSeconds(3600)));\r\n        msg.setMessageId(UUID.randomUUID().toString());\r\n\r\n        log(\"Sending msg #\" + i + \", To: '\" + device + \"', ID: \" + msg.getMessageId() + \", Expire: \" + msg.getExpiryTimeUtc());\r\n        client.send(device, msg);\r\n    }\r\n\r\n    static void log(String text)\r\n    {\r\n        DateFormat dateFormat = new SimpleDateFormat(\"HH:mm:ss.SSS\");\r\n        System.out.println(\"[\" + dateFormat.format(new Date()) + \"] \" + text);\r\n    }\r\n}\r\n```\n\n_Copied from original issue: Azure/azure-iot-sdks#997_", "closed": "2017-03-13 18:20:06", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/23", "ttf": 59.000277777777775, "commits": {}, "labels": ["bug", "fix checked in"], "title": "[Java] No error when sending more than 50 messages (to the same device)"}, {"created": "2017-01-12 19:30:14", "user": "tameraw", "body": "_From @cdpwind on November 17, 2016 3:8_\n\nHi,\r\n\r\nWhen MQTT connection is lost, DeviceClient.close is not working.\r\nIf it is called by my app, there is no return, it seems locking in somewhere.\r\n\n\n_Copied from original issue: Azure/azure-iot-sdks#961_", "closed": "2017-05-08 19:06:56", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/22", "ttf": 115.00027777777778, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "[Android][MQTT] Can't close DeviceClient to open a new connection if MQTT connection is lost."}, {"created": "2017-01-12 19:10:33", "user": "tameraw", "body": "_From @dluc on December 6, 2016 5:46_\n\nWhen a C2D message is rejected by a device, the status of the message (\"feedback record\") is \"unknown\".\r\n\r\nCode: https://gist.github.com/dluc/b5dd54b307b312b74ecb6b25ab4a865d\r\n\r\nExample output, see **\"status code = unknown\"**\r\n```\r\n[21:39:34.880] Creating sender client\r\n[21:39:34.880] Creating message receiver client\r\n[21:39:34.912] Opening message receiver connection\r\n[21:39:35.088] Open sender connection\r\n[21:39:35.089] Sending message, Content: test, ID: 731087f3-91bb-42b5-9dd6-6afcb2807db9\r\n[21:39:36.443] Message received: Content: test, ID: 731087f3-91bb-42b5-9dd6-6afcb2807db9\r\n[21:39:36.443] Replying with REJECT\r\n[21:39:41.237] Creating feedback receiver client\r\n[21:39:41.241] Open feedback receiver connection\r\n[21:39:41.242] Checking the status of the message...\r\n[21:39:41.242] Retrieving feedback batch...\r\n[21:39:48.878] Found feedback batch, size 1\r\n[21:39:48.878] Batch record 731087f3-91bb-42b5-9dd6-6afcb2807db9\r\n[21:39:48.879] Message 731087f3-91bb-42b5-9dd6-6afcb2807db9 feedback found: description = Message rejected; status code = unknown\r\n[21:39:48.879] Close feedback receiver connection\r\n[21:39:48.879] Closing message receiver\r\n[21:39:48.890] Done\r\n```\n\n_Copied from original issue: Azure/azure-iot-sdks#1015_", "closed": "2017-01-30 19:15:55", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/16", "ttf": 18.00027777777778, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "[Java] REJECTed messages have status == \"unknown\""}, {"created": "2017-01-12 19:10:17", "user": "tameraw", "body": "_From @dluc on December 6, 2016 5:58_\n\nWhen a C2D message is abandoned several times by a device, the final status of the message (\"feedback record\") is \"unknown\". Should the status say something about the failed delivery, like the description text?\r\n\r\nCode: https://gist.github.com/dluc/ef348f8c3f11f294f31db12c23289f27\r\n\r\nExample output, see \"status code = unknown\"\r\n\r\n```\r\n[21:53:23.727] Creating sender client\r\n[21:53:23.727] Creating message receiver client\r\n[21:53:23.747] Opening message receiver connection\r\n[21:53:23.902] Open sender connection\r\n[21:53:23.904] Sending message, Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:26.220] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:26.220] Replying with ABANDON\r\n[21:53:26.473] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:26.473] Replying with ABANDON\r\n[21:53:26.725] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:26.725] Replying with ABANDON\r\n[21:53:26.984] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:26.984] Replying with ABANDON\r\n[21:53:27.264] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:27.264] Replying with ABANDON\r\n[21:53:27.584] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:27.584] Replying with ABANDON\r\n[21:53:27.852] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:27.852] Replying with ABANDON\r\n[21:53:28.123] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:28.123] Replying with ABANDON\r\n[21:53:28.372] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:28.372] Replying with ABANDON\r\n[21:53:28.622] Message received: Content: test, ID: 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:28.622] Replying with ABANDON\r\n[21:53:31.218] Creating feedback receiver client\r\n[21:53:31.224] Open feedback receiver connection\r\n[21:53:31.225] Checking the status of the message...\r\n[21:53:31.225] Retrieving feedback batch...\r\n[21:53:32.682] Found feedback batch, size 1\r\n[21:53:32.682] Batch record 731087f3-91bb-42b5-9dd6-6afcb2807db9\r\n[21:53:32.683] Retrieving feedback batch...\r\n[21:53:34.258] Found feedback batch, size 1\r\n[21:53:34.258] Batch record 2f017fb4-6b30-4920-9518-d96733e9301f\r\n[21:53:34.258] Message 2f017fb4-6b30-4920-9518-d96733e9301f feedback found: description = Max delivery count exceeded; status code = unknown\r\n[21:53:34.258] Close feedback receiver connection\r\n[21:53:34.259] Closing message receiver\r\n[21:53:34.270] Done\r\n```\n\n_Copied from original issue: Azure/azure-iot-sdks#1016_", "closed": "2017-01-30 19:15:37", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/15", "ttf": 18.00027777777778, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "[Java] ABANDONed messages have status == \"unknown\" after reaching max number of attempts"}, {"created": "2017-01-12 19:10:02", "user": "tameraw", "body": "_From @dluc on December 6, 2016 6:46_\n\nWhile it's fine to set properties with values containing symbols like \"/\" for C2D messages, the same doesn't work for D2C messages:\r\n\r\nThe code below throws an exception on `d2c.setProperty(key,value)`:\r\n\r\n```\r\nException in thread \"main\" java.lang.IllegalArgumentException: \r\n/root/sub is not a valid IoT Hub message property value.\r\n```\r\n\r\nThe property value validation in `com.microsoft.azure.iothub.MessageProperty` ctor is, I think, too strict (and not consistent with the validation used for C2D messages).\r\n\r\n```\r\npublic class Test\r\n{\r\n    public static void main(String[] args)\r\n    {\r\n        String key = \"location\";\r\n        String value = \"/root/sub\";\r\n\r\n        // Service message\r\n        com.microsoft.azure.iot.service.sdk.Message c2d = new com.microsoft.azure.iot.service.sdk.Message();\r\n        java.util.HashMap<String, String> properties = new java.util.HashMap<>();\r\n        properties.put(key, value);\r\n        c2d.setProperties(properties);\r\n\r\n        // so far so good ...\r\n\r\n        // Device message\r\n        com.microsoft.azure.iothub.Message d2c = new com.microsoft.azure.iothub.Message();\r\n        d2c.setProperty(key, value); // <-- exception here\r\n    }\r\n}\r\n```\n\n_Copied from original issue: Azure/azure-iot-sdks#1017_", "closed": "2017-02-14 18:59:32", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/14", "ttf": 32.000277777777775, "commits": {}, "labels": ["CSS", "bug", "fix checked in"], "title": "[Java] Device-to-Cloud message property value cannot contain '/' (and other symbols)"}, {"created": "2016-12-21 02:05:52", "commits": {"1b2e3c597ad2d48c6231f79f0cd0ea188bc57282": {"commitGHEventType": "referenced", "commitUser": "davilu"}}, "numCommits": 0, "closed": "2017-02-15 18:14:14", "filteredCommits": [], "commitsDetails": [{"nameRev": "1b2e3c597ad2d48c6231f79f0cd0ea188bc57282 tags/2019-12-20~1^2~11^2~79", "commitMessage": "Merge pull request #4 from Azure/wip\n\nDigital Twin interface, implementation and sample", "commitParents": ["0c022d14c6647bee5743fa40063ab0dadfaf8656", "2da24dd4de58187de221d8639ff4891f8a0b5650"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "1b2e3c597ad2d48c6231f79f0cd0ea188bc57282", "authoredDateTime": "2019-09-12 12:02:16", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 22, "deletions": 0, "lines": 22, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/model/DigitalTwinCommandResponse.java"}, {"insertions": 28, "deletions": 0, "lines": 28, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/model/DigitalTwinAsyncCommandUpdate.java"}, {"insertions": 271, "deletions": 0, "lines": 271, "filePath": "digital-twin/device/src/test/java/com/microsoft/azure/sdk/iot/digitaltwin/device/DigitalTwinDeviceClientTest.java"}, {"insertions": 13, "deletions": 0, "lines": 13, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/DigitalTwinCallback.java"}, {"insertions": 22, "deletions": 0, "lines": 22, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/model/DigitalTwinPropertyUpdate.java"}, {"insertions": 19, "deletions": 19, "lines": 38, "filePath": "LICENSE"}, {"insertions": 27, "deletions": 0, "lines": 27, "filePath": ".gitattributes"}, {"insertions": 44, "deletions": 0, "lines": 44, "filePath": "digital-twin/device/pom.xml"}, {"insertions": 247, "deletions": 0, "lines": 247, "filePath": "digital-twin/readme.md"}, {"insertions": 168, "deletions": 0, "lines": 168, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/AbstractDigitalTwinInterfaceClient.java"}, {"insertions": 154, "deletions": 0, "lines": 154, "filePath": "digital-twin/pom.xml"}, {"insertions": 25, "deletions": 0, "lines": 25, "filePath": "digital-twin/sample/pom.xml"}, {"insertions": 35, "deletions": 0, "lines": 35, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/model/DigitalTwinSdkInformation.java"}, {"insertions": 264, "deletions": 0, "lines": 264, "filePath": "digital-twin/sample/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/sample/EnvironmentalSensor.java"}, {"insertions": 228, "deletions": 12, "lines": 240, "filePath": ".gitignore"}, {"insertions": 45, "deletions": 0, "lines": 45, "filePath": "digital-twin/sample/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/sample/Application.java"}, {"insertions": 46, "deletions": 0, "lines": 46, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/serializer/CommandJsonSerializer.java"}, {"insertions": 22, "deletions": 0, "lines": 22, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/model/DigitalTwinPropertyResponse.java"}, {"insertions": 187, "deletions": 10, "lines": 197, "filePath": "README.md"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/model/DigitalTwinReportProperty.java"}, {"insertions": 24, "deletions": 0, "lines": 24, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/serializer/TelemetryJsonSerializer.java"}, {"insertions": 447, "deletions": 0, "lines": 447, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/DigitalTwinDeviceClient.java"}, {"insertions": 55, "deletions": 0, "lines": 55, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/serializer/JsonSerializer.java"}, {"insertions": 10, "deletions": 0, "lines": 10, "filePath": "CODEOWNERS"}, {"insertions": 27, "deletions": 0, "lines": 27, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/model/DigitalTwinInterfaceRegistrationMessage.java"}, {"insertions": 24, "deletions": 0, "lines": 24, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/model/DigitalTwinCommandRequest.java"}, {"insertions": 13, "deletions": 0, "lines": 13, "filePath": "digital-twin/service/pom.xml"}, {"insertions": 47, "deletions": 0, "lines": 47, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/serializer/TwinPropertyJsonSerializer.java"}, {"insertions": 5, "deletions": 0, "lines": 5, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/RegistrationStatus.java"}, {"insertions": 9, "deletions": 0, "lines": 9, "filePath": "digital-twin/device/src/main/java/com/microsoft/azure/sdk/iot/digitaltwin/device/DigitalTwinClientResult.java"}], "commitDateTime": "2019-09-12 12:02:16", "commitUser": "davilu", "commitSpoonAstDiffStats": []}], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/4", "ttf": 56.000277777777775, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "[Java] Memory leak in AmqpsIotHubConnection", "statsSkippedReason": "", "user": "hiro4kuribaya4", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 1, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The Delivery object created by sendMessage () is not released.\r\n\r\n```\r\ndiff -w -u -r /r/downloads/iothub/transport/amqps/AmqpsIotHubConnection.java /r/downloads/AmqpsIotHubConnection.java \r\n--- /r/downloads/iothub/transport/amqps/AmqpsIotHubConnection.java\t2016-12-02 13:25:22.000000000 +0900\r\n+++ /r/downloads/AmqpsIotHubConnection.java\t2016-12-21 10:56:30.000000000 +0900\r\n@@ -339,6 +339,7 @@\r\n             byte[] tag = String.valueOf(this. nextTag++).getBytes();\r\n             Delivery dlv = sender.delivery(tag);\r\n \r\n+\t    try {\r\n             // Codes_SRS_AMQPSIOTHUBCONNECTION_15_018: [The function shall attempt to send the message using the sender link.]\r\n             sender.send(msgData, 0, length);\r\n \r\n@@ -347,6 +348,11 @@\r\n \r\n             // Codes_SRS_AMQPSIOTHUBCONNECTION_15_020: [The function shall set the delivery hash to the value returned by the sender link.]\r\n             deliveryHash = dlv.hashCode();\r\n+\t    } catch (Exception e) {\r\n+\t\tsender.advance();\r\n+\t\tdlv.free();\r\n+\t\tdeliveryHash = -1;\r\n+\t    }\r\n         }\r\n \r\n         // Codes_SRS_AMQPSIOTHUBCONNECTION_15_021: [The function shall return the delivery hash.]\r\n@@ -554,6 +560,7 @@\r\n                 {\r\n                     listener.messageSent(d.hashCode(), state);\r\n                 }\r\n+\t\td.free();\r\n             }\r\n         }\r\n     }\r\n\r\n```", "labels": ["CSS", "bug"]}, {"created": "2019-05-20 11:47:39", "user": "cafijo", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <VERSION>alpine3.9 <!-- Windows 10, Ubuntu 15.04... -->\r\n\r\n- **Java runtime used:** <VERSION>openjdk:8u212-jre<!-- Please include runtime and version -->\r\n\r\n- **SDK version used:** <VERSION>iot-service-client 1.17.0<!-- Please include the SDK version -->\r\n\r\n\r\n# Description of the issue:\r\nError on get tags on DeviceTwinDevice after query all devices. This error was not happening the past month.\r\n\r\n# Code sample exhibiting the issue:\r\n```\r\nSqlQuery sqlQuery = SqlQuery.createSqlQuery(\"*\", SqlQuery.FromType.DEVICES, null, null);\r\nQuery twinQueryCollection = twinClient.queryTwin(sqlQuery.getQuery());\r\n while (twinClient.hasNextDeviceTwin(twinQueryCollection)) {\r\n            DeviceTwinDevice deviceTwin = twinClient.getNextDeviceTwin(twinQueryCollection));\r\nif(!deviceTwin.getTags().isEmpty()) {\r\n--------\r\n }\r\n```\r\n# Console log of the issue:\r\n```\r\njava.lang.IllegalArgumentException: Key cannot contain illegal unicode control characters '.', '$', ' '\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.Pair.<init>(Pair.java:29) ~[iot-service-client-1.17.0.jar!/:na]\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.mapToSet(DeviceTwinDevice.java:598) ~[iot-service-client-1.17.0.jar!/:na]\r\n\tat com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTags(DeviceTwinDevice.java:218) ~[iot-service-client-1.17.0.jar!/:na]\r\n```\r\nI do the same using query iothub from Portal Azure and device tags contains $ on tag's key, like $version and $metadata. Only occurs on IoTHub deployed on EE. UU West. IoTHub deployed in Europe West, the same query does not contains $ on device tags key. I add a snapshot of response queries on different IotHub. \r\n**West Europe Response:**\r\n![WestEurope](https://user-images.githubusercontent.com/1439380/58019314-894ba600-7b05-11e9-88f0-e3bfa73b8d7e.PNG)\r\n**West EE.UU Response:**\r\n![WestUS](https://user-images.githubusercontent.com/1439380/58019316-894ba600-7b05-11e9-9b44-22648b9d472f.PNG)\r\n\r\n", "closed": "2019-06-04 19:50:05", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/522", "ttf": 15.000277777777777, "commits": {}, "labels": ["service bug"], "title": "Error on get tags on DeviceTwinDevice after query all devices"}, {"created": "2019-04-29 22:42:18", "user": "markrad", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n- **OS and version used:** <VERSION> <!-- Windows 10, Ubuntu 15.04... -->\r\nTested on Windows 10\r\n\r\n- **Java runtime used:** <VERSION> <!-- Please include runtime and version -->\r\njava version \"1.8.0_202\"\r\n\r\n- **SDK version used:** <VERSION> <!-- Please include the SDK version -->\r\n1.1.24\r\n\r\n# Description of the issue:\r\n<!-- please be as detailed as possible: which feature has a problem, how often does it fail,  -->\r\nIf one has called subscribeToDesiredProperties on a device at any time in the past, it will continue to behave as if this function was called even if it wasn't.\r\n\r\nRepro Steps:\r\n\r\n1. Create a new device and add a property to the desired twin.\r\n2. With the Java SDK connect as this device to the IoT hub ensuring that subscribeToDesiredProperties is called. This will result in the hub sending a twin update at connection time and whenever a the twin is modified.\r\n3. Remove the call to subscribeToDesiredProperties and connect again. Observe that the device twin update is **still** sent at connection time and when a twin update has been made.\r\n4. Create a second new device and add a property to the desired twin.\r\n5. Using the code above without the call to subscribeToDesiredProperties connect as the second new device. Now the application will not receive twin updates as one would expect.\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\nUse any device twin sample.\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\nNot applicable.\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2019-08-26 19:19:18", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/500", "ttf": 118.00027777777778, "commits": {}, "labels": ["service bug"], "title": "Inconsistent results when one does not call subscribeToDesiredProperties "}, {"created": "2018-07-17 07:05:56", "user": "msdevanms", "body": "<!--\r\nHi there! thank you for discovering and submitting an issue!\r\n\r\nPlease first tell us a little bit about the environment you're running:\r\nThe commands in the comments can be run directly in a command prompt.\r\n-->\r\n\r\n\r\n\r\n- **OS and version used:** <VERSION> Ubuntu 15.04\r\n\r\n- **Java runtime used:** <VERSION> 1.8\r\n- **SDK version used:** <VERSION> provisioning-service-client 1.2.0\r\n\r\n\r\n# Description of the issue:\r\nI have a situation where the cname of the leaf certificate has \"xyz.abc.com\". I am unable to perform individual enrollment using the portal UI due to the regex validation that checks for special chars. However I was able to use the SDK and using the line of code\r\n\r\nIndividualEnrollment deviceEnrollment = new IndividualEnrollment(regId, attestation);\r\n\r\nI was able to enroll successfully with a custom Registration Id. However when the device tries to provision it self I am getting an error \"failure retrieving json auth key value; Failure retrieving data from the provisioning service\". I suspect that the DPS after sucessful authentication is trying to register the device in IoT Hub using the cname as device Id. However the error message doesnt give away much information to conclude so.\r\n\r\nPlease advise how this can be resolved.\r\n\r\n# Code sample exhibiting the issue:\r\n<!-- Please remove any connection string information! -->\r\n\r\n# Console log of the issue:\r\n<!-- Consider setting the DEBUG environment variable to '*'. This will produce a much more verbose output that will help debugging -->\r\n<!-- Don't forget to remove any connection string information! -->\r\n\r\n\r\n# Need Support?\r\n* Have a feature request for SDKs? Please post it on [User Voice](https://feedback.azure.com/forums/321918-azure-iot) to help us prioritize.\r\n* Have a technical question? Ask on [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-iot-hub) with tag \u201cazure-iot-hub\u201d\r\n* Need Support? Every customer with an active Azure subscription has access to support with guaranteed response time.  Consider submitting a ticket and get assistance from Microsoft support team\r\n* Found a bug? Please help us fix it by thoroughly documenting it and filing an issue on GitHub (C, Java, .NET, Node.js, Python).\r\n", "closed": "2018-10-29 22:29:04", "commitsDetails": [], "url": "https://github.com/Azure/azure-iot-sdk-java/issues/277", "ttf": 104.00027777777778, "commits": {}, "labels": ["area-service", "device provisioning service", "service bug"], "title": "\"Failure retrieving data from the provisioning service\" with the certificate  cname  is \"xyz.abc.com\""}]}