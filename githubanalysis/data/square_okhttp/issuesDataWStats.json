{"projectName": "square/okhttp", "bugLabels": ["bug"], "captureTime": "Sat Jul  4 02:23:07 2020", "issues": [{"title": "Forcing WS and WSS to be HTTP and HTTPS causes connection failure", "body": "An okhttp3 Request object uses HttpUrl, which only supports HTTP and HTTPS schemes. Any URL string passed to the Request object by the Builder [is silently changed](https://github.com/square/okhttp/blob/19771365f25d986d125478a75c15d24d6e285e12/okhttp/src/main/kotlin/okhttp3/Request.kt#L173) from WS to HTTP or WSS to HTTPS.\r\n\r\nIn at least one case I have seen a server that responds differently to HTTPS connections: the server appears to assume they are browser requests and sends a redirect notice rather than negotiating WebSocket.\r\n\r\nIdeally the scheme should be preserved by HttpUrl.", "url": "https://github.com/square/okhttp/issues/6159", "user": "rawnsley", "labels": ["bug"], "created": "2020-07-01 12:20:27", "closed": "2020-07-01 14:33:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "hasJournalErrors always true", "body": "\r\nwhen FaultHidingSink meet  java.io.InterruptedIOException: interrupted, and how to recover", "url": "https://github.com/square/okhttp/issues/6156", "user": "qiaoyanfei", "labels": ["bug", "needs info", "stackoverflow"], "created": "2020-06-30 03:04:00", "closed": "2020-06-30 05:09:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\"SSLProtocolException: SSL handshake aborted\" exception on Android 5.1 after migrationg to 4.7.1", "body": "Hi guys!\r\n\r\nAfter migrating from 3.12.0 to 4.7.1\r\nOn Android 5.1 I'm getting SSLProtocolException :\r\n> Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x7f2719a89e80: Failure in SSL library, usually a protocol error\r\n    error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:770 0x7f2728a53ea0:0x00000000)\r\n        at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\r\n        at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:318)\r\n\r\nThe host I'm trying to connect is admin-api-stg.oitchau.com.br\r\n\r\nI have tried this:\r\n```\r\n.connectionSpecs(\r\n                listOf(\r\n                    ConnectionSpec.Builder(ConnectionSpec.COMPATIBLE_TLS)\r\n                        .build()\r\n                )\r\n            )\r\n```\r\nBut no luck", "url": "https://github.com/square/okhttp/issues/6147", "user": "lemberh", "labels": ["bug"], "created": "2020-06-26 00:34:08", "closed": "2020-06-26 15:41:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fatal Exception: java.lang.RuntimeException java.net.URISyntaxException: Illegal character in authority at index 8: https://40.2\"n/ okhttp3.HttpUrl.uri", "body": "Caused by java.net.URISyntaxException\r\nIllegal character in authority at index 8: https://40.2\"n/\r\njava.net.URI$Parser.fail (URI.java:2893)\r\njava.net.URI.<init> (URI.java:584)\r\nokhttp3.HttpUrl.uri (HttpUrl.java:377)\r\nokhttp3.internal.connection.RouteSelector.resetNextProxy (RouteSelector.java:117)\r\nokhttp3.internal.connection.RouteSelector.<init> (RouteSelector.java:61)\r\nokhttp3.internal.connection.StreamAllocation.<init> (StreamAllocation.java:89)\r\nokhttp3.internal.http.RetryAndFollowUpInterceptor.intercept (RetryAndFollowUpInterceptor.java:107)\r\nokhttp3.internal.http.RealInterceptorChain.proceed (RealInterceptorChain.java:92)\r\nokhttp3.internal.http.RealInterceptorChain.proceed (RealInterceptorChain.java:67)\r\nokhttp3.RealCall.getResponseWithInterceptorChain (RealCall.java:185)\r\nokhttp3.RealCall$AsyncCall.execute (RealCall.java:135)\r\nokhttp3.internal.NamedRunnable.run (NamedRunnable.java:32)\r\njava.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1167)\r\njava.lang.Thread.run (Thread.java:764)", "url": "https://github.com/square/okhttp/issues/6144", "user": "Mayank1904", "labels": ["bug"], "created": "2020-06-24 11:23:19", "closed": "2020-06-27 10:12:30", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "`okhttp3.internal.Util.closeQuietly` isn't that quite", "body": "It seems that an issue with the underlying buffer / connection may lead to an `Exception` (or even `Error`!) thrown from `close` method of the response. An example:\r\n```java\r\n    java.lang.AssertionError: java.io.EOFException\r\n        at okio.Buffer.clear(Buffer.java:932)\r\n        at okio.RealBufferedSource.close(RealBufferedSource.java:477)\r\n        at okhttp3.internal.Util.closeQuietly(Util.java:139)\r\n```\r\n\r\nWhat surprised us is `Util.closeQuietly` in the stacktrace.\r\nIsn't it supposed to catch such errors and e.g. log instead of re-throwing?", "url": "https://github.com/square/okhttp/issues/6142", "user": "bsideup", "labels": ["bug"], "created": "2020-06-23 06:56:18", "closed": "2020-06-27 11:12:23", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "MockWebServer exception with android studio 4.2: java.lang.NoSuchFieldError: okHttpName", "body": "Running a unit test with `MockWebServer` on Android Studio 4.2 will throw an exception:\r\n\r\n```\r\njava.lang.NoSuchFieldError: okHttpName\r\n\r\n\tat okhttp3.internal.concurrent.TaskRunner.<clinit>(TaskRunner.kt:309)\r\n\tat okhttp3.mockwebserver.MockWebServer.<init>(MockWebServer.kt:103)\r\n```\r\n\r\nExample:\r\n\r\n```\r\nclass MockTest {\r\n    private val server = MockWebServer()\r\n\r\n    @Test\r\n    fun `not important`() {\r\n    }\r\n}\r\n```\r\n\r\n```\r\nandroid.testOptions {\r\n        animationsDisabled = true\r\n\r\n        unitTests {\r\n            all {\r\n                // Skip bytecode verification when running tests.\r\n                // This line is added because the addition of the foursquare's Pilgrim SDK\r\n                // was breaking unit tests (java.lang.VerifyError) -\r\n                // possibly because that dependency was compiled with a different version of Java.\r\n                jvmArgs '-ea', '-noverify'\r\n                jacoco {\r\n                    includeNoLocationClasses = true\r\n                }\r\n            }\r\n            includeAndroidResources true\r\n            returnDefaultValues = true\r\n        }\r\n        execution 'ANDROIDX_TEST_ORCHESTRATOR'\r\n    }\r\n```\r\n\r\nUsing AGP 4.0.0\r\n\r\nThe same tests run ok using Gradle CLI", "url": "https://github.com/square/okhttp/issues/6140", "user": "auras", "labels": ["bug"], "created": "2020-06-22 08:33:05", "closed": "2020-06-24 11:26:05", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "SSL request on Databricks fails with handshake_failure", "body": "# Problem Description\r\nI'm sending metrics from a Spark job on Azure Databricks to Datadog. The library I'm using (kamon-datadog @ https://github.com/kamon-io/Kamon/tree/v2.1.1) uses OkHttp3 (version 3.14.7, but problem also occurs on 4.7.2) for communication with the Datadog API at https://api.datadoghq.com/ \r\n\r\nRunning the Spark job locally works without any problems. Running it on Databricks fails with a `handshake_failure` error. After quite extensive debugging I was able to pinpoint the problem to the combination of OkHttp3 and Databricks. \r\n\r\n# How to reproduce\r\nI can reliably reproduce the issue by starting a new notebook in Azure Databricks on a cluster (I tested Databricks 6.5 (Spark 2.4.5 / Scala 2.11 / Java 1.8.0_242) and 7.0 (Spark 3.0 / Scala 2.12 / Java 1.11.655)) with the OkHttp3 4.7.2 library installed (or any older version I tried), and running the following code:\r\n\r\n```scala\r\nimport okhttp3.{OkHttpClient, Request}\r\n\r\nval cl: OkHttpClient = new OkHttpClient()\r\nval req = new Request.Builder()\r\n  .url(\"https://api.datadoghq.com/account/login?next=%2F\")\r\n  .method(\"GET\", null)\r\n  .build()\r\ncl.newCall(req).execute().toString\r\n```\r\n\r\n# Stacktrace\r\nThis is the full stacktrace I receive (on Java 8):\r\n\r\n```\r\njavax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure\r\n\tat sun.security.ssl.Alerts.getSSLException(Alerts.java:192)\r\n\tat sun.security.ssl.Alerts.getSSLException(Alerts.java:154)\r\n\tat sun.security.ssl.SSLSocketImpl.recvAlert(SSLSocketImpl.java:2020)\r\n\tat sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1127)\r\n\tat sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1367)\r\n\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1395)\r\n\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1379)\r\n\tat okhttp3.internal.connection.RealConnection.connectTls(RealConnection.kt:367)\r\n\tat okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.kt:325)\r\n\tat okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:197)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:249)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:108)\r\n\tat okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:76)\r\n\tat okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:245)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:96)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:197)\r\n\tat okhttp3.internal.connection.RealCall.execute(RealCall.kt:148)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read$$iw$$iw$$iw$$iw$$iw$$iw.<init>(command-2919730791141205:21)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read$$iw$$iw$$iw$$iw$$iw.<init>(command-2919730791141205:71)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read$$iw$$iw$$iw$$iw.<init>(command-2919730791141205:73)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read$$iw$$iw$$iw.<init>(command-2919730791141205:75)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read$$iw$$iw.<init>(command-2919730791141205:77)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read$$iw.<init>(command-2919730791141205:79)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read.<init>(command-2919730791141205:81)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read$.<init>(command-2919730791141205:85)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$read$.<clinit>(command-2919730791141205)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$eval$.$print$lzycompute(<notebook>:7)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$eval$.$print(<notebook>:6)\r\n\tat line4f279a02c14c4d08aec3bb073b25d6e927.$eval.$print(<notebook>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:793)\r\n\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1054)\r\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:645)\r\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:644)\r\n\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\r\n\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\r\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:644)\r\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)\r\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:572)\r\n\tat com.databricks.backend.daemon.driver.DriverILoop.execute(DriverILoop.scala:215)\r\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply$mcV$sp(ScalaDriverLocal.scala:202)\r\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply(ScalaDriverLocal.scala:202)\r\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply(ScalaDriverLocal.scala:202)\r\n\tat com.databricks.backend.daemon.driver.DriverLocal$TrapExitInternal$.trapExit(DriverLocal.scala:714)\r\n\tat com.databricks.backend.daemon.driver.DriverLocal$TrapExit$.apply(DriverLocal.scala:667)\r\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal.repl(ScalaDriverLocal.scala:202)\r\n\tat com.databricks.backend.daemon.driver.DriverLocal$$anonfun$execute$9.apply(DriverLocal.scala:396)\r\n\tat com.databricks.backend.daemon.driver.DriverLocal$$anonfun$execute$9.apply(DriverLocal.scala:373)\r\n\tat com.databricks.logging.UsageLogging$$anonfun$withAttributionContext$1.apply(UsageLogging.scala:238)\r\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\r\n\tat com.databricks.logging.UsageLogging$class.withAttributionContext(UsageLogging.scala:233)\r\n\tat com.databricks.backend.daemon.driver.DriverLocal.withAttributionContext(DriverLocal.scala:49)\r\n\tat com.databricks.logging.UsageLogging$class.withAttributionTags(UsageLogging.scala:275)\r\n\tat com.databricks.backend.daemon.driver.DriverLocal.withAttributionTags(DriverLocal.scala:49)\r\n\tat com.databricks.backend.daemon.driver.DriverLocal.execute(DriverLocal.scala:373)\r\n\tat com.databricks.backend.daemon.driver.DriverWrapper$$anonfun$tryExecutingCommand$2.apply(DriverWrapper.scala:644)\r\n\tat com.databricks.backend.daemon.driver.DriverWrapper$$anonfun$tryExecutingCommand$2.apply(DriverWrapper.scala:644)\r\n\tat scala.util.Try$.apply(Try.scala:192)\r\n\tat com.databricks.backend.daemon.driver.DriverWrapper.tryExecutingCommand(DriverWrapper.scala:639)\r\n\tat com.databricks.backend.daemon.driver.DriverWrapper.getCommandOutputAndError(DriverWrapper.scala:485)\r\n\tat com.databricks.backend.daemon.driver.DriverWrapper.executeCommand(DriverWrapper.scala:597)\r\n\tat com.databricks.backend.daemon.driver.DriverWrapper.runInnerLoop(DriverWrapper.scala:390)\r\n\tat com.databricks.backend.daemon.driver.DriverWrapper.runInner(DriverWrapper.scala:337)\r\n\tat com.databricks.backend.daemon.driver.DriverWrapper.run(DriverWrapper.scala:219)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n# Workaround\r\n\r\nI found a similar issue on Stackoverflow: https://stackoverflow.com/questions/57297159/databricks-job-getting-javax-net-ssl-sslhandshakeexception-received-fatal-alert\r\n\r\nBased on the \"solution\" I tried swapping out the request to Unirest which works without any issues, both locally as on Databricks.\r\n\r\n# In conclusion\r\n\r\nIt seems that something in the combination of Databricks and OkHttp3 is making specific SSL connections fail. Datadog happens to fail, but several other sites I tried work just fine using OkHttp on Databricks.\r\n\r\nIf there's any other info I can provide, let me know.\r\n", "url": "https://github.com/square/okhttp/issues/6138", "user": "EgbertW", "labels": ["bug"], "created": "2020-06-21 19:46:23", "closed": "2020-06-22 11:29:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Jdk9Platform.kt: Unresolved reference: applicationProtocols", "body": "```\r\ne: /okhttp/src/main/kotlin/okhttp3/internal/platform/Jdk9Platform.kt: (36, 19): Unresolved reference: applicationProtocols\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/6136", "user": "jiangkang", "labels": ["bug"], "created": "2020-06-20 08:17:13", "closed": "2020-06-20 09:21:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.ExceptionInInitializerError for Android < 4.4", "body": "We have an issue that is reported from Crashlytics and it arise only for Android < 4.4 version.\r\n\r\n    implementation \"com.squareup.okhttp3:okhttp:4.7.2\"\r\n    implementation \"com.squareup.okhttp3:logging-interceptor:4.7.2\"\r\n\r\n> java.lang.ExceptionInInitializerError: \r\n  at okhttp3.internal.platform.Platform$Companion.findAndroidPlatform (Platform.java:219)\r\n  at okhttp3.internal.platform.Platform$Companion.findPlatform (Platform.java:212)\r\n  at okhttp3.internal.platform.Platform$Companion.access$findPlatform (Platform.java:169)\r\n  at okhttp3.internal.platform.Platform.<clinit> (Platform.java:170)\r\n  at okhttp3.OkHttpClient.<init> (OkHttpClient.java:237)\r\n  at okhttp3.OkHttpClient$Builder.build (OkHttpClient.java:1069)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.modules.PicassoModule.providesFiamController (PicassoModule.java:46)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.modules.PicassoModule_ProvidesFiamControllerFactory.providesFiamController (PicassoModule_ProvidesFiamControllerFactory.java:43)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.modules.PicassoModule_ProvidesFiamControllerFactory.get (PicassoModule_ProvidesFiamControllerFactory.java:32)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.modules.PicassoModule_ProvidesFiamControllerFactory.get (PicassoModule_ProvidesFiamControllerFactory.java:11)\r\n  at dagger.internal.DoubleCheck.get (DoubleCheck.java:47)\r\n  at com.google.firebase.inappmessaging.display.internal.FiamImageLoader_Factory.get (FiamImageLoader_Factory.java:21)\r\n  at com.google.firebase.inappmessaging.display.internal.FiamImageLoader_Factory.get (FiamImageLoader_Factory.java:8)\r\n  at dagger.internal.DoubleCheck.get (DoubleCheck.java:47)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplay_Factory.get (FirebaseInAppMessagingDisplay_Factory.java:57)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplay_Factory.get (FirebaseInAppMessagingDisplay_Factory.java:16)\r\n  at dagger.internal.DoubleCheck.get (DoubleCheck.java:47)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.components.DaggerAppComponent.providesFirebaseInAppMessagingUI (DaggerAppComponent.java:80)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplayRegistrar.buildFirebaseInAppMessagingUI (FirebaseInAppMessagingDisplayRegistrar.java:74)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplayRegistrar.access$lambda$0 (FirebaseInAppMessagingDisplayRegistrar.java)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplayRegistrar$$Lambda$1.create (FirebaseInAppMessagingDisplayRegistrar.java)\r\n  at com.google.firebase.components.ComponentRuntime.lambda$new$0 (ComponentRuntime.java:69)\r\n  at com.google.firebase.components.ComponentRuntime$$Lambda$1.get (ComponentRuntime.java)\r\n  at com.google.firebase.components.Lazy.get (Lazy.java:53)\r\n  at com.google.firebase.components.ComponentRuntime.initializeEagerComponents (ComponentRuntime.java:158)\r\n  at com.google.firebase.FirebaseApp.initializeAllApis (FirebaseApp.java:563)\r\n  at com.google.firebase.FirebaseApp.initializeApp (FirebaseApp.java:304)\r\n  at com.google.firebase.FirebaseApp.initializeApp (FirebaseApp.java:268)\r\n  at com.google.firebase.FirebaseApp.initializeApp (FirebaseApp.java:253)\r\n  at com.google.firebase.provider.FirebaseInitProvider.onCreate (FirebaseInitProvider.java:51)\r\n  at android.content.ContentProvider.attachInfo (ContentProvider.java:1616)\r\n  at android.content.ContentProvider.attachInfo (ContentProvider.java:1587)\r\n  at com.google.firebase.provider.FirebaseInitProvider.attachInfo (FirebaseInitProvider.java:45)\r\n  at android.app.ActivityThread.installProvider (ActivityThread.java:5081)\r\n  at android.app.ActivityThread.installContentProviders (ActivityThread.java:4673)\r\n  at android.app.ActivityThread.handleBindApplication (ActivityThread.java:4613)\r\n  at android.app.ActivityThread.access$1800 (ActivityThread.java:141)\r\n  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:1298)\r\n  at android.os.Handler.dispatchMessage (Handler.java:102)\r\n  at android.os.Looper.loop (Looper.java:136)\r\n  at android.app.ActivityThread.main (ActivityThread.java:5333)\r\n  at java.lang.reflect.Method.invokeNative (Method.java)\r\n  at java.lang.reflect.Method.invoke (Method.java:515)\r\n  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:895)\r\n  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:711)\r\n  at dalvik.system.NativeStart.main (NativeStart.java)\r\nCaused by: java.lang.IllegalStateException: \r\n  at okhttp3.internal.platform.AndroidPlatform.<clinit> (AndroidPlatform.java:151)\r\n  at okhttp3.internal.platform.Platform$Companion.findAndroidPlatform (Platform.java:219)\r\n  at okhttp3.internal.platform.Platform$Companion.findPlatform (Platform.java:212)\r\n  at okhttp3.internal.platform.Platform$Companion.access$findPlatform (Platform.java:169)\r\n  at okhttp3.internal.platform.Platform.<clinit> (Platform.java:170)\r\n  at okhttp3.OkHttpClient.<init> (OkHttpClient.java:237)\r\n  at okhttp3.OkHttpClient$Builder.build (OkHttpClient.java:1069)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.modules.PicassoModule.providesFiamController (PicassoModule.java:46)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.modules.PicassoModule_ProvidesFiamControllerFactory.providesFiamController (PicassoModule_ProvidesFiamControllerFactory.java:43)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.modules.PicassoModule_ProvidesFiamControllerFactory.get (PicassoModule_ProvidesFiamControllerFactory.java:32)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.modules.PicassoModule_ProvidesFiamControllerFactory.get (PicassoModule_ProvidesFiamControllerFactory.java:11)\r\n  at dagger.internal.DoubleCheck.get (DoubleCheck.java:47)\r\n  at com.google.firebase.inappmessaging.display.internal.FiamImageLoader_Factory.get (FiamImageLoader_Factory.java:21)\r\n  at com.google.firebase.inappmessaging.display.internal.FiamImageLoader_Factory.get (FiamImageLoader_Factory.java:8)\r\n  at dagger.internal.DoubleCheck.get (DoubleCheck.java:47)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplay_Factory.get (FirebaseInAppMessagingDisplay_Factory.java:57)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplay_Factory.get (FirebaseInAppMessagingDisplay_Factory.java:16)\r\n  at dagger.internal.DoubleCheck.get (DoubleCheck.java:47)\r\n  at com.google.firebase.inappmessaging.display.internal.injection.components.DaggerAppComponent.providesFirebaseInAppMessagingUI (DaggerAppComponent.java:80)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplayRegistrar.buildFirebaseInAppMessagingUI (FirebaseInAppMessagingDisplayRegistrar.java:74)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplayRegistrar.access$lambda$0 (FirebaseInAppMessagingDisplayRegistrar.java)\r\n  at com.google.firebase.inappmessaging.display.FirebaseInAppMessagingDisplayRegistrar$$Lambda$1.create (FirebaseInAppMessagingDisplayRegistrar.java)\r\n  at com.google.firebase.components.ComponentRuntime.lambda$new$0 (ComponentRuntime.java:69)\r\n  at com.google.firebase.components.ComponentRuntime$$Lambda$1.get (ComponentRuntime.java)\r\n  at com.google.firebase.components.Lazy.get (Lazy.java:53)\r\n  at com.google.firebase.components.ComponentRuntime.initializeEagerComponents (ComponentRuntime.java:158)\r\n  at com.google.firebase.FirebaseApp.initializeAllApis (FirebaseApp.java:563)\r\n  at com.google.firebase.FirebaseApp.initializeApp (FirebaseApp.java:304)\r\n  at com.google.firebase.FirebaseApp.initializeApp (FirebaseApp.java:268)\r\n  at com.google.firebase.FirebaseApp.initializeApp (FirebaseApp.java:253)\r\n  at com.google.firebase.provider.FirebaseInitProvider.onCreate (FirebaseInitProvider.java:51)\r\n  at android.content.ContentProvider.attachInfo (ContentProvider.java:1616)\r\n  at android.content.ContentProvider.attachInfo (ContentProvider.java:1587)\r\n  at com.google.firebase.provider.FirebaseInitProvider.attachInfo (FirebaseInitProvider.java:45)\r\n  at android.app.ActivityThread.installProvider (ActivityThread.java:5081)\r\n  at android.app.ActivityThread.installContentProviders (ActivityThread.java:4673)\r\n  at android.app.ActivityThread.handleBindApplication (ActivityThread.java:4613)\r\n  at android.app.ActivityThread.access$1800 (ActivityThread.java:141)\r\n  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:1298)\r\n  at android.os.Handler.dispatchMessage (Handler.java:102)\r\n  at android.os.Looper.loop (Looper.java:136)\r\n  at android.app.ActivityThread.main (ActivityThread.java:5333)\r\n  at java.lang.reflect.Method.invokeNative (Method.java)\r\n  at java.lang.reflect.Method.invoke (Method.java:515)\r\n  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:895)\r\n  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:711)\r\n  at dalvik.system.NativeStart.main (NativeStart.java)", "url": "https://github.com/square/okhttp/issues/6131", "user": "Belka1000867", "labels": ["bug"], "created": "2020-06-17 15:25:59", "closed": "2020-06-17 16:39:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": " OkHttp Dispatcher", "body": "06-11 08:55:03.470 14490-2778/com.tatweer.vehicledashboardapp.dev E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n    Process: com.tatweer.vehicledashboardapp.dev, PID: 14490\r\n    java.lang.StackOverflowError: stack size 1038KB\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n        at io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(SingleFlatMapCompletable.java:102)\r\n    \tat io.reactivex.internal.operators.single.SingleFlatMapCompletable$FlatMapCompletableObserver.onComplete(Single\r\n", "url": "https://github.com/square/okhttp/issues/6126", "user": "Elswah", "labels": ["bug"], "created": "2020-06-11 05:53:22", "closed": "2020-06-11 06:41:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Transform failed org.bouncycastle/bcprov-jdk15on/1.65", "body": "Upgraded OkHttp to 4.7.2 and now build gives this error:\r\n\r\n`Failed to transform '/Users/naukellich/.gradle/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk15on/1.65/320b989112f00a63a3bcfa5a98f31a4f865a20fa/bcprov-jdk15on-1.65.jar' using Jetifier. Reason: null. (Run with --stacktrace for more details.)`\r\n", "url": "https://github.com/square/okhttp/issues/6125", "user": "naukellich", "labels": ["bug", "needs info"], "created": "2020-06-10 09:37:00", "closed": "2020-06-12 22:01:43", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Android - okhttp3.internal.io.FileSystem$Companion$SYSTEM$1.rename (FileSystem.java:89) crash", "body": "These crashes keep happening:\r\n`failed to rename /data/user/0/com.package/cache/62ac51d56050cb47dea413039d3e3b67.0.tmp to /data/user/0/com.package/cache/62ac51d56050cb47dea413039d3e3b67.0`\r\n\r\nThey happen randomly and not all the time, I'm unable to reproduce which makes it all the more confusing. The crashes are all similar to this one, but will sometimes be \"delete\" or \"read\"\r\n\r\nThey're happening too often to ignore. Is there a way to mitigate or fix this this? As far as I can tell, it happens on most devices. I apologize for the lack of information. We're using version 4.5.0.\r\n", "url": "https://github.com/square/okhttp/issues/6123", "user": "SomeKoder", "labels": ["android", "bug", "needs info"], "created": "2020-06-09 18:54:28", "closed": "2020-06-14 06:59:35", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "EventListener.connectFailed() callback has not called in case of client certificate has been expired", "body": "I am using okhttp-3.12.6 library.\r\n\r\nI understand that the connection establishment process for TLS two-way authentication is as follows.\r\n\r\n1. Send the server certificate from the server to the client.\r\n2. The client checks the expiration period of the server certificate.\r\n3. If it has not expired, the client sends a client certificate to the server\r\n4. The server checks the expiration period of the client certificate.\r\n\r\n\r\nI implemented okhttp3's EventListener to print the log in all callback methods.\r\n\r\nCase 1-Server Certificate Expiration, Client Certificate Expiration\r\n\r\n```\r\ncallStart\r\ndnsStart\r\ndnsEnd\r\nconnectStart\r\nsecureConnectStart\r\n\r\nconnectFailed-javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found. java.security.cert.CertificateException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\r\n\r\ncallFailed-javax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found. java.security.cert.CertificateException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\r\n```\r\n\r\nIn case 1, the connectFailed callback was called because the server certificate has expired.\r\n\r\n\r\nCase 2 - Server certificate never expires, client certificate expires\r\n\r\n```\r\ncallStart\r\ndnsStart\r\ndnsEnd\r\nconnectStart\r\nsecureConnectStart\r\nsecureConnectEnd\r\nconnectEnd\r\nconnectionAcquired\r\nconnectionReleased\r\n\r\ncallFailed javax.net.ssl.SSLProtocolException: Read error: ssl=0x7db18ac008: Failure in SSL library, usually a protocol error\r\nerror:10000415:SSL routines:OPENSSL_internal:SSLV3_ALERT_CERTIFICATE_EXPIRED (external/boringssl/src/ssl/tls_record.cc:592 0x7db18fe288:0x00000001)\r\n```\r\n\r\nIn case 2, the connectFailed callback was not called even though the client certificate expired.\r\n\r\n\r\nthe connectFailed callback called when the server certificate expires, but why does the connectFailed callback not called when the client certificate expires?\r\n\r\nI understand that the process of establishing a TLS connection involves sending and receiving both server and client certificates.\r\n\r\nIs this a bug?\r\n\r\n(To test you should issue both server and client certificates.\r\nTo expire the certificate, you can use the method of adjusting the local time or issue the actual expired certificate.)", "url": "https://github.com/square/okhttp/issues/6115", "user": "puresprout", "labels": ["bug"], "created": "2020-06-05 12:26:23", "closed": "2020-06-06 19:25:21", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "I got java.io.EOFException sometime", "body": "Hi, I got java.io.EOFException sometime, about six for one hour,  my okhttp lib version is 3.11.0,\r\npls kindly reply to me. Thks\r\n\r\n\r\njava.io.EOFException\r\nat okio.RealBufferedSource.require(RealBufferedSource.kt:55)\r\nat okio.RealBufferedSource.readHexadecimalUnsignedLong(RealBufferedSource.kt:299)\r\nat okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource.readChunkSize(Http1ExchangeCodec.kt:450)\r\nat okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource.read(Http1ExchangeCodec.kt:429)\r\nat okhttp3.internal.connection.Exchange$ResponseBodySource.read(Exchange.kt:279)\r\nat okio.Buffer.writeAll(Buffer.kt:1104)\r\nat okio.RealBufferedSource.readString(RealBufferedSource.kt:194)\r\nat okhttp3.ResponseBody.string(ResponseBody.kt:187)\r\nat com.mongoproxy.client.OkHttp.postForm(OkHttp.java:83)", "url": "https://github.com/square/okhttp/issues/6113", "user": "shllove", "labels": ["bug", "stackoverflow"], "created": "2020-06-03 15:39:06", "closed": "2020-06-03 19:34:28", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NoClassDefFoundError on API 23 when using coreLibraryDesugaring", "body": "I recently updated to AGP 4.0 and wanted to activate coreLibraryDesugaring to benefit from it using java.time. Then I experienced a problem on an API 23 emulator (API 21 and 29 do not have this problem).\r\n\r\n```\r\nNo pending exception expected: java.lang.NoClassDefFoundError: $r8$wrapper$java$util$Spliterator$-WRP\r\nat java.lang.Class dalvik.system.DexFile.defineClassNative(java.lang.String, java.lang.ClassLoader, java.lang.Object) (DexFile.java:-2)\r\nat java.lang.Class dalvik.system.DexFile.defineClass(java.lang.String, java.lang.ClassLoader, java.lang.Object, java.util.List) (DexFile.java:226)\r\nat java.lang.Class dalvik.system.DexFile.loadClassBinaryName(java.lang.String, java.lang.ClassLoader, java.util.List) (DexFile.java:219)\r\nat java.lang.Class dalvik.system.DexPathList.findClass(java.lang.String, java.util.List) (DexPathList.java:338)\r\nat java.lang.Class dalvik.system.BaseDexClassLoader.findClass(java.lang.String) (BaseDexClassLoader.java:54)\r\nat java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String, boolean) (ClassLoader.java:511)\r\nat java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String) (ClassLoader.java:469)\r\nat void okhttp3.internal.Util.<clinit>() (Util.kt:64)\r\nat void okhttp3.internal.concurrent.TaskRunner.<clinit>() (TaskRunner.kt:309)\r\nat void okhttp3.ConnectionPool.<init>(int, long, java.util.concurrent.TimeUnit) (ConnectionPool.kt:41)\r\nat void okhttp3.ConnectionPool.<init>() (ConnectionPool.kt:47)\r\nat void okhttp3.OkHttpClient$Builder.<init>() (OkHttpClient.kt:471)\r\n```\r\n\r\nThe crash occurs when executing \r\n`OkHttpClient.Builder clientBuilder = new OkHttpClient.Builder();`\r\n\r\nAs soon as I remove `coreLibraryDesugaringEnabled true` from my `build.gradle` the problem is gone.\r\n\r\nOkHttp versions tested: 4.6.0 and 4.7.2\r\nAndroid version affected: API 23 (Android 6.0)\r\nAndroid versions also tested but not affected: API 21 and API 29", "url": "https://github.com/square/okhttp/issues/6112", "user": "PhilippNowak96", "labels": ["bug"], "created": "2020-06-03 09:56:46", "closed": "2020-06-03 10:09:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ArrayIndexOutOfBoundsException in topPrivateDomain()", "body": "hello friends!\r\n\r\non com.squareup.okhttp3:okhttp:4.7.2\r\n\r\nit looks like a valid HttpUrl is created from a URL like `http://a./` but calling `topPrivateDomain()` throws a `ArrayIndexOutOfBoundsException`\r\n\r\nI'm not sure if the url should fail to parse or topPrivateDomain should just return null.\r\n\r\nrepro:\r\n\r\n```kotlin\r\nimport okhttp3.HttpUrl.Companion.toHttpUrl\r\nimport org.junit.jupiter.api.Test\r\n\r\nclass HttpBug {\r\n  @Test fun test() {\r\n    \"http://a./\".toHttpUrl().topPrivateDomain()\r\n  }\r\n}\r\n```\r\n\r\n```\r\njava.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion.binarySearch(PublicSuffixDatabase.kt:278)\r\n\tat okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion.access$binarySearch(PublicSuffixDatabase.kt:227)\r\n\tat okhttp3.internal.publicsuffix.PublicSuffixDatabase.findMatchingRule(PublicSuffixDatabase.kt:109)\r\n\tat okhttp3.internal.publicsuffix.PublicSuffixDatabase.getEffectiveTldPlusOne(PublicSuffixDatabase.kt:71)\r\n\tat okhttp3.HttpUrl.topPrivateDomain(HttpUrl.kt:773)\r\n```", "url": "https://github.com/square/okhttp/issues/6109", "user": "shellderp", "labels": ["bug"], "created": "2020-06-02 16:41:01", "closed": "2020-06-04 07:02:58", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "java.lang.IllegalStateException: closed", "body": "StackTrace:\r\n```\r\n    java.lang.IllegalStateException: closed\r\n        at okio.RealBufferedSource.request(RealBufferedSource.java:66)\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:253)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:250)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:201)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n```\r\n\r\nLatest request I see in logs is:\r\n```\r\n2020-06-01 18:36:51.649 22455-22557/com.faberlicchat D/OkHttp: <-- 500 Internal Server Error https://srvchat.faberlic.com/FLChat/events (30135ms)\r\n2020-06-01 18:36:51.650 22455-22557/com.faberlicchat D/OkHttp: Server: nginx\r\n2020-06-01 18:36:51.650 22455-22557/com.faberlicchat D/OkHttp: Date: Mon, 01 Jun 2020 15:36:16 GMT\r\n2020-06-01 18:36:51.650 22455-22557/com.faberlicchat D/OkHttp: Content-Type: application/json; charset=utf-8\r\n2020-06-01 18:36:51.650 22455-22557/com.faberlicchat D/OkHttp: Content-Length: 4644\r\n2020-06-01 18:36:51.650 22455-22557/com.faberlicchat D/OkHttp: Connection: keep-alive\r\n2020-06-01 18:36:51.650 22455-22557/com.faberlicchat D/OkHttp: Cache-Control: private\r\n2020-06-01 18:36:51.651 22455-22557/com.faberlicchat D/OkHttp: X-AspNet-Version: 4.0.30319\r\n2020-06-01 18:36:51.651 22455-22557/com.faberlicchat D/OkHttp: X-Powered-By: ASP.NET\r\n```\r\n\r\nThe cause might be that server responded with no body while OkHttp attempted to read it", "url": "https://github.com/square/okhttp/issues/6106", "user": "H4kt", "labels": ["bug", "needs info"], "created": "2020-06-01 15:40:17", "closed": "2020-06-02 06:40:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Chain.with*Timeout methods do not work with Network Interceptors", "body": "code to reproduce\r\n```\r\noverride fun intercept(chain: Interceptor.Chain): okhttp3.Response {\r\n  chain\r\n    .withReadTimeout(1, TimeUnit.MILLISECONDS)\r\n    .proceed(request)\r\n}\r\n\r\n```\r\n\r\nexception\r\n```\r\n    java.lang.IllegalStateException: network interceptor misk.client.NetworkInterceptorWrapper@1429341e must call proceed() exactly once\r\n    \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:104)\r\n    \tat io.opentracing.contrib.okhttp3.TracingCallFactory$NetworkInterceptor.intercept(TracingCallFactory.java:105)\r\n    \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n    \tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:34)\r\n    \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n    \tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n    \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n    \tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)\r\n    \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n    \tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)\r\n    \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n    \tat datadog.trace.instrumentation.okhttp3.TracingInterceptor.intercept(TracingInterceptor.java:36)\r\n    \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n    \tat io.opentracing.contrib.okhttp3.TracingCallFactory$1.intercept(TracingCallFactory.java:59)\r\n    \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n    \tat okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:197)\r\n    \tat okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:502)\r\n    \tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n    \tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n    \tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```\r\n\r\nThe issue is `withReadTimeout` creates a copy of the `Chain`, so the previous `Interceptor` that invoked this `Interceptor` no longer has a reference to the `Chain`. The previous `Interceptor` attempts to verify that this `Interceptor` actually called `proceed` by checking the value of `calls`. However, this `Interceptor`, which has a copy of the `Chain`, updates a different `calls` reference when invoking `proceed`.\r\n\r\nProblematic code:\r\nhttps://github.com/square/okhttp/blob/19771365f25d986d125478a75c15d24d6e285e12/okhttp/src/main/kotlin/okhttp3/internal/http/RealInterceptorChain.kt#L104\r\n\r\nMore than happy to contribute a fix. Would it make more sense to make `Chain` mutable (update timeouts) or pass a reference to `calls` around? I lean towards making `Chain` mutable to prevent similar bugs like this in the future. However, I'm not familiar with what problems a mutable `Chain` might cause.", "url": "https://github.com/square/okhttp/issues/6100", "user": "ryanhall07", "labels": ["bug"], "created": "2020-05-29 16:49:14", "closed": "2020-05-31 07:38:14", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "MediaType.equals() is sensitive to spaces between fields", "body": "I just discovered that\r\n\r\n```kotlin\r\n// evaluates to 'false' (!)\r\n// this is kotlin, so \"==\" is \"equals\" (language is not obvious from snippet ;) )\r\n\"application/json;charset=utf-8\".toMediaType() == \r\n  \"application/json; charset=utf-8\".toMediaType()\r\n```\r\nThey differ only in space after `;`.\r\n\r\nI am not sure if this is actually required by the spec and if this is not a bug, but I had a code similar to this:\r\n\r\n```kotlin\r\nval MEDIA_TYPE_JSON = \"application/json; charset=utf-8\".toMediaType()\r\n// later\r\nif (response.errorBody()?.contentType() == MEDIA_TYPE_JSON) { /* do stuff */ }\r\n```\r\nTurned out that this particular server sends me `application/json;charset=utf-8` without the space.\r\n\r\nNow I am not even sure how to properly work around this. Should I filter spaces? Or should I compare only type and subtype?...\r\n\r\n```\r\nOkHttp version: 4.7.2\r\n```", "url": "https://github.com/square/okhttp/issues/6096", "user": "dimsuz", "labels": ["bug"], "created": "2020-05-28 15:40:21", "closed": "2020-05-28 19:55:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "IllegalStateException When Building with -repackageclasses", "body": "OkHttp version: 4.7.2\r\n\r\nI'm getting a crash when running my app built with the `-repackageclasses ''` proguard rule.\r\nTraced the issue down to using `package.name` [here](https://github.com/square/okhttp/blob/master/okhttp/src/main/kotlin/okhttp3/internal/platform/android/AndroidLog.kt#L57)\r\n\r\n```\r\nCaused by: java.lang.IllegalStateException: OkHttpClient::class.java.`package` must not be null\r\n  at sW1.<clinit>(AndroidLog.kt:3)\r\n  at pW1.<clinit>(Platform.kt:2)\u00a0\r\n  at WT1.<init>(OkHttpClient.kt:73)\u00a0\r\n```", "url": "https://github.com/square/okhttp/issues/6092", "user": "DSinge", "labels": ["android", "bug", "proguard"], "created": "2020-05-26 21:52:21", "closed": "2020-05-28 18:45:09", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "java.lang.OutOfMemoryError", "body": "Failed to allocate a 32 byte allocation with 9574016 free bytes and 9MB until OOM, max allowed footprint 402653184, growth limit 402653184; failed due to fragmentation (largest possible contiguous allocation 0 bytes)\r\n\r\n## Stack information\r\n\r\nokhttp3.internal.http2.Http2Stream.checkOutNotClosed(TbsSdkJava:629)\r\n--\r\n2\u00a0okhttp3.internal.http2.Http2Stream$FramingSink.emitFrame(TbsSdkJava:563)\r\n3\u00a0okhttp3.internal.http2.Http2Stream$FramingSink.write(TbsSdkJava:543)\r\n4\u00a0okio.ForwardingSink.write(TbsSdkJava:35)\r\n5\u00a0okhttp3.internal.http.CallServerInterceptor$CountingSink.write(TbsSdkJava:149)\r\n6\u00a0okio.RealBufferedSink.emitCompleteSegments(TbsSdkJava:179)\r\n7\u00a0okio.RealBufferedSink.write(TbsSdkJava:42)\r\n8\u00a0okio.ForwardingSink.write(TbsSdkJava:35)\r\n9\u00a0cn.tuhu.net.g$1.write(TbsSdkJava:61)\r\n10\u00a0okio.RealBufferedSink.emitCompleteSegments(TbsSdkJava:179)\r\n11\u00a0okio.RealBufferedSink.writeAll(TbsSdkJava:107)\r\n12\u00a0okhttp3.RequestBody$3.writeTo(TbsSdkJava:120)\r\n13\u00a0cn.tuhu.net.g.writeTo(TbsSdkJava:48)\r\n14\u00a0okhttp3.MultipartBody.writeOrCountBytes(TbsSdkJava:173)\r\n15\u00a0okhttp3.MultipartBody.writeTo(TbsSdkJava:114)\r\n16\u00a0okhttp3.internal.http.CallServerInterceptor.intercept(TbsSdkJava:72)\r\n17\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n18\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:121)\r\n19\u00a0cn.tuhu.net.interceptor.a.intercept(TbsSdkJava:15)\r\n20\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n21\u00a0okhttp3.internal.connection.ConnectInterceptor.intercept(TbsSdkJava:45)\r\n22\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n23\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:121)\r\n24\u00a0okhttp3.internal.cache.CacheInterceptor.intercept(TbsSdkJava:93)\r\n25\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n26\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:121)\r\n27\u00a0okhttp3.internal.http.BridgeInterceptor.intercept(TbsSdkJava:93)\r\n28\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n29\u00a0okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(TbsSdkJava:126)\r\n30\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n31\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:121)\r\n32\u00a0cn.tuhu.net.interceptor.e.intercept(TbsSdkJava:38)\r\n33\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n34\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:121)\r\n35\u00a0cn.tuhu.net.interceptor.c.intercept(TbsSdkJava:29)\r\n36\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n37\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:121)\r\n38\u00a0cn.tuhu.net.interceptor.b.intercept(TbsSdkJava:22)\r\n39\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:147)\r\n40\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(TbsSdkJava:121)\r\n41\u00a0okhttp3.RealCall.getResponseWithInterceptorChain(TbsSdkJava:250)\r\n42\u00a0okhttp3.RealCall$AsyncCall.execute(TbsSdkJava:201)\r\n43\u00a0okhttp3.internal.NamedRunnable.run(TbsSdkJava:32)\r\n44\u00a0java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n45\u00a0java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n46\u00a0java.lang.Thread.run(Thread.java:764)\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/6091", "user": "yangxuqiang9", "labels": ["bug"], "created": "2020-05-26 09:15:03", "closed": "2020-05-26 10:59:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Timeouts set but not respected", "body": "I've got an issue that I'm unable to isolate out what the root cause is and subsequently fix on my end. I have an OkHttpClient that is being setup as a singleton and then used in multiple parts of my application along with RetroFit. During init we set the timeout's to 0 seconds across the board which you can see below:\r\n\r\n```\r\ninit {\r\n        //Setup Timeout\r\n        val timeout: Long = clientParams.timeout.toLong()\r\n\r\n        //Build Client\r\n        val httpClient = OkHttpClient\r\n                .Builder()\r\n                .connectTimeout(0, TimeUnit.SECONDS)\r\n                .readTimeout(0, TimeUnit.SECONDS)\r\n                .writeTimeout(0, TimeUnit.SECONDS)\r\n\r\n        //Build Interceptor\r\n        val loggingInterceptor = HttpLoggingInterceptor()\r\n        loggingInterceptor.level = clientParams.logLevel\r\n        httpClient.addInterceptor(loggingInterceptor)\r\n\r\n        //Add Interceptor\r\n        httpClient.addInterceptor { chain ->\r\n            val original = chain.request()\r\n            val requestBuilder = original.newBuilder()\r\n                    .header(\"Content-Type\", \"application/json\")\r\n                    .header(\"Accept\", \"application/json\")\r\n                    .header(\"Authorization\", \"Bearer ${clientParams.token}\")\r\n            requestBuilder.method(original.method(), original.body())\r\n\r\n            //Setup Additional Headers\r\n            for (header in clientParams.headers ?: hashMapOf()) {\r\n                requestBuilder.header(header.key, header.value)\r\n            }\r\n\r\n            //Setup Request\r\n            val request = requestBuilder.build()\r\n            chain.proceed(request)\r\n        }\r\n\r\n        //Setup Standard Client\r\n        retrofit = Retrofit.Builder()\r\n                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\r\n                .addConverterFactory(GsonConverterFactory.create(GsonBuilder().serializeNulls().create()))\r\n                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\r\n                .client(httpClient.build())\r\n                .baseUrl(clientParams.baseURL + \"v1/\")\r\n                .build()\r\n    }\r\n```\r\n\r\nI Am of the opinion that timeout's are not being respected as we still see a timeout after ~10 seconds regardless of what I set in this initialiser. See GIF below showing initialiser, network link conditioner limiting the network speed and the android application timing out:\r\n![May-25-2020 11-16-47 (1)](https://user-images.githubusercontent.com/40552246/82770515-37f29700-9e7c-11ea-8b16-4cdf3119a988.gif)\r\n\r\nAppreciate any help at all on this.", "url": "https://github.com/square/okhttp/issues/6088", "user": "bstillitano", "labels": ["bug", "needs info", "stackoverflow"], "created": "2020-05-25 01:38:35", "closed": "2020-05-26 18:33:22", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "HTTP/2 negotiation problem, no downgrade - Expected a SETTINGS frame but was 7", "body": "Hi, I have an issue connecting to a web server, that fails in the HTTP/2 protocol negotiation stage (I assume). The problem is intermittent, probably because of the issue with the QNAP web server implementation of HTTP/2. \r\n\r\nIf I force OkHttp to use only Protocol.HTTP_1_1 in client builder everything works fine.\r\nI would assume OkHttp to downgrade connection to HTTP 1.1 and retry upon encountering this error. Or maybe at least throw an error than can tell the client it may be a good idea to downgrade connection.\r\n\r\nEdit: on OkHttp 4.7.0 and many different Android OS versions.\r\n\r\n```\r\nOkHttp: --> PROPFIND https://qnap-webdav-server/\r\nOkHttp: Content-Type: text/xml; charset=utf-8\r\nOkHttp: Content-Length: 277\r\nOkHttp: User-Agent: OkHttp\r\nOkHttp: Translate: f\r\nOkHttp: Pragma: no-cache\r\nOkHttp: Cache-Control: no-cache\r\nOkHttp: Depth: 1\r\nOkHttp: --> END PROPFIND\r\nOkHttp: <-- HTTP FAILED: java.io.IOException: Expected a SETTINGS frame but was 7\r\n2020-05-23 18:31:07.120 30674-30816/dk.tacit.android.foldersync.developer E/foldersync: AccountViewModel$onAuthenticateAccount: Error in testing connection for WebDAV\r\n    java.io.IOException: Expected a SETTINGS frame but was 7\r\n        at okhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.kt:110)\r\n        at okhttp3.internal.http2.Http2Reader.readConnectionPreface(Http2Reader.kt:72)\r\n        at okhttp3.internal.http2.Http2Connection$ReaderRunnable.invoke(Http2Connection.kt:617)\r\n        at okhttp3.internal.http2.Http2Connection$ReaderRunnable.invoke(Http2Connection.kt:609)\r\n        at okhttp3.internal.concurrent.TaskQueue$execute$1.runOnce(TaskQueue.kt:98)\r\n        at okhttp3.internal.concurrent.TaskRunner.runTask(TaskRunner.kt:116)\r\n        at okhttp3.internal.concurrent.TaskRunner.access$runTask(TaskRunner.kt:42)\r\n        at okhttp3.internal.concurrent.TaskRunner$runnable$1.run(TaskRunner.kt:65)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n    java.io.IOException: Expected a SETTINGS frame but was 7\r\n        at okhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.kt:110)\r\n        at okhttp3.internal.http2.Http2Reader.readConnectionPreface(Http2Reader.kt:72)\r\n        at okhttp3.internal.http2.Http2Connection$ReaderRunnable.invoke(Http2Connection.kt:617)\r\n        at okhttp3.internal.http2.Http2Connection$ReaderRunnable.invoke(Http2Connection.kt:609)\r\n        at okhttp3.internal.concurrent.TaskQueue$execute$1.runOnce(TaskQueue.kt:98)\r\n        at okhttp3.internal.concurrent.TaskRunner.runTask(TaskRunner.kt:116)\r\n        at okhttp3.internal.concurrent.TaskRunner.access$runTask(TaskRunner.kt:42)\r\n        at okhttp3.internal.concurrent.TaskRunner$runnable$1.run(TaskRunner.kt:65)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n```", "url": "https://github.com/square/okhttp/issues/6082", "user": "acarlsen", "labels": ["bug"], "created": "2020-05-23 16:40:27", "closed": "2020-05-28 19:20:20", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Crash with HttpLoggingInterceptor on old Android devices", "body": "OkHttp version: 4.7.0\r\n\r\nI found this crash on old Android devices while using OkHttp together with corelibs desugaring on Android Studio 4.0\r\nWondering if it's a fix that can be done directly in OkHttp, or we may have to wait for this to be supported via desugaring\r\n\r\nTo reproduce, initialize HttpLoggingInterceptor like:\r\n```kotlin\r\nval interceptor = HttpLoggingInterceptor().setLevel(Level.BODY)\r\n// path to crash is avoided on levels < BODY\r\n```\r\n\r\nPossible fix:\r\nReplace `java.nio.charset.StandardCharsets.UTF_8` with `kotlin.text.Charsets.UTF_8`\r\n\r\nRelevant stacktrace:\r\n```\r\n     Caused by: java.lang.NoClassDefFoundError: java.nio.charset.StandardCharsets\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:258)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:34)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:96)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/6079", "user": "kingsleyadio", "labels": ["bug"], "created": "2020-05-22 07:13:49", "closed": "2020-05-22 09:14:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "BrotliInterceptor doens't work with HEAD request", "body": "`BrotliInterceptor` doesn't check `Response.promisesBody()`, is it intended behavior? ", "url": "https://github.com/square/okhttp/issues/6074", "user": "Khang-NT", "labels": ["bug"], "created": "2020-05-20 09:04:00", "closed": "2020-05-21 01:55:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Picasso Android 4.4.1 Error?", "body": "My OkHttp3 Version\r\n\r\n**testImplementation(\"com.squareup.okhttp3:mockwebserver:3.12.0\")\r\nimplementation(\"com.squareup.okhttp3:okhttp:3.12.0\")**\r\n\r\nPicasso Version\r\n\r\n**implementation 'com.squareup.picasso:picasso:2.71828'**\r\n\r\nError Log\r\n\r\n```\r\nE/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.renklab.inatpro, PID: 5273\r\n    java.lang.ExceptionInInitializerError\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:263)\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:229)\r\n        at okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:1015)\r\n        at com.squareup.picasso.OkHttp3Downloader.<init>(OkHttp3Downloader.java:71)\r\n        at com.squareup.picasso.OkHttp3Downloader.<init>(OkHttp3Downloader.java:50)\r\n        at com.squareup.picasso.OkHttp3Downloader.<init>(OkHttp3Downloader.java:40)\r\n        at com.squareup.picasso.Picasso$Builder.build(Picasso.java:848)\r\n        at com.squareup.picasso.Picasso.get(Picasso.java:683)\r\n        at com.renklab.adapter.CategoryAdapter.onBindViewHolder(CategoryAdapter.java:54)\r\n        at androidx.recyclerview.widget.RecyclerView$Adapter.onBindViewHolder(RecyclerView.java:7065)\r\n        at androidx.recyclerview.widget.RecyclerView$Adapter.bindViewHolder(RecyclerView.java:7107)\r\n        at androidx.recyclerview.widget.RecyclerView$Recycler.tryBindViewHolderByDeadline(RecyclerView.java:6012)\r\n        at androidx.recyclerview.widget.RecyclerView$Recycler.tryGetViewHolderForPositionByDeadline(RecyclerView.java:6279)\r\n        at androidx.recyclerview.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:6118)\r\n        at androidx.recyclerview.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:6114)\r\n        at androidx.recyclerview.widget.LinearLayoutManager$LayoutState.next(LinearLayoutManager.java:2303)\r\n        at androidx.recyclerview.widget.GridLayoutManager.layoutChunk(GridLayoutManager.java:561)\r\n        at androidx.recyclerview.widget.LinearLayoutManager.fill(LinearLayoutManager.java:1587)\r\n        at androidx.recyclerview.widget.LinearLayoutManager.onLayoutChildren(LinearLayoutManager.java:665)\r\n        at androidx.recyclerview.widget.GridLayoutManager.onLayoutChildren(GridLayoutManager.java:170)\r\n        at androidx.recyclerview.widget.RecyclerView.dispatchLayoutStep2(RecyclerView.java:4134)\r\n        at androidx.recyclerview.widget.RecyclerView.dispatchLayout(RecyclerView.java:3851)\r\n        at androidx.recyclerview.widget.RecyclerView.onLayout(RecyclerView.java:4404)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at android.widget.RelativeLayout.onLayout(RelativeLayout.java:1055)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\r\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at android.widget.RelativeLayout.onLayout(RelativeLayout.java:1055)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at androidx.drawerlayout.widget.DrawerLayout.onLayout(DrawerLayout.java:1231)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\r\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1671)\r\n        at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1525)\r\n        at android.widget.LinearLayout.onLayout(LinearLayout.java:1434)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\r\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1671)\r\n        at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1525)\r\n        at android.widget.LinearLayout.onLayout(LinearLayout.java:1434)\r\n        at android.view.View.layout(View.java:14817)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\r\n    \tat a\r\n```\r\n\r\nMy picasso code\r\n\r\n **Picasso.get().load(singleItem.getCategoryImage()).placeholder(R.drawable.place_holder_channel).into(holder.image);**", "url": "https://github.com/square/okhttp/issues/6070", "user": "inat-tv", "labels": ["bug", "needs info"], "created": "2020-05-19 16:49:15", "closed": "2020-05-20 05:16:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "IllegalArgumentException: Not a Conscrypt trust manager: android.security.net.config.RootTrustManager", "body": "since release 4.7.0 and also for 4.7.1 i get the following exception when using the OkHttpClient.\r\n\r\n```\r\n2020-05-19 13:15:39.061 13971-14060/fr.gaulupeau.apps.InThePoche.debug E/ArticleUpdateWorker: updateArticles() exception\r\n    java.lang.IllegalArgumentException: Not a Conscrypt trust manager: android.security.net.config.RootTrustManager\r\n        at org.conscrypt.Conscrypt.toConscrypt(Conscrypt.java:736)\r\n        at org.conscrypt.Conscrypt.setHostnameVerifier(Conscrypt.java:769)\r\n        at okhttp3.internal.platform.ConscryptPlatform.platformTrustManager(ConscryptPlatform.kt:53)\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.kt:237)\r\n        at okhttp3.OkHttpClient$Builder.build(OkHttpClient.kt:1069)\r\n        at fr.gaulupeau.apps.Poche.network.WallabagConnection.createClient(WallabagConnection.java:123)\r\n        at fr.gaulupeau.apps.Poche.network.WallabagConnection.createWallabagService(WallabagConnection.java:107)\r\n        at fr.gaulupeau.apps.Poche.network.WallabagConnection.getWallabagService(WallabagConnection.java:38)\r\n        at fr.gaulupeau.apps.Poche.service.workers.BaseNetworkWorker.getWallabagService(BaseNetworkWorker.java:86)\r\n        at fr.gaulupeau.apps.Poche.service.workers.ArticleUpdateWorker.updateArticles(ArticleUpdateWorker.java:76)\r\n        at fr.gaulupeau.apps.Poche.service.workers.ArticleUpdateWorker.update(ArticleUpdateWorker.java:37)\r\n        at fr.gaulupeau.apps.Poche.service.tasks.UpdateArticlesTask.run(UpdateArticlesTask.java:17)\r\n        at fr.gaulupeau.apps.Poche.service.tasks.ActionRequestTask.run(ActionRequestTask.java:25)\r\n        at fr.gaulupeau.apps.Poche.service.-$$Lambda$Eg7UQkyPgCNRHvigqxzb-ridugA.run(Unknown Source:2)\r\n        at fr.gaulupeau.apps.Poche.service.TaskService.run(TaskService.java:158)\r\n        at fr.gaulupeau.apps.Poche.service.TaskService.lambda$gjfracnqY8x0_-mrxsx0oqjQmgk(Unknown Source:0)\r\n        at fr.gaulupeau.apps.Poche.service.-$$Lambda$TaskService$gjfracnqY8x0_-mrxsx0oqjQmgk.run(Unknown Source:2)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n```\r\n\r\n\r\nWe create the client like this (simplified from [here](https://github.com/wallabag/android-app/blob/master/app/src/main/java/fr/gaulupeau/apps/Poche/network/WallabagConnection.java#L107)):\r\n\r\n```\r\nOkHttpClient.Builder b = new OkHttpClient.Builder()\r\n                .readTimeout(45, TimeUnit.SECONDS);\r\nb.build();\r\n```\r\n\r\nThis issue does not occur with release 4.6.0 or 4.5.0.\r\n\r\nIs this a bug? Or do you have an idea how i can fix this exception?", "url": "https://github.com/square/okhttp/issues/6069", "user": "Strubbl", "labels": ["android", "bug", "needs info"], "created": "2020-05-19 16:33:30", "closed": "2020-05-20 13:28:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SNI regression on Android 5 introduced in 4.7.0", "body": "Your changelog states that in version 4.3.1 you fixed an issue introduced in 4.3.0 relating to SNI on Android 5.\r\n\r\n> Fix: Explicitly specify the remote server name when making HTTPS connections on Android 5. In 4.3.0 we introduced a regression where server name indication (SNI) was broken on Android 5.\r\n\r\nThis issue appears to have regressed in version 4.7.0, also in 4.7.1, 4.6.0 works as expected.\r\n\r\n```\r\njavax.net.ssl.SSLPeerUnverifiedException: Hostname REDACTED not verified:\r\ncertificate: REDACTED\r\nDN: CN=REDACTED\r\nsubjectAltNames: [REDACTED]\r\n```\r\n\r\nSome info can be found here relating to this issue: https://developer.android.com/training/articles/security-ssl#CommonHostnameProbs\r\n\r\nThanks for your contribution to the Android community, please let me know if I can be of any help in fixing this issue.", "url": "https://github.com/square/okhttp/issues/6067", "user": "marcbaldwin", "labels": ["android", "bug", "needs info"], "created": "2020-05-19 12:02:01", "closed": "2020-05-20 13:28:44", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "InsecureAndroidTrustManager checkServerTrusted fails when using addInsecureHost", "body": "Android, trying to use `okhttp 4.7.0` `addInsecureHost`\r\n```\r\n// clientBuilder: OkHttpClient.Builder\r\n// added some interceptors\r\n...\r\nval clientCertificates = HandshakeCertificates.Builder()\r\n                    .addPlatformTrustedCertificates()\r\n                    .addInsecureHost(proxyHost)\r\n                    .build()\r\nclientBuilder.proxy(Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(proxyHost, proxyPort)))\r\nclientBuilder.sslSocketFactory(clientCertificates.sslSocketFactory(), clientCertificates.trustManager)\r\nclientBuilder.hostnameVerifier(HostnameVerifier { _, _ -> true })\r\n...\r\n```\r\nbut it fails with\r\n```\r\n     Caused by: java.security.cert.CertificateException: java.lang.RuntimeException: java.lang.IllegalArgumentException: Expected receiver of type android.security.net.config.RootTrustManager, but got okhttp3.tls.internal.InsecureAndroidTrustManager\r\n        at com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket.verifyCertificateChain(:com.google.android.gms@16089023@16.0.89 (040800-239467275):9)\r\n        at com.google.android.gms.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\r\n        at com.google.android.gms.org.conscrypt.NativeSsl.doHandshake(:com.google.android.gms@16089023@16.0.89 (040800-239467275):7)\r\n        at com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(:com.google.android.gms@16089023@16.0.89 (040800-239467275):14)\r\n        \t... 58 more\r\n     Caused by: java.lang.RuntimeException: java.lang.IllegalArgumentException: Expected receiver of type android.security.net.config.RootTrustManager, but got okhttp3.tls.internal.InsecureAndroidTrustManager\r\n        at com.google.android.gms.org.conscrypt.Platform.checkTrusted(:com.google.android.gms@16089023@16.0.89 (040800-239467275):3)\r\n        at com.google.android.gms.org.conscrypt.Platform.checkServerTrusted(:com.google.android.gms@16089023@16.0.89 (040800-239467275):3)\r\n        at com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket.verifyCertificateChain(:com.google.android.gms@16089023@16.0.89 (040800-239467275):12)\r\n        \t... 61 more\r\n     Caused by: java.lang.IllegalArgumentException: Expected receiver of type android.security.net.config.RootTrustManager, but got okhttp3.tls.internal.InsecureAndroidTrustManager\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at okhttp3.tls.internal.InsecureAndroidTrustManager.checkServerTrusted(InsecureAndroidTrustManager.kt:48)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.google.android.gms.org.conscrypt.Platform.checkTrusted(:com.google.android.gms@16089023@16.0.89 (040800-239467275):2)\r\n        \t... 63 more\r\n```\r\n\r\ntarget sdk 29\r\nmin sdk 23\r\nerror on 26 (emulator)", "url": "https://github.com/square/okhttp/issues/6062", "user": "marcorighini", "labels": ["bug"], "created": "2020-05-18 14:47:57", "closed": "2020-05-18 21:49:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Crash in Android10Platform static initializer", "body": "Hello\r\nI tested with Firebase and gives the following errors.\r\n\r\n**Robo test, Nexus 4, Virtual, API Level 19**\r\n\r\n```\r\nSignificant exception\r\njava.lang.ExceptionInInitializerError\r\n     FATAL EXCEPTION: main\r\nProcess: com.renklab.inatpro, PID: 5688\r\njava.lang.ExceptionInInitializerError\r\n\tat okhttp3.internal.platform.Android10Platform.<clinit>(Android10Platform.kt:71)\r\n\tat okhttp3.internal.platform.Platform$Companion.findPlatform(Platform.kt:206)\r\n\tat okhttp3.internal.platform.Platform$Companion.access$findPlatform(Platform.kt:168)\r\n\tat okhttp3.internal.platform.Platform.<clinit>(Platform.kt:169)\r\n\tat okhttp3.OkHttpClient.<init>(OkHttpClient.kt:237)\r\n\tat okhttp3.OkHttpClient$Builder.build(OkHttpClient.kt:1069)\r\n\tat com.squareup.picasso.OkHttp3Downloader.<init>(OkHttp3Downloader.java:71)\r\n\tat com.squareup.picasso.OkHttp3Downloader.<init>(OkHttp3Downloader.java:50)\r\n\tat com.squareup.picasso.OkHttp3Downloader.<init>(OkHttp3Downloader.java:40)\r\n\tat com.squareup.picasso.Picasso$Builder.build(Picasso.java:848)\r\n\tat com.squareup.picasso.Picasso.get(Picasso.java:683)\r\n\tat com.renklab.adapter.CategoryAdapter.onBindViewHolder(CategoryAdapter.java:54)\r\n\tat androidx.recyclerview.widget.RecyclerView$Adapter.onBindViewHolder(RecyclerView.java:7065)\r\n\tat androidx.recyclerview.widget.RecyclerView$Adapter.bindViewHolder(RecyclerView.java:7107)\r\n\tat androidx.recyclerview.widget.RecyclerView$Recycler.tryBindViewHolderByDeadline(RecyclerView.java:6012)\r\n\tat androidx.recyclerview.widget.RecyclerView$Recycler.tryGetViewHolderForPositionByDeadline(RecyclerView.java:6279)\r\n\tat androidx.recyclerview.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:6118)\r\n\tat androidx.recyclerview.widget.RecyclerView$Recycler.getViewForPosition(RecyclerView.java:6114)\r\n\tat androidx.recyclerview.widget.LinearLayoutManager$LayoutState.next(LinearLayoutManager.java:2303)\r\n\tat androidx.recyclerview.widget.GridLayoutManager.layoutChunk(GridLayoutManager.java:561)\r\n\tat androidx.recyclerview.widget.LinearLayoutManager.fill(LinearLayoutManager.java:1587)\r\n\tat androidx.recyclerview.widget.LinearLayoutManager.onLayoutChildren(LinearLayoutManager.java:665)\r\n\tat androidx.recyclerview.widget.GridLayoutManager.onLayoutChildren(GridLayoutManager.java:170)\r\n\tat androidx.recyclerview.widget.RecyclerView.dispatchLayoutStep2(RecyclerView.java:4134)\r\n\tat androidx.recyclerview.widget.RecyclerView.dispatchLayout(RecyclerView.java:3851)\r\n\tat androidx.recyclerview.widget.RecyclerView.onLayout(RecyclerView.java:4404)\r\n\tat android.view.View.layout(View.java:14817)\r\n\tat android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n\tat android.widget.RelativeLayout.onLayout(RelativeLayout.java:1055)\r\n\tat android.view.View.layout(View.java:14817)\r\n\tat android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n\tat android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\r\n\tat android.widget.FrameLayout.onLayout(FrameLayout.java:388)\r\n\tat android.view.View.layout(View.java:14817)\r\n\tat android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n\tat android.widget.RelativeLayout.onLayout(RelativeLayout.java:1055)\r\n\tat android.view.View.layout(View.java:14817)\r\n\tat android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n\tat androidx.drawerlayout.widget.DrawerLayout.onLayout(DrawerLayout.java:1231)\r\n\tat android.view.View.layout(View.java:14817)\r\n\tat android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n\tat android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\r\n\tat android.widget.FrameLayout.onLayout(FrameLayout.java:388)\r\n\tat android.view.View.layout(View.java:14817)\r\n\tat android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n\tat android.widget.LinearLayout.setChildFrame(LinearLayout.java:1671)\r\n\tat android.widget.LinearLayout.layoutVertical(LinearLayout.java:1525)\r\n\tat android.widget.LinearLayout.onLayout(LinearLayout.java:1434)\r\n\tat android.view.View.layout(View.java:14817)\r\n\tat android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n\tat android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\r\n\tat android.widget.FrameLayout.onLayout(FrameLayout.java:388)\r\n\tat android.view.View.layout(View.java:14817)\r\n\tat android.view.ViewGroup.layout(ViewGroup.java:4631)\r\n\tat android.widget.LinearLayout.setChildFrame(LinearLayout.java:1671)\r\n\tat android.widget.LinearLayout.layoutVertical(LinearLayout.java:1525)\r\n```\r\n\r\n\r\n**Robo test, A9 2018, API Level 26**\r\n\r\n\r\n```\r\nSignificant exception\r\n\tat okhttp3.Request$Builder.addHeader(Unknown Source:8)\r\n     FATAL EXCEPTION: Thread-8\r\nProcess: com.renklab.inatpro, PID: 12167\r\njava.lang.IllegalArgumentException: Parameter specified as non-null is null: method kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull, parameter value\r\n\tat okhttp3.Request$Builder.addHeader(Unknown Source:8)\r\n\tat com.renklab.fragment.huOkHttpFragment.lambda$onCreateView$6$huOkHttpFragment(huOkHttpFragment.java:209)\r\n\tat com.renklab.fragment.-$$Lambda$huOkHttpFragment$syJXiYHVUhA1OyzbvILO4kUVmZI.onClick(Unknown Source:2)\r\n\tat android.view.View.performClick(View.java:6909)\r\n\tat android.view.View$PerformClick.run(View.java:26199)\r\n\tat android.os.Handler.handleCallback(Handler.java:789)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat androidx.test.espresso.base.Interrogator.a(Interrogator.java:31)\r\n\tat androidx.test.espresso.base.UiControllerImpl.a(UiControllerImpl.java:132)\r\n\tat androidx.test.espresso.base.UiControllerImpl.a(UiControllerImpl.java:126)\r\n\tat androidx.test.espresso.base.UiControllerImpl.a(UiControllerImpl.java:42)\r\n\tat androidx.test.espresso.action.MotionEvents.a(MotionEvents.java:75)\r\n\tat androidx.test.espresso.action.Tap.b(Tap.java:16)\r\n\tat androidx.test.espresso.action.Tap$1.a(Tap.java:2)\r\n\tat androidx.test.espresso.action.GeneralClickAction.perform(GeneralClickAction.java:11)\r\n\tat androidx.test.espresso.ViewInteraction$SingleExecutionViewAction.perform(ViewInteraction.java:8)\r\n\tat androidx.test.espresso.ViewInteraction.a(ViewInteraction.java:33)\r\n\tat androidx.test.espresso.ViewInteraction$1.call(ViewInteraction.java:2)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat android.os.Handler.handleCallback(Handler.java:789)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n\tat android.os.Looper.loop(Looper.java:164)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:6942)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:327)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1374)\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/6061", "user": "inat-tv", "labels": ["bug"], "created": "2020-05-18 03:31:37", "closed": "2020-05-18 11:28:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Compile error when using with Scala ", "body": "I am trying to use okhttp with scala / sbt and for some reason cannot compile.\r\n\r\nWhen I try to `sbt compile` i get this error:\r\n\r\n```\r\njava.lang.AssertionError: assertion failed: List(Lokhttp3/Call$Factory;)\r\n\tat scala.tools.nsc.backend.jvm.BTypes$ClassBType.checkInfoConsistency(BTypes.scala:896)\r\n\tat scala.tools.nsc.backend.jvm.BTypes$ClassBType.info_$eq(BTypes.scala:868)\r\n\tat scala.tools.nsc.backend.jvm.BTypesFromSymbols.setClassInfo(BTypesFromSymbols.scala:446)\r\n\tat scala.tools.nsc.backend.jvm.BTypesFromSymbols.$anonfun$classBTypeFromSymbol$5(BTypesFromSymbols.scala:126)\r\n\tat scala.collection.MapLike.getOrElse(MapLike.scala:128)\r\n\tat scala.collection.MapLike.getOrElse$(MapLike.scala:126)\r\n\tat scala.collection.concurrent.TrieMap.getOrElse(TrieMap.scala:631)\r\n\tat scala.tools.nsc.backend.jvm.BTypesFromSymbols.classBTypeFromSymbol(BTypesFromSymbols.scala:118)\r\n\tat scala.tools.nsc.backend.jvm.BTypesFromSymbols.$anonfun$typeToBType$1(BTypesFromSymbols.scala:177)\r\n\tat scala.collection.MapLike.getOrElse(MapLike.scala:128)\r\n\tat scala.collection.MapLike.getOrElse$(MapLike.scala:126)\r\n\tat scala.collection.AbstractMap.getOrElse(Map.scala:59)\r\n\tat scala.tools.nsc.backend.jvm.BTypesFromSymbols.primitiveOrClassToBType$1(BTypesFromSymbols.scala:177)\r\n\tat scala.tools.nsc.backend.jvm.BTypesFromSymbols.typeToBType(BTypesFromSymbols.scala:192)\r\n\tat scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.tpeTK(BCodeSkelBuilder.scala:79)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:251)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoadQualifier(BCodeBodyBuilder.scala:900)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genApply(BCodeBodyBuilder.scala:664)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:298)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genStat(BCodeBodyBuilder.scala:82)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genBlock$1(BCodeBodyBuilder.scala:812)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genBlock(BCodeBodyBuilder.scala:812)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:364)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:272)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genStat(BCodeBodyBuilder.scala:82)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genBlock$1(BCodeBodyBuilder.scala:812)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genBlock(BCodeBodyBuilder.scala:812)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:364)\r\n\tat scala.tools.nsc.backend.jvm.BCodeSyncAndTry$SyncAndTryBuilder.genLoadTry(BCodeSyncAndTry.scala:235)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:288)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genBlock(BCodeBodyBuilder.scala:813)\r\n\tat scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:364)\r\n\tat scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.emitNormalMethodBody$1(BCodeSkelBuilder.scala:603)\r\n\tat scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.genDefDef(BCodeSkelBuilder.scala:635)\r\n\tat scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.gen(BCodeSkelBuilder.scala:509)\r\n\tat scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.$anonfun$gen$7(BCodeSkelBuilder.scala:511)\r\n\tat scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.gen(BCodeSkelBuilder.scala:511)\r\n\tat scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.genPlainClass(BCodeSkelBuilder.scala:113)\r\n\tat scala.tools.nsc.backend.jvm.GenBCode$BCodePhase$Worker1.visit(GenBCode.scala:190)\r\n\tat scala.tools.nsc.backend.jvm.GenBCode$BCodePhase$Worker1.$anonfun$run$1(GenBCode.scala:139)\r\n\tat scala.tools.nsc.backend.jvm.GenBCode$BCodePhase$Worker1.run(GenBCode.scala:139)\r\n\tat scala.tools.nsc.backend.jvm.GenBCode$BCodePhase.buildAndSendToDisk(GenBCode.scala:381)\r\n\tat scala.tools.nsc.backend.jvm.GenBCode$BCodePhase.run(GenBCode.scala:350)\r\n\tat scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1427)\r\n\tat scala.tools.nsc.Global$Run.compileUnits(Global.scala:1412)\r\n\tat scala.tools.nsc.Global$Run.compileSources(Global.scala:1407)\r\n\tat scala.tools.nsc.Global$Run.compile(Global.scala:1501)\r\n\tat xsbt.CachedCompiler0.run(CompilerInterface.scala:116)\r\n\tat xsbt.CachedCompiler0.run(CompilerInterface.scala:95)\r\n\tat xsbt.CompilerInterface.run(CompilerInterface.scala:26)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat sbt.compiler.AnalyzingCompiler.call(AnalyzingCompiler.scala:107)\r\n\tat sbt.compiler.AnalyzingCompiler.compile(AnalyzingCompiler.scala:53)\r\n\tat sbt.compiler.AnalyzingCompiler.compile(AnalyzingCompiler.scala:47)\r\n\tat sbt.compiler.MixedAnalyzingCompiler$$anonfun$compileScala$1$1.apply$mcV$sp(MixedAnalyzingCompiler.scala:50)\r\n\tat sbt.compiler.MixedAnalyzingCompiler$$anonfun$compileScala$1$1.apply(MixedAnalyzingCompiler.scala:50)\r\n\tat sbt.compiler.MixedAnalyzingCompiler$$anonfun$compileScala$1$1.apply(MixedAnalyzingCompiler.scala:50)\r\n\tat sbt.compiler.MixedAnalyzingCompiler.timed(MixedAnalyzingCompiler.scala:74)\r\n\tat sbt.compiler.MixedAnalyzingCompiler.compileScala$1(MixedAnalyzingCompiler.scala:49)\r\n\tat sbt.compiler.MixedAnalyzingCompiler.compile(MixedAnalyzingCompiler.scala:64)\r\n\tat sbt.compiler.IC$$anonfun$compileInternal$1.apply(IncrementalCompiler.scala:160)\r\n\tat sbt.compiler.IC$$anonfun$compileInternal$1.apply(IncrementalCompiler.scala:160)\r\n\tat sbt.inc.IncrementalCompile$$anonfun$doCompile$1.apply(Compile.scala:66)\r\n\tat sbt.inc.IncrementalCompile$$anonfun$doCompile$1.apply(Compile.scala:64)\r\n\tat sbt.inc.IncrementalCommon.cycle(IncrementalCommon.scala:32)\r\n\tat sbt.inc.Incremental$$anonfun$1.apply(Incremental.scala:72)\r\n\tat sbt.inc.Incremental$$anonfun$1.apply(Incremental.scala:71)\r\n\tat sbt.inc.Incremental$.manageClassfiles(Incremental.scala:99)\r\n\tat sbt.inc.Incremental$.compile(Incremental.scala:71)\r\n\tat sbt.inc.IncrementalCompile$.apply(Compile.scala:54)\r\n\tat sbt.compiler.IC$.compileInternal(IncrementalCompiler.scala:160)\r\n\tat sbt.compiler.IC$.incrementalCompile(IncrementalCompiler.scala:138)\r\n\tat sbt.Compiler$.compile(Compiler.scala:155)\r\n\tat sbt.Compiler$.compile(Compiler.scala:141)\r\n\tat sbt.Defaults$.sbt$Defaults$$compileIncrementalTaskImpl(Defaults.scala:927)\r\n\tat sbt.Defaults$$anonfun$compileIncrementalTask$1.apply(Defaults.scala:918)\r\n\tat sbt.Defaults$$anonfun$compileIncrementalTask$1.apply(Defaults.scala:916)\r\n\tat scala.Function1$$anonfun$compose$1.apply(Function1.scala:47)\r\n\tat sbt.$tilde$greater$$anonfun$$u2219$1.apply(TypeFunctions.scala:40)\r\n\tat sbt.std.Transform$$anon$4.work(System.scala:63)\r\n\tat sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)\r\n\tat sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)\r\n\tat sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:17)\r\n\tat sbt.Execute.work(Execute.scala:237)\r\n\tat sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)\r\n\tat sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)\r\n\tat sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:159)\r\n\tat sbt.CompletionService$$anon$2.call(CompletionService.scala:28)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n\r\nHere is how I'm importing the library:\r\n\r\n```libraryDependencies += \"com.squareup.okhttp3\" % \"okhttp\" % \"4.6.0\"```\r\n\r\nThis is me trying to use okhttp:\r\n\r\n```\r\nval client = new OkHttpClient()\r\n    val JSON: MediaType = MediaType.parse(\"application/json; charset=utf-8\")\r\n\r\n    val json =\r\n      \"\"\"\r\n        {\r\n          \"test\": \"test\"\r\n        }\r\n      \"\"\".stripMargin\r\n\r\n\r\n    val postBody = RequestBody.create(json, JSON)\r\n\r\n    val request = new Request.Builder()\r\n      .addHeader(\"test1\", \"test2\")\r\n      .addHeader(\"Content-Type\", \"application/json; charset=utf-8\")\r\n      .url(\"https://test.test.com\")\r\n      .post(postBody)\r\n      .build()\r\n\r\n    try {\r\n      val response: Response = client.newCall(request).execute()\r\n\r\n      try {\r\n        if (!response.isSuccessful)\r\n          throw new IOException(\"Unexpected code \" + response)\r\n        println(response.body.string)\r\n      } catch {\r\n        case e => print(e)\r\n      } finally if (response != null) response.close()\r\n    } catch {\r\n      case e => print(e)\r\n    }\r\n```\r\n\r\nJava Version:\r\n\r\n```\r\njava version \"14.0.1\" 2020-04-14\r\nJava(TM) SE Runtime Environment (build 14.0.1+7)\r\nJava HotSpot(TM) 64-Bit Server VM (build 14.0.1+7, mixed mode, sharing)\r\n```\r\n\r\nScala Version: \r\n```\r\nscalaVersion in ThisBuild := \"2.13.1\"\r\n```", "url": "https://github.com/square/okhttp/issues/6056", "user": "mtraul", "labels": ["bug"], "created": "2020-05-15 16:24:46", "closed": "2020-05-15 20:31:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "JDK8 > u251 detected as Jdk9Platform", "body": "## Description\r\n\r\nWhen running OkHttp with JDKu252, the output of the following method is **not** null:\r\nhttps://github.com/square/okhttp/blob/39a081e30ede15c415966efe5044e93e6a2d7e10/okhttp/src/main/java/okhttp3/internal/platform/Jdk9Platform.java#L93-L106\r\n\r\nApparently the newer versions of JDK8 include `SSLParameters#setApplicationProtocols` and `SSLSocket#getApplicationProtocol`.\r\n\r\nThe main issue with this is that Application-Layer Protocol Negotiation (ALPN) is inherently enabled by having a [JDK9Platform](https://github.com/square/okhttp/blob/39a081e30ede15c415966efe5044e93e6a2d7e10/okhttp/src/main/java/okhttp3/internal/platform/Jdk9Platform.java#L48) but it's not supported out-of-the-box in JDK8. When performing any connection to a server where `http/2`is supported, OkHttp will then select this protocol (as it is the more efficient), but the connection will never succeed.\r\n\r\n## Possible solution\r\n\r\nCheck Java version in `Jdk9Platform#buildIfSupported` and return null in case of JDK8.\r\ne.g.\r\n```java\r\nif (System.getProperty(\"java.version\", \"\").startsWith(\"1.8\")) {\r\n  return null;\r\n}\r\n```\r\n\r\n## How to reproduce\r\n\r\nAny project using OkHttp connecting to a server that supports `http/2` running in JDK8u252 will get a `java.net.SocketException: Broken pipe`.\r\n\r\ne.g. Run any [kubernetes-client](https://github.com/fabric8io/kubernetes-client) example with k8s 1.18.2\r\n\r\n## Related issues\r\n- fabric8io/kubernetes-client#2212\r\n- [Problem analysis](https://github.com/fabric8io/kubernetes-client/issues/2212#issuecomment-628434995)\r\n\r\n", "url": "https://github.com/square/okhttp/issues/6054", "user": "manusa", "labels": ["bug"], "created": "2020-05-15 05:44:59", "closed": "2020-05-15 08:13:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Caused by java.lang.VerifyError: Verifier rejected class com.android.org.conscrypt.ConscryptFileDescriptorSocket", "body": "Hello, we are coming across following crash in crashlytics , for realme 5pro Android OS 10: \r\n\r\nLibraries used : \r\ncom.squareup.okhttp3:okhttp:3.14.2\r\ncom.squareup.okhttp3:logging-interceptor:3.14.2\r\ncom.squareup.okhttp3:mockwebserver:3.14.2\r\n\r\nWe could not reproduce it, but able to see it in crashlytcis. Please find the logs below: \r\nCould you please help on this.\r\n\r\nCaused by java.lang.VerifyError: Verifier rejected class com.android.org.conscrypt.ConscryptFileDescriptorSocket: com.android.org.conscrypt.ConscryptSession com.android.org.conscrypt.ConscryptFileDescriptorSocket.provideSession(): [0xFFFFFFFF] exception handler starts at bad address (2)\r\n void com.android.org.conscrypt.ConscryptFileDescriptorSocket.waitForHandshake() failed to verify: void com.android.org.conscrypt.ConscryptFileDescriptorSocket.waitForHandshake(): [0x3A] unexpected non-exception class Reference: com.android.org.conscrypt.AbstractSessionContext$2 (declaration of 'com.android.org.conscrypt.ConscryptFileDescriptorSocket' appears in /apex/com.android.conscrypt/javalib/conscrypt.jar)\r\n       at com.android.org.conscrypt.Platform.createFileDescriptorSocket(Platform.java:356)\r\n       at com.android.org.conscrypt.OpenSSLSocketFactoryImpl.createSocket(OpenSSLSocketFactoryImpl.java:155)\r\n       at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:325)\r\n       at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:300)\r\n       at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:185)\r\n       at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224)\r\n       at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n       at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n       at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n       at com.discovery.sonicclient.SonicClient$SonicRequestInterceptor.intercept(SonicClient.java:1015)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229)\r\n       at okhttp3.RealCall.execute(RealCall.java:81)\r\n       at com.google.firebase.perf.network.FirebasePerfOkHttpClient.execute(FirebasePerfOkHttpClient.java:5)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:188)\r\n       at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:45)\r\n       at io.reactivex.Observable.subscribe(Observable.java:12267)\r\n       at retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n       at io.reactivex.Observable.subscribe(Observable.java:12267)\r\n       at io.reactivex.internal.operators.observable.ObservableSingleSingle.subscribeActual(ObservableSingleSingle.java:35)\r\n       at io.reactivex.Single.subscribe(Single.java:3603)\r\n       at io.reactivex.internal.operators.single.SingleResumeNext.subscribeActual(SingleResumeNext.java:39)\r\n       at io.reactivex.Single.subscribe(Single.java:3603)\r\n       at io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run(SingleSubscribeOn.java:89)\r\n       at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:578)\r\n       at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n       at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n       at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n       at java.lang.Thread.run(Thread.java:919)", "url": "https://github.com/square/okhttp/issues/6053", "user": "pnkshir", "labels": ["bug"], "created": "2020-05-15 05:17:34", "closed": "2020-05-15 07:59:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Flaky TaskRunnerTest ", "body": "```\r\nokhttp3.internal.concurrent.TaskRunnerTest > cancelWhileExecutingDoesNotStopUncancelableTask FAILED\r\n\r\n    java.lang.AssertionError: \r\n\r\n    Expecting:\r\n\r\n      <[\"FINE: Q10000 scheduled after 100 \u00b5s: task\",\r\n\r\n        \"FINE: Q10719 starting              : OkHttp ConnectionPool\",\r\n\r\n        \"FINE: Q10719 finished run in 171 \u00b5s: OkHttp ConnectionPool\",\r\n\r\n        \"FINE: Q10000 starting              : task\",\r\n\r\n        \"FINE: Q10000 run again after  50 \u00b5s: task\",\r\n\r\n        \"FINE: Q10000 finished run in   0 \u00b5s: task\",\r\n\r\n        \"FINE: Q10000 starting              : task\",\r\n\r\n        \"FINE: Q10000 finished run in   0 \u00b5s: task\"]>\r\n\r\n    to contain exactly (and in same order):\r\n\r\n      <[\"FINE: Q10000 scheduled after 100 \u00b5s: task\",\r\n\r\n        \"FINE: Q10000 starting              : task\",\r\n\r\n        \"FINE: Q10000 run again after  50 \u00b5s: task\",\r\n\r\n        \"FINE: Q10000 finished run in   0 \u00b5s: task\",\r\n\r\n        \"FINE: Q10000 starting              : task\",\r\n\r\n        \"FINE: Q10000 finished run in   0 \u00b5s: task\"]>\r\n\r\n    but some elements were not expected:\r\n\r\n      <[\"FINE: Q10719 starting              : OkHttp ConnectionPool\",\r\n\r\n        \"FINE: Q10719 finished run in 171 \u00b5s: OkHttp ConnectionPool\"]>\r\n\r\n        at okhttp3.internal.concurrent.TaskRunnerTest.cancelWhileExecutingDoesNotStopUncancelableTask(TaskRunnerTest.kt:282)\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/6052", "user": "yschimke", "labels": ["bug"], "created": "2020-05-14 18:28:25", "closed": "2020-05-14 18:28:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Http1ExchangeCodec NPE while IOException occured during create https proxy tunnel", "body": "OKHttpClient verison: 3.14.8\r\n\r\nstack trace as below:\r\n```\r\njava.lang.NullPointerException at okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.read(Http1ExchangeCodec.java:391)\r\njava.lang.NullPointerException: null\r\n        at okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.read(Http1ExchangeCodec.java:391)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.read(Http1ExchangeCodec.java:427)\r\n        at okhttp3.internal.Util.skipAll(Util.java:204)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.skipConnectBody(Http1ExchangeCodec.java:308)\r\n        at okhttp3.internal.connection.RealConnection.createTunnel(RealConnection.java:403)\r\n        at okhttp3.internal.connection.RealConnection.connectTunnel(RealConnection.java:236)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:177)\r\n        at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224)\r\n        at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n        at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n        at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229)\r\n        at okhttp3.RealCall.execute(RealCall.java:81)\r\n```\r\n\r\nOccured at create tunnel for proxy https connection, the RealConnection is always null:\r\n```\r\n# RealConnection.java\r\n395 Http1ExchangeCodec tunnelCodec = new Http1ExchangeCodec(null, null, source, sink);\r\n        ... \r\n403 tunnelCodec.skipConnectBody(response);\r\n```\r\nHttp1ExchangeCodec#realConnection is always null in this scenario, so NPE!\r\n```\r\n# Http1ExchangeCodec.java\r\n391    realConnection.noNewExchanges();\r\n``` \r\n\r\n", "url": "https://github.com/square/okhttp/issues/6048", "user": "LiboDing", "labels": ["bug", "needs info"], "created": "2020-05-13 05:49:32", "closed": "2020-05-15 07:58:09", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Expected URL scheme 'http' or 'https' but was 'asset'", "body": "I have ejected an expo project using ExpoKit and it is using okhttp as a dependency.\r\n\r\nThe project runs successfully without issues in development environment. But when I build a signed apk, I got the following error.\r\n\r\n```\r\nE/GlideExecutor: Request threw uncaught throwable\r\n    java.lang.IllegalArgumentException: Expected URL scheme 'http' or 'https' but was 'asset'\r\n        at okhttp3.HttpUrl$Builder.parse$okhttp(HttpUrl.kt:10)\r\n        at okhttp3.HttpUrl$Companion.get(HttpUrl.kt:1)\r\n        at okhttp3.Request$Builder.url(Request.kt:6)\r\n        at com.bumptech.glide.integration.okhttp3.a.a(OkHttpStreamFetcher.java:1)\r\n        at com.bumptech.glide.load.b.L.a(SourceGenerator.java:12)\r\n        at com.bumptech.glide.load.b.l.q(DecodeJob.java:4)\r\n        at com.bumptech.glide.load.b.l.r(DecodeJob.java:4)\r\n        at com.bumptech.glide.load.b.l.run(DecodeJob.java:7)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n        at com.bumptech.glide.load.b.c.a.run(GlideExecutor.java:8)\r\n```\r\nI just ejected from expo project and I never used a url that starts with \"asset\".\r\n\r\nIt was using okhttp 3.12 so I tried to upgrade to 4.6.0 but only got the same error. Here is the code from my build.gradle.\r\n\r\n```\r\nimplementation \"com.android.support:exifinterface:${safeExtGet(\"supportLibVersion\", \"28.0.0\")}\"\r\nimplementation 'com.squareup.okio:okio:1.9.0'\r\nimplementation 'com.facebook.soloader:soloader:0.6.0'\r\n\r\n// expo-file-system\r\nimplementation 'com.squareup.okhttp3:okhttp:4.6.0'\r\nimplementation 'com.squareup.okhttp3:okhttp-urlconnection:4.6.0'\r\n```\r\n\r\nI have already spent 2 days to debug this issue but nothing helped me. Could you let me know if this is an issue with the library? Or can it be an issue with ExpoKit?", "url": "https://github.com/square/okhttp/issues/6046", "user": "spacens", "labels": ["bug"], "created": "2020-05-12 02:52:35", "closed": "2020-05-12 06:48:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "http1.1 protocol cannot reuse  a   realConnection in  \"ConnectionPool \"?", "body": "\r\n\r\nbranch: parent-4.6.0\r\n\r\n\r\nwhen I make a \"GET\" request  with http1.1 protocol ,everytime it will create a new RealConnection.   when i  try  that   more times, ConnectionPool will contains multiple realConenctions.  it cannot reuse connection.\r\n\r\ni found  the code :\r\ninternal fun isEligible(address: Address, routes: List<Route>?): Boolean {\r\n        if (transmitters.size >= allocationLimit || noNewExchanges) return false\r\n     .....\r\ntransmitters.size=1   allocationLimit=1      cause   connection cannot be  reused\u3002\r\n\r\nwhen i  delete that condition judgment , it can reuse the old realConnection in \"ConnectionPool \", but  i get a error \"Unexpected status line: 499\"\u3002\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/6043", "user": "docwei2050", "labels": ["bug", "stackoverflow"], "created": "2020-05-11 14:17:28", "closed": "2020-05-11 15:58:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Flaky test report", "body": "From last 100 failed builds, filtered to master branch \r\n\r\n```\r\n1\tokhttp3.DuplexTest.duplexWithAuthChallenge\r\n1\tokhttp3.EventListenerTest.authenticatingTunnelProxyConnect\r\n1\tokhttp3.EventListenerTest.failedDribbledCallEventSequence\r\n1\tokhttp3.EventListenerTest.requestBodyFailHttp2OverHttps\r\n1\tokhttp3.EventListenerTest.secureConnectWithTunnel\r\n1\tokhttp3.EventListenerTest.successfulSecureConnect\r\n1\tokhttp3.EventListenerTest.timeToFirstByteHttp2OverHttps\r\n1\tokhttp3.WholeOperationTimeoutTest.timeoutReadingResponse\r\n1\tokhttp3.internal.concurrent.TaskRunnerTest.cancelWhileExecutingDoesNotStopUncancelableTask\r\n10\tokhttp3.internal.http.CancelTest.cancelAndFollowup[(CANCEL, H2)]\r\n4\tokhttp3.internal.http.CancelTest.cancelAndFollowup[(CANCEL, HTTP)]\r\n3\tokhttp3.internal.http.CancelTest.cancelAndFollowup[(CANCEL, HTTPS)]\r\n2\tokhttp3.internal.http2.Http2ConnectionTest.readTimesOut\r\n1\tokhttp3.internal.http2.HttpOverHttp2Test.connectionNotReusedAfterShutdown[h2]\r\n1\tokhttp3.internal.http2.HttpOverHttp2Test.connectionWindowUpdateAfterCanceling[h2_prior_knowledge]\r\n1\tokhttp3.internal.http2.HttpOverHttp2Test.connectionWindowUpdateOnClose[h2_prior_knowledge]\r\n3\tokhttp3.internal.http2.HttpOverHttp2Test.responseHeadersAfterGoaway[h2_prior_knowledge]\r\n2\tokhttp3.internal.tls.CertificatePinnerChainValidationTest.pinRootNotPresentInChain\r\n1\tokhttp3.internal.ws.RealWebSocketTest.pingOnInterval\r\n1\tokhttp3.internal.ws.RealWebSocketTest.unacknowledgedPingFailsConnection\r\n2\tokhttp3.internal.ws.RealWebSocketTest.unexpectedPongsDoNotInterfereWithFailureDetection\r\n2\tokhttp3.internal.ws.WebSocketHttpTest.clientMaxWindowBitsIncluded\r\n3\tokhttp3.internal.ws.WebSocketHttpTest.closeReasonMaximumLength\r\n1\tokhttp3.internal.ws.WebSocketHttpTest.closeReasonTooLong\r\n2\tokhttp3.internal.ws.WebSocketHttpTest.compressedMessages\r\n3\tokhttp3.internal.ws.WebSocketHttpTest.unexpectedExtensionParameter\r\n2\tokhttp3.internal.ws.WebSocketHttpTest.webSocketsDontTriggerEventListener\r\n9\tokhttp3.logging.LoggingEventListenerTest.connectFail\r\n```", "url": "https://github.com/square/okhttp/issues/6033", "user": "yschimke", "labels": ["bug"], "created": "2020-05-08 16:40:01", "closed": "2020-05-13 06:48:08", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "OkHttp reply me not in UTF8 but in Percent Encoding", "body": "im calling a GET Api (API of ModernMTT) with OkHttp (Last version), my problem is that the reply from the server is not in UTF-8 but in Percent Encoding, and i dont understand why,\r\ni try to set the Content-Type to UTF-8 without result.\r\nI tried also to Decode without result.\r\n`URLDecoder.decode(stringDecoded, StandardCharsets.UTF_8)`\r\nFrom CURL and Postman the server reply good.\r\nSo the problem is on OkHttp.\r\nMy code\r\n\r\n```\r\n    public static String translate(String string) throws IOException {\r\n            OkHttpClient client = new OkHttpClient().newBuilder().addInterceptor(new FixEncodingInterceptor()).build();\r\n            Request request = new Request.Builder()\r\n                    .url(\"https://api.modernmt.eu/translate?source=\" + sourceLanguage + \"&target=\" + targetLanguage + \"&q=\" + string)\r\n                    .method(\"GET\", null)\r\n                    .addHeader(\"MMT-ApiKey\", apiKey)\r\n                    .build();\r\n            try (Response response = client.newCall(request).execute()) {\r\n                if (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\r\n                String stringTranslated= Objects.requireNonNull(response.body()).string();\r\n                ResponseMTT responseMTT = new Gson().fromJson(stringTranslated, ResponseMTT.class);\r\n                StandardCharsets.UTF_8));\r\n                return responseMTT.getData().getTranslation();\r\n            }\r\n        }\r\n\r\n```\r\nThe response.body.string() return this format:\r\n\r\n    `%22Sconto%20del%2020%:%20%3CPAColor0xFF66CC33%3EUtilities%20%E2%86%92%20Capacity%20of%20load%3CPAOldColor%3E.`", "url": "https://github.com/square/okhttp/issues/6028", "user": "Master-Antonio", "labels": ["bug", "stackoverflow"], "created": "2020-05-07 15:53:59", "closed": "2020-05-07 17:24:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "HttpLoggingInterceptor 4.2.1 not working...", "body": "I faced some error while I am using HttpLoggingInterceptor with a retrofit in these two lines but when I remove these lines Its working fine and I also used the latest version of both Interceptor and retrofit. Here are these two lines:-\r\n\r\n``HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\r\n            interceptor.level(HttpLoggingInterceptor.Level.BODY);`\r\n\r\n\r\nVersion Used:-\r\n\r\n`    implementation 'com.squareup.retrofit2:retrofit:2.6.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'\r\n    implementation \"com.squareup.okhttp3:logging-interceptor:4.2.1\"`\r\n\r\nAnd, This is my code:-\r\n\r\nHttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\r\n            interceptor.level(HttpLoggingInterceptor.Level.BODY);\r\n            OkHttpClient.Builder httpClient = new OkHttpClient.Builder();\r\n            httpClient\r\n                    .addInterceptor(chain -> {\r\n                        Request original = chain.request();\r\n                        Request request = original.newBuilder()\r\n                                .header(\"Content-Type\", \"application/json\")\r\n                                .method(original.method(), original.body())\r\n                                .build();\r\n                        return chain.proceed(request);\r\n                    }).addInterceptor(interceptor);\r\n            OkHttpClient client = httpClient.build();\r\n            retrofit = new Retrofit.Builder()\r\n                    .baseUrl(ROOT_URL)\r\n                    .addConverterFactory(GsonConverterFactory.create())\r\n                    .client(client)\r\n                    .build();\r\n\r\nAnd, The error log is:-\r\n\r\n`2020-05-07 18:41:39.973 13592-13887/<package> E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n    Process:<package> , PID: 13592\r\n    java.lang.NoSuchMethodError: No virtual method log(ILjava/lang/String;Ljava/lang/Throwable;)V in class Lokhttp3/internal/platform/Platform; or its super classes (declaration of 'okhttp3.internal.platform.Platform' appears in /data/app/<package> -CYEfKYjbugvyG3TfUoxLxA==/base.apk!classes3.dex)\r\n        at okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DEFAULT$1.log(HttpLoggingInterceptor.kt:116)\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:164)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at <package> .web.ApiClient.lambda$getApiClient$0(ApiClient.java:65)\r\n        at <package> .web.-$$Lambda$ApiClient$72kk7lSGJ-V_LFrKbGmUvAutC8g.intercept(Unknown Source:0)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:197)\r\n        at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:502)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)`\r\n\r\n\r\nI also added this line in proguard but it still not working.\r\n\r\n`-keep class okhttp3.** { *; }`\r\n\r\nCould anyone please let me know if I am doing something wrong?", "url": "https://github.com/square/okhttp/issues/6026", "user": "AnasMirza8630", "labels": ["bug", "stackoverflow"], "created": "2020-05-07 13:13:30", "closed": "2020-05-07 17:33:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MediaType.parse is too lenient on Android", "body": "See discussion in https://github.com/square/okhttp/issues/4535\r\n", "url": "https://github.com/square/okhttp/issues/6025", "user": "yschimke", "labels": ["android", "bug"], "created": "2020-05-07 07:19:08", "closed": "2020-05-08 06:13:13", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Seeing random InterruptedIOException with OkHttp 4.5.0", "body": "I am getting these following interrupted exeptions randomly from okhttp on a post calls using http2. I even have my read/write and call timeouts set to 0 meaning no timeouts as per the documentation. We are not cancelling any future. \r\n\r\nAlso added this on \r\nhttps://stackoverflow.com/questions/61583744/getting-java-io-interruptedioexception-with-okhttp-4-5-0-randomly\r\n\r\nThis is my httpclient below\r\n\r\n```\r\n        this.client = new OkHttpClient.Builder()\r\n            .protocols(Collections.singletonList(Protocol.H2_PRIOR_KNOWLEDGE)\r\n            .connectionSpecs(Collections.singletonList(ConnectionSpec.CLEARTEXT))\r\n            .connectionPool(new ConnectionPool(20, 30, TimeUnit.SECONDS))\r\n            .readTimeout(0, TimeUnit.MILLISECONDS)\r\n            .writeTimeout(0, TimeUnit.MILLISECONDS)\r\n            .callTimeout(0, TimeUnit.MILLISECONDS)\r\n            .build();\r\n```\r\nCan anyone advise why i am getting these following exceptions and how to possibly fix these\r\n\r\n```\r\njava.io.`InterruptedIOException`: null\r\nat okhttp3.internal.http2.Http2Stream.waitForIo$okhttp(Http2Stream.kt:662) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http2.Http2Stream.takeHeaders(Http2Stream.kt:140) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http2.Http2ExchangeCodec.readResponseHeaders(Http2ExchangeCodec.kt:96) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.kt:106) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:79) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:34) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:197) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.connection.RealCall.execute(RealCall.kt:148) ~[okhttp-4.5.0.jar:?]\r\nat \r\n```\r\nand\r\n\r\n```\r\njava.io.InterruptedIOException: interrupted\r\nat okio.Timeout.throwIfReached(Timeout.kt:98) ~[okio-2.5.0.jar:?]\r\nat okio.OutputStreamSink.write(JvmOkio.kt:50) ~[okio-2.5.0.jar:?]\r\nat okio.AsyncTimeout$sink$1.write(AsyncTimeout.kt:103) ~[okio-2.5.0.jar:?]\r\nat okio.RealBufferedSink.flush(RealBufferedSink.kt:247) ~[okio-2.5.0.jar:?]\r\nat okhttp3.internal.http2.Http2Writer.flush(Http2Writer.kt:120) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http2.Http2Connection.flush(Http2Connection.kt:408) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http2.Http2Stream$FramingSink.close(Http2Stream.kt:626) ~[okhttp-4.5.0.jar:?]\r\nat okio.ForwardingSink.close(ForwardingSink.kt:37) ~[okio-2.5.0.jar:?]\r\nat okhttp3.internal.connection.Exchange$RequestBodySink.close(Exchange.kt:242) ~[okhttp-4.5.0.jar:?]\r\nat okio.RealBufferedSink.close(RealBufferedSink.kt:268) ~[okio-2.5.0.jar:?]\r\nat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:60) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:34) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:76) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:197) ~[okhttp-4.5.0.jar:?]\r\nat okhttp3.internal.connection.RealCall.execute(RealCall.kt:148) ~[okhttp-4.5.0.jar:?]\r\nat c\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/6018", "user": "arpitmalhotra", "labels": ["bug", "stackoverflow"], "created": "2020-05-04 19:31:02", "closed": "2020-05-04 19:48:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MockWebServer and Multiplatform", "body": "I have am using MockWebServer in `jvmTest` but I get this error when I run `gradle allTest`:\r\n```\r\nokHttpName\r\njava.lang.NoSuchFieldError: okHttpName\r\n```\r\n\r\nI even tried to just do a simple test:\r\n\r\n```\r\nclass SomeTest {\r\n\r\n@Test\r\n    fun someTest() {\r\n        val mockWebServer = MockWebServer()\r\n        assert(true)\r\n    }\r\n}\r\n```\r\nAnd it fails.\r\n\r\nThe `Test` annotation is from `kotlin.test.Test`", "url": "https://github.com/square/okhttp/issues/6016", "user": "JavierSegoviaCordoba", "labels": ["bug"], "created": "2020-05-03 18:09:09", "closed": "2020-05-03 20:06:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Retrying a failed PUT request corrupts data", "body": "Hi folks! \r\nWe've noticed a change in behavior between 3.13.1 -> 3.14.0 which looks to corrupt the destination data on a PUT when retrying the same request. When uploading with okhttp from an input stream in our application we sometimes see IOException's from our input stream due to an unreliable input source from our clients. Since 3.14.0 when we retry the PUT request it looks like the same connection is being reused for the second request and the data which is being uploaded is actually concatenated with the HTTP request data for the second request. Example:  \"PUT /debug ...\" from the second request.\r\n\r\nI've put together an example which demonstrates this behavior.\r\n[okhttp-retry-output-corruption](https://github.com/vyelevich/okhttp-retry-output-corruption)\r\n\r\n```\r\n./gradlew test\r\n...\r\norg.junit.ComparisonFailure: expected:<[Some data.]> but was:<[PUT /debug]>\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat UploaderTest.uploadDataMatchesReceivedData(UploaderTest.java:23)\r\n```\r\n\r\nThe issue is illustrated [here](https://github.com/vyelevich/okhttp-retry-output-corruption/blob/master/src/main/java/Uploader.java) when the first upload call fails (in our case due to an IO error) and **fewer bytes were sent than the content length**.\r\n\r\n```\r\n        //First try to upload with a body which fails to read source stream\r\n        try {\r\n            logger.info(\"Produce error while reading body\");\r\n            uploadStream(url, createRequestBodyFailsDuringIO(data.length()));\r\n        } catch (Throwable e) {\r\n            logger.info(\"Handling upload error\", e);\r\n        }\r\n\r\n        //Second try - should be OK\r\n        try (InputStream inputStream = new ByteArrayInputStream(data.getBytes())) {\r\n            logger.info(\"No EOF\");\r\n            long contentLength = data.length();\r\n            uploadStream(url, createRequestBodyHappyPath(inputStream, contentLength));\r\n        }\r\n```\r\n\r\nThis looks like a connection reuse issue, since setting the connection pool with 0 maxIdleConnections addresses the problem, but we're left without connection pooling.\r\n```\r\nnew ConnectionPool(0, 10, TimeUnit.MILLISECONDS)\r\n```\r\nSince we have no handle on the connection, there is no way for us to close or cancel the request without evicting all connections from the pool. \r\n\r\nPlease let me know if further info is needed.", "url": "https://github.com/square/okhttp/issues/6013", "user": "vyelevich", "labels": ["bug"], "created": "2020-05-01 21:37:06", "closed": "2020-05-02 09:20:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Be smarter about transitive dependency upgrades == kotlin-stdlib-common", "body": "This is the second time this has happened in the last few updates, so I would like to bring to your attention so you can be mindful of it in the future:\r\n\r\nIn okhttp3:okhttp:4.6.0 you changed the dependency on org.jetbrains.kotlin:kotlin-stdlib to version:1.3.71. okhttp3:okhttp:4.6.0 also has a dependency to okio:okio:2.6.0, which itself has a transitive dependency to org.jetbrains.kotlin:kotlin-stdlib-common:1.3.70.\r\n\r\nNotice that these versions of kotlin-stdlib DO NOT MATCH. This causes the maven-enforcer-plugin to fail because of the ambiguous dependencies.\r\n\r\nPlease, please, please, in the future, when you update a transitive dependency shared by both okhttp and okio, could you please make sure they all AGREE on all their transitive dependencies? For now, you can fix this bug by release a new version of okhttp that has a new version of okio which has a dependency on org.jetbrains.kotlin:kotlin-stdlib:1.3.71, THE SAME AS WHAT YOU CHANGED in okhttp3:okhttp. This will make the maven-enforcer-plugin happy again.\r\n\r\nThank you.", "url": "https://github.com/square/okhttp/issues/6007", "user": "kebeda", "labels": ["bug"], "created": "2020-04-29 21:55:29", "closed": "2020-04-30 04:55:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "EventListener's callend method will not be called", "body": "![image](https://user-images.githubusercontent.com/15888816/80575451-3331f300-8a36-11ea-84f2-788a523ecb2a.png)\r\n![image](https://user-images.githubusercontent.com/15888816/80575467-3c22c480-8a36-11ea-8ae2-8020f773583f.png)\r\nAs shown in the figure, the callend method has never been called\r\nOkhttp version is 3.12.10", "url": "https://github.com/square/okhttp/issues/6006", "user": "KaiXuan666", "labels": ["bug", "needs info"], "created": "2020-04-29 08:32:24", "closed": "2020-05-01 11:09:10", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "OkHttp 3.x failed to get ALPN selected protocol when used with Java HotSpot 1.8.0_251", "body": "After JDK upgrade to Java HotSpot 1.8.0_251, okhttp thinks that the platform to be used is Jdk9Platform, and it fails at Jdk9Platform.getSelectedProtocol(Jdk9Platform.java:68). Stack trace is provided below.\r\n\r\nThis is an issue identical to https://github.com/square/okhttp/issues/5970, except that Java HotSpot 1.8.0_251 is used here.\r\n\r\nAre there any plans to provide a fix for this in okhttp 3.14.x? If so, when can it be expected?\r\n\r\nThanks\r\n\r\n> \r\nCaused by: **java.lang.AssertionError: failed to get ALPN selected protocol**\r\n        at okhttp3.internal.platform.**Jdk9Platform.getSelectedProtocol(Jdk9Platform.java:68)**\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:347)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\r\n        at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n        at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n        at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:264)\r\n        at okhttp3.RealCall.execute(RealCall.java:93)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n        at sun.reflect.GeneratedMethodAccessor337.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at okhttp3.internal.platform.Jdk9Platform.getSelectedProtocol(Jdk9Platform.java:58)\r\n        ... 78 more\r\nCaused by: java.lang.UnsupportedOperationException\r\n        at javax.net.ssl.SSLSocket.getApplicationProtocol(SSLSocket.java:691)\r\n        ... 82 more\r\n\r\n", "url": "https://github.com/square/okhttp/issues/6000", "user": "geoffrey-thomas", "labels": ["bug"], "created": "2020-04-28 14:41:29", "closed": "2020-04-29 06:30:24", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Android PublicSuffix topPrivateDomain results don't match.", "body": "Hi,\r\n\r\nI am using two methods to get top Private domains but it returns a false result with \"web.app\" TLD.\r\n\r\n1:\r\nString domain = PublicSuffixDatabase.Companion.get().getEffectiveTldPlusOne(\"anything.web.app\");\r\n\r\n2:\r\nString domain1 =  HttpUrl.Companion.get(\"http://anything.web.app\").topPrivateDomain();\r\n\r\n\r\nI guess the library is using old public suffix data. If it is then how to update public suffix DB?", "url": "https://github.com/square/okhttp/issues/5997", "user": "nauman404", "labels": ["bug"], "created": "2020-04-27 15:04:41", "closed": "2020-04-27 22:53:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Suppression every exception caused in Interceptor with IOException ", "body": "Here is interesting behaviour of OkHttp client(4.4.0) with last version of Retrofit(2.8.1):\r\n\r\nSuppose we add request handling with Interceptor like this:\r\n```Kotlin\r\nprivate fun buildTheMovieOkHttp(): OkHttpClient = defaultOkHttpBuilder().apply {\r\n        addInterceptor {\r\n            it.proceed(it.request()).run {\r\n                when (code) {\r\n                    in 200..299 -> {\r\n                        this\r\n                    }\r\n                    400, 401, 403, 404 -> {\r\n                        val apiError = Gson().fromJson(this.body?.string(), TheMovieErrorResponse::class.java)\r\n                        throw WrongRequestException(\r\n                            responseCode = code,\r\n                            msg = \"[http_code=${code} error_code=${apiError.code}] message=${apiError.message}\"\r\n                        )\r\n                    }\r\n                    else -> {\r\n                        throw ShitHappenedException(\"Sh1t happened :C\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (IS_DEBUG)\r\n            addInterceptor(HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))\r\n    }.build()\r\n```\r\nSo, basically important part is here:\r\n```Kotlin\r\n...\r\nthrow WrongRequestException(\r\n    responseCode = code,\r\n    msg = \"[http_code=${code} error_code=${apiError.code}] message=${apiError.message}\"\r\n)\r\n...\r\n``` \r\nThen use Retrofit with OkHttp client and so on, but interesting thing goes next.\r\n\r\nIn module `okhttp3.internal.connection.RealCall.kt`, method run. You are suppressing `WrongRequestException` with IOException:\r\n\r\n```Kotlin\r\n...\r\n} catch (t: Throwable) {\r\n          cancel()\r\n          if (!signalledCallback) {\r\n            val canceledException = IOException(\"canceled due to $t\")\r\n            canceledException.addSuppressed(t)\r\n            responseCallback.onFailure(this@RealCall, canceledException)\r\n          }\r\n          throw t\r\n        } finally {\r\n....\r\n```\r\nAnd then propagate this to Retrofit by  ` responseCallback.onFailure` and retrofit , in turn, distribute this error to Kotlin Coroutine library in `retrofit2.KotlinExtension.kt` and ,therefore, invoke coroutine with IOException instead of WrongRequestException.\r\n\r\nWhat are the reasons to suppress users' exception? ", "url": "https://github.com/square/okhttp/issues/5992", "user": "Bizilizi", "labels": ["bug"], "created": "2020-04-26 14:51:17", "closed": "2020-04-26 15:19:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SSL handshake may fail on android SDK < 24 when connections are established concurrently", "body": "```\r\n     Caused by: javax.net.ssl.SSLHandshakeException: Handshake failed\r\n        at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:396)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.kt:367)\r\n```\r\n\r\nIm seeing this consistently when connection pool is drained (initially or after idle time) and SSL connections are established concurrently.\r\n\r\nThe issue does never occur once connection pool has sufficient active connections or when running on android SDK >= 24.\r\n\r\nI also verified it never happens when synchronizing requests (thus connections) entirely.\r\n\r\nIm assuming SSL implementations on older android versions may not be entirely thread-safe, in which case extending connection pool lock to include `startHandshake` may fix this.\r\n\r\nAffected / tested versions: 4.5.0, 4.4.1, 4.2.2\r\n\r\nCurrent workaround is to retry connections until they succeed.\r\n", "url": "https://github.com/square/okhttp/issues/5980", "user": "masc3d", "labels": ["android", "bug", "stackoverflow"], "created": "2020-04-23 11:32:28", "closed": "2020-04-23 12:03:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Add CI Tests with JDK 8 252", "body": "```-------------------------------------------------------------------------------\r\nTest set: okhttp3.tls.HandshakeCertificatesTest\r\n-------------------------------------------------------------------------------\r\nTests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.55 s <<< FAILURE! - in okhttp3.tls.HandshakeCertificatesTest\r\nclientAndServer(okhttp3.tls.HandshakeCertificatesTest)  Time elapsed: 0.409 s  <<< ERROR!\r\njava.util.concurrent.ExecutionException: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake\r\n        at okhttp3.tls.HandshakeCertificatesTest.clientAndServer(HandshakeCertificatesTest.java:93)\r\nCaused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake\r\n        at okhttp3.tls.HandshakeCertificatesTest.lambda$doServerHandshake$0(HandshakeCertificatesTest.java:159)\r\nCaused by: java.io.EOFException: SSL peer shut down incorrectly\r\n        at okhttp3.tls.HandshakeCertificatesTest.lambda$doServerHandshake$0(HandshakeCertificatesTest.java:159)\r\n```", "url": "https://github.com/square/okhttp/issues/5976", "user": "yschimke", "labels": ["bug", "build-ci"], "created": "2020-04-22 07:47:11", "closed": "2020-04-23 07:10:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OkHttp 3.x fails with OpenJDK Zulu 8.0.252", "body": "Hi folks,\r\n\r\nWe found that this particular piece of code in okhttp 3.x: https://github.com/square/okhttp/blob/okhttp_3.14.x/okhttp/src/main/java/okhttp3/internal/platform/Jdk9Platform.java#L81-L94 breaks.\r\n\r\nThis checks for `setApplicationProtocols` and `getApplicationProtocol` which are JDK 9. however, these ones got backported to Zulu 8.0.252 causing OkHttp believing that is running on jdk9 and initializing a `Jdk9Platform` which breaks projects\r\n\r\nWondering if a patch could be released for 3.x since there are several libraries and projects out there that haven't migrated to 4.x\r\n\r\nThanks", "url": "https://github.com/square/okhttp/issues/5970", "user": "rpalcolea", "labels": ["bug"], "created": "2020-04-21 17:00:47", "closed": "2020-04-29 01:40:33", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "EOFException handling permessage-deflate response with OkHttp4.5 Websocket", "body": "Hello.\r\nI use latest version of OKHttp4.5 and send websocket request with permessage-deflate header which is a compression protocol. But sometime reponse message data is parsed wrong, may be the response message data (original is 140K) is too large. the system error log as follows. Bofore Version of 4.5, everything is ok. I doubt this version is not stable for permessage-deflate protocol.\r\n```\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err: java.io.EOFException: source exhausted prematurely\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at okio.InflaterSource.read(InflaterSource.kt:75)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at okhttp3.internal.ws.MessageInflater.inflate(MessageInflater.kt:58)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at okhttp3.internal.ws.WebSocketReader.readMessageFrame(WebSocketReader.kt:241)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at okhttp3.internal.ws.WebSocketReader.processNextFrame(WebSocketReader.kt:106)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at okhttp3.internal.ws.RealWebSocket.loopReader(RealWebSocket.kt:293)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at okhttp3.internal.ws.RealWebSocket$connect$1.onResponse(RealWebSocket.kt:195)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:504)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n2020-04-20 18:15:53.144 32664-32689/com. W/System.err:     at java.lang.Thread.run(Thread.java:761)\r\n``` ", "url": "https://github.com/square/okhttp/issues/5965", "user": "WthiteMemory", "labels": ["bug", "needs info", "websockets"], "created": "2020-04-20 10:34:44", "closed": "2020-04-24 03:31:37", "commits": {"6c1774bb42e333fe89471acd9c7876659938bd23": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "7d456d0e520a81f9413820157c0bb66e918b596d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "3ca806c24bedc382d7ecb05722f81fce4f2fedf3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "6c1774bb42e333fe89471acd9c7876659938bd23", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7d456d0e520a81f9413820157c0bb66e918b596d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3ca806c24bedc382d7ecb05722f81fce4f2fedf3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ba21ef7e35f4f3fa64d7bad275a2c03bc889443c"], "nameRev": "3ca806c24bedc382d7ecb05722f81fce4f2fedf3 tags/parent-4.6.0~12", "commitMessage": "Don't crash processing fragmented web sockets messages (#5983)\n\n* Don't crash processing fragmented web sockets messages\r\n\r\nCloses: https://github.com/square/okhttp/issues/5965\r\n\r\n* Update okhttp-testing-support/src/main/kotlin/okhttp3/TestUtil.kt\r\n\r\nCo-Authored-By: Jake Wharton <jakew@google.com>\r\n\r\n* Update okhttp-testing-support/src/main/kotlin/okhttp3/TestUtil.kt\r\n\r\nCo-Authored-By: Jake Wharton <jakew@google.com>\r\n\r\n* Update okhttp-testing-support/src/main/kotlin/okhttp3/TestUtil.kt\r\n\r\nCo-Authored-By: Jake Wharton <jakew@google.com>\r\n\r\nCo-authored-by: Jake Wharton <jakew@google.com>", "commitDateTime": "2020-04-23 23:31:36", "authoredDateTime": "2020-04-23 23:31:36", "commitGitStats": [{"filePath": "build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-testing-support/src/main/kotlin/okhttp3/TestUtil.kt", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "okhttp/src/main/kotlin/okhttp3/internal/ws/MessageInflater.kt", "insertions": 1, "deletions": 9, "lines": 10}, {"filePath": "okhttp/src/test/java/okhttp3/internal/ws/MessageDeflaterInflaterTest.kt", "insertions": 9, "deletions": 8, "lines": 17}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3ca806c24bedc382d7ecb05722f81fce4f2fedf3"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2.0, "deletions": 10.0, "lines": 12.0, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["", "okhttp/src/main/kotlin/okhttp3/internal/ws/MessageInflater.kt"]}, {"title": "ContextException", "body": "net.dv8tion.jda.api.exceptions.ErrorResponseException: -1: okhttp3.internal.http2.StreamResetException\r\n\tat net.dv8tion.jda.api.exceptions.ErrorResponseException.create(ErrorResponseException.java:158)\r\n\tat net.dv8tion.jda.api.requests.Request.onFailure(Request.java:104)\r\n\tat net.dv8tion.jda.internal.requests.RestActionImpl.handleResponse(RestActionImpl.java:238)\r\n\tat net.dv8tion.jda.api.requests.Request.handleResponse(Request.java:199)\r\n\tat net.dv8tion.jda.internal.requests.Requester.execute(Requester.java:259)\r\n\tat net.dv8tion.jda.internal.requests.Requester.execute(Requester.java:144)\r\n\tat net.dv8tion.jda.internal.requests.Requester.execute(Requester.java:127)\r\n\tat net.dv8tion.jda.internal.requests.ratelimit.BotRateLimiter$Bucket.run(BotRateLimiter.java:416)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:830)\r\nCaused by: okhttp3.internal.http2.StreamResetException: stream was reset: REFUSED_STREAM\r\n\tat okhttp3.internal.http2.Http2Stream.takeHeaders(Http2Stream.kt:148)\r\n\tat okhttp3.internal.http2.Http2ExchangeCodec.readResponseHeaders(Http2ExchangeCodec.kt:96)\r\n\tat okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.kt:106)\r\n\tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:79)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:34)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:74)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n\tat okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:197)\r\n\tat okhttp3.internal.connection.RealCall.execute(RealCall.kt:148)\r\n\tat net.dv8tion.jda.internal.requests.Requester.execute(Requester.java:204)\r\n\t... 9 more\r\nCaused by: net.dv8tion.jda.api.exceptions.ContextException\r\n\tat net.dv8tion.jda.api.exceptions.ContextException.here(ContextException.java:52)\r\n\tat net.dv8tion.jda.api.requests.Request.<init>(Request.java:64)\r\n\tat net.dv8tion.jda.internal.requests.RestActionImpl.queue(RestActionImpl.java:167)\r\n\tat net.dv8tion.jda.api.requests.RestAction.queue(RestAction.java:320)\r\n\tat me.mrtol.marpel.B\u00fcy\u00fckSistemler.Loglar.entry(Loglar.java:114)\r\n\tat me.mrtol.marpel.B\u00fcy\u00fckSistemler.Loglar.lambda$onVoiceChannelUpdateName$15(Loglar.java:781)\r\n\t... 3 more\r\n\r\nLoglar:114\r\n![image](https://user-images.githubusercontent.com/41306224/79730124-09bbed80-82f9-11ea-82f9-d485d76cdfc2.png)\r\n\r\nLoglar:781\r\n![image](https://user-images.githubusercontent.com/41306224/79730097-032d7600-82f9-11ea-92b7-c8a8b51a5f2f.png)\r\n", "url": "https://github.com/square/okhttp/issues/5964", "user": "Mrtol", "labels": ["bug", "stackoverflow"], "created": "2020-04-20 09:00:37", "closed": "2020-04-20 09:10:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.util.NoSuchElementException  ", "body": "okhttp:3.14.7\r\nandroid\r\n\r\nwhen i use Protocol.H2_PRIOR_KNOWLEDGE    + charles proxy\r\n\r\n1. socket connected  and new Http2Conection\r\n2. but the Http2Connection$ReaderRunable  failed  (because charles proxy )\r\n3. then the socket be closed by reader thread.\r\n4. then ExchangeFinder$findHealthyConnection check the connection is not healthy\r\n5. so find the next route ,then occur `java.util.NoSuchElementException`\r\n\r\n\r\nCould you throw  a IOException ?\r\n\r\njava.util.NoSuchElementException\r\n        at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:75)\r\n        at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:187)\r\n        at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n        at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n        at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229)\r\n        at okhttp3.RealCall.execute(RealCall.java:81)\r\n\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n", "url": "https://github.com/square/okhttp/issues/5954", "user": "blueberryCoder", "labels": ["bug"], "created": "2020-04-15 09:31:37", "closed": "2020-04-16 07:44:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Upload file stream to remote server with okhttp3.14.4 cannot get response message when remote server refuse the request", "body": "Hi I am using okhttp3.14.4  with openfeign, I want to upload file with stream, and my remote file server behind the nginx proxy, when request body length over the nginx client_max_body_size limit, nginx will reject this request with 413 response:\r\n```html\r\n<html>\r\n\r\n<head>\r\n\t<title>413 Request Entity Too Large</title>\r\n</head>\r\n\r\n<body bgcolor=\"white\">\r\n\t<center>\r\n\t\t<h1>413 Request Entity Too Large</h1>\r\n\t</center>\r\n\t<hr>\r\n\t<center>nginx/1.12.2</center>\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\n\r\nBut with okhttp client, I just got this exception:\r\n```log\r\n2020-04-14 at 11:05:28 CST ERROR com.shukun.toc.frontservice.util.StreamRequestBody (execute-pool-1)   - Stream Closed java.io.IOException: Stream Closed\r\n\tat java.io.FileInputStream.readBytes(Native Method) ~[?:1.8.0_202]\r\n\tat java.io.FileInputStream.read(FileInputStream.java:255) ~[?:1.8.0_202]\r\n\tat okio.Okio$2.read(Okio.java:140) ~[okio-1.17.2.jar:?]\r\n\tat okio.RealBufferedSink.writeAll(RealBufferedSink.java:105) ~[okio-1.17.2.jar:?]\r\n\tat com.shukun.toc.frontservice.util.StreamRequestBody.writeTo(StreamRequestBody.java:50) ~[classes/:?]\r\n\tat okhttp3.MultipartBody.writeOrCountBytes(MultipartBody.java:173) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.MultipartBody.writeTo(MultipartBody.java:114) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:69) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:43) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229) ~[okhttp-3.14.4.jar:?]\r\n\tat okhttp3.RealCall.execute(RealCall.java:81) ~[okhttp-3.14.4.jar:?]\r\n\tat com.shukun.toc.frontservice.util.NetworkUtil.postUploadFileWithOkHttp(NetworkUtil.java:72) ~[classes/:?]\r\n\tat com.shukun.toc.frontservice.util.NetworkUtil.postUploadFile(NetworkUtil.java:113) ~[classes/:?]\r\n\tat com.shukun.toc.frontservice.service.SyncCommService.uploadFileTask(SyncCommService.java:129) ~[classes/:?]\r\n\tat com.shukun.toc.frontservice.runner.TaskDealRunner.lambda$null$0(TaskDealRunner.java:64) ~[classes/:?]\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_202]\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) [?:1.8.0_202]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java) [?:1.8.0_202]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_202]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_202]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_202]\r\n```\r\nMy request code:\r\n```java\r\npublic static String postUploadFileWithOkHttp(String url, RequestBody postBody, Headers headers) throws AppException {\r\n        Request request = new Request.Builder()\r\n                .headers(headers)\r\n                .url(url)\r\n                .post(postBody)\r\n                .build();\r\n        try (Response response = okHttpClient.newCall(request).execute()){\r\n            int responseCode = response.code();\r\n            if(responseCode == HttpStatus.OK.value()) {\r\n                ResponseBody body = response.body();\r\n                try(InputStream responseStream = (body != null ? body.byteStream() : StreamUtils.emptyInput())) {\r\n                    String contentType = response.headers().get(HttpHeaders.CONTENT_TYPE);\r\n                    MediaType mediaType = (StringUtils.hasLength(contentType) ? MediaType.parseMediaType(contentType) : null);\r\n                    Charset charset = (mediaType != null && mediaType.getCharset() != null ? mediaType.getCharset() : StandardCharsets.UTF_8);\r\n                    return StreamUtils.copyToString(responseStream, charset);\r\n                }\r\n            } else {\r\n                log.error(\"Reponse code:{}, content: {}\", responseCode, response.toString());\r\n                throw new AppException(response.toString());\r\n            }\r\n        } catch (IOException e) {\r\n            log.error(e.getMessage(), e);\r\n            throw new AppException(e.getMessage());\r\n        }\r\n    }\r\n```\r\nSo my question is: how can I get the response http code and msg in this situation?", "url": "https://github.com/square/okhttp/issues/5952", "user": "richard-yao", "labels": ["bug", "needs info", "stackoverflow"], "created": "2020-04-14 03:30:37", "closed": "2020-04-14 06:49:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "GZIP: java.io.EOFException: source exhausted prematurely", "body": "\r\n![QQ\u622a\u56fe20200414111541](https://user-images.githubusercontent.com/14845492/79182397-4abb8a00-7e41-11ea-9444-a4a1f1de4132.png)\r\n\r\n\r\nThis error is raised when the server turns on GZIP compression.\r\nJava client code:\r\n\r\n![QQ\u622a\u56fe20200414110117](https://user-images.githubusercontent.com/14845492/79182334-2069cc80-7e41-11ea-880e-9edf137d5798.png)\r\n\r\n\r\nc# server code:\r\n\r\n\r\n![QQ\u622a\u56fe20200414110729](https://user-images.githubusercontent.com/14845492/79182262-00d2a400-7e41-11ea-8aeb-da577f8b15ee.png)\r\n", "url": "https://github.com/square/okhttp/issues/5951", "user": "Dogwei", "labels": ["bug", "needs info", "stackoverflow"], "created": "2020-04-14 03:15:51", "closed": "2020-04-14 06:46:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "WebSocketHttpTest.serverMaxWindowBitsTooHigh() is flaky", "body": "```\r\nokhttp3.internal.ws.WebSocketHttpTest > serverMaxWindowBitsTooHigh FAILED\r\n    java.lang.AssertionError: expected:<0> but was:<1>\r\n        at org.junit.Assert.fail(Assert.java:89)\r\n        at org.junit.Assert.failNotEquals(Assert.java:835)\r\n        at org.junit.Assert.assertEquals(Assert.java:120)\r\n        at org.junit.Assert.assertEquals(Assert.java:146)\r\n        at okhttp3.OkHttpClientTestRule.ensureAllConnectionsReleased(OkHttpClientTestRule.kt:93)\r\n        at okhttp3.OkHttpClientTestRule$apply$1.evaluate(OkHttpClientTestRule.kt:127)\r\n        at okhttp3.testing.PlatformRule$apply$1.evaluate(PlatformRule.kt:69)\r\n        at okhttp3.TestLogHandler$1.evaluate(TestLogHandler.java:50)\r\n```\r\nhttps://app.circleci.com/pipelines/github/square/okhttp/2891/workflows/a8324886-5feb-4570-ba79-8997947cd50f/jobs/11790", "url": "https://github.com/square/okhttp/issues/5935", "user": "swankjesse", "labels": ["bug"], "created": "2020-04-10 22:37:57", "closed": "2020-04-30 19:09:30", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "Transparent gzip is not working when another compress scheme is used", "body": "I don't know if this is a bug, a feature request or a wrong documentation, but currently OkHttp documentation states that: \"Transparent GZIP shrinks download sizes.\"\r\n\r\nMy server currently returns a GZip response and I didn't understand why I had to unzip it manually. But I realized the problem when I looked at the implementation in BridgeInterceptor.\r\n\r\nThe problem is that in my app I add a Brotli interceptor (`okhttp3.brotli.BrotliInterceptor`)to support Brotli on every request to every endpoints. But only some endpoint currently support Brotli. As such, BridgeInterceptor doesn't set `transparentGzip` since it detect that there is a \"Accept-Encoding\" already set.\r\n\r\nTherefore, I think the documentation should be cleare (\"transparent gzip if no compression is set\"), or maybe modify BridgeInterceptor to handle transparent gzip it is not present in \"Accept-Encoding\"?", "url": "https://github.com/square/okhttp/issues/5929", "user": "thierryd", "labels": ["bug"], "created": "2020-04-09 18:37:09", "closed": "2020-04-09 18:38:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.ArrayIndexOutOfBoundsException Util.checkOffsetAndCount(Util.java:30)", "body": "We are using OkHttpp version com.squareup.okhttp3:okhttp \"3.14.2\" and getting following crash for some users. We could not reproduce, but as traced from crashlytics we get this crash\r\n\r\nFatal Exception: java.lang.ArrayIndexOutOfBoundsException: size=0 offset=0 byteCount=2048\r\nat com.android.okhttp.okio.Util.checkOffsetAndCount(Util.java:30)\r\nat com.android.okhttp.okio.Buffer.write(Buffer.java:1178)\r\nat com.android.okhttp.okio.Buffer.read(Buffer.java:1221)\r\nat com.android.okhttp.okio.RealBufferedSource.read(RealBufferedSource.java:55)\r\nat com.android.okhttp.internal.http.Http1xStream$FixedLengthSource.read(Http1xStream.java:393)\r\nat com.android.okhttp.internal.Util.skipAll(Util.java:159)\r\nat com.android.okhttp.internal.Util.discard(Util.java:141)\r\nat com.android.okhttp.internal.http.Http1xStream$FixedLengthSource.close(Http1xStream.java:410)\r\nat com.android.okhttp.okio.RealBufferedSource.close(RealBufferedSource.java:396)\r\nat com.android.okhttp.okio.RealBufferedSource$1.close(RealBufferedSource.java:384)\r\nat com.google.android.gms.internal.firebase_messaging.zzk.zza(zzk.java:4)\r\nat com.google.firebase.messaging.zzm.close(zzm.java:37)\r\nat com.google.firebase.messaging.zzd.zza(zzd.java:51)\r\nat com.google.firebase.messaging.FirebaseMessagingService.zzc(FirebaseMessagingService.java:69)\r\nat com.google.firebase.messaging.zze.run(zze.java:2)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\nat com.google.android.gms.common.util.concurrent.zza.run(zza.java:6)\r\nat java.lang.Thread.run(Thread.java:764)\r\n", "url": "https://github.com/square/okhttp/issues/5923", "user": "pnkshir", "labels": ["bug"], "created": "2020-04-07 07:09:11", "closed": "2020-04-07 11:56:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Infinite caching in DnsOverHttps", "body": "If you are using DnsOverHttps with `post=false`, url=`https://1.1.1.1/dns-query` and a custom `OkHttpClient` with a `Cache` set, responses are cached forever, and no validation regarding dns ttl are performed.\r\n\r\nCloudflare does not send a `Cache-Control` header, and `DnsRecordCodec` discards the ttl value from the response.\r\n", "url": "https://github.com/square/okhttp/issues/5917", "user": "mopsalarm", "labels": ["bug", "needs info"], "created": "2020-03-31 20:27:56", "closed": "2020-04-07 04:00:55", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "301 redirects not handled correctly", "body": "I have to work with the following setup:\r\n\r\n1. `example.com/picture.jpg` redirects (HTTP 301) to `static.example.com/picture.jpg`\r\n2. DNS A record of `static.example.com` subdomain is set to a different IP address than `example.com`, so 2 different machines\r\n\r\nI have verified that this is working fine with all kinds of different clients.\r\nWhen I use OkHttp to get `static.example.com/picture.jpg` directly, the expected result is returned. However, a request to `example.com/picture.jpg` gives me a `java.net.ProtocolException: Too many follow-up requests: 21`.\r\n\r\nI'm only a few days into Android development, but this is what I could find so far:\r\nfollowUp request responses in `RetryAndFollowUpInterceptor` all are correctly set to `static.example.com/picture.jpg`, but still contain a 301 response. This is impossible as the static server isn't even capable of 301 redirects. To me it feels like the request is sent to the same IP address even if the subdomain has changed (just a guess though).\r\n\r\nThank you in advance for every idea!", "url": "https://github.com/square/okhttp/issues/5910", "user": "johannes-schliephake", "labels": ["bug"], "created": "2020-03-28 23:14:46", "closed": "2020-03-29 11:13:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Null Pointer Exception During Certificate Pinning (v. 4.4.1)", "body": "When creating a certificate pinned connection using OkHttp 4.4.1, we face a Nul Pointer Exception at the following line \r\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt#L393\r\n\r\nBellow is the stack trace\r\n```\r\n2020-03-24 15:36:44.978 6227-6307/com.example.application E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n    Process: com.example.application, PID: 6227\r\n    kotlin.KotlinNullPointerException\r\n        at okhttp3.internal.connection.RealConnection$connectTls$1.invoke(RealConnection.kt:393)\r\n        at okhttp3.internal.connection.RealConnection$connectTls$1.invoke(RealConnection.kt:73)\r\n        at okhttp3.Handshake$peerCertificates$2.invoke(Handshake.kt:53)\r\n        at okhttp3.Handshake$peerCertificates$2.invoke(Handshake.kt:34)\r\n        at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)\r\n        at okhttp3.Handshake.peerCertificates(Unknown Source:7)\r\n        at okhttp3.internal.connection.RealConnection$connectTls$2.invoke(RealConnection.kt:399)\r\n        at okhttp3.internal.connection.RealConnection$connectTls$2.invoke(RealConnection.kt:73)\r\n        at okhttp3.CertificatePinner.check$okhttp(CertificatePinner.kt:159)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.kt:398)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.kt:325)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:197)\r\n        at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:235)\r\n        at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:108)\r\n        at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:76)\r\n        at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:245)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:74)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:219)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n```\r\n\r\nHow should we create a CertificatePinner with certificateCleaner?  Or should the code use `?.` operator at the above line rather than `!!`", "url": "https://github.com/square/okhttp/issues/5895", "user": "rahul-narkhede", "labels": ["bug"], "created": "2020-03-24 20:01:28", "closed": "2020-04-24 02:54:45", "commits": {}, "ttf": 30.00027777777778, "commitsDetails": []}, {"title": "GMS and Conscrypt don't negotiate HTTP/2 on Android 10+ and 3.12.x ", "body": "From https://github.com/square/okhttp/issues/5879\r\n\r\n3.12.9 added Android10Platform which IIRC we did to avoid issues with graylisted (and eventually blacklisted in 11) APIs via Reflection. So we backported it from 4.x.\r\n\r\nc2e9ee2#diff-55fc33d7feaf12483a0809e1db851f58", "url": "https://github.com/square/okhttp/issues/5884", "user": "yschimke", "labels": ["bug"], "created": "2020-03-21 07:06:38", "closed": "2020-03-21 13:59:14", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "GMS and Conscrypt don't negotiate HTTP/2 on 3.14.x", "body": "From https://github.com/square/okhttp/issues/5879\r\n\r\nOriginally due to 4fb5e71#diff-04efb1e303b1ac9bc9cc37b04df89ca0\r\n\r\nPotential fix, revert this commit.\r\n", "url": "https://github.com/square/okhttp/issues/5883", "user": "yschimke", "labels": ["android", "bug"], "created": "2020-03-21 06:47:20", "closed": "2020-03-21 06:47:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "HTTP2 not working with different mixes of library and OS versions", "body": "In my application I'm still using branch 3.12.x because I still need to support older versions than Android 5.0. Today I've realized that HTTP2 connections were not working on Android 10. \r\n\r\nHere you can find the log from a Caddy server with different requests made by my app. The only differences between executions were the modification of `OkHttp` version. I've tried from an old 3.12.x version where HTTP2 were working fine to the latest version of that branch, 3.14.x and 4.x\r\n\r\n```\r\n[19/Mar/2020:20:16:34 +0100] \"POST /redacted HTTP/2.0\" 200 8143 \"-\" \"okhttp/3.12.6\"\r\n[19/Mar/2020:20:16:34 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/3.12.6\"\r\n[19/Mar/2020:20:16:34 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/3.12.6\"\r\n\r\n[19/Mar/2020:20:19:43 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/3.12.7\"\r\n[19/Mar/2020:20:19:43 +0100] \"POST /redacted HTTP/2.0\" 200 8142 \"-\" \"okhttp/3.12.7\"\r\n[19/Mar/2020:20:19:43 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/3.12.7\"\r\n\r\n[19/Mar/2020:20:22:03 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/3.12.8\"\r\n[19/Mar/2020:20:22:03 +0100] \"POST /redacted HTTP/2.0\" 200 8142 \"-\" \"okhttp/3.12.8\"\r\n[19/Mar/2020:20:22:04 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/3.12.8\"\r\n\r\n[19/Mar/2020:20:23:16 +0100] \"POST /redacted HTTP/1.1\" 200 8143 \"-\" \"okhttp/3.12.9\"\r\n[19/Mar/2020:20:23:17 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.12.9\"\r\n[19/Mar/2020:20:23:17 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/3.12.9\"\r\n\r\n[19/Mar/2020:20:13:40 +0100] \"POST /redacted HTTP/1.1\" 200 8142 \"-\" \"okhttp/3.12.10\"\r\n[19/Mar/2020:20:14:10 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/3.12.10\"\r\n[19/Mar/2020:20:14:11 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.12.10\"\r\n\r\n[19/Mar/2020:20:25:17 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.14.7\"\r\n[19/Mar/2020:20:25:17 +0100] \"POST /redacted HTTP/1.1\" 200 8142 \"-\" \"okhttp/3.14.7\"\r\n[19/Mar/2020:20:25:17 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/3.14.7\"\r\n\r\n[19/Mar/2020:20:27:44 +0100] \"POST /redacted HTTP/1.1\" 200 8143 \"-\" \"okhttp/3.14.6\"\r\n[19/Mar/2020:20:27:44 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.14.6\"\r\n[19/Mar/2020:20:27:44 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/3.14.6\"\r\n\r\n[19/Mar/2020:20:30:28 +0100] \"POST /redacted HTTP/1.1\" 200 8144 \"-\" \"okhttp/3.14.5\"\r\n[19/Mar/2020:20:30:28 +0100] \"POST /redacted HTTP/1.1\" 401 120 \"-\" \"okhttp/3.14.5\"\r\n[19/Mar/2020:20:30:28 +0100] \"POST /redacted HTTP/1.1\" 401 120 \"-\" \"okhttp/3.14.5\"\r\n\r\n[19/Mar/2020:20:32:16 +0100] \"POST /redacted HTTP/1.1\" 200 8144 \"-\" \"okhttp/3.14.4\"\r\n[19/Mar/2020:20:32:16 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/3.14.4\"\r\n[19/Mar/2020:20:32:16 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.14.4\"\r\n\r\n[19/Mar/2020:20:35:19 +0100] \"POST /redacted HTTP/1.1\" 200 8143 \"-\" \"okhttp/3.14.3\"\r\n[19/Mar/2020:20:35:19 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.14.3\"\r\n[19/Mar/2020:20:35:19 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/3.14.3\"\r\n\r\n[19/Mar/2020:20:38:46 +0100] \"POST /redacted HTTP/1.1\" 200 8142 \"-\" \"okhttp/3.14.2\"\r\n[19/Mar/2020:20:38:46 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.14.2\"\r\n[19/Mar/2020:20:38:46 +0100] \"POST /redacted HTTP/1.1\" 200 369 \"-\" \"okhttp/3.14.2\"\r\n\r\n[19/Mar/2020:20:41:46 +0100] \"POST /redacted HTTP/1.1\" 200 8143 \"-\" \"okhttp/3.14.1\"\r\n[19/Mar/2020:20:41:46 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.14.1\"\r\n[19/Mar/2020:20:41:46 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/3.14.1\"\r\n\r\n[19/Mar/2020:20:44:39 +0100] \"POST /redacted HTTP/1.1\" 200 8144 \"-\" \"okhttp/3.14.0\"\r\n[19/Mar/2020:20:44:39 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.14.0\"\r\n[19/Mar/2020:20:44:40 +0100] \"POST /redacted HTTP/1.1\" 200 369 \"-\" \"okhttp/3.14.0\"\r\n\r\n[19/Mar/2020:20:47:51 +0100] \"POST /redacted HTTP/1.1\" 200 8144 \"-\" \"okhttp/3.13.1\"\r\n[19/Mar/2020:20:47:51 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.13.1\"\r\n[19/Mar/2020:20:47:51 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/3.13.1\"\r\n\r\n[19/Mar/2020:20:58:07 +0100] \"POST /redacted HTTP/1.1\" 200 8144 \"-\" \"okhttp/4.0.0\"\r\n[19/Mar/2020:20:58:07 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/4.0.0\"\r\n[19/Mar/2020:20:58:07 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/4.0.0\"\r\n\r\n[19/Mar/2020:21:44:37 +0100] \"POST /redacted HTTP/1.1\" 200 8143 \"-\" \"okhttp/4.0.1\"\r\n[19/Mar/2020:21:44:37 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/4.0.1\"\r\n[19/Mar/2020:21:44:37 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/4.0.1\"\r\n\r\n[19/Mar/2020:21:49:17 +0100] \"POST /redacted HTTP/1.1\" 200 8144 \"-\" \"okhttp/4.1.0\"\r\n[19/Mar/2020:21:49:17 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/4.1.0\"\r\n[19/Mar/2020:21:49:17 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/4.1.0\"\r\n\r\n[19/Mar/2020:21:52:52 +0100] \"POST /redacted HTTP/1.1\" 200 8144 \"-\" \"okhttp/4.1.1\"\r\n[19/Mar/2020:21:52:52 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/4.1.1\"\r\n[19/Mar/2020:21:52:52 +0100] \"POST /redacted HTTP/1.1\" 200 370 \"-\" \"okhttp/4.1.1\"\r\n\r\n[19/Mar/2020:21:57:05 +0100] \"POST /redacted HTTP/2.0\" 200 369 \"-\" \"okhttp/4.2.0\"\r\n[19/Mar/2020:21:57:05 +0100] \"POST /redacted HTTP/2.0\" 200 8143 \"-\" \"okhttp/4.2.0\"\r\n[19/Mar/2020:21:57:05 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/4.2.0\"\r\n\r\n[19/Mar/2020:22:01:34 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/4.2.1\"\r\n[19/Mar/2020:22:01:34 +0100] \"POST /redacted HTTP/2.0\" 200 8143 \"-\" \"okhttp/4.2.1\"\r\n[19/Mar/2020:22:01:34 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/4.2.1\"\r\n\r\n[19/Mar/2020:22:05:54 +0100] \"POST /redacted HTTP/2.0\" 401 118 \"-\" \"okhttp/4.2.2\"\r\n[19/Mar/2020:22:05:56 +0100] \"POST /redacted HTTP/2.0\" 200 159 \"-\" \"okhttp/4.2.2\"\r\n[19/Mar/2020:22:05:58 +0100] \"POST /redacted HTTP/2.0\" 200 8142 \"-\" \"okhttp/4.2.2\"\r\n\r\n[19/Mar/2020:21:39:33 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/4.3.0\"\r\n[19/Mar/2020:21:39:33 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/4.3.0\"\r\n[19/Mar/2020:21:39:37 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/4.3.0\"\r\n\r\n[19/Mar/2020:21:34:57 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/4.3.1\"\r\n[19/Mar/2020:21:34:57 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/4.3.1\"\r\n[19/Mar/2020:21:34:59 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/4.3.1\"\r\n\r\n[19/Mar/2020:21:00:41 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/4.4.0\"\r\n[19/Mar/2020:21:01:07 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/4.4.0\"\r\n[19/Mar/2020:21:10:26 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/4.4.0\"\r\n\r\n[19/Mar/2020:22:44:57 +0100] \"POST /redacted HTTP/2.0\" 200 159 \"-\" \"okhttp/4.4.1\"\r\n[19/Mar/2020:22:44:57 +0100] \"POST /redacted HTTP/2.0\" 200 370 \"-\" \"okhttp/4.4.1\"\r\n[19/Mar/2020:22:44:59 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/4.4.1\"\r\n```\r\n\r\nIn summary for Android 10:\r\n* In 3.12.x it was working fine until 3.12.9 were it does not work anymore. \r\n* In 3.14.x it seems not to work at all.\r\n* In 4.x it seems to work properly from 4.2.0 till the latest one.\r\n\r\nI've also tried the same test with an Android 9 device. These are the relevant log parts.\r\n\r\n```\r\n[19/Mar/2020:22:12:18 +0100] \"POST /redacted HTTP/2.0\" 200 446 \"-\" \"okhttp/3.12.10\"\r\n[19/Mar/2020:22:12:18 +0100] \"POST /redacted HTTP/2.0\" 200 88 \"-\" \"okhttp/3.12.10\"\r\n[19/Mar/2020:22:12:18 +0100] \"POST /redacted HTTP/2.0\" 200 80 \"-\" \"okhttp/3.12.10\"\r\n\r\n[19/Mar/2020:22:16:47 +0100] \"POST /redacted HTTP/1.1\" 200 80 \"-\" \"okhttp/3.14.7\"\r\n[19/Mar/2020:22:16:47 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/3.14.7\"\r\n[19/Mar/2020:22:16:47 +0100] \"POST /redacted HTTP/1.1\" 200 399 \"-\" \"okhttp/3.14.7\"\r\n\r\n[19/Mar/2020:22:21:20 +0100] \"POST /redacted HTTP/1.1\" 200 80 \"-\" \"okhttp/4.1.1\"\r\n[19/Mar/2020:22:21:20 +0100] \"POST /redacted HTTP/1.1\" 200 99 \"-\" \"okhttp/4.1.1\"\r\n[19/Mar/2020:22:21:21 +0100] \"POST /redacted HTTP/1.1\" 200 399 \"-\" \"okhttp/4.1.1\"\r\n\r\n[19/Mar/2020:22:41:26 +0100] \"POST /redacted HTTP/2.0\" 200 80 \"-\" \"okhttp/4.2.0\"\r\n[19/Mar/2020:22:41:26 +0100] \"POST /redacted HTTP/2.0\" 401 119 \"-\" \"okhttp/4.2.0\"\r\n[19/Mar/2020:22:41:27 +0100] \"POST /redacted HTTP/2.0\" 401 117 \"-\" \"okhttp/4.2.0\"\r\n\r\n[19/Mar/2020:22:43:41 +0100] \"POST /redacted HTTP/2.0\" 200 80 \"-\" \"okhttp/4.4.1\"\r\n[19/Mar/2020:22:43:42 +0100] \"POST /redacted HTTP/2.0\" 200 399 \"-\" \"okhttp/4.4.1\"\r\n[19/Mar/2020:22:43:42 +0100] \"POST /redacted HTTP/2.0\" 200 99 \"-\" \"okhttp/4.4.1\"\r\n```\r\n\r\nIn summary for Android 9:\r\n* 3.12.x is working fine\r\n* 3.14.x is not working\r\n* In 4.x the behavior is the same as in Android 10. HTTP2 is not woking until 4.2.0 and it's working fine from that.", "url": "https://github.com/square/okhttp/issues/5879", "user": "niltsiar", "labels": ["bug"], "created": "2020-03-19 22:24:17", "closed": "2020-03-21 07:22:03", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Caused by: java.lang.IllegalStateException: Unable to extract the trust manager on Android10Platform, sslSocketFactory is class com.android.org.conscrypt.OpenSSLSocketFactoryImpl", "body": "Process: com.chaincat.wallet, PID: 8914\r\n    java.lang.RuntimeException: Unable to start activity ComponentInfo{com.chaincat.wallet/top.andnux.moudles.base.ui.main.MainActivity}: java.lang.IllegalStateException: Unable to extract the trust manager on Android10Platform, sslSocketFactory is class com.android.org.conscrypt.OpenSSLSocketFactoryImpl\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3333)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3477)\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:83)\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:135)\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:95)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2043)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:216)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7464)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:549)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:955)", "url": "https://github.com/square/okhttp/issues/5878", "user": "andnux", "labels": ["bug"], "created": "2020-03-19 08:36:05", "closed": "2020-03-19 08:48:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Status code is not standard in status line,like 6004963,then throw a exception", "body": "I find method parse in class StatusLine parse status line fix in 3 digits,if status line is not standard line,then request is failed.", "url": "https://github.com/square/okhttp/issues/5865", "user": "hongui", "labels": ["bug"], "created": "2020-03-11 10:39:31", "closed": "2020-03-11 13:14:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "After adding mockserver dependency builds failing on jenkins with lint errors.", "body": "Log from jenkins for failing build.\r\n```\r\nErrors found:\r\n12:59:39   \r\n12:59:39   /mnt/jenkinspan/.gradle/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk15on/1.50/be504b4901d75cbe129a178f5830e6c358ec214c/bcprov-jdk15on-1.50.jar: Error: Invalid package reference in library; not included in Android: javax.naming.directory. Referenced from org.bouncycastle.jce.provider.X509LDAPCertStoreSpi. [InvalidPackage]\r\n12:59:39   /mnt/jenkinspan/.gradle/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk15on/1.50/be504b4901d75cbe129a178f5830e6c358ec214c/bcprov-jdk15on-1.50.jar: Error: Invalid package reference in library; not included in Android: javax.naming. Referenced from org.bouncycastle.jce.provider.X509LDAPCertStoreSpi. [InvalidPackage]\r\n\r\n```\r\nAdded\r\n`lintOptions {\r\n        lintConfig file(\"lint.xml\")\r\n    }`\r\nbuild.gradle\r\n\r\nlint.xml\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<lint>\r\n    <issue id=\"InvalidPackage\">\r\n       <ignore path=\"**/*spongycastle*.jar\"/>\r\n      <ignore path=\"**/*bouncycastle*.jar\"/>\r\n    </issue>\r\n</lint>\r\n```", "url": "https://github.com/square/okhttp/issues/5864", "user": "vkalmath", "labels": ["bug"], "created": "2020-03-10 20:19:08", "closed": "2020-03-19 02:24:38", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "GET BUG in 4.4.0", "body": "Hi,\r\n\r\nWhen I perform a GET on this URL : \"https://hopteam.hop.fr\" using 4.3.1 version, it works fine (response is 200)\r\n\r\nIf I do the same GET with 4.4.0, responses is 404\r\n\r\nHere is my code\r\n`            request = new Request.Builder()\r\n                .url(url_hopteam)\r\n                .build();\r\n            response = client.newCall(request).execute();\r\n`\r\n\r\nThe client is\r\n`        client = new OkHttpClient.Builder()\r\n            .connectTimeout(28, TimeUnit.SECONDS)\r\n            .writeTimeout(20, TimeUnit.SECONDS)\r\n            .readTimeout(28, TimeUnit.SECONDS)\r\n            .addNetworkInterceptor(new LoggingInterceptor())\r\n            .cookieJar(cookieJar)\r\n            .connectionSpecs(Arrays.asList(ConnectionSpec.MODERN_TLS, ConnectionSpec.COMPATIBLE_TLS))\r\n            .build();\r\n`\r\n\r\nIn my app build.gradle, I have\r\n`    implementation 'com.squareup.okhttp3:okhttp:4.4.0'`\r\n\r\nIn the project build.gradle, I have\r\n`        classpath 'com.android.tools.build:gradle:3.5.2'\r\n`\r\n", "url": "https://github.com/square/okhttp/issues/5859", "user": "MS893", "labels": ["bug"], "created": "2020-03-08 09:21:32", "closed": "2020-03-08 13:16:57", "commits": {"c599a1690f7f3776885640dfd5f6755a7eceb382": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "71046d45cc7d9262b9f5ccd5c55aeb225ccf6819": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c599a1690f7f3776885640dfd5f6755a7eceb382", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["26b655293130029c7bb1d16860af1287e05fc34b"], "nameRev": "c599a1690f7f3776885640dfd5f6755a7eceb382 tags/parent-4.5.0-RC1~9^2", "commitMessage": "Don't reuse a connection on redirect if certs match but DNS does not\n\nWe attempt to minimize connection and reconnection work, but in this case we\nwere overly aggressive about retaining the same connection. In some deployments\nservices will share certificates but not DNS addresses; when redirecting\nbetween such services we were incorrectly attempting to reuse the connection.\n\nThis would have resulted in 404s and other misdirected requests.\n\nCloses: https://github.com/square/okhttp/issues/5859\n", "commitDateTime": "2020-03-08 09:09:14", "authoredDateTime": "2020-03-08 09:09:14", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Exchange.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/RealInterceptorChain.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/test/java/okhttp3/ConnectionCoalescingTest.java", "insertions": 66, "deletions": 2, "lines": 68}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionCoalescingTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsOnRedirectWhenDnsDontMatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsOnRedirectWhenNotSubjectAltName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsOnRedirectWhenCertificatePinningFails()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsOnRedirectWhenHostnameVerifierUsed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsWhenNotSubjectAltName()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "71046d45cc7d9262b9f5ccd5c55aeb225ccf6819", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["7ea7c15e6b6749358284bbbf26103b4eaa1e4258"], "nameRev": "71046d45cc7d9262b9f5ccd5c55aeb225ccf6819 tags/parent-4.4.1~1^2", "commitMessage": "Don't reuse a connection on redirect if certs match but DNS does not (4.4.x)\n\nWe attempt to minimize connection and reconnection work, but in this case we\nwere overly aggressive about retaining the same connection. In some deployments\nservices will share certificates but not DNS addresses; when redirecting\nbetween such services we were incorrectly attempting to reuse the connection.\n\nThis would have resulted in 404s and other misdirected requests.\n\nCloses: https://github.com/square/okhttp/issues/5859\n", "commitDateTime": "2020-03-08 09:18:02", "authoredDateTime": "2020-03-08 09:09:14", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Exchange.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/RealInterceptorChain.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/test/java/okhttp3/ConnectionCoalescingTest.java", "insertions": 66, "deletions": 2, "lines": 68}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionCoalescingTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsOnRedirectWhenDnsDontMatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsOnRedirectWhenNotSubjectAltName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsOnRedirectWhenCertificatePinningFails()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsOnRedirectWhenHostnameVerifierUsed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.ConnectionCoalescingTest.skipsWhenNotSubjectAltName()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c599a1690f7f3776885640dfd5f6755a7eceb382", "71046d45cc7d9262b9f5ccd5c55aeb225ccf6819"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 28, "deletions": 6, "lines": 34, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection/Exchange.kt", "okhttp/src/main/java/okhttp3/internal/http/RealInterceptorChain.kt", "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt"], "changesInPackagesSPOON": []}, {"title": "Interceptor Post params ", "body": "   val builder = chain\r\n            .request()\r\n            .newBuilder()\r\n            .post(formBody.build())\r\n            .url(urlBuilder.build())\r\n        val request = builder.build()\r\n\r\n   return chain.proceed(request)\r\n\r\nWhen I used POST/PUT\r\nI do post() in builder\r\nallways reture 400.\r\nBut I check Log\r\nbody params is correct.\r\n\r\nremove  .post() work fine but I need to add params here.\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5858", "user": "PascalTang", "labels": ["bug"], "created": "2020-03-08 08:52:12", "closed": "2020-03-08 09:08:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MockWebServer should allow GET with a body", "body": "`okhttp3.internal.http.HttpMethod` forbids having body on GET request:\r\n\r\n```\r\nfun permitsRequestBody(method: String): Boolean = !(method == \"GET\" || method == \"HEAD\")\r\n```\r\n\r\nWhile I agree that this is a bad practice to use GET with a body, problem is that we have to work with 3rd party APIs which no one will ever change and they do demand GET with a body.\r\n\r\nIn this case it's a huge show-stopper for us :(\r\n\r\nI propose to either remove GET from permitsRequestBody or at least make it somehow configurable.\r\n\r\nOr, at least remove this validation from MockWebServer.", "url": "https://github.com/square/okhttp/issues/5852", "user": "lazystone", "labels": ["bug"], "created": "2020-03-06 08:46:41", "closed": "2020-03-06 09:36:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Redirect bug in 4.4.0", "body": "In version 4.4.0, I've noticed a bug where redirects do not work.\r\nIn an attempt to make a request to [http://yahoo.com/ads.txt](url), which redirects to [http://www.yahoo.com/ads.txt](url), okhttp 4.4.0 threw exception `javax.net.ssl.SSLPeerUnverifiedException: Failed to find a trusted cert that signed [...]`, where a lower version (e.g. 4.3.1) successfully fetches the contents from [http://www.yahoo.com/ads.txt](url).\r\nAttaching the code to reproduce the bug:\r\n```\r\nimport java.security.GeneralSecurityException;\r\nimport java.security.SecureRandom;\r\nimport java.security.cert.X509Certificate;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport javax.net.ssl.SSLContext;\r\nimport javax.net.ssl.TrustManager;\r\nimport javax.net.ssl.X509TrustManager;\r\n\r\nimport okhttp3.ConnectionSpec;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Protocol;\r\nimport okhttp3.Request;\r\nimport org.junit.Test;\r\n\r\npublic class TestClients {\r\n\r\n    private final static X509TrustManager TRUST_MANAGER = new X509TrustManager() {\r\n        @Override\r\n        public void checkClientTrusted(X509Certificate[] x509Certificates, String s) {\r\n        }\r\n\r\n        @Override\r\n        public void checkServerTrusted(X509Certificate[] x509Certificates, String s) {\r\n        }\r\n\r\n        @Override\r\n        public X509Certificate[] getAcceptedIssuers() {\r\n            return new X509Certificate[0];\r\n        }\r\n    };\r\n\r\n    public static OkHttpClient createTrustingHttpClient() {\r\n        try {\r\n            final SSLContext sslContext = SSLContext.getInstance(\"TLS\");\r\n            sslContext.init(null, new TrustManager[] { TRUST_MANAGER }, new SecureRandom());\r\n\r\n            return new OkHttpClient.Builder()\r\n                    .sslSocketFactory(sslContext.getSocketFactory(), TRUST_MANAGER)\r\n                    .connectionSpecs(Arrays.asList(ConnectionSpec.COMPATIBLE_TLS, ConnectionSpec.CLEARTEXT))\r\n                    .protocols(List.of(Protocol.HTTP_1_1))\r\n                    .build();\r\n        } catch (GeneralSecurityException se) {\r\n            throw new RuntimeException(se);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void test() throws Exception {\r\n        String url = \"http://yahoo.com/ads.txt\";\r\n\r\n        OkHttpClient trustingHttpClient = createTrustingHttpClient();\r\n        final var okrequest = new Request.Builder()\r\n                .url(url)\r\n                .build();\r\n        final var okresponse = trustingHttpClient.newCall(okrequest).execute();\r\n        System.out.println(okresponse.body().string());\r\n    }\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/5845", "user": "ericwhrz", "labels": ["bug"], "created": "2020-03-04 12:01:36", "closed": "2020-03-19 02:22:45", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "ConnectionPool.cleanup has ConcurrentModificationException", "body": "I use okhttp 3.12.3 and found this crash:\r\njava.util.ConcurrentModificationException\tArrayDeque.java\t625\r\njava.util.ConcurrentModificationException\r\n\tat java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:625)\r\n\tat okhttp3.ConnectionPool.cleanup(SourceFile:208)\r\n\tat okhttp3.ConnectionPool$1.run(SourceFile:60)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n\tat java.lang.Thread.run(Thread.java:764)\r\n", "url": "https://github.com/square/okhttp/issues/5844", "user": "zzzzyf", "labels": ["bug"], "created": "2020-03-04 07:54:38", "closed": "2020-03-06 20:54:13", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Crash on Android 10 with underscore in subdomain", "body": "Crash on OkHttp 3.12.9 and 3.12.10 when a URL subdomain contains underscores. Reproducible on API 29 (Android 10) emulator but not API 28 (Android 9).\r\n\r\nOn OkHttp 3.12.8 it errors but does not crash. Similarly OkHttp 3.12.10 errors but does not crash on Android 9.\r\n\r\nReproduce by making a GET request to an HTTPS URL with underscore in subdomain.\r\n\r\nI saw old issue #242 closed saying underscores aren't allowed in hostnames, which may be technically true, but they are sometimes seen in the wild. Examples:\r\n\r\n* https://open_nsfw.gitlab.io/ (which was highly circulated on the web a few years ago)\r\n* https://example_underscore_123.s3.amazonaws.com/\r\n* https://instant_regret.reddit.com/\r\n\r\nLogcats:\r\n\r\nOkHttp 3.12.10 on Android 10:\r\n\r\n    --------- beginning of crash\r\n    E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n    Process: com.talklittle.testokhttpunderscoresubdomain, PID: 10321\r\n    java.lang.IllegalArgumentException: Invalid input to toASCII: example_underscore.s3.amazonaws.com\r\n        at java.net.IDN.toASCII(IDN.java:115)\r\n        at javax.net.ssl.SNIHostName.<init>(SNIHostName.java:99)\r\n        at com.android.org.conscrypt.Platform.getSSLParameters(Platform.java:153)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.getSSLParameters(ConscryptFileDescriptorSocket.java:1117)\r\n        at okhttp3.internal.platform.Android10Platform.configureTlsExtensions(Android10Platform.java:40)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:315)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\r\n        at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:258)\r\n        at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n        at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:127)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:257)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:201)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n     Caused by: The input does not conform to the STD 3 ASCII rules. line:  0. preContext:  . postContext: e_underscore\r\n    \r\n        at android.icu.impl.IDNA2003.convertToASCII(IDNA2003.java:219)\r\n        at android.icu.impl.IDNA2003.convertIDNToASCII(IDNA2003.java:277)\r\n        at android.icu.text.IDNA.convertIDNToASCII(IDNA.java:654)\r\n        at java.net.IDN.toASCII(IDN.java:108)\r\n        at javax.net.ssl.SNIHostName.<init>(SNIHostName.java:99)\u00a0\r\n        at com.android.org.conscrypt.Platform.getSSLParameters(Platform.java:153)\u00a0\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.getSSLParameters(ConscryptFileDescriptorSocket.java:1117)\u00a0\r\n        at okhttp3.internal.platform.Android10Platform.configureTlsExtensions(Android10Platform.java:40)\u00a0\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:315)\u00a0\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\u00a0\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\u00a0\r\n        at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:258)\u00a0\r\n        at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\u00a0\r\n        at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\u00a0\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\u00a0\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\u00a0\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\u00a0\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\u00a0\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\u00a0\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\u00a0\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\u00a0\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\u00a0\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:127)\u00a0\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\u00a0\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\u00a0\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:257)\u00a0\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:201)\u00a0\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\u00a0\r\n        at java.lang.Thread.run(Thread.java:919)\u00a0\r\n\r\nOkHttp 3.12.8 on Android 10, error but no crash:\r\n\r\n    javax.net.ssl.SSLHandshakeException: java.lang.IllegalArgumentException: Invalid input to toASCII: example_underscore.s3.amazonaws.com\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(ConscryptFileDescriptorSocket.java:231)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:320)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\r\n        at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:258)\r\n        at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n        at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:127)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:257)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:201)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n    Caused by: java.security.cert.CertificateException: java.lang.IllegalArgumentException: Invalid input to toASCII: example_underscore.s3.amazonaws.com\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.verifyCertificateChain(ConscryptFileDescriptorSocket.java:415)\r\n        at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\r\n        at com.android.org.conscrypt.NativeSsl.doHandshake(NativeSsl.java:387)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(ConscryptFileDescriptorSocket.java:226)\r\n            ... 23 more\r\n    Caused by: java.lang.IllegalArgumentException: Invalid input to toASCII: example_underscore.s3.amazonaws.com\r\n        at java.net.IDN.toASCII(IDN.java:115)\r\n        at javax.net.ssl.SNIHostName.<init>(SNIHostName.java:99)\r\n        at com.android.org.conscrypt.Platform.getSSLParameters(Platform.java:153)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.getSSLParameters(ConscryptFileDescriptorSocket.java:1117)\r\n        at com.android.org.conscrypt.TrustManagerImpl.getTrustedChainForServer(TrustManagerImpl.java:352)\r\n        at android.security.net.config.NetworkSecurityTrustManager.checkServerTrusted(NetworkSecurityTrustManager.java:94)\r\n        at android.security.net.config.RootTrustManager.checkServerTrusted(RootTrustManager.java:89)\r\n        at com.android.org.conscrypt.Platform.checkServerTrusted(Platform.java:224)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.verifyCertificateChain(ConscryptFileDescriptorSocket.java:407)\r\n            ... 26 more\r\n    Caused by: The input does not conform to the STD 3 ASCII rules. line:  0. preContext:  . postContext: e_underscore\r\n        at android.icu.impl.IDNA2003.convertToASCII(IDNA2003.java:219)\r\n        at android.icu.impl.IDNA2003.convertIDNToASCII(IDNA2003.java:277)\r\n        at android.icu.text.IDNA.convertIDNToASCII(IDNA.java:654)\r\n        at java.net.IDN.toASCII(IDN.java:108)\r\n            ... 34 more\r\n", "url": "https://github.com/square/okhttp/issues/5840", "user": "talklittle", "labels": ["android", "bug"], "created": "2020-03-03 07:53:20", "closed": "2020-03-19 02:31:07", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "okhttp3 is throwing java.net.ConnectException when calling .intercept()", "body": "Here the code I am using\r\n\r\n```\r\nclass VerificationInterceptor(private val helper: RequestHelper) : Interceptor {\r\n\r\n    override fun intercept(chain: Interceptor.Chain): Response =\r\n        chain.proceed(chain.request()).apply {\r\n            if (code == 200\r\n                && !chain.request().url.toString().contains(BuildConfig.root)\r\n                && !chain.request().url.toString().contains(LOCAL_HOST_BASE)\r\n            ) {\r\n                if (!helper.getResponseCryptoVerification(\r\n                        headers,\r\n                        peekBody(Long.MAX_VALUE).string()\r\n                    )\r\n                ) {\r\n                    throw IOException(\"Error while generating Hmac for Response JSON\")\r\n                }\r\n            }\r\n        }\r\n\r\n}\r\n```\r\n\r\nThis line here `chain.proceed(chain.request()).apply {` is crashing with this stack trace\r\n\r\n```\r\njava.net.ConnectException: Connection refused\r\n\tat java.net.PlainSocketImpl.socketConnect()(PlainSocketImpl.java:-2)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect()(AbstractPlainSocketImpl.java:334)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress()(AbstractPlainSocketImpl.java:196)\r\n\tat java.net.AbstractPlainSocketImpl.connect()(AbstractPlainSocketImpl.java:178)\r\n\tat java.net.SocksSocketImpl.connect()(SocksSocketImpl.java:356)\r\n\tat java.net.Socket.connect()(Socket.java:605)\r\n\tat okhttp3.internal.platform.AndroidPlatform.connectSocket()(AndroidPlatform.kt:58)\r\n\tat okhttp3.internal.connection.RealConnection.connectSocket()(RealConnection.kt:268)\r\n\tat okhttp3.internal.connection.RealConnection.connect()(RealConnection.kt:176)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findConnection()(ExchangeFinder.kt:236)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findHealthyConnection()(ExchangeFinder.kt:109)\r\n\tat okhttp3.internal.connection.ExchangeFinder.find()(ExchangeFinder.kt:77)\r\n\tat okhttp3.internal.connection.Transmitter.newExchange$okhttp()(Transmitter.kt:162)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept()(ConnectInterceptor.kt:35)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed()(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed()(RealInterceptorChain.kt:87)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept()(CacheInterceptor.kt:82)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed()(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed()(RealInterceptorChain.kt:87)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept()(BridgeInterceptor.kt:84)\r\n```\r\n\r\nI am unsure of what can be causing that? ", "url": "https://github.com/square/okhttp/issues/5837", "user": "AnastasiaRainMaker", "labels": ["bug", "stackoverflow"], "created": "2020-03-02 17:16:18", "closed": "2020-03-02 19:07:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OkHttp causes JVM 11 to hang with HTTP/2", "body": "The following code\r\n```java\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\n\r\npublic class A\r\n{\r\n\tpublic static void main(String[] args) throws Throwable\r\n\t{\r\n\t\tSystem.out.println(\r\n\t\t\t\tnew OkHttpClient.Builder().build().newCall(\r\n\t\t\t\t\t\tnew Request.Builder().url(\"https://en.wikipedia.org/w/api.php\").build()).execute());\r\n\t}\r\n}\r\n```\r\ndoesn't exit for several minutes in java 11.  I'm using the 4.4.0 release of OkHttp.\r\n\r\nRun and compile with `javac A.java && java A`\r\n\r\nMy environment (macOS Catalina 10.15.3):\r\n```\r\n$ java -version\r\nopenjdk version \"11.0.2\" 2019-01-15\r\nOpenJDK Runtime Environment 18.9 (build 11.0.2+9)\r\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)\r\n\r\n$ echo $BASH_VERSION\r\n5.0.16(1)-release\r\n```\r\n\r\nLikely related to #4029, which wasn't actually fixed apparently.", "url": "https://github.com/square/okhttp/issues/5832", "user": "fastily", "labels": ["bug"], "created": "2020-02-29 02:52:16", "closed": "2020-03-19 02:31:33", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "SSLSocketFactory is not used for redirects in 4.4.0", "body": "OkHttp 4.4.0\r\nAndroid Studio 4.0 Beta 1\r\nAndroid 9\r\n\r\nI have configured my OkHttp client in development versions to accept all certificates:\r\n```kotlin\r\nprivate fun buildOkHttpClient(): OkHttpClient {\r\n    val builder = OkHttpClient.Builder()\r\n\r\n    val unsafeTrustManager = createUnsafeTrustManager()\r\n    val sslContext = SSLContext.getInstance(\"SSL\")\r\n    sslContext.init(null, arrayOf(unsafeTrustManager), null)\r\n    builder.sslSocketFactory(sslContext.socketFactory, unsafeTrustManager)\r\n\r\n    builder.hostnameVerifier(HostnameVerifier { hostname, session -> true })\r\n\r\n    return builder.build()\r\n}\r\n\r\nprivate fun createUnsafeTrustManager(): X509TrustManager = object : X509TrustManager {\r\n    override fun checkClientTrusted(chain: Array<out X509Certificate>?, authType: String?) {}\r\n    override fun checkServerTrusted(chain: Array<out X509Certificate>?, authType: String?) {}\r\n    override fun getAcceptedIssuers(): Array<out X509Certificate>? = emptyArray()\r\n}\r\n```\r\n\r\nUnfortunately, it doesn't seem to apply to HTTP 301 redirects on v4.4.0:\r\n\r\n```kotlin\r\nprivate suspend fun makeRequest(url: String) = withContext(Dispatchers.IO) {\r\n    val okHttp = buildOkHttpClient()\r\n    val request = Request.Builder().url(url).build()\r\n    okHttp.newCall(request).execute()\r\n}\r\n\r\nmakeRequest(\"https://bit.ly/2PwiDfE\")\r\n```\r\n\r\nThe above will fail with a SSLPeerUnverifiedException on v4.4.0 (even though the client has been configured to accept all certificates), but it will work fine with v4.3.1:\r\n\r\n```\r\n2020-02-28 01:56:24.632 5249-5249/com.example.okhttpcrash E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.example.okhttpcrash, PID: 5249\r\n    javax.net.ssl.SSLPeerUnverifiedException: Failed to find a trusted cert that signed Certificate:\r\n        Data:\r\n            [...]\r\n        at okhttp3.internal.tls.BasicCertificateChainCleaner.clean(BasicCertificateChainCleaner.kt:91)\r\n        at okhttp3.internal.connection.RealConnection$connectTls$1.invoke(RealConnection.kt:393)\r\n        at okhttp3.internal.connection.RealConnection$connectTls$1.invoke(RealConnection.kt:73)\r\n        at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)\r\n        at okhttp3.Handshake.peerCertificates(Unknown Source:7)\r\n        at okhttp3.internal.connection.RealConnection.supportsUrl(RealConnection.kt:581)\r\n        at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:147)\r\n        at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:107)\r\n        at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:75)\r\n        at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:245)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)\r\n2020-02-28 01:56:24.634 5249-5249/com.example.okhttpcrash E/AndroidRuntime:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:74)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n        at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:197)\r\n        at okhttp3.internal.connection.RealCall.execute(RealCall.kt:148)\r\n        at com.example.okhttpcrash.MainActivity$makeRequest$2.invokeSuspend(MainActivity.kt:54)\r\n        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n        at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n        at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:561)\r\n        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:727)\r\n        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:667)\r\n        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:655)\r\n```\r\n\r\nHowever, doing the same thing with a link that doesn't redirect you works fine:\r\n```kotlin\r\nmakeRequest(\"https://github.com/square/okhttp\")\r\n```", "url": "https://github.com/square/okhttp/issues/5831", "user": "Stonos", "labels": ["bug"], "created": "2020-02-28 00:50:01", "closed": "2020-03-19 02:30:16", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "3.12.9 Regression: java.lang.VerifyError on Android 4.3 and earlier", "body": "The 3.12 backport for #5816 contains a catch block which references the `ReflectiveOperationException` type. `ReflectiveOperationException` was not introduced until KitKat, so this catch block causes class initialization to fail on earlier versions of Android. In my case, I reproduced the bug using an Android 4.1 image in the Android Studio emulator.\r\n\r\nReproducer:\r\n```\r\nnew OkHttpClient.Builder().build();\r\n```\r\n\r\nException:\r\n```\r\n02-25 21:08:51.091 2696-2696/com.example.okhttptest W/dalvikvm: VFY: unable to resolve exception class 74 (Ljava/lang/ReflectiveOperationException;)\r\n02-25 21:08:51.091 2696-2696/com.example.okhttptest W/dalvikvm: VFY: unable to find exception handler at addr 0x15\r\n02-25 21:08:51.101 2696-2696/com.example.okhttptest W/dalvikvm: VFY:  rejected Lokhttp3/internal/platform/Android10Platform;.buildIfSupported ()Lokhttp3/internal/platform/Platform;\r\n02-25 21:08:51.101 2696-2696/com.example.okhttptest W/dalvikvm: VFY:  rejecting opcode 0x0d at 0x0015\r\n02-25 21:08:51.101 2696-2696/com.example.okhttptest W/dalvikvm: VFY:  rejected Lokhttp3/internal/platform/Android10Platform;.buildIfSupported ()Lokhttp3/internal/platform/Platform;\r\n02-25 21:08:51.111 2696-2696/com.example.okhttptest W/dalvikvm: Verifier rejected class Lokhttp3/internal/platform/Android10Platform;\r\n02-25 21:08:51.111 2696-2696/com.example.okhttptest W/dalvikvm: Exception Ljava/lang/VerifyError; thrown while initializing Lokhttp3/internal/platform/Platform;\r\n02-25 21:08:51.111 2696-2696/com.example.okhttptest D/AndroidRuntime: Shutting down VM\r\n02-25 21:08:51.121 2696-2696/com.example.okhttptest W/dalvikvm: threadid=1: thread exiting with uncaught exception (group=0x9e52d2a0)\r\n02-25 21:08:51.131 2696-2696/com.example.okhttptest E/AndroidRuntime: FATAL EXCEPTION: main\r\n    java.lang.ExceptionInInitializerError\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:292)\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:258)\r\n        at okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:1040)\r\n        at com.example.okhttptest.MainActivity.onCreate(MainActivity.java:14)\r\n        at android.app.Activity.performCreate(Activity.java:5008)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1079)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2023)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2084)\r\n        at android.app.ActivityThread.access$600(ActivityThread.java:130)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1195)\r\n        at android.os.Handler.dispatchMessage(Handler.java:99)\r\n        at android.os.Looper.loop(Looper.java:137)\r\n        at android.app.ActivityThread.main(ActivityThread.java:4745)\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:511)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\r\n        at dalvik.system.NativeStart.main(Native Method)\r\n     Caused by: java.lang.VerifyError: okhttp3/internal/platform/Android10Platform\r\n        at okhttp3.internal.platform.Platform.findPlatform(Platform.java:201)\r\n        at okhttp3.internal.platform.Platform.<clinit>(Platform.java:78)\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:292)\u00a0\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:258)\u00a0\r\n        at okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:1040)\u00a0\r\n        at com.example.okhttptest.MainActivity.onCreate(MainActivity.java:14)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:5008)\u00a0\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1079)\u00a0\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2023)\u00a0\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2084)\u00a0\r\n        at android.app.ActivityThread.access$600(ActivityThread.java:130)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1195)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:99)\u00a0\r\n        at android.os.Looper.loop(Looper.java:137)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:4745)\u00a0\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\u00a0\r\n        at java.lang.reflect.Method.invoke(Method.java:511)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\u00a0\r\n        at dalvik.system.NativeStart.main(Native Method)\u00a0\r\n```", "url": "https://github.com/square/okhttp/issues/5826", "user": "cgutman", "labels": ["bug"], "created": "2020-02-26 05:17:47", "closed": "2020-02-29 16:37:02", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Infinite loop in connection retry", "body": "For some reason (I haven't been able to reproduce this locally yet), under heavy load some of our okhttp clients might get into an infinite loop (eating up one or more CPU cores) when connection failure retry is enabled. It seems this affects some connections only in the connection pool. \r\n\r\nIf I disable connection failure retry then a `SocketException` is thrown at https://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt#L594 with the following stack trace:\r\n\r\n```\r\njava.net.SocketException: Socket is closed at java.net.Socket.setSoTimeout(Unknown Source) \r\nat sun.security.ssl.BaseSSLSocketImpl.setSoTimeout(Unknown Source) \r\nat sun.security.ssl.SSLSocketImpl.setSoTimeout(Unknown Source) \r\nat okhttp3.internal.connection.RealConnection.newCodec$okhttp(RealConnection.kt:594) \r\nat okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:83) \r\nat okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:245) \r\nat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32) \r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) \r\nat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82) \r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) \r\nat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83) \r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) \r\nat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:74) \r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100) \r\nat okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:197)\r\nat okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:502)\r\n```\r\nIn this case a certain percentage of the requests fail constantly suggesting a stuck pooled faulty connection which is never evicted.\r\n\r\nThe only option is to restart the affected application.\r\n\r\nI think the cause is related to request cancellation and concurrency. Might be the socket is closed right after creation by a different thread?\r\n\r\nThis issue has been observed since at least 3.14.0. Also happening with latest: 4.4.0", "url": "https://github.com/square/okhttp/issues/5819", "user": "danielimre", "labels": ["bug", "needs info"], "created": "2020-02-21 09:44:53", "closed": "2020-04-07 04:00:42", "commits": {"0c72ba0a8a619663ce7ceaa65a5fa0469b99d490": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "1a98d7869ca8b68c1e31f0b3f7857e991f18a04b": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "11ee29cd78427f6abc0f0b69922cbbb905910b1e": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "49a9cb8d2f8e3cec77eb1f5707288ff2477635dc": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 45.000277777777775, "commitsDetails": [{"commitHash": "0c72ba0a8a619663ce7ceaa65a5fa0469b99d490", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1a98d7869ca8b68c1e31f0b3f7857e991f18a04b", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "11ee29cd78427f6abc0f0b69922cbbb905910b1e", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": ["46fcf4f42c6471c4d13e5f2ba0eae6fdebe5d1bd"], "nameRev": "11ee29cd78427f6abc0f0b69922cbbb905910b1e tags/parent-4.5.0~1^2", "commitMessage": "Flag connection as unhealthy when underlying socket is closed.\n\nhttps://github.com/square/okhttp/issues/5819\n", "commitDateTime": "2020-04-04 08:22:25", "authoredDateTime": "2020-04-03 20:32:06", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/CallTest.java", "insertions": 32, "deletions": 0, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall().24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long).25", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite).26", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.lateCancelCallsOnFailure().23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelAfterResponseBodyEnd()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "49a9cb8d2f8e3cec77eb1f5707288ff2477635dc", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["11ee29cd78427f6abc0f0b69922cbbb905910b1e"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3.0, "deletions": 1.0, "lines": 4.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt"], "changesInPackagesSPOON": []}, {"title": "ExceptionInitializerError with new Android 11 version (DP1)", "body": "OKHTTP 3.14.4\r\nRetrofit 2.7.1\r\nDevice: Pixel 3 XL\r\nAndroid Build: [crosshatch-rpp1.200123.016-factory-5808a1e6.zip](https://developer.android.com/preview/download)\r\n\r\n**Note:** Issue is not reproducible on Android 10 or earlier versions.\r\n\r\nFound this issue when running my sample app using latest version of Retrofit (2.7.1) and targeting newly released Android 11 (targetSdkVersion = 30).\r\n\r\nWhen attempting to run the app in Android 11, the app immediately crashes with the following exception:\r\n\r\n> 2020-02-20 14:26:08.386 22962-22962/com.my.example.retrofit2 E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.my.example.retrofit2, PID: 22962\r\n    java.lang.ExceptionInInitializerError\r\n        at okhttp3.internal.platform.Platform.get(Platform.java:85)\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:263)\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:229)\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:202)\r\n        at retrofit2.Retrofit$Builder.build(Retrofit.java:614)\r\n        at com.my.example.retrofit2.network.RetrofitInstance.getRetrofitInstance(RetrofitInstance.java:37)\r\n        at com.my.example.retrofit2.main.IntractorImpl.getMarsPhotosArrayList(IntractorImpl.java:21)\r\n        at com.my.example.retrofit2.main.MainPresenterImpl.requestDataFromServer(MainPresenterImpl.java:29)\r\n        at com.my.example.retrofit2.main.MainActivity.onCreate(MainActivity.java:37)\r\n        at android.app.Activity.performCreate(Activity.java:7970)\r\n        at android.app.Activity.performCreate(Activity.java:7959)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1309)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3311)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3480)\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:83)\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:135)\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:95)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2041)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:216)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7472)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:578)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:956)\r\n     Caused by: java.lang.IllegalStateException: Expected Android API level 21+ but was 29\r\n        at okhttp3.internal.platform.AndroidPlatform.buildIfSupported(AndroidPlatform.java:238)\r\n        at okhttp3.internal.platform.Platform.findPlatform(Platform.java:202)\r\n        at okhttp3.internal.platform.Platform.<clinit>(Platform.java:79)\r\n        at okhttp3.internal.platform.Platform.get(Platform.java:85)\u00a0\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:263)\u00a0\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:229)\u00a0\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:202)\u00a0\r\n        at retrofit2.Retrofit$Builder.build(Retrofit.java:614)\u00a0\r\n        at com.my.example.retrofit2.network.RetrofitInstance.getRetrofitInstance(RetrofitInstance.java:37)\u00a0\r\n        at com.my.example.retrofit2.main.IntractorImpl.getMarsPhotosArrayList(IntractorImpl.java:21)\u00a0\r\n        at com.my.example.retrofit2.main.MainPresenterImpl.requestDataFromServer(MainPresenterImpl.java:29)\u00a0\r\n        at com.my.example.retrofit2.main.MainActivity.onCreate(MainActivity.java:37)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7970)\u00a0\r\n        at android.app.Activity.performCreate(Activity.java:7959)\u00a0\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1309)\u00a0\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3311)\u00a0\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3480)\u00a0\r\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:83)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:135)\u00a0\r\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:95)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2041)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\u00a0\r\n        at android.os.Looper.loop(Looper.java:216)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:7472)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:578)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:956)\u00a0\r\n\r\nMy retrofit code is very simple and not attempting to do any custom initialization or setting a different OKHTTP client (see code for reference below):\r\n```\r\n`    public static Retrofit getRetrofitInstance(){\r\n\r\n        if(retrofit == null){\r\n            retrofit = new retrofit2.Retrofit.Builder()\r\n                    .baseUrl(BASE_URL)\r\n                    .addConverterFactory(GsonConverterFactory.create())\r\n                    .build();\r\n        }\r\n\r\n        return retrofit;\r\n    }`\r\n```\r\n\r\nAfter doing some digging into the OKHTTP code, noticed the following warning coming from adb logcat:\r\n\r\n> 2020-02-20 14:26:08.382 22962-22962/com.my.example.retrofit2 D/NetworkSecurityConfig: No Network Security Config specified, using platform default\r\n2020-02-20 14:26:08.384 22962-22962/com.my.example.retrofit2 W/DebugTag: **Accessing hidden method Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setUseSessionTickets(Z)V (greylist-max-q,core-platform-api, reflection, denied)** \r\n\r\nPer official documentation found [here](https://developer.android.com/preview/non-sdk-11), Android 11 no longer allows Reflection API calls to setUseSessionTickets, which appears to be used in a few places when initializing AndroidSocketAdapter:\r\n\r\nhttps://github.com/square/okhttp/blob/ff0dee1c34fc06084357c93dc480f6ad89fef24a/okhttp/src/main/java/okhttp3/internal/platform/android/AndroidSocketAdapter.kt#L34\r\n\r\nLooking at the other reflection calls done in the AndroidSocketAdapter, the following methods have also been blacklisted in Android 11 and will cause exceptions to be thrown:\r\n\r\n```\r\n1.   private val getAlpnSelectedProtocol = sslSocketClass.getMethod(\"getAlpnSelectedProtocol\")\r\n2.   private val setHostname = sslSocketClass.getMethod(\"setHostname\", String::class.java)\r\n```\r\n\r\nLooks like OKHTTP will need to avoid these reflection calls and instead use available public APIs in Android 11 where applicable. Until then, applications may experience Fatal Runtime Exceptions when initializing OKHTTP. I noticed there is an Android10SocketAdapter, perhaps whats needed here would be an Android11SocketAdapter with specific implementation around these changes?\r\n\r\nLet me know if more information is needed.\r\n\r\nBest,\r\nAlex\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5816", "user": "arocha55", "labels": ["bug"], "created": "2020-02-20 23:28:14", "closed": "2020-02-25 03:23:14", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Inconsistent timeout behaviour in secureConnect ", "body": "I'm experiencing inconsistent timeout behaviour in OkHttp 4.4.0. This is my setup:\r\n1. I'm attaching `PrintingEventListener` to OkHttp just like you guys did in the [sample](https://github.com/square/okhttp/blob/master/samples/guide/src/main/java/okhttp3/recipes/PrintEvents.java)\r\n2. Set timeout:\r\n      >connectTimeout = 12000 ms\r\n     readTimeout = 30000 ms\r\n     writeTimeout = 5000 ms\r\n3. Make an API call to `https://httpstat.us/200?sleep=30000`\r\n\r\nPS: I'm using Network Link Conditioner to simulate slow network connection here\r\n\r\nBased on several retries, I found inconsistency how timeout works when OkHttp enters `secureConnectStart` (based on the `PrintingEventListener` that I have attached).\r\n\r\n**Case 1 (correct behaviour):**\r\n```\r\nGET https://httpstat.us/200?sleep=30000\r\n0.000 callStart\r\n0.004 proxySelectStart\r\n0.006 proxySelectEnd\r\n0.006 dnsStart\r\n0.009 dnsEnd\r\n0.009 connectStart\r\n11.539 secureConnectStart\r\n41.573 connectFailed\r\n41.574 callFailed\r\n```\r\nNotice that from `secureConnectStart` to `connectFailed` took around 30 secs which is expected because I set read timeout to 30000 ms\r\n\r\n--------------------------------\r\n\r\n**Case 2 (incorrect behaviour):**\r\n```\r\nGET https://httpstat.us/200?sleep=30000\r\n0.000 callStart\r\n0.005 proxySelectStart\r\n0.005 proxySelectEnd\r\n0.005 dnsStart\r\n0.009 dnsEnd\r\n0.009 connectStart\r\n9.078 secureConnectStart\r\n57.669 secureConnectEnd\r\n57.670 connectEnd\r\n57.671 connectionAcquired\r\n57.672 requestHeadersStart\r\n57.672 requestHeadersEnd\r\n87.678 responseFailed\r\n87.680 connectionReleased\r\n87.681 callFailed\r\n```\r\nNotice that from `secureConnectStart` to `secureConnectEnd` it took around 47 secs which I wasn't expecting because OkHttp should just cut the connection when it reached 30 secs.\r\n\r\nI was thinking to create unit tests for this, but couldn't think of anything to simulate bad network condition in unit test. So, pardon me for not having it. But let me know if you need more data to debug around this.", "url": "https://github.com/square/okhttp/issues/5812", "user": "setiawanp", "labels": ["bug"], "created": "2020-02-20 04:52:38", "closed": "2020-02-20 05:12:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to create newPin: Invalid pattern https://certs-qa.somedomain.ru/v1/", "body": "```\r\nval certificatePinner = CertificatePinner.Builder()\r\n                .add(url, pin(certificate))\r\n                .build()\r\n```\r\n\r\nif url containt https and slashes after host it consider invalid, but why?\r\n\r\nI upgrade after 3.12 to 4.4.0 and saw this bug.\r\nBut if downgrade to 4.2.0  - it's all ok", "url": "https://github.com/square/okhttp/issues/5804", "user": "Jacks0N23", "labels": ["bug"], "created": "2020-02-19 11:49:10", "closed": "2020-02-20 05:12:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NoSuchElementException in RouteSelector.next", "body": "Looks like my changes to ExchangeFinder weren\u2019t as safe as I\u2019d originally thought.\r\n\r\n```\r\nokhttp3.internal.http2.HttpOverHttp2Test > shutdownAfterLateCoalescing[h2] FAILED\r\njava.util.NoSuchElementException\r\n            at okhttp3.internal.connection.RouteSelector.next(RouteSelector.kt:63)\r\n            at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:206)\r\n            at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:107)\r\n            at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:75)\r\n            at okhttp3.internal.connection.RealCall.initExchange$okhttp(RealCall.kt:243)\r\n            at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:32)\r\n            at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n            at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n            at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n            at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:83)\r\n            at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n            at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:74)\r\n            at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:100)\r\n            at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp(RealCall.kt:195)\r\n            at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:500)\r\n            at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n            at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n            ... 1 more\r\n```", "url": "https://github.com/square/okhttp/issues/5791", "user": "swankjesse", "labels": ["bug"], "created": "2020-02-17 02:05:38", "closed": "2020-02-17 13:03:20", "commits": {"c48e4537781d452b65cb8d452dea72158249f04b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c48e4537781d452b65cb8d452dea72158249f04b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["4bb66bcf5e1b11bd13f088cc78188c2bdc075c6f"], "nameRev": "c48e4537781d452b65cb8d452dea72158249f04b tags/parent-4.4.0~3^2", "commitMessage": "Move the code that clears out the next route to try\n\nI prefer the old code esthetically, but this has the behavior I want. The\ncore problem is we're deciding about nextRouteToTry too early, before a\nfailure makes that route ineligible.\n\nCloses: https://github.com/square/okhttp/issues/5791\n", "commitDateTime": "2020-02-16 21:17:04", "authoredDateTime": "2020-02-16 21:17:04", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c48e4537781d452b65cb8d452dea72158249f04b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt"]}, {"title": "Logging interceptor causes app to crash in some cases", "body": "Here goes the stacktrace:\r\n`2020-02-13 19:27:43.048 24586-24688/com.flchat E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n    Process: com.flchat, PID: 24586\r\n    java.lang.IllegalStateException: closed\r\n        at okio.RealBufferedSource.request(RealBufferedSource.java:66)\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:253)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:250)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:201)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)`\r\n\r\nI cannot write a test for you, because I don't actually know why does it occurs.\r\nThanks in advance for fixing it.", "url": "https://github.com/square/okhttp/issues/5783", "user": "H4kt", "labels": ["bug", "needs info"], "created": "2020-02-13 16:30:56", "closed": "2020-03-06 20:55:17", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Docs for building okhttp are missing", "body": "A Google search for instructions to build okhttp points to this page:  https://github.com/square/okhttp/wiki/Building\r\n\r\nThat page has a HTTP/1.1 301 Moved Permanently and directs to https://square.github.io/okhttp/contributing/\r\n\r\nBut that page just talks about how to contribute and doesn't have any build instructions.  Do these exist somewhere else or were they lost in this move?  If they do exist I recommend updating that link so they can be easily found.\r\n", "url": "https://github.com/square/okhttp/issues/5782", "user": "MSohm", "labels": ["bug", "documentation"], "created": "2020-02-13 15:15:23", "closed": "2020-03-19 02:22:09", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Support for port number in hostname in Certificate Pinner", "body": "```\r\nprivate static final String Sha256=\"sha256/hxvqB+muy3jP5UZQ4CrRIr7oK0DourlxQCzr7UpTTVY=\" ;\r\n\r\nfinal static CertificatePinner certificate = new \r\nCertificatePinner.Builder().add(\"172.18.10.10:8090\",Sha256).build();\r\n```\r\nWhen i run the above code , the exception says\r\n\r\n`java.lang.IllegalArgumentException: Invalid pattern: 172.18.10.10:8090`\r\n\r\nBut i never get the same error , when i put the hostname without any port number i.e just 172.18.10.10\r\n\r\nI am actually trying add the TLS certificate of LAN http server , the certificate file isn't directly available, that's why I am trying to add it through CertificatePinner.\r\n\r\nIs there any work around available to add port number along with hostname in CertificatePinner ", "url": "https://github.com/square/okhttp/issues/5781", "user": "Chidhambararajan", "labels": ["bug"], "created": "2020-02-13 08:26:48", "closed": "2020-02-13 11:35:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "UnsupportedOperationException on JDK 11", "body": "We are using a library that depends on okhttp3 3.2.0. Our service works fine on JDK 11.\r\n\r\nUnfortunately, another dependency we have upgraded (splunk-java-logging) depends on a newer okhttp3 library (3.14.6). Now, our service fails:\r\n```\r\nCaused by: java.lang.UnsupportedOperationException: clientBuilder.sslSocketFactory(SSLSocketFactory) not supported on JDK 9+                      \r\n        at okhttp3.internal.platform.Jdk9Platform.trustManager(Jdk9Platform.java:81)                                                               \r\n        at okhttp3.internal.platform.Platform.buildCertificateChainCleaner(Platform.java:176)                                                      \r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:655)                                                                    \r\n        at io.featureflow.client.core.EventSource.<init>(EventSource.java:65)                                                                      \r\n        at io.featureflow.client.core.FeatureControlStreamClient.start(FeatureControlStreamClient.java:62)                                         \r\n        at io.featureflow.client.FeatureflowClient.<init>(FeatureflowClient.java:78)                                                               \r\n        at io.featureflow.client.FeatureflowClient$Builder.build(FeatureflowClient.java:221)                                                       \r\n```\r\nWhy? Apparently it would work totally fine, only the newer okhttp3 deliberately refuses to work... Wouldn't it make more sense to just try accessing it first, and then act accordingly instead of plainly throwing an exception?\r\n\r\nRef: https://github.com/featureflow/featureflow-java-sdk/issues/4", "url": "https://github.com/square/okhttp/issues/5780", "user": "avdv", "labels": ["bug"], "created": "2020-02-11 12:37:58", "closed": "2020-02-11 12:48:17", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\ud83d\ude49File upload with Null content", "body": "Hello,\r\n\r\ni have tried many option with okhttp but not get conclusion.\r\n\r\ni want to send value as null for any parameter parameter.\r\n\r\n\r\n\r\nGood bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n", "url": "https://github.com/square/okhttp/issues/5774", "user": "mayurteraiya", "labels": ["bug"], "created": "2020-02-08 08:57:59", "closed": "2020-02-08 11:03:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Concurrent requests problem (recvfrom failed: ECONNRESET (Connection reset by peer)", "body": "I know this problem is asked several times. but I think there is a problem in the OkHttp not users or servers.\r\nI'd like to send several (here 5) concurrent http request (restful) from an android application to my server (spring boot) and my config is as the below :\r\n\r\n1. My Class to create a singleton ``Retrofit instance`` with ``OkHttp network layer``:\r\n```\r\n\r\npublic class RetrofitClient {\r\n\r\n    private static RetrofitClient instance;\r\n    private Retrofit retrofit;\r\n    private OkHttpClient okHttpClient;\r\n\r\n    private RetrofitClient(Context context){\r\n        retrofit = getClient(context);\r\n    }\r\n\r\n    public static RetrofitClient getInstance(Context context){\r\n        if(instance == null){\r\n            instance = new RetrofitClient(context);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public Retrofit getRetrofit(){\r\n        return retrofit;\r\n    }\r\n\r\n    private Retrofit getClient(Context context)  {\r\n        String url = \"http://my_server_url\";\r\n        return getRetrofitHttp(url, context);\r\n    }\r\n\r\n    private Retrofit getRetrofitHttp(String url, Context context){\r\n        OkHttpClient.Builder builder = new OkHttpClient.Builder()\r\n                .connectTimeout(100, TimeUnit.SECONDS)\r\n                .readTimeout(30,    TimeUnit.SECONDS)\r\n                .writeTimeout(30,   TimeUnit.SECONDS)\r\n                .retryOnConnectionFailure(true);\r\n\r\n\r\n        okHttpClient = builder.build();\r\n        Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd HH:mm:ss Z\").create();\r\n\r\n        return new Retrofit.Builder()\r\n                .baseUrl(url)\r\n                .client(okHttpClient)\r\n                .addConverterFactory(ScalarsConverterFactory.create())\r\n                .addConverterFactory(GsonConverterFactory.create(gson))\r\n                .build();\r\n    }\r\n}\r\n\r\n```\r\n2. My API interface: \r\n```\r\npublic interface ServerAPIs {\r\n\r\n    @GET(\"/api1\")\r\n    Call<MyResponse1> api1(...);\r\n\r\n    @GET(\"/api2\")\r\n    Call<MyResponse2> api2(...);\r\n\r\n    @GET(\"/api3\")\r\n    Call<MyResponse3> api3(...);\r\n\r\n    @GET(\"/api4\")\r\n    Call<MyResponse4> api4(...);\r\n\r\n    @GET(\"/api5\")\r\n    Call<MyResponse5> api5(...);\r\n```\r\n\r\n3. I will create an instance from the my API class In the ``Application`` class:\r\n```\r\npublic class MyApplication extends Application {\r\n    private ServerAPIs serverApis;\r\n\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        Retrofit retrofit = RetrofitClient.getInstance(this).getRetrofit();\r\n        serverApis = retrofit.create(ServerAPIs.class);\r\n    }\r\n \r\n    public ServerAPIs getServerApis() {\r\n        return serverApis;\r\n    }\r\n}\r\n```\r\n\r\n4. Finally, I will call my endpoints : \r\n```\r\npublic class ServerService {\r\n      public static void getAPI1(...){\r\n             ServerAPIs serverApis = ((MyApp)activity.getApplicationContext()).getServerApis();\r\n             serverApis.api1(...).enqueue(...);\r\n      }\r\n\r\n     public static void getAPI2(...){\r\n             ServerAPIs serverApis = ((MyApp)activity.getApplicationContext()).getServerApis();\r\n             serverApis.api2(...).enqueue(...);\r\n      }\r\n      //...same as for three other apis\r\n}\r\n```\r\n5. I'm using ``tcpdump`` to monitor all HTTP GET requests coming to the my server.\r\n```\r\nsudo tcpdump -s 0 -A 'tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x47455420'\r\n```\r\n\r\n**Result:**\r\nSometimes all 5 http requests comes to the server correctly, \r\nbut sometimes one or two of the above requests are not shown in the server's tcpdump and I will receive the below error in the **android studio logcat:**\r\n```\r\n<-- HTTP FAILED: java.net.SocketException: recvfrom failed: ECONNRESET (Connection reset by peer)\r\n``` \r\nNote:\r\nI Know that the HTTP GET entities won't be sent until the TCP three-way handshake has completed. \r\n\r\nSo I think the problem is here in the **okHttp** library (Not Retrofit. because the network layer of the retrofit is okHttp), but I dont know how do I have to resolve it.\r\n\r\nWhat is the problem?\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5773", "user": "BigGitWorld", "labels": ["bug"], "created": "2020-02-07 17:01:37", "closed": "2020-02-13 02:38:53", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Connection : close does not apply to the header", "body": "I'd like to add a ``Connection : close`` to the my HTTP request headers as below : \r\n```\r\nOkHttpClient.Builder builder  = new OkHttpClient.Builder()\r\n                                                     .(...)\r\n                                                    .addInterceptor(new HttpCloseInterceptor());\r\n```\r\nwhere:\r\n```\r\npublic static class HttpCloseInterceptor implements Interceptor {\r\n        @Override\r\n        public Response intercept(@NonNull Chain chain) throws IOException {\r\n            Request request = chain.request();\r\n            Request newRequest = request.newBuilder()\r\n                    .addHeader(\"Connection\", \"close\")\r\n                    .addHeader(\"custom-header\", \"custom-value\")\r\n                    .build();\r\n            return chain.proceed(newRequest);\r\n        }\r\n    }\r\n```\r\nBut when do debugging in the client side (android studio) or make a ``tcpdump`` in server side, it shows me ``Connection : keep-alive`` yet. While ``custom-header`` exists in the my headers.\r\nWhy?\r\n", "url": "https://github.com/square/okhttp/issues/5772", "user": "BigGitWorld", "labels": ["bug", "needs info"], "created": "2020-02-07 14:43:56", "closed": "2020-03-06 20:56:22", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "DefaultProxySelector: IllegalArgumentException: protocol = https host = null", "body": "Okhttp version: 4.3.1\r\n\r\nWhen using okhttp request an URL `https://>`, it crashes:\r\n\r\n```\r\nFatal Exception: java.lang.IllegalArgumentException: protocol = https host = null\r\n       at sun.net.spi.DefaultProxySelector.select + 183(DefaultProxySelector.java:183)\r\n       at okhttp3.internal.connection.RouteSelector.resetNextProxy + 103(RouteSelector.java:103)\r\n       at okhttp3.internal.connection.RouteSelector.<init> + 53(RouteSelector.java:53)\r\n       at okhttp3.internal.connection.ExchangeFinder.<init> + 61(ExchangeFinder.java:61)\r\n       at okhttp3.internal.connection.Transmitter.prepareToConnect + 134(Transmitter.java:134)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept + 62(RetryAndFollowUpInterceptor.java:62)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed + 112(RealInterceptorChain.java:112)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed + 87(RealInterceptorChain.java:87)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain + 194(RealCall.java:194)\r\n       at okhttp3.RealCall$AsyncCall.run + 138(RealCall.java:138)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker + 1167(ThreadPoolExecutor.java:1167)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run + 641(ThreadPoolExecutor.java:641)\r\n       at java.lang.Thread.run + 764(Thread.java:764)\r\n```", "url": "https://github.com/square/okhttp/issues/5770", "user": "drakeet", "labels": ["bug"], "created": "2020-02-04 05:43:28", "closed": "2020-02-16 21:49:30", "commits": {"9c390efc03f8ab254b60264f21fea3e79c3154fd": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0d08561943ea87adf85bc6b44e321189b9672a8e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ac64b9d30e8113588ac721ff4e1fe2b9304e9751": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "f00566f51da492fb07f1c0ff994472831820ebf2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "9c390efc03f8ab254b60264f21fea3e79c3154fd", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0d08561943ea87adf85bc6b44e321189b9672a8e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ac64b9d30e8113588ac721ff4e1fe2b9304e9751", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f00566f51da492fb07f1c0ff994472831820ebf2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["607c47a7e6dff187b04491456725a0d2d8594ff6"], "nameRev": "f00566f51da492fb07f1c0ff994472831820ebf2 tags/parent-4.4.0~6^2", "commitMessage": "Don't crash on a null host\n\nCloses: https://github.com/square/okhttp/issues/5770\n", "commitDateTime": "2020-02-16 16:14:39", "authoredDateTime": "2020-02-16 10:29:12", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RouteSelector.kt", "insertions": 14, "deletions": 10, "lines": 24}, {"filePath": "okhttp/src/test/java/okhttp3/HttpUrlTest.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "okhttp/src/test/java/okhttp3/internal/connection/RouteSelectorTest.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrlTest.hostContainsOnlyStrippedCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteSelectorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RouteSelectorTest.proxySelectorNotCalledForNullHost()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f00566f51da492fb07f1c0ff994472831820ebf2"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14.0, "deletions": 10.0, "lines": 24.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection/RouteSelector.kt"], "changesInPackagesSPOON": []}, {"title": "Cache returns stale response body data on when ETag is the same (Windows only)", "body": "## Environment\r\nOkHttp 4.2.2 \r\nOnly happens on Windows.  On linux and MacOS, the correct (expected) behavior occurs.\r\n\r\n## Description \r\nOn Windows, the OkHttp Cache does not update response body data for a request when a later response has the same ETag as a previous response.  \r\n\r\n**Steps**\r\n1. Request a URL /a/b\r\n    * Response Header: 404, no ETag\r\n    * Response Body: '{ \"message\": \"Not Found\" }'\r\n    * Cache Updated\r\n2. Request a URL /a/b with \"If-Modified-Since\" header \r\n    * Response Header: 304, ETag \"C\"\r\n    * Cache automatically converts - client sees:\r\n        * Response Header: 404, ETag \"C\"\r\n        * Response Body: '{ \"message\": \"Not Found\" }'\r\n3. Request a URL /a/b with \"Cache-Control: no-cache\" to force retrieval of new data\r\n    * Response Header: 200, ETag \"C\"\r\n    * Response Body:  '{ data: \"...\" }'\r\n    * NOTE: Yes, that is the same ETag with different data - not good, but cache should still work\r\n    * Cache Updated? (I think this is where the problem starts).\r\n4. Request a URL /a/b with \"If-None-Match\" equal to ETag \"C\"\r\n\r\n**Expected Result**\r\n* Response Header: 304, ETag \"C\"\r\n* Cache automatically converts - client sees:\r\n    * Response Header: 200, ETag \"C\"\r\n    * Response Body:  '{ data: \"...\" }'\r\n\r\n**Actual Result**\r\n* Response Header: 304, ETag \"C\"\r\n* Cache automatically converts - client sees:\r\n    * Response Header: 200, ETag \"C\"\r\n    * Response Body: '{ \"message\": \"Not Found\" }'\r\n\r\n## Automated Test\r\nI know it is not great to point to a test on an external project but the test fully automated and will repro the issue every time: \r\nhttps://github.com/github-api/github-api/blob/967512629821b706e8d06ef9b3e57061f397d073/src/test/java/org/kohsuke/github/extras/okhttp3/GitHubCachingTest.java#L59\r\n\r\nTo run automated repro:\r\n1. clone the repository on Windows with JDK 8+\r\n2. remove the `assumeFalse()` call\r\n3. run `mvn install`\r\n\r\n\r\n## Notes\r\nThis issue was found and can be reproduced using https://github.com/github-api/github-api .\r\nIt is exposed due to a bug in GitHub server responses (see https://github.com/github-api/github-api/issues/669) but it is still a bug in this OkHttp Cache behavior on Windows.\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5761", "user": "bitwiseman", "labels": ["bug"], "created": "2020-01-30 20:24:23", "closed": "2020-04-12 22:45:07", "commits": {"3be655c629eeaef2825fe4396056e4eca3e68dc2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0738e756f11b8e28e5b4c59b996f2ea65c24e9ca": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "aef5b128353ffc2b5e0942ea002456f0ff28bd69": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "64d3b079f292bdddb28a264ec1addbb84791df85": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0893414e9eb1c6e43f5772bd02f0bc52012f0cc3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 73.00027777777778, "commitsDetails": [{"commitHash": "3be655c629eeaef2825fe4396056e4eca3e68dc2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0738e756f11b8e28e5b4c59b996f2ea65c24e9ca", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "aef5b128353ffc2b5e0942ea002456f0ff28bd69", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "64d3b079f292bdddb28a264ec1addbb84791df85", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["67453eeb40715d03d707b0ede212be9ad30b2633"], "nameRev": "64d3b079f292bdddb28a264ec1addbb84791df85 tags/parent-4.6.0~26^2", "commitMessage": "Fix DiskLruCache to work on Windows\n\nAs originally designed DiskLruCache assumes an inode-like\nfile system, where it's fine to delete files that are\ncurrently being read or written.\n\nOn Windows the file system forbids this, so we must be\nmore careful when deleting and renaming files. These\noperations come up a lot internally in the cache:\n - deleting to evict an entry\n - renaming to commit a dirty file to a clean file\n\nThe workaround is simple if unsatisfying: we don't\npermit concurrent reads and writes on Windows. We\ncan have multiple concurrent reders, or a single\nwriter.\n\nOne challenge in this implementation is detecting\nwhether we're running on Windows or a good operating\nsystem. We deliberately don't look at System properties\nhere because the OS and file system may disagree, such\nas when a Windows machine has an ext4 partition, or when\na Linux machine has an NTFS partition. Instead of detecting\nwe just attempt an edit and see what happens.\n\nAnother challenge in this implementation is what to\ndo when a file needs to be deleted but cannot be because\nit is currently open. In such cases we now mark the\ncache entry as a 'zombie'. When the files are later\nclosed they now check for zombie status and delete the\nfiles if necessary. Note that it is not possible to\nstore a new cache entry while it is a zombie.\n\nCloses: https://github.com/square/okhttp/issues/5761\n", "commitDateTime": "2020-04-11 20:16:40", "authoredDateTime": "2020-04-11 17:52:41", "commitGitStats": [{"filePath": "okhttp-testing-support/src/main/kotlin/okhttp3/TestUtil.kt", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "okhttp-testing-support/src/main/kotlin/okhttp3/internal/io/InMemoryFileSystem.kt", "insertions": 25, "deletions": 54, "lines": 79}, {"filePath": "okhttp-testing-support/src/main/kotlin/okhttp3/internal/io/WindowsFileSystem.kt", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "okhttp/src/main/kotlin/okhttp3/internal/Util.kt", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "okhttp/src/main/kotlin/okhttp3/internal/cache/DiskLruCache.kt", "insertions": 100, "deletions": 27, "lines": 127}, {"filePath": "okhttp/src/test/java/okhttp3/internal/cache/DiskLruCacheTest.kt", "insertions": 269, "deletions": 32, "lines": 301}, {"filePath": "okhttp/src/test/java/okhttp3/internal/io/FaultyFileSystem.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FaultyFileSystem.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.io.FaultyFileSystem.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0893414e9eb1c6e43f5772bd02f0bc52012f0cc3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["64d3b079f292bdddb28a264ec1addbb84791df85"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 151.0, "deletions": 87.0, "lines": 238.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-testing-support/src/main/kotlin/okhttp3/internal/io/WindowsFileSystem.kt", "okhttp-testing-support/src/main/kotlin/okhttp3/internal/io/InMemoryFileSystem.kt", "okhttp/src/main/kotlin/okhttp3/internal/cache/DiskLruCache.kt", "okhttp/src/main/kotlin/okhttp3/internal/Util.kt"], "changesInPackagesSPOON": ["okhttp3.internal.io.FaultyFileSystem.toString()"]}, {"title": "OkHttp 4.3.1 spams log, didn't find class \"org.conscrypt.ConscryptHostnameVerifier\" on path", "body": "A trivial use of OkHttp 4.3.1 causes some spam in the device log.\r\n\r\nhttps://gist.github.com/jamesonwilliams/8ab7237083467ed3cb8680115a3e3829\r\n\r\nThis code:\r\n```\r\ndisposable = Single.fromCallable(() ->\r\n    new OkHttpClient().newCall(new Request.Builder()\r\n        .url(\"https://raw.githubusercontent.com/square/okhttp/master/README.md\")\r\n        .get()\r\n        .build())\r\n    .execute()\r\n    .body()\r\n    .string()\r\n)\r\n.subscribeOn(Schedulers.io())\r\n.observeOn(AndroidSchedulers.mainThread())\r\n.subscribe(\r\n    textView::setText,\r\n    failure -> textView.setText(Log.getStackTraceString(failure))\r\n);\r\n```\r\nWith this OkHttp:\r\n```\r\nimplementation 'com.squareup.okhttp3:okhttp:4.3.1'\r\n```\r\n\r\nCauses this spam, as the out-of-the-box default:\r\n```\r\nI: Rejecting re-init on previously-failed class java.lang.Class<okhttp3.internal.platform.ConscryptPlatform$configureTrustManager$1>: java.lang.NoClassDefFoundError: Failed resolution of: Lorg/conscrypt/ConscryptHostnameVerifier;\r\nI:     at okhttp3.internal.platform.android.SocketAdapter okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion.buildIfSupported() (ConscryptSocketAdapter.kt:62)\r\nI:     at void okhttp3.internal.platform.AndroidPlatform.<init>() (AndroidPlatform.kt:44)\r\nI:     at okhttp3.internal.platform.Platform okhttp3.internal.platform.AndroidPlatform$Companion.buildIfSupported() (AndroidPlatform.kt:212)\r\nI:     at okhttp3.internal.platform.Platform okhttp3.internal.platform.Platform$Companion.findPlatform() (Platform.kt:207)\r\nI:     at okhttp3.internal.platform.Platform okhttp3.internal.platform.Platform$Companion.access$findPlatform(okhttp3.internal.platform.Platform$Companion) (Platform.kt:169)\r\nI:     at void okhttp3.internal.platform.Platform.<clinit>() (Platform.kt:170)\r\nI:     at void okhttp3.OkHttpClient.<init>(okhttp3.OkHttpClient$Builder) (OkHttpClient.kt:220)\r\nI:     at void okhttp3.OkHttpClient.<init>() (OkHttpClient.kt:212)\r\nI:     at java.lang.String okhttp.conscrypt.issue.MainActivity.lambda$onCreate$0() (MainActivity.java:28)\r\nI:     at java.lang.Object okhttp.conscrypt.issue.-$$Lambda$MainActivity$HFmP7xhC1oUdC6d5U0mKIdLTGns.call() (lambda:-1)\r\nI:     at void io.reactivex.internal.operators.single.SingleFromCallable.subscribeActual(io.reactivex.SingleObserver) (SingleFromCallable.java:44)\r\nI:     at void io.reactivex.Single.subscribe(io.reactivex.SingleObserver) (Single.java:3666)\r\nI:     at void io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run() (SingleSubscribeOn.java:89)\r\nI:     at void io.reactivex.Scheduler$DisposeTask.run() (Scheduler.java:578)\r\nI:     at void io.reactivex.internal.schedulers.ScheduledRunnable.run() (ScheduledRunnable.java:66)\r\nI:     at java.lang.Object io.reactivex.internal.schedulers.ScheduledRunnable.call() (ScheduledRunnable.java:57)\r\nI:     at void java.util.concurrent.FutureTask.run() (FutureTask.java:237)\r\nI:     at void java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run() (ScheduledThreadPoolExecutor.java:272)\r\nI:     at void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (ThreadPoolExecutor.java:1133)\r\nI:     at void java.util.concurrent.ThreadPoolExecutor$Worker.run() (ThreadPoolExecutor.java:607)\r\nI:     at void java.lang.Thread.run() (Thread.java:761)\r\nI: Caused by: java.lang.ClassNotFoundException: Didn't find class \"org.conscrypt.ConscryptHostnameVerifier\" on path: DexPathList[[zip file \"/data/app/okhttp.conscrypt.issue-2/base.apk\"],nativeLibraryDirectories=[/data/app/okhttp.conscrypt.issue-2/lib/x86, /system/lib, /vendor/lib]]\r\nI:     at java.lang.Class dalvik.system.BaseDexClassLoader.findClass(java.lang.String) (BaseDexClassLoader.java:56)\r\nI:     at java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String, boolean) (ClassLoader.java:380)\r\nI:     at java.lang.Class java.lang.ClassLoader.loadClass(java.lang.String) (ClassLoader.java:312)\r\nI:     at okhttp3.internal.platform.android.SocketAdapter okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion.buildIfSupported() (ConscryptSocketAdapter.kt:62)\r\nI:     at void okhttp3.internal.platform.AndroidPlatform.<init>() (AndroidPlatform.kt:44)\r\nI:     at okhttp3.internal.platform.Platform okhttp3.internal.platform.AndroidPlatform$Companion.buildIfSupported() (AndroidPlatform.kt:212)\r\nI:     at okhttp3.internal.platform.Platform okhttp3.internal.platform.Platform$Companion.findPlatform() (Platform.kt:207)\r\nI:     at okhttp3.internal.platform.Platform okhttp3.internal.platform.Platform$Companion.access$findPlatform(okhttp3.internal.platform.Platform$Companion) (Platform.kt:169)\r\nI:     at void okhttp3.internal.platform.Platform.<clinit>() (Platform.kt:170)\r\nI:     at void okhttp3.OkHttpClient.<init>(okhttp3.OkHttpClient$Builder) (OkHttpClient.kt:220)\r\nI:     at void okhttp3.OkHttpClient.<init>() (OkHttpClient.kt:212)\r\nI:     at java.lang.String okhttp.conscrypt.issue.MainActivity.lambda$onCreate$0() (MainActivity.java:28)\r\nI:     at java.lang.Object okhttp.conscrypt.issue.-$$Lambda$MainActivity$HFmP7xhC1oUdC6d5U0mKIdLTGns.call() (lambda:-1)\r\nI:     at void io.reactivex.internal.operators.single.SingleFromCallable.subscribeActual(io.reactivex.SingleObserver) (SingleFromCallable.java:44)\r\nI:     at void io.reactivex.Single.subscribe(io.reactivex.SingleObserver) (Single.java:3666)\r\nI:     at void io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run() (SingleSubscribeOn.java:89)\r\nI:     at void io.reactivex.Scheduler$DisposeTask.run() (Scheduler.java:578)\r\nI:     at void io.reactivex.internal.schedulers.ScheduledRunnable.run() (ScheduledRunnable.java:66)\r\nI:     at java.lang.Object io.reactivex.internal.schedulers.ScheduledRunnable.call() (ScheduledRunnable.java:57)\r\nI:     at void java.util.concurrent.FutureTask.run() (FutureTask.java:237)\r\nI:     at void java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run() (ScheduledThreadPoolExecutor.java:272)\r\nI:     at void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (ThreadPoolExecutor.java:1133)\r\nI:     at void java.util.concurrent.ThreadPoolExecutor$Worker.run() (ThreadPoolExecutor.java:607)\r\nI:     at void java.lang.Thread.run() (Thread.java:761)\r\n```\r\n\r\nI am ___not___ [using Conscrypt](https://github.com/square/okhttp/blame/master/README.md#L89). I do _not_ [include it in my Android project's Gradle dependencies](https://github.com/google/conscrypt/blob/master/README.md#gradle-2). I _do_ agree with the view point of [this StackOverflow comment](https://stackoverflow.com/questions/58630667/rejecting-re-init-on-previously-failed-class-in-okhttp#comment103789170_58662077) from [`kroegerama@`](https://stackoverflow.com/users/1117509/kroegerama):\r\n> If okHttp needs conscrypt, it should reference this library instead of forcing us to add this dependency. This should not be marked as accepted. Better file a bug report on square's github repo. \u2013 kroegerama Nov 7 '19 at 14:07 ", "url": "https://github.com/square/okhttp/issues/5760", "user": "jamesonwilliams", "labels": ["bug"], "created": "2020-01-30 05:24:54", "closed": "2020-06-06 15:01:25", "commits": {}, "ttf": 128.00027777777777, "commitsDetails": []}, {"title": "NoSuchMethodError when trying to instantiate MockWebServer", "body": "When attempting to use Retrofit and MockWebServer in my project, I get the following exception when initializing a MockWebServer object in my unit tests:\r\n\r\n```\r\njava.lang.NoSuchMethodError: okhttp3.internal.Util.immutableListOf([Ljava/lang/Object;)Ljava/util/List;\r\n\tat okhttp3.mockwebserver.MockWebServer.<init>(MockWebServer.kt:176)\r\n```\r\n\r\nThis bug can be reproduced in `MockWebServerInitializationBugTest.java` from https://github.com/jsoberg/OkHttp-MockWebServer-NoSuchMethorErrorBug.\r\n\r\nThe following is the gradle dependencies output for the example project:\r\n```\r\ncompileClasspath - Compile classpath for source set 'main'.\r\n\\--- com.squareup.retrofit2:retrofit:2.7.0\r\n     \\--- com.squareup.okhttp3:okhttp:3.14.4\r\n          \\--- com.squareup.okio:okio:1.17.2\r\n\r\ndefault - Configuration for default artifacts.\r\n\\--- com.squareup.retrofit2:retrofit:2.7.0\r\n     \\--- com.squareup.okhttp3:okhttp:3.14.4\r\n          \\--- com.squareup.okio:okio:1.17.2\r\n\r\nimplementation - Implementation only dependencies for source set 'main'. (n)\r\n+--- unspecified (n)\r\n\\--- com.squareup.retrofit2:retrofit:2.7.0 (n)\r\n\r\nruntimeClasspath - Runtime classpath of source set 'main'.\r\n\\--- com.squareup.retrofit2:retrofit:2.7.0\r\n     \\--- com.squareup.okhttp3:okhttp:3.14.4\r\n          \\--- com.squareup.okio:okio:1.17.2\r\n\r\ntestCompileClasspath - Compile classpath for source set 'test'.\r\n+--- com.squareup.retrofit2:retrofit:2.7.0\r\n|    \\--- com.squareup.okhttp3:okhttp:3.14.4 -> 4.3.1\r\n|         +--- com.squareup.okio:okio:2.4.1\r\n|         |    +--- org.jetbrains.kotlin:kotlin-stdlib:1.3.50 -> 1.3.61\r\n|         |    |    +--- org.jetbrains.kotlin:kotlin-stdlib-common:1.3.61\r\n|         |    |    \\--- org.jetbrains:annotations:13.0\r\n|         |    \\--- org.jetbrains.kotlin:kotlin-stdlib-common:1.3.50 -> 1.3.61\r\n|         \\--- org.jetbrains.kotlin:kotlin-stdlib:1.3.61 (*)\r\n+--- junit:junit:4.12\r\n|    \\--- org.hamcrest:hamcrest-core:1.3\r\n+--- com.squareup.okhttp3:okhttp:4.3.1 (*)\r\n\\--- com.squareup.okhttp3:mockwebserver:4.3.1\r\n     +--- com.squareup.okhttp3:okhttp:4.3.1 (*)\r\n     \\--- junit:junit:4.12 (*)\r\n\r\ntestImplementation - Implementation only dependencies for source set 'test'. (n)\r\n+--- junit:junit:4.12 (n)\r\n+--- com.squareup.okhttp3:okhttp:4.3.1 (n)\r\n\\--- com.squareup.okhttp3:mockwebserver:4.3.1 (n)\r\n\r\ntestRuntimeClasspath - Runtime classpath of source set 'test'.\r\n+--- com.squareup.retrofit2:retrofit:2.7.0\r\n|    \\--- com.squareup.okhttp3:okhttp:3.14.4 -> 4.3.1\r\n|         +--- com.squareup.okio:okio:2.4.1\r\n|         |    +--- org.jetbrains.kotlin:kotlin-stdlib:1.3.50 -> 1.3.61\r\n|         |    |    +--- org.jetbrains.kotlin:kotlin-stdlib-common:1.3.61\r\n|         |    |    \\--- org.jetbrains:annotations:13.0\r\n|         |    \\--- org.jetbrains.kotlin:kotlin-stdlib-common:1.3.50 -> 1.3.61\r\n|         \\--- org.jetbrains.kotlin:kotlin-stdlib:1.3.61 (*)\r\n+--- junit:junit:4.12\r\n|    \\--- org.hamcrest:hamcrest-core:1.3\r\n+--- com.squareup.okhttp3:okhttp:4.3.1 (*)\r\n\\--- com.squareup.okhttp3:mockwebserver:4.3.1\r\n     +--- com.squareup.okhttp3:okhttp:4.3.1 (*)\r\n     \\--- junit:junit:4.12 (*)\r\n```\r\nSeemingly, the MockWebServer and OkHttp dependencies are both using the same version (4.3.1), and I would therefore think that there would be no issues. \r\n\r\nRetrofit's OkHttp dependency appears to be being updated to the same (from the line `com.squareup.okhttp3:okhttp:3.14.4 -> 4.3.1`). If the Retrofit dependency is removed, it works as expected. ", "url": "https://github.com/square/okhttp/issues/5759", "user": "jsoberg", "labels": ["bug"], "created": "2020-01-28 22:35:12", "closed": "2020-03-19 02:20:40", "commits": {}, "ttf": 50.000277777777775, "commitsDetails": []}, {"title": "Android\u67b6\u6784\u89c6\u9891\u5b66\u4e60vx\uff1ajess_andoid", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n", "url": "https://github.com/square/okhttp/issues/5755", "user": "wenfu92", "labels": ["bug"], "created": "2020-01-26 07:21:01", "closed": "2020-01-26 08:16:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Reporting a security vulnerability", "body": "Where should we do this as this link doesn\u2019t seem to be accepting submissions: https://hackerone.com/square-open-source.", "url": "https://github.com/square/okhttp/issues/5750", "user": "tghosth", "labels": ["bug"], "created": "2020-01-23 12:40:44", "closed": "2020-01-25 07:45:08", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "NoClassDefFoundError: kotlin/TypeCastException (yes, again... or still)", "body": "This is a duplicate of, or maybe closely related to #5379 and #4305.\r\n\r\n`mockwebserver` version `4.3.1` depends on the wrong version of `okhttp`.\r\n\r\n```\r\n+- com.squareup.okhttp3:mockwebserver:jar:4.3.1:test\r\n|  \\- com.squareup.okhttp3:okhttp:jar:3.8.1:test\r\n|     \\- com.squareup.okio:okio:jar:1.13.0:test\r\n```\r\n\r\nIf you include a current `okhttp:4.3.1` there is a kotlin stdlib version clash:\r\n\r\n```\r\n+- com.squareup.okhttp3:okhttp:jar:4.3.1:test\r\n|  +- com.squareup.okio:okio:jar:2.4.1:test\r\n|  |  \\- org.jetbrains.kotlin:kotlin-stdlib-common:jar:1.3.50:test\r\n|  \\- org.jetbrains.kotlin:kotlin-stdlib:jar:1.2.71:test\r\n|     \\- org.jetbrains:annotations:jar:13.0:compile\r\n```\r\n\r\nNote the `kotlin-stdlib-common:1.3.50` vs. `kotlin-stdlib:1.2.71`.\r\n\r\nSo, in order to get a clean state you would have to do the following in maven:\r\n\r\n```\r\n    <dependency>\r\n      <groupId>com.squareup.okhttp3</groupId>\r\n      <artifactId>mockwebserver</artifactId>\r\n      <version>${okhttp3.version}</version>\r\n      <scope>test</scope>\r\n      <exclusions>\r\n        <exclusion>\r\n          <groupId>com.squareup.okhttp3</groupId>\r\n          <artifactId>okhttp</artifactId>\r\n        </exclusion>\r\n      </exclusions>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>com.squareup.okhttp3</groupId>\r\n      <artifactId>okhttp</artifactId>\r\n      <version>${okhttp3.version}</version>\r\n      <scope>test</scope>\r\n      <exclusions>\r\n        <exclusion>\r\n          <groupId>org.jetbrains.kotlin</groupId>\r\n          <artifactId>kotlin-stdlib</artifactId>\r\n        </exclusion>\r\n      </exclusions>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.jetbrains.kotlin</groupId>\r\n      <artifactId>kotlin-stdlib</artifactId>\r\n      <version>1.3.50</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n```\r\n\r\n```\r\n+- com.squareup.okhttp3:mockwebserver:jar:4.3.1:test\r\n+- com.squareup.okhttp3:okhttp:jar:4.3.1:test\r\n|  \\- com.squareup.okio:okio:jar:2.4.1:test\r\n+- org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.50:test\r\n|  +- org.jetbrains.kotlin:kotlin-stdlib-common:jar:1.3.50:test\r\n|  \\- org.jetbrains:annotations:jar:13.0:compile\r\n```\r\n\r\nCan you please fix the versions in `mockwebserver`'s dependencies?\r\n", "url": "https://github.com/square/okhttp/issues/5749", "user": "KaiStapel", "labels": ["bug"], "created": "2020-01-23 08:22:28", "closed": "2020-03-19 02:28:51", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "Failing to close response in interceptor results in \"Check failed\"", "body": "I wrote an `Interceptor` that redirects to HTTPS based on information from the response, but on the second request the `Transmitter` throws an exception:\r\n\r\n```kotlin\r\nException in thread \"main\" java.lang.IllegalStateException: Check failed.\r\n\tat okhttp3.internal.connection.Transmitter.prepareToConnect(Transmitter.kt:125)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:62)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat HttpsUpgradeInterceptor.intercept(HttpsUpgradeInterceptor.kt:13)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:194)\r\n\tat okhttp3.RealCall.execute(RealCall.kt:67)\r\n\tat HttpsUpgradeInterceptorKt.main(HttpsUpgradeInterceptor.kt:26)\r\n\tat HttpsUpgradeInterceptorKt.main(HttpsUpgradeInterceptor.kt)\r\n```\r\n\r\nCode:\r\nhttps://gist.github.com/octylFractal/713bf759781b2997bfc693ab4b1d2a5c\r\n\r\n~~I'm not 100% sure if doing another request in an application interceptor is supported, but the error message isn't clear.~~ Edit: read the interceptors page again, and this is advertised as supported, so this is definitely a bug", "url": "https://github.com/square/okhttp/issues/5744", "user": "octylFractal", "labels": ["bug"], "created": "2020-01-21 22:21:47", "closed": "2020-02-29 17:08:50", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "How to change default cache policy?", "body": "I am using Picasso for image loading. Picasso doesn't have a disk cache. OkHttp maintains an HTTP cache that is controlled by HTTP cache headers. I want to set an expiry for disk cached images so added cache-control headers in HTTP response `cache-control: public, max-age=7200` but it is not respecting cache headers. The current behavior is the default HTTPResponseCache which honors RFC 7234.\r\nIs there anything we are missing?\r\n\r\n<img width=\"898\" alt=\"headers\" src=\"https://user-images.githubusercontent.com/11991408/72726643-d3ae8680-3bae-11ea-9fea-42727012d4a8.png\">\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5739", "user": "PavanBilagi", "labels": ["bug"], "created": "2020-01-20 12:31:48", "closed": "2020-01-20 12:59:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u5728Android 10 \u4e0assl \u5f97\u4e0d\u5230\u6388\u6743", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n", "url": "https://github.com/square/okhttp/issues/5738", "user": "PingSengDuBuLiaoZiJi", "labels": ["bug"], "created": "2020-01-20 09:39:42", "closed": "2020-01-20 12:25:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "connectionPool not work in http2.0?", "body": "We use okhttp3.12.1 version in our android code.\r\nAnd the server use http2.0 protocols.\r\n\r\nwe build about 3 or 4 okhttpclient instance and make a common connectPool and use OkhttpClient.Builder.connectionPool api to set it.\r\n\r\nbut when debug, I found the connectPool has 3 connect and they have the same host, I want to know why not reuse in one connect....\r\n\r\nI also found one issue but it's not my situation because  ProxySelector.getDefault return not null  in my code.\r\nhttps://github.com/square/okhttp/pull/5524", "url": "https://github.com/square/okhttp/issues/5730", "user": "liangxiwei", "labels": ["bug"], "created": "2020-01-16 04:32:01", "closed": "2020-01-17 02:22:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "KotlinNullPointerException in Http1ExchangeCodec.read when connect via tunnel", "body": "\r\n2020-01-15 11:00:54.127 11279-11554 E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n    kotlin.KotlinNullPointerException\r\n        at okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.read(Http1ExchangeCodec.kt:391)\r\n        at okhttp3.internal.Util.skipAll(Util.kt:336)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.skipConnectBody(Http1ExchangeCodec.kt:278)\r\n        at okhttp3.internal.connection.RealConnection.createTunnel(RealConnection.kt:431)\r\n        at okhttp3.internal.connection.RealConnection.connectTunnel(RealConnection.kt:233)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:174)\r\n        at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:238)\r\n        at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:111)\r\n        at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:79)\r\n        at okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.kt:163)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:35)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:194)\r\n        at okhttp3.RealCall$AsyncCall.run(RealCall.kt:138)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:762)\r\n\r\n\r\nGetting error because tunnel creating:        \r\nval tunnelCodec = Http1ExchangeCodec(null, **null**, source, sink)\r\nand in function Http1ExchangeCodec.read realConnection not nullable:\r\n        realConnection!!.noNewExchanges() // The server didn't supply the promised content length.\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5727", "user": "blakfast", "labels": ["bug"], "created": "2020-01-15 08:59:18", "closed": "2020-02-09 22:01:57", "commits": {"56fd46baa3bd1794b336a38a6b5ea8ec4a1b0d02": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "56fd46baa3bd1794b336a38a6b5ea8ec4a1b0d02", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["23cdb3e9abbb23f1c96a33d73ae57978b44a4a1f"], "nameRev": "56fd46baa3bd1794b336a38a6b5ea8ec4a1b0d02 tags/parent-4.4.0~10^2", "commitMessage": "Add a test for truncated tunnel responses\n\nAs a happy accident this was fixed by yesterday's changes to tidy up\nthe exchange lifecycle.\n\nCloses: https://github.com/square/okhttp/issues/5727\n", "commitDateTime": "2020-02-09 16:18:03", "authoredDateTime": "2020-02-09 16:18:03", "commitGitStats": [{"filePath": "okhttp/src/test/java/okhttp3/CallTest.java", "insertions": 29, "deletions": 0, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.proxyUpgradeFailsWithTruncatedResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["56fd46baa3bd1794b336a38a6b5ea8ec4a1b0d02"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Infinite retry loop upon StreamResetException with error code CANCEL", "body": "`RetryAndFollowUpInterceptor` indefinitely retries `StreamResetException` with error code CANCEL. \r\n\r\nIt's possible that an HTTP/2 connection is established with server immediately sending back stream cancels upon receiving requests (that's how we encountered this issue).\r\n\r\nThis can  be reproduce by a node+express server and within request handler do `res.connection.destroy();` \r\n\r\nFrom examining code this appears to be obvious as CANCEL events [are intentionally kept out from renewing connections. ](https://github.com/square/okhttp/blob/ff0dee1c34fc06084357c93dc480f6ad89fef24a/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt#L674)\r\n\r\nShould there be a global retry count of some sort as a final guard in the interceptor to avoid infinite retries as such?", "url": "https://github.com/square/okhttp/issues/5726", "user": "idealllee", "labels": ["bug"], "created": "2020-01-14 23:12:57", "closed": "2020-02-17 20:34:46", "commits": {"c161782a30c3d5dc6af1bb76a0e52ed8600cc715": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "134ac982291a8d679e9cd2721a903fdeb1e1fb5b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 33.000277777777775, "commitsDetails": [{"commitHash": "c161782a30c3d5dc6af1bb76a0e52ed8600cc715", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "134ac982291a8d679e9cd2721a903fdeb1e1fb5b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["1c03efd4df78eaefa00f98ac90123b6457b1c7e8"], "nameRev": "134ac982291a8d679e9cd2721a903fdeb1e1fb5b tags/parent-4.4.0~2^2", "commitMessage": "Don't do infinite retries on server-canceled calls\n\nWe originally had a bug where Call.cancel() would incorrectly\ncause HTTP/2 connections to be closed.\n\nThe fix was to not consider HTTP/2 connections to be degraded\nwhen a CANCEL error is received:\nhttps://github.com/square/okhttp/pull/4052\n\nThis closes the loop to make sure that we only treat CANCEL as\nexpected when the call was actually canceled.\n\nCloses: https://github.com/square/okhttp/issues/5726\n", "commitDateTime": "2020-02-17 09:24:31", "authoredDateTime": "2020-02-16 16:48:01", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Exchange.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 13, "deletions": 1, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.recoverFromOneInternalErrorRequiresNewConnection()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.recoverFromOneCancelRequiresNewConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.noRecoveryFromCancelWithRetryDisabled()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.recoverFromOneHttp2ErrorRequiresNewConnection(okhttp3.internal.http2.ErrorCode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["134ac982291a8d679e9cd2721a903fdeb1e1fb5b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7.0, "deletions": 7.0, "lines": 14.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection/Exchange.kt", "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt"], "changesInPackagesSPOON": []}, {"title": "source.readUtf8LineStrict(headerLimit)    java.net.SocketTimeoutException: timeout", "body": "when i use  websocket  \r\n\r\n\r\n```java\r\n   Request request = new Request.Builder()\r\n                .url(\"ws://192.168.3.107:8072/driver\")\r\n                .build();\r\n            okHttpBuilder = new OkHttpClient.Builder()\r\n     \r\n                    .readTimeout(500, TimeUnit.MILLISECONDS) \r\nokHttpClient.newWebSocket(request, webSocketListener);\r\n\r\n```\r\ni use this code it cause java.net.SocketTimeoutException: timeout\r\nbut when i  change code \r\n```\r\n .readTimeout(500, TimeUnit.SECONDS) \r\n```\r\nthe websocket connect success \r\n\r\ni think is some thing  is wrong. \r\nit  shouldn't spend so long time\r\nfor a while \r\nif found what happen  in okhttp code  \r\n```\r\nHttp1ExchangeCodec.class \r\n  override fun readResponseHeaders(expectContinue: Boolean): Response.Builder? {\r\n    check(state == STATE_OPEN_REQUEST_BODY || state == STATE_READ_RESPONSE_HEADERS) {\r\n      \"state: $state\"\r\n    }\r\n\r\n    try {\r\n      val statusLine = StatusLine.parse(**readHeaderLine()**)\r\n}.....\r\n```\r\n\r\n```\r\n  private fun readHeaderLine(): String {\r\n    **val line = source.readUtf8LineStrict(headerLimit)**\r\n    headerLimit -= line.length.toLong()\r\n    return line\r\n  }\r\n```\r\ni debug it \r\nval line = source.readUtf8LineStrict(headerLimit) is too slow \r\nbut var line =\"HTTP/1.1 101 \"  \r\nline it not big just \"HTTP/1.1 101 \"  can you fix it?  \r\ni also can help you. if you want some code\r\n\r\n \r\n\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5719", "user": "jikun2008", "labels": ["bug"], "created": "2020-01-12 08:01:05", "closed": "2020-01-19 02:44:28", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "java.io.IOException: unexpected end of stream", "body": "Hello\r\n\r\nI have the following error with the followig code :\r\n**java.io.IOException: unexpected end of stream**\r\nFrom what I have [read](https://stackoverflow.com/questions/55950254/retrofit-okhttp-unexpected-end-of-stream-on-connection-error) the error come from OkHttp (It works with HttpUrlConnection)\r\nI have try to add : \r\n.header(\"Connection\", \"close\")\r\nBut no success, since the server is a Smart TV that I cannot modify, how can I bypass this ? thanks\r\n\r\n```\r\nprivate static final MediaType JSON = MediaType.get(\"application/json; charset=utf-8\");\r\nprivate static String m_user;\r\nprivate static String m_password;\r\n\r\nprivate static OkHttpClient getUnsafeOkHttpClient() {\r\n\t// For test purpose\r\n\ttry {\r\n\t\t// Create a trust manager that does not validate certificate chains\r\n\t\tfinal TrustManager[] trustAllCerts = new TrustManager[] {\r\n\t\t\t\tnew X509TrustManager() {\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic X509Certificate[] getAcceptedIssuers() {\r\n\t\t\t\t\t\treturn new X509Certificate[0];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Called reflectively by X509TrustManagerExtensions.\r\n\t\t\t\t\tpublic void checkServerTrusted(X509Certificate[] x509Certificates, String authType, String host) {\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Install the all-trusting trust manager\r\n\t\tfinal SSLContext sslContext = SSLContext.getInstance(\"SSL\");\r\n\t\tsslContext.init(null, trustAllCerts, new java.security.SecureRandom());\r\n\t\t// Create an ssl socket factory with our all-trusting manager\r\n\t\tfinal SSLSocketFactory sslSocketFactory = sslContext.getSocketFactory();\r\n\r\n\t\tOkHttpClient.Builder builder = new OkHttpClient.Builder();\r\n\t\tbuilder.sslSocketFactory(sslSocketFactory, (X509TrustManager)trustAllCerts[0]);\r\n\t\tbuilder.hostnameVerifier(new HostnameVerifier() {\r\n\t\t\t@Override\r\n\t\t\tpublic boolean verify(String hostname, SSLSession session) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn builder.build();\r\n\t} catch (Exception e) {\r\n\t\te.printStackTrace();\r\n\t\tthrow new RuntimeException(e);\r\n\t}\r\n}\r\n\r\nprivate void testConnect(int timeout, final String str_url, boolean isPost, boolean digestAuth, String data)\r\n{\r\n\tOkHttpClient client = getUnsafeOkHttpClient(); // For test purpose\r\n\tOkHttpClient.Builder clientBuilder = client.newBuilder();\r\n\tclientBuilder.connectTimeout(timeout, TimeUnit.MILLISECONDS);\r\n\tclientBuilder.writeTimeout(timeout, TimeUnit.MILLISECONDS);\r\n\tclientBuilder.readTimeout(10, TimeUnit.SECONDS);\r\n\r\n\tif(digestAuth) {\r\n\t\tfinal DigestAuthenticator authenticator = new DigestAuthenticator(new Credentials(m_user, m_password));\r\n\t\tfinal Map<String, CachingAuthenticator> authCache = new ConcurrentHashMap<>();\r\n\t\tclientBuilder.authenticator(new CachingAuthenticatorDecorator(authenticator, authCache));\r\n\t\tclientBuilder.addInterceptor(new AuthenticationCacheInterceptor(authCache));\r\n\t}\r\n\tclientBuilder.build();\r\n\r\n\tRequest request = new Request.Builder()\r\n\t\t\t.url(str_url)\r\n\t\t\t//.header(\"Accept\", \"application/json\")// todo addHeader ?\r\n\t\t\t.header(\"Connection\", \"close\")\r\n\t\t\t//.header(\"Transfer-Encoding\", \"chunked\")\r\n\t\t\t//.header(\"Content-Type\", \"application/json\")\r\n\t\t\t//.header(\"Cache-Control\", \"no-cache\")\r\n\t\t\t.build();\r\n\tRequest.Builder requestBuilder = request.newBuilder();\r\n\r\n\tif(isPost && data!=null) {\r\n\t\tRequestBody body = RequestBody.create(data, JSON);\r\n\t\trequestBuilder.post(body);\r\n\t} else {\r\n\t\trequestBuilder.get();\r\n\t}\r\n\r\n\trequestBuilder.build();\r\n\r\n\tclient.newCall(request).enqueue(new Callback() {\r\n\t\t@Override\r\n\t\tpublic void onFailure(@NotNull Call call, @NotNull IOException e) {\r\n\t\t\tHandler handler = new Handler(Looper.getMainLooper());\r\n\t\t\thandler.post(new Runnable() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void run() {\r\n\t\t\t\t\tToast.makeText(myClass.this, e.getMessage(), Toast.LENGTH_SHORT).show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic void onResponse(@NotNull Call call, @NotNull okhttp3.Response response) {\r\n\t\t\tif (!response.isSuccessful()) {\r\n\t\t\t\tHandler handler = new Handler(Looper.getMainLooper());\r\n\t\t\t\thandler.post(new Runnable() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void run() {\r\n\t\t\t\t\t\tToast.makeText(myClass.this, response.message() + \" code: \" + response.code(), Toast.LENGTH_SHORT).show();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tif(response.code() == HttpURLConnection.HTTP_OK) {\r\n\t\t\t\t\tHandler handler = new Handler(Looper.getMainLooper());\r\n\t\t\t\t\thandler.post(new Runnable() {\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic void run() {\r\n\t\t\t\t\t\t\tToast.makeText(myClass.this, \"OK\", Toast.LENGTH_SHORT).show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/5714", "user": "GreenSnakeLinux", "labels": ["bug"], "created": "2020-01-11 19:55:57", "closed": "2020-01-11 20:34:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "RejectedExecutionException because of sendDegradedPingLater", "body": "Hello, \r\n\r\nSince we have updated our Android app DAVx\u2075 from okhttp 3.12.5 to 3.12.7, we start receiving these exceptions: \r\n\r\n```\r\njava.util.concurrent.RejectedExecutionException: \r\n  at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution (ThreadPoolExecutor.java:2104)\r\n  at java.util.concurrent.ThreadPoolExecutor.reject (ThreadPoolExecutor.java:848)\r\n  at java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute (ScheduledThreadPoolExecutor.java:334)\r\n  at java.util.concurrent.ScheduledThreadPoolExecutor.schedule (ScheduledThreadPoolExecutor.java:562)\r\n  at java.util.concurrent.ScheduledThreadPoolExecutor.execute (ScheduledThreadPoolExecutor.java:654)\r\n  at okhttp3.internal.http2.Http2Connection.sendDegradedPingLater (Http2Connection.java:598)\r\n  at okhttp3.internal.http2.Http2Stream$StreamTimeout.timedOut (Http2Stream.java:668)\r\n  at okio.AsyncTimeout$Watchdog.run (AsyncTimeout.kt:198)\r\n```\r\n\r\nIt's not that often, but this exception was not there before. I think it occurs when\r\n* a thread with okhttp I/O is `interrupt()`ed (because the user cancels the action), and\r\n* okhttp tries to send a delayed HTTP/2 ping on such an interrupted channel later.\r\n\r\nUnfortunately, I can't provide reliable steps to reproduce yet. Is this however a problem you can imagine to happen or do you need more information?", "url": "https://github.com/square/okhttp/issues/5713", "user": "rfc2822", "labels": ["bug"], "created": "2020-01-10 12:35:32", "closed": "2020-01-12 12:30:18", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Cannot read Request Headers in Authenticator authenticate method", "body": "## Problem\r\nWhen trying to reauthenticate a failing request with 401 response, using `okhttp3.Authenticator` I need to inspect request headers, but `response.request.headers` is empty. Replicated in a test and it seems an OkHttp bug.\r\n\r\nLet me know if more info are needed.\r\n\r\n## Failing Test\r\n`build.gradle`:\r\n\r\n```\r\nimplementation \"com.squareup.okhttp3:okhttp:4.3.1\"\r\ntestImplementation \"com.squareup.okhttp3:mockwebserver:4.3.1\"\r\n```\r\n\r\n`AuthenticatorRequestHeadersTest.kt`\r\n```kotlin\r\npackage com.app.authenticatorerror\r\n\r\nimport okhttp3.Authenticator\r\nimport okhttp3.Headers\r\nimport okhttp3.Interceptor\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.Request\r\nimport okhttp3.Response\r\nimport okhttp3.Route\r\nimport okhttp3.mockwebserver.MockResponse\r\nimport okhttp3.mockwebserver.MockWebServer\r\nimport org.junit.After\r\nimport org.junit.Assert.assertEquals\r\nimport org.junit.Before\r\nimport org.junit.Test\r\n\r\nclass AuthenticatorRequestHeadersTest {\r\n\r\n    class MyAuthenticator : Authenticator {\r\n        var lastHeaders: Headers? = null\r\n\r\n        override fun authenticate(route: Route?, response: Response): Request? {\r\n            lastHeaders = response.request.headers\r\n            return null\r\n        }\r\n    }\r\n\r\n    private lateinit var mockWebServer: MockWebServer\r\n    private lateinit var okHttpClient: OkHttpClient\r\n    private lateinit var authenticator: MyAuthenticator\r\n\r\n    @Before\r\n    fun setUp() {\r\n        mockWebServer = MockWebServer().apply { start() }\r\n        authenticator = MyAuthenticator()\r\n        okHttpClient = OkHttpClient.Builder()\r\n            .authenticator(authenticator)\r\n            .addNetworkInterceptor(object : Interceptor {\r\n                override fun intercept(chain: Interceptor.Chain): Response {\r\n                    return chain.proceed(\r\n                        chain.request()\r\n                            .newBuilder()\r\n                            .header(\"MyHeader\", \"MyValue\")\r\n                            .build()\r\n                    )\r\n                }\r\n            })\r\n            .build()\r\n    }\r\n\r\n    @After\r\n    fun tearDown() {\r\n        mockWebServer.close()\r\n    }\r\n\r\n    @Test\r\n    fun `authenticator should see response's request headers`() {\r\n        mockWebServer.enqueue(MockResponse().setResponseCode(401))\r\n\r\n        val request = Request.Builder()\r\n            .method(\"GET\", null)\r\n            .url(mockWebServer.url(\"/\"))\r\n            .build()\r\n\r\n        val unauthorizedResponse = okHttpClient.newCall(request).execute()\r\n        val unauthorizedRequest = mockWebServer.takeRequest()\r\n\r\n        assertEquals(401, unauthorizedResponse.code)\r\n        assertEquals(\"MyValue\", unauthorizedRequest.getHeader(\"MyHeader\"))\r\n\r\n        // failing\r\n        assertEquals(setOf(\"MyHeader\"), authenticator.lastHeaders?.names())\r\n    }\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/5711", "user": "gotev", "labels": ["bug"], "created": "2020-01-08 15:41:59", "closed": "2020-01-08 23:35:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "okhttp 4.3.0 Expected URL scheme 'http' or 'https' but was 'SSLPeerUnverifiedException'", "body": "It looks like there's been a similar exception, but this time the message looks strange/weird, why did the `'SSLPeerUnverifiedException'` be added to this message?\r\n\r\n```\r\nNon-fatal Exception: java.lang.IllegalArgumentException: Expected URL scheme 'http' or 'https' but was 'SSLPeerUnverifiedException'\r\n       at okhttp3.HttpUrl$Builder.parse$okhttp + 1255(HttpUrl.java:1255)\r\n       at okhttp3.HttpUrl$Companion.get + 1634(HttpUrl.java:1634)\r\n       at okhttp3.Request$Builder.url + 184(Request.java:184)\r\n...\r\n```\r\n\r\nokhttp: 4.3.0\r\n\r\nAnd sorry I can't provide a reproducible project, so if this weird message is not helpful to a quick fix, please feel free to close this issue, thanks!", "url": "https://github.com/square/okhttp/issues/5709", "user": "drakeet", "labels": ["bug"], "created": "2020-01-08 00:42:48", "closed": "2020-01-08 01:10:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Some Web Sockets tests are flaky", "body": "https://circleci.com/gh/square/okhttp/8330?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\r\n\r\ncloseReasonMaximumLength - okhttp3.internal.ws.WebSocketHttpTest\r\n```\r\norg.junit.ComparisonFailure: expected:<[0]> but was:<[1]>\r\n\tat okhttp3.OkHttpClientTestRule.ensureAllConnectionsReleased(OkHttpClientTestRule.kt:91)\r\n\tat okhttp3.OkHttpClientTestRule$apply$1.evaluate(OkHttpClientTestRule.kt:121)\r\n```\r\n\r\nserverCloseThenClientClose - okhttp3.internal.ws.RealWebSocketTest\r\n```\r\njava.lang.AssertionError: \r\nExpecting empty but was:<[Closed[1000 Hello!]]>\r\n\tat okhttp3.internal.ws.WebSocketRecorder.assertExhausted(WebSocketRecorder.java:163)\r\n\tat okhttp3.internal.ws.RealWebSocketTest.tearDown(RealWebSocketTest.java:58)\r\n```", "url": "https://github.com/square/okhttp/issues/5708", "user": "swankjesse", "labels": ["bug", "tests"], "created": "2020-01-07 03:01:15", "closed": "2020-05-09 07:18:29", "commits": {"b26860a4fcdd950a8a54d417973af5db84454fdb": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "2873719c431a876c8c16b093030bd2d5ed272db5": {"commitGHEventType": "referenced", "commitUser": "yschimke"}}, "ttf": 123.00027777777778, "commitsDetails": [{"commitHash": "b26860a4fcdd950a8a54d417973af5db84454fdb", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2873719c431a876c8c16b093030bd2d5ed272db5", "commitGHEventType": "referenced", "commitUser": "yschimke", "commitParents": ["8e1f62847450934d4932ff225ec4d8c620b43310"], "nameRev": "2873719c431a876c8c16b093030bd2d5ed272db5 tags/parent-4.5.0-RC1~21", "commitMessage": "Fixed flaky RealWebSocketTest.serverCloseThenClientClose(). (#5800)\n\nhttps://github.com/square/okhttp/issues/5708", "commitDateTime": "2020-02-23 09:36:03", "authoredDateTime": "2020-02-23 03:36:03", "commitGitStats": [{"filePath": "okhttp/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealWebSocketTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.RealWebSocketTest.serverCloseThenClientClose()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2873719c431a876c8c16b093030bd2d5ed272db5"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Android AGP 4.0, R8 - Http2Writer NPE Okhttp v4.3.0", "body": "Seeing the following crashes on Android with Okhttp v4.3.0, not happening on v4.2.2\r\n\r\n- Using http2 rest endpoints with retrofit and rxjava.\r\n\r\n```\r\nFatal Exception: m0.a\r\n       at okio.Buffer.writableSegment$okio(Buffer.java:1812)\r\n       at okio.Buffer.writeByte(Buffer.java:1662)\r\n       at okio.RealBufferedSink.writeByte(RealBufferedSink.java:197)\r\n       at okhttp3.internal.Util.writeMedium(Util.java:309)\r\n       at okhttp3.internal.http2.Http2Writer.frameHeader(Http2Writer.java:261)\r\n       at okhttp3.internal.http2.Http2Writer.settings(Http2Writer.java:173)\r\n       at okhttp3.internal.http2.Http2Connection.start(Http2Connection.java:496)\r\n       at okhttp3.internal.http2.Http2Connection.start$default(Http2Connection.java:493)\r\n       at okhttp3.internal.connection.RealConnection.startHttp2(RealConnection.java:329)\r\n       at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:312)\r\n       at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:182)\r\n       at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:238)\r\n       at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:111)\r\n       at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:79)\r\n       at okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.java:163)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:35)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:112)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:87)\r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:82)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:112)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:87)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:84)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:112)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:71)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:112)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:87)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:194)\r\n       at okhttp3.RealCall$AsyncCall.run(RealCall.java:138)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n       at java.lang.Thread.run(Thread.java:919)\r\n```\r\n\r\nand \r\n\r\n```\r\nFatal Exception: m0.a\r\n       at okio.Segment.pop(Segment.java:89)\r\n       at okio.Buffer.skip(Buffer.java:1478)\r\n       at okio.RealBufferedSource.skip(RealBufferedSource.java:431)\r\n       at okhttp3.internal.http2.Http2Connection$ReaderRunnable.data(Http2Connection.java:643)\r\n       at okhttp3.internal.http2.Http2Reader.readData(Http2Reader.java:178)\r\n       at okhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.java:117)\r\n       at okhttp3.internal.http2.Http2Connection$ReaderRunnable.run(Http2Connection.java:614)\r\n       at java.lang.Thread.run(Thread.java:919)\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/5706", "user": "wezley98", "labels": ["bug"], "created": "2020-01-06 19:29:54", "closed": "2020-02-13 03:12:40", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "RealWebSocket send throws writerTask NPE", "body": " okhttp 4.3.0 throws NPE each time I try to send command via websocket.\r\n`writerTask` is null in `RealWebSocket::runWriter`\r\n```kotlin\r\n  private fun runWriter() {\r\n    this.assertThreadHoldsLock()\r\n\r\n    taskQueue.schedule(writerTask!!) // crashes in this line\r\n  }\r\n```\r\nStacktrace:\r\n```\r\nCaused by kotlin.KotlinNullPointerException\r\n       at okhttp3.internal.ws.RealWebSocket.runWriter + 398(RealWebSocket.java:398)\r\n       at okhttp3.internal.ws.RealWebSocket.send + 352(RealWebSocket.java:352)\r\n       at okhttp3.internal.ws.RealWebSocket.send + 332(RealWebSocket.java:332)\r\n```\r\n\r\ntest:\r\n```kotlin\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.Request\r\nimport okhttp3.WebSocketListener\r\nimport okhttp3.mockwebserver.MockWebServer\r\nimport org.junit.Rule\r\nimport org.junit.Test\r\n\r\n\r\nclass OkHttpBug {\r\n    @get:Rule\r\n    val server = MockWebServer()\r\n\r\n    @Test\r\n    fun test() {\r\n        val request = Request.Builder()\r\n            .url(server.url(\"/path\"))\r\n            .header(\"User-Agent\", \"Test Case\")\r\n            .build()\r\n        val client = OkHttpClient()\r\n        val listener = object : WebSocketListener() {\r\n\r\n        }\r\n        val command = \"\"\"{ \"id\": \"file\" }\"\"\"\r\n        val webSocket = client.newWebSocket(request, listener)\r\n        webSocket.send(command)\r\n        webSocket.close(1000, \"RealWebSocket crashes with runWriter writerTask!! NPE\")\r\n    }\r\n}\r\n```\r\n\r\nThis seems to be 100% reproducible in 4.3.0. Had about 1000 crashes on that version on small amount of sessions.\r\nThis (almost) does not happen with the same code on okhttp 4.2.2 (2 crashes in 1000x user count in much longer period)\r\n", "url": "https://github.com/square/okhttp/issues/5705", "user": "Naitbit", "labels": ["bug"], "created": "2020-01-06 12:06:36", "closed": "2020-05-13 06:47:54", "commits": {"43996f34a338e2ab63c965bf8d39e2488b8f62df": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "7f6b11e4c5706ce6752efac6c091c4e876495524": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 127.00027777777778, "commitsDetails": [{"commitHash": "43996f34a338e2ab63c965bf8d39e2488b8f62df", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b2168ceb7381153aee352e582aa4131ad35f15a7"], "nameRev": "43996f34a338e2ab63c965bf8d39e2488b8f62df tags/parent-4.4.0~43^2", "commitMessage": "Fix a regression closing WebSockets before connect\n\nCloses: https://github.com/square/okhttp/issues/5705\n", "commitDateTime": "2020-01-06 21:10:22", "authoredDateTime": "2020-01-06 21:10:22", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "okhttp/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WebSocketHttpTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.closeWithoutSuccessfulConnect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7f6b11e4c5706ce6752efac6c091c4e876495524", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["915d24059fb278de2feb24b4a885b7aa5ca307ab"], "nameRev": "7f6b11e4c5706ce6752efac6c091c4e876495524 tags/parent-4.3.1~2", "commitMessage": "Fix a regression closing WebSockets before connect\n\nCloses: https://github.com/square/okhttp/issues/5705\n", "commitDateTime": "2020-01-07 12:07:48", "authoredDateTime": "2020-01-06 21:10:22", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "okhttp/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WebSocketHttpTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.closeWithoutSuccessfulConnect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["43996f34a338e2ab63c965bf8d39e2488b8f62df"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt"], "changesInPackagesSPOON": []}, {"title": "SSLHandshakeException on Android 5 (API 21)", "body": "I pushed a new version of my app to production and started to get bunch of complains from users.\r\nTurns out with okhttp 4.3.0 there is SSLHandshakeException happening only on Android 5 for some reason. I'm getting this exception for all my requests including requests from 3th party SDKs. It's reproducible on API 21 Emulator.\r\n\r\n```\r\njavax.net.ssl.SSLHandshakeException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\r\n        at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:306)\r\n        at com.android.okhttp.Connection.upgradeToTls(Connection.java:197)\r\n        at com.android.okhttp.Connection.connect(Connection.java:151)\r\n        at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:276)\r\n        at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:211)\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:373)\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:323)\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:491)\r\n        at com.android.okhttp.internal.http.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\r\n        at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\r\n...\r\n     Caused by: java.security.cert.CertificateException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:318)\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkServerTrusted(TrustManagerImpl.java:219)\r\n        at com.android.org.conscrypt.Platform.checkServerTrusted(Platform.java:113)\r\n        at com.android.org.conscrypt.OpenSSLSocketImpl.verifyCertificateChain(OpenSSLSocketImpl.java:525)\r\n        at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\r\n        at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:302)\r\n        at com.android.okhttp.Connection.upgradeToTls(Connection.java:197)\u00a0\r\n        at com.android.okhttp.Connection.connect(Connection.java:151)\u00a0\r\n        at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:276)\u00a0\r\n        at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:211)\u00a0\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:373)\u00a0\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:323)\u00a0\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:491)\u00a0\r\n        at com.android.okhttp.internal.http.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\u00a0\r\n        at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\u00a0\r\n...\r\n     Caused by: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:318)\u00a0\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkServerTrusted(TrustManagerImpl.java:219)\u00a0\r\n        at com.android.org.conscrypt.Platform.checkServerTrusted(Platform.java:113)\u00a0\r\n        at com.android.org.conscrypt.OpenSSLSocketImpl.verifyCertificateChain(OpenSSLSocketImpl.java:525)\u00a0\r\n        at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\u00a0\r\n        at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:302)\u00a0\r\n        at com.android.okhttp.Connection.upgradeToTls(Connection.java:197)\u00a0\r\n        at com.android.okhttp.Connection.connect(Connection.java:151)\u00a0\r\n        at com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:276)\u00a0\r\n        at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:211)\u00a0\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:373)\u00a0\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:323)\u00a0\r\n        at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:491)\u00a0\r\n        at com.android.okhttp.internal.http.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\u00a0\r\n        at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\u00a0\r\n...\r\n```", "url": "https://github.com/square/okhttp/issues/5700", "user": "minas90", "labels": ["android", "bug"], "created": "2020-01-05 13:02:40", "closed": "2020-01-11 22:08:59", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Fix bouncy castle platform bugs", "body": "After https://github.com/square/okhttp/pull/5695 lands, there are plenty of failing tests that either need test or code fixes.  Previous testing has shown big differences between JDK 8 and JDK 11 for Bouncy Castle.\r\n\r\n```\r\n$ ./gradlew -Dokhttp.platform=bouncycastle test\r\n```", "url": "https://github.com/square/okhttp/issues/5698", "user": "yschimke", "labels": ["bug"], "created": "2020-01-05 07:57:18", "closed": "2020-04-30 19:12:46", "commits": {}, "ttf": 116.00027777777778, "commitsDetails": []}, {"title": "Android test failures on Android 5.0 (21)", "body": "\r\n\r\n```\r\n09:23:57 V/InstrumentationResultParser: 3) testConscryptRequest(okhttp.android.test.OkHttpTest)\r\n09:23:57 V/InstrumentationResultParser: org.junit.ComparisonFailure: expected:<org.conscrypt.[ConscryptFileDescriptorSocket]> but was:<org.conscrypt.[KitKatPlatformOpenSSLSocketImplAdapter]>\r\n09:23:57 V/InstrumentationResultParser: at org.junit.Assert.assertEquals(Assert.java:115)\r\n09:23:57 V/InstrumentationResultParser: at org.junit.Assert.assertEquals(Assert.java:144)\r\n09:23:57 V/InstrumentationResultParser: at okhttp.android.test.OkHttpTest.testConscryptRequest(OkHttpTest.kt:142)\r\n```\r\n\r\n```\r\n09:23:57 V/InstrumentationResultParser: 1) testRequestUsesPlayProvider(okhttp.android.test.OkHttpTest)\r\n09:23:57 V/InstrumentationResultParser: com.google.android.gms.common.GooglePlayServicesNotAvailableException\r\n09:23:57 V/InstrumentationResultParser: at com.google.android.gms.common.GooglePlayServicesUtilLight.ensurePlayServicesAvailable(Unknown Source)\r\n09:23:57 V/InstrumentationResultParser: at com.google.android.gms.common.GoogleApiAvailabilityLight.verifyGooglePlayServicesIsAvailable(Unknown Source)\r\n09:23:57 V/InstrumentationResultParser: at com.google.android.gms.security.ProviderInstaller.installIfNeeded(Unknown Source)\r\n09:23:57 V/InstrumentationResultParser: at okhttp.android.test.OkHttpTest.testRequestUsesPlayProvider(OkHttpTest.kt:156)\r\n```\r\n\r\n```\r\n09:23:57 V/InstrumentationResultParser: 2) testMockWebserverRequest(okhttp.android.test.OkHttpTest)\r\n09:23:57 V/InstrumentationResultParser: java.lang.IllegalArgumentException: List has more than one element.\r\n09:23:57 V/InstrumentationResultParser: at kotlin.collections.CollectionsKt___CollectionsKt.single(_Collections.kt:519)\r\n09:23:57 V/InstrumentationResultParser: at okhttp.android.test.OkHttpTest.testMockWebserverRequest(OkHttpTest.kt:289)\r\n```", "url": "https://github.com/square/okhttp/issues/5690", "user": "yschimke", "labels": ["bug", "tests"], "created": "2020-01-04 09:26:24", "closed": "2020-01-05 07:59:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Android cleaning fails with custom trust manager and logging", "body": "https://github.com/square/okhttp/pull/5688/files\r\n\r\nComment out \r\n\r\n```\r\n         // avoid cleaning bug for now\r\n-        .eventListener(EventListener.NONE)\r\n+//        .eventListener(EventListener.NONE)\r\n```\r\n\r\n```\r\n08:56:06 V/InstrumentationResultParser: There was 1 failure:\r\n08:56:06 V/InstrumentationResultParser: 1) testCustomTrustManager(okhttp.android.test.OkHttpTest)\r\n08:56:06 V/InstrumentationResultParser: javax.net.ssl.SSLPeerUnverifiedException: Failed to find a trusted cert that signed Certificate:\r\n08:56:06 V/InstrumentationResultParser: Data:\r\n08:56:06 V/InstrumentationResultParser: Version: 3 (0x2)\r\n08:56:06 V/InstrumentationResultParser: Serial Number:\r\n08:56:06 V/InstrumentationResultParser: 04:e1:e7:a4:dc:5c:f2:f3:6d:c0:2b:42:b8:5d:15:9f\r\n08:56:06 V/InstrumentationResultParser: Signature Algorithm: sha256WithRSAEncryption\r\n08:56:06 V/InstrumentationResultParser: Issuer: C=US, O=DigiCert Inc, OU=www.digicert.com, CN=DigiCert High Assurance EV Root CA\r\n08:56:06 V/InstrumentationResultParser: Validity\r\n08:56:06 V/InstrumentationResultParser: Not Before: Oct 22 12:00:00 2013 GMT\r\n08:56:06 V/InstrumentationResultParser: Not After : Oct 22 12:00:00 2028 GMT\r\n08:56:06 V/InstrumentationResultParser: Subject: C=US, O=DigiCert Inc, OU=www.digicert.com, CN=DigiCert SHA2 High Assurance Server CA\r\n08:56:06 V/InstrumentationResultParser: Subject Public Key Info:\r\n08:56:06 V/InstrumentationResultParser: Public Key Algorithm: rsaEncryption\r\n08:56:06 V/InstrumentationResultParser: Public-Key: (2048 bit)\r\n08:56:06 V/InstrumentationResultParser: Modulus:\r\n08:56:06 V/InstrumentationResultParser: 00:b6:e0:2f:c2:24:06:c8:6d:04:5f:d7:ef:0a:64:\r\n08:56:06 V/InstrumentationResultParser: 06:b2:7d:22:26:65:16:ae:42:40:9b:ce:dc:9f:9f:\r\n08:56:06 V/InstrumentationResultParser: 76:07:3e:c3:30:55:87:19:b9:4f:94:0e:5a:94:1f:\r\n08:56:06 V/InstrumentationResultParser: 55:56:b4:c2:02:2a:af:d0:98:ee:0b:40:d7:c4:d0:\r\n08:56:06 V/InstrumentationResultParser: 3b:72:c8:14:9e:ef:90:b1:11:a9:ae:d2:c8:b8:43:\r\n08:56:06 V/InstrumentationResultParser: 3a:d9:0b:0b:d5:d5:95:f5:40:af:c8:1d:ed:4d:9c:\r\n08:56:06 V/InstrumentationResultParser: 5f:57:b7:86:50:68:99:f5:8a:da:d2:c7:05:1f:a8:\r\n08:56:06 V/InstrumentationResultParser: 97:c9:dc:a4:b1:82:84:2d:c6:ad:a5:9c:c7:19:82:\r\n08:56:06 V/InstrumentationResultParser: a6:85:0f:5e:44:58:2a:37:8f:fd:35:f1:0b:08:27:\r\n08:56:06 V/InstrumentationResultParser: 32:5a:f5:bb:8b:9e:a4:bd:51:d0:27:e2:dd:3b:42:\r\n08:56:06 V/InstrumentationResultParser: 33:a3:05:28:c4:bb:28:cc:9a:ac:2b:23:0d:78:c6:\r\n08:56:06 V/InstrumentationResultParser: 7b:e6:5e:71:b7:4a:3e:08:fb:81:b7:16:16:a1:9d:\r\n08:56:06 V/InstrumentationResultParser: 23:12:4d:e5:d7:92:08:ac:75:a4:9c:ba:cd:17:b2:\r\n08:56:06 V/InstrumentationResultParser: 1e:44:35:65:7f:53:25:39:d1:1c:0a:9a:63:1b:19:\r\n08:56:06 V/InstrumentationResultParser: 92:74:68:0a:37:c2:c2:52:48:cb:39:5a:a2:b6:e1:\r\n08:56:06 V/InstrumentationResultParser: 5d:c1:dd:a0:20:b8:21:a2:93:26:6f:14:4a:21:41:\r\n08:56:06 V/InstrumentationResultParser: c7:ed:6d:9b:f2:48:2f:f3:03:f5:a2:68:92:53:2f:\r\n08:56:06 V/InstrumentationResultParser: 5e:e3\r\n08:56:06 V/InstrumentationResultParser: Exponent: 65537 (0x10001)\r\n08:56:06 V/InstrumentationResultParser: X509v3 extensions:\r\n08:56:06 V/InstrumentationResultParser: X509v3 Basic Constraints: critical\r\n08:56:06 V/InstrumentationResultParser: CA:TRUE, pathlen:0\r\n08:56:06 V/InstrumentationResultParser: X509v3 Key Usage: critical\r\n08:56:06 V/InstrumentationResultParser: Digital Signature, Certificate Sign, CRL Sign\r\n08:56:06 V/InstrumentationResultParser: X509v3 Extended Key Usage:\r\n08:56:06 V/InstrumentationResultParser: TLS Web Server Authentication, TLS Web Client Authentication\r\n08:56:06 V/InstrumentationResultParser: Authority Information Access:\r\n08:56:06 V/InstrumentationResultParser: OCSP - URI:http://ocsp.digicert.com\r\n08:56:06 V/InstrumentationResultParser:\r\n08:56:06 V/InstrumentationResultParser: X509v3 CRL Distribution Points:\r\n08:56:06 V/InstrumentationResultParser:\r\n08:56:06 V/InstrumentationResultParser: Full Name:\r\n08:56:06 V/InstrumentationResultParser: URI:http://crl4.digicert.com/DigiCertHighAssuranceEVRootCA.crl\r\n08:56:06 V/InstrumentationResultParser:\r\n08:56:06 V/InstrumentationResultParser: X509v3 Certificate Policies:\r\n08:56:06 V/InstrumentationResultParser: Policy: X509v3 Any Policy\r\n08:56:06 V/InstrumentationResultParser: CPS: https://www.digicert.com/CPS\r\n08:56:06 V/InstrumentationResultParser:\r\n08:56:06 V/InstrumentationResultParser: X509v3 Subject Key Identifier:\r\n08:56:06 V/InstrumentationResultParser: 51:68:FF:90:AF:02:07:75:3C:CC:D9:65:64:62:A2:12:B8:59:72:3B\r\n08:56:06 V/InstrumentationResultParser: X509v3 Authority Key Identifier:\r\n08:56:06 V/InstrumentationResultParser: keyid:B1:3E:C3:69:03:F8:BF:47:01:D4:98:26:1A:08:02:EF:63:64:2B:C3\r\n08:56:06 V/InstrumentationResultParser:\r\n08:56:06 V/InstrumentationResultParser: Signature Algorithm: sha256WithRSAEncryption\r\n08:56:06 V/InstrumentationResultParser: 18:8a:95:89:03:e6:6d:df:5c:fc:1d:68:ea:4a:8f:83:d6:51:\r\n08:56:06 V/InstrumentationResultParser: 2f:8d:6b:44:16:9e:ac:63:f5:d2:6e:6c:84:99:8b:aa:81:71:\r\n08:56:06 V/InstrumentationResultParser: 84:5b:ed:34:4e:b0:b7:79:92:29:cc:2d:80:6a:f0:8e:20:e1:\r\n08:56:06 V/InstrumentationResultParser: 79:a4:fe:03:47:13:ea:f5:86:ca:59:71:7d:f4:04:96:6b:d3:\r\n08:56:06 V/InstrumentationResultParser: 59:58:3d:fe:d3:31:25:5c:18:38:84:a3:e6:9f:82:fd:8c:5b:\r\n08:56:06 V/InstrumentationResultParser: 98:31:4e:cd:78:9e:1a:fd:85:cb:49:aa:f2:27:8b:99:72:fc:\r\n08:56:06 V/InstrumentationResultParser: 3e:aa:d5:41:0b:da:d5:36:a1:bf:1c:6e:47:49:7f:5e:d9:48:\r\n08:56:06 V/InstrumentationResultParser: 7c:03:d9:fd:8b:49:a0:98:26:42:40:eb:d6:92:11:a4:64:0a:\r\n08:56:06 V/InstrumentationResultParser: 57:54:c4:f5:1d:d6:02:5e:6b:ac:ee:c4:80:9a:12:72:fa:56:\r\n08:56:06 V/InstrumentationResultParser: 93:d7:ff:bf:30:85:06:30:bf:0b:7f:4e:ff:57:05:9d:24:ed:\r\n08:56:06 V/InstrumentationResultParser: 85:c3:2b:fb:a6:75:a8:ac:2d:16:ef:7d:79:27:b2:eb:c2:9d:\r\n08:56:06 V/InstrumentationResultParser: 0b:07:ea:aa:85:d3:01:a3:20:28:41:59:43:28:d2:81:e3:aa:\r\n08:56:06 V/InstrumentationResultParser: f6:ec:7b:3b:77:b6:40:62:80:05:41:45:01:ef:17:06:3e:de:\r\n08:56:06 V/InstrumentationResultParser: c0:33:9b:67:d3:61:2e:72:87:e4:69:fc:12:00:57:40:1e:70:\r\n08:56:06 V/InstrumentationResultParser: f5:1e:c9:b4\r\n08:56:06 V/InstrumentationResultParser:\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.tls.BasicCertificateChainCleaner.clean(BasicCertificateChainCleaner.kt:91)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.RealConnection$connectTls$1.invoke(RealConnection.kt:376)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.RealConnection$connectTls$1.invoke(RealConnection.kt:73)\r\n08:56:06 V/InstrumentationResultParser: at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.Handshake.peerCertificates(Unknown Source:7)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.Handshake.toString(Handshake.kt:127)\r\n08:56:06 V/InstrumentationResultParser: at java.lang.String.valueOf(String.java:2924)\r\n08:56:06 V/InstrumentationResultParser: at java.lang.StringBuilder.append(StringBuilder.java:132)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.ClientRuleEventListener.secureConnectEnd(ClientRuleEventListener.kt:75)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.kt:309)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:182)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:238)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:111)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:79)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.kt:163)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:35)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:194)\r\n08:56:06 V/InstrumentationResultParser: at okhttp3.RealCall.execute(RealCall.kt:67)\r\n08:56:06 V/InstrumentationResultParser: at okhttp.android.test.OkHttpTest.get(OkHttpTest.kt:483)\r\n08:56:06 V/InstrumentationResultParser: at okhttp.android.test.OkHttpTest.testCustomTrustManager(OkHttpTest.kt:445)\r\n```", "url": "https://github.com/square/okhttp/issues/5689", "user": "yschimke", "labels": ["android", "bug"], "created": "2020-01-04 08:57:47", "closed": "2020-01-14 04:41:03", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "BC HandshakeCertificates NullPointerException", "body": "Hello,\r\n\r\nI have probably found bug in ```HandshakeCertificates.Builder```.  When I am trying to build object with client certificate the BouncyCastle ```BcKeyStoreSpi.engineSetKeyEntry``` throws NPE. I am using okhttp and okhttp-tls version 4.1.0 but even older versions acts the same way. I am able to reproduce this on multiple devices (Android 9, 8.1, 7.0). Also I have already tried to disable proguard but still it is throwing the NPE.\r\n\r\nCode\r\n```\r\nPrivateKey privateKey = KeyChain.getPrivateKey(context, certAlias);\r\nX509Certificate[] certChain = KeyChain.getCertificateChain(context, certAlias);\r\nX509Certificate mdmCert = certChain[0];\r\n\r\nHandshakeCertificates.Builder builder = new HandshakeCertificates.Builder();\r\nbuilder.addPlatformTrustedCertificates();\r\n\r\nfor (X509Certificate cert : certChain) {\r\n    builder.addTrustedCertificate(cert);\r\n}\r\n\r\nbuilder.heldCertificate(        //if this is commented then everything is ok\r\n        new HeldCertificate(\r\nnew KeyPair(\r\n        mdmCert.getPublicKey(),\r\n        privateKey\r\n),\r\nmdmCert\r\n        ),\r\n        certChain\r\n);\r\n\r\nHandshakeCertificates clientCertificates = builder.build(); //this throws exception\r\n```\r\n\r\nStacktrace\r\n```\r\nCaused by: java.security.KeyStoreException: java.lang.NullPointerException: Attempt to invoke virtual method 'int java.lang.String.length()' on a null object reference\r\n    at com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.engineSetKeyEntry(BcKeyStoreSpi.java:685)\r\n    at java.security.KeyStore.setKeyEntry(KeyStore.java:1179)\r\n    at okhttp3.tls.internal.TlsUtil.newKeyManager(TlsUtil.kt:85)\r\n    at okhttp3.tls.HandshakeCertificates$Builder.build(HandshakeCertificates.kt:144)\r\n```", "url": "https://github.com/square/okhttp/issues/5684", "user": "sonnyCZE", "labels": ["bug"], "created": "2020-01-02 14:24:39", "closed": "2020-04-11 13:34:38", "commits": {}, "ttf": 99.00027777777778, "commitsDetails": []}, {"title": "POM description is \"null\"", "body": "POM of `com.squareup.okhttp3:okhttp:4.3.0` on Maven Central repo contains:\r\n`<description>null</description>`\r\nhttps://search.maven.org/artifact/com.squareup.okhttp3/okhttp/4.3.0/jar\r\n\r\nI would rather expect something more descriptive like `An HTTP client for Android, Kotlin, and Java.`\r\nNot sure if this is caused by okhttp not providing description or some issue with plugin you are using to deploy artifacts but first trying here.", "url": "https://github.com/square/okhttp/issues/5683", "user": "koral--", "labels": ["bug"], "created": "2020-01-02 11:38:41", "closed": "2020-01-11 22:12:54", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "okhttp 4.3.0 crash with custom X509TrustManager", "body": "Android 10 specific.\r\n\r\nCustom `X509TrustManager` in use, extending from `X509ExtendedTrustManager`, installed with `OkHttpClient.Builder#sslSocketFactory()`.\r\n\r\nUpdating okhttp from 4.2.2 to 4.3.0 causes a crash when installing the trust manager:\r\n\r\n```\r\njava.lang.IllegalArgumentException: Required method checkServerTrusted(X509Certificate[], String, String, String) missing        \r\n        at android.net.http.X509TrustManagerExtensions.<init>(X509TrustManagerExtensions.java:71)\r\n        at okhttp3.internal.platform.android.Android10CertificateChainCleaner.<init>(Android10CertificateChainCleaner.kt:36)\r\n        at okhttp3.internal.platform.Android10Platform.buildCertificateChainCleaner(Android10Platform.kt:62)\r\n        at okhttp3.internal.tls.CertificateChainCleaner$Companion.get(CertificateChainCleaner.kt:42)\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.kt:735)\r\n```\r\n\r\nLooking up the commits this seems to be introduced by https://github.com/square/okhttp/commit/a41361efcb0d4ed2e7f09313c9e9fcc3d72e837b that cut down on reflective calls on the trust manager.\r\n\r\nFixed this by adding an implementation of the missing method in the custom trust manager. Note the Android platform exception message is off-by-one `String` arg.\r\n\r\n```\r\n        private X509ExtendedTrustManager delegate;\r\n        private Method checkServerTrusted;\r\n\r\n        CustomExtendedTrustManager(@NonNull X509ExtendedTrustManager delegate) {\r\n            this.delegate = delegate;\r\n\r\n            try {\r\n                checkServerTrusted = delegate.getClass().getMethod(\"checkServerTrusted\",\r\n                        X509Certificate[].class,\r\n                        String.class,\r\n                        String.class);\r\n            } catch (NoSuchMethodException ignored) {\r\n            }\r\n        }\r\n\r\n        @SuppressWarnings(\"unused\")\r\n        @Keep\r\n        public List<X509Certificate> checkServerTrusted(X509Certificate[] chain, String authType, String host) throws CertificateException {\r\n            if (checkServerTrusted == null) {\r\n                throw new CertificateException(\"checkServerTrusted(X509Certificate[], String, String) not implemented in delegate\");\r\n            }\r\n\r\n            List<X509Certificate> list;\r\n            try {\r\n                //noinspection unchecked\r\n                list = (List<X509Certificate>) checkServerTrusted.invoke(delegate, chain, authType, host);\r\n            } catch (IllegalAccessException e) {\r\n                throw new CertificateException(\"Failed to call checkServerTrusted\", e);\r\n            } catch (InvocationTargetException e) {\r\n                if (e.getCause() instanceof CertificateException) {\r\n                    throw (CertificateException) e.getCause();\r\n                }\r\n                if (e.getCause() instanceof RuntimeException) {\r\n                    throw (RuntimeException) e.getCause();\r\n                }\r\n                throw new CertificateException(\"checkServerTrusted failed\", e.getCause());\r\n            }\r\n\r\n            return list;\r\n        }\r\n```\r\n\r\nWith this in place the app is no longer crashing and not really expecting okhttp to change here. Posting this issue as a reference to others who might have the same issue.\r\n", "url": "https://github.com/square/okhttp/issues/5682", "user": "laalto", "labels": ["bug"], "created": "2020-01-02 11:24:17", "closed": "2020-01-27 01:15:33", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "App crashed while send request", "body": "12-26 11:42:44.231  2227  9958 E AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: Process: net.oneplus.weather, PID: 2227\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: java.lang.IllegalArgumentException: port out of range:-1\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat java.net.InetSocketAddress.checkPort(InetSocketAddress.java:144)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat java.net.InetSocketAddress.createUnresolved(InetSocketAddress.java:269)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat sun.net.spi.DefaultProxySelector$1.run(DefaultProxySelector.java:315)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat sun.net.spi.DefaultProxySelector$1.run(DefaultProxySelector.java:219)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat java.security.AccessController.doPrivileged(AccessController.java:43)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat sun.net.spi.DefaultProxySelector.select(DefaultProxySelector.java:218)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.f.f.a(Unknown Source:20)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.f.f.<init>(Unknown Source:34)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.f.g.<init>(Unknown Source:13)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.g.j.a(Unknown Source:22)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.g.g.a(Unknown Source:140)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.g.g.a(Unknown Source:6)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat e.a.a.f.b$b.a(Unknown Source:33)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.g.g.a(Unknown Source:140)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.g.g.a(Unknown Source:6)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.z.a(Unknown Source:94)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.z$a.b(Unknown Source:4)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat f.h0.b.run(Unknown Source:17)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n12-26 11:42:44.231  2227  9958 E AndroidRuntime: \tat java.lang.Thread.run(Thread.java:919)", "url": "https://github.com/square/okhttp/issues/5681", "user": "qqcake", "labels": ["bug"], "created": "2020-01-02 07:07:08", "closed": "2020-01-03 02:56:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ConnectionCoalescingTest.staleCoalescedConnection is flaky", "body": "https://circleci.com/gh/square/okhttp/7959\r\n\r\n```\r\nokhttp3.ConnectionCoalescingTest > staleCoalescedConnection FAILED\r\n    java.net.SocketTimeoutException: timeout\r\n        at okhttp3.internal.http2.Http2Stream$StreamTimeout.newTimeoutException(Http2Stream.kt:677)\r\n        at okhttp3.internal.http2.Http2Stream$StreamTimeout.exitAndThrowIfTimedOut(Http2Stream.kt:686)\r\n        at okhttp3.internal.http2.Http2Stream.takeHeaders(Http2Stream.kt:143)\r\n        at okhttp3.internal.http2.Http2ExchangeCodec.readResponseHeaders(Http2ExchangeCodec.kt:99)\r\n        at okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.kt:105)\r\n        at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:79)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.ConnectionCoalescingTest.lambda$staleCoalescedConnection$0(ConnectionCoalescingTest.java:139)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:37)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:194)\r\n        at okhttp3.RealCall.execute(RealCall.kt:67)\r\n        at okhttp3.ConnectionCoalescingTest.execute(ConnectionCoalescingTest.java:407)\r\n        at okhttp3.ConnectionCoalescingTest.staleCoalescedConnection(ConnectionCoalescingTest.java:150)\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/5675", "user": "swankjesse", "labels": ["bug", "tests"], "created": "2019-12-31 19:18:20", "closed": "2020-03-29 18:29:08", "commits": {}, "ttf": 88.00027777777778, "commitsDetails": []}, {"title": "Uncatchable URISyntaxException during call.enqueue", "body": "Hi!\r\n\r\nIn my app, users can set custom server URL. I tested different corner cases. For example: \"http://google.com`\" -- \\` at the end is an intentional mistake.\r\nWhen I use `call.enqueue`, `java.lang.RuntimeException: java.net.URISyntaxException` is thrown from WorkerThread. And there is no way to catch it normally. I think a perfect place is the `onFailure` method.\r\n\r\nCrash log:\r\n```\r\nException in thread \"OkHttp Dispatcher\" java.lang.RuntimeException: java.net.URISyntaxException: Illegal character in authority at index 8: https://google.com`/\r\n\tat okhttp3.HttpUrl.uri(HttpUrl.kt:419)\r\n\tat okhttp3.internal.connection.RouteSelector.resetNextProxy(RouteSelector.kt:103)\r\n\tat okhttp3.internal.connection.RouteSelector.<init>(RouteSelector.kt:53)\r\n\tat okhttp3.internal.connection.ExchangeFinder.<init>(ExchangeFinder.kt:59)\r\n\tat okhttp3.internal.connection.Transmitter.prepareToConnect(Transmitter.kt:133)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:62)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n\tat okhttp3.RealCall$AsyncCall.run(RealCall.kt:136)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.URISyntaxException: Illegal character in authority at index 8: https://google.com`/\r\n\tat java.net.URI$Parser.fail(URI.java:2848)\r\n\tat java.net.URI$Parser.parseAuthority(URI.java:3186)\r\n\tat java.net.URI$Parser.parseHierarchical(URI.java:3097)\r\n\tat java.net.URI$Parser.parse(URI.java:3053)\r\n\tat java.net.URI.<init>(URI.java:588)\r\n\tat okhttp3.HttpUrl.uri(HttpUrl.kt:412)\r\n\t... 12 more\r\n```\r\n\r\nReproducible test:\r\nhttps://gist.github.com/IvanShafran/fbf1862af945f70bddf998038cf15b25\r\n\r\nThank you :)", "url": "https://github.com/square/okhttp/issues/5667", "user": "IvanShafran", "labels": ["bug"], "created": "2019-12-27 13:03:04", "closed": "2019-12-31 19:43:34", "commits": {"e58cd26b06fe979fbaed5f28f7966221d1727025": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "283418b2bc079108cbe3599f06a4ebfa7211e319": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "e58cd26b06fe979fbaed5f28f7966221d1727025", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "283418b2bc079108cbe3599f06a4ebfa7211e319", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b9e042284b7abd34ec4e75969dc42d5d955247ad"], "nameRev": "283418b2bc079108cbe3599f06a4ebfa7211e319 tags/parent-4.3.0~3^2", "commitMessage": "Fix a crash in HttpUrl.toUri().\n\nCloses: https://github.com/square/okhttp/issues/5667\nCloses: https://github.com/square/okhttp/issues/5236\n", "commitDateTime": "2019-12-31 12:40:01", "authoredDateTime": "2019-12-31 12:31:27", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/HttpUrl.kt", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/HttpUrlTest.java", "insertions": 52, "deletions": 13, "lines": 65}, {"filePath": "okhttp/src/test/java/okhttp3/UrlComponentEncodingTester.java", "insertions": 166, "deletions": 185, "lines": 351}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["283418b2bc079108cbe3599f06a4ebfa7211e319"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 0.0, "lines": 4.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/HttpUrl.kt"]}, {"title": "EventListener 302 request", "body": "Hello\r\nI use EventListener to record network detail.But I find that if the request is a 302 request ,the EventListener has a bug like this:\r\n\r\n1. the first 302 step ,EventListener will record the detail from callStart method to callEnd method;\r\n2. but the second 200 step,EventListener only record the detail to responseBodyStart,not record call end.\r\n\r\nSo I don't know when the time a 302 request is end. I fell that is a bug. I hope get a solution to resolve this case.\r\nThank you !\r\nthe log as follows:\r\n```\r\n2019-12-26 14:22:25.702 11816-11816/com.qunar.qapm.moudle I/qapm: HttpEventListener callStart start time = 1577341345702\r\n2019-12-26 14:22:25.712 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener dns start time = 1577341345712\r\n2019-12-26 14:22:25.738 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener dns end time = 1577341345738\r\n2019-12-26 14:22:25.739 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect start time = 1577341345739\r\n2019-12-26 14:22:25.747 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener secureConnect start time = 1577341345747\r\n2019-12-26 14:22:25.785 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener secureConnect end time = 1577341345785\r\n2019-12-26 14:22:25.787 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect end time = 1577341345787\r\n2019-12-26 14:22:25.787 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect Acquired  time = 1577341345787\r\n2019-12-26 14:22:25.788 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener request header start  time = 1577341345788\r\n2019-12-26 14:22:25.789 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener request header end  time = 1577341345789\r\n2019-12-26 14:22:25.789 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener response header start  time = 1577341345789\r\n2019-12-26 14:22:25.799 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener response header end  time = 1577341345799,code = 302,isRedirect = true\r\n2019-12-26 14:22:25.799 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener response body start  time = 1577341345799\r\n2019-12-26 14:22:25.800 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener response body end  time = 1577341345800\r\n2019-12-26 14:22:25.800 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect release  time = 1577341345800\r\n2019-12-26 14:22:25.800 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener call  end  time = 1577341345800\r\n2019-12-26 14:22:25.801 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect Acquired  time = 1577341345801\r\n2019-12-26 14:22:25.801 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener request header start  time = 1577341345801\r\n2019-12-26 14:22:25.802 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect release  time = 1577341345802\r\n2019-12-26 14:22:25.802 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener dns start time = 1577341345802\r\n2019-12-26 14:22:25.809 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener dns end time = 1577341345809\r\n2019-12-26 14:22:25.810 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect start time = 1577341345810\r\n2019-12-26 14:22:25.813 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener secureConnect start time = 1577341345813\r\n2019-12-26 14:22:25.836 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener secureConnect end time = 1577341345836\r\n2019-12-26 14:22:25.838 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect end time = 1577341345838\r\n2019-12-26 14:22:25.838 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener connect Acquired  time = 1577341345838\r\n2019-12-26 14:22:25.838 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener request header start  time = 1577341345838\r\n2019-12-26 14:22:25.840 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener request header end  time = 1577341345840\r\n2019-12-26 14:22:25.841 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener response header start  time = 1577341345841\r\n2019-12-26 14:22:25.935 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener response header end  time = 1577341345935,code = 200,isRedirect = false\r\n2019-12-26 14:22:25.935 11816-12738/com.qunar.qapm.moudle I/qapm: HttpEventListener response body start  time = 1577341345935\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/5666", "user": "gaodengjiaoyu", "labels": ["bug"], "created": "2019-12-26 06:26:59", "closed": "2019-12-26 07:35:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Content-Type header in multipart does not contain required parameter boundary", "body": "RFC: https://tools.ietf.org/html/rfc7578#appendix-A\r\n\r\nRelated Comment and issue: https://github.com/django/channels/issues/1386#issuecomment-568215439\r\nhttps://twistedmatrix.com/trac/ticket/9739\r\n\r\n### Background: \r\n\r\nConsider a multipart request as such:\r\n\r\nBody:\r\n```\r\n--d66f495a-c4d1-487c-9277-9ab1a20001cc\r\nContent-Disposition: form-data; name=\"content\"\r\nContent-Type: multipart/form-data; charset=utf-8\r\n\r\nAnything\r\n--d66f495a-c4d1-487c-9277-9ab1a20001cc--\r\n```\r\n\r\nHeader:\r\n`Content-Type: multipart/form-data; boundary=d66f495a-c4d1-487c-9277-9ab1a20001cc`\r\n\r\nA new change in Python 3.7 considers this request multipart header as invalid, which according to @twm is not compliant with the latest change in the RFC (2015).\r\n\r\nHence, on new Python versions, when the request is parsed, it tries to get the boundary from the multipart body `Content-Type` header and it returns empty string since there is none, and throws saying that is is `Invalid Boundary`\r\n ", "url": "https://github.com/square/okhttp/issues/5660", "user": "iamareebjamal", "labels": ["bug"], "created": "2019-12-21 23:58:40", "closed": "2020-02-14 03:21:38", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "Transparent gzip not working", "body": "okhttp doesn't transparently ungzip reponse, and I didn't manually add \"Accept-Encoding\" with value \"gzip\", as suggested here: https://github.com/square/okhttp/issues/2132#issuecomment-169500736\r\n\r\nMy response/request looks like this\r\n\r\nREQUEST:\r\nRequest URL:XXXXX\r\nRequest Method:GET\r\nStatus Code:200 OK\r\nProvisional headers are shown\r\nAccept-Encoding:gzip\r\nAuthorization:Token token=XXXXX\r\nConnection:Keep-Alive\r\nHost:XXXXX\r\nUser-Agent:okhttp/4.2.2\r\n\r\nRESPONSE:\r\nCache-Control:max-age=0, private, must-revalidate\r\nConnection:keep-alive\r\nContent-Encoding:gzip\r\nContent-Type:text/plain; charset=utf-8\r\nDate:Sat, 21 Dec 2019 14:02:51 GMT\r\nETag:W/\"eb678bc2878357cc263335b7b5204006\"\r\nServer:nginx\r\nTransfer-Encoding:chunked\r\nX-Content-Type-Options:nosniff\r\nX-Frame-Options:SAMEORIGIN\r\nX-Powered-By:cloud66\r\nX-Request-Id:f340d09a-4fab-4905-b6c7-eeffc93fe30c\r\nX-Runtime:7.171759\r\nX-XSS-Protection:1; mode=block\r\n\r\nNote that Accept-Encoding:gzip was added automatically, not by me. The only header I have specified is Authorization.\r\n\r\nI have implemented manual ungzipping in the interceptor, and it works, but I'm wondering, why doesn't okhttp does ungzipping it on it's own?", "url": "https://github.com/square/okhttp/issues/5658", "user": "Hajzenberg", "labels": ["bug", "needs info"], "created": "2019-12-21 14:27:51", "closed": "2020-01-01 18:57:33", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "MockWebServer shutdown is not idempotent", "body": "We enqueue a task to await idle, and that fails.\r\n```\r\njava.util.concurrent.RejectedExecutionException: Task okhttp3.internal.concurrent.TaskRunner$runnable$1@83b95cb rejected from java.util.concurrent.ThreadPoolExecutor@7848d4ed[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 2]\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2055)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:825)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1355)\r\n\tat okhttp3.internal.concurrent.TaskRunner$RealBackend.execute(TaskRunner.kt:298)\r\n\tat okhttp3.internal.concurrent.TaskRunner.kickCoordinator$okhttp(TaskRunner.kt:91)\r\n\tat okhttp3.internal.concurrent.TaskQueue.awaitIdle(TaskQueue.kt:118)\r\n\tat okhttp3.mockwebserver.MockWebServer.shutdown(MockWebServer.kt:451)\r\n\tat okhttp3.mockwebserver.MockWebServer.after(MockWebServer.kt:460)\r\n``", "url": "https://github.com/square/okhttp/issues/5657", "user": "swankjesse", "labels": ["bug"], "created": "2019-12-20 19:13:19", "closed": "2020-04-13 05:50:59", "commits": {}, "ttf": 114.00027777777778, "commitsDetails": []}, {"title": "Certificate pinning for retrofit does not work through an exception even when a broken configuration is set", "body": "Hi, \r\nwe have an implementation in which we could not get the certificate pinning exception even when a broken configuration pin is set.  Attached our sample executable code snippet below. Please give us pointers or anything new code implementation is required.\r\n\r\n```\r\nprivate static CertificatePinner getCertificate() {\r\n        CertificatePinner certificatePinner = null;\r\n        String pattern = Constants.APP_BASE_URL;\r\n         certificatePinner = new CertificatePinner.Builder()\r\n                        .add(pattern, \"sha256/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\")\r\n                        .build();          \r\n        return certificatePinner;\r\n    }\r\n\r\n static final OkHttpClient okHttpClient = new OkHttpClient.Builder()\r\n            .connectTimeout(30, TimeUnit.SECONDS)\r\n            .writeTimeout(30, TimeUnit.SECONDS)\r\n            .readTimeout(30, TimeUnit.SECONDS)\r\n            .certificatePinner(getCertificate())\r\n            .build();\r\n\r\n public static Retrofit getClient(Context context, String apiBaseUrl) throws \r\n   IllegalArgumentException {\r\n        Log.d(\"Apiclient getClient()\", apiBaseUrl);\r\n        if (apiBaseUrl != null) {\r\n            if (retrofit == null) {\r\n                retrofit = new Retrofit.Builder()\r\n                        .client(okHttpClient)\r\n                        .baseUrl(apiBaseUrl)\r\n                        .addConverterFactory(GsonConverterFactory.create())\r\n                        .build();\r\n            }\r\n        }\r\n        return retrofit;\r\n    }\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/5652", "user": "Anilkumar18", "labels": ["bug", "stackoverflow"], "created": "2019-12-17 14:31:51", "closed": "2019-12-19 09:59:51", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "java.lang.ArrayIndexOutOfBoundsException: size=1021 offset=0 byteCount=-791501174879550467", "body": "com.squareup.okhttp3:okhttp:3.11.0\r\n\r\ndevice\uff1aoppo\u3001vivo 97% huawei:ALE-UL00 3.0%\r\nAndroid system version:\r\noppo+vivo 6.0.1; huawei:6.0.0\r\n\r\n\r\n\r\njava.lang.ArrayIndexOutOfBoundsException: size=1021 offset=0 byteCount=-791501174879550467\r\n\tat okio.Util.checkOffsetAndCount(Util.java:30)\r\n\tat okio.Buffer.write(Buffer.java:1275)\r\n\tat okio.RealBufferedSink.write(RealBufferedSink.java:41)\r\n\tat okhttp3.internal.http2.Http2Writer.headers(Http2Writer.java:307)\r\n\tat okhttp3.internal.http2.Http2Writer.synStream(Http2Writer.java:127)\r\n\tat okhttp3.internal.http2.Http2Connection.newStream(Http2Connection.java:258)\r\n\tat okhttp3.internal.http2.Http2Connection.newStream(Http2Connection.java:230)\r\n\tat okhttp3.internal.http2.Http2Codec.writeRequestHeaders(Http2Codec.java:113)\r\n\tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:50)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat com.facebook.react.modules.network.NetworkingModule$1.intercept(NetworkingModule.java:291)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n\tat okhttp3.RealCall$AsyncCall.execute(RealCall.java:147)\r\n\tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n\tat java.lang.Thread.run(Thread.java:818)", "url": "https://github.com/square/okhttp/issues/5651", "user": "HMY314", "labels": ["bug"], "created": "2019-12-17 11:31:34", "closed": "2019-12-20 01:37:57", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "java.lang.IllegalArgumentException: byteCount < 0: -4114004776037900288", "body": "com.squareup.okhttp3:okhttp:3.11.0\r\n\r\ndevice\uff1aoppo\u3001vivo 98.3%    huawei:ALE-UL00 1.7%\r\nAndroid system version:  \r\noppo+vivo 6.0.1; huawei:6.0.0\r\n\r\n\r\n\r\njava.lang.IllegalArgumentException: byteCount < 0: -4114004776037900288\r\n\tat okio.Okio$2.read(Okio.java:134)\r\n\tat okio.AsyncTimeout$2.read(AsyncTimeout.java:237)\r\n\tat okio.RealBufferedSource.request(RealBufferedSource.java:68)\r\n\tat okio.RealBufferedSource.require(RealBufferedSource.java:61)\r\n\tat okhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.java:95)\r\n\tat okhttp3.internal.http2.Http2Reader.readConnectionPreface(Http2Reader.java:80)\r\n\tat okhttp3.internal.http2.Http2Connection$ReaderRunnable.execute(Http2Connection.java:608)\r\n\tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n\tat java.lang.Thread.run(Thread.java:818)\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5650", "user": "HMY314", "labels": ["bug"], "created": "2019-12-17 11:28:50", "closed": "2019-12-17 20:27:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Apps crash on OkHttp  (serious problem\uff01)", "body": "The problem arises after booting up the Android P device.\r\nThis bug caused lots of Apps which use OkHttp library to connect to their servers crashed.\r\nIt is a low probability of random events.\r\n\r\n```\r\n--------- beginning of crash\r\n12-10 16:44:33.267 1319 1375 F libc : Fatal signal 4 (SIGILL), code 1 (ILL_ILLOPC), fault addr 0x72ac593a in tid 1375 (Thread-7), pid 1319 (com.xxx.xxxxx)\r\n12-10 16:44:33.401 1382 1382 F DEBUG : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n12-10 16:44:33.401 1382 1382 F DEBUG : Build fingerprint: 'xxxxx:9/PPR2.180905.006.A1/xxxxxxxxx12052144:userdebug/dev-keys'\r\n12-10 16:44:33.401 1382 1382 F DEBUG : Revision: '1234'\r\n12-10 16:44:33.401 1382 1382 F DEBUG : ABI: 'arm'\r\n12-10 16:44:33.401 1382 1382 F DEBUG : pid: 1319, tid: 1375, name: Thread-7 >>> com.xxx.xxxxx <<<\r\n12-10 16:44:33.401 1382 1382 F DEBUG : signal 4 (SIGILL), code 1 (ILL_ILLOPC), fault addr 0x72ac593a\r\n12-10 16:44:33.401 1382 1382 F DEBUG : r0 00000001 r1 70d26df0 r2 70d26df0 r3 00000004\r\n12-10 16:44:33.401 1382 1382 F DEBUG : r4 00000000 r5 13204438 r6 70d26df0 r7 70d26df0\r\n12-10 16:44:33.401 1382 1382 F DEBUG : r8 00000000 r9 e65c9c00 r10 70d26df0 r11 000001bb\r\n12-10 16:44:33.401 1382 1382 F DEBUG : ip 00000000 sp ce478b50 lr 72ac589f pc 72ac593a\r\n12-10 16:44:33.453 1382 1382 F DEBUG :\r\n12-10 16:44:33.453 1382 1382 F DEBUG : backtrace:\r\n12-10 16:44:33.453 1382 1382 F DEBUG : #00 pc 0002593a /system/framework/arm/boot-okhttp.oat (offset 0x1a000) (com.android.okhttp.HttpUrl$Builder.scheme+250)\r\n12-10 16:44:33.453 1382 1382 F DEBUG : #01 pc 0001c2e3 /system/framework/arm/boot-okhttp.oat (offset 0x1a000) (com.android.okhttp.Address.<init>+218)\r\n12-10 16:44:33.453 1382 1382 F DEBUG : #02 pc 00032de3 /system/framework/arm/boot-okhttp.oat (offset 0x1a000) (com.android.okhttp.internal.http.HttpEngine.createAddress+426)\r\n12-10 16:44:33.453 1382 1382 F DEBUG : 0000003 pc 000323a7 /system/framework/arm/boot-okhttp.oat (offset 0x1a000) (com.android.okhttp.internal.http.HttpEngine.<init>+166)\r\n12-10 16:44:33.453 1382 1382 F DEBUG : 0000004 pc 0003b8c7 /system/framework/arm/boot-okhttp.oat (offset 0x1a000) (com.android.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine+1398)\r\n12-10 16:44:33.454 1382 1382 F DEBUG : 0000005 pc 0003b2ed /system/framework/arm/boot-okhttp.oat (offset 0x1a000) (com.android.okhttp.internal.huc.HttpURLConnectionImpl.initHttpEngine+420)\r\n12-10 16:44:33.454 1382 1382 F DEBUG : 0000006 pc 0003c673 /system/framework/arm/boot-okhttp.oat (offset 0x1a000) (com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream+42)\r\n12-10 16:44:33.454 1382 1382 F DEBUG : 0000007 pc 00043e87 /system/framework/arm/boot-okhttp.oat (offset 0x1a000) (com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getOutputStream+54)\r\n```", "url": "https://github.com/square/okhttp/issues/5649", "user": "ZaneCui", "labels": ["bug"], "created": "2019-12-16 03:20:38", "closed": "2019-12-16 04:17:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "404", "body": "\u670d\u52a1\u5668\u65b0\u589e\u52a0\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u8bbf\u95ee\u65f6\u62a5404\uff0c\u4f46\u662f\u5728\u6d4f\u89c8\u5668\u91cc\u9762\u53c8\u8bbf\u95ee\u6b63\u5e38\r\n![\u56fe\u7247](https://user-images.githubusercontent.com/10388320/70846657-9d3a6900-1e96-11ea-9f97-1e9dd316d7d7.png)\r\n![\u56fe\u7247](https://user-images.githubusercontent.com/10388320/70846715-fc987900-1e96-11ea-8b4e-0d06fd385e83.png)\r\n![\u56fe\u7247](https://user-images.githubusercontent.com/10388320/70846683-cb1fad80-1e96-11ea-94d6-e4750fcd3cf8.png)\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5648", "user": "tangzhulong", "labels": ["bug"], "created": "2019-12-14 09:27:29", "closed": "2019-12-14 09:49:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Socket exception when getting the response", "body": "We are using OKHTTP3 .\r\n\r\nOur code looks like below.\r\n\r\n  Response okHttpResponse = client.newCall(request).execute();\r\n\r\nAfter getting the response, we have executed the below logic.\r\n\r\n**response.body().string()**\r\n\r\nThe above line code ending up with the exception stating socket is closed without returning the response back\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5643", "user": "ramkumarnn", "labels": ["bug", "stackoverflow"], "created": "2019-12-12 06:55:40", "closed": "2019-12-12 09:01:14", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OkHttpClient.Builder.protocols() doesn't remove SPDY_3", "body": "", "url": "https://github.com/square/okhttp/issues/5629", "user": "dmgd", "labels": ["bug"], "created": "2019-12-03 18:17:26", "closed": "2019-12-04 04:39:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Attempt to invoke virtual method 'boolean com.android.org.conscrypt.SslWrapper.isClosed()", "body": "### Error Code\r\nE/System: Uncaught exception thrown by finalizer\r\nE/System: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean com.android.org.conscrypt.SslWrapper.isClosed()' on a null object reference\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.free(ConscryptFileDescriptorSocket.java:1015)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.finalize(ConscryptFileDescriptorSocket.java:1043)\r\n        at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:250)\r\n        at java.lang.Daemons$FinalizerDaemon.runInternal(Daemons.java:237)\r\n        at java.lang.Daemons$Daemon.run(Daemons.java:103)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n    Uncaught exception thrown by finalizer\r\nE/System: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean com.android.org.conscrypt.SslWrapper.isClosed()' on a null object reference\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.free(ConscryptFileDescriptorSocket.java:1015)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.finalize(ConscryptFileDescriptorSocket.java:1043)\r\n        at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:250)\r\n        at java.lang.Daemons$FinalizerDaemon.runInternal(Daemons.java:237)\r\n        at java.lang.Daemons$Daemon.run(Daemons.java:103)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n    Uncaught exception thrown by finalizer\r\nE/System: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean com.android.org.conscrypt.SslWrapper.isClosed()' on a null object reference\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.free(ConscryptFileDescriptorSocket.java:1015)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.finalize(ConscryptFileDescriptorSocket.java:1043)\r\n        at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:250)\r\n        at java.lang.Daemons$FinalizerDaemon.runInternal(Daemons.java:237)\r\n        at java.lang.Daemons$Daemon.run(Daemons.java:103)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n\r\n### Our Java Version\r\njava version \"13.0.1\" 2019-10-15\r\nJava(TM) SE Runtime Environment (build 13.0.1+9)\r\n\r\n### this is our code : \r\nhttps://github.com/jeffrywu28/Petrachat-master/blob/master/app/src/main/java/com/petra/petrachat/Petrachat.java\r\n\r\ni think the offline capabilities is not working.\r\nin our code=\r\nmUserDatabase.keepSynced(true);\r\nand\r\n builder.downloader(new OkHttpDownloader(this, Integer.MAX_VALUE));\r\n\r\nhelp me please..\r\n", "url": "https://github.com/square/okhttp/issues/5625", "user": "jeffrywu28", "labels": ["bug"], "created": "2019-11-29 18:00:13", "closed": "2019-12-07 02:53:35", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Problem with POST mixed with GET parameters", "body": "Hi, im having problem when i generate a POST Request and the url have GET parameters after execute the request i found that in the request in response the method is marked as GET.\r\nAny aidea how to avoid this problem?", "url": "https://github.com/square/okhttp/issues/5624", "user": "raulhaag", "labels": ["bug"], "created": "2019-11-29 14:09:25", "closed": "2019-11-29 14:21:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "callEnd and callFailed executed in a request", "body": "43:0.000-callStart;0.001-connectionAcquired;0.002-requestHeadersStart;0.003-requestHeadersEnd;0.003-responseHeadersStart;10.005-connectionReleased;10.005-callEnd;10.006-callFailed;\r\n\r\ncom.squareup.okhttp3:okhttp:3.11.0", "url": "https://github.com/square/okhttp/issues/5621", "user": "lyqaiym", "labels": ["bug", "needs info", "stackoverflow"], "created": "2019-11-29 06:48:01", "closed": "2019-11-29 07:15:56", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Hello All , I got an strange issue related to okhttp3 while requesting the network call in webservices . I am stuck here and  I am not able to make the network request , Below is the log of error .", "body": "11-29 11:32:16.082 30319-31012/cashpay.com.np V/NativeCrypto: SSL handshake aborted: ssl=0x55bce8b658: Failure in SSL library, usually a protocol error\r\n    error:100000f7:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER (third_party/openssl/boringssl/src/ssl/tls_record.cc:242 0x7f5d0eb1bb:0x00000000)\r\n11-29 11:32:16.095 30319-31012/cashpay.com.np W/System.err: javax.net.ssl.SSLHandshakeException: Handshake failed\r\n11-29 11:32:16.096 30319-31012/cashpay.com.np W/System.err:     at com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(:com.google.android.gms@19629021@19.6.29 (040408-278422107):38)\r\n11-29 11:32:16.096 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:320)\r\n11-29 11:32:16.096 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\r\n11-29 11:32:16.096 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\r\n11-29 11:32:16.096 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n11-29 11:32:16.096 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n11-29 11:32:16.096 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n11-29 11:32:16.096 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at cashpay.com.np.di.UnsafeOkHttpClient.lambda$getUnsafeOkHttpClient$0(UnsafeOkHttpClient.java:110)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at cashpay.com.np.di.-$$Lambda$UnsafeOkHttpClient$nB91zahuIhOW6vTGloPQYo6GBfQ.intercept(lambda)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11-29 11:32:16.097 30319-31012/cashpay.com.np W/System.err:     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:264)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at okhttp3.RealCall.execute(RealCall.java:93)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at retrofit2.OkHttpCall.execute(OkHttpCall.java:188)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at com.jakewharton.retrofit2.adapter.rxjava2.CallObservable.subscribeActual(CallObservable.java:41)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.Observable.subscribe(Observable.java:12036)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:579)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:154)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:269)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n11-29 11:32:16.098 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n11-29 11:32:16.099 30319-31012/cashpay.com.np W/System.err:     at java.lang.Thread.run(Thread.java:818)\r\n11-29 11:32:16.099 30319-31012/cashpay.com.np W/System.err: Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x55bce8b658: Failure in SSL library, usually a protocol error\r\n11-29 11:32:16.099 30319-31012/cashpay.com.np W/System.err: error:100000f7:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER (third_party/openssl/boringssl/src/ssl/tls_record.cc:242 0x7f5d0eb1bb:0x00000000)\r\n11-29 11:32:16.099 30319-31012/cashpay.com.np W/System.err:     at com.google.android.gms.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\r\n11-29 11:32:16.099 30319-31012/cashpay.com.np W/System.err:     at com.google.android.gms.org.conscrypt.NativeSsl.doHandshake(:com.google.android.gms@19629021@19.6.29 (040408-278422107):6)\r\n11-29 11:32:16.099 30319-31012/cashpay.com.np W/System.err:     at com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(:com.google.android.gms@19629021@19.6.29 (040408-278422107):14)\r\n11-29 11:32:16.099 30319-31012/cashpay.com.np W/System.err: \t... 36 more\r\n11-29 11:32:16.177 30319-31012/cashpay.com.np V/NativeCrypto: SSL handshake aborted: ssl=0x55bd011e78: Failure in SSL library, usually a protocol error\r\n    error:100000f7:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER (third_party/openssl/boringssl/src/ssl/tls_record.cc:242 0x7f5d0eb1bb:0x00000000)\r\n11-29 11:32:18.221 30319-31012/cashpay.com.np V/NativeCrypto: SSL handshake aborted: ssl=0x55bcfe0788: Failure in SSL library, usually a protocol error\r\n    error:100000f7:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER (third_party/openssl/boringssl/src/ssl/tls_record.cc:242 0x7f5d0eb1bb:0x00000000)\r\n11-29 11:32:18.222 30319-31012/cashpay.com.np W/System.err: javax.net.ssl.SSLHandshakeException: Handshake failed\r\n11-29 11:32:18.222 30319-31012/cashpay.com.np W/System.err:     at com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(:com.google.android.gms@19629021@19.6.29 (040408-278422107):38)\r\n11-29 11:32:18.222 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:320)\r\n11-29 11:32:18.222 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\r\n11-29 11:32:18.222 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at cashpay.com.np.di.UnsafeOkHttpClient.lambda$getUnsafeOkHttpClient$0(UnsafeOkHttpClient.java:110)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at cashpay.com.np.di.-$$Lambda$UnsafeOkHttpClient$nB91zahuIhOW6vTGloPQYo6GBfQ.intercept(lambda)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:264)\r\n11-29 11:32:18.223 30319-31012/cashpay.com.np W/System.err:     at okhttp3.RealCall.execute(RealCall.java:93)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at retrofit2.OkHttpCall.execute(OkHttpCall.java:188)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at com.jakewharton.retrofit2.adapter.rxjava2.CallObservable.subscribeActual(CallObservable.java:41)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.Observable.subscribe(Observable.java:12036)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:579)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:154)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:269)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err:     at java.lang.Thread.run(Thread.java:818)\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err: Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x55bcfe0788: Failure in SSL library, usually a protocol error\r\n11-29 11:32:18.224 30319-31012/cashpay.com.np W/System.err: error:100000f7:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER (third_party/openssl/boringssl/src/ssl/tls_record.cc:242 0x7f5d0eb1bb:0x00000000)\r\n11-29 11:32:18.225 30319-31012/cashpay.com.np W/System.err:     at com.google.android.gms.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\r\n11-29 11:32:18.225 30319-31012/cashpay.com.np W/System.err:     at com.google.android.gms.org.conscrypt.NativeSsl.doHandshake(:com.google.android.gms@19629021@19.6.29 (040408-278422107):6)\r\n11-29 11:32:18.225 30319-31012/cashpay.com.np W/System.err:     at com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(:com.google.android.gms@19629021@19.6.29 (040408-278422107):14)\r\n11-29 11:32:18.225 30319-31012/cashpay.com.np W/System.err: \t... 36 more\r\n11-29 11:32:18.242 30319-31012/cashpay.com.np V/NativeCrypto: SSL handshake aborted: ssl=0x55bcff8408: Failure in SSL library, usually a protocol error\r\n    error:100000f7:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER (third_party/openssl/boringssl/src/ssl/tls_record.cc:242 0x7f5d0eb1bb:0x00000000)\r\n", "url": "https://github.com/square/okhttp/issues/5620", "user": "Kedar-jirel", "labels": ["android", "bug", "needs info", "stackoverflow"], "created": "2019-11-29 05:50:07", "closed": "2019-11-29 07:19:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cannot iterate on Headers in Java 11 + JPMS", "body": "Trying to iterate over a `Headers` instance does not work when using plain Java 11 and JPMS.\r\n\r\nThe reason is that `Headers implements Iterator<kotlin.Pair>` and `kotlin.Pair` is not available to JPMS.\r\n\r\nThis works fine in Java 8 (as the Kotlin stdlib ends up in the classpath), but does not work when using Java 11 and proper JPMS modules, because the application class that iterates over the `Headers` would need to JPMS-_read_ `kotlin.Pair`, which would require a directive in the application `module-info.java`.\r\nUnfortunately the Kotlin stdlib does not support JPMS (no `Automatic-Module-Name` in the manifest, no `module-info.class` in the jar), so that leaves the application relying on automatic modules with unstable module names.\r\n\r\nThis can be worked around iterating using `Headers.names()` and `Headers.values(name)`.\r\n\r\nFTR, I encountered this problem in [CometD 6](https://github.com/cometd/cometd/tree/6.0.x) which is based on Java 11 and JPMS.", "url": "https://github.com/square/okhttp/issues/5617", "user": "sbordet", "labels": ["bug"], "created": "2019-11-27 19:40:49", "closed": "2019-12-07 02:59:42", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "java.lang.NoClassDefFoundError: okhttp3/internal/platform/Platform", "body": "\r\nThe version of OkHttp I am using is 3.14.4. Some exceptions occur on some Android 4.4 models.\r\n\r\n\r\n    java.lang.NoClassDefFoundError: okhttp3/internal/platform/Platform\r\n        at okhttp3.internal.tls.CertificateChainCleaner.get(CertificateChainCleaner.java:41)\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:782)", "url": "https://github.com/square/okhttp/issues/5613", "user": "10045125", "labels": ["bug"], "created": "2019-11-22 10:06:02", "closed": "2019-11-25 04:18:04", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "400 status code ,when query a url..", "body": "here is the questioned code:\r\n\r\nString urlStr = \"http://www.baidu.com/?albumTitle=\u6bcf\u59293\u5206\u949f|abc\";\r\n Request.Builder builder = new Request.Builder().url(urlStr);\r\n\r\nthe \"url\" in the \"builder\" should be \r\n\r\nhttp://www.baidu.com/?albumTitle=%E6%AF%8F%E5%A4%A93%E5%88%86%E9%92%9F%7Cabc\r\n\r\nbut , in factly, the \"url\" is \r\nhttp://www.baidu.com/?\r\nalbumTitle=%E6%AF%8F%E5%A4%A93%E5%88%86%E9%92%9F|abc\r\n\r\nwhich , in result, the different is \r\n\"|\" cannot be encoder to %7C, which is an ascii num.\r\n\r\nso\u3002I trace the code.find:\r\n\"HttpUrl.parse\" . use \"QUERY_ENCODE_SET\" which define the special characters, but the set only contains \"\" \\\"'<>#\"\", which didn`t include \"|\",so I thought it`s the reason which \"|\" cannot be URLEncoded.\r\n\r\nfinnaly.\r\ncould you add \"|\" into the \"HttpUrl. QUERY_ENCODE_SET\"? so special character could encoded to ascii. and the Server can recognize it.\r\n\r\nthank you.!!\r\n", "url": "https://github.com/square/okhttp/issues/5610", "user": "daBisNewBee", "labels": ["bug"], "created": "2019-11-20 03:15:12", "closed": "2019-11-20 04:36:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Okhttp3 Thread pool problem", "body": "Excuse me.I used okhttp as the network forwarding. The peak time of TPS is about 10000. I simulated the network and sent it 10,000 times. \r\nTest case :\r\nfor(int i = 0; i < 10000; i++)}{\r\n/ / okhttp3 forward\r\n}\r\n I then looked at the number of threads using Java visualvm and found that the number of threads was increasing and approaching the number of requests. As an android network request, this may not be a problem, but as a Java application making a request, the number of sending threads will be high at some point.Too many threads cause the application to process slowly.\r\nOkhttp3 version is 3.11.0\r\nJdk version is 1.7", "url": "https://github.com/square/okhttp/issues/5609", "user": "xh520md", "labels": ["bug"], "created": "2019-11-18 07:45:31", "closed": "2019-11-18 12:20:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fatal Exception: java.util.NoSuchElementException", "body": "Hey, some of users getting this weird crash.\r\n\r\nThe crash stack trace from crashlytics:\r\n\r\n` Fatal Exception: java.util.NoSuchElementException at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:75) at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:187) at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:107) at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:87) at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169) at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) at .network.ConnectivityInterceptor.intercept(ConnectivityInterceptor.java:20) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:221) at okhttp3.RealCall$AsyncCall.execute(RealCall.java:172) at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636) at java.lang.Thread.run(Thread.java:764)  `\r\n\r\nOkHttp version: 3.14.1\r\n\r\nI'm using the following dependencies:\r\n\r\ncom.squareup.retrofit2:retrofit:2.5.0\r\ncom.squareup.retrofit2:converter-gson:2.5.0\r\ncom.squareup.okhttp3:logging-interceptor:3.14.1\r\ncom.squareup.retrofit2:converter-scalars:2.5.0\r\n\r\nBase requestsClient code:\r\n\r\n` \r\nprivate long DEFUALT_CALL_TIMEOUT = 15;\r\nprivate long DEFUALT_CONNECT_TIMEOUT = 5;\r\n\r\nOkHttpClient.Builder okHttpClientBuilder = new OkHttpClient.Builder()\r\n.callTimeout(DEFUALT_CALL_TIMEOUT,TimeUnit.SECONDS)\r\n.connectTimeout(DEFUALT_CONNECT_TIMEOUT, TimeUnit.SECONDS);\r\n\r\nif (BuildConfig.DEBUG) {\r\nHttpLoggingInterceptor logging = new HttpLoggingInterceptor();\r\nlogging.setLevel(HttpLoggingInterceptor.Level.BODY);\r\nokHttpClientBuilder.addInterceptor(logging);\r\n}\r\nokHttpClientBuilder.addInterceptor(new ConnectivityInterceptor());\r\n\r\nretrofit = new Retrofit.Builder()\r\n.baseUrl(AppConstants.SERVER_URL)\r\n.addConverterFactory(GsonConverterFactory.create())\r\n.client(okHttpClientBuilder.build())\r\n.build();\r\n `", "url": "https://github.com/square/okhttp/issues/5605", "user": "rmdan90", "labels": ["bug"], "created": "2019-11-17 18:35:07", "closed": "2019-11-18 01:16:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Flaky CI tests", "body": "Presumably a bug in OkHttpClientTestRule, this pops up in different places.\r\n \r\n```\r\nokhttp3.mockwebserver.MockWebServerTest > statementStartsAndStops FAILED\r\n\r\n    java.util.concurrent.RejectedExecutionException: Task okhttp3.internal.concurrent.TaskRunner$runnable$1@3013a9c rejected from java.util.concurrent.ThreadPoolExecutor@56fcad64[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 2]\r\n```", "url": "https://github.com/square/okhttp/issues/5603", "user": "yschimke", "labels": ["bug", "tests"], "created": "2019-11-17 08:18:58", "closed": "2019-12-23 08:16:32", "commits": {}, "ttf": 35.000277777777775, "commitsDetails": []}, {"title": "okhttp3  javax.net.ssl.SSLException: Read error: ssl=0xda64a748: I/O error during system call, Connection reset by peer", "body": "\r\nI have already gone through related issues on github and SO but most of the explanations doesn't match with what I'm facing.\r\n\r\n**okhttp version** : 4.2.2\r\n**MinSdkVersion** : 21\r\n\r\n**Request Url** : [https://www.ajio.com/rilfnlwebservices/v2/rilfnl/newcategoryselection?pageId=firstpagemobileapp&uiel=Mobile](url)\r\n\r\n**This works through volley, browser, postman etc. but not through okhttp.**\r\n\r\n\r\n**My Code** : \r\n\r\n` @Module`\r\n   `internal object CommonNetworkModule {`\r\n\r\n    @Singleton\r\n    @Provides\r\n    @JvmStatic\r\n    fun providesOkHttp(): OkHttpClient {\r\n\r\n        val builder = OkHttpClient.Builder()\r\n\r\n        builder.sslSocketFactory(getSSLSocketFactory()!!, getX509TrustManager())\r\n                .addInterceptor(HttpLoggingInterceptor().apply { level = HttpLoggingInterceptor.Level.BODY })\r\n        \r\n        return builder.build()\r\n    }\r\n\r\n\r\n    private fun getSSLSocketFactory(): SSLSocketFactory? {\r\n\r\n        val sc: SSLContext?\r\n        var sslSocketFactory: SSLSocketFactory? = null\r\n        try {\r\n            sc = SSLContext.getInstance(TlsVersion.TLS_1_2.javaName)\r\n            if (sc != null) {\r\n                sc.init(null, getAllTrustManagers(), SecureRandom())\r\n                sslSocketFactory = Tls12SocketFactory(sc.socketFactory)\r\n            } else {\r\n                Timber.e(\"SSLContext is null\")\r\n            }\r\n        } catch (e: NoSuchAlgorithmException) {\r\n            Timber.e(e)\r\n        } catch (e: KeyManagementException) {\r\n            Timber.e(e)\r\n        }\r\n\r\n        return sslSocketFactory\r\n    }\r\n\r\n\r\n    private fun getAllTrustManagers(): Array<TrustManager> {\r\n        return arrayOf(getX509TrustManager())\r\n    }\r\n\r\n\r\n    private fun getX509TrustManager(): X509TrustManager {\r\n        return object : X509TrustManager {\r\n            override fun getAcceptedIssuers(): Array<X509Certificate> {\r\n                return arrayOf()\r\n            }\r\n\r\n            @SuppressLint(\"TrustAllX509TrustManager\")\r\n            override fun checkClientTrusted(certs: Array<X509Certificate>, authType: String) {\r\n            }\r\n\r\n            @SuppressLint(\"TrustAllX509TrustManager\")\r\n            override fun checkServerTrusted(certs: Array<X509Certificate>, authType: String) {\r\n            }\r\n        }\r\n    }\r\n}\r\n`\r\n\r\n**Error Logs**  : \r\n\r\n javax.net.ssl.SSLException: Read error: ssl=0xda64a748: I/O error during system call, Connection reset by peer\r\n        at com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\r\n        at com.android.org.conscrypt.NativeSsl.read(NativeSsl.java:399)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream.read(ConscryptFileDescriptorSocket.java:546)\r\n        at okio.InputStreamSource.read(Okio.kt:102)\r\n        at okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:159)\r\n        at okio.RealBufferedSource.indexOf(RealBufferedSource.kt:349)\r\n        at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.kt:222)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.readHeaderLine(Http1ExchangeCodec.kt:210)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.kt:181)\r\n        at okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.kt:105)\r\n        at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:37)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:215)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n        at okhttp3.RealCall.execute(RealCall.kt:66)\r\n        at retrofit2.OkHttpCall.execute(OkHttpCall.java:188)\r\n        at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:45)\r\n        at io.reactivex.Observable.subscribe(Observable.java:12267)\r\n        at io.reactivex.internal.operators.observable.ObservableSingleSingle.subscribeActual(ObservableSingleSingle.java:35)\r\n        at io.reactivex.Single.subscribe(Single.java:3603)\r\n        at io.reactivex.internal.operators.single.SingleMap.subscribeActual(SingleMap.java:34)\r\n        at io.reactivex.Single.subscribe(Single.java:3603)\r\n        at io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run(SingleSubscribeOn.java:89)\r\n        at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:578)\r\n        at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n        at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)", "url": "https://github.com/square/okhttp/issues/5598", "user": "NayaneshGupte", "labels": ["bug"], "created": "2019-11-13 07:44:16", "closed": "2019-11-13 12:31:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Travis CI snapshots failing", "body": "https://travis-ci.org/square/okhttp/builds\r\n\r\ne.g. https://travis-ci.org/square/okhttp/builds/610830250\r\n\r\n```\r\n> Task :okhttp:compileKotlin\r\n\r\ne: /home/travis/build/square/okhttp/okhttp/src/main/java/okhttp3/internal/platform/Jdk9Platform.kt: (33, 19): Unresolved reference: applicationProtocols\r\n\r\ne: /home/travis/build/square/okhttp/okhttp/src/main/java/okhttp3/internal/platform/Jdk9Platform.kt: (41, 43): Unresolved reference: applicationProtocol\r\n\r\ne: /home/travis/build/square/okhttp/okhttp/src/main/java/okhttp3/internal/platform/android/Android10SocketAdapter.kt: (44, 38): Unresolved reference: applicationProtocol\r\n\r\ne: /home/travis/build/square/okhttp/okhttp/src/main/java/okhttp3/internal/platform/android/Android10SocketAdapter.kt: (58, 19): Unresolved reference: applicationProtocols\r\n\r\n> Task :okhttp:compileKotlin FAILED\r\n```\r\n\r\nMy bad, related to the build with JDK11 change.", "url": "https://github.com/square/okhttp/issues/5596", "user": "yschimke", "labels": ["bug", "build-ci"], "created": "2019-11-12 13:35:12", "closed": "2019-12-23 08:05:34", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "java.net.ProtocolException: Unexpected status line: 800", "body": "The okhttp client  version is 3.11.0.\r\nException is:\r\n`\r\nCaused by: java.net.ProtocolException: Unexpected status line: 800\r\n       at okhttp3.internal.http.StatusLine.parse(StatusLine.java:69) \r\n       at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)\r\n       at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) \r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) \r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) \r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) \r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) \r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) \r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) \r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) \r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) \r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) \r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) \r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) \r\n       at okhttp3.RealCall.execute(RealCall.java:77) \r\n`", "url": "https://github.com/square/okhttp/issues/5595", "user": "wubiaoi", "labels": ["bug", "needs info"], "created": "2019-11-12 08:02:53", "closed": "2019-11-18 01:26:23", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "IllegalArgumentException: reason.size() > 123", "body": "There's this relatively new code in: okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt:\r\n\r\n```\r\n    if (reason != null) {\r\n      reasonBytes = reason.encodeUtf8()\r\n      require(reasonBytes.size <= CLOSE_MESSAGE_MAX) {\r\n        \"reason.size() > $CLOSE_MESSAGE_MAX: $reason\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem is that this causes \"IllegalArgumentException: reason.size() > 123\" and there's no \"nice\" way to fix it.\r\n\r\nOf course I can do:\r\n\r\n```\r\n   int code = 1000;\r\n   String reason = (\"disconnected: \" + url).substring(0,123);\r\n   webSocket.close(code, reason);\r\n```\r\n\r\nbut this is not ideal, because that 123 can change. So I would rather do:\r\n\r\n```\r\n   String reason = (\"disconnected: \" + url).substring(0,(int) WebSocketProtocol.CLOSE_MESSAGE_MAX);\r\n```\r\n\r\nbut this doesn't work because it's internal.\r\n\r\nSo at least change it to public, but even better solution maybe would be to do this (the substring) in okhttp, and instead of an exception just log a warning.", "url": "https://github.com/square/okhttp/issues/5594", "user": "flocsy", "labels": ["bug"], "created": "2019-11-12 07:11:40", "closed": "2020-03-29 20:28:11", "commits": {}, "ttf": 138.00027777777777, "commitsDetails": []}, {"title": "Website EventListener API page has visible HTML entities", "body": "The website page under \"4.x API\" okhttp > EventListener has HTML entities \"\\&gt;\" instead of greater than characters:\r\nhttps://square.github.io/okhttp/4.x/okhttp/okhttp3/-event-listener/\r\n\r\nFor example, see that the first bullet point under _Nesting is as follows_ is: \r\n\r\n> call -\\&gt; (dns -\\&gt; connect -\\&gt; secure connect)* -\\&gt; request events\r\n\r\nI would expect it to be:\r\n\r\n> call -> (dns -> connect -> secure connect)* -> request events\r\n\r\nNote that the equivalent page under the \"3.x API\" correctly shows greater than characters, so it appears to be a regression:\r\nhttps://square.github.io/okhttp/3.x/okhttp/", "url": "https://github.com/square/okhttp/issues/5593", "user": "lfielke", "labels": ["bug", "documentation"], "created": "2019-11-12 04:36:05", "closed": "2019-11-19 04:53:15", "commits": {"abee17d93f4b78a25bb02d316029d977704c9f3e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "abee17d93f4b78a25bb02d316029d977704c9f3e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["0790917be7bf8836a57eb6253f5539840ff9cc26"], "nameRev": "abee17d93f4b78a25bb02d316029d977704c9f3e tags/parent-4.3.0~27^2", "commitMessage": "Don't use HTML entities in Markdown docs.\n\nCloses: https://github.com/square/okhttp/issues/5593\n", "commitDateTime": "2019-11-17 20:37:16", "authoredDateTime": "2019-11-17 20:37:16", "commitGitStats": [{"filePath": "docs/tls_configuration_history.md", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "okhttp/src/main/java/okhttp3/ConnectionSpec.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/EventListener.kt", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/BasicCertificateChainCleaner.kt", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["abee17d93f4b78a25bb02d316029d977704c9f3e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 7, "lines": 16, "gitFilesChange": 3}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/ConnectionSpec.kt", "okhttp/src/main/java/okhttp3/internal/tls/BasicCertificateChainCleaner.kt", "okhttp/src/main/java/okhttp3/EventListener.kt"]}, {"title": "CI failures for Corretto Platform", "body": "Ultra low priority but trying to dig in\r\n\r\nhttps://app.circleci.com/jobs/github/square/okhttp/6903\r\n\r\nhttps://circleci.com/api/v1.1/project/github/square/okhttp/6903/output/103/0?file=true\r\n\r\nNot sure if it's resource issue, or failing to negotiate HTTP/2 etc.", "url": "https://github.com/square/okhttp/issues/5592", "user": "yschimke", "labels": ["bug"], "created": "2019-11-10 15:55:16", "closed": "2020-04-12 12:43:07", "commits": {}, "ttf": 153.00027777777777, "commitsDetails": []}, {"title": "MockWebserver crashing with ssl negotiation error", "body": "Hi,\r\n\r\nWe are still not sure about the root cause but our acceptance tests execution phase is failing sometimes due to `MockWebserver` (**4.2.1**) crashing when the following error happens in `acceptConnections()`:\r\n\r\n```\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: FATAL EXCEPTION: MockWebServer\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: Process: com.xxx.xxx.xxx, PID: 5607\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: java.lang.AssertionError: java.lang.reflect.InvocationTargetException\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat okhttp3.internal.platform.android.AndroidSocketAdapter.a(SourceFile:86)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat okhttp3.internal.platform.AndroidPlatform.b(SourceFile:86)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat okhttp3.mockwebserver.MockWebServer$SocketHandler.handle(MockWebServer.kt:516)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat okhttp3.mockwebserver.MockWebServer$serveConnection$$inlined$execute$1.run(Util.kt:580)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat java.lang.Thread.run(Thread.java:764)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: Caused by: java.lang.reflect.InvocationTargetException\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat java.lang.reflect.Method.invoke(Native Method)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat okhttp3.internal.platform.android.AndroidSocketAdapter.a(SourceFile:81)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \t... 6 more\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: Caused by: java.lang.NullPointerException: ssl == null\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat com.android.org.conscrypt.NativeCrypto.getApplicationProtocol(Native Method)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat com.android.org.conscrypt.NativeSsl.getApplicationProtocol(NativeSsl.java:568)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat com.android.org.conscrypt.ConscryptFileDescriptorSocket.getApplicationProtocol(ConscryptFileDescriptorSocket.java:1085)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \tat com.android.org.conscrypt.OpenSSLSocketImpl.getAlpnSelectedProtocol(OpenSSLSocketImpl.java:134)\r\n11-05 11:53:36.557  5607 23163 E AndroidRuntime: \t... 8 more\r\n```\r\n\r\nAny ideas about this? Shouldn't this be handled by `MockWebserver`?\r\n\r\nThanks in advance!", "url": "https://github.com/square/okhttp/issues/5587", "user": "nimeacuerdo", "labels": ["bug"], "created": "2019-11-06 09:02:43", "closed": "2019-12-31 04:42:02", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "Thread.holdsLock calls result in excessive overhead w/o ability to turn it off", "body": "When profiling OkHttp3 4.2.1 under a high load (a microservice/RPC scenario), the profiler constantly shows `Thread.holdsLock(this)` as a non-trivial percentage of wall time spent servicing sending a request.\r\n\r\nHere's an example hot spot in `Dispatcher.kt`:\r\n\r\n```\r\n  private fun promoteAndExecute(): Boolean {\r\n    assert(!Thread.holdsLock(this))\r\n```\r\n\r\nThe generated Java source makes the call to `Thread.holdsLock(this)` even if assertions are *off*:\r\n\r\n```\r\n  private final boolean promoteAndExecute() {\r\n      boolean var1 = !Thread.holdsLock(this);\r\n      boolean isRunning = false;\r\n      boolean var3 = false;\r\n      boolean var4;\r\n      if (_Assertions.ENABLED && !var1) {\r\n```\r\n\r\nHowever, `Thread.holdsLock` is a native call:\r\n\r\n```   \r\npublic static native boolean holdsLock(Object obj);\r\n```\r\n\r\nThe JIT optimizer is unable to optimize across native call boundaries. This cause a hard unable-to-optimize situation, which, for example, inhibits inlining across virtual calls. In my profiling for my target use case, this placed a ceiling on performance that I was not able to work around (save for building a patched OkHttp version).", "url": "https://github.com/square/okhttp/issues/5586", "user": "astral303", "labels": ["bug"], "created": "2019-11-06 01:17:43", "closed": "2019-11-17 16:15:52", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Crash: IllegalStateException: Expected Android API level 21+ but was 19", "body": "Hi, I'm using RetroFit library v2.5.0 which in turn is using OkHttp v3.12.0 and I've run into the following issue on devices with ver <= 4.4.2.\r\nminSDK for my project is 16.\r\nCould you help me out? Thanks\r\n\r\nThis is the report: \r\nCaused by java.lang.IllegalStateException: Expected Android API level 21+ but was 19\r\n       at okhttp3.internal.platform.AndroidPlatform.<clinit> + 232(AndroidPlatform.java:232)\r\n       at okhttp3.internal.platform.Platform$Companion.findPlatform + 211(Platform.java:211)\r\n       at okhttp3.internal.platform.Platform$Companion.access$findPlatform + 179(Platform.java:179)\r\n       at okhttp3.internal.platform.Platform.<clinit> + 180(Platform.java:180)\r\n       at okhttp3.OkHttpClient.<init> + 219(OkHttpClient.java:219)\r\n       at okhttp3.OkHttpClient$Builder.build + 955(OkHttpClient.java:955)\r\n       at android.app.Instrumentation.callApplicationOnCreate + 1013(Instrumentation.java:1013)\r\n       at android.app.ActivityThread.handleBindApplication + 4788(ActivityThread.java:4788)\r\n       at android.app.ActivityThread.access$1600 + 172(ActivityThread.java:172)\r\n       at android.app.ActivityThread$H.handleMessage + 1368(ActivityThread.java:1368)\r\n       at android.os.Handler.dispatchMessage + 102(Handler.java:102)\r\n       at android.os.Looper.loop + 146(Looper.java:146)\r\n       at android.app.ActivityThread.main + 5692(ActivityThread.java:5692)\r\n       at java.lang.reflect.Method.invokeNative(Method.java)\r\n       at java.lang.reflect.Method.invoke + 515(Method.java:515)\r\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run + 1291(ZygoteInit.java:1291)\r\n       at com.android.internal.os.ZygoteInit.main + 1107(ZygoteInit.java:1107)\r\n       at dalvik.system.NativeStart.main(NativeStart.java)", "url": "https://github.com/square/okhttp/issues/5579", "user": "biancaarno8", "labels": ["bug"], "created": "2019-10-30 11:47:53", "closed": "2019-10-30 14:03:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "TTFB and responseHeadersStart being called too soon", "body": "We are trying to measure the TTFB (_time to first byte_) value per request. It seems that tracking the difference between `requestHeadersEnd` (or `requestBodyEnd`) and `responseHeadersStart` is the way to go.\r\n\r\nHowever, `responseHeadersStart` is triggered immediately for some reason, while the request is still in flight.\r\n\r\nExample output:\r\n\r\n```\r\n0.000 callStart\r\n...\r\n0.320 connectionAcquired\r\n0.322 requestHeadersStart\r\n0.323 requestHeadersEnd     <--- request sent\r\n0.325 responseHeadersStart  <--- response headers received in 2 ms and then downloaded for 240 ms?\r\n0.561 responseHeadersEnd    <--- actual TTFB?\r\n0.563 responseBodyStart\r\n0.571 responseBodyEnd\r\n0.578 connectionReleased\r\n0.579 callEnd\r\n```\r\n\r\nThis looks like a bug. However, the same timeline is documented in the sample output on: https://square.github.io/okhttp/events/\r\n\r\nAm I missing something here?", "url": "https://github.com/square/okhttp/issues/5578", "user": "toncid", "labels": ["bug", "enhancement"], "created": "2019-10-28 08:51:19", "closed": "2019-12-30 18:11:43", "commits": {"7cb7ee6def4d0910f736d0dee5a02144b6914ef5": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "26287eb4906a3070321708017a39482f4a6e2e36": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "1eea6e21e3ffeb9f0e1ee5c242992ea8d65b093a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a1cf78f5cb762f3b9b280f622692ea726c8ba23f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "53d2d794b996214057c9179eaca343d3c0b21749": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 63.000277777777775, "commitsDetails": [{"commitHash": "7cb7ee6def4d0910f736d0dee5a02144b6914ef5", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "26287eb4906a3070321708017a39482f4a6e2e36", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1eea6e21e3ffeb9f0e1ee5c242992ea8d65b093a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a1cf78f5cb762f3b9b280f622692ea726c8ba23f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "53d2d794b996214057c9179eaca343d3c0b21749", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["767fa333501dde0f8b8fbd7906e76f9e48a9f623"], "nameRev": "53d2d794b996214057c9179eaca343d3c0b21749 tags/parent-4.3.0~6^2", "commitMessage": "Defer EventListener events until bytes are returned\n\nThis changes the timing of responseHeaderStart and responseBodyStart events to\nfire when bytes are received from the server. This is a non-trivial behavior\nchange and should be documented as such in the release notes. In particular,\nthe responseFailed event may be fired without a preceding responseHeadersStart\nevent.\n\nTo test this I've added a timestamp to our CallEvent test facet.\n\nCloses: https://github.com/square/okhttp/issues/5578\n", "commitDateTime": "2019-12-30 13:11:17", "authoredDateTime": "2019-12-30 11:53:20", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "okhttp-testing-support/src/main/java/okhttp3/CallEvent.kt", "insertions": 39, "deletions": 11, "lines": 50}, {"filePath": "okhttp-testing-support/src/main/java/okhttp3/RecordingEventListener.kt", "insertions": 68, "deletions": 34, "lines": 102}, {"filePath": "okhttp/src/main/java/okhttp3/EventListener.kt", "insertions": 45, "deletions": 15, "lines": 60}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Exchange.kt", "insertions": 15, "deletions": 4, "lines": 19}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/CallServerInterceptor.kt", "insertions": 15, "deletions": 10, "lines": 25}, {"filePath": "okhttp/src/test/java/okhttp3/CallTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/test/java/okhttp3/EventListenerTest.java", "insertions": 150, "deletions": 5, "lines": 155}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().8.responseHeadersStart(okhttp3.Call)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EventListenerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.EventListenerTest.failedCallEventSequence()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.EventListenerTest.timeToFirstByteHttp1OverHttps()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.EventListenerTest.timeToFirstByteHttp2OverHttps()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.EventListenerTest.timeToFirstByte()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.EventListenerTest.timeToFirstByteGapBetweenResponseHeaderStartAndEnd()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["53d2d794b996214057c9179eaca343d3c0b21749"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 189.0, "deletions": 83.0, "lines": 272.0, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http/CallServerInterceptor.kt", "okhttp/src/main/java/okhttp3/internal/connection/Exchange.kt", "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt", "okhttp-testing-support/src/main/java/okhttp3/RecordingEventListener.kt", "okhttp/src/main/java/okhttp3/EventListener.kt", "okhttp-testing-support/src/main/java/okhttp3/CallEvent.kt"], "changesInPackagesSPOON": []}, {"title": "Failing CI test with JDK8: failingCallsDoNotInterfereWithConnection", "body": "https://app.circleci.com/jobs/github/square/okhttp/6685\r\n\r\n```\r\nokhttp3.CallTest > failingCallsDoNotInterfereWithConnection FAILED\r\n    org.junit.ComparisonFailure: expected:<\"Response [1]\"> but was:<\"Response [2]\">\r\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n        at okhttp3.CallTest.failingCallsDoNotInterfereWithConnection(CallTest.java:2991)\r\n```", "url": "https://github.com/square/okhttp/issues/5576", "user": "yschimke", "labels": ["bug"], "created": "2019-10-27 16:00:26", "closed": "2019-11-18 01:39:44", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "App crashes on throwing the exception from the Interceptor ", "body": "**There are the implementations i have been using**\r\n\r\n    implementation 'com.squareup.retrofit2:retrofit:2.6.0'\r\n    implementation 'com.google.code.gson:gson:2.8.5'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'\r\n    implementation 'com.squareup.okhttp3:okhttp:4.2.1'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'\r\n\r\n\r\n**This is the network interceptor class**\r\n\r\n```\r\nclass NetworkConnectionInterceptor(\r\n    context: Context\r\n) : Interceptor {\r\n\r\n\r\n    private val applicationContext = context.applicationContext\r\n\r\n    override fun intercept(chain: Interceptor.Chain): Response {\r\n        return if (!isConnectionOn()) {\r\n            throw NoConnectivityException()\r\n        } else if(!isInternetAvailable()) {\r\n            throw NoInternetException()\r\n        } else {\r\n            chain.proceed(chain.request())\r\n        }\r\n    }\r\n\r\n    private fun isInternetAvailable(): Boolean {\r\n        return try {\r\n            val timeoutMs = 1500\r\n            val sock = Socket()\r\n            val sockaddr = InetSocketAddress(\"8.8.8.8\", 53)\r\n\r\n            sock.connect(sockaddr, timeoutMs)\r\n            sock.close()\r\n\r\n            true\r\n        } catch (e: IOException) {\r\n            false\r\n        }\r\n    }\r\n\r\n    private fun isConnectionOn(): Boolean {\r\n        val connectivityManager =\r\n            applicationContext.getSystemService(Context.CONNECTIVITY_SERVICE) as\r\n                    ConnectivityManager\r\n\r\n        return if (android.os.Build.VERSION.SDK_INT >=\r\n            android.os.Build.VERSION_CODES.M) {\r\n            postAndroidMInternetCheck(connectivityManager)\r\n        } else {\r\n            preAndroidMInternetCheck(connectivityManager)\r\n        }\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.M)\r\n    private fun postAndroidMInternetCheck(\r\n        connectivityManager: ConnectivityManager): Boolean {\r\n        val network = connectivityManager.activeNetwork\r\n        val connection =\r\n            connectivityManager.getNetworkCapabilities(network)\r\n\r\n        return connection != null && (\r\n                connection.hasTransport(NetworkCapabilities.TRANSPORT_WIFI) ||\r\n                        connection.hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR))\r\n    }\r\n\r\n    private fun preAndroidMInternetCheck(\r\n        connectivityManager: ConnectivityManager): Boolean {\r\n        val activeNetwork = connectivityManager.activeNetworkInfo\r\n        if (activeNetwork != null) {\r\n            @Suppress(\"DEPRECATION\")\r\n            return (activeNetwork.type == ConnectivityManager.TYPE_WIFI ||\r\n                    activeNetwork.type == ConnectivityManager.TYPE_MOBILE)\r\n        }\r\n        return false\r\n    }\r\n\r\n}\r\n```\r\n\r\n**My Retrofit client**\r\n\r\n```\r\noperator fun invoke(\r\n            networkConnectionInterceptor: NetworkConnectionInterceptor\r\n        ): ApiUtil {\r\n\r\n            val builder = OkHttpClient.Builder()\r\n            builder.connectTimeout(5, TimeUnit.SECONDS)\r\n            builder.writeTimeout(10, TimeUnit.SECONDS)\r\n\r\n            val interceptor = HttpLoggingInterceptor()\r\n            interceptor.level = HttpLoggingInterceptor.Level.BODY\r\n\r\n            val client = OkHttpClient.Builder()\r\n                .addInterceptor(interceptor)\r\n                .addInterceptor(networkConnectionInterceptor)\r\n                .build()\r\n\r\n\r\n            builder.cache(null)\r\n\r\n            val gson = GsonBuilder()\r\n                .setLenient()\r\n                .create()\r\n\r\n            val retrofit = Retrofit.Builder()\r\n                .baseUrl(BASE_URL)\r\n                .addConverterFactory(GsonConverterFactory.create(gson))\r\n                .client(client)\r\n                .build()\r\n\r\n            return retrofit.create(ApiUtil::class.java)\r\n            \r\n        }\r\n```\r\n\r\nthis is how i am calling the api's\r\n\r\n```\r\nfun onGetNationalities() {\r\n        try {\r\n            responseCallback?.onStarted()\r\n            Coroutines.main {\r\n                val nationalitiesResponse = repository.getNationalities()\r\n                nationalitiesResponse?.let {\r\n                    if (it.success) {\r\n                        responseCallback?.onSuccess(it)\r\n                    } else {\r\n                        responseCallback?.onFailure(it.errorMessage)\r\n                    }\r\n                }\r\n            }\r\n        } catch (e: Exception) {\r\n            responseCallback?.onAlert(\r\n                e.cause?.localizedMessage\r\n                    ?: MessageUtils.SOMETHING_WENT_WRONG\r\n            )\r\n        } catch (e: NoInternetException) {\r\n            responseCallback?.onAlert(e.message!!)\r\n        }catch (e: NoConnectivityException) {\r\n            responseCallback?.onAlert(e.message!!)\r\n        }\r\n    }\r\n```\r\n\r\n**NoInternetException and NoConnectivityException are two exception classes**\r\n\r\n```\r\nclass NoConnectivityException : IOException() {\r\n    override val message: String\r\n        get() =\r\n            \"No network available, please check your WiFi or Data connection\"\r\n}\r\n```\r\n\r\n```\r\nclass NoInternetException() : IOException() {\r\n    override val message: String\r\n        get() =\r\n            \"No internet available, please check your connected WIFi or Data\"\r\n}\r\n```\r\n\r\nThis is not happening everytime for example if i am calling an api on button click and internet is not active, exception thrown from the intercepor will be caught in the function from where i am calling the api but if i call an api on the start on e.g signup form so i can get the nationalities for signup as in my example the interceptor will crash while throwing the exception plus it also crash sometime on the chain.proceed with the Sockettimeoutexception etc. The crash is reproducible.\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5575", "user": "AhmadIzaz", "labels": ["bug"], "created": "2019-10-27 05:56:21", "closed": "2019-11-18 01:40:41", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Socket timeout exception", "body": "Hi, i am having weird issue, and not sure where to look and debug anymore.\r\nSo i have some test android app, which should print some data from server after i get  server response.\r\nBefore i send request to server, i check for network availability by downloading some json file from network.\r\nAlso i have two physical devices, one is running on android 7.1.2, and another on android 6.0.1. \r\nThe issue can be reproduced like this. When i turn device off, and pull Ethernet cable out, than turn device back on, there will be message that network is not availble. But also i have some network checker in background which checks for network every second by trying to download some json. That file downloader is based on retrofit and okHttp. What is happening, is that as soon i plug ethernet back i try to download file, got socket timeout exception, try again after a second, and it will succeed to download after couple of attempts, after that i use retrofit to send request to server which will  SOME TIME produce socket timeout exception, but not always. What is strange here, is that if u don't pull out etherent cable when turning device off, than everything works just fine. Even stranger is that this same code works on another board which runs on android 7.1.2. \r\nAlso i created another flavor off app, one which use HttpUrl connection to download json file, and to send request to server, and it works even on board that runs on android 6.0.1, every single time( both file download, and talking to server part) \r\nSo i don't have clue what is happening. I am using latest  version ( 4.2.2). I tried to use trusted agent to eliminate ssl errors, but it did not helped at all.\r\nSo please if  anyone had similar problem, it would be great if someone could provide me a solution for this, or at least point me in direction where to look.\r\n\r\nEdit:\r\nIf this helps, from logs i can see:\r\n\r\n10-22 14:28:06.829  5663  5767 I System.out: 0.000 callStart\r\n10-22 14:28:06.866  5663  5829 I System.out 0.037 proxySelectStart\r\n10-22 14:28:06.866  5663  5829 I System.out : 0.038 proxySelectEnd\r\n10-22 14:28:06.868  5663  5829 I System.out : 0.040 connectionAcquired\r\n10-22 14:28:06.879  5663  5829 I System.out : 0.051 requestHeadersStart\r\n10-22 14:28:06.880  5663  5829 I System.out : 0.052 requestHeadersEnd\r\n10-22 14:28:06.880  5663  5829 I System.out : 0.052 requestBodyStart\r\n10-22 14:28:06.881  5663  5829 I System.out : 0.052 requestBodyEnd\r\n10-22 14:28:06.881  5663  5829 I System.out : 0.053 responseHeadersStart\r\n10-22 14:28:36.885  5663  5829 I System.out : 30.056 responseFailed\r\n10-22 14:28:36.888  5663  5829 I System.out : 30.059 connectionReleased\r\n10-22 14:28:36.889  5663  5829 I System.out : 30.060 callFailed1\r\n\r\nSo i don't see responseHeadersEnd in logs, so there is the place where it is stucked. Hope this helps\r\n\r\nEdit2:\r\nI found out one more board which also runs on android 6.0.1. And it has same behaviour, but i found out that it does not work randomly, but every second time. So it works, than socket timeout, than works again, than timeout, etc. Still have no idea why :(", "url": "https://github.com/square/okhttp/issues/5567", "user": "Gvex95", "labels": ["bug"], "created": "2019-10-22 14:03:51", "closed": "2019-11-18 01:40:55", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "MockWebServer not works on suite test in android", "body": "When I use MockWebServer in a suite test into android studio. it works when i launch a test manually but not works when I launch all tests.\r\n\r\nThe socket is closed\r\nFailed to connect to localhost/127.0.0.1:60033\r\n   \r\nI use the latest version 4.2.2\r\n@Before\r\nsetUp() {\r\nmockWebServer = MockWebServer()\r\nmockWebServer.start() \r\n       \r\n....\r\n}\r\n\r\nand into \r\n@After\r\nfun tearDown() {\r\n mockWebServer.shutdown()\r\n}\r\n\r\nand same thing into another \r\n", "url": "https://github.com/square/okhttp/issues/5566", "user": "fpitpit", "labels": ["bug", "needs info", "stackoverflow"], "created": "2019-10-22 08:09:43", "closed": "2019-11-09 07:18:10", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "Crash: Unexpected TLS version: NONE In Android 9.0", "body": "Hello, \r\n\r\nMy Android app use okhttp 3.10.0 for almost 1year, and it is stable.  Just last month, we switch http to https, then many crash occur  In Android 9.0,\r\nblew is the stacktrace,\r\n```\r\njava.lang.IllegalArgumentException Unexpected TLS version NONE\r\nat okhttp3.TlsVersion.forJavaName(SourceFile 53)\r\nat okhttp3.Handshake.get(SourceFile 56)\r\nat okhttp3.internal.connection.RealConnection.connectTls(SourceFile 308)\r\nat okhttp3.internal.connection.RealConnection.establishProtocol(SourceFile 270)\r\nat okhttp3.internal.connection.RealConnection.connect(SourceFile 162)\r\nat okhttp3.internal.connection.StreamAllocation.findConnection(SourceFile 257)\r\nat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(SourceFile 135)\r\nat okhttp3.internal.connection.StreamAllocation.newStream(SourceFile 114)\r\nat okhttp3.internal.connection.ConnectInterceptor.intercept(SourceFile 42)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 121)\r\nat okhttp3.internal.cache.CacheInterceptor.intercept(SourceFile 93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 121)\r\nat okhttp3.internal.http.BridgeInterceptor.intercept(SourceFile 93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(SourceFile 126)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 121)\r\nat com.iflytek.common.lib.net.interceptor.BlcInterceptor.intercept(SourceFile 76)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 121)\r\nat com.iflytek.common.lib.net.interceptor.BlcInterceptor.intercept(SourceFile 76)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 121)\r\nat com.iflytek.common.lib.net.interceptor.BlcInterceptor.intercept(SourceFile 76)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 121)\r\nat com.iflytek.common.lib.net.interceptor.CatchExceptionInterceptor.intercept(SourceFile 23)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 121)\r\nat com.iflytek.eagleeye.e.c.d.intercept(SourceFile 52)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile 121)\r\nat okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile 200)\r\nat okhttp3.RealCall$AsyncCall.execute(SourceFile 147)\r\nat okhttp3.internal.NamedRunnable.run(SourceFile 32)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java 1167)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java 641)\r\nat java.lang.Thread.run(Thread.java 764)\r\n```\r\nAnyone get some ideas about this crash?\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5562", "user": "out0fmemory", "labels": ["bug"], "created": "2019-10-21 03:36:38", "closed": "2019-11-18 01:46:19", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "IndexOutOfBoundsException when unverifiedHandshake.peerCertificates().get(0) in Okhttp 3.13.1 ", "body": "I have been testing HTTP2 with Glide with Okhttp, both running on 16 threads. Glide has been downloading images from our server through Charles proxy. All from the same endpoint. We are using:  Okhttp 3.13.1. The crash happened randomly while downloading Nth element.\r\n\r\nthis line has a problem: \r\nX509Certificate cert = (X509Certificate) unverifiedHandshake.peerCertificates().get(0)\r\nIn below case there was no peerCertificates\r\n```\r\n/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n    Process: com.unitedinternet.portal.android.onlinestorage.gmx.debug, PID: 11010\r\n    java.lang.IndexOutOfBoundsException: Index: 0\r\n        at java.util.Collections$EmptyList.get(Collections.java:4511)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:326)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:283)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:168)\r\n        at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n        at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n        at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:254)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:200)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/5558", "user": "Malachiasz", "labels": ["bug"], "created": "2019-10-17 11:01:02", "closed": "2019-11-18 01:48:54", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "Okhttp blocks all requests while big request is pending", "body": "I know this isn't the best place to ask it, but since i couldn't get any support on starckoverflow and i'm struggling with this problem over a week i'm going to ask here, maybe is something very simple that a person with more experience handle fast.\r\n\r\nI'm using OkHttp + Retrofit2 to build an api to a third party system.\r\nI've noticed that even using a ConnectionPool and multiple threads, Retrofit is never making simultaneous calls.\r\n\r\nThis is how i create the service:\r\n\r\n```\r\nOkHttpClient.Builder httpClientBuilder = new OkHttpClient.Builder();\r\nhttpClientBuilder.connectionPool(new ConnectionPool(7, 1, TimeUnit.MINUTES););\r\nDispatcher dispatcher = new Dispatcher();\r\ndispatcher.setMaxRequests(10);\r\ndispatcher.setMaxRequestsPerHost(10);\r\nhttpClientBuilder.dispatcher(dispatcher);\r\nOkHttpClient okhttp = httpClientBuilder.build();\r\nthis.service = new Retrofit.Builder().baseUrl(API_URL).addConverterFactory(GsonConverterFactory.create(getGson())).client(okhttp).build().create(IService.class);\r\n```\r\nIn order to simplify the IService.class lets supose it has only 2 methods:\r\n\r\n```\r\n@GET\r\nCall<JsonElement> get(@Url String url, @HeaderMap Map<String, Object> headers, @QueryMap Map<String, Object> query);\r\n\r\n@POST\r\nCall<ResponseBody> complexPost(@Url String url, @HeaderMap Map<String, Object> headers, @QueryMap Map<String, Object> query, @Body RequestBody body);\r\n```\r\nnow this is how i'm trying to make parallel requests:\r\n\r\n```\r\npublic static void main(String[] args) {\r\n\r\nfinal Map<String,Object> empty = new HashMap<String, Object>();\r\n\tnew Thread(new Runnable() {\r\n\r\n\t\t@Override\r\n\t\tpublic void run() {\r\n\t\t\t\twhile(true) {\r\n\t\t\t\t\tSystem.out.println(\"sending short request\");\r\n\t\t\t\t\tthis.service.get(bar,empty,empty).execute();\r\n\t\t\t\t\tSystem.out.println(\"short request sent\");\r\n\t\t\t\t}\r\n\t\t}\r\n\t}).start();\r\n\r\n\r\n\tnew Thread(new Runnable() {\r\n\r\n\t\t@Override\r\n\t\tpublic void run() {\r\n\t\t\tbyte[] buffer  = new byte[1024*1024];\r\n\t\t\t\r\n\t\t\t\twhile(true) {\r\n\t\t\t\t\tRequestBody requestFile = RequestBody.create(MediaType.parse(\"application/octet-stream\"), buffer, 0, buffer.length);\r\n\t\t\t\t\tSystem.out.println(\"sending long request\").execute();\r\n\t\t\t\t\tthis.service.complexPost(foo, empty, empty, requestFile);\r\n\t\t\t\t\tSystem.out.println(\"long request sent\");\r\n\t\t\t\t}\r\n\t\t}\r\n\t}).start();\r\n```\r\n\r\n}\r\nSimple explanation: two threads, thread A sends a small GET request - thread B sends 1MB data request [1024*1024 zeros just]\r\n\r\nSo, nothing is synchronized, I've a connection pool with enough idle connections to make it run in parallel, IN MY MIND sine request B is bigger is natural it takes long to complete, but as there is no synchronization there should be LOTS of \"short request sent\" for every \"long request sent\".\r\n\r\nbut what is printed is something like:\r\n\r\n```\r\nsending short request\r\nshort request sent  \r\nsending long request\r\nlong request sent\r\nsending short request\r\nshort request sent\r\nsending long request\r\nlong request sent\r\nsending short request\r\nshort request sent\r\n```\r\n\r\nno thread is interrupting the other request. WHY???? how to make multiple requests in parallel?\r\n\r\nI did a deep debuging and i found the snippet of code where the synchronization locks:\r\n\r\n```\r\nprivate Http2Stream newStream(\r\n      int associatedStreamId, List<Header> requestHeaders, boolean out) throws IOException {\r\n    boolean outFinished = !out;\r\n    boolean inFinished = false;\r\n    boolean flushHeaders;\r\n    Http2Stream stream;\r\n    int streamId;\r\n\r\n    synchronized (writer) {\r\n      synchronized (this) {\r\n        if (nextStreamId > Integer.MAX_VALUE / 2) {\r\n          shutdown(REFUSED_STREAM);\r\n        }\r\n        if (shutdown) {\r\n          throw new ConnectionShutdownException();\r\n        }\r\n        streamId = nextStreamId;\r\n        nextStreamId += 2;\r\n        stream = new Http2Stream(streamId, this, outFinished, inFinished, null);\r\n        flushHeaders = !out || bytesLeftInWriteWindow == 0L || stream.bytesLeftInWriteWindow == 0L;\r\n        if (stream.isOpen()) {\r\n          streams.put(streamId, stream);\r\n        }\r\n      }\r\n      if (associatedStreamId == 0) {\r\n        writer.synStream(outFinished, streamId, associatedStreamId, requestHeaders);\r\n      } else if (client) {\r\n        throw new IllegalArgumentException(\"client streams shouldn't have associated stream IDs\");\r\n      } else { // HTTP/2 has a PUSH_PROMISE frame.\r\n        writer.pushPromise(associatedStreamId, streamId, requestHeaders);\r\n      }\r\n    }\r\n\r\n    if (flushHeaders) {\r\n      writer.flush();\r\n    }\r\n\r\n    return stream;\r\n  }\r\n```\r\nthis is the synchronization block that locks boths threads. my question is WHY, and how to fix it?", "url": "https://github.com/square/okhttp/issues/5556", "user": "bolds07", "labels": ["bug"], "created": "2019-10-15 02:06:37", "closed": "2019-11-18 01:51:16", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "Race condition causes retry loop?", "body": "https://github.com/square/okhttp/pull/2179#issuecomment-539877107\r\n\r\n> I found this patch may cause endless loop:\r\n> \r\n> 1. on a mobile phone, user sends one request, in function StreamAllocation::findHealthyConnection(), it returns a candidate\r\n> 2. if this candidate successCount is 0, it is returned without health check (candidate.isHealthy())\r\n> 3. switch the phone's netowrk from 4G to wifi, so the socket is broken, the candidate is unhealthy.\r\n> 4. to send request, SocketException(socket is closed) is thrown to RetryAndFollowUpInterceptor, and will have one more retry.\r\n> 5. StreamAllocation::findHealthyConnection() returns the same candidate.\r\n     ...\r\n     so it causes endless loop.\r\n", "url": "https://github.com/square/okhttp/issues/5547", "user": "swankjesse", "labels": ["bug"], "created": "2019-10-10 18:13:44", "closed": "2020-02-17 21:45:47", "commits": {"c6989214b28579f7c832612cce178070d227597d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "d5967d4ea72ce015666dd3a3a0c000426332005d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "d8aa78402ad0a3871a437435e379973be237b652": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "19cb19ab4ac31aa789bc94759d13898f64f93ce3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 130.00027777777777, "commitsDetails": [{"commitHash": "c6989214b28579f7c832612cce178070d227597d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d5967d4ea72ce015666dd3a3a0c000426332005d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d8aa78402ad0a3871a437435e379973be237b652", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "19cb19ab4ac31aa789bc94759d13898f64f93ce3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["1c03efd4df78eaefa00f98ac90123b6457b1c7e8"], "nameRev": "19cb19ab4ac31aa789bc94759d13898f64f93ce3 tags/parent-4.4.0~1^2", "commitMessage": "Be smarter about connection health checks\n\nPreviously we didn't do any health checks at all until a\nconnection completed a single exchange. This was awkward\nfor HTTP/2, which could have multiple exchanges in-flight\nbefore any were health checked.\n\nWe were also doing the awkward and expensive read timeout\ncheck on all non-GET requests on pooled connections. Now\nwe only perform these checks if the connection was idle\nfor 10 seconds or more.\n\nCloses: https://github.com/square/okhttp/issues/5547\n", "commitDateTime": "2020-02-17 16:00:23", "authoredDateTime": "2020-02-17 10:32:11", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/Util.kt", "insertions": 32, "deletions": 6, "lines": 38}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt", "insertions": 1, "deletions": 9, "lines": 10}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealCall.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "insertions": 13, "deletions": 19, "lines": 32}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnectionPool.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/CallKotlinTest.kt", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "okhttp/src/test/java/okhttp3/ConnectionReuseTest.java", "insertions": 11, "deletions": 24, "lines": 35}, {"filePath": "okhttp/src/test/java/okhttp3/internal/UtilTest.kt", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionReuseTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.ConnectionReuseTest.staleConnectionNotReusedForNonIdempotentRequest()", "TOT": 10, "UPD": 5, "INS": 0, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["19cb19ab4ac31aa789bc94759d13898f64f93ce3"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 49.0, "deletions": 37.0, "lines": 86.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection/RealConnectionPool.kt", "okhttp/src/main/java/okhttp3/internal/connection/RealCall.kt", "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "okhttp/src/main/java/okhttp3/internal/Util.kt", "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt"], "changesInPackagesSPOON": []}, {"title": "NativeCrypto", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n", "url": "https://github.com/square/okhttp/issues/5546", "user": "android-ext", "labels": ["bug"], "created": "2019-10-10 04:02:23", "closed": "2019-10-10 04:35:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Application does not exit when cancelling a SSE connection", "body": "This bug report results from this question on [Stack Overflow]( https://stackoverflow.com/questions/58292351/how-do-i-disconnect-a-okhttp3-sse-connection).\r\n\r\n# Problem:\r\nI'm trying to create a client that can receive events from a server using SSE (server-sent events) and I'm using OkHttp3 to do that, combined with the OkHttp3-sse library (com.squareup.okhttp3:okhttp:4.1.0 & com.squareup.okhttp3:okhttp-sse:4.1.0).\r\nI am able to connect to the server and receive the events just fine, but at some point in time, I want to disconnect the client and shutdown my application. That is were the problem is. The connection gets closed, but the application is not shutting down, probably due to the `ConnectionPool` not closing.\r\n\r\n# Attempted:\r\nAs there is hardly any documentation on the use of the OkHttp3-sse library, I have tried to reverse engineer from the code what to do. I have tried to:\r\n\r\n - call `RealEventSource.cancel()` which is disconnecting, but is hanging on a thread\r\n - call `OkHttpClient.dispatcher().cancelAll()` which is also disconnecting, but remains hanging on a thread\r\n - call `Response.close()` which is passed to `EventSourceListener.onOpen()`\r\n\r\n# Finding:\r\nAs an alternative, I have looked at https://github.com/heremaps/oksse which has the `RealServerSentEvent.close()` call which is doing what I expect. It closes the connection and stops all threads allowing the application to shutdown completely.\r\nI have looked at the implementation of the `RealServerSentEvent` class to see how the implementation differs from `RealEventSource`. I think the difference is in the conditions of the read loop:\r\n\r\n`RealEventSource` line https://github.com/square/okhttp/blob/master/okhttp-sse/src/main/java/okhttp3/internal/sse/RealEventSource.kt#L75:\r\n```\r\n      try {\r\n        listener.onOpen(this, response)\r\n        while (reader.processNextEvent()) {\r\n        }\r\n      } catch (e: Exception) {\r\n        listener.onFailure(this, e, response)\r\n        return\r\n      }\r\n```\r\ncompares to\r\n`RealServerSentEvent` line https://github.com/heremaps/oksse/blob/master/src/main/java/com/here/oksse/RealServerSentEvent.java#L94:\r\n```\r\n            listener.onOpen(this, response);\r\n\r\n            //noinspection StatementWithEmptyBody\r\n            while (call != null && !call.isCanceled() && sseReader.read()) {\r\n            }\r\n```\r\n\r\nThe `OkSSE` implementation includes the condition if the `call.isCanceled()` in the loop, where as the `OkHttp3-sse` does not. I suspect this is causing `OkHttp3-sse` not to exit, but I might be mistaken.\r\n\r\n# Test:\r\n## Code:\r\n```\r\npackage okhttp3.sse;\r\n\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.jetbrains.annotations.Nullable;\r\nimport org.junit.Test;\r\n\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.logging.Logger;\r\n\r\npublic class SseDisconnectTest {\r\n\r\n    private static final Logger LOGGER = Logger.getLogger(SseDisconnectTest.class.getSimpleName());\r\n    private static final String URL = \"https://proxy.streamdata.io/https://api.myjson.com/bins/jixid\";\r\n\r\n    public static void main(String[] args) {\r\n        Runtime.getRuntime().addShutdownHook(new Thread() {\r\n            @Override\r\n            public void run() {\r\n                super.run();\r\n                LOGGER.info(\"exiting application\");\r\n            }\r\n        });\r\n        OkHttpClient client = new OkHttpClient.Builder()\r\n                .readTimeout(0, TimeUnit.SECONDS)\r\n                .build();\r\n        EventSourceListener listener = new Listener();\r\n        Request request = new Request.Builder()\r\n                .url(URL)\r\n                .header(\"Accept-Encoding\", \"\")\r\n                .header(\"Accept\", \"text/event-stream\")\r\n                .header(\"Cache-Control\", \"no-cache\")\r\n                .build();\r\n        final EventSource eventSource = EventSources.createFactory(client).newEventSource(request, listener);\r\n        try {\r\n            Thread.sleep(10_000);\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        eventSource.cancel();\r\n        LOGGER.info(\"cancelled\");\r\n    }\r\n\r\n    static class Listener extends EventSourceListener {\r\n        @Override\r\n        public void onOpen(@NotNull EventSource eventSource, @NotNull Response response) {\r\n            super.onOpen(eventSource, response);\r\n            LOGGER.info(\"onOpen\");\r\n        }\r\n\r\n        @Override\r\n        public void onEvent(@NotNull EventSource eventSource, @Nullable String id, @Nullable String type, @NotNull String data) {\r\n            super.onEvent(eventSource, id, type, data);\r\n            LOGGER.info(data);\r\n        }\r\n\r\n        @Override\r\n        public void onClosed(@NotNull EventSource eventSource) {\r\n            super.onClosed(eventSource);\r\n            LOGGER.info(\"closed\");\r\n        }\r\n\r\n        @Override\r\n        public void onFailure(@NotNull EventSource eventSource, @Nullable Throwable t, @Nullable Response response) {\r\n            super.onFailure(eventSource, t, response);\r\n            t.printStackTrace();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n## Resulting log:\r\n```\r\nOct 09, 2019 5:42:31 PM okhttp3.sse.SseDisconnectTest$Listener onOpen\r\nINFO: onOpen\r\nOct 09, 2019 5:42:31 PM okhttp3.sse.SseDisconnectTest$Listener onEvent\r\nINFO: {\"name\":\"oksse\",\"test\":1}\r\nOct 09, 2019 5:42:40 PM okhttp3.sse.SseDisconnectTest main\r\nINFO: cancelled\r\njava.net.SocketException: Socket closed\r\n\tat java.net.SocketInputStream.socketRead0(Native Method)\r\n\tat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\n\tat java.net.SocketInputStream.read(SocketInputStream.java:171)\r\n\tat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n\tat sun.security.ssl.InputRecord.readFully(InputRecord.java:465)\r\n\tat sun.security.ssl.InputRecord.read(InputRecord.java:503)\r\n\tat sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:975)\r\n\tat sun.security.ssl.SSLSocketImpl.readDataRecord(SSLSocketImpl.java:933)\r\n\tat sun.security.ssl.AppInputStream.read(AppInputStream.java:105)\r\n\tat okio.InputStreamSource.read(Okio.kt:102)\r\n\tat okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:159)\r\n\tat okio.RealBufferedSource.read(RealBufferedSource.kt:41)\r\n\tat okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource.read(Http1ExchangeCodec.kt:352)\r\n\tat okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource.read(Http1ExchangeCodec.kt:488)\r\n\tat okhttp3.internal.connection.Exchange$ResponseBodySource.read(Exchange.kt:279)\r\n\tat okio.RealBufferedSource.select(RealBufferedSource.kt:93)\r\n\tat okhttp3.internal.sse.ServerSentEventReader.processNextEvent(ServerSentEventReader.kt:50)\r\n\tat okhttp3.internal.sse.RealEventSource.processResponse(RealEventSource.kt:75)\r\n\tat okhttp3.internal.sse.RealEventSource.onResponse(RealEventSource.kt:46)\r\n\tat okhttp3.RealCall$AsyncCall.run(RealCall.kt:138)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nOct 09, 2019 5:43:40 PM okhttp3.sse.SseDisconnectTest$1 run\r\nINFO: exiting application\r\n```\r\nNote that the connection is cancelled at 5:42:40PM, while the application exits at 5:43:40PM after some timeout.", "url": "https://github.com/square/okhttp/issues/5544", "user": "bashopman", "labels": ["bug"], "created": "2019-10-09 16:54:55", "closed": "2019-10-15 19:45:51", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Tomcat is not able to stop because of \"OkHttp ConnectionPool\" and \"Okio Watchdog\" threads", "body": "There is no possibility to stop/terminate `OkHttp ConnectionPool` and `Okio Watchdog` threads.\r\nWhen there is long poling connections e.g. 10 minutes there is no way to terminate it and stop threads.\r\nMethod `evictAll` doesn't work in this situation. \r\nThreads will be stopped after 10 minutes but it is to late and Tomcat will never stop.\r\nMany API'a like Consul use long polling\r\n\r\napache-tomcat-9.0.26\r\n\r\n\r\nClasses RealConnectionPool and ConnectionPool are final and there is no possibility to do anything with sockets\r\n\r\n\r\n```\r\n08-Oct-2019 11:29:38.518 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [okapi_demo_app_jaxrs_war] appears to have started a thread named [OkHttp ConnectionPool] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n java.lang.Object.wait(Native Method)\r\n java.lang.Object.wait(Object.java:460)\r\n okhttp3.ConnectionPool$1.run(ConnectionPool.java:67)\r\n java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n```\r\n08-Oct-2019 13:42:21.959 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [okapi_demo_app_jaxrs_war] appears to have started a thread named [Okio Watchdog] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n java.lang.Object.wait(Native Method)\r\n java.lang.Object.wait(Object.java:460)\r\n okio.AsyncTimeout$Companion.awaitTimeout$jvm(AsyncTimeout.kt:358)\r\n okio.AsyncTimeout$Watchdog.run(AsyncTimeout.kt:229)\r\n```\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5542", "user": "DanielCharczynski", "labels": ["bug"], "created": "2019-10-08 11:30:47", "closed": "2019-11-18 01:53:25", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "AndroidCertificateChainCleaner equals/hashCode are incorrect", "body": "Not true since the TrustManager can differ\r\n\r\n```\r\n  override fun equals(other: Any?): Boolean =\r\n      other is AndroidCertificateChainCleaner // All instances are equivalent.\r\n```\r\n\r\n```\r\n  /** Returns a certificate pinner that uses `certificateChainCleaner`. */\r\n  internal fun withCertificateChainCleaner(\r\n    certificateChainCleaner: CertificateChainCleaner?\r\n  ): CertificatePinner {\r\n    return if (this.certificateChainCleaner == certificateChainCleaner) {\r\n      this\r\n    } else {\r\n      CertificatePinner(pins, certificateChainCleaner)\r\n    }\r\n  }\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/5531", "user": "yschimke", "labels": ["bug"], "created": "2019-10-04 23:20:57", "closed": "2019-10-07 04:04:35", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Too many NullProxySelector instances break connection pooling", "body": "We observed clients not pooling connections because although they shared a connection pool, they had different instances of NullProxySelector.", "url": "https://github.com/square/okhttp/issues/5519", "user": "swankjesse", "labels": ["bug"], "created": "2019-10-02 03:18:21", "closed": "2019-10-02 11:53:33", "commits": {"3497f02f01260684cf0dc16d14310d3181c5aa34": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "23a7df0337443ccec92566d153d461a295a734f4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "499bbc4fe00891e0edfb3d5cf4522b0c5a171e3f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "1b4b6bbc82206816ced207bb0132611f770c56cd": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3497f02f01260684cf0dc16d14310d3181c5aa34", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "23a7df0337443ccec92566d153d461a295a734f4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "499bbc4fe00891e0edfb3d5cf4522b0c5a171e3f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ae67a3afcc3d3ef34695514c4c975fbacd95a330"], "nameRev": "499bbc4fe00891e0edfb3d5cf4522b0c5a171e3f tags/parent-4.3.0~62^2", "commitMessage": "Fix connection pooling for different clients with the same pool.\n\nCloses: https://github.com/square/okhttp/issues/5519\n", "commitDateTime": "2019-10-01 23:50:26", "authoredDateTime": "2019-10-01 23:21:55", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/proxy/NullProxySelector.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/test/java/okhttp3/CallTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "okhttp/src/test/java/okhttp3/KotlinSourceModernTest.kt", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.connectionPoolingWithFreshClientSamePool()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.connectionPoolingWithClientBuiltOffProxy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1b4b6bbc82206816ced207bb0132611f770c56cd", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["582f8ef2f78cf001d479cb65831674289fd83af0"], "nameRev": "1b4b6bbc82206816ced207bb0132611f770c56cd tags/parent-4.2.1~1^2", "commitMessage": "Fix connection pooling for different clients with the same pool.\n\nCloses: https://github.com/square/okhttp/issues/5519\n", "commitDateTime": "2019-10-02 07:58:59", "authoredDateTime": "2019-10-01 23:21:55", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/proxy/NullProxySelector.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/test/java/okhttp3/CallTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "okhttp/src/test/java/okhttp3/KotlinSourceModernTest.kt", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.connectionPoolingWithFreshClientSamePool()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.connectionPoolingWithClientBuiltOffProxy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["499bbc4fe00891e0edfb3d5cf4522b0c5a171e3f"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 4.0, "lines": 8.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/proxy/NullProxySelector.kt", "okhttp/src/main/java/okhttp3/OkHttpClient.kt"], "changesInPackagesSPOON": []}, {"title": "callEnd and responseBodyEnd methods are not called for EventListener", "body": "When using the asynchronous call with ResponseCallback, the callEnd and responseBodyEnd callbacks are not triggered. But Callback's onResponse is getting triggered\r\n    \r\n    val client = OkHttpClient.Builder()\r\n    .eventListenerFactory(HttpEventListenerFactory.FACTORY)\r\n     .build()\r\n\r\n    val request = Request.Builder()\r\n        .url(\"http://jsonplaceholder.typicode.com/comments?postId=1\")\r\n        .build()\r\n\r\n     with(client) {\r\n         newCall(request).enqueue(object : Callback {\r\n            override fun onFailure(call: Call, e: IOException) {\r\n                Log.d(\"OkHttp##\", \"Request failed\")\r\n            }\r\n\r\n            override fun onResponse(call: Call, response: Response) {\r\n                //this is getting triggered\r\n                Log.d(\"OkHttp##\", \"Response received\")\r\n            }\r\n        })\r\n      }\r\n\r\n**EventListener class**\r\n    \r\n       public class HttpEventListenerFactory extends EventListener {\r\n\r\n    public static final Factory FACTORY = new Factory() {\r\n        final AtomicLong nextCallId = new AtomicLong(1L);\r\n\r\n        @Override\r\n        public EventListener create(Call call) {\r\n            long callId = nextCallId.getAndIncrement();\r\n            Log.d(\"OkHttp##\", \"next call id : \" + nextCallId);\r\n            String message = String.format(Locale.US, \"%04d %s%n\", callId, call.request().url());\r\n            Log.d(\"OkHttp##\", message);\r\n            return new HttpEventListenerFactory(callId, System.nanoTime());\r\n        }\r\n    };\r\n\r\n    @Override\r\n    public void responseBodyEnd(Call call, long byteCount) {\r\n        // this method never gets called\r\n        printEvent(\"Response body end\", callId);\r\n    }", "url": "https://github.com/square/okhttp/issues/5516", "user": "bantyK", "labels": ["bug", "needs info"], "created": "2019-10-01 10:05:46", "closed": "2019-10-01 10:37:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Protocol Upgrade Mechanism in okHttp Interceptors", "body": "I need to upgrade my request from being served by HTTP1.1 to HTTP/2. This is so far what I have tried.\r\n\r\n```\r\npublic class H2cUpgradeRequestInterceptor implements Interceptor {\r\n    private static final Log logger = LogFactory.getLog(H2cUpgradeRequestInterceptor.class);\r\n    @Override\r\n    public Response intercept(Chain chain) throws IOException {\r\n        Request request = chain.request();\r\n        Request upgradeRequest = request.newBuilder().addHeader(\"Connection\", \"Upgrade, HTTP2-Settings\")\r\n                .addHeader(\"Upgrade\", \"h2c\").addHeader(\"HTTP2-Settings\", \"AAMAAABkAARAAAAAAAIAAAAA\").build();\r\n        Response upgradeResponse = chain.proceed(upgradeRequest);\r\n        if (upgradeResponse != null && upgradeResponse.code() == HttpStatus.SC_SWITCHING_PROTOCOLS) {\r\n            logger.debug(\"Switching Protocols success\"); // Success. Got 101 in reply.\r\n        }\r\n        Response response = chain.proceed(request);\r\n        if (response.protocol() == Protocol.HTTP_2) { // This is returning HTTP1.1 as protocol\r\n            logger.debug(\"Used upgraded h2c protocol\");\r\n        }\r\n        return response;\r\n    }\r\n    }\r\n```\r\nMy server has h2c enabled. I am also receiving 101 Switching Protocols in my first chain.proceed() call. But the next proceed() always gives me HTTP1.1 as protocol even if switching protocols is successful. Is it right right way of achieving protocol upgrade through okhttp? Or a kind of bug?", "url": "https://github.com/square/okhttp/issues/5514", "user": "mohamedanees6", "labels": ["bug"], "created": "2019-09-30 10:18:04", "closed": "2019-09-30 11:07:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NullPointerException: realConnectionPool", "body": "stack trace:\r\n java.lang.NullPointerException: Attempt to invoke virtual method 'okhttp3.internal.connection.RealConnectionPool okhttp3.internal.Internal.realConnectionPool(okhttp3.ConnectionPool)' on a null object reference\r\n     at okhttp3.internal.connection.Transmitter.<init>(Transmitter.java:81)\r\n     at okhttp3.RealCall.newRealCall(RealCall.java:64)\r\n     at okhttp3.OkHttpClient.newCall(OkHttpClient.java:401)\r\n     at retrofit2.ServiceMethod.toCall(ServiceMethod.java:113)\r\n     at retrofit2.OkHttpCall.createRawCall(OkHttpCall.java:184)\r\n     at retrofit2.OkHttpCall.execute(OkHttpCall.java:167)\r\n     at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:42)\r\n     at io.reactivex.Observable.subscribe(Observable.java:12246)\r\n     at retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n     at io.reactivex.Observable.subscribe(Observable.java:12246)\r\n     at io.reactivex.internal.operators.observable.ObservableSingleSingle.subscribeActual(ObservableSingleSingle.java:35)\r\n     at io.reactivex.Single.subscribe(Single.java:3575)\r\n     at io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run(SingleSubscribeOn.java:89)\r\n     at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:578)\r\n     at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n     at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n     at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\r\n     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n     at java.lang.Thread.run(Thread.java:764)\r\n\r\nversion: latest\r\n\r\nwe use dagger to initialize okhttp and retrofit instances:\r\n\r\n```\r\n    @Provides\r\n    @Singleton\r\n    fun providesRetrofit(gsonConverterFactory: GsonConverterFactory, rxJava2CallAdapterFactory: RxJava2CallAdapterFactory,\r\n                         okHttpClient: OkHttpClient, context: Context): Retrofit =\r\n            Retrofit.Builder().baseUrl(context.getString(R.string.api_endpoint))\r\n                    .addConverterFactory(gsonConverterFactory)\r\n                    .addCallAdapterFactory(rxJava2CallAdapterFactory)\r\n                    .client(okHttpClient)\r\n                    .build()\r\n\r\n    @Provides\r\n    @Singleton\r\n    fun providesOkHttpClient(cache: Cache): OkHttpClient {\r\n        val client = OkHttpClient.Builder()\r\n                .cache(cache)\r\n                .connectTimeout(20, TimeUnit.SECONDS)\r\n                .writeTimeout(30, TimeUnit.SECONDS)\r\n                .readTimeout(10, TimeUnit.SECONDS)\r\n                .addInterceptor(HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))\r\n\r\n        return client.build()\r\n    }\r\n\r\n```\r\nbug happens when in single activity app with \"do not keep activities\" setting in developer options flag turned on and when pick photo intent is executed and then in onActivityResult we try to upload this photo....activity is recreated but okhttp instance is somehow not properly/completely initialised (for test purposes I added 5 seconds delay to wait if it will be initialised, but with no luck, the same error occured.. to sum it up, after reset, it's unusable)", "url": "https://github.com/square/okhttp/issues/5506", "user": "palicka", "labels": ["bug"], "created": "2019-09-27 10:12:12", "closed": "2019-11-18 01:54:34", "commits": {}, "ttf": 51.000277777777775, "commitsDetails": []}, {"title": "Upgrading to OkHttp 4.20 from 3.11.0 (cannot access url it is public/*package*/ in Request)", "body": "This is my build.gradle\r\n\r\n```\r\napply plugin: 'kotlin'\r\n\r\ndependencies {\r\n    def dependencies = rootProject.ext.repositoryDependencies\r\n    def testDependencies = rootProject.ext.repositoryTestDependencies\r\n\r\n    implementation project(\":domain\")\r\n\r\n    implementation dependencies.kotlin\r\n    implementation dependencies.moshi\r\n    implementation dependencies.rxJavaAdapter\r\n    implementation dependencies.okHttp3\r\n    implementation dependencies.jodaTime\r\n    testImplementation testDependencies.okHttpMock\r\n    testImplementation testDependencies.okHttp3\r\n}\r\n\r\nsourceCompatibility = \"1.8\"\r\ntargetCompatibility = \"1.8\"\r\n\r\ncompileKotlin {\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n}\r\ncompileTestKotlin {\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n}\r\n\r\ncompileJava {\r\n    sourceCompatibility = JavaVersion.VERSION_1_8\r\n    targetCompatibility = JavaVersion.VERSION_1_8\r\n}\r\n```\r\n\r\nKotlin version:\r\n`  kotlin              : \"org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.50,`\r\n\r\nOkhttp3 version:\r\n`okHttp3                 : \"com.squareup.okhttp3:okhttp:4.2.0,`\r\n\r\nFailing method:\r\n```\r\nfun OkHttpClient.Builder.addQueryParameterInterceptor(name: String, value: String): OkHttpClient.Builder {\r\n    addInterceptor {\r\n        var request = it.request()\r\n        val url = request.url.newBuilder().addQueryParameter(name, value).build()\r\n        request = request.newBuilder().url(url).build()\r\n        it.proceed(request)\r\n    }\r\n    return this\r\n}\r\n```\r\n\r\nUsing `url()` is deprecated in `Request` and suggests using the val `url`.\r\n\r\nHowever building with `request.url.etc` I get `cannot access url it is public/*package*/ in Request`\r\n\r\nI looked at the migration guide and changed the java compatibility to 1.8.\r\n\r\nThank you for the help.", "url": "https://github.com/square/okhttp/issues/5505", "user": "RoudyK", "labels": ["bug"], "created": "2019-09-27 05:58:15", "closed": "2019-09-28 06:54:42", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Unknown Error: \"???\" okhttp3.internal.http2.Http2Writer.data", "body": "Hi,\r\n\r\nI'm using retrofit on my Android Project and I got a report from crashlytics but surprisingly has no stack trace:\r\n\r\n![image](https://user-images.githubusercontent.com/47604549/65662177-1da2b800-e066-11e9-8293-4235f154a9c3.png)\r\n\r\n![image](https://user-images.githubusercontent.com/47604549/65662231-432fc180-e066-11e9-8bd6-111fe059147d.png)\r\n\r\nThese are my dependencies concerning this issue.\r\n\r\n```gradle\r\n//Retrofit\r\nimplementation 'com.squareup.retrofit2:retrofit:2.4.0'\r\nimplementation 'com.squareup.retrofit2:converter-gson:2.4.0'\r\nimplementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'\r\nimplementation 'com.squareup.okhttp3:logging-interceptor:3.7.0'\r\n```\r\n\r\nAny chance we can identify such occurrence? Device used is Samsung Galaxy Tab A, Android Pie (9)\r\n\r\nThanks!", "url": "https://github.com/square/okhttp/issues/5497", "user": "imcsedms", "labels": ["bug", "needs info", "stackoverflow"], "created": "2019-09-26 06:04:48", "closed": "2019-09-26 06:23:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Got NoSuchMethodError after enable proguard", "body": "I used 3.12.3 okhttp(and mockwebserver) version.\r\n\r\nWhen mockserver started all is fine. But when it get some request, it fails:\r\n\r\nCaused by: java.lang.NoSuchMethodError: No static method b(Ljava/net/Socket;)Lokio/Source; in class Lb81; or its super classes (declaration of 'b81' appears in /data/app/myapp/base.apk:classes3.dex)\r\n        at okhttp3.mockwebserver.MockWebServer$3.processConnection(MockWebServer.java:513)\r\n        at okhttp3.mockwebserver.MockWebServer$3.execute(MockWebServer.java:443)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:761)\r\n\r\nI add keep rules for this class in proguard, but it doesn't help me. \r\n\r\nSo is it a bug or my bad ?", "url": "https://github.com/square/okhttp/issues/5495", "user": "RuslanSelenium", "labels": ["bug"], "created": "2019-09-24 13:26:53", "closed": "2019-09-26 06:11:35", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "java.net.ProtocolException: unexpected end of stream W/System.err:     at okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.read(Http1ExchangeCodec.kt:392)", "body": "I am getting this exception:\r\n\r\n`java.net.ProtocolException: unexpected end of stream\r\nW/System.err:     at okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.read(Http1ExchangeCodec.kt:392)`\r\n\r\nWhen I try to do a request to a SOAP WebService.\r\n\r\nSometimes I get the right answer but often I get this exception.\r\nDebugging, I found that at this part of the file Http1ExchangeCodec.kt:392:\r\n`override fun read(sink: Buffer, byteCount: Long): Long {\r\n\r\n      require(byteCount >= 0L) { \"byteCount < 0: $byteCount\" }\r\n      check(!closed) { \"closed\" }\r\n      if (bytesRemaining == 0L) return -1\r\n      val read = super.read(sink, minOf(bytesRemaining, byteCount))\r\n      if (read == -1L) {\r\n        realConnection!!.noNewExchanges() // The server didn't supply the promised content length.\r\n        val e = ProtocolException(\"unexpected end of stream\")\r\n        responseBodyComplete()\r\n        throw e\r\n      }`\r\n\r\nUsing SOAPUI I always receive the right answer, content-length: 933. And doing debug it always receive that content-length (933 same as SOAPUI) but sometimes at the variable bytesRemaining I get 1 and the exception but this doesn't happen always.\r\n\r\nThis my Retrofit Instance:\r\n`private static OkHttpClient.Builder okHttpClient = new OkHttpClient\r\n            .Builder();\r\n\r\n    private static Retrofit.Builder retrofitBuilder =  new Retrofit.Builder()\r\n            .addConverterFactory(SimpleXmlConverterFactory.create(serializer));\r\n\r\n    public RetrofitGenerator() {\r\n    }\r\n\r\n    public static <S> S createService(Class<S> serviceClass, String baseUrl) {\r\n        OkHttpClient client = okHttpClient.connectTimeout(5, TimeUnit.SECONDS)\r\n                .writeTimeout(5, TimeUnit.SECONDS)\r\n                .readTimeout(5, TimeUnit.SECONDS)\r\n                .retryOnConnectionFailure(true)\r\n                .build();\r\n        Retrofit retrofit = retrofitBuilder.baseUrl(baseUrl).client(client).build();\r\n        return retrofit.create(serviceClass);\r\n    }`\r\n\r\nThis how I am doing the Call:\r\n`final Call<ResponseEnvelope> consumeWS = RetrofitGenerator\r\n                .getConsultarTipoDeDocumentoApi()\r\n                .getTiposDeDocumento(this.USERNAME_ENCRYPT, this.USERTOKEN_ENCRYPT,\r\n                        this.MESSAGEID_ENCRYPT, \"close\", this.requestEnvelope);\r\n        consumeWS.enqueue(new Callback<ResponseEnvelope>() {\r\n            @Override\r\n            public void onResponse(Call<ResponseEnvelope> call, Response<ResponseEnvelope> response) {\r\n                ResponseEnvelope responseEnvelope = new ResponseEnvelope(response.body().getBody());\r\n                if(responseEnvelope != null && response.isSuccessful())\r\n                    dataTipoDeDocumento.setValue(responseEnvelope.getBody().getMtrtipdoccResponse()\r\n                            .getReturn().getLISTAREGISTROS().getLIST());\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ResponseEnvelope> call, Throwable t) {\r\n                t.printStackTrace();\r\n                dataTipoDeDocumento.setValue(null);\r\n            }\r\n        });\r\n\r\n        return dataTipoDeDocumento;`\r\n\r\nI need some help with this problem please.", "url": "https://github.com/square/okhttp/issues/5492", "user": "mateovalencia", "labels": ["bug"], "created": "2019-09-23 15:39:54", "closed": "2019-09-23 16:14:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Intellij launch failing because Android classes present", "body": "android-all makes the Class.forName succeed.\r\n\r\n```\r\n    val isSupported: Boolean = try {\r\n      // Trigger an early exception over a fatal error, prefer a RuntimeException over Error.\r\n      Class.forName(\"com.android.org.conscrypt.OpenSSLSocketImpl\")\r\n\r\n      // Fail Fast\r\n      check(\r\n          Build.VERSION.SDK_INT >= 21) { \"Expected Android API level 21+ but was ${Build.VERSION.SDK_INT}\" }\r\n\r\n      true\r\n    } catch (_: ClassNotFoundException) {\r\n      false\r\n    }\r\n```\r\n\r\n```\r\njava.lang.UnsatisfiedLinkError: 'java.lang.String android.os.SystemProperties.native_get(java.lang.String, java.lang.String)'\r\n\r\n\tat android.os.SystemProperties.native_get(Native Method)\r\n\tat android.os.SystemProperties.get(SystemProperties.java:118)\r\n\tat android.os.Build.getString(Build.java:1107)\r\n\tat android.os.Build.<clinit>(Build.java:45)\r\n\tat android.os.Build$VERSION.<clinit>(Build.java:197)\r\n\tat okhttp3.internal.platform.AndroidPlatform.<clinit>(AndroidPlatform.kt:207)\r\n\tat okhttp3.internal.platform.Android10Platform.<clinit>(Android10Platform.kt:65)\r\n\tat okhttp3.internal.platform.Platform$Companion.findPlatform(Platform.kt:200)\r\n\tat okhttp3.internal.platform.Platform$Companion.access$findPlatform(Platform.kt:168)\r\n\tat okhttp3.internal.platform.Platform.<clinit>(Platform.kt:169)\r\n\tat okhttp3.testing.PlatformRule$Companion.getPlatformSystemProperty(PlatformRule.kt:277)\r\n\tat okhttp3.testing.PlatformRule.<clinit>(PlatformRule.kt:245)\r\n\tat okhttp3.CallTest.<init>(CallTest.java:104)\r\n```", "url": "https://github.com/square/okhttp/issues/5490", "user": "yschimke", "labels": ["bug"], "created": "2019-09-23 11:03:50", "closed": "2019-09-29 07:41:51", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Top private domain matches unexpected TLDs", "body": "Guava\u2019s implementation says that if a domain is not registered it cannot have a top private domain. OkHttp treats any unknown suffix as a top private domain.\r\n\r\n```\r\n    assertNull(HttpUrl.parse(\"https://foo.www/\").topPrivateDomain());\r\n```", "url": "https://github.com/square/okhttp/issues/5489", "user": "swankjesse", "labels": ["bug"], "created": "2019-09-23 01:44:53", "closed": "2020-01-11 22:24:45", "commits": {}, "ttf": 110.00027777777778, "commitsDetails": []}, {"title": "HttpUrl host validation could be more strict", "body": "It permits the following invalid domains:\r\n\r\n```\r\nabc.12c\r\nfoo-.com\r\n_bar.quux\r\nfoo+bar.com\r\nfoo!bar.com\r\na.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.com\r\naaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.aaaaa.1234567890.c.c\r\n```", "url": "https://github.com/square/okhttp/issues/5488", "user": "swankjesse", "labels": ["bug"], "created": "2019-09-23 01:42:37", "closed": "2020-03-29 21:45:40", "commits": {}, "ttf": 188.00027777777777, "commitsDetails": []}, {"title": "Android test is broken due to Conscrypt socket support", "body": "A merge conflict with the AndroidQPlatform and ConscryptTest.  I'll work on the correct fix tomorrow.  I didn't think about what would happen if conscrypt is enabled since AndroidQPlatform is mostly the JDK9 platform code.", "url": "https://github.com/square/okhttp/issues/5480", "user": "yschimke", "labels": ["bug"], "created": "2019-09-21 22:31:16", "closed": "2019-09-23 17:49:27", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "OkHttp and Retrofit throws javax.net.ssl.SSLException until restart", "body": "I have an android app in kotlin that talks to an express nodeJS api via mutual authentication. The app is designed to keep collecting data after the screen is off/on, survive reboots, etc. This is done with the user's consent. \r\n\r\nThis is occuring on an Android 8.1 Samsung tablet that has no other apps installed (other than the standard samsung installs)\r\n\r\nAfter some time of the screen being off, (Time until the error shows up ranges from 20 minutes to 3 hours) we get the below exception until we restart (We left it running in this error state for >8 hours, and it never recovered) the app or recreate retrofit object. The foreground service is still running and collecting data without an issue. \r\n\r\nThe issue is not a server problem, I had a shell script curl the server with the same parameters and that worked for ~16 hours. \r\n\r\nWe have tried: \r\n\r\n* Setting client header 'Connection', 'close'\r\n* Setting server header 'Connection', 'close' \r\n* both of the above\r\n* Setting client header 'Connection', 'Keep-Alive'\r\n* Setting server header 'Connection', 'Keep-Alive'\r\n* Both of the above\r\n* Combinations of all of the above\r\n* Checking for a server performance issue\r\n* Making body smaller (Current limit is `100` items, which translates to a ~`120kb` body)\r\n* Some other things I am forgetting\r\n\r\n\r\n**Workaround**: \r\n    When this exception is thrown, we create a new retrofit service, drain all connectionss, then resume posting to the API. \r\n\r\n**Versions used**:\r\n``` \r\nimplementation 'com.squareup.retrofit2:retrofit:2.6.1'\r\nimplementation 'com.squareup.retrofit2:converter-gson:2.6.1'\r\nimplementation 'com.squareup.okhttp3:okhttp:4.2.0'\r\nimplementation 'com.squareup.okhttp3:logging-interceptor:4.2.0'\r\nimplementation 'com.squareup.okhttp3:okhttp-brotli:4.2.0'\r\n\r\n```\r\n\r\n**Stack Trace**: \r\n```\r\n javax.net.ssl.SSLException: Read error: ssl=0xa65d7940: I/O error during system call, Connection reset by peer\r\n        at com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\r\n        at com.android.org.conscrypt.SslWrapper.read(SslWrapper.java:391)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream.read(ConscryptFileDescriptorSocket.java:567)\r\n        at okio.InputStreamSource.read(Okio.kt:102)\r\n        at okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:159)\r\n        at okio.RealBufferedSource.indexOf(RealBufferedSource.kt:349)\r\n        at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.kt:222)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.readHeaderLine(Http1ExchangeCodec.kt:210)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.kt:181)\r\n        at okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.kt:105)\r\n        at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:37)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at com.someCompany.someApp.api.RetrofitFactory$logoutInterceptor$$inlined$invoke$1.intercept(Interceptor.kt:75)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.brotli.BrotliInterceptor.intercept(BrotliInterceptor.kt:39)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:215)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at com.someCompany.someApp.api.RetrofitFactory$headersInterceptor$$inlined$invoke$1.intercept(Interceptor.kt:75)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n        at okhttp3.RealCall$AsyncCall.run(RealCall.kt:136)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\n**What the server sees:**\r\n\r\n```\r\nBadRequestError: request aborted \r\n at IncomingMessage.onAborted (/app/node_modules/raw-body/index.js:231:10) \r\n at emitNone (events.js:106:13) \r\n at IncomingMessage.emit (events.js:208:7)\r\n at abortIncoming (_http_server.js:445:9) \r\n at socketOnClose (_http_server.js:438:3) \r\n at emitOne (events.js:121:20) \r\n at TLSSocket.emit (events.js:211:7) \r\n at _handle.close (net.js:561:12) \r\n at Socket.done (_tls_wrap.js:360:7) \r\n at Object.onceWrapper (events.js:315:30) \r\n at emitOne (events.js:116:13) \r\n at Socket.emit (events.js:211:7) \r\n at TCP._handle.close [as _onclose] (net.js:561:12) \r\n```\r\n\r\n**RetrofitFactory:**\r\n```\r\nobject RetrofitFactory {\r\n    fun makeRetrofitService(context: Context, isAuthenticated: Boolean = false): RetrofitService {\r\n        val baseUrl: String = if (BuildConfig.DEBUG) {\r\n            \"https://api.staging.someCompany.com/\"\r\n        } else {\r\n            \"https://api-api.someCompany.com/\"\r\n        }\r\n        return Retrofit.Builder().baseUrl(baseUrl)\r\n            .addConverterFactory(GsonConverterFactory.create(makeGson()))\r\n            .client(makeClient(context, isAuthenticated))\r\n            .build().create(RetrofitService::class.java)\r\n    }\r\n\r\n    private fun makeGson(): Gson {\r\n        return GsonBuilder().excludeFieldsWithModifiers(Modifier.TRANSIENT).create()\r\n    }\r\n    fun makeClient(context: Context, isAuthenticated: Boolean): OkHttpClient {\r\n        val hostnameVerifier = HostnameVerifier { hostname, _ ->\r\n            HttpsURLConnection.getDefaultHostnameVerifier().run {\r\n                if (BuildConfig.DEBUG) {\r\n                    hostname == \"relay-api.staging.someCompany.com\"\r\n                } else {\r\n                    hostname == \"relay-api.someCompany.com\"\r\n                }\r\n            }\r\n        }\r\n\r\n        val sslAndMgr = if (isAuthenticated) {\r\n            clientAuthSslContext(context)\r\n        } else {\r\n            basicSslContext(context)\r\n        }\r\n\r\n        return OkHttpClient.Builder()\r\n            .connectTimeout(15, TimeUnit.SECONDS)\r\n            .readTimeout(15, TimeUnit.SECONDS)\r\n            .sslSocketFactory(sslAndMgr.first, sslAndMgr.second)\r\n            .addInterceptor(headersInterceptor()).addInterceptor(loggingInterceptor())\r\n            .addInterceptor(BrotliInterceptor)\r\n            .addInterceptor(logoutInterceptor())\r\n            .hostnameVerifier(hostnameVerifier)\r\n            .retryOnConnectionFailure(true)\r\n            .build()\r\n    }\r\n    private fun loggingInterceptor() = HttpLoggingInterceptor().apply {\r\n        level =\r\n            if (BuildConfig.DEBUG) HttpLoggingInterceptor.Level.BODY else HttpLoggingInterceptor.Level.NONE\r\n    }\r\n\r\n\r\n    private fun logoutInterceptor() = Interceptor { chain ->\r\n        val mainResponse = chain.proceed(chain.request())\r\n\r\n        if (mainResponse.code == 401) {\r\n            Certificates(someApp().applicationContext).logout()\r\n        }\r\n        mainResponse\r\n    }\r\n    private fun headersInterceptor() = Interceptor { chain ->\r\n        chain.proceed(\r\n            (chain.request().newBuilder()\r\n                .addHeader(\"Accept\", \"application/json\")\r\n                .addHeader(\"Accept-Language\", \"en\")\r\n                .addHeader(\"Content-Type\", \"application/json\").build()\r\n                    )\r\n        )\r\n    }\r\n\r\n    private fun basicSslContext(context: Context): Pair<SSLSocketFactory, X509TrustManager> {\r\n        val certMgr = Certificates(context)\r\n        val keyStore = KeyStore.getInstance(KeyStore.getDefaultType())\r\n        keyStore.load(null, null)\r\n\r\n        keyStore.setCertificateEntry(\"serverCert\", certMgr.loadServerChain())\r\n        val trustMgrFactory =\r\n            TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())\r\n        trustMgrFactory.init(keyStore)\r\n\r\n        val sslContext = SSLContext.getInstance(\"TLS\")\r\n        sslContext.init(null, trustMgrFactory.trustManagers, null)\r\n        return Pair(sslContext.socketFactory, trustMgrFactory.trustManagers[0] as X509TrustManager)\r\n    }\r\n\r\n    private fun clientAuthSslContext(context: Context): Pair<SSLSocketFactory, X509TrustManager> {\r\n        val certMgr = Certificates(context) //This is a helper that loads certificates/PKs as needed\r\n\r\n        val keyStore = KeyStore.getInstance(KeyStore.getDefaultType())\r\n        keyStore.load(null, null)\r\n        keyStore.setCertificateEntry(\"ca\", certMgr.loadServerChain())\r\n        keyStore.setCertificateEntry(\"client\", certMgr.loadClientCert())\r\n        keyStore.setKeyEntry(\r\n            \"private\",\r\n            certMgr.loadPrivateKey(),\r\n            null,\r\n            arrayOf(certMgr.loadClientCert(), certMgr.loadCA())\r\n        )\r\n\r\n        val kmf: KeyManagerFactory = KeyManagerFactory.getInstance(\"X509\")\r\n\r\n        kmf.init(keyStore, null)\r\n\r\n        val trustMgrFactory =\r\n            TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm())\r\n        trustMgrFactory.init(keyStore)\r\n        val sslContext = SSLContext.getInstance(\"TLS\")\r\n        sslContext.init(kmf.keyManagers, trustMgrFactory.trustManagers, null)\r\n\r\n        return Pair(object : DelegatingSSLSocketFactory(sslContext.socketFactory) { //DelegatingSSLSocketFactory from https://github.com/square/okhttp/blob/master/okhttp/src/test/java/okhttp3/DelegatingSSLSocketFactory.java \r\n            @Throws(\r\n                IOException::class\r\n            )\r\n            override fun configureSocket(sslSocket: SSLSocket): SSLSocket {\r\n                sslSocket.sslParameters.needClientAuth = true\r\n                sslSocket.needClientAuth = true\r\n                return super.configureSocket(sslSocket)\r\n            }\r\n        }, trustMgrFactory.trustManagers[0] as X509TrustManager)\r\n    }\r\n}\r\n```\r\n\r\n**Where we actually call the api:**\r\n```\r\nval res = CoroutineScope(Dispatchers.IO).launch {\r\n            try {\r\n\r\n                //call Room DB and get list of items out\r\n\r\n                val body = BulkRelayRequest(items.toTypedArray())\r\n                val response = apiService.postBulkRelayLogs(body)\r\n\r\n                if (response.isSuccessful) {\r\n                   //update room DB\r\n                    Log.i(TAG, \"Posted ***** with ids ${response.body()!!.payload.ids}\")\r\n                } else {\r\n                    //failure :(\r\n                    val eParams = Bundle()\r\n                    firebaseAnalytics.logEvent(\"API_SEND_FAILED\", eParams)\r\n                    Log.e(TAG, \"Error: failed to post ****** to API\")\r\n                }\r\n            } catch(e: SSLException)\r\n            {\r\n                isDraining = true\r\n                apiService = RetrofitFactory.makeRetrofitService(context, true)\r\n                Log.e(TAG, \"SSL Error occurred. Draining connections and restarting retrofit\")\r\n            }\r\n            catch (e: Throwable) {\r\n                val eParams = Bundle()\r\n                firebaseAnalytics.logEvent(\"API_SEND_FAILED\", eParams)\r\n                Log.e(TAG, \"Error: failed to post *** to API and threw an exception\", e)\r\n            }\r\n            finally {\r\n                connectionsActive--\r\n            }\r\n        }\r\n    res.ensureActive()\r\n```", "url": "https://github.com/square/okhttp/issues/5475", "user": "atotalnoob", "labels": ["bug", "needs info"], "created": "2019-09-19 19:03:04", "closed": "2019-09-29 19:00:55", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "MockResponse usage in kotlin is clunky", "body": "```\r\n        MockResponse()\r\n            .apply { \r\n              setResponseCode(204)\r\n              status = \"HTTP/1.1 204 NO CONTENT\" \r\n            }\r\n```\r\n\r\nstatus is not chainable, so need apply.  setResponseCode is not a setter (returns this) so can't use as a property.", "url": "https://github.com/square/okhttp/issues/5470", "user": "yschimke", "labels": ["bug"], "created": "2019-09-19 07:45:34", "closed": "2019-09-19 11:57:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Ampersand \"&\" in the request in the filter body is not encoded as \"%26\"", "body": "When the field value contains the ampersand \"&\" for example, \"Brothers & Co\" and I use that value like filter in the query, after encoding string to query I have ampersand \"&\" in the filter body, like this:\r\n https://example.eu/exsource/User?ormat=json&$filter=(username%20eq%20%27examlpleusername%27%20and%20filtername%20eq%20%2Brothers%20&%20Co%27)&asOfDate=2019-09-13\r\n\r\nSo this request does not work and I become Http response with status code 500. For correct work I should to convert it to \"%26\" additionally.", "url": "https://github.com/square/okhttp/issues/5468", "user": "Valentin0810", "labels": ["bug"], "created": "2019-09-18 09:12:55", "closed": "2019-09-26 13:01:20", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "RealWebSocket.listener", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n", "url": "https://github.com/square/okhttp/issues/5466", "user": "zicen", "labels": ["bug"], "created": "2019-09-17 12:25:12", "closed": "2019-09-17 12:25:24", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "LoggingEventListener triggers failures in Android MockWebServer response", "body": "I suspect only an issue if we look at the handshake certificates on Android with the MockWebServer.\r\n\r\n```\r\n07:13:09 V/InstrumentationResultParser: There was 1 failure:\r\n07:13:09 V/InstrumentationResultParser: 1) testMockWebserverRequest(okhttp.android.test.OkHttpTest)\r\n07:13:09 V/InstrumentationResultParser: javax.net.ssl.SSLPeerUnverifiedException\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner.clean(AndroidPlatform.kt:189)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.RealConnection$connectTls$1.invoke(RealConnection.kt:377)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.RealConnection$connectTls$1.invoke(RealConnection.kt:70)\r\n07:13:09 V/InstrumentationResultParser: at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.Handshake.peerCertificates(Unknown Source:7)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.Handshake.toString(Handshake.kt:127)\r\n07:13:09 V/InstrumentationResultParser: at java.lang.String.valueOf(String.java:2924)\r\n07:13:09 V/InstrumentationResultParser: at java.lang.StringBuilder.append(StringBuilder.java:132)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.logging.LoggingEventListener.secureConnectEnd(LoggingEventListener.kt:76)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.kt:311)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:178)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:236)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:109)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:77)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.kt:162)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:35)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:192)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.RealCall.execute(RealCall.kt:66)\r\n07:13:09 V/InstrumentationResultParser: at okhttp.android.test.OkHttpTest.testMockWebserverRequest(OkHttpTest.kt:198)\r\n07:13:09 V/InstrumentationResultParser: at java.lang.reflect.Method.invoke(Native Method)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n07:13:09 V/InstrumentationResultParser: at android.support.test.internal.runner.junit4.statement.RunBefores.evaluate(RunBefores.java:80)\r\n07:13:09 V/InstrumentationResultParser: at android.support.test.internal.runner.junit4.statement.RunAfters.evaluate(RunAfters.java:61)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n07:13:09 V/InstrumentationResultParser: at android.support.test.runner.AndroidJUnit4.run(AndroidJUnit4.java:101)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.Suite.runChild(Suite.java:128)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.Suite.runChild(Suite.java:27)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n07:13:09 V/InstrumentationResultParser: at org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n07:13:09 V/InstrumentationResultParser: at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:56)\r\n07:13:09 V/InstrumentationResultParser: at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:384)\r\n07:13:09 V/InstrumentationResultParser: at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2189)\r\n07:13:09 V/InstrumentationResultParser: Caused by: java.lang.reflect.InvocationTargetException\r\n07:13:09 V/InstrumentationResultParser: at java.lang.reflect.Method.invoke(Native Method)\r\n07:13:09 V/InstrumentationResultParser: at okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner.clean(AndroidPlatform.kt:186)\r\n07:13:09 V/InstrumentationResultParser: ... 60 more\r\n07:13:09 V/InstrumentationResultParser: Caused by: java.security.cert.CertificateException: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\r\n07:13:09 V/InstrumentationResultParser: at com.android.org.conscrypt.TrustManagerImpl.verifyChain(TrustManagerImpl.java:674)\r\n07:13:09 V/InstrumentationResultParser: at com.android.org.conscrypt.TrustManagerImpl.checkTrustedRecursive(TrustManagerImpl.java:551)\r\n07:13:09 V/InstrumentationResultParser: at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:507)\r\n07:13:09 V/InstrumentationResultParser: at com.android.org.conscrypt.TrustManagerImpl.checkServerTrusted(TrustManagerImpl.java:335)\r\n07:13:09 V/InstrumentationResultParser: at android.security.net.config.NetworkSecurityTrustManager.checkServerTrusted(NetworkSecurityTrustManager.java:113)\r\n07:13:09 V/InstrumentationResultParser: at android.security.net.config.RootTrustManager.checkServerTrusted(RootTrustManager.java:133)\r\n07:13:09 V/InstrumentationResultParser: at java.lang.reflect.Method.invoke(Native Method)\r\n07:13:09 V/InstrumentationResultParser: at android.net.http.X509TrustManagerExtensions.checkServerTrusted(X509TrustManagerExtensions.java:101)\r\n07:13:09 V/InstrumentationResultParser: ... 62 more\r\n07:13:09 V/InstrumentationResultParser: Caused by: java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\r\n07:13:09 V/InstrumentationResultParser: ... 70 more\r\n```", "url": "https://github.com/square/okhttp/issues/5464", "user": "yschimke", "labels": ["bug"], "created": "2019-09-16 18:16:43", "closed": "2019-12-31 19:53:30", "commits": {}, "ttf": 106.00027777777778, "commitsDetails": []}, {"title": "The file name ExchangeCode.kt may be wrong", "body": "\r\nThe interface is ExchangeCodec\uff0c but the file name is ExchangeCode.kt, maybe it should be ExchangeCodec.kt", "url": "https://github.com/square/okhttp/issues/5456", "user": "weikaiyun1990", "labels": ["bug"], "created": "2019-09-14 15:17:01", "closed": "2019-09-16 08:18:28", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "missing files?", "body": "While attempting to load OkHttp3, I continually got errors and decided to find source code and attempt to work out what was causing problems.\r\n\r\nThe file okhttp3.internal.toImmutableList is completely missing. It's only mentioned in imports and no where else. JvmName is also missing, but that may just be a dependency I missed.\r\n\r\nAny help would be appreciated.", "url": "https://github.com/square/okhttp/issues/5455", "user": "johannkaiser", "labels": ["bug"], "created": "2019-09-14 03:05:32", "closed": "2019-09-14 05:38:53", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ConnectionTimeout in android REST request", "body": "Im getting a timeout in android app, with the timeout set to 300 s. \r\nWith an external REST tool, the same request take 10 millis.\r\nThe request returns a JSON, with one field including a Base64 encoded image.\r\n\r\nHere is the code:\r\n\r\nString urlFinal = restServiceHost+\":\"+restServicePort+\"/\"+table+filter;\r\n\r\n        OkHttpClient client = null;\r\n\r\n        OkHttpClient.Builder builder = new OkHttpClient.Builder();\r\n        builder.connectTimeout(300, TimeUnit.SECONDS);\r\n        builder.readTimeout(300, TimeUnit.SECONDS);\r\n        builder.writeTimeout(300, TimeUnit.SECONDS);\r\n        client = builder.build();\r\n\r\n        Request request = new Request.Builder()\r\n                .url(urlFinal)\r\n                .build();\r\n\r\n        try {\r\n            Response response = client.newCall(request).execute();\r\n            result = response.body().string();\r\n        }catch (Exception ex) {\r\n            ex.printStackTrace();\r\n        }\r\n        return result;\r\n\r\nI can give you the real URL in private.\r\n\r\nThis code is executing in a async thread in android app, with the following library import:\r\n\r\nimplementation 'com.squareup.okhttp3:okhttp:4.2.0'\r\n", "url": "https://github.com/square/okhttp/issues/5454", "user": "AndresHades", "labels": ["bug", "stackoverflow"], "created": "2019-09-13 17:20:49", "closed": "2019-09-13 18:06:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Wifi java.net.SocketTimeoutException: failed to connect to host", "body": "\r\n**Preconditions:**\r\n1) Network hadware:\r\nAmplifier of 3G/LTE signal + Wifi router.\r\n2) Devices:\r\nSamsung galaxy A10 Android 9 \r\niPhone 8 Plus iOS 12.4\r\n3) Application:\r\nI have two applications (iOS and Android) that interact with the same server.\r\nAndroid aplication uses library okhttp:4.2.0 and makes requests through okhttp.\r\n\r\n**Test #1**\r\nDevice: iPhone 8 Plus iOS 12.4.\r\nMobile network (3G/LTE) data is disabled, connected by wifi.\r\nRequest GET with MyTestApp iOS aplication:\r\nThe request is successful and the result is returned.\r\n\r\n**Test #2**\r\nDevice: iPhone 8 Plus iOS 12.4.\r\nMobile network (3G/LTE) data is enabled. Wifi is disabled.\r\nRequest GET with MyTestApp iOS aplication:\r\nThe request is successful and the result is returned.\r\n\r\n**Test #3**\r\nDevice: Samsung galaxy A10 Android 9 \r\nMobile network (3G/LTE) data is disabled, connected by wifi.\r\nRequest GET with MyTestApp android aplication:\r\nLogcat: HTTP FAILED: java.net.SocketTimeoutException: failed to connect to [MyServerName]/46.148.196.218 (port 4002) from /10.0.1.7 (port 37470) after 30000ms\r\n\r\n**Test #4**\r\nDevice: Samsung galaxy A10 Android 9 \r\nMobile network (3G/LTE) data is disabled, connected by wifi.\r\nRequest GET with RestApiClient android aplication:\r\n(https://play.google.com/store/apps/details?id=com.app.restclient)\r\nLogcat: HTTP FAILED: java.net.SocketTimeoutException: failed to connect to [MyServerName]/46.148.196.218 (port 4002) from /10.0.1.7 (port 37504) after 60000ms\r\n\r\n**Test #5**\r\nDevice: Samsung galaxy A10 Android 9 \r\nMobile network (3G/LTE) data is enabled. Wifi is disabled.\r\nRequest with MyTestApp android aplication:\r\nThe request is successful and the result is returned.\r\n\r\n**Conclusion:**\r\nThe ios application always work fine with any network configuration. Android application does not work through a wifi router in 80% of cases.\r\n", "url": "https://github.com/square/okhttp/issues/5453", "user": "SergeyBukarev", "labels": ["bug", "stackoverflow"], "created": "2019-09-12 12:11:53", "closed": "2019-09-12 12:50:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "connect timeout set not work.", "body": "Hi\uff0ci set connection timeout to 2 sec\uff0cuse a fake address that can not connect\uff0cfinally after 20 sec , i got the exception throwed. \r\n\r\ncan someone explain it? thanks", "url": "https://github.com/square/okhttp/issues/5451", "user": "Clearlove9", "labels": ["bug", "needs info"], "created": "2019-09-12 06:57:02", "closed": "2019-09-15 10:19:27", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "I got a strange result from the listener that measure the coonection duration", "body": "I write a EventListenerFactory to provide a eventListener to measure connection duration for every call, the result will be report to my server, the client connect timeout is confiured 20s,but \r\nthe statistics show that a few connect duration are very long,even more than two hours!\r\nmost of the statistics is 0.\r\n\r\n```\r\nobject HttpTimeStatListenerFactory : EventListener.Factory {\r\n    val statDataMap = HashMap<Call, HttpTimeStatData>()\r\n    override fun create(call: Call): EventListener {\r\n        val statData = HttpTimeStatData()\r\n        statDataMap[call] = statData\r\n        return HttpTimeStatListener(statData) { releasedCall -> statDataMap.remove(releasedCall) }\r\n    }\r\n}\r\n\r\ndata class HttpTimeStatData(\r\n        var conn_ts: Long = 0,\r\n        var reqH_ts: Long = 0,\r\n        var reqB_ts: Long = 0,\r\n        var resH_ts: Long = 0,\r\n        var resB_ts: Long = 0,\r\n        var rt_ts: Long = 0,\r\n        var event_ts: Long = 0\r\n);\r\n```\r\n```\r\npackage com.duola.android.base.netclient.stat\r\n\r\nimport okhttp3.*\r\nimport java.io.IOException\r\nimport java.net.InetAddress\r\nimport java.net.InetSocketAddress\r\nimport java.net.Proxy\r\nimport java.util.concurrent.TimeUnit\r\n\r\nclass HttpTimeStatListener(private val statData: HttpTimeStatData, private val onReleaseFunc: (Call) -> Unit) : EventListener() {\r\n    private var resBStartNS = 0L\r\n    private var resHStartNS = 0L\r\n    private var reqBStartNS = 0L\r\n    private var reqHStartNS = 0L\r\n    private var callStartNS = 0L\r\n    private var connectStartNS = 0L\r\n\r\n    override fun callStart(call: Call) {\r\n        callStartNS = System.nanoTime()\r\n        statData.event_ts = System.currentTimeMillis()\r\n    }\r\n\r\n    override fun dnsStart(call: Call, domainName: String) {\r\n        super.dnsStart(call, domainName)\r\n    }\r\n\r\n    override fun dnsEnd(call: Call, domainName: String, inetAddressList: MutableList<InetAddress>) {\r\n        super.dnsEnd(call, domainName, inetAddressList)\r\n    }\r\n\r\n\r\n    override fun connectStart(call: Call, inetSocketAddress: InetSocketAddress, proxy: Proxy) {\r\n        connectStartNS = System.nanoTime()\r\n    }\r\n\r\n    override fun secureConnectStart(call: Call) {\r\n        super.secureConnectStart(call)\r\n    }\r\n\r\n    override fun secureConnectEnd(call: Call, handshake: Handshake?) {\r\n        super.secureConnectEnd(call, handshake)\r\n    }\r\n\r\n    override fun connectionAcquired(call: Call, connection: Connection) {\r\n        super.connectionAcquired(call, connection)\r\n    }\r\n\r\n    override fun connectEnd(call: Call, inetSocketAddress: InetSocketAddress, proxy: Proxy, protocol: Protocol?) {\r\n        statData.conn_ts = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - callStartNS);\r\n    }\r\n\r\n    override fun connectFailed(call: Call, inetSocketAddress: InetSocketAddress, proxy: Proxy, protocol: Protocol?, ioe: IOException) {\r\n        statData.conn_ts = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - callStartNS);\r\n    }\r\n\r\n    override fun connectionReleased(call: Call, connection: Connection) {\r\n    }\r\n\r\n\r\n    override fun requestHeadersStart(call: Call) {\r\n        reqHStartNS = System.nanoTime()\r\n    }\r\n\r\n    override fun requestHeadersEnd(call: Call, request: Request) {\r\n        statData.reqH_ts = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - reqHStartNS);\r\n\r\n    }\r\n\r\n    override fun requestBodyStart(call: Call) {\r\n        reqBStartNS = System.nanoTime()\r\n    }\r\n\r\n    override fun requestBodyEnd(call: Call, byteCount: Long) {\r\n        statData.reqB_ts = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - reqBStartNS);\r\n    }\r\n\r\n\r\n    override fun responseHeadersStart(call: Call) {\r\n        resHStartNS = System.nanoTime()\r\n    }\r\n\r\n    override fun responseHeadersEnd(call: Call, response: Response) {\r\n        statData.resH_ts = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - resHStartNS);\r\n    }\r\n\r\n    override fun responseBodyStart(call: Call) {\r\n        resBStartNS = System.nanoTime()\r\n\r\n    }\r\n\r\n    override fun responseBodyEnd(call: Call, byteCount: Long) {\r\n        statData.resB_ts = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - resBStartNS);\r\n\r\n    }\r\n\r\n\r\n    override fun callEnd(call: Call) {\r\n        statData.rt_ts = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - callStartNS);\r\n        onReleaseFunc(call)\r\n    }\r\n\r\n    override fun callFailed(call: Call, ioe: IOException) {\r\n        statData.rt_ts = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - callStartNS);\r\n        onReleaseFunc(call)\r\n    }\r\n}\r\n``` \r\n", "url": "https://github.com/square/okhttp/issues/5450", "user": "xncHung", "labels": ["bug", "needs info", "stackoverflow"], "created": "2019-09-12 04:25:27", "closed": "2019-09-15 10:20:21", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "\"Socket timeout exception\" due to frequent cancelation of HTTP2 byte ranged requests", "body": "### Issue description\r\nExperiencing \"Socket timeout exception\" when byte ranged requests are cancelled frequently.\r\n\r\nRunning a test where the client side requests about ~10mbytes of data using okhttp client with HTTP2 protocol enabled and cancelling the request after receiving 1000 bytes,\r\nproduces a socket timeout exception after a few hundred requests and the test fails.\r\n\r\n### Reproduction steps\r\nBy running the following test code the problem can be reproduced easily, Add the following piece of code\r\nin the `CallTest.java` file found under the okhttp module test directory:\r\n\r\n```java\r\n@Test\r\npublic void socketTimeoutTest() throws Exception {\r\n  enableProtocol(Protocol.HTTP_2);\r\n  MockResponse mockResponse = new MockResponse().setBody(new String(new char[10 * 1024 * 1024]));\r\n\r\n  for (int i = 0; i < 5000; i++) {\r\n    server.enqueue(mockResponse);\r\n    System.out.println(\"~~~~Running for \" + i + \"~~~~\");\r\n    URL url = server.url(\"/\").url();\r\n    Request request = new Request.Builder().url(url)\r\n            .header(\"range\", \"bytes=\" + 1 + \"-\" + 1000000).build();\r\n    Call call = client.newCall(request);\r\n    Response response = call.execute();\r\n    ResponseBody body = response.body();\r\n    if (body == null) throw new IllegalStateException(\"No available byte stream\");\r\n    try (InputStream inputStream = body.byteStream()) {\r\n      System.out.println(\"response code: \" + response.code());\r\n      int counter = 0;\r\n      // read until 1000 bytes, then cancel\r\n      while (counter < 1000) {\r\n        counter += inputStream.read(new byte[1000]);\r\n      }\r\n    }\r\n    System.out.println(\"request cancelled\");\r\n  }\r\n}\r\n```\r\n\r\nYou will also need to increase the JUnit timeout settings by adding the following line at the top of the class\r\n```java \r\n@Rule public final TestRule timeout = new Timeout(Long.MAX_VALUE, TimeUnit.MILLISECONDS);\r\n``` \r\n\r\n### Stacktrace printed out\r\n\r\nSTANDARD_OUT:\r\n```sh\r\nokhttp3.CallTest > cloudFrontOkHttpTest FAILED\r\n    java.net.SocketTimeoutException: timeout\r\n        at okhttp3.internal.http2.Http2Stream$StreamTimeout.newTimeoutException(Http2Stream.kt:701)\r\n        at okhttp3.internal.http2.Http2Stream$StreamTimeout.exitAndThrowIfTimedOut(Http2Stream.kt:710)\r\n        at okhttp3.internal.http2.Http2Stream$FramingSource.read(Http2Stream.kt:398)\r\n        at okhttp3.internal.connection.Exchange$ResponseBodySource.read(Exchange.kt:279)\r\n        at okio.RealBufferedSource$inputStream$1.read(RealBufferedSource.kt:438)\r\n        at java.base/java.io.InputStream.read(InputStream.java:205)\r\n        at okhttp3.CallTest.cloudFrontOkHttpTest(CallTest.java:1201)\r\n```\r\n\r\nSTANDARD_ERROR:\r\n```sh\r\nokhttp3.CallTest > cloudFrontOkHttpTest STANDARD_ERROR\r\n    java.net.SocketTimeoutException: timeout\r\n    Sep. 11, 2019 4:50:34 PM okhttp3.internal.platform.Platform log\r\n    INFO: Http2Connection.Listener failure for localhost\r\n    java.io.IOException: stream closed\r\n        at okhttp3.internal.http2.Http2Connection.writeData(Http2Connection.kt:314)\r\n        at okhttp3.internal.http2.Http2Stream$FramingSink.emitFrame(Http2Stream.kt:592)\r\n        at okhttp3.internal.http2.Http2Stream$FramingSink.write(Http2Stream.kt:547)\r\n        at okio.RealBufferedSink.emitCompleteSegments(RealBufferedSink.kt:181)\r\n        at okio.RealBufferedSink.write(RealBufferedSink.kt:39)\r\n        at okhttp3.mockwebserver.MockWebServer.throttledTransfer(MockWebServer.kt:868)\r\n        at okhttp3.mockwebserver.MockWebServer.access$throttledTransfer(MockWebServer.kt:100)\r\n        at okhttp3.mockwebserver.MockWebServer$Http2SocketHandler.writeResponse(MockWebServer.kt:1070)\r\n        at okhttp3.mockwebserver.MockWebServer$Http2SocketHandler.onStream(MockWebServer.kt:964)\r\n        at okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1.run(Util.kt:580)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n        at java.base/java.lang.Thread.run(Thread.java:834)\r\n        Suppressed: okhttp3.internal.http2.StreamResetException: stream was reset: CANCEL\r\n                at okhttp3.internal.http2.Http2Stream.checkOutNotClosed$okhttp(Http2Stream.kt:673)\r\n                at okhttp3.internal.http2.Http2Stream$FramingSink.emitFrame(Http2Stream.kt:579)\r\n                at okhttp3.internal.http2.Http2Stream$FramingSink.close(Http2Stream.kt:638)\r\n                at okio.RealBufferedSink.close(RealBufferedSink.kt:244)\r\n                at kotlin.io.CloseableKt.closeFinally(Closeable.kt:56)\r\n                at okhttp3.mockwebserver.MockWebServer$Http2SocketHandler.writeResponse(MockWebServer.kt:1068)\r\n                ... 5 more\r\n\r\n```\r\n\r\n### Version of okhttp3 being used\r\n\r\nokhttp-4.2.0", "url": "https://github.com/square/okhttp/issues/5449", "user": "SukritGupta17", "labels": ["bug", "needs info"], "created": "2019-09-12 00:37:37", "closed": "2019-09-12 07:21:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "head after failed put breaks on upgrade from 3.10.0 to 3.14.2", "body": "We have a test that executes the following sequence of actions\r\n\r\n1. a PUT with a RequestBody that throws an IO exception during writeTo\r\n2. a HEAD for the same URI\r\n\r\nOn 3.10.0, the HEAD request is sent over the wire as a HEAD request.\r\n\r\nOn 3.14.2 with no changes other than upgrading OkHttp in the build.gradle, \r\nthe HEAD request is sent over the wire as a PUT request as detected both\r\nby our HTTP server and by WireShark running on the client.\r\n\r\nCould some state from the failed request be leaking into the subsequent request?\r\n\r\nI tried to create a test to reproduce this issue but ran into a separate bug \r\nwith MockWebServer. In the same situation, MockWebServer throws:\r\n\r\nSEVERE: MockWebServer[32987] connection from localhost/127.0.0.1 crashed\r\njava.lang.NumberFormatException: For input string: \"HEAD /endpoint HTTP/1.1\"\r\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\r\n\tat java.base/java.lang.Integer.parseInt(Integer.java:652)\r\n\tat okhttp3.mockwebserver.MockWebServer.readRequest(MockWebServer.java:624)\r\n\r\nThe attached test reproduces the MockWebServer issue. If the MockWebServer issue is fixed, \r\nI hope the attached test will then reproduce the actual issue of interest.\r\n  \r\n[OkPutHeadTest.zip](https://github.com/square/okhttp/files/3602643/OkPutHeadTest.zip)\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5447", "user": "ehennum", "labels": ["bug"], "created": "2019-09-11 20:41:42", "closed": "2019-10-04 02:47:27", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "RestTemplate with OkHttp3ClientHttpRequestFactory does not allow the app to stop", "body": "### Prerequisite\r\n\r\nI have a simple Spring Boot app that does a single call to `https://google.com` via `RestTemplate`.\r\n\r\n`RestTemplate` is just customized a bit, it consumes `OkHttp3ClientHttpRequestFactory` as a request factory.\r\n\r\n### Problem\r\n\r\nHTTP call is being executed correctly but after finishing the `main` method application still keeps running and does not stop.\r\n\r\nWhat is the reason for that and how to avoid this behavior?\r\n\r\n### Reproducer\r\n\r\nReproducible source code: https://github.com/alexey-anufriev/okhttpclient-shutdown-problem\r\n\r\n### Important Note\r\n\r\nThe problem occurs only on **Java 11**, but not on Java 8. On Java 8 it terminates immediately.\r\n", "url": "https://github.com/square/okhttp/issues/5446", "user": "alexey-anufriev", "labels": ["bug", "stackoverflow"], "created": "2019-09-11 15:01:33", "closed": "2019-09-12 08:14:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Different response between okhttp and postman?", "body": "## environment\r\nokhttp:3.8.1\r\njava:1.7\r\nplatform: windows10\r\n\r\n## code\r\n```java\r\nOkHttpClient okHttpClient = new OkHttpClient();\r\nRequestBody body = new FormBody.Builder().build();\r\n\r\nString url = \"http://02b9f26fb7f74f8b:6b78c57d7c474730a324805b219e8b44@10.138.188.206:9001/verify/target/add?dbName=222\"\r\n\r\nRequest request = new Request.Builder().url(url).post(body).build();\r\nCall call = okHttpClient.newCall(request);\r\nResponse response = call.execute();\r\nString s = response.body().string();\r\n```\r\n##  result in okhttp\r\n![image](https://user-images.githubusercontent.com/18138724/64684502-cf16ea80-d4b7-11e9-8de4-554823176e1b.png)\r\n\r\n\r\n\r\n##  result in postman \r\n![image](https://user-images.githubusercontent.com/18138724/64684402-a8f14a80-d4b7-11e9-9981-5d4ddb275ef9.png)\r\nthe headers option in  screenshot  are not use ,the result is same when i didn't require any headers ,it returns success\r\n\r\n## how should i fixed this?\r\ni think maybe the url cause the question,if okhttp can't parse url like \"http://02b9f26fb7f74f8b:6b78c57d7c474730a324805b219e8b44@10.138.188.206:9001/verify/target/add?dbName=222\"?", "url": "https://github.com/square/okhttp/issues/5444", "user": "qiangf811", "labels": ["bug"], "created": "2019-09-11 09:19:02", "closed": "2019-09-12 08:22:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "CipherSuite TLS_NULL_WITH_NULL_NULL", "body": "I met a problem.Here is the error message; This mistack happened 500 times.I have no idea to handle it.Please help me,Thank you!\r\n```java\r\n# OkHttp Dispatcher(3730)  java.lang.IllegalArgumentException  \r\nNo enum constant okhttp3.CipherSuite.TLS_NULL_WITH_NULL_NULL\r\n\r\n1 java.lang.Enum.valueOf(Enum.java:258)\r\n2\u00a0okhttp3.CipherSuite.okhttp3.CipherSuite valueOf(java.lang.String)(SourceFile:32)\r\n3\u00a0okhttp3.CipherSuite.okhttp3.CipherSuite forJavaName(java.lang.String)(SourceFile:381)\r\n4\u00a0okhttp3.Handshake.okhttp3.Handshake get(javax.net.ssl.SSLSession)(SourceFile:53)\r\n5\u00a0okhttp3.internal.io.RealConnection.void connectTls(int,int,okhttp3.internal.ConnectionSpecSelector)(SourceFile:242)\r\n6\u00a0okhttp3.internal.io.RealConnection.void establishProtocol(int,int,okhttp3.internal.ConnectionSpecSelector)(SourceFile:198)\r\n7\u00a0okhttp3.internal.io.RealConnection.void buildConnection(int,int,int,okhttp3.internal.ConnectionSpecSelector)(SourceFile:173)\r\n8\u00a0okhttp3.internal.io.RealConnection.void connect(int,int,int,java.util.List,boolean)(SourceFile:113)\r\n9\u00a0okhttp3.internal.http.StreamAllocation.okhttp3.internal.io.RealConnection findConnection(int,int,int,boolean)(SourceFile:188)\r\n10\u00a0okhttp3.internal.http.StreamAllocation.okhttp3.internal.io.RealConnection findHealthyConnection(int,int,int,boolean,boolean)(SourceFile:124)\r\n11\u00a0okhttp3.internal.http.StreamAllocation.okhttp3.internal.http.HttpStream newStream(int,int,int,boolean,boolean)(SourceFile:94)\r\n12\u00a0okhttp3.internal.http.HttpEngine.okhttp3.internal.http.HttpStream connect()(SourceFile:301)\r\n13\u00a0okhttp3.internal.http.HttpEngine.void sendRequest()(SourceFile:253)\r\n14\u00a0okhttp3.RealCall.okhttp3.Response getResponse(okhttp3.Request,boolean)(SourceFile:254)\r\n15\u00a0okhttp3.RealCall$ApplicationInterceptorChain.okhttp3.Response proceed(okhttp3.Request)(SourceFile:212)\r\n16\u00a0okhttp3.RealCall.okhttp3.Response getResponseWithInterceptorChain(boolean)(SourceFile:171)\r\n17\u00a0okhttp3.RealCall.access$100(SourceFile:31)\r\n18\u00a0okhttp3.RealCall$AsyncCall.void execute()(SourceFile:135)\r\n19\u00a0okhttp3.internal.NamedRunnable.void run()(SourceFile:33)\r\n20\u00a0java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n21\u00a0java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n22\u00a0java.lang.Thread.run(Thread.java:784)\r\n\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/5440", "user": "vittawang", "labels": ["bug"], "created": "2019-09-10 03:47:33", "closed": "2019-09-11 03:19:54", "commits": {"39f42f2202d7819cb2effb24036a8ec8e14bbdbb": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "39f42f2202d7819cb2effb24036a8ec8e14bbdbb", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["a3f1e44262c820574ce296293c72634503f3d5f3"], "nameRev": "39f42f2202d7819cb2effb24036a8ec8e14bbdbb tags/parent-4.3.0~93^2", "commitMessage": "Handle TLS_NULL_WITH_NULL_NULL by throwing an IOException\n\nCloses: https://github.com/square/okhttp/issues/5440\n", "commitDateTime": "2019-09-10 21:37:04", "authoredDateTime": "2019-09-10 21:37:04", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/Handshake.kt", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "okhttp/src/test/java/okhttp3/DelegatingSSLSession.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "okhttp/src/test/java/okhttp3/DelegatingSSLSocket.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/HandshakeTest.kt", "insertions": 126, "deletions": 0, "lines": 126}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DelegatingSSLSession.java", "spoonMethods": [{"spoonMethodName": "okhttp3.DelegatingSSLSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DelegatingSSLSocket.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["39f42f2202d7819cb2effb24036a8ec8e14bbdbb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 8, "lines": 18, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/Handshake.kt"], "changesInPackagesSPOON": ["okhttp3.DelegatingSSLSession"]}, {"title": "Mockwebserver can't serve in AndroidTest in Dynamic Feature Module", "body": "Ok, so this is the scenario.\r\nOn **master** branch with AndroidTest in the \"app\" module, the tests are ok.\r\nOn **delivery** branch where I migrated \"charts\" module to use dynamic feature delivery, MockWebserver always fails to serve, so some tests fail.\r\n\r\nI know you will ask a minimal repro project, but this is what I can offer\r\nhttps://github.com/BugsBunnyBR/bit-chain/tree/delivery\r\n\r\nThe tests\r\n`should_show_card_title_and_subtitle` and `should_show_try_again_alert_and_try_again` are failing as they expect the request to be served with success.\r\n\r\nError log:\r\n```\r\n09-07 20:16:51.149  6736  6785 D OkHttp  : --> GET http://localhost:39527/market-price\r\n09-07 20:16:51.149  6736  6785 D OkHttp  : --> END GET\r\n09-07 20:16:51.203  2022  2046 W InputReader: Device has associated, but no associated display id.\r\n09-07 20:16:51.203  2022  2046 I chatty  : uid=1000(system) android.anim identical 8 lines\r\n09-07 20:16:51.203  2022  2046 W InputReader: Device has associated, but no associated display id.\r\n09-07 20:16:51.214  6736  6736 D LifecycleMonitor: Lifecycle status change: br.com.bit.chain.charts.presentation.ChartActivity@a638679 in: CREATED\r\n09-07 20:16:51.218  6736  6736 D LifecycleMonitor: Lifecycle status change: br.com.bit.chain.charts.presentation.ChartActivity@a638679 in: STARTED\r\n09-07 20:16:51.221  6736  6736 D LifecycleMonitor: Lifecycle status change: br.com.bit.chain.charts.presentation.ChartActivity@a638679 in: RESUMED\r\n09-07 20:16:51.254  2022  4489 I WifiService: releaseWifiLock uid=10095\r\n09-07 20:16:51.293  1746  1746 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 8298496\r\n09-07 20:16:51.304  1746  1746 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 8298496\r\n09-07 20:16:51.311  1746  2985 D gralloc_ranchu: gralloc_alloc: Creating ashmem region of size 8298496\r\n09-07 20:16:51.335  6736  6780 D EGL_emulation: eglMakeCurrent: 0xf2e7f8e0: ver 3 0 (tinfo 0xebba7cb0)\r\n09-07 20:16:51.448  2022  2050 I ActivityTaskManager: Displayed br.com.bit.chain.dev/br.com.bit.chain.charts.presentation.ChartActivity: +529ms\r\n09-07 20:16:51.522  6736  6768 W m.bit.chain.de: Accessing hidden method Lsun/misc/Unsafe;->compareAndSwapObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z (greylist, linking, allowed)\r\n09-07 20:16:51.531  3058  3186 D EGL_emulation: eglMakeCurrent: 0xebbc36e0: ver 3 0 (tinfo 0xc3ba99a0)\r\n09-07 20:16:51.580  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:51.592  2593  6814 I PlaceInferenceEngine: [anon] Changed inference mode: 0\r\n09-07 20:16:51.600  2473  2870 D EGL_emulation: eglMakeCurrent: 0xebb75180: ver 3 0 (tinfo 0xebc564d0)\r\n09-07 20:16:51.607  2593  2593 I GeofencerStateMachine: removeGeofences: removeRequest=RemoveGeofencingRequest[REMOVE_BY_PENDING_INTENT pendingIntent=PendingIntent[creatorPackage=com.google.android.gms], packageName=com.google.android.gms]\r\n09-07 20:16:51.618  2593  2593 I GeofencerStateMachine: removeGeofences: removeRequest=RemoveGeofencingRequest[REMOVE_BY_PENDING_INTENT pendingIntent=PendingIntent[creatorPackage=com.google.android.gms], packageName=com.google.android.gms]\r\n09-07 20:16:51.631  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:51.646  3058  6418 I PBSessionCacheImpl: Deleted sessionId[13450794126119140] from persistence.\r\n09-07 20:16:51.646  2022  2032 I system_server: NativeAlloc concurrent copying GC freed 44509(2450KB) AllocSpace objects, 9(260KB) LOS objects, 32% free, 12MB/18MB, paused 89us total 857.946ms\r\n09-07 20:16:51.663  3058  3192 W SearchServiceCore: Abort, client detached.\r\n09-07 20:16:51.759  2022  2838 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898205754 duration=0\r\n09-07 20:16:51.773  2022  2838 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898211759 duration=0\r\n09-07 20:16:51.776  2022  2838 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 41 time=1567898205542 duration=0\r\n09-07 20:16:51.793  2022  2838 W AppOps  : Noting op not finished: uid 10105 pkg com.google.android.googlequicksearchbox code 79 time=1567898145009 duration=0\r\n09-07 20:16:51.919  2593  5320 I ctxmgr  : [ProducerStatusImpl] updateStateForNewContextData: inactive, contextName=7 [CONTEXT service_id=47 ]\r\n09-07 20:16:51.943  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:51.982  2022  2838 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898211773 duration=0\r\n09-07 20:16:51.995  2022  4489 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898211983 duration=0\r\n09-07 20:16:52.037  2593  3239 I chatty  : uid=10095(com.google.android.gms) FlpThread identical 2 lines\r\n09-07 20:16:52.038  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:52.041  2593  6814 I Places  : ?: PlacesBleScanner start() with priority 2\r\n09-07 20:16:52.042  2593  6814 I PlaceInferenceEngine: [anon] Changed inference mode: 1\r\n09-07 20:16:52.098  2022  4489 I WifiService: acquireWifiLock uid=10095 lockMode=2\r\n09-07 20:16:52.100  2593  2593 E BeaconBle: Missing BluetoothAdapter\r\n09-07 20:16:52.100  2593  2593 I BeaconBle: BLE 'KK+' software access layer enabled\r\n09-07 20:16:52.203  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:52.241  2022  4489 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898211995 duration=0\r\n09-07 20:16:52.255  2022  4489 I WifiService: releaseWifiLock uid=10095\r\n09-07 20:16:52.270  2022  4489 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898212241 duration=0\r\n09-07 20:16:52.278  2593  2593 I BeaconBle: Client requested scan, settings=BleSettings [scanMode=ZERO_POWER, callbackType=ALL_MATCHES, reportDelayMillis=0, 1 filters, 0 clients, callingClientName=Places]\r\n09-07 20:16:52.286  2593  2593 I BeaconBle: Scan : No clients left, canceling alarm.\r\n09-07 20:16:52.287  2593  2593 E BeaconBle: Scan couldn't start for Places\r\n09-07 20:16:52.287  2593  2593 W Places  : BLE failure while scanning - code 5\r\n09-07 20:16:52.386  2022  4489 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898212270 duration=0\r\n09-07 20:16:52.390  2022  4489 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898212386 duration=0\r\n09-07 20:16:52.408  2022  4489 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898212390 duration=0\r\n09-07 20:16:52.410  2022  4489 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898212408 duration=0\r\n09-07 20:16:52.427  2022  4489 W AppOps  : Noting op not finished: uid 10105 pkg com.google.android.googlequicksearchbox code 79 time=1567898211793 duration=0\r\n09-07 20:16:53.212  2473  3124 E ActivityThread: Failed to find provider info for com.google.android.apps.wellbeing.api\r\n09-07 20:16:53.688  3098  3098 I Finsky  : [2] com.google.android.finsky.scheduler.JobSchedulerEngine$PhoneskyJobSchedulerJobService.onStartJob(3): onJobSchedulerWakeup with jobId 9005\r\n09-07 20:16:53.689  3098  3098 I Finsky  : [2] rsl.a(22): Scheduling fallback job with id: 9034, and delay: 43200000 ms\r\n09-07 20:16:53.691  3098  3098 I Finsky  : [2] rsl.a(5): Scheduling fallback in 64799999 (absolute: 67892446)\r\n09-07 20:16:53.738  3098  3098 I Finsky  : [2] rsw.handleMessage(9): DeviceState: DeviceState{currentTime=1567898213732, isCharging=false, isIdle=false, netAny=true, netNotRoaming=true, netUnmetered=true, batteryPercent=100.0}\r\n09-07 20:16:53.742  3098  6675 I Finsky  : [307] rui.b(7): Jobs in database: 1-1337 3-4 12-1 24-77777777 26-1414141414 \r\n09-07 20:16:53.760  3098  3098 I Finsky  : [2] rsp.a(22): Running job: 12-1\r\n09-07 20:16:53.761  3098  3098 I Finsky  : [2] com.google.android.finsky.contentsync.ContentSyncJob.a(19): ContentSyncJob started\r\n09-07 20:16:53.761  3098  3098 I Finsky  : [2] rsw.handleMessage(101): RunningQueue size: 1, PendingQueue size: 0\r\n09-07 20:16:53.761  3098  3098 I Finsky  : [2] rsw.handleMessage(110): Running queue: 12-1 \r\n09-07 20:16:53.947  3098  6822 I Finsky  : [314] ebw.a(14): Completed 0 account content syncs with 0 successful.\r\n09-07 20:16:53.947  3098  3098 I Finsky  : [2] com.google.android.finsky.contentsync.ContentSyncJob.a(17): Installation state replication succeeded.\r\n09-07 20:16:53.947  3098  3098 I Finsky  : [2] ruf.a(28): jobFinished: 12-1. TimeElapsed: 188ms.\r\n09-07 20:16:53.947  3098  3098 I Finsky  : [2] rsp.c(6): Job 12-1 finished. Not rescheduling.\r\n09-07 20:16:53.948  3098  3098 I Finsky  : [2] rsw.handleMessage(101): RunningQueue size: 0, PendingQueue size: 0\r\n09-07 20:16:53.948  3098  3098 I Finsky  : [2] rsw.handleMessage(48): Executor finished\r\n09-07 20:16:53.984  3098  3098 I Finsky  : [2] rui.b(7): Jobs in database: 1-1337 3-4 24-77777777 26-1414141414 \r\n09-07 20:16:53.985  3098  3098 I Finsky  : [2] rrm.a(59): ConstraintMapping: 24-77777777,  -> L: 0ms, D: 76759303ms, C: false, I: true, N: 0\r\n09-07 20:16:53.985  3098  3098 I Finsky  : [2] rrm.a(59): ConstraintMapping: 1-1337,  -> L: 29119075ms, D: 72319075ms, C: false, I: false, N: 1\r\n09-07 20:16:53.985  3098  3098 I Finsky  : [2] rrm.a(59): ConstraintMapping: 3-4,  -> L: 0ms, D: 83355079ms, C: true, I: true, N: 2\r\n09-07 20:16:53.987  3098  3098 I Finsky  : [2] rrm.a(59): ConstraintMapping: 26-1414141414,  -> L: 38060938ms, D: 38960938ms, C: false, I: false, N: 0\r\n09-07 20:16:53.996  3098  3098 I Finsky  : [2] rtr.a(45): Cancelling existing jobscheduler jobs: 9004 9006 9007 \r\n09-07 20:16:53.996  3098  3098 I Finsky  : [2] rtr.a(15): Throttling wakeup for job 9000 (expected to run in 0 ms) due to recent wakeup\r\n09-07 20:16:53.996  3098  3098 I Finsky  : [2] rtr.a(1): Scheduling job Id: 9000, L: 30000, D: 76759303, C: false, I: true, N: 0\r\n09-07 20:16:53.997  3098  3098 I Finsky  : [2] rtr.a(1): Scheduling job Id: 9001, L: 29119075, D: 72319075, C: false, I: false, N: 1\r\n09-07 20:16:53.997  3098  3098 I Finsky  : [2] rtr.a(15): Throttling wakeup for job 9002 (expected to run in 0 ms) due to recent wakeup\r\n09-07 20:16:53.997  3098  3098 I Finsky  : [2] rtr.a(1): Scheduling job Id: 9002, L: 30000, D: 83355079, C: true, I: true, N: 2\r\n09-07 20:16:53.998  3098  3098 I Finsky  : [2] rtr.a(1): Scheduling job Id: 9003, L: 38060938, D: 38960938, C: false, I: false, N: 0\r\n09-07 20:16:55.582  2022  4241 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 41 time=1567898211776 duration=0\r\n09-07 20:16:56.531  6736  6736 W IdlingPolicy: These resources are not idle: [RxJava 2.x IO Scheduler]\r\n09-07 20:16:56.737  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:56.834  2022  2323 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898212410 duration=0\r\n09-07 20:16:56.837  2022  2838 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898216834 duration=0\r\n09-07 20:16:56.839  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:56.907  2022  2050 E memtrack: Couldn't load memtrack module\r\n09-07 20:16:56.907  2022  2050 W android.os.Debug: failed to get memory consumption info: -1\r\n09-07 20:16:56.927  2593  6814 I Places  : ?: PlacesBleScanner stop()\r\n09-07 20:16:56.928  2593  2593 I BeaconBle: Scan : No clients left, canceling alarm.\r\n09-07 20:16:56.928  2593  2593 I BeaconBle: Scan canceled successfully.\r\n09-07 20:16:56.943  2593  6814 I PlaceInferenceEngine: [anon] Changed inference mode: 0\r\n09-07 20:16:56.947  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:57.001  2593  2593 I GeofencerStateMachine: removeGeofences: removeRequest=RemoveGeofencingRequest[REMOVE_BY_PENDING_INTENT pendingIntent=PendingIntent[creatorPackage=com.google.android.gms], packageName=com.google.android.gms]\r\n09-07 20:16:57.002  2593  3239 W GCoreFlp: No location to return for getLastLocation()\r\n09-07 20:16:57.435  2022  2323 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898216837 duration=0\r\n09-07 20:16:57.450  2022  2323 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 79 time=1567898217435 duration=0\r\n09-07 20:16:57.706  2022  4241 D WificondControl: Scan result ready event\r\n09-07 20:17:00.674  2022  2323 W AppOps  : Noting op not finished: uid 10095 pkg com.google.android.gms code 41 time=1567898215582 duration=0\r\n09-07 20:17:01.224  6736  6785 D OkHttp  : <-- HTTP FAILED: java.net.SocketTimeoutException: timeout\r\n09-07 20:17:01.248  6736  6736 W System.err: java.net.SocketTimeoutException: timeout\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okio.SocketAsyncTimeout.newTimeoutException(Okio.kt:159)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okio.AsyncTimeout.exit$jvm(AsyncTimeout.kt:203)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:163)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okio.RealBufferedSource.indexOf(RealBufferedSource.kt:349)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.kt:222)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http1.Http1ExchangeCodec.readHeaderLine(Http1ExchangeCodec.kt:210)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.kt:181)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.kt:105)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:82)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:37)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:215)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat okhttp3.RealCall.execute(RealCall.kt:66)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat retrofit2.OkHttpCall.execute(OkHttpCall.java:188)\r\n09-07 20:17:01.249  6736  6736 W System.err: \tat retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:45)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Observable.subscribe(Observable.java:12267)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Observable.subscribe(Observable.java:12267)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.observable.ObservableSingleSingle.subscribeActual(ObservableSingleSingle.java:35)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Single.subscribe(Single.java:3603)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.single.SingleMap.subscribeActual(SingleMap.java:34)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Single.subscribe(Single.java:3603)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.single.SingleFlatMap.subscribeActual(SingleFlatMap.java:36)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Single.subscribe(Single.java:3603)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.single.SingleCache.subscribeActual(SingleCache.java:65)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Single.subscribe(Single.java:3603)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle$SwitchIfEmptyMaybeObserver.onComplete(MaybeSwitchIfEmptySingle.java:95)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.maybe.MaybeCreate$Emitter.onComplete(MaybeCreate.java:118)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat br.com.bit.chain.charts.data.cache.ChartDataLocalCacheImpl$get$1.subscribe(ChartDataCache.kt:25)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.maybe.MaybeCreate.subscribeActual(MaybeCreate.java:45)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Maybe.subscribe(Maybe.java:4290)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.maybe.MaybeSwitchIfEmptySingle.subscribeActual(MaybeSwitchIfEmptySingle.java:45)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Single.subscribe(Single.java:3603)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.single.SingleToFlowable.subscribeActual(SingleToFlowable.java:37)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.onNext(FlowableFlatMap.java:163)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.flowable.FlowableFromArray$ArraySubscription.fastPath(FlowableFromArray.java:132)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.flowable.FlowableFromArray$BaseArraySubscription.request(FlowableFromArray.java:88)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.onSubscribe(FlowableFlatMap.java:115)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.flowable.FlowableFromArray.subscribeActual(FlowableFromArray.java:38)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher.subscribeActual(FlowableFlatMapPublisher.java:43)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.flowable.FlowableMap.subscribeActual(FlowableMap.java:35)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged.subscribeActual(FlowableDistinctUntilChanged.java:42)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Flowable.subscribe(Flowable.java:14918)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Flowable.subscribe(Flowable.java:14865)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.observable.ObservableFromPublisher.subscribeActual(ObservableFromPublisher.java:31)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Observable.subscribe(Observable.java:12267)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.internal.operators.observable.ObservableMap.subscribeActual(ObservableMap.java:32)\r\n09-07 20:17:01.250  6736  6736 W System.err: \tat io.reactivex.Observable.subscribe(Observable.java:12267)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat io.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:578)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat com.squareup.rx2.idler.DelegatingIdlingResourceScheduler$ScheduledWork.run(DelegatingIdlingResourceScheduler.java:141)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n09-07 20:17:01.251  6736  6736 W System.err: \tat java.lang.Thread.run(Thread.java:919)\r\n09-07 20:17:01.255  6736  6736 W System.err: Caused by: java.net.SocketTimeoutException: Read timed out\r\n09-07 20:17:01.255  6736  6736 W System.err: \tat java.net.SocketInputStream.socketRead0(Native Method)\r\n09-07 20:17:01.255  6736  6736 W System.err: \tat java.net.SocketInputStream.socketRead(SocketInputStream.java:119)\r\n09-07 20:17:01.255  6736  6736 W System.err: \tat java.net.SocketInputStream.read(SocketInputStream.java:176)\r\n09-07 20:17:01.255  6736  6736 W System.err: \tat java.net.SocketInputStream.read(SocketInputStream.java:144)\r\n09-07 20:17:01.255  6736  6736 W System.err: \tat okio.InputStreamSource.read(Okio.kt:102)\r\n09-07 20:17:01.255  6736  6736 W System.err: \tat okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:159)\r\n09-07 20:17:01.255  6736  6736 W System.err: \t... 74 more\r\n```\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5430", "user": "BugsBunnyBR", "labels": ["bug"], "created": "2019-09-07 23:44:00", "closed": "2019-09-08 09:44:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "toString method is no longer present (or visible), causing runtime exceptions", "body": "We upgraded to the latest, and now our build fails with:\r\n\r\n[2019-09-06T01:15:49.953Z] Caused by: java.lang.NoSuchMethodError: okhttp3.Cookie.toString(Z)Ljava/lang/String;\r\n[2019-09-06T01:15:49.953Z] at okhttp3.JavaNetCookieJar.saveFromResponse(JavaNetCookieJar.java:43)\r\n[2019-09-06T01:15:49.953Z] at okhttp3.internal.http.HttpHeaders.receiveHeaders(HttpHeaders.kt:207)\r\n[2019-09-06T01:15:49.953Z] at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:86)\r\n[2019-09-06T01:15:49.953Z] at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n[2019-09-06T01:15:49.953Z] at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n[2019-09-06T01:15:49.953Z] at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n[2019-09-06T01:15:49.953Z] at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n[2019-09-06T01:15:49.953Z] at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n[2019-09-06T01:15:49.953Z] at okhttp3.RealCall.execute(RealCall.kt:66)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.hub.rest.CredentialsRestConnection.clientAuthenticate(CredentialsRestConnection.java:86)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.hub.rest.RestConnection.connect(RestConnection.java:128)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.hub.rest.RestConnection.handleExecuteClientCall(RestConnection.java:350)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.hub.rest.RestConnection.handleExecuteClientCall(RestConnection.java:317)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.hub.request.HubRequest.executePost(HubRequest.java:85)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.hub.api.bom.BomImportRequestService.importBomFile(BomImportRequestService.java:55)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.hub.buildtool.BuildToolHelper.deployHubOutput(BuildToolHelper.java:71)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.gradle.task.BuildBomTask.deployHubBDIO(BuildBomTask.java:240)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.gradle.task.BuildBomTask.performTask(BuildBomTask.java:153)\r\n[2019-09-06T01:15:49.953Z] at com.blackducksoftware.integration.gradle.task.BuildBomTask.task(BuildBomTask.java:130)\r\n[2019-09-06T01:15:49.953Z] at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:103)\r\n\r\nWe don't see in the release notes anything saying that method has been removed.\r\n\r\nCan you put it back? If not, we can't upgrade to your latest, because we need to run blackduck until we replace it (long process).\r\n\r\nYou replied \"Presumably you are mixing a 3.14 version of JavaNetCookieJar from okhttp-httpurlconnection with 4.x of okhttp. Can you upgrade both?\" and then asked for more info and then closed it 8 minutes later. I was in standup. And I can't reopen a bug closed by a code owner. So here it is again.\r\n\r\n./gradlew dependencies shows no occurrence of okhttp-httpurlconnection on any of our classpaths.\r\n\r\nWe are only using (or trying to use) com.squareup.okhttp3:okhttp:4.1.1.", "url": "https://github.com/square/okhttp/issues/5426", "user": "jimshowalter", "labels": ["bug"], "created": "2019-09-06 19:05:13", "closed": "2019-09-06 21:50:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "toString method is no longer present (or visible), causing runtime exceptions", "body": "We upgraded to the latest, and now our build fails with:\r\n\r\n[2019-09-06T01:15:49.953Z] Caused by: java.lang.NoSuchMethodError: okhttp3.Cookie.toString(Z)Ljava/lang/String;\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.JavaNetCookieJar.saveFromResponse(JavaNetCookieJar.java:43)\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.internal.http.HttpHeaders.receiveHeaders(HttpHeaders.kt:207)\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:86)\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n[2019-09-06T01:15:49.953Z] \tat okhttp3.RealCall.execute(RealCall.kt:66)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.hub.rest.CredentialsRestConnection.clientAuthenticate(CredentialsRestConnection.java:86)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.hub.rest.RestConnection.connect(RestConnection.java:128)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.hub.rest.RestConnection.handleExecuteClientCall(RestConnection.java:350)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.hub.rest.RestConnection.handleExecuteClientCall(RestConnection.java:317)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.hub.request.HubRequest.executePost(HubRequest.java:85)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.hub.api.bom.BomImportRequestService.importBomFile(BomImportRequestService.java:55)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.hub.buildtool.BuildToolHelper.deployHubOutput(BuildToolHelper.java:71)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.gradle.task.BuildBomTask.deployHubBDIO(BuildBomTask.java:240)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.gradle.task.BuildBomTask.performTask(BuildBomTask.java:153)\r\n[2019-09-06T01:15:49.953Z] \tat com.blackducksoftware.integration.gradle.task.BuildBomTask.task(BuildBomTask.java:130)\r\n[2019-09-06T01:15:49.953Z] \tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:103)\r\n\r\nWe don't see in the release notes anything saying that method has been removed.\r\n\r\nCan you put it back? If not, we can't upgrade to your latest, because we need to run blackduck until we replace it (long process).", "url": "https://github.com/square/okhttp/issues/5425", "user": "jimshowalter", "labels": ["bug", "needs info"], "created": "2019-09-06 17:58:59", "closed": "2019-09-06 18:52:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Acknowledge inbound SETTINGS before using new flow control window budget", "body": "From [nghttp2](https://github.com/nghttp2/nghttp2/blob/master/lib/nghttp2_session.c), the HTTP/2 backend inside Envoy:\r\n\r\n```\r\n/*\r\n * Now we have SETTINGS synchronization, flow control error can be\r\n * detected strictly. If DATA frame is received with length > 0 and\r\n * current received window size + delta length is strictly larger than\r\n * local window size, it is subject to FLOW_CONTROL_ERROR, so return\r\n * -1. Note that local_window_size is calculated after SETTINGS ACK is\r\n * received from peer, so peer must honor this limit. If the resulting\r\n * recv_window_size is strictly larger than NGHTTP2_MAX_WINDOW_SIZE,\r\n * return -1 too.\r\n */\r\n```\r\n\r\nOkHttp transmits its outbound `SETTINGS ACK` frame asynchronously. It\u2019s possible that it\u2019ll be transmitted after outbound `DATA` frames that use the newer, larger window. And that\u2019ll cause nghttp2 to fail our streams with `FLOW_CONTROL_ERROR`.\r\n\r\nTo interop best with nghttp2 we need to transmit the `SETTINGS ACK` frame before adjusting our flow control window.", "url": "https://github.com/square/okhttp/issues/5422", "user": "swankjesse", "labels": ["bug"], "created": "2019-09-06 00:59:12", "closed": "2019-09-08 11:20:14", "commits": {"68c296ad862fb14bf955c665aea1bd218219c16f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "4d16875eabbd4eff9c1ea9739f59ad57b55effdd": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "bd6a97a7200dda2127a0a6b7167fef0d09febf27": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a7248061a301c4869681987cd18bf4da51586ae1": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "35f3cfbd4e9ff2a3f14d25307b5590441453a0d2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "8ab23165dbad216309cad2e1dc031a74294d2dc6": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "68c296ad862fb14bf955c665aea1bd218219c16f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4d16875eabbd4eff9c1ea9739f59ad57b55effdd", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["4a573f54cf0e5e7181ba04ff0dc094a567187cbe"], "nameRev": "4d16875eabbd4eff9c1ea9739f59ad57b55effdd tags/parent-4.2.0~6^2", "commitMessage": "Change the way flow control windows are tracked.\n\nPreviously we tracked how many bytes we had left in a single value. With\nthis updatee we track the current value and the budget separately. I am\nnot worried about overflowing Long.MAX_VALUE.\n\nI made this change in the process of diagnosing this:\nhttps://github.com/square/okhttp/issues/5422\n", "commitDateTime": "2019-09-06 08:24:46", "authoredDateTime": "2019-09-05 21:35:30", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.kt", "insertions": 25, "deletions": 21, "lines": 46}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.kt", "insertions": 23, "deletions": 19, "lines": 42}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 23, "deletions": 14, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.peerHttp2ServerLowersInitialWindowSize()", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.discardedDataFramesAreCounted()", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readSendsWindowUpdateHttp2()", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readSendsWindowUpdate()", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.blockedStreamDoesntStarveNewStream()", "TOT": 34, "UPD": 9, "INS": 13, "MOV": 6, "DEL": 6}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "bd6a97a7200dda2127a0a6b7167fef0d09febf27", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["3490c7ef9598e99bc298208f68022b36fecb21ce"], "nameRev": "bd6a97a7200dda2127a0a6b7167fef0d09febf27 tags/parent-4.2.0~3^2", "commitMessage": "Acknowledge and apply inbound settings atomically\n\nCloses: https://github.com/square/okhttp/issues/5422\n\nUnfortunately testing this is awkward because it's racy. I did\nrun a stress test that used to reproduce the problem, and now it\ndoesn't, so I am satisfied.\n", "commitDateTime": "2019-09-07 20:46:09", "authoredDateTime": "2019-09-07 20:38:22", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.kt", "insertions": 35, "deletions": 26, "lines": 61}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clearSettingsBeforeMerge()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a7248061a301c4869681987cd18bf4da51586ae1", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["9ce9d1afd1127bd65fccffac4bd2c31e60fecdd8"], "nameRev": "a7248061a301c4869681987cd18bf4da51586ae1 tags/parent-3.14.3~2^2", "commitMessage": "Acknowledge and apply inbound settings atomically\n\nCloses: https://github.com/square/okhttp/issues/5422\n\nUnfortunately testing this is awkward because it's racy. I did\nrun a stress test that used to reproduce the problem, and now it\ndoesn't, so I am satisfied.\n", "commitDateTime": "2019-09-09 18:06:50", "authoredDateTime": "2019-09-07 20:38:22", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 35, "deletions": 37, "lines": 72}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clearSettingsBeforeMerge()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.settings(boolean,okhttp3.internal.http2.Settings)", "TOT": 27, "UPD": 3, "INS": 1, "MOV": 21, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.settings(boolean,okhttp3.internal.http2.Settings).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(okhttp3.internal.http2.Settings).3.execute()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(okhttp3.internal.http2.Settings)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(okhttp3.internal.http2.Settings).3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "35f3cfbd4e9ff2a3f14d25307b5590441453a0d2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8ab23165dbad216309cad2e1dc031a74294d2dc6", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["74ecfd6580d0d9a4b771b9768ac9e99cc1804f3b"], "nameRev": "8ab23165dbad216309cad2e1dc031a74294d2dc6 tags/parent-3.12.5~2^2", "commitMessage": "Acknowledge and apply inbound settings atomically\n\nCloses: https://github.com/square/okhttp/issues/5422\n\nUnfortunately testing this is awkward because it's racy. I did\nrun a stress test that used to reproduce the problem, and now it\ndoesn't, so I am satisfied.\n", "commitDateTime": "2019-09-09 18:16:06", "authoredDateTime": "2019-09-07 20:38:22", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 35, "deletions": 37, "lines": 72}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clearSettingsBeforeMerge()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(okhttp3.internal.http2.Settings)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.settings(boolean,okhttp3.internal.http2.Settings)", "TOT": 16, "UPD": 3, "INS": 0, "MOV": 12, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.settings(boolean,okhttp3.internal.http2.Settings).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(okhttp3.internal.http2.Settings).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(okhttp3.internal.http2.Settings).3.execute()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.settings(boolean,okhttp3.internal.http2.Settings).2.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4d16875eabbd4eff9c1ea9739f59ad57b55effdd", "bd6a97a7200dda2127a0a6b7167fef0d09febf27"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 83.0, "deletions": 66.0, "lines": 149.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.kt", "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.kt"], "changesInPackagesSPOON": []}, {"title": "HttpLoggingInterceptor does not respect RequestBody.isOneShot()", "body": "HttpLoggingInterceptor should check the value of the `request.body.isOneShot()`, and if so, should not attempt to read/log the body contents and instead print a message stating that it was skipped.", "url": "https://github.com/square/okhttp/issues/5419", "user": "DavidJRobertson", "labels": ["bug"], "created": "2019-09-05 17:00:40", "closed": "2020-01-11 22:28:21", "commits": {}, "ttf": 128.00027777777777, "commitsDetails": []}, {"title": "Failed Handshake", "body": "While trying to fetch a page from [PcGamer](https://www.pcgamer.com/uk/best-pc-games/)\r\n\r\nThe client failed with this exception\r\n```\r\n\tjavax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure\r\n\tat sun.security.ssl.Alerts.getSSLException(Alerts.java:192)\r\n\tat sun.security.ssl.Alerts.getSSLException(Alerts.java:154)\r\n\tat sun.security.ssl.SSLSocketImpl.recvAlert(SSLSocketImpl.java:2023)\r\n\tat sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1125)\r\n\tat sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375)\r\n\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403)\r\n\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387)\r\n\tat okhttp3.internal.connection.RealConnection.connectTls(RealConnection.kt:351)\r\n\tat okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.kt:310)\r\n\tat okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:178)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:236)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:109)\r\n\tat okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:77)\r\n\tat okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.kt:162)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:35)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n\tat okhttp3.RealCall.execute(RealCall.kt:66)\r\n\tat org.chaiware.modular_web_crawler.modular_services.fetcher_service.OkHttpFetcherImpl.fetchPage(OkHttpFetcherImpl.java:59)\r\n\tat org.chaiware.modular_web_crawler.modular_services.fetcher_service.IFetcher.fetch(IFetcher.java:20)\r\n\tat org.chaiware.modular_web_crawler.run.RunFetcher.fetch(RunFetcher.java:31)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:124)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:74)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:202)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:198)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1249)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1249)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n\tSuppressed: javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure`\r\n...\r\n```\r\n\r\nIs it a bug?", "url": "https://github.com/square/okhttp/issues/5418", "user": "Chaiavi", "labels": ["bug"], "created": "2019-09-05 12:01:27", "closed": "2019-09-05 23:16:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cached header combination dropping headers when repeated name present", "body": "I have upgraded my project to Retrofit 2.6.1 and OkHttp 4.0.1\r\nEverything seem to work, except when the server returns a 304. Retrofit can't seem to parse the response from the cache (it tries to parse an empty response).\r\n\r\nRolling back to Retrofit 2.5.0 and OkHttp 3.14.0 fix the issue.", "url": "https://github.com/square/okhttp/issues/5413", "user": "thierryd", "labels": ["bug"], "created": "2019-08-08 13:06:57", "closed": "2019-09-05 04:03:39", "commits": {"a1265b6140a8fe336602b969960d4048ebd1d3da": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "1af74c65698d029cf88781bd7b86c4c0d0a149c4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "a1265b6140a8fe336602b969960d4048ebd1d3da", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["1b2a0dd89ce12dafcb06f9e49d1eaca902f4fdaa"], "nameRev": "a1265b6140a8fe336602b969960d4048ebd1d3da tags/parent-4.2.0~9^2", "commitMessage": "Fix a regression in combining cache headers\n\nThis was introduced with our migration to Kotlin. Iterating over the indices\nof the header names doesn't work because header names are not distinct.\n\nCloses: https://github.com/square/okhttp/issues/5413\n", "commitDateTime": "2019-09-04 23:58:58", "authoredDateTime": "2019-09-04 23:58:55", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/CacheTest.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.conditionalHitHeadersCombined()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1af74c65698d029cf88781bd7b86c4c0d0a149c4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["4739b278066c25de7d1fcada943e0aaddda7e7a7"], "nameRev": "1af74c65698d029cf88781bd7b86c4c0d0a149c4 tags/parent-4.1.1~1", "commitMessage": "Fix a regression in combining cache headers\n\nThis was introduced with our migration to Kotlin. Iterating over the indices\nof the header names doesn't work because header names are not distinct.\n\nCloses: https://github.com/square/okhttp/issues/5413\n", "commitDateTime": "2019-09-05 00:08:39", "authoredDateTime": "2019-09-04 23:58:55", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/CacheTest.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.conditionalHitHeadersCombined()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a1265b6140a8fe336602b969960d4048ebd1d3da"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.kt"], "changesInPackagesSPOON": []}, {"title": "HttpLoggingInterceptor: faulty binary request/response detection ", "body": "HttpLoggingInterceptor sometimes omits request/response bodies from logs if it thinks that it contains binary data. However, the `Buffer.isProbablyUtf8()` method doesn't reliably detect binary data, especially when the file format begins with a textual header.\r\n\r\nThis results in the logs being completely overwhelmed with useless binary data. For instance, this occurs frequently for me when uploading (10MB chunks of) mp4 video:\r\n<img width=\"1969\" alt=\"Screenshot 2019-09-04 at 15 01 28\" src=\"https://user-images.githubusercontent.com/357772/64261780-f6ecd800-cf24-11e9-9ad8-05382e6e7f54.png\">\r\n\r\n\r\nPerhaps it would be better to examine the Content-Type and/or Content-Length headers first to see if we have a binary type or very large body, before falling back to `isProbablyUtf8()` if these headers are not present.\r\n\r\nAlternatively, it might be worth making `isProbablyUtf8()` examine more than just the first 64 bytes / 16 UTF-8 code points before making a decision.", "url": "https://github.com/square/okhttp/issues/5412", "user": "DavidJRobertson", "labels": ["bug"], "created": "2019-09-04 13:59:35", "closed": "2020-03-29 18:16:03", "commits": {}, "ttf": 207.00027777777777, "commitsDetails": []}, {"title": "Closequitely on calling response code on samsung device", "body": "Related issue: shadowsocks/shadowsocks-android#2297\r\nSeems java.net.InetAddress returns null on samsung device.\r\n\r\nI'm trying to contact with samsung. (Just in case.)\r\nI will make some draft code until later tomorrow.", "url": "https://github.com/square/okhttp/issues/5404", "user": "DitFranXX", "labels": ["bug"], "created": "2019-09-01 23:18:49", "closed": "2019-09-02 06:22:56", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "IllegasStateException closed", "body": "Hi, I have random IllegalstateException crash in Fabric. But can't reproduce it.\r\n![Screenshot_31](https://user-images.githubusercontent.com/15791158/64016968-18b71b00-cb31-11e9-9059-aecd2e2c41a2.png)\r\n\r\nUsers download file from server. For download I use regular HttpUrlConnection and read bytes from InputStream in while. On some iteration of read this crash happen. I close InputStream only in finally, so it can't be closed before while finish.\r\n\r\n```java\r\n    public static Response downloadFile(String url, String tmpFile) throws IOException {\r\n        InputStream is = null;\r\n        OutputStream os = null;\r\n        Response result;\r\n        try {\r\n            URL urlFile = new URL(url);\r\n            HttpURLConnection connection = (HttpURLConnection) urlFile.openConnection();\r\n            connection.connect();\r\n\r\n            long size = connection.getContentLength();\r\n            int code = connection.getResponseCode();\r\n            Map<String, List<String>> responseHeaders = connection.getHeaderFields();\r\n            result = new Response(code, size, responseHeaders);\r\n\r\n            if (code != HttpURLConnection.HTTP_OK) {\r\n                return result;\r\n            }\r\n\r\n            is = connection.getInputStream();\r\n            os = new FileOutputStream(tmpFile);\r\n\r\n            final byte[] buf = new byte[1024];\r\n            int read;\r\n            //This read random crash\r\n            while ((read = is.read(buf)) != -1) {\r\n                os.write(buf, 0, read);\r\n            }\r\n            os.flush();\r\n        } finally {\r\n            if (is != null) {\r\n                is.close();\r\n            }\r\n            if (os != null) {\r\n                os.close();\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n```\r\nLooks like 100% Samsung. Android 6, 7, 8, 9 .\r\nAlso looks like this happen always near finish of download. For example from 2738688 bytes was downloaded 2716156 and only 22532\u202c left. Many crashes near the end of download.", "url": "https://github.com/square/okhttp/issues/5402", "user": "UvarovBoris", "labels": ["bug"], "created": "2019-08-30 11:53:32", "closed": "2019-08-30 18:24:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "UndeliverableException after update from 3.14.2 to 4.0.0", "body": "After updating okhttp to version 4.0.0 - 4.1.0 application crashes with UndeliverableException on devices running Android 10\r\n\r\nCrash log:\r\n![NoSuchMethod](https://user-images.githubusercontent.com/36672705/64016398-31bace80-cb27-11e9-95d4-26257fef0ece.png)\r\n", "url": "https://github.com/square/okhttp/issues/5401", "user": "pawthunder", "labels": ["bug"], "created": "2019-08-30 11:10:48", "closed": "2019-08-30 11:35:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Maven relies on version 3.14.2 to automatically reduce to version 3.8.1", "body": "Dependent POM.xml\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>com.weihongbin</groupId>\r\n    <artifactId>spring-boot-starter-whb-commons</artifactId>\r\n    <version>1.0.5</version>\r\n    <name>whb-commons</name>\r\n    <description>\u901a\u7528\u6a21\u5757</description>\r\n\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n\r\n        <!--Swagger Start-->\r\n        <dependency>\r\n            <groupId>io.springfox</groupId>\r\n            <artifactId>springfox-swagger2</artifactId>\r\n            <version>2.9.2</version>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <artifactId>swagger-annotations</artifactId>\r\n                    <groupId>io.swagger</groupId>\r\n                </exclusion>\r\n                <exclusion>\r\n                    <artifactId>swagger-models</artifactId>\r\n                    <groupId>io.swagger</groupId>\r\n                </exclusion>\r\n            </exclusions>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.swagger</groupId>\r\n            <artifactId>swagger-annotations</artifactId>\r\n            <version>1.5.22</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.swagger</groupId>\r\n            <artifactId>swagger-models</artifactId>\r\n            <version>1.5.22</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.springfox</groupId>\r\n            <artifactId>springfox-swagger-ui</artifactId>\r\n            <version>2.9.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.github.xiaoymin</groupId>\r\n            <artifactId>swagger-bootstrap-ui</artifactId>\r\n            <version>1.9.6</version>\r\n        </dependency>\r\n        <!--Swagger End-->\r\n        <!--OKHttp Start -->\r\n        <dependency>\r\n            <groupId>com.squareup.okhttp3</groupId>\r\n            <artifactId>okhttp</artifactId>\r\n            <version>3.14.2</version>\r\n        </dependency>\r\n        <!--OKHttp End -->\r\n        <!--JWT Start -->\r\n        <dependency>\r\n            <groupId>com.auth0</groupId>\r\n            <artifactId>java-jwt</artifactId>\r\n            <version>3.8.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt</artifactId>\r\n            <version>0.9.1</version>\r\n        </dependency>\r\n        <!--JWT End -->\r\n\r\n        <dependency>\r\n            <groupId>com.fasterxml.jackson.datatype</groupId>\r\n            <artifactId>jackson-datatype-jsr310</artifactId>\r\n            <version>2.9.9</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.8</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>javax.servlet</groupId>\r\n            <artifactId>javax.servlet-api</artifactId>\r\n            <version>4.0.1</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework</groupId>\r\n            <artifactId>spring-web</artifactId>\r\n            <version>5.1.9.RELEASE</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework</groupId>\r\n            <artifactId>spring-webmvc</artifactId>\r\n            <version>5.1.9.RELEASE</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-autoconfigure</artifactId>\r\n            <version>2.1.7.RELEASE</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-configuration-processor</artifactId>\r\n            <version>2.1.7.RELEASE</version>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.data</groupId>\r\n            <artifactId>spring-data-redis</artifactId>\r\n            <version>2.1.10.RELEASE</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.8.1</version>\r\n                <configuration>\r\n                    <source>${java.version}</source>\r\n                    <target>${java.version}</target>\r\n                    <encoding>UTF-8</encoding>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-javadoc-plugin</artifactId>\r\n                <version>3.1.0</version>\r\n                <executions>\r\n                    <execution>\r\n                        <phase>compile</phase>\r\n                        <goals>\r\n                            <goal>jar</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n                <configuration>\r\n                    <encoding>UTF-8</encoding>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-source-plugin</artifactId>\r\n                <version>3.1.0</version>\r\n                <executions>\r\n                    <execution>\r\n                        <phase>compile</phase>\r\n                        <goals>\r\n                            <goal>jar</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-deploy-plugin</artifactId>\r\n                <version>2.8.2</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>\r\n\r\n```\r\nUsing POM.xml\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.1.7.RELEASE</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>com.rrz</groupId>\r\n    <artifactId>watch</artifactId>\r\n    <version>1.0.0</version>\r\n    <name>watch</name>\r\n    <description>Demo project for Spring Boot</description>\r\n\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-actuator</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-redis</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-mail</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mybatis.spring.boot</groupId>\r\n            <artifactId>mybatis-spring-boot-starter</artifactId>\r\n            <version>2.1.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>joda-time</groupId>\r\n            <artifactId>joda-time</artifactId>\r\n            <version>2.10.3</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>commons-io</groupId>\r\n            <artifactId>commons-io</artifactId>\r\n            <version>2.6</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.jcraft</groupId>\r\n            <artifactId>jsch</artifactId>\r\n            <version>0.1.55</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.commons</groupId>\r\n            <artifactId>commons-lang3</artifactId>\r\n            <version>3.9</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>net.sf.json-lib</groupId>\r\n            <artifactId>json-lib</artifactId>\r\n            <version>2.3</version>\r\n            <classifier>jdk15</classifier>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.weihongbin</groupId>\r\n            <artifactId>spring-boot-starter-whb-commons</artifactId>\r\n            <version>1.0.5</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.httpcomponents</groupId>\r\n            <artifactId>httpclient</artifactId>\r\n        </dependency>\r\n        <!--\u901a\u7528mapper-->\r\n        <dependency>\r\n            <groupId>tk.mybatis</groupId>\r\n            <artifactId>mapper-spring-boot-starter</artifactId>\r\n            <version>1.1.4</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.github.pagehelper</groupId>\r\n            <artifactId>pagehelper-spring-boot-starter</artifactId>\r\n            <version>1.2.3</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>fastjson</artifactId>\r\n            <version>1.2.59</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>cn.hutool</groupId>\r\n            <artifactId>hutool-all</artifactId>\r\n            <version>4.6.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <dependency>\r\n                <groupId>org.springframework.cloud</groupId>\r\n                <artifactId>spring-cloud-dependencies</artifactId>\r\n                <version>${spring-cloud.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <configuration>\r\n                    <mainClass>com.rrz.watch.WatchApplication</mainClass>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>\r\n\r\n```\r\nWhy does 3.14.2 really depend on 3.8.1 for actual imports?", "url": "https://github.com/square/okhttp/issues/5400", "user": "weihongbin1", "labels": ["bug"], "created": "2019-08-30 02:39:23", "closed": "2019-08-30 04:00:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Okhttp overrides user-agent header", "body": "Hello, we use \"user-agent\" header to add additional information to all requests going to our server. The issue is that Okhttp overrides user-agent header. In server logs we get this header <user-agent: okhttp/4.1.0>and not the original header, which is a problem for our implementation, is there a way to tell okhttp to avoid overriding this header?\r\n\r\n*Note: This behavior is only with https requests.\r\n\r\nThanks in advance.", "url": "https://github.com/square/okhttp/issues/5399", "user": "rodrigocasillas", "labels": ["bug", "needs info"], "created": "2019-08-27 18:09:23", "closed": "2019-09-11 01:43:54", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": " java.io.EOFException: \\n not found: limit=0 content=\u2026", "body": "```\r\n    api 'com.squareup.okhttp3:okhttp:4.1.0'\r\n```\r\n\r\nOccur sometimes. \r\n\r\n```\r\nW/System.err: java.io.IOException: unexpected end of stream on http://172.16.10.21:8880/...\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.kt:205)\r\n        at okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.kt:105)\r\n        at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:37)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\nW/System.err:     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\nW/System.err:     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n        at okhttp3.RealCall.execute(RealCall.kt:66)\r\n        at com.lcbtn.utils.HttpUtils.get(HttpUtils.java:125)\r\n        at com.lcbtn.utils.HttpUtils$2.run(HttpUtils.java:84)\r\n        at java.lang.Thread.run(Thread.java:818)\r\n    Caused by: java.io.EOFException: \\n not found: limit=0 content=\u2026\r\nW/System.err:     at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.kt:231)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.readHeaderLine(Http1ExchangeCodec.kt:210)\r\n        at okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.kt:181)\r\n    \t... 19 more\r\n```\r\n\r\n```\r\n$ curl http://172.16.10.21:8880/FSCPService/Program\\?providerId\\=cntv\\&cityId\\=7680\\&programID\\=CNTV2-1200064244\\&cntv-version\\=1006 -v \r\n*   Trying 172.16.10.21:8880...\r\n* TCP_NODELAY set\r\n* Connected to 172.16.10.21 (172.16.10.21) port 8880 (#0)\r\n> GET /FSCPService/Program?providerId=cntv&cityId=7680&programID=CNTV2-1200064244&cntv-version=1006 HTTP/1.1\r\n> Host: 172.16.10.21:8880\r\n> User-Agent: curl/7.65.3\r\n> Accept: */*\r\n> \r\n* Mark bundle as not supporting multiuse\r\n< HTTP/1.1 301 Moved Permanently\r\n< Server: NGINX(CnPanel,LNMP)\r\n< Date: Fri, 23 Aug 2019 02:59:34 GMT\r\n< Content-Type: text/html\r\n< Content-Length: 192\r\n< Location: http://172.16.10.21:8880/FSCPService/Program/?providerId=cntv&cityId=7680&programID=CNTV2-1200064244&cntv-version=1006\r\n< Connection: keep-alive\r\n< \r\n<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>NGINX(CnPanel,LNMP)</center>\r\n</body>\r\n</html>\r\n* Connection #0 to host 172.16.10.21 left intact\r\n\r\n```\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5390", "user": "dannyZhou", "labels": ["bug", "needs info"], "created": "2019-08-23 03:00:08", "closed": "2019-09-11 01:44:11", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "Canceling a call may send the cancel frame too late", "body": "I\u2019m calling `Call.cancel()` followed by `requestBody.close()`. The outbound frames have the close() preceding the cancel(), which causes the receiving end to interpret it as a normal close and not an abnormal one.\r\n\r\n```\r\nAug 21, 2019 2:37:12 PM okhttp3.internal.http2.Http2Reader nextFrame\r\nFINE: << 0x00000003    14 DATA          \r\nAug 21, 2019 2:37:12 PM okhttp3.internal.http2.Http2Writer frameHeader\r\nFINE: >> 0x00000003     0 DATA          END_STREAM\r\nAug 21, 2019 2:37:12 PM okhttp3.internal.http2.Http2Writer frameHeader\r\nFINE: >> 0x00000003     4 RST_STREAM    \r\n```\r\n\r\nWhen canceling a stream the recipient should be notified that it\u2019s an abnormal close by sending the RST_STREAM frame first.", "url": "https://github.com/square/okhttp/issues/5388", "user": "swankjesse", "labels": ["bug"], "created": "2019-08-21 18:40:42", "closed": "2019-10-06 01:58:49", "commits": {"1c478919d5c0a7e7fb43edf3d688f302b5ffcce8": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "5917d7a083daa657779afdd274a4922cc50a2b9a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "10f9227b9398d9c7651131bdeeae92bb714a3bb2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 45.000277777777775, "commitsDetails": [{"commitHash": "1c478919d5c0a7e7fb43edf3d688f302b5ffcce8", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5917d7a083daa657779afdd274a4922cc50a2b9a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["aad8a1420d8f22a35138b92d7ecc14efc96155fe"], "nameRev": "5917d7a083daa657779afdd274a4922cc50a2b9a tags/parent-4.3.0~58^2", "commitMessage": "Add a way for MockWebServer to track truncated requests\n\nIt now tracks inbound requests that fail with an IOException.\n\nAlso add a fix for the bug where we'd send 'END OF STREAM' on a stream\nthat we'd previously canceled, which raced with the 'RST STREAM' and led\nto flakiness.\n\nBefore we ship the new API in RecordedRequest we should go over the\nother cases where inbound HTTP requests fail and make sure they\nget reported through this channel.\n\nCloses: https://github.com/square/okhttp/issues/5388\n", "commitDateTime": "2019-10-05 21:50:00", "authoredDateTime": "2019-10-03 21:25:20", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt", "insertions": 81, "deletions": 67, "lines": 148}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/RecordedRequest.kt", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "okhttp-testing-support/src/main/java/okhttp3/OkHttpClientTestRule.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.kt", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.cancelWhileWritingRequestBodySendsCancelToServer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "10f9227b9398d9c7651131bdeeae92bb714a3bb2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["97d25e88b82454b128d1588c9c0bc013efeee7fe"], "nameRev": "10f9227b9398d9c7651131bdeeae92bb714a3bb2 tags/parent-4.2.2~1^2", "commitMessage": "If RST STREAM and END OF STREAM race, send RST STREAM (4.2.x branch)\n\nhttps://github.com/square/okhttp/issues/5388\n", "commitDateTime": "2019-10-06 15:39:43", "authoredDateTime": "2019-10-03 21:25:20", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.kt", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.cancelWhileWritingRequestBodySendsCancelToServer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5917d7a083daa657779afdd274a4922cc50a2b9a", "10f9227b9398d9c7651131bdeeae92bb714a3bb2"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 103.0, "deletions": 76.0, "lines": 179.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.kt", "mockwebserver/src/main/java/okhttp3/mockwebserver/RecordedRequest.kt", "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt", "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt"], "changesInPackagesSPOON": []}, {"title": "ProtocolException: unexpected end of stream", "body": "Not 100% reproduce depend on device (100% failed on vivo X20A version: 8.1.0). \r\n\r\nRepro code\r\n```kt\r\nclass MainActivity : AppCompatActivity() {\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n        Timber.plant(Timber.DebugTree())\r\n        net.setOnClickListener {\r\n            Thread {\r\n                Timber.w(\"network\")\r\n                val request = Request.Builder()\r\n                        .url(\"http://45.63.13.41:3000/playlist/detail?id=2451836751\")\r\n                        .get()\r\n                        .addHeader(\"Cache-Control\", \"no-cache\")\r\n                        .addHeader(\"Accept-Encoding\", \"gzip, deflate\")\r\n                        .build()\r\n\r\n                val client = OkHttpClient()\r\n                val response = client.newCall(request).execute()\r\n                val body = response.body?.string()\r\n\r\n                Timber.w(\"response = \" + body)\r\n            }.start()\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOkhttp version: `com.squareup.okhttp3:okhttp:4.1.0`\r\n\r\nStackTrace\r\n```console\r\nE/AndroidRuntime: FATAL EXCEPTION: Thread-2\r\n    Process: me.gengjiawen.quickstart, PID: 4865\r\n    java.net.ProtocolException: unexpected end of stream\r\n        at okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource.read(Http1ExchangeCodec.kt:392)\r\n        at okhttp3.internal.connection.Exchange$ResponseBodySource.read(Exchange.kt:279)\r\n        at okio.Buffer.writeAll(Buffer.kt:1104)\r\n        at okio.RealBufferedSource.readString(RealBufferedSource.kt:194)\r\n        at okhttp3.ResponseBody.string(ResponseBody.kt:187)\r\n        at me.gengjiawen.switchdemo.MainActivity$onCreate$1$1.run(MainActivity.kt:29)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\nTried https://github.com/square/okhttp/issues/1490#issuecomment-78621872, but no luck.\r\n\r\nSame code works on kotlin jvm.\r\nThe url also works on curl, browser, Node.js.", "url": "https://github.com/square/okhttp/issues/5387", "user": "gengjiawen", "labels": ["bug"], "created": "2019-08-21 10:29:47", "closed": "2019-08-21 13:05:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fix MockWebserver to use Platform for SSL Context etc", "body": "Currently MockWebserver uses direct security provider APIs, so often doesn't make the same selections as the OkHttpClient.  We should ideally have these in sync so that the expected capabilities when running in any okhttp.platform mode are clear.", "url": "https://github.com/square/okhttp/issues/5380", "user": "yschimke", "labels": ["bug", "tests"], "created": "2019-08-18 08:36:45", "closed": "2020-03-29 19:01:51", "commits": {}, "ttf": 224.00027777777777, "commitsDetails": []}, {"title": "upgrading incompatible issue", "body": "Hi,\r\n\r\nThe following code snippets throw an incompatible issue when I try to upgrade okhttp from 3.6.0 to 3.14.2.\r\n```\r\n@Test\r\npublic void test(){\r\n\tResponse.error(400, ResponseBody.create(MediaType.parse(\"application/json\"),\r\n      \"{\\n\" +\r\n        \"  \\\"display_message\\\": \\\"some message\\\",\\n\" +\r\n        \"  \\\"error_code\\\": \\\"INVALID_FIELD\\\",\\n\" +\r\n        \"  \\\"error_message\\\": \\\"query must be a non-empty string\\\",\\n\" +\r\n        \"  \\\"error_type\\\": \\\"INVALID_REQUEST\\\",\\n\" +\r\n        \"  \\\"request_id\\\": \\\"4mfTq\\\"\\n\" +\r\n        \"}\"\r\n    ));\r\n}\r\n```\r\n\r\nThe retrofit version is 2.1.0. It works well before. After upgrading, it throws an error:\r\n```\r\njava.lang.IllegalStateException: message == null\r\n```\r\n\r\nThanks.\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5377", "user": "SElab2019", "labels": ["bug"], "created": "2019-08-17 19:40:20", "closed": "2019-08-17 23:15:14", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Rolling upgrade to okhttp 3.14.2 breaks due to backward in-compatible change", "body": "Hi,\r\n\r\nThe following code snippets throw an incompatible issue when I try to upgrade okhttp from 3.11.0 to 3.14.2.\r\n\r\n```\r\n@Test\r\npublic void test(){\r\n\tString userAgent = Version.userAgent();\r\n}\r\n```\r\n\r\nThanks.", "url": "https://github.com/square/okhttp/issues/5376", "user": "SElab2019", "labels": ["bug"], "created": "2019-08-17 19:19:19", "closed": "2019-08-17 19:36:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "expected http2 -> got http1.1 -> why? ( alvn correctly installed )", "body": "Hi.\r\n\r\nokhttp 3.14.2.\r\nalvn \"installed\".\r\n\r\nProblem: \r\nif i request yandex.ru -> it uses http1.1, not http2 as expected ( that host supports http2 and real browser uses it ).\r\nif i request, for example, google.ru -> it uses http2 as expected.\r\n\r\nHow can that be possible?\r\n\r\nCode is very simple:\r\n```\r\nhttpClient.newCall(new Request.Builder().url(\"https://yandex.ru/\").build()).execute(); // --> GET https://yandex.ru/ http/1.1\r\nhttpClient.newCall(new Request.Builder().url(\"https://www.google.ru/\").build()).execute(); // --> GET https://www.google.ru/ h2\r\n```\r\n\r\nDebugger shows:\r\n\r\n> ALPN | http/1.1\r\n> Client Supported | [http/1.1, h2]\r\n> Server Chosen | http/1.1\r\n\r\nThanks.", "url": "https://github.com/square/okhttp/issues/5374", "user": "ogolovanov", "labels": ["bug"], "created": "2019-08-17 12:44:40", "closed": "2019-08-18 02:03:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "HttpLoggingInterceptor does not print correct header if it's overridden", "body": "I've got a backend that I'm talking to which does not accept `Content-Type: application/json; charset=UTF-8`. Instead, I need to send `Content-Type: application/json`.\r\n\r\nUsing a Network Interceptor I can do all of that but the problem is that `HttpLoggingInterceptor` logs the incorrect header.\r\n\r\nHere's a failing test case using 4.1.0:\r\n\r\n```kotlin\r\nimport okhttp3.Interceptor\r\nimport okhttp3.Interceptor.Chain\r\nimport okhttp3.MediaType.Companion.toMediaType\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.Request\r\nimport okhttp3.RequestBody.Companion.toRequestBody\r\nimport okhttp3.logging.HttpLoggingInterceptor\r\nimport okhttp3.logging.HttpLoggingInterceptor.Level.HEADERS\r\nimport okhttp3.logging.HttpLoggingInterceptor.Logger\r\nimport okhttp3.mockwebserver.MockResponse\r\nimport okhttp3.mockwebserver.MockWebServer\r\nimport okio.ByteString.Companion.encodeUtf8\r\nimport org.assertj.core.api.Java6Assertions.assertThat\r\nimport org.junit.Before\r\nimport org.junit.Rule\r\nimport org.junit.Test\r\n\r\nclass FooTest {\r\n  @get:Rule val server = MockWebServer()\r\n\r\n  private lateinit var client: OkHttpClient\r\n  private lateinit var logs: MutableList<String>\r\n\r\n  @Before fun setUp() {\r\n    logs = mutableListOf()\r\n\r\n    client = OkHttpClient.Builder()\r\n        .addNetworkInterceptor(object : Interceptor {\r\n          override fun intercept(chain: Chain) = chain.proceed(chain.request()\r\n            .newBuilder()\r\n            .header(\"Content-Type\", \"application/json\")\r\n            .build())\r\n        })\r\n        .addNetworkInterceptor(HttpLoggingInterceptor(object : Logger {\r\n          override fun log(message: String) {\r\n            logs.add(message)\r\n          }\r\n        }).apply { level = HEADERS })\r\n        .build()\r\n  }\r\n\r\n  @Test fun contentTypeIsLogged() {\r\n    server.enqueue(MockResponse())\r\n    client.newCall(Request.Builder()\r\n        .url(server.url(\"/\"))\r\n        .post(\"{}\".encodeUtf8().toRequestBody(\"application/json; charset=UTF-8\".toMediaType()))\r\n        .build()).execute()\r\n\r\n    val request = server.takeRequest()\r\n    assertThat(request.headers.values(\"Content-Type\")).containsExactly(\"application/json\") // This passes correctly.\r\n\r\n    // The HttpLoggingInterceptor should only see the overridden header. Instead it sees the Header from the Post request.\r\n    assertThat(logs).contains(\"Content-Type: application/json\")\r\n    assertThat(logs).doesNotContain(\"Content-Type: application/json; charset=UTF-8\")\r\n  }\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/5373", "user": "vanniktech", "labels": ["bug"], "created": "2019-08-17 11:48:04", "closed": "2019-08-18 01:26:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OkHttp Fails to set TLS V1.1 and v1.2 on IBM JDK 8", "body": "Extremely similar to https://github.com/square/okhttp/issues/4086 but applicable IBM JDK8\r\n\r\njava version \"1.8.0_181\"\r\nJava(TM) SE Runtime Environment (build 8.0.5.20 - pxa6480sr5fp20ifix-20180809_01(SR5 FP20+IJ08001))\r\nIBM J9 VM (build 2.9, JRE 1.8.0 Linux amd64-64-Bit Compressed References 20180809_394103 (JIT enabled, AOT enabled)\r\nOpenJ9   - cce432b\r\nOMR      - 7ce4228\r\nIBM      - 98805ca)\r\nJCL - 20180719_01 based on Oracle jdk8u181-b12\r\n\r\nWe compile in 7 because half of our environments are in 7 and the other half are in 8 so we use the 3.12.3 library but noticed the issues is there in the latest 4.1 as well, just doesn't seem to work in IBM JDK8 given what's happening in the internal/platform package \r\nThere's some logic in there that handles the JDK7 route but still leaves IBM JDK broken because the response differs from openjdk when calling SSLContext.getInstance(\"TLS\")\r\n\r\n```\r\n  public SSLContext getSSLContext() {\r\n    String jvmVersion = System.getProperty(\"java.specification.version\");\r\n    if (\"1.7\".equals(jvmVersion)) {\r\n      try {\r\n        // JDK 1.7 (public version) only support > TLSv1 with named protocols\r\n        return SSLContext.getInstance(\"TLSv1.2\");\r\n      } catch (NoSuchAlgorithmException e) {\r\n        // fallback to TLS\r\n      }\r\n    }\r\n\r\n    try {\r\n      return SSLContext.getInstance(\"TLS\");\r\n    } catch (NoSuchAlgorithmException e) {\r\n      throw new IllegalStateException(\"No TLS provider\", e);\r\n    }\r\n  }\r\n```\r\n\r\nAfter some remote debugging/troubleshooting discovered when it's establishing the connections is where the issue begins to arise the supported protocols is set to TLSv1 because of the above query to the JRE for supported/preferred TLS Setting \r\n\r\nUnable to find acceptable protocols. isFallback=false, modes=[ConnectionSpec(cipherSuites=[TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384, TLS_CHACHA20_POLY1305_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA], tlsVersions=[TLS_1_3, TLS_1_2], supportsTlsExtensions=true), ConnectionSpec()], supported protocols=[TLSv1] \r\n", "url": "https://github.com/square/okhttp/issues/5372", "user": "hijakebye", "labels": ["bug", "needs info"], "created": "2019-08-15 21:58:49", "closed": "2019-08-20 20:31:28", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": " java.lang.NoSuchMethodError: No virtual method isDuplex()Z in class Lokhttp3/RequestBody; or its super classes (declaration of 'okhttp3.RequestBody' appears in <path to dex file>).", "body": "On Android, I can reproduce this issue 100% of the time, with all my requests, on version 4.1.0. Version 3.10.0 works just fine. I can't share a MWE right now unfortunately, but I've been bouncing between versions a bit, and the issue does not seem to exist in 3.10.0.\r\n\r\nI'll try to post a MWE later.\r\n", "url": "https://github.com/square/okhttp/issues/5364", "user": "stoyicker", "labels": ["bug"], "created": "2019-08-13 17:26:06", "closed": "2019-08-13 18:22:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Remove boundary and duplicate content-length", "body": "HI All,\r\nI am trying to upload files using multipart and images as buffer, however boundary gets added to request and server guys want us to remove the boundary and send data as-is. I checked stackoverflow and could not get an answer.\r\nAlso i could see additional Content-Length getting added with the request, how could we maintain only one Content-Length.\r\n\r\nAny help would be appreciated.", "url": "https://github.com/square/okhttp/issues/5363", "user": "Droid108", "labels": ["bug"], "created": "2019-08-13 16:16:07", "closed": "2019-08-13 19:03:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Message received in onMessage(WebSocket webscoket, String message) callback is truncated in Android", "body": "I am using okhttp3 library for creating a web socket client in my **android application**. Okhttp version is **4.0.1*.*\r\nI have a web socket listener where I am receiving a message sent by the server using onMessage callback. When a large message is sent by the server, I see that the message received is truncated.\r\n\r\nClient is receiving the message in **onMessage(WebSocket websocket, String messsage)** callback of web socket listener.\r\n\r\nIs there any limit on the size of the message that is received by okhttp web socket connection. Is there a way to configure the message size?\r\n\r\nI have noticed that the message is truncated on the client-side when the message sent by the server is greater than **4 kb**.\r\nI thought that the message might be split if the message is large, but I don't see two callbacks being fired either. I only see one call back that has a truncated message.", "url": "https://github.com/square/okhttp/issues/5361", "user": "NikhilKumarM", "labels": ["bug"], "created": "2019-08-13 13:49:22", "closed": "2019-08-14 19:19:49", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Compilation fails", "body": "* What went wrong:\r\nExecution failed for task ':mockwebserver:dokka'.\r\n> Guice provision errors:\r\n  \r\n  1) Error injecting constructor, java.lang.RuntimeException: Exception while loading package-list from ExternalDocumentationLinkImpl(url=https://square.github.io/okio/2.x/okio/jvm/index.html, packageListUrl=https://square.github.io/okio/2.x/okio/jvm/package-list)\r\n    at org.jetbrains.dokka.ExternalDocumentationLinkResolver.<init>(ExternalDocumentationLinkResolver.kt:32)\r\n    at org.jetbrains.dokka.ExternalDocumentationLinkResolver.class(ExternalDocumentationLinkResolver.kt:32)\r\n    while locating org.jetbrains.dokka.ExternalDocumentationLinkResolver\r\n      for parameter 4 at org.jetbrains.dokka.DeclarationLinkResolver.<init>(DeclarationLinkResolver.kt:10)\r\n    while locating org.jetbrains.dokka.DeclarationLinkResolver\r\n      for parameter 0 at org.jetbrains.dokka.PackageDocs.<init>(PackageDocs.kt:20)\r\n    at org.jetbrains.dokka.PackageDocs.class(PackageDocs.kt:19)\r\n    while locating org.jetbrains.dokka.PackageDocs\r\n  \r\n  1 error\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\r\n\r\n* Get more help at https://help.gradle.org\r\n", "url": "https://github.com/square/okhttp/issues/5350", "user": "tianshaokai", "labels": ["bug"], "created": "2019-08-12 02:29:07", "closed": "2019-08-18 07:54:30", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Connecting with HTTP/1.1 to squareup.com", "body": "Twitter\r\n\r\n```\r\n\u279c  ~ okurl --debug https://twitter.com/robots.txt\r\n20:46:24.182\turl https://twitter.com/robots.txt\r\n20:46:24.187\tRequest Request{method=GET, url=https://twitter.com/robots.txt, tags={class com.baulsupp.okurl.credentials.Token=TokenSet(name=default)}}\r\n20:46:24.219\tDns (twitter.com): twitter.com/104.244.42.193, twitter.com/104.244.42.129\r\n20:46:24.415\t>> CONNECTION 505249202a20485454502f322e300d0a0d0a534d0d0a0d0a\r\n20:46:24.417\t>> 0x00000000     6 SETTINGS\r\n20:46:24.417\t>> 0x00000000     4 WINDOW_UPDATE\r\n20:46:24.419\t<< 0x00000000     6 SETTINGS\r\n20:46:24.421\t--> GET https://twitter.com/robots.txt h2\r\n20:46:24.421\tUser-Agent: okurl/dev\r\n20:46:24.422\tHost: twitter.com\r\n20:46:24.422\t>> 0x00000000     0 SETTINGS      ACK\r\n20:46:24.422\tConnection: Keep-Alive\r\n20:46:24.423\tAccept-Encoding: gzip\r\n20:46:24.423\tAccept-Encoding: br\r\n20:46:24.423\t--> END GET\r\n20:46:24.474\t<< 0x00000000     0 SETTINGS      ACK\r\n20:46:24.670\tMatching interceptor: null\r\n20:46:24.675\t>> 0x00000003    40 HEADERS       END_STREAM|END_HEADERS\r\n20:46:24.795\t<< 0x00000003   319 HEADERS       END_HEADERS\r\n20:46:24.796\t<< 0x00000003   493 DATA          END_STREAM\r\n20:46:24.810\t<-- 200 https://twitter.com/robots.txt (385ms)\r\n20:46:24.810\tcontent-encoding: gzip\r\n20:46:24.810\tcontent-length: 493\r\n20:46:24.810\tcontent-type: text/plain;charset=utf-8\r\n20:46:24.811\tdate: Sat, 10 Aug 2019 19:46:24 GMT\r\n20:46:24.811\tserver: tsa_f\r\n20:46:24.811\tset-cookie: personalization_id=\"v1_EOhKuPldeznMhVk8gQx14Q==\"; Max-Age=63072000; Expires=Mon, 9 Aug 2021 19:46:24 GMT; Path=/; Domain=.twitter.com\r\n20:46:24.811\tset-cookie: guest_id=v1%3A156546638472552215; Max-Age=63072000; Expires=Mon, 9 Aug 2021 19:46:24 GMT; Path=/; Domain=.twitter.com\r\n20:46:24.811\tstrict-transport-security: max-age=631138519\r\n20:46:24.812\tx-connection-hash: f4e200b660ebd7ab1556b96bb0693759\r\n20:46:24.812\tx-response-time: 107\r\n20:46:24.812\t<-- END HTTP\r\n20:46:24.816\tOkHttp Platform: ConscryptPlatform\r\n20:46:24.816\tProtocol: h2\r\n20:46:24.816\tTLS Version: TLS_1_2\r\n20:46:24.816\tCipher: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n20:46:24.817\tPeer Principal: CN=twitter.com, OU=lon3, O=\"Twitter, Inc.\", L=San Francisco, ST=California, C=US\r\n20:46:24.817\tLocal Principal: none\r\n20:46:24.817\tJVM: 11.0.3+7\r\n#Google Search Engine Robot\r\nUser-agent: Googlebot\r\nAllow: /?_escaped_fragment_\r\n\r\nAllow: /*?lang=\r\nAllow: /hashtag/*?src=\r\nAllow: /search?q=%23\r\nDisallow: /search/realtime\r\nDisallow: /search/users\r\nDisallow: /search/*/grid\r\n\r\nDisallow: /*?\r\nDisallow: /*/followers\r\nDisallow: /*/following\r\n\r\nDisallow: /account/not_my_account\r\nDisallow: /account/deactivated\r\nDisallow: /settings/deactivated\r\n\r\n#Yahoo! Search Engine Robot\r\nUser-Agent: Slurp\r\nAllow: /?_escaped_fragment_\r\n\r\nAllow: /*?lang=\r\nAllow: /hashtag/*?src=\r\nAllow: /search?q=%23\r\nDisallow: /search/realtime\r\nDisallow: /search/users\r\nDisallow: /search/*/grid\r\n\r\nDisallow: /*?\r\nDisallow: /*/followers\r\nDisallow: /*/following\r\n\r\nDisallow: /account/not_my_account\r\nDisallow: /account/deactivated\r\nDisallow: /settings/deactivated\r\n\r\n#Yandex Search Engine Robot\r\nUser-agent: Yandex\r\nAllow: /?_escaped_fragment_\r\n\r\nAllow: /*?lang=\r\nAllow: /hashtag/*?src=\r\nAllow: /search?q=%23\r\nDisallow: /search/realtime\r\nDisallow: /search/users\r\nDisallow: /search/*/grid\r\n\r\nDisallow: /*?\r\nDisallow: /*/followers\r\nDisallow: /*/following\r\n\r\nDisallow: /account/not_my_account\r\nDisallow: /account/deactivated\r\nDisallow: /settings/deactivated\r\n\r\n#Microsoft Search Engine Robot\r\nUser-Agent: msnbot\r\nAllow: /?_escaped_fragment_\r\n\r\nAllow: /*?lang=\r\nAllow: /hashtag/*?src=\r\nAllow: /search?q=%23\r\nDisallow: /search/realtime\r\nDisallow: /search/users\r\nDisallow: /search/*/grid\r\n\r\nDisallow: /*?\r\nDisallow: /*/followers\r\nDisallow: /*/following\r\n\r\nDisallow: /account/not_my_account\r\nDisallow: /account/deactivated\r\nDisallow: /settings/deactivated\r\n\r\n# Every bot that might possibly read and respect this file.\r\nUser-agent: *\r\nAllow: /*?lang=\r\nAllow: /hashtag/*?src=\r\nAllow: /search?q=%23\r\nDisallow: /search/realtime\r\nDisallow: /search/users\r\nDisallow: /search/*/grid\r\n\r\nDisallow: /*?\r\nDisallow: /*/followers\r\nDisallow: /*/following\r\n\r\nDisallow: /account/not_my_account\r\nDisallow: /account/deactivated\r\nDisallow: /settings/deactivated\r\n\r\nDisallow: /oauth\r\nDisallow: /1/oauth\r\n\r\nDisallow: /i/streams\r\nDisallow: /i/hello\r\n\r\n# Wait 1 second between successive requests. See ONBOARD-2698 for details.\r\nCrawl-delay: 1\r\n\r\n# Independent of user agent. Links in the sitemap are full URLs using https:// and need to match\r\n# the protocol of the sitemap.\r\nSitemap: https://twitter.com/sitemap.xml\r\n\r\n20:46:24.849\t>> 0x00000000     8 GOAWAY\r\n```\r\n\r\nSquare\r\n\r\n```\r\n\u279c  ~ okurl --debug https://squareup.com/robots.txt\r\n20:46:38.513\turl https://squareup.com/robots.txt\r\n20:46:38.517\tRequest Request{method=GET, url=https://squareup.com/robots.txt, tags={class com.baulsupp.okurl.credentials.Token=TokenSet(name=default)}}\r\n20:46:38.552\tDns (squareup.com): squareup.com/74.122.190.83\r\n20:46:39.407\t--> GET https://squareup.com/robots.txt http/1.1\r\n20:46:39.407\tUser-Agent: okurl/dev\r\n20:46:39.408\tHost: squareup.com\r\n20:46:39.408\tConnection: Keep-Alive\r\n20:46:39.408\tAccept-Encoding: gzip\r\n20:46:39.408\tAccept-Encoding: br\r\n20:46:39.409\t--> END GET\r\n20:46:39.626\tMatching interceptor: null\r\n20:46:40.976\t<-- 200 OK https://squareup.com/robots.txt (1567ms)\r\n20:46:40.977\tDate: Sat, 10 Aug 2019 19:46:40 GMT\r\n20:46:40.977\tContent-Type: text/plain; charset=utf-8\r\n20:46:40.978\tVary: Accept-Encoding\r\n20:46:40.979\tETag: W/\"129a2c7a1a65b4749e2b1ac955b471b4\"\r\n20:46:40.980\tCache-Control: max-age=0, private, must-revalidate\r\n20:46:40.980\tX-Request-Id: d1ae6996-2568-4354-9eb3-998f439e6efd\r\n20:46:40.981\tX-Frame-Options: SAMEORIGIN\r\n20:46:40.982\tX-Content-Type-Options: nosniff\r\n20:46:40.982\tX-XSS-Protection: 1; mode=block\r\n20:46:40.983\tX-Download-Options: noopen\r\n20:46:40.983\tX-Permitted-Cross-Domain-Policies: none\r\n20:46:40.984\tContent-Encoding: gzip\r\n20:46:40.984\tkeep-alive: timeout=60\r\n20:46:40.985\tStrict-Transport-Security: max-age=631152000\r\n20:46:40.985\tcontent-length: 280\r\n20:46:40.985\t<-- END HTTP\r\n20:46:40.990\tOkHttp Platform: ConscryptPlatform\r\n20:46:40.990\tProtocol: http/1.1\r\n20:46:40.990\tTLS Version: TLS_1_2\r\n20:46:40.990\tCipher: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n20:46:40.991\tPeer Principal: CN=www.squareup.com, SERIALNUMBER=4699855, OID.2.5.4.15=Private Organization, O=\"Square, Inc.\", OID.1.3.6.1.4.1.311.60.2.1.2=Delaware, OID.1.3.6.1.4.1.311.60.2.1.3=US, L=San Francisco, ST=California, C=US\r\n20:46:40.991\tLocal Principal: none\r\n20:46:40.991\tJVM: 11.0.3+7\r\nUser-agent: *\r\nAllow: /invoices/invoice-templates\r\nAllow: /invoices/recurring-payments\r\n\r\nDisallow: /detect_country.json\r\nDisallow: /tracking.json\r\nDisallow: /test\r\nDisallow: /appointments/mapbox/\r\nDisallow: /capital/consumer/invoice/merchants/\r\nDisallow: /form/\r\nDisallow: /i/\r\nDisallow: /invoices/\r\nDisallow: /outreach/\r\nDisallow: /market/\r\nDisallow: /password/\r\nDisallow: /r/\r\nDisallow: /signup?signup_token=*\r\nDisallow: /subscriptions/\r\nDisallow: /email/subscriptions/*\r\n\r\n\r\nSitemap: https://squareup.com/us/en/sitemap.xml\r\nSitemap: https://squareup.com/us/es/sitemap.xml\r\nSitemap: https://squareup.com/ca/en/sitemap.xml\r\nSitemap: https://squareup.com/ca/fr/sitemap.xml\r\nSitemap: https://squareup.com/au/en/sitemap.xml\r\nSitemap: https://squareup.com/gb/en/sitemap.xml\r\nSitemap: https://squareup.com/jp/ja/sitemap.xml\r\n```", "url": "https://github.com/square/okhttp/issues/5344", "user": "yschimke", "labels": ["bug"], "created": "2019-08-10 19:50:28", "closed": "2019-08-10 19:53:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object java.lang.ref.Reference.get()' on a null object reference", "body": "```\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object java.lang.ref.Reference.get()' on a null object reference\r\n    at okhttp3.ConnectionPool.int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)(ConnectionPool.java:261)\r\n    at okhttp3.ConnectionPool.long cleanup(long)(ConnectionPool.java:211)\r\n    at okhttp3.ConnectionPool$1.void run()(ConnectionPool.java:60)\r\n    at java.util.concurrent.ThreadPoolExecutor.null runWorker(null)(ThreadPoolExecutor.java:1133)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.null run(null)(ThreadPoolExecutor.java:607)\r\n    at java.lang.Thread.null run(null)(Thread.java:761)\r\n```\r\n\r\nversion: 3.12.0\r\n", "url": "https://github.com/square/okhttp/issues/5337", "user": "MichaelJokAr", "labels": ["bug", "needs info"], "created": "2019-08-09 07:17:24", "closed": "2019-09-11 01:47:25", "commits": {}, "ttf": 32.000277777777775, "commitsDetails": []}, {"title": "Native Crash in okhttp 3.12.2", "body": "I got the crash on some devices\r\n\r\nokhttp3.12.2\r\n\r\nSIGABRT\r\n\r\n1 #00 pc 0003d4e8 /system/lib/libc.so (tgkill+12) [armeabi-v8]\r\n2 #01 pc 000164eb /system/lib/libc.so (pthread_kill+66) [armeabi-v8]\r\n3 #02 pc 000170b7 /system/lib/libc.so (raise+10) [armeabi-v8]\r\n4 #03 pc 000139a7 /system/lib/libc.so (__libc_android_abort+34) [armeabi-v8]\r\n5 #04 pc 000120d8 /system/lib/libc.so (abort+4) [armeabi-v8]\r\n6 #05 pc 00014ba3 /system/lib/libc.so (__libc_fatal+16) [armeabi-v8]\r\n7 #06 pc 00014bbb /system/lib/libc.so (__fortify_chk_fail+18) [armeabi-v8]\r\n8 #07 pc 00040f29 /system/lib/libc.so (__FD_SET_chk+24) [armeabi-v8]\r\n9 #08 pc 0000ae15 /system/lib/libjavacrypto.so [armeabi-v8]\r\n10 #09 pc 0000f845 /system/lib/libjavacrypto.so [armeabi-v8]\r\n11 #10 pc 002f063f /data/dalvik-cache/arm/system@framework@boot.oat [armeabi]\r\n12 java:\r\n13 com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:307)\r\n14 okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:320)\r\n15 okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\r\n16 okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\r\n17 okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n18 okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n19 okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n20 okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n21 okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n22 okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n23 okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n24 okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n25 okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n26 okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n27 okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n28 okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n29 okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n30 okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n31 okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:250)\r\n32 okhttp3.RealCall.execute(RealCall.java:93)", "url": "https://github.com/square/okhttp/issues/5331", "user": "sandking", "labels": ["bug"], "created": "2019-08-07 09:25:48", "closed": "2019-08-07 11:57:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Connecttimeout not honored", "body": "We are experiencing issues with the OkHTTP connect timeout not being honored on a Pixel 3 device on Android 9.\r\nWe set it to 10 seconds in the builder, and when using that OkHTTP client and enabling AirPlane Mode, the request we issue will just hang forever.\r\n\r\n```\r\nprivate static OkHttpClient client = new OkHttpClient.Builder().connectTimeout(10, TimeUnit.SECONDS).build();\r\n[..]\r\nResponse response = client.newCall(request).execute();\r\n//Should continue here after 10s, but keeps hanging at this point.\r\nif (response.body() != null) {\r\n//do something\r\n}\r\n```\r\n\r\nThe weird thing is, it works ok with other devices, also on Android 9, and the emulator. \r\nThe issue happens when in AirPlane mode, but also when just having no mobile network in a building. \r\n\r\nI tried testing the app with OkHTTP 4.0.1, 3.14.2, 3.12.1 and 3.4.1, all exhibit the same issue.\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5328", "user": "peterdk", "labels": ["bug"], "created": "2019-08-05 13:30:44", "closed": "2019-08-05 15:14:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Execution failed for task ':app:transformClassesWithDexBuilderForDevDebug'", "body": "open advanced profiling\r\nrun project:\r\nExecution failed for task ':app:transformClassesWithDexBuilderForDevDebug'\r\n", "url": "https://github.com/square/okhttp/issues/5327", "user": "liumulingyu", "labels": ["bug"], "created": "2019-08-03 09:43:02", "closed": "2019-08-05 17:05:26", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "closed", "body": "closed", "url": "https://github.com/square/okhttp/issues/5326", "user": "jmheart", "labels": ["bug"], "created": "2019-08-03 07:02:21", "closed": "2019-08-03 09:37:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ProGuard and 4.0.1 OkHttp issue", "body": "Hello,\r\n\r\nI updated from 3.14.2 to 4.0.1 today.\r\n\r\nWith 4.0.1 I cannot make a release build because the build gets stuck in the ProGuard phase, \"Optimizing (pass 1/5)\". The whole process usually takes around 10 min, I stopped after 120 minutes as it was stuck there. Cleaned up everything, restarted Android Studio, same thing.\r\nI reverted to 3.14.2 and build is successful again.\r\n\r\nAny idea what could cause this issue?", "url": "https://github.com/square/okhttp/issues/5324", "user": "ouachman", "labels": ["bug", "proguard"], "created": "2019-08-02 16:01:11", "closed": "2019-09-11 01:51:15", "commits": {}, "ttf": 39.000277777777775, "commitsDetails": []}, {"title": "\u591a\u4e2a\u8bf7\u6c42\u540c\u65f6\u6267\u884cexecute\u6709\u65f6\u4f1a\u591a\u4e2a\u8bf7\u6c42\u90fd\u7f16\u7a0b\u4e00\u4e2a\u8bf7\u6c42\uff01", "body": "\u591a\u4e2a\u8bf7\u6c42\u540c\u65f6\u6267\u884cexecute\u6709\u65f6\u4f1a\u591a\u4e2a\u8bf7\u6c42\u90fd\u7f16\u7a0b\u4e00\u4e2a\u8bf7\u6c42\uff01\r\n\u4f7f\u7528\u7248\u672c:3.11.0\r\n\u4e0d\u77e5\u9053\u65b0\u7248\u6709\u6ca1\u6709\u4fee\u590d\uff01", "url": "https://github.com/square/okhttp/issues/5320", "user": "yuanfen7650", "labels": ["bug", "stackoverflow"], "created": "2019-08-01 10:31:47", "closed": "2019-08-01 10:55:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "socket is closed", "body": "repeat enter and exit three activity,all activity's onCreate onRestart have request,add key value Connection close  to header, quick repeat operation throw socket is closed,change Connection keep-alive can sloved it ,but why?\r\n", "url": "https://github.com/square/okhttp/issues/5318", "user": "vickyleu", "labels": ["bug", "stackoverflow"], "created": "2019-08-01 08:07:27", "closed": "2019-08-01 12:11:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Build fails with RuntimeException when building from command line: 'Error injecting constructor'", "body": "Branch: master or latest release (parent-4.0.1)\r\n\r\nCommand: ./gradlew clean build\r\n\r\nError: \r\n> Task :mockwebserver:dokka FAILED\r\nFAILURE: Build failed with an exception.\r\n* What went wrong:\r\nExecution failed for task ':mockwebserver:dokka'.\r\n> Guice provision errors:\r\n  1) Error injecting constructor, java.lang.RuntimeException: Exception while loading package-list from ExternalDocumentationLinkImpl(url=https://square.github.io/okio/2.x/okio/jvm/index.html, packageListUrl=https://square.github.io/okio/2.x/okio/jvm/package-list)\r\n    at org.jetbrains.dokka.ExternalDocumentationLinkResolver.<init>(ExternalDocumentationLinkResolver.kt:32)\r\n\r\nCause: Referencing a non-existing (404) page https://square.github.io/okio/2.x/okio/jvm/package-list\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5316", "user": "criblecrable", "labels": ["bug", "documentation"], "created": "2019-07-30 23:47:32", "closed": "2019-09-22 09:38:46", "commits": {}, "ttf": 53.000277777777775, "commitsDetails": []}, {"title": "HTTPS is slow with AWS ELB", "body": "OkHttp version: 3.12 - 3.14 (only these version tested)\r\nAndroid version: Android 5 - 8 (only these version tested)\r\n\r\nI have a service running on AWS ElasticBeanstalk(EB) and balanced by AWS ElasticLoadBalancer(ELB) handles user uploads. HTTP works totally fine across android/ios/web/electron. Some days ago, I add HTTPS to ELB, each platform works just like before except Android with okhttp have a really low transfer speed both upload and download.\r\nThe [SSL Security Policies of ELB](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html) is configured use `FS-2018-06` and `2016-08` both have this issue (only test these two).\r\nCurrently this part code is replace by HttpsUrlConnection and have a similar speed to other platform.\r\n\r\nThe upload part code is quite simple\r\n``` Kotlin\r\nval rawFile = File(dataDir, \"<filename>.zip\")\r\nval httpUrl = HttpUrl.get(\"https://<domain_to_service>\")\r\n    .newBuilder()\r\n    .addQueryParameter(\"<foo1>\", \"<bar1>\")\r\n    .addQueryParameter(\"<foo2>\", \"<bar2>\")\r\n    .build()\r\nval okHttpClient = OkHttpClient.Builder()\r\n    .build()\r\nval request = Request.Builder()\r\n    .url(httpUrl)\r\n    .post(RequestBody.create(MediaType.get(\"application/zip\"), rawFile))\r\n    .build()\r\nokHttpClient.newCall(request).enqueue(object: Callback {\r\n    ...notify user transfer over...\r\n})\r\n```\r\n\r\nEvents, I POST a 128MB file:\r\n```\r\nI/System.out: 0.000 callStart\r\nI/System.out: 0.019 dnsStart\r\nD/libc: [NET] android_getaddrinfofornet+,hn 31(0x75736572646174),sn(),hints(known),family 0,flags 4\r\n    [NET] android_getaddrinfofornet-, err=8\r\n    [NET] android_getaddrinfofornet+,hn 31(0x75736572646174),sn(),hints(known),family 0,flags 1024\r\n    [NET] android_getaddrinfofornet-, pass to proxy\r\n    [NET] android_getaddrinfo_proxy+\r\nD/libc: [NET] android_getaddrinfo_proxy get netid:0\r\nD/libc: [NET] android_getaddrinfo_proxy-, success\r\nI/System.out: 0.297 dnsEnd\r\nI/System.out: 0.302 connectStart\r\nI/System.out: 0.596 secureConnectStart\r\nI/System.out: 1.342 secureConnectEnd\r\nI/System.out: 1.359 connectEnd\r\n    1.359 connectionAcquired\r\nI/System.out: 8.229 requestHeadersStart\r\nI/System.out: 8.241 requestHeadersEnd\r\n    8.242 requestBodyStart\r\nI/System.out: 637.926 requestBodyEnd\r\n    637.926 responseHeadersStart\r\nI/System.out: 646.833 responseHeadersEnd\r\n    646.833 responseBodyStart\r\n    646.839 responseBodyEnd\r\n    646.840 connectionReleased\r\n    646.840 callEnd\r\n```\r\n\r\nNetwork in Profiler, mostly at 0.4MB/s, but on other device same network is at least 3MB/s:\r\n[first 30 seconds](https://imgur.com/hZNj7IH)", "url": "https://github.com/square/okhttp/issues/5314", "user": "BH4EHN", "labels": ["bug"], "created": "2019-07-30 07:58:49", "closed": "2019-08-02 04:50:54", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "java.net.BindException: Address already in use: connect on HTTP Proxies", "body": "Hi all,\r\nI'm encountering a bind error whenever I use a single rotating HTTP Proxies with a high amount of threads (800).\r\n\r\nThe error comes in at about 10-16k requests to the same proxy, which is interesting because as far as I can tell, HTTP Proxy sockets are constructed the same way as normal no proxy sockets.\r\n\r\nI'm using SmartProxy as a proxy solution right now and it happens under them, but should happen with any provider or a Squid server.\r\n\r\nThe full Stacktrace is:\r\n```\r\nat java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)\r\n\tat java.base/java.net.Socket.connect(Socket.java:591)\r\n\tat okhttp3.internal.platform.Platform.connectSocket(Platform.kt:126)\r\n\tat okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:268)\r\n\tat okhttp3.internal.connection.RealConnection.connectTunnel(RealConnection.kt:234)\r\n\tat okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:170)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:236)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:109)\r\n\tat okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:77)\r\n\tat okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.kt:162)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:35)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat io.kekr.core.base.Kekr$launchCheck$1$invokeSuspend$$inlined$-addInterceptor$1.intercept(Interceptor.kt:82)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n\tat okhttp3.RealCall.execute(RealCall.kt:66)\r\n\tat io.kekr.core.connection.OkHttpHelperKt$await$2$1.invokeSuspend(OkHttpHelper.kt:56)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(Dispatched.kt:238)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n```\r\n\r\nUsing OkHttp 4.0.1 but also happens on 3.14.0\r\n\r\nThanks!", "url": "https://github.com/square/okhttp/issues/5313", "user": "mcjp78", "labels": ["bug", "stackoverflow"], "created": "2019-07-29 20:00:29", "closed": "2019-08-07 11:53:26", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "NoSuchMethodError copyInto in TlsUtil", "body": "Running instrumentation tests with RESTMock we are getting this error\r\n\r\n```\r\njava.lang.NoSuchMethodError: No static method copyInto$default([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object; in class Lkotlin/collections/ArraysKt; or its super classes (declaration of 'kotlin.collections.ArraysKt' appears in /data/app/com.example.debug-1/base.apk)\r\nFATAL EXCEPTION: pool-6-thread-1\r\nProcess: com.example.debug, PID: 6606\r\njava.lang.NoSuchMethodError: No static method copyInto$default([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object; in class Lkotlin/collections/ArraysKt; or its super classes (declaration of 'kotlin.collections.ArraysKt' appears in /data/app/com.example.debug-1/base.apk)\r\n\tat okhttp3.tls.internal.TlsUtil.newKeyManager(TlsUtil.kt:84)\r\n\tat okhttp3.tls.HandshakeCertificates$Builder.build(HandshakeCertificates.kt:144)\r\n\tat io.appflate.restmock.SslUtils.localhost(SslUtils.java:49)\r\n\tat io.appflate.restmock.RESTMockServer.setUpHttps(RESTMockServer.java:91)\r\n\tat io.appflate.restmock.RESTMockServer.init(RESTMockServer.java:74)\r\n\tat io.appflate.restmock.RESTMockServerStarter$1.run(RESTMockServerStarter.java:56)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n```\r\n\r\nThis is the line in question https://github.com/square/okhttp/blob/master/okhttp-tls/src/main/java/okhttp3/tls/internal/TlsUtil.kt#L84\r\n\r\nIIUC, Kotlin can treat a `varargs` as a Kotlin Array and then call extensions functions like [copyInto](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/copy-into.html)\r\n\r\nWe're on OkHttp 4.0.1, Kotlin 1.3.40, R8 1.5.41\r\n\r\nOur test apk correctly contains `copyInto` method so I don't think it's a proguard/R8 issue:\r\n\r\n<img width=\"713\" alt=\"Screen Shot 2019-07-26 at 4 02 10 PM\" src=\"https://user-images.githubusercontent.com/1980553/61978292-e1e46700-afbe-11e9-835d-96beb22f7457.png\">", "url": "https://github.com/square/okhttp/issues/5308", "user": "tir38", "labels": ["android", "bug", "stackoverflow"], "created": "2019-07-26 20:06:06", "closed": "2019-08-01 12:25:58", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "OkHttp 4.0.1 javax.net.ssl.SSLHandshakeException: Handshake failed", "body": "Hello, I have updated to last version of OkHttp and is not working any api call. I am getting the following error from okhttp log: \r\n\r\n> HTTP FAILED: javax.net.ssl.SSLHandshakeException: Handshake failed\r\n\r\nThe next code is how i create OkHttpClient object:\r\n\r\nhttps://gist.github.com/Sergioct/3996d91559caa69d02a9908d40660599\r\n\r\n\r\nThanks.", "url": "https://github.com/square/okhttp/issues/5307", "user": "Sergioct", "labels": ["bug", "stackoverflow"], "created": "2019-07-25 11:08:44", "closed": "2019-07-25 11:56:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Warning: Long monitor contention with owner Thread-6", "body": "OkHttp initializing:\r\n\r\n    OkHttpClient mHttpClient = new OkHttpClient.Builder()\r\n        .readTimeout(20, TimeUnit.SECONDS)\r\n        .connectTimeout(20, TimeUnit.SECONDS)\r\n        .writeTimeout(20, TimeUnit.SECONDS)\r\n        .addInterceptor(chain -> {\r\n            Request request = chain.request().newBuilder().addHeader(\"Locale\", LocaleRepo.getLocaleShortName()).build();\r\n                    return chain.proceed(request);\r\n                })\r\n                .build();\r\n        AndroidNetworking.initialize(getApplicationContext(), mHttpClient);\r\n        AndroidNetworking.setParserFactory(new GsonParserFactory(appGson));\r\n\r\nI have the following warning in log:\r\n\r\n\t2019-07-25 12:11:35.347 29215-29456/uz.myapp.store W/z.myapp.stor: Long monitor contention with owner Thread-6 (29455) at boolean java.io.UnixFileSystem.checkAccess(java.io.File, int)(UnixFileSystem.java:251) waiters=0 in okhttp3.internal.cache.DiskLruCache$Snapshot okhttp3.internal.cache.DiskLruCache.get(java.lang.String) for 6.366s\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor: Current owner stack:\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.Cache.get(Cache.java:208)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.Cache$1.get(Cache.java:145)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:54)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at com.androidnetworking.interceptors.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:221)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at uz.myapp.store.MyApp.lambda$initNetworkServices$0(MyApp.java:105)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at uz.myapp.store.-$$Lambda$MyApp$hlKbrnUSpv3x_1XvrLRIEglXFdU.intercept(lambda:-1)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\t2019-07-25 12:11:35.350 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:250)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at okhttp3.RealCall.execute(RealCall.java:93)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at com.androidnetworking.internal.InternalNetworking.performSimpleRequest(InternalNetworking.java:117)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at com.androidnetworking.internal.InternalRunnable.executeSimpleRequest(InternalRunnable.java:70)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at com.androidnetworking.internal.InternalRunnable.run(InternalRunnable.java:55)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:458)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at com.androidnetworking.core.PriorityThreadFactory$1.run(PriorityThreadFactory.java:47)\r\n\t2019-07-25 12:11:35.351 29215-29456/uz.myapp.store W/z.myapp.stor:     at java.lang.Thread.run(Thread.java:764)", "url": "https://github.com/square/okhttp/issues/5306", "user": "sm-tester", "labels": ["bug", "stackoverflow"], "created": "2019-07-25 07:27:50", "closed": "2019-07-27 05:55:48", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Flaky test: WholeOperationTimeoutTest", "body": "https://circleci.com/gh/square/okhttp/4441\r\n\r\nhttps://4441-5152285-gh.circle-artifacts.com/0/home/circleci/reports/okhttp/build/reports/tests/test/classes/okhttp3.WholeOperationTimeoutTest.html#noTimeout\r\n\r\n```\r\nEvents (16)\r\n[0 ms] callStart: Request{method=POST, url=http://localhost:60795/}\r\n[0 ms] dnsStart: localhost\r\n[0 ms] dnsEnd: [localhost/127.0.0.1]\r\n[0 ms] connectStart: localhost/127.0.0.1:60795 DIRECT\r\n[0 ms] connectEnd: http/1.1\r\n[0 ms] connectionAcquired: Connection{localhost:60795, proxy=DIRECT hostAddress=localhost/127.0.0.1:60795 cipherSuite=none protocol=http/1.1}\r\n[0 ms] requestHeadersStart\r\n[0 ms] requestHeadersEnd\r\n[0 ms] requestBodyStart\r\n[254 ms] requestBodyEnd: byteCount=6\r\n[259 ms] responseHeadersStart\r\n[936 ms] responseHeadersEnd: Response{protocol=http/1.1, code=200, message=OK, url=http://localhost:60795/}\r\n[936 ms] responseBodyStart\r\n[1187 ms] responseFailed: java.net.SocketException: Socket closed\r\n[1187 ms] connectionReleased\r\n[1187 ms] callFailed: java.io.InterruptedIOException: timeout\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/5304", "user": "yschimke", "labels": ["bug"], "created": "2019-07-25 06:05:47", "closed": "2019-08-10 13:55:34", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "/system/lib/libssl.so (SSL_is_init_finished+7)", "body": "\r\n1\u00a0#00 pc 000194f4 /system/lib/libssl.so (SSL_is_init_finished+7) [armeabi-v7a]\r\n--\r\n2\u00a0#01 pc 000147cb /system/lib/libjavacrypto.so [armeabi-v7a]\r\n3\u00a0#02 pc 0000f745 /system/lib/libjavacrypto.so [armeabi-v7a]\r\n4\u00a0#03 pc 0003535f /system/framework/arm/boot-conscrypt.oat (oatexec+99167) [armeabi]\r\n5\u00a0java:\r\n6\u00a0com.android.org.conscrypt.SslWrapper.read(SslWrapper.java:384)\r\n7\u00a0com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream.read(ConscryptFileDescriptorSocket.java:541)\r\n8\u00a0okio.Okio$2.read(Okio.java:140)\r\n9\u00a0okio.AsyncTimeout$2.read(AsyncTimeout.java:236)\r\n10\u00a0okio.RealBufferedSource.request(RealBufferedSource.java:67)\r\n11\u00a0okio.RealBufferedSource.require(RealBufferedSource.java:59)\r\n12\u00a0okio.RealBufferedSource.readHexadecimalUnsignedLong(RealBufferedSource.java:297)\r\n13\u00a0okhttp3.internal.http1.Http1Codec$ChunkedSource.readChunkSize(Http1Codec.java:466)\r\n14\u00a0okhttp3.internal.http1.Http1Codec$ChunkedSource.read(Http1Codec.java:446)\r\n15\u00a0okio.RealBufferedSource.read(RealBufferedSource.java:45)\r\n16\u00a0okio.RealBufferedSource.exhausted(RealBufferedSource.java:55)\r\n17\u00a0okio.InflaterSource.refill(InflaterSource.java:101)\r\n18\u00a0okio.InflaterSource.read(InflaterSource.java:62)\r\n19\u00a0okio.GzipSource.read(GzipSource.java:80)\r\n20\u00a0okio.RealBufferedSource$1.read(RealBufferedSource.java:433)\r\n21\u00a0java.io.InputStream.read(InputStream.java:101)\r\n22\u00a0com.android.volley.toolbox.ResponseUtil.stream2Bytes(ResponseUtil.java:36)\r\n23\u00a0com.android.volley.toolbox.BasicNetwork.performRequest(BasicNetwork.java:159)\r\n24\u00a0com.android.volley.NetworkDispatcher.run(NetworkDispatcher.java:129)\r\n\r\n\r\nmost of crash in os 8.1.0", "url": "https://github.com/square/okhttp/issues/5303", "user": "longxf", "labels": ["bug", "stackoverflow"], "created": "2019-07-25 05:52:53", "closed": "2019-07-25 05:56:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NoClassDefFoundError when initializing HttpLoggingInterceptor", "body": "I updated to the latest version of `logging-interceptor` and creating a loggingInterceptor no longer works. I wrote a small test that illustrated the problem, when i run it it throws a ClassNotfoundException:\r\n\r\n```java\r\nimport okhttp3.logging.HttpLoggingInterceptor;\r\nimport org.checkerframework.checker.nullness.qual.NonNull;\r\nimport org.junit.jupiter.api.Test;\r\n\r\npublic class LogInterceptorTest {\r\n\r\n    @Test\r\n    void itShouldCreateALoggingInterceptor() {\r\n        final HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor(new HttpLoggingInterceptor.Logger() {\r\n            @Override\r\n            public void log(@NonNull final String msg) {\r\n                System.out.println(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\n```\r\n\r\n```bash\r\njava.lang.NoClassDefFoundError: kotlin/jvm/internal/Intrinsics\r\n\r\n\tat okhttp3.logging.HttpLoggingInterceptor.<init>(HttpLoggingInterceptor.kt)\r\n\tat nl.qbuzz.planner.mapper.LogInterceptorTest.itShouldCreateALoggingInterceptor(LogInterceptorTest.java:11)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:628)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:117)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:184)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:180)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:127)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: java.lang.ClassNotFoundException: kotlin.jvm.internal.Intrinsics\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:382)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n```\r\n\r\nI am not sure what causes this error and I don't even use kotlin in my project. It's just a simple maven java project.", "url": "https://github.com/square/okhttp/issues/5299", "user": "Archcry", "labels": ["bug"], "created": "2019-07-24 09:34:58", "closed": "2019-07-24 16:01:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "use one client in many threads, cause much time_wait", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n\r\ncreate client like this.\r\n```\r\nOkHttpClient.Builder builder = new OkHttpClient.Builder()\r\n                .readTimeout(config.getReadTimeout(), TimeUnit.MILLISECONDS)\r\n                .writeTimeout(config.getReadTimeout(), TimeUnit.MILLISECONDS)\r\n                .connectTimeout(config.getConnTimeout(), TimeUnit.MILLISECONDS)\r\n                .sslSocketFactory(sslSocketFactory(), x509TrustManager())\r\n                .addInterceptor(wrapper.getResponse());\r\nreturn builder.build();\r\n```\r\n\r\nuse the default connectionPool, then use the client to send request in 300 threads.\r\n\r\nnetstat -anp | grep ip | wc -l\r\n\r\nfound 1000+ time_wait connection", "url": "https://github.com/square/okhttp/issues/5292", "user": "noosc", "labels": ["bug"], "created": "2019-07-18 13:18:31", "closed": "2019-07-18 14:12:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OpenSSLSocketImpl.startHandshake crash", "body": "on some devices i get the crash below:\r\n\r\n// the crash info\r\n\r\nSIGABRT\r\n\r\n#00 pc 00042364 /system/lib/libc.so (tgkill+12) [armeabi-v7a]\r\n#01 pc 0004019d /system/lib/libc.so (pthread_kill+32) [armeabi-v7a]\r\n#02 pc 0001c893 /system/lib/libc.so (raise+10) [armeabi-v7a]\r\n#03 pc 00019af1 /system/lib/libc.so (__libc_android_abort+34) [armeabi-v7a]\r\n#04 pc 000176b8 /system/lib/libc.so (abort+4) [armeabi-v7a]\r\n#05 pc 0001b553 /system/lib/libc.so (__libc_fatal+16) [armeabi-v7a]\r\n#06 pc 0001b56b /system/lib/libc.so (__fortify_chk_fail+18) [armeabi-v7a]\r\n#07 pc 000462f5 /system/lib/libc.so (__FD_SET_chk+24) [armeabi-v7a]\r\n#08 pc 000092eb /system/lib/libjavacrypto.so [armeabi-v7a]\r\njava:\r\ncom.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:324)\r\ncom.android.okhttp.internal.http.SocketConnector.connectTls(SocketConnector.java:103)\r\ncom.android.okhttp.Connection.connect(Connection.java:143)\r\ncom.android.okhttp.Connection.connectAndSetOwner(Connection.java:185)\r\ncom.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:128)\r\ncom.android.okhttp.internal.http.HttpEngine.nextConnection(HttpEngine.java:341)\r\ncom.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\ncom.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:248)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:433)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:114)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:245)\r\ncom.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218)\r\ncom.android.okhttp.internal.huc.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:25)\r\nc.t.m.li.tsa.b.a(Unknown Source)\r\nc.t.m.li.tsa.h.run(Unknown Source)\r\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\njava.lang.Thread.run(Thread.java:833)", "url": "https://github.com/square/okhttp/issues/5286", "user": "treasure-lau", "labels": ["bug"], "created": "2019-07-12 06:38:55", "closed": "2019-07-12 12:14:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Avoid using non-null assertion in OkHttp4.0.x to prevent NPE", "body": "To be compatible with OkHttp3, OkHttp4.0 doesn't use non-null assertion(`!!`) to avoid NPE.\r\n\r\nHere's the list of classes where we use `!!`.\r\nTo find classes: `git grep \"\\!\\!.\" | cut -f 1 -d \":\" | uniq -d`\r\n\r\n- [ ] `mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt`\r\n- [ ] `okcurl/src/main/java/okhttp3/curl/Main.kt`\r\n- [ ] `okhttp-dnsoverhttps/src/main/java/okhttp3/dnsoverhttps/DnsOverHttps.kt`\r\n- [ ] `okhttp-tls/src/main/java/okhttp3/tls/HeldCertificate.kt`\r\n- [ ] `okhttp-urlconnection/src/main/java/okhttp3/JavaNetCookieJar.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/Cache.kt`\r\n- [x] `okhttp/src/main/java/okhttp3/ConnectionSpec.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/HttpUrl.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/MultipartBody.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/cache/CacheStrategy.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/cache/DiskLruCache.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/cache2/Relay.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/connection/Exchange.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/connection/Transmitter.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/http/CallServerInterceptor.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/http1/Http1ExchangeCodec.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/http2/Hpack.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/http2/Http2ExchangeCodec.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/http2/Huffman.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/ws/WebSocketReader.kt`\r\n- [ ] `okhttp/src/main/java/okhttp3/internal/ws/WebSocketWriter.kt`\r\n- [ ] `okhttp/src/test/java/okhttp3/CallKotlinTest.kt`\r\n- [ ] `okhttp/src/test/java/okhttp3/ConscryptTest.kt`\r\n- [ ] `okhttp/src/test/java/okhttp3/internal/http/HttpDateTest.kt`", "url": "https://github.com/square/okhttp/issues/5285", "user": "monkey-mas", "labels": ["bug"], "created": "2019-07-12 06:36:34", "closed": "2019-07-12 12:12:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.Throwable: Explicit termination method 'close' not called", "body": "use version okhttp:3.14.0\r\n\r\njava.lang.Throwable: Explicit termination method 'close' not called\r\n\tat dalvik.system.CloseGuard.open(CloseGuard.java:223)\r\n\tat java.io.FileOutputStream.<init>(FileOutputStream.java:224)\r\n\tat java.io.FileOutputStream.<init>(FileOutputStream.java:171)\r\n\tat okio.Okio.sink(Okio.java:181)\r\n\tat okhttp3.internal.io.FileSystem$1.sink(FileSystem.java:49)\r\n\tat okhttp3.internal.cache.DiskLruCache$Editor.newSink(DiskLruCache.java:899)\r\n\tat okhttp3.Cache$CacheRequestImpl.<init>(Cache.java:442)\r\n\tat okhttp3.Cache.put(Cache.java:254)\r\n\tat okhttp3.Cache$1.put(Cache.java:149)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:131)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)", "url": "https://github.com/square/okhttp/issues/5282", "user": "lougw", "labels": ["bug"], "created": "2019-07-12 03:10:01", "closed": "2019-07-13 05:02:06", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Don't leave callbacks hanging when interceptors throw unchecked exceptions", "body": "Currently, `Callback#onFailure` has an `IOException` param, and is only called when the interceptor chain throws an `IOException`. This means that when an unchecked exception is thrown, it bubbles up to the worker thread, and nothing happens with the callback.\r\n\r\nThis isn't unknown (see #1482 and others), but here's a self-contained repro anyway: https://bitbucket.org/marshallpierce/okhttp-interceptor-repro/src/master/\r\n\r\nhttps://github.com/square/okhttp/issues/1482#issuecomment-78042597 indicates that this is intentional:\r\n\r\n> For async, we shouldn't call onFailure with the unchecked exception; that method is for I/O failures only. Instead we're better off crashing to the worker thread's uncaught exception handler.\r\n\r\nHowever, unchecked exceptions happen in practice, and either way I claim \"don't leave callbacks permanently stuck in neither success or failure\" is axiomatically a Good Thing.\r\n\r\n- Unchecked exceptions are unavoidable in practice. Any nontrivial code may throw them.\r\n- I think the above comment is incorrect, and that killing the worker basically does nobody any good. Now another thread has to be started, and the responsible code will never be notified.\r\n- It's effectively impossible to build reliable code on top of Callback because of this. Retrofit, for instance, produces `CompletableFuture`s that never complete when this happens, which is clearly bad, and there's no way for it to do any better, either, because `Callback` won't let it.\r\n\r\n[Async Http Client](https://github.com/AsyncHttpClient/async-http-client/blob/master/client/src/main/java/org/asynchttpclient/AsyncHandler.java#L107) has the right idea, as does the [client](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpClient.html#sendAsync(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)) recently added to the JDK.\r\n\r\nChanging the signature of `onFailure` would be a breaking change, so that'll presumably have to wait, but in the meantime it looks like a pragmatic solution would be to wrap throwables in `IOException` so they may be provided to that method. Perhaps a `WrapperIOException` class could be used for just this purpose so that callbacks who care to differentiate could tell the difference between an \"unchecked-as-ioexception\" and the usual breed.", "url": "https://github.com/square/okhttp/issues/5281", "user": "marshallpierce", "labels": ["bug"], "created": "2019-07-11 17:51:50", "closed": "2019-07-11 18:01:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "KotlinNullPointerException on any network request on old Android 5 phone with new okhttp-logging-interceptor 4.0.0+", "body": "After upgrading from com.squareup.okhttp3:logging-interceptor 3.14.1 to 4.0.0 (or 4.0.1), with no other code changes, I am getting a KotlinNullPointerException on any network request, when our app installed on HTC One with Android 5.0.2. I am unsure of which other devices also have this issue. It also crashes even if I remove all calls to addInterceptor.\r\n\r\nIt crashes because cipherSuites is null in the ConnectionSpec. cipherSuites is null in the connection spec because the code I was using to enable TLS 1.2 on API 21 was calling .allEnabledCipherSuites() on the ConnectionSpec.Builder. As far as I can tell, all that allEnabledCipherSuites does is set the cipherSuites to null.\r\n\r\nIs this the expected behavior? Do should I be calling allEnabledCipherSuites() or not?\r\n\r\n```\r\nE/AndroidRuntime_2_crash: crash in the same process: OkHttp Dispatcher\r\n    kotlin.KotlinNullPointerException\r\n        at okhttp3.ConnectionSpec.hashCode(ConnectionSpec.kt:186)\r\n        at java.util.ArrayList.hashCode(ArrayList.java:603)\r\n        at java.util.Collections$UnmodifiableList.hashCode(Collections.java:1054)\r\n        at okhttp3.Address.hashCode(Address.kt:178)\r\n        at okhttp3.Route.hashCode(Route.kt:84)\r\n        at java.util.Collections.secondaryHash(Collections.java:3405)\r\n        at java.util.HashMap.containsKey(HashMap.java:325)\r\n        at java.util.HashSet.contains(HashSet.java:138)\r\n        at okhttp3.internal.connection.RouteDatabase.shouldPostpone(RouteDatabase.kt:40)\r\n        at okhttp3.internal.connection.RouteSelector.next(RouteSelector.kt:74)\r\n        at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:199)\r\n        at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:109)\r\n        at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:77)\r\n        at okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.kt:162)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:35)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n        at okhttp3.RealCall$AsyncCall.run(RealCall.kt:136)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n        at java.lang.Thread.run(Thread.java:818)\r\n```", "url": "https://github.com/square/okhttp/issues/5280", "user": "lbenedetto", "labels": ["bug"], "created": "2019-07-11 15:01:46", "closed": "2019-07-16 01:45:44", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[OKHTTP] HTTP2 use too many Connections", "body": "I use okhttp version 3.14.2 to send Http2 request with alpn-boot-8.1.13.jar\r\n\r\nBy setting       `client.dispatcher().setMaxRequestsPerHost(250)` to send about 500 requests , I watched in Wireshark that about 20+ TCP connection established. But finally , I found only one TCP connection really transfered HTTP2 data. That means other 20 connections are useless and time wasted.\r\n\r\nI review in code that in the source code, and find that:\r\nIn `ExchangeFinder.java   findConnection()`, there are 2  ` synchronized (connectionPool)`  methods. If I try to merge the two blocks into one, only one or two `RealConnection ` are created, the problems seems resolved.\r\n", "url": "https://github.com/square/okhttp/issues/5269", "user": "authorfu", "labels": ["bug"], "created": "2019-07-05 09:57:33", "closed": "2019-07-05 19:08:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PlatformRule can be flaky because of gradle parallel builds", "body": "Build failures for conscrypt build in CI https://circleci.com/gh/square/okhttp/3938", "url": "https://github.com/square/okhttp/issues/5258", "user": "yschimke", "labels": ["bug"], "created": "2019-07-02 06:39:54", "closed": "2019-07-03 06:41:35", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "OkHttpClient.Builder().protocols() 4.0.0 throws NullPointerException", "body": "Using the current `4.0.0` release and JDK 11, the following code (in a file named `Foo.java`; compile with `javac` or your favorite IDE):\r\n\r\n```java\r\nimport java.util.List;\r\n\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Protocol;\r\n\r\npublic class Foo\r\n{\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tnew OkHttpClient.Builder().protocols(List.of(Protocol.HTTP_1_1));\r\n\t}\r\n}\r\n```\r\n\r\nalways results in a NullPointerException\r\n```\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\r\n\tat java.base/java.util.ImmutableCollections$AbstractImmutableList.indexOf(ImmutableCollections.java:169)\r\n\tat java.base/java.util.ImmutableCollections$AbstractImmutableList.contains(ImmutableCollections.java:200)\r\n\tat okhttp3.OkHttpClient$Builder.protocols(OkHttpClient.kt:770)\r\n\tat Foo.main(Foo.java:10)\r\n```", "url": "https://github.com/square/okhttp/issues/5257", "user": "fastily", "labels": ["bug"], "created": "2019-07-02 03:56:18", "closed": "2019-07-02 21:33:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "When the network environment is weak, my app is often ANR", "body": "this is my log for this bug:\r\n```\r\n--------- switch to main\r\n06-28 15:38:24.431271  3508 18114 I LogToolService: to compress, at 1561707504431, name=Thread_1561707504428\r\n06-28 15:38:24.431828  3508 18114 I LogToolGZipCompress: srcPathName[0]=/data/anr/Mlog/radio\r\n06-28 15:38:24.431880  3508 18114 E LogToolGZipCompress: /data/anr/Mlog/radio is not exist !\r\n06-28 15:38:24.431893  3508 18114 I LogToolGZipCompress: srcPathName[1]=/data/anr/traces.txt\r\n06-28 15:38:24.431954  3508 18114 E LogToolGZipCompress: compress file\uff1a/data/anr/traces.txt\r\n06-28 15:38:24.455511  3508 18114 I LogToolGZipCompress: srcPathName[2]=/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.455691  3508 18114 E LogToolGZipCompress: compress file\uff1a/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.459444  3508 18114 I LogToolService: compressed,  at 1561707504459\r\n06-28 15:38:24.491328  3508 18113 W System.err: java.net.NoRouteToHostException: No route to host\r\n06-28 15:38:24.491570  3508 18113 W System.err: \tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n06-28 15:38:24.491642  3508 18113 W System.err: \tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:334)\r\n06-28 15:38:24.491665  3508 18113 W System.err: \tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:196)\r\n06-28 15:38:24.491687  3508 18113 W System.err: \tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)\r\n06-28 15:38:24.491710  3508 18113 W System.err: \tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n06-28 15:38:24.491731  3508 18113 W System.err: \tat java.net.Socket.connect(Socket.java:605)\r\n06-28 15:38:24.491750  3508 18113 W System.err: \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:113)\r\n06-28 15:38:24.491769  3508 18113 W System.err: \tat com.android.okhttp.Connection.connectSocket(Connection.java:196)\r\n06-28 15:38:24.491788  3508 18113 W System.err: \tat com.android.okhttp.Connection.connect(Connection.java:172)\r\n06-28 15:38:24.491807  3508 18113 W System.err: \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:367)\r\n06-28 15:38:24.491825  3508 18113 W System.err: \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:130)\r\n06-28 15:38:24.491844  3508 18113 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\n06-28 15:38:24.491863  3508 18113 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:247)\r\n06-28 15:38:24.491887  3508 18113 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n06-28 15:38:24.491906  3508 18113 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n06-28 15:38:24.491926  3508 18113 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n06-28 15:38:24.491944  3508 18113 W System.err: \tat com.android.logtool.HttpUploader.uploadFile(HttpUploader.java:122)\r\n06-28 15:38:24.491963  3508 18113 W System.err: \tat com.android.logtool.LogToolService$UploadThread.run(LogToolService.java:492)\r\n06-28 15:38:24.492115  3508 18114 E uploadFile: /data/user/0/com.android.logtool/cache/20190628_033824_862851030129590fde51650-72fa-456a-a734-b720b6ac81cc.zip\r\n06-28 15:38:24.524319   903   903 I cnss-daemon: RTM_NEWNEIGH message received: 28\r\n06-28 15:38:24.524433   903   903 E cnss-daemon: Stale or unreachable neighbors, ndm state: 16\r\n06-28 15:38:24.527198   903   903 I cnss-daemon: RTM_NEWNEIGH message received: 28\r\n06-28 15:38:24.527271   903   903 I cnss-daemon: NDA_DST received: 10.13.73.254 ul: 562997169294602\r\n06-28 15:38:24.527284   903   903 I cnss-daemon: NDA_LLADDR received\r\n06-28 15:38:24.558407  2073  2083 I art     : Wrote stack traces to '/data/anr/traces.txt'\r\n06-28 15:38:24.559495  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n--------- switch to radio\r\n06-28 15:38:24.567783  2242  2349 D GsmCdmaPhone: getDeviceId gsm:0:862851030129590\r\n--------- switch to main\r\n06-28 15:38:24.568788  3508 18115 I LogToolService: to compress, at 1561707504568, name=Thread_1561707504562\r\n06-28 15:38:24.569450  3508 18115 I LogToolGZipCompress: srcPathName[0]=/data/anr/Mlog/radio\r\n06-28 15:38:24.569502  3508 18115 E LogToolGZipCompress: /data/anr/Mlog/radio is not exist !\r\n06-28 15:38:24.569517  3508 18115 I LogToolGZipCompress: srcPathName[1]=/data/anr/traces.txt\r\n06-28 15:38:24.569573  3508 18115 E LogToolGZipCompress: compress file\uff1a/data/anr/traces.txt\r\n06-28 15:38:24.576782  3508 18114 W System.err: java.net.NoRouteToHostException: No route to host\r\n06-28 15:38:24.577200  3508 18114 W System.err: \tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n06-28 15:38:24.577259  3508 18114 W System.err: \tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:334)\r\n06-28 15:38:24.577286  3508 18114 W System.err: \tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:196)\r\n06-28 15:38:24.577311  3508 18114 W System.err: \tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)\r\n06-28 15:38:24.577333  3508 18114 W System.err: \tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n06-28 15:38:24.577354  3508 18114 W System.err: \tat java.net.Socket.connect(Socket.java:605)\r\n06-28 15:38:24.577391  3508 18114 W System.err: \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:113)\r\n06-28 15:38:24.577414  3508 18114 W System.err: \tat com.android.okhttp.Connection.connectSocket(Connection.java:196)\r\n06-28 15:38:24.577434  3508 18114 W System.err: \tat com.android.okhttp.Connection.connect(Connection.java:172)\r\n06-28 15:38:24.577454  3508 18114 W System.err: \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:367)\r\n06-28 15:38:24.577481  3508 18114 W System.err: \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:130)\r\n06-28 15:38:24.577502  3508 18114 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\n06-28 15:38:24.577524  3508 18114 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:247)\r\n06-28 15:38:24.577551  3508 18114 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n06-28 15:38:24.577575  3508 18114 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n06-28 15:38:24.577598  3508 18114 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n06-28 15:38:24.577617  3508 18114 W System.err: \tat com.android.logtool.HttpUploader.uploadFile(HttpUploader.java:122)\r\n06-28 15:38:24.577640  3508 18114 W System.err: \tat com.android.logtool.LogToolService$UploadThread.run(LogToolService.java:492)\r\n06-28 15:38:24.578485   439   439 W         : debuggerd: handling request: pid=592 uid=1000 gid=1003 tid=592\r\n06-28 15:38:24.598342  3508 18115 I LogToolGZipCompress: srcPathName[2]=/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.598544  3508 18115 E LogToolGZipCompress: compress file\uff1a/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.602840  3508 18115 I LogToolService: compressed,  at 1561707504602\r\n06-28 15:38:24.602971  3508 18115 E uploadFile: /data/user/0/com.android.logtool/cache/20190628_033824_8628510301295902bc643dc-886c-4058-a728-2f6b369faec0.zip\r\n06-28 15:38:24.619891   439   439 W         : debuggerd: resuming target 592\r\n06-28 15:38:24.620337  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n06-28 15:38:24.621172   439   439 W         : debuggerd: handling request: pid=879 uid=1041 gid=1005 tid=879\r\n06-28 15:38:24.622115   438   438 W         : debuggerd: handling request: pid=879 uid=1041 gid=1005 tid=879\r\n--------- switch to radio\r\n06-28 15:38:24.625618  2242  2350 D GsmCdmaPhone: getDeviceId gsm:0:862851030129590\r\n--------- switch to main\r\n06-28 15:38:24.626535  3508 18118 I LogToolService: to compress, at 1561707504626, name=Thread_1561707504622\r\n06-28 15:38:24.627204  3508 18118 I LogToolGZipCompress: srcPathName[0]=/data/anr/Mlog/radio\r\n06-28 15:38:24.627276  3508 18118 E LogToolGZipCompress: /data/anr/Mlog/radio is not exist !\r\n06-28 15:38:24.627291  3508 18118 I LogToolGZipCompress: srcPathName[1]=/data/anr/traces.txt\r\n06-28 15:38:24.627346  3508 18118 E LogToolGZipCompress: compress file\uff1a/data/anr/traces.txt\r\n06-28 15:38:24.634332 18119 18119 E linker  : normalize_path - invalid input: \"fping\", the input path should be absolute\r\n06-28 15:38:24.634478 18119 18119 W linker  : Warning: unable to normalize \"fping\"\r\n06-28 15:38:24.655985  3508 18118 I LogToolGZipCompress: srcPathName[2]=/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.656179  3508 18118 E LogToolGZipCompress: compress file\uff1a/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.660929  3508 18118 I LogToolService: compressed,  at 1561707504660\r\n06-28 15:38:24.684983  3508 18115 W System.err: java.net.NoRouteToHostException: No route to host\r\n06-28 15:38:24.685222  3508 18115 W System.err: \tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n06-28 15:38:24.685254  3508 18115 W System.err: \tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:334)\r\n06-28 15:38:24.685275  3508 18115 W System.err: \tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:196)\r\n06-28 15:38:24.685298  3508 18115 W System.err: \tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)\r\n06-28 15:38:24.685317  3508 18115 W System.err: \tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n06-28 15:38:24.685335  3508 18115 W System.err: \tat java.net.Socket.connect(Socket.java:605)\r\n06-28 15:38:24.685357  3508 18115 W System.err: \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:113)\r\n06-28 15:38:24.685375  3508 18115 W System.err: \tat com.android.okhttp.Connection.connectSocket(Connection.java:196)\r\n06-28 15:38:24.685392  3508 18115 W System.err: \tat com.android.okhttp.Connection.connect(Connection.java:172)\r\n06-28 15:38:24.685413  3508 18115 W System.err: \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:367)\r\n06-28 15:38:24.685431  3508 18115 W System.err: \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:130)\r\n06-28 15:38:24.685455  3508 18115 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\n06-28 15:38:24.685472  3508 18115 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:247)\r\n06-28 15:38:24.685492  3508 18115 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n06-28 15:38:24.685511  3508 18115 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n06-28 15:38:24.685530  3508 18115 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n06-28 15:38:24.685549  3508 18115 W System.err: \tat com.android.logtool.HttpUploader.uploadFile(HttpUploader.java:122)\r\n06-28 15:38:24.685573  3508 18115 W System.err: \tat com.android.logtool.LogToolService$UploadThread.run(LogToolService.java:492)\r\n06-28 15:38:24.685895  3508 18118 E uploadFile: /data/user/0/com.android.logtool/cache/20190628_033824_8628510301295908c520200-58f4-4a7d-b1f1-b2d1989b5dda.zip\r\n06-28 15:38:24.689233   438   438 W         : debuggerd: resuming target 879\r\n06-28 15:38:24.689797  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n06-28 15:38:24.690530   439   439 W         : debuggerd: handling request: pid=881 uid=1047 gid=1005 tid=881\r\n06-28 15:38:24.692124   438   438 W         : debuggerd: handling request: pid=881 uid=1047 gid=1005 tid=881\r\n--------- switch to radio\r\n06-28 15:38:24.693848  2242  2536 D GsmCdmaPhone: getDeviceId gsm:0:862851030129590\r\n--------- switch to main\r\n06-28 15:38:24.695348  3508 18120 I LogToolService: to compress, at 1561707504695, name=Thread_1561707504691\r\n06-28 15:38:24.696251  3508 18120 I LogToolGZipCompress: srcPathName[0]=/data/anr/Mlog/radio\r\n06-28 15:38:24.696560  3508 18120 E LogToolGZipCompress: /data/anr/Mlog/radio is not exist !\r\n06-28 15:38:24.696602  3508 18120 I LogToolGZipCompress: srcPathName[1]=/data/anr/traces.txt\r\n06-28 15:38:24.697005  3508 18120 E LogToolGZipCompress: compress file\uff1a/data/anr/traces.txt\r\n06-28 15:38:24.728158  3508 18120 I LogToolGZipCompress: srcPathName[2]=/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.728335  3508 18120 E LogToolGZipCompress: compress file\uff1a/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.732526  3508 18120 I LogToolService: compressed,  at 1561707504732\r\n06-28 15:38:24.761528   438   438 W         : debuggerd: resuming target 881\r\n06-28 15:38:24.763040   439   439 W         : debuggerd: handling request: pid=890 uid=1019 gid=1019 tid=890\r\n06-28 15:38:24.763677   438   438 W         : debuggerd: handling request: pid=890 uid=1019 gid=1019 tid=890\r\n06-28 15:38:24.769413  3508 18118 W System.err: java.net.NoRouteToHostException: No route to host\r\n06-28 15:38:24.769650  3508 18118 W System.err: \tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n06-28 15:38:24.769685  3508 18118 W System.err: \tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:334)\r\n06-28 15:38:24.769707  3508 18118 W System.err: \tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:196)\r\n06-28 15:38:24.769728  3508 18118 W System.err: \tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)\r\n06-28 15:38:24.769752  3508 18118 W System.err: \tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n06-28 15:38:24.769775  3508 18118 W System.err: \tat java.net.Socket.connect(Socket.java:605)\r\n06-28 15:38:24.769795  3508 18118 W System.err: \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:113)\r\n06-28 15:38:24.769813  3508 18118 W System.err: \tat com.android.okhttp.Connection.connectSocket(Connection.java:196)\r\n06-28 15:38:24.769833  3508 18118 W System.err: \tat com.android.okhttp.Connection.connect(Connection.java:172)\r\n06-28 15:38:24.769851  3508 18118 W System.err: \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:367)\r\n06-28 15:38:24.769869  3508 18118 W System.err: \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:130)\r\n06-28 15:38:24.769889  3508 18118 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\n06-28 15:38:24.769906  3508 18118 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:247)\r\n06-28 15:38:24.769928  3508 18118 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n06-28 15:38:24.769947  3508 18118 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n06-28 15:38:24.769969  3508 18118 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n06-28 15:38:24.769988  3508 18118 W System.err: \tat com.android.logtool.HttpUploader.uploadFile(HttpUploader.java:122)\r\n06-28 15:38:24.770019  3508 18118 W System.err: \tat com.android.logtool.LogToolService$UploadThread.run(LogToolService.java:492)\r\n06-28 15:38:24.771140  3508 18120 E uploadFile: /data/user/0/com.android.logtool/cache/20190628_033824_862851030129590ed0eb9c0-f32b-4852-af34-0399f96a7e9d.zip\r\n06-28 15:38:24.775633  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n06-28 15:38:24.777675   438   438 W         : debuggerd: resuming target 890\r\n06-28 15:38:24.779954   439   439 W         : debuggerd: handling request: pid=893 uid=1046 gid=1006 tid=893\r\n06-28 15:38:24.780529   438   438 W         : debuggerd: handling request: pid=893 uid=1046 gid=1006 tid=893\r\n06-28 15:38:24.785176  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n--------- switch to radio\r\n06-28 15:38:24.791226  2242  2560 D GsmCdmaPhone: getDeviceId gsm:0:862851030129590\r\n--------- switch to main\r\n06-28 15:38:24.794372  3508 18124 I LogToolService: to compress, at 1561707504794, name=Thread_1561707504782\r\n06-28 15:38:24.795200  3508 18124 I LogToolGZipCompress: srcPathName[0]=/data/anr/Mlog/radio\r\n06-28 15:38:24.795463  3508 18124 E LogToolGZipCompress: /data/anr/Mlog/radio is not exist !\r\n06-28 15:38:24.795487  3508 18124 I LogToolGZipCompress: srcPathName[1]=/data/anr/traces.txt\r\n06-28 15:38:24.795537  3508 18124 E LogToolGZipCompress: compress file\uff1a/data/anr/traces.txt\r\n--------- switch to radio\r\n06-28 15:38:24.799143  2242  3136 D GsmCdmaPhone: getDeviceId gsm:0:862851030129590\r\n--------- switch to main\r\n06-28 15:38:24.800695  3508 18125 I LogToolService: to compress, at 1561707504800, name=Thread_1561707504792\r\n06-28 15:38:24.815218   438   438 W         : debuggerd: resuming target 893\r\n06-28 15:38:24.815836  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n06-28 15:38:24.816714   439   439 W         : debuggerd: handling request: pid=895 uid=1013 gid=1031 tid=895\r\n06-28 15:38:24.817384   438   438 W         : debuggerd: handling request: pid=895 uid=1013 gid=1031 tid=895\r\n06-28 15:38:24.819953  3508  3529 E LogToolService: failure when click in running state\r\n06-28 15:38:24.825522  3508 18124 I LogToolGZipCompress: srcPathName[2]=/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.825749  3508 18124 E LogToolGZipCompress: compress file\uff1a/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.830374  3508 18124 I LogToolService: compressed,  at 1561707504830\r\n06-28 15:38:24.831613  3508 18125 I LogToolGZipCompress: srcPathName[0]=/data/anr/Mlog/radio\r\n06-28 15:38:24.831787  3508 18125 E LogToolGZipCompress: /data/anr/Mlog/radio is not exist !\r\n06-28 15:38:24.831840  3508 18125 I LogToolGZipCompress: srcPathName[1]=/data/anr/traces.txt\r\n06-28 15:38:24.831980  3508 18125 E LogToolGZipCompress: compress file\uff1a/data/anr/traces.txt\r\n06-28 15:38:24.834357   438   438 W         : debuggerd: resuming target 895\r\n06-28 15:38:24.835312  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n06-28 15:38:24.835574   439   439 W         : debuggerd: handling request: pid=897 uid=1040 gid=1026 tid=897\r\n06-28 15:38:24.836940   438   438 W         : debuggerd: handling request: pid=897 uid=1040 gid=1026 tid=897\r\n--------- switch to radio\r\n06-28 15:38:24.841765  2242  3150 D GsmCdmaPhone: getDeviceId gsm:0:862851030129590\r\n--------- switch to main\r\n06-28 15:38:24.843054  3508 18128 I LogToolService: to compress, at 1561707504842, name=Thread_1561707504838\r\n06-28 15:38:24.856039  3508 18120 W System.err: java.net.NoRouteToHostException: No route to host\r\n06-28 15:38:24.856475  3508 18120 W System.err: \tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n06-28 15:38:24.856685  3508 18120 W System.err: \tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:334)\r\n06-28 15:38:24.856755  3508 18120 W System.err: \tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:196)\r\n06-28 15:38:24.856820  3508 18120 W System.err: \tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)\r\n06-28 15:38:24.856877  3508 18120 W System.err: \tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n06-28 15:38:24.856956  3508 18120 W System.err: \tat java.net.Socket.connect(Socket.java:605)\r\n06-28 15:38:24.857022  3508 18120 W System.err: \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:113)\r\n06-28 15:38:24.857022   438   438 W         : debuggerd: resuming target 897\r\n06-28 15:38:24.857086  3508 18120 W System.err: \tat com.android.okhttp.Connection.connectSocket(Connection.java:196)\r\n06-28 15:38:24.857141  3508 18120 W System.err: \tat com.android.okhttp.Connection.connect(Connection.java:172)\r\n06-28 15:38:24.857198  3508 18120 W System.err: \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:367)\r\n06-28 15:38:24.857274  3508 18120 W System.err: \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:130)\r\n06-28 15:38:24.857341  3508 18120 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\n06-28 15:38:24.857399  3508 18120 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:247)\r\n06-28 15:38:24.857476  3508 18120 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n06-28 15:38:24.857519  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n06-28 15:38:24.857547  3508 18120 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n06-28 15:38:24.857605  3508 18120 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n06-28 15:38:24.857661  3508 18120 W System.err: \tat com.android.logtool.HttpUploader.uploadFile(HttpUploader.java:122)\r\n06-28 15:38:24.857715  3508 18120 W System.err: \tat com.android.logtool.LogToolService$UploadThread.run(LogToolService.java:492)\r\n06-28 15:38:24.858328   439   439 W         : debuggerd: handling request: pid=898 uid=1013 gid=1005 tid=898\r\n06-28 15:38:24.858913   438   438 W         : debuggerd: handling request: pid=898 uid=1013 gid=1005 tid=898\r\n06-28 15:38:24.859649  3508 18124 E uploadFile: /data/user/0/com.android.logtool/cache/20190628_033824_862851030129590e34a2122-0f4e-4451-b5e2-eee4915ff33f.zip\r\n06-28 15:38:24.860360  3508  3529 E LogToolService: failure when click in running state\r\n06-28 15:38:24.862930  3508 18125 I LogToolGZipCompress: srcPathName[2]=/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.863066  3508 18125 E LogToolGZipCompress: compress file\uff1a/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.868024  3508 18125 I LogToolService: compressed,  at 1561707504867\r\n06-28 15:38:24.871727  3508 18128 I LogToolGZipCompress: srcPathName[0]=/data/anr/Mlog/radio\r\n06-28 15:38:24.871781  3508 18128 E LogToolGZipCompress: /data/anr/Mlog/radio is not exist !\r\n06-28 15:38:24.871795  3508 18128 I LogToolGZipCompress: srcPathName[1]=/data/anr/traces.txt\r\n06-28 15:38:24.871845  3508 18128 E LogToolGZipCompress: compress file\uff1a/data/anr/traces.txt\r\n06-28 15:38:24.902911  3508 18128 I LogToolGZipCompress: srcPathName[2]=/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.903074  3508 18128 E LogToolGZipCompress: compress file\uff1a/data/user/0/com.android.logtool/cache/deviceinfo.txt\r\n06-28 15:38:24.907513  3508 18128 I LogToolService: compressed,  at 1561707504907\r\n06-28 15:38:24.909151   438   438 W         : debuggerd: resuming target 898\r\n06-28 15:38:24.909726  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n06-28 15:38:24.910123   439   439 W         : debuggerd: handling request: pid=2015 uid=1023 gid=1023 tid=2015\r\n06-28 15:38:24.912543  3508  3529 E LogToolService: failure when click in running state\r\n06-28 15:38:24.920097   439   439 W         : debuggerd: resuming target 2015\r\n06-28 15:38:24.920447  3508  3529 I LogToolService: event=CLOSE_WRITE, mPath=/data/anr, path=traces.txt\r\n06-28 15:38:24.922438  3508  3529 E LogToolService: failure when click in running state\r\n06-28 15:38:24.955636 14311 14800 I FPing   : Starting fping: ICMP 331\r\n06-28 15:38:24.956033 14311 14800 I FPing   : argblist: [/data/user/0/de.blinkt.openvpn/cache/fping_arm64-v8a, -b, 56, -c, 50, -t, 1000, -p, 1000, -s, -q, 8.8.8.8, www.xfyun.cn, 10.6.2.8, 10.246.253.129]\r\n06-28 15:38:24.957281  3508 18124 W System.err: java.net.NoRouteToHostException: No route to host\r\n06-28 15:38:24.957462  3508 18124 W System.err: \tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n06-28 15:38:24.957495  3508 18124 W System.err: \tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:334)\r\n06-28 15:38:24.957517  3508 18124 W System.err: \tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:196)\r\n06-28 15:38:24.957538  3508 18124 W System.err: \tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)\r\n06-28 15:38:24.957556  3508 18124 W System.err: \tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n06-28 15:38:24.957575  3508 18124 W System.err: \tat java.net.Socket.connect(Socket.java:605)\r\n06-28 15:38:24.957594  3508 18124 W System.err: \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:113)\r\n06-28 15:38:24.957611  3508 18124 W System.err: \tat com.android.okhttp.Connection.connectSocket(Connection.java:196)\r\n06-28 15:38:24.957629  3508 18124 W System.err: \tat com.android.okhttp.Connection.connect(Connection.java:172)\r\n06-28 15:38:24.957648  3508 18124 W System.err: \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:367)\r\n06-28 15:38:24.957670  3508 18124 W System.err: \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:130)\r\n06-28 15:38:24.957688  3508 18124 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\n06-28 15:38:24.957705  3508 18124 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:247)\r\n06-28 15:38:24.957726  3508 18124 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n06-28 15:38:24.957745  3508 18124 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n06-28 15:38:24.957763  3508 18124 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n06-28 15:38:24.957785  3508 18124 W System.err: \tat com.android.logtool.HttpUploader.uploadFile(HttpUploader.java:122)\r\n06-28 15:38:24.957804  3508 18124 W System.err: \tat com.android.logtool.LogToolService$UploadThread.run(LogToolService.java:492)\r\n06-28 15:38:24.957998  3508 18125 E uploadFile: /data/user/0/com.android.logtool/cache/20190628_033824_862851030129590be9ce01f-0fce-484a-98f0-f36c154c43d0.zip\r\n06-28 15:38:24.977689 14591 15086 I org.webrtc.Logging: MediaCodecVideoEncoder: Sync frame request\r\n06-28 15:38:24.978864   893  2364 E OMX-VENC: Calling IOCTL set control for id=99200c, val=1\r\n06-28 15:38:24.979504   893  2364 E OMX-VENC: Success IOCTL set control for id=99200c, value=0\r\n06-28 15:38:24.982294 18133 18133 E linker  : normalize_path - invalid input: \"fping\", the input path should be absolute\r\n06-28 15:38:24.982352 18133 18133 W linker  : Warning: unable to normalize \"fping\"\r\n06-28 15:38:25.000557 14591 15086 I org.webrtc.Logging: MediaCodecVideoEncoder: Sync frame generated\r\n06-28 15:38:25.003772 14726 14726 D OVPN:   : >BYTECOUNT:1179430,64129434\r\n06-28 15:38:25.055544  3508 18125 W System.err: java.net.NoRouteToHostException: No route to host\r\n06-28 15:38:25.055817  3508 18125 W System.err: \tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n06-28 15:38:25.055893  3508 18125 W System.err: \tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:334)\r\n06-28 15:38:25.055929  3508 18125 W System.err: \tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:196)\r\n06-28 15:38:25.055958  3508 18125 W System.err: \tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)\r\n06-28 15:38:25.055980  3508 18125 W System.err: \tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n06-28 15:38:25.056005  3508 18125 W System.err: \tat java.net.Socket.connect(Socket.java:605)\r\n06-28 15:38:25.056029  3508 18125 W System.err: \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:113)\r\n06-28 15:38:25.056055  3508 18125 W System.err: \tat com.android.okhttp.Connection.connectSocket(Connection.java:196)\r\n06-28 15:38:25.056082  3508 18125 W System.err: \tat com.android.okhttp.Connection.connect(Connection.java:172)\r\n06-28 15:38:25.056105  3508 18125 W System.err: \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:367)\r\n06-28 15:38:25.056137  3508 18125 W System.err: \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:130)\r\n06-28 15:38:25.056161  3508 18125 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\n06-28 15:38:25.056187  3508 18125 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:247)\r\n06-28 15:38:25.056216  3508 18125 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n06-28 15:38:25.056242  3508 18125 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n06-28 15:38:25.056291  3508 18125 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n06-28 15:38:25.056328  3508 18125 W System.err: \tat com.android.logtool.HttpUploader.uploadFile(HttpUploader.java:122)\r\n06-28 15:38:25.056361  3508 18125 W System.err: \tat com.android.logtool.LogToolService$UploadThread.run(LogToolService.java:492)\r\n06-28 15:38:25.056659  3508 18128 E uploadFile: /data/user/0/com.android.logtool/cache/20190628_033824_862851030129590496ca37c-0de7-4113-9469-4726dfdb92eb.zip\r\n06-28 15:38:25.139502  3508 18128 W System.err: java.net.NoRouteToHostException: No route to host\r\n06-28 15:38:25.139780  3508 18128 W System.err: \tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n06-28 15:38:25.139851  3508 18128 W System.err: \tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:334)\r\n06-28 15:38:25.139873  3508 18128 W System.err: \tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:196)\r\n06-28 15:38:25.139892  3508 18128 W System.err: \tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)\r\n06-28 15:38:25.139910  3508 18128 W System.err: \tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n06-28 15:38:25.139926  3508 18128 W System.err: \tat java.net.Socket.connect(Socket.java:605)\r\n06-28 15:38:25.139951  3508 18128 W System.err: \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:113)\r\n06-28 15:38:25.139975  3508 18128 W System.err: \tat com.android.okhttp.Connection.connectSocket(Connection.java:196)\r\n06-28 15:38:25.139993  3508 18128 W System.err: \tat com.android.okhttp.Connection.connect(Connection.java:172)\r\n06-28 15:38:25.140016  3508 18128 W System.err: \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:367)\r\n06-28 15:38:25.140035  3508 18128 W System.err: \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:130)\r\n06-28 15:38:25.140067  3508 18128 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\r\n06-28 15:38:25.140084  3508 18128 W System.err: \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:247)\r\n06-28 15:38:25.140112  3508 18128 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:457)\r\n06-28 15:38:25.140135  3508 18128 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:126)\r\n06-28 15:38:25.140156  3508 18128 W System.err: \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:257)\r\n06-28 15:38:25.140175  3508 18128 W System.err: \tat com.android.logtool.HttpUploader.uploadFile(HttpUploader.java:122)\r\n06-28 15:38:25.140196  3508 18128 W System.err: \tat com.android.logtool.LogToolService$UploadThread.run(LogToolService.java:492)\r\n06-28 15:38:25.323241 14591 14634 E PepperActionControl: b()mIsPlaying: false\r\n06-28 15:38:25.446580 14591 14753 D AiManager: start HARI call ... ...\r\n06-28 15:38:25.447047 14591 14753 D ContentValues: hariUtils com.cloudminds.hc.hariservice.f.c@aa27e3d\r\n06-28 15:38:25.447265 14591 14753 D ContentValues: hariUtils com.cloudminds.hc.hariservice.f.c@aa27e3d hariUtils  callEngine com.cloudminds.hc.hariservice.b.a@9d48632 cmdEngine com.cloudminds.hc.hariservice.c.d@d0c8f83\r\n06-28 15:38:25.447388 14591 14753 E TEST    : getHariServiceConnector: \r\n--------- switch to system\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager: ANR in com.cloudminds.pepper.hari\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager: PID: 14591\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager: Reason: Broadcast of Intent { act=android.intent.action.TIME_TICK flg=0x50000014 (has extras) }\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager: Load: 9.26 / 9.67 / 9.68\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager: CPU usage from 5121ms to 0ms ago (2019-06-28 15:38:17.951 to 2019-06-28 15:38:23.071):\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   81% 14591/com.cloudminds.pepper.hari: 47% user + 33% kernel / faults: 5993 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   28% 912/mm-qcamera-daemon: 18% user + 10% kernel / faults: 2324 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   9.1% 881/cameraserver: 3.3% user + 5.8% kernel / faults: 394 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   6.8% 14729/c_pie_openvpn.arm64-v8a: 1.1% user + 5.6% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   5.4% 14726/c_pie_openvpn.arm64-v8a: 1.3% user + 4% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   5% 893/media.codec: 1.5% user + 3.5% kernel / faults: 3 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   5% 1419/system_server: 2.7% user + 2.3% kernel / faults: 61 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   1.9% 3684/com.cloudminds.robotstatemonitor: 0.7% user + 1.2% kernel / faults: 290 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   3.9% 2073/com.android.systemui: 3.7% user + 0.1% kernel / faults: 26 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   3.7% 592/surfaceflinger: 1.5% user + 2.1% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   3.5% 331/cfinteractive: 0% user + 3.5% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   2.5% 3832/kworker/u8:10: 0% user + 2.5% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   2.3% 879/audioserver: 1.1% user + 1.1% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.9% 16816/kworker/u8:4: 0% user + 0.9% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   1.7% 6312/kworker/u8:7: 0% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   1.3% 1957/adbd: 0.1% user + 1.1% kernel / faults: 76 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   1.1% 7/rcu_preempt: 0% user + 1.1% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   1.1% 14311/de.blinkt.openvpn:openvpn: 1.1% user + 0% kernel / faults: 18 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.9% 430/logd: 0.1% user + 0.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.7% 398/msm-core:sampli: 0% user + 0.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.5% 27/dsps_smd_trans_: 0% user + 0.5% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.5% 734/thermal-engine: 0% user + 0.5% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.5% 2686/android.ext.services: 0.1% user + 0.3% kernel / faults: 43 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.5% 2714/irq/23-408000.q: 0% user + 0.5% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.3% 3/ksoftirqd/0: 0% user + 0.3% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.3% 12/ksoftirqd/1: 0% user + 0.3% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.1% 20/ksoftirqd/3: 0% user + 0.1% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.3% 41/smem_native_rpm: 0% user + 0.3% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.3% 862/logcatcm: 0% user + 0.3% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.3% 4844/kworker/u8:3: 0% user + 0.3% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.1% 16/ksoftirqd/2: 0% user + 0.1% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.1% 871/cnss_diag: 0.1% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0% 903/cnss-daemon: 0% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.1% 2249/VosMCThread: 0% user + 0.1% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.1% 12345/kworker/0:0: 0% user + 0.1% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.1% 12995/com.estrongs.android.pop: 0.1% user + 0% kernel / faults: 1 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0% 14297/kworker/u9:0: 0% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0.1% 14809/logcat: 0.1% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0% 15905/kworker/1:0: 0% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   0% 16209/kworker/1:2: 0% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager: 51% TOTAL: 22% user + 22% kernel + 3.4% irq + 2.5% softirq\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager: CPU usage from 2072ms to 2612ms later (2019-06-28 15:38:25.144 to 2019-06-28 15:38:25.684) with 99% awake:\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   85% 14591/com.cloudminds.pepper.hari: 48% user + 36% kernel / faults: 590 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     24% 15098/AudioRecordJava: 24% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     8.7% 14863/network_thread : 0% user + 8.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     6.9% 15086/MediaCodecVideo: 3.4% user + 3.4% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     5.2% 14878/Camera SurfaceT: 3.4% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     5.2% 14983/ModuleProcessTh: 0% user + 5.2% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     5.2% 14984/PacerThread: 1.7% user + 3.4% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     3.4% 14602/Binder:14591_1: 1.7% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     3.4% 14864/Thread-91: 3.4% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     3.4% 14874/VoiceProcessThr: 1.7% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 14646/qimessaging-thr: 1.7% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 14662/Thread-20: 1.7% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 14753/Thread-HARIDaem: 1.7% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 14875/AudioDeviceBuff: 0% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 15052/EncoderThread -: 0% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 15088/MediaCodec_loop: 0% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 15100/SCTP timer: 1.7% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:   30% 912/mm-qcamera-daemon: 17% user + 12% kernel / faults: 264 minor\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     5.3% 15007/CAM_AECAWB: 5.3% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     5.3% 15014/CAM_MctBus: 3.5% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     3.5% 14997/CAM_isp_trigger: 3.5% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     3.5% 15002/CAM_isp_parser: 1.7% user + 1.7% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     3.5% 15032/CAM_iface_poll: 0% user + 3.5% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 1380/CAM_imgTh: 1.7% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 15000/CAM_cpp: 1.7% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 15006/CAM_startstats: 1.7% user + 0% kernel\r\n06-28 15:38:25.766012  1419  1538 E ActivityManager:     1.7% 15010/CAM_ASD: \r\n```\r\n", "url": "https://github.com/square/okhttp/issues/5255", "user": "wenxueyangx", "labels": ["bug", "stackoverflow"], "created": "2019-07-02 01:57:06", "closed": "2019-07-03 05:55:50", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "SSLException when trying to send multipart/form-data to AWS S3", "body": "Hi folks\r\n\r\nI am stuck when trying to upload bigger files (up to 100Mb) from Android to AWS S3 bucket using okhttp. \r\n\r\nThe error I am getting is:\r\n\r\n> OkHttp: <-- HTTP FAILED: javax.net.ssl.SSLException: Write error: ssl=0x96644e00: I/O error during system call, Connection reset by peer\r\n\r\nDetailed information here in my thread on StackOverflow:\r\nhttps://stackoverflow.com/questions/56739407/uploading-multipart-form-data-to-s3-bucket-throws-sslexception\r\n\r\nI'd really appreciate your help :-)\r\n", "url": "https://github.com/square/okhttp/issues/5254", "user": "AZOM", "labels": ["bug"], "created": "2019-07-01 08:40:34", "closed": "2019-07-03 05:29:06", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "EventListener responseBodyEnd callEnd not execute when method is post", "body": "I use OkHttp version is 3.14.2\uff0cwhen I debug\uff0cI find it will enter else block in CallServerInterceptor\uff1a\r\n```\r\nif (requestBody.isDuplex()) {\r\n          // Prepare a duplex body so that the application can send a request body later.\r\n          exchange.flushRequest()\r\n          val bufferedRequestBody = exchange.createRequestBody(request, true).buffer()\r\n          requestBody.writeTo(bufferedRequestBody)\r\n        } else {\r\n          // Write the request body if the \"Expect: 100-continue\" expectation was met.\r\n          val bufferedRequestBody = exchange.createRequestBody(request, false).buffer()\r\n          requestBody.writeTo(bufferedRequestBody)\r\n          bufferedRequestBody.close()\r\n        }\r\n```\r\nand then it will enter `Exchange.close()`,then `bodyComplete(bytesReceived, false, true, e)`", "url": "https://github.com/square/okhttp/issues/5252", "user": "sakurajiang", "labels": ["bug"], "created": "2019-06-29 14:35:39", "closed": "2019-07-16 02:06:38", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "RealWebsocket boolean value no set to false after reconnecting", "body": "After checking why the onFailure is called once and never get called again after calling `RealWebSocket.connect(client: OkHttpClient)` when the session is disconnected, I found that this boolean value \r\n` /** True if this web socket failed and the listener has been notified. */\r\n  private boolean failed;`\r\n\r\nis set to `true` in the `RealWebSocket.failWebSocket(e: Exception, response: Response)` and never set to false in the `RealWebSocket.connect(client: OkHttpClient)`\r\n\r\nMy question is: should I create a RealWebSocket instance every time the session disconnected to reconnect to the server or this is a bug and should I create a pull request?\r\n", "url": "https://github.com/square/okhttp/issues/5249", "user": "Edydaoud", "labels": ["bug"], "created": "2019-06-28 09:09:53", "closed": "2019-07-04 21:38:30", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Update wording on library deps", "body": "> OkHttp has one library dependency on Okio, a small library for high-performance I/O.\r\n\r\napi deps.okio\r\napi deps.kotlinStdlib\r\n\r\nShould we have a statement on the policy for upgrading kotlin?\r\n", "url": "https://github.com/square/okhttp/issues/5247", "user": "yschimke", "labels": ["bug"], "created": "2019-06-27 15:44:54", "closed": "2019-07-07 05:05:12", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "HttpHeaders.hasBody removed", "body": "There is no replacement for the old function `HttpHeaders.hasBody`\r\n\r\nTherefore it's not binary compatible and crashes using chuck:\r\n\r\nhttps://github.com/jgilfelt/chuck/blob/152f9a79f94ea23e9f0542137765961918909a76/library/src/main/java/com/readystatesoftware/chuck/ChuckInterceptor.java#L196\r\n\r\nFeel free to close as it's in the internal package.", "url": "https://github.com/square/okhttp/issues/5246", "user": "PaulWoitaschek", "labels": ["bug"], "created": "2019-06-27 08:51:46", "closed": "2019-07-03 05:27:51", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "HTTP FAILED: javax.net.ssl.SSLHandshakeException: Handshake failed", "body": "I am using  implementation 'com.squareup.okhttp3:okhttp:3.11.0' \r\nand after I upgrade to 3.14.2 I got the following issue. all the api is not work with the following issue. How can I do with this to jump this issue. \r\nI am using android studio 3.4.1 and I am in Shanghai of China.\r\nHTTP FAILED: javax.net.ssl.SSLHandshakeException: Handshake failed.\r\n\r\nHope hear soon from u. \r\n\r\nfollowing is my script:\r\n    implementation 'com.google.code.gson:gson:2.8.2'\r\n        implementation('com.squareup.retrofit2:retrofit:2.6.0') {\r\n        // exclude Retrofit\u2019s OkHttp peer-dependency module and define your own module import\r\n        exclude module: 'okhttp'\r\n    }\r\n    implementation 'com.squareup.okhttp3:okhttp:3.14.2'", "url": "https://github.com/square/okhttp/issues/5232", "user": "lbx2015", "labels": ["bug", "stackoverflow"], "created": "2019-06-24 08:37:02", "closed": "2019-07-07 04:50:54", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Conscrypt use in Android forces HTTP/1.1", "body": "Trying to use Conscrypt + OkHttp in Android seems to force HTTP/1.1. I suspect this is rare, since most common options are\r\n\r\n 1. AndroidPlatform *just* works (by a big majority)\r\n 2. Use Google Play provider to upgrade Android without breaking AndroidPlatform (haven't seen this in the wild)\r\n\r\nConscrypt provider + AndroidPlatform seems to result in ALPN not working?  You can't easily opt into ConscryptPlatform for a couple of reasons\r\n\r\n 1. The ordering picks up AndroidPlatform first\r\n 2. It's a final field after initialization and a lot of frameworks e.g. reactnative would trigger the platform earlier.", "url": "https://github.com/square/okhttp/issues/5231", "user": "yschimke", "labels": ["android", "bug"], "created": "2019-06-23 11:18:44", "closed": "2019-08-14 10:22:18", "commits": {}, "ttf": 51.000277777777775, "commitsDetails": []}, {"title": "this can be null (Util.closeQuietly)", "body": "When called from java, this can be null\r\n\r\n```\r\nokhttp3.internal.http2.Http2ConnectionTest > socketExceptionWhileWritingHeaders FAILED\r\n    java.lang.IllegalArgumentException: Parameter specified as non-null is null: method okhttp3.internal.Util.closeQuietly, parameter $this$closeQuietly\r\n        at okhttp3.internal.Util.closeQuietly(Util.kt)\r\n        at okhttp3.internal.http2.MockHttp2Peer.close(MockHttp2Peer.java:186)\r\n        at okhttp3.internal.http2.Http2ConnectionTest.tearDown(Http2ConnectionTest.java:70)\r\n2295 tests completed, 1 failed, 188 skipped\r\n```", "url": "https://github.com/square/okhttp/issues/5223", "user": "yschimke", "labels": ["bug"], "created": "2019-06-22 09:02:18", "closed": "2019-06-29 07:00:33", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Failures on conscrypt CI build", "body": "https://circleci.com/build-insights/gh/square/okhttp/master\r\n\r\n```\r\nokhttp3.ConscryptTest > testGoogle FAILED\r\n    javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure\r\n        at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)\r\n        at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:117)\r\n        at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:308)\r\n        at java.base/sun.security.ssl.Alert$AlertConsumer.consume(Alert.java:285)\r\n        at java.base/sun.security.ssl.TransportContext.dispatch(TransportContext.java:181)\r\n        at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:164)\r\n        at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1152)\r\n        at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1063)\r\n        at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:402)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.kt:351)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.kt:310)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:178)\r\n        at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:236)\r\n        at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:109)\r\n        at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:77)\r\n        at okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.kt:162)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:35)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)\r\n        at okhttp3.RealCall.execute(RealCall.kt:66)\r\n        at okhttp3.ConscryptTest.testGoogle(ConscryptTest.kt:77)\r\n```", "url": "https://github.com/square/okhttp/issues/5222", "user": "yschimke", "labels": ["bug"], "created": "2019-06-22 08:39:38", "closed": "2019-07-06 07:53:43", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Response.Builder#build() not accepting zero code; misleading message", "body": "OkHttp 4.0.0-RC1\r\n\r\n`Response.Builder#build()` checks the response code:\r\n\r\n```\r\n      check(code > 0) { \"code < 0: $code\" }\r\n```\r\n\r\ngiven `code == 0` this would fail with `code < 0: 0` which is misleading\r\n\r\nEarlier versions of okhttp allowed 0 as response code here:\r\n\r\n```\r\nif (code < 0) throw new IllegalStateException(\"code < 0: \" + code);\r\n```\r\n\r\nI believe changing the check to `code >= 0` would preserve compatibility and fix message correctness.\r\n\r\nDiscovered this when trying out 4.0.0-RC1 on a codebase with unit tests that pass around fake responses without explicitly set response code.\r\n", "url": "https://github.com/square/okhttp/issues/5209", "user": "laalto", "labels": ["bug"], "created": "2019-06-20 15:45:33", "closed": "2019-06-21 13:21:13", "commits": {"1a6a972e0924dafe620e6e1b32b95c1399a2c35c": {"commitGHEventType": "referenced", "commitUser": "laalto"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1a6a972e0924dafe620e6e1b32b95c1399a2c35c", "commitGHEventType": "referenced", "commitUser": "laalto", "commitParents": ["10d2a63ea78c5c1dc840b69b203d7f83ca97f071"], "nameRev": "1a6a972e0924dafe620e6e1b32b95c1399a2c35c tags/parent-4.0.0-ALPHA01~94", "commitMessage": "Migrate Request/Response + their body types to Kotlin (#4831)\n\n* Rename Request.java -> Request.kt\r\n\r\n* Rename RequestBody.java -> RequestBody.kt\r\n\r\n* Rename Response.java -> Response.kt\r\n\r\n* Rename ResponseBody.java -> ResponseBody.kt\r\n\r\n* Convert Request to Kotlin\r\n\r\n* Convert RequestBody to Kotlin\r\n\r\n* Convert Response to Kotlin\r\n\r\n* Convert ResponseBody to Kotlin\r\n\r\n* Clean up package private usages in tests\r\n\r\n* Use isDuplex() in HttpLoggingInterceptor\r\n\r\nApparently making this a function is a breaking change to kotlin consumers, and the previous \"isDuplex\" method was swizzled to a property accessor before\r\n\r\n* Exclude Request/Response now-explicitly final methods from japi\r\n\r\nThe classes were final already, so this is a false positive\r\n\r\n* Fix isSuccesful\r\n\r\n* Make builders + funs open to match OkHttp3\r\n\r\n* Clean up lazy usages to be more idiomatic\r\n\r\n* Move boolean \"is\" properties back to vals to preserve API for both langs\r\n\r\nThis is also more idiomatic for kotlin anyway\r\n\r\n* Use more idiomatic require checks\r\n\r\n* Fix require null logic\r\n\r\n* Un-backtick nulls\r\n\r\n* Revert \"Clean up lazy usages to be more idiomatic\"\r\n\r\nThis reverts commit 4bb472ae5a5b94e816897191e10418ceac9d5bf1.\r\n\r\n* Add missing braces\r\n\r\n* +4 indent on doc\r\n\r\n* Remove todo doc\r\n\r\n* Use HttpUrl.get()\r\n\r\n* Fix weird spacing\r\n\r\n* Backticks\r\n\r\n* ###\r\n\r\n* ### Duplex APIs\r\n\r\n* Link grpc\r\n\r\n* Move back to regular control flow\r\n", "commitDateTime": "2019-04-01 04:27:59", "authoredDateTime": "2019-04-01 01:27:59", "commitGitStats": [{"filePath": "okhttp/build.gradle", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "okhttp/src/main/java/okhttp3/Request.java", "insertions": 0, "deletions": 296, "lines": 296}, {"filePath": "okhttp/src/main/java/okhttp3/Request.kt", "insertions": 239, "deletions": 0, "lines": 239}, {"filePath": "okhttp/src/main/java/okhttp3/RequestBody.java", "insertions": 0, "deletions": 176, "lines": 176}, {"filePath": "okhttp/src/main/java/okhttp3/RequestBody.kt", "insertions": 162, "deletions": 0, "lines": 162}, {"filePath": "okhttp/src/main/java/okhttp3/Response.java", "insertions": 0, "deletions": 458, "lines": 458}, {"filePath": "okhttp/src/main/java/okhttp3/Response.kt", "insertions": 361, "deletions": 0, "lines": 361}, {"filePath": "okhttp/src/main/java/okhttp3/ResponseBody.java", "insertions": 0, "deletions": 275, "lines": 275}, {"filePath": "okhttp/src/main/java/okhttp3/ResponseBody.kt", "insertions": 255, "deletions": 0, "lines": 255}, {"filePath": "okhttp/src/test/java/okhttp3/EventListenerTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/test/java/okhttp3/RecordingEventListener.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/TestTls13Request.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["1a6a972e0924dafe620e6e1b32b95c1399a2c35c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1050, "deletions": 1205, "lines": 2255, "gitFilesChange": 9}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/Request.kt", "okhttp", "okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/RequestBody.kt", "okhttp/src/main/java/okhttp3/ResponseBody.kt", "okhttp/src/main/java/okhttp3/Response.kt"]}, {"title": "MockWebServer takeRequest with timeout should be nullable", "body": "OkHttp 4.0.0-RC1\r\n\r\n`MockWebServer` `takeRequest()` with timeout function signature is NotNull:\r\n\r\n```\r\nfun takeRequest(timeout: Long, unit: TimeUnit): RecordedRequest = requestQueue.poll(timeout, unit)\r\n```\r\n\r\nHowever the underlying `LinkedBlockingQueue` `poll()` returns nulls on timeout, causing an `IllegalStateException` when a NotNull kotlin function tries to return null.\r\n\r\nI believe the return type should be Nullable instead, e.g. \r\n\r\n```\r\nfun takeRequest(timeout: Long, unit: TimeUnit): RecordedRequest? = requestQueue.poll(timeout, unit)\r\n```\r\n\r\nI discovered this when trying out 4.0.0-RC1 migration on a codebase that has some unit test cases testing caching functionality using `takeRequest()` with (short) timeout to make sure the feature being tested does not hit the network.", "url": "https://github.com/square/okhttp/issues/5208", "user": "laalto", "labels": ["bug"], "created": "2019-06-20 15:39:06", "closed": "2019-06-21 13:20:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "IndexOutOfBoundsException", "body": "\r\n1\u00a0java.util.Collections$EmptyList.get(Collections.java:4514)\r\n--\r\n2\u00a0okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:326)\r\n3\u00a0okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:283)\r\n4\u00a0okhttp3.internal.connection.RealConnection.connect(RealConnection.java:168)\r\n5\u00a0okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n6\u00a0okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n7\u00a0okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n8\u00a0okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n9\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n10\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n11\u00a0okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n12\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n13\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n14\u00a0okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n15\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n16\u00a0okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n17\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n18\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n19\u00a0okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:254)\r\n20\u00a0okhttp3.RealCall$AsyncCall.execute(RealCall.java:200)\r\n21\u00a0okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n22\u00a0java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n23\u00a0java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n24\u00a0java.lang.Thread.run(Thread.java:784)\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5204", "user": "wangshuibo", "labels": ["bug"], "created": "2019-06-20 02:43:05", "closed": "2019-07-04 05:45:20", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "IndexOutOfBoundsException", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n", "url": "https://github.com/square/okhttp/issues/5203", "user": "wangshuibo", "labels": ["bug"], "created": "2019-06-20 02:41:53", "closed": "2019-06-20 02:42:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MockResponse socketPolicy awkwardness in 4.0", "body": "One is deprecated, the other doesn't compile...\r\n\r\n<img width=\"609\" alt=\"image\" src=\"https://user-images.githubusercontent.com/231923/59740359-c8cdf500-925f-11e9-91bc-103f753bed65.png\">\r\n", "url": "https://github.com/square/okhttp/issues/5199", "user": "yschimke", "labels": ["bug"], "created": "2019-06-19 05:59:49", "closed": "2019-12-31 20:28:25", "commits": {"9d2fe750891b1f8a90081503ba526ab95c8fd161": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a2c06073b18248956da3fc9b06984d39f1c101ef": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 195.00027777777777, "commitsDetails": [{"commitHash": "9d2fe750891b1f8a90081503ba526ab95c8fd161", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a2c06073b18248956da3fc9b06984d39f1c101ef", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["bd675a830f08c211d59f77ad8b7a29b8bee6d0f2"], "nameRev": "a2c06073b18248956da3fc9b06984d39f1c101ef tags/parent-4.3.0~1^2", "commitMessage": "Un-deprecate some setters for chaining from Java\n\nCloses: https://github.com/square/okhttp/issues/5199\n", "commitDateTime": "2019-12-31 15:23:14", "authoredDateTime": "2019-12-31 15:22:14", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.kt", "insertions": 35, "deletions": 20, "lines": 55}, {"filePath": "okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.kt", "insertions": 7, "deletions": 4, "lines": 11}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a2c06073b18248956da3fc9b06984d39f1c101ef"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 42.0, "deletions": 24.0, "lines": 66.0, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.kt", "okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.kt"]}, {"title": "invalid address or address of corrupt block", "body": "In last weeks our CI running instrumented tests on Android 4.x has become unstable. I'm getting native crashes similar to https://github.com/square/okhttp/issues/1763 and https://github.com/square/okhttp/issues/1632 but with using OkHttp `v3.12.0`  (also validated `v3.12.3`):\r\n\r\nSymbolicated trace:\r\n\r\n```\r\n********** Crash dump: **********\r\nBuild fingerprint: 'motorola/victara_reteu/victara:4.4.4/KXE21.187-42/41:user/release-keys'\r\nAbort message: 'invalid address or address of corrupt block 0x73e738e0 passed to dlfree'\r\n#00 0x000118b4 /system/lib/libc.so (dlfree+1191)\r\n#01 0x0000dd4b /system/lib/libc.so (free+10)\r\n#02 0x000c5585 /system/lib/libcrypto.so (CRYPTO_free+24)\r\n#03 0x0002f6bf /system/lib/libssl.so (ssl_parse_serverhello_tlsext+738)\r\n#04 0x000182c1 /system/lib/libssl.so (ssl3_get_server_hello+1008)\r\n#05 0x000176bf /system/lib/libssl.so (ssl3_connect+566)\r\n#06 0x00027f4b /system/lib/libssl.so (SSL_do_handshake+50)\r\n#07 0x0000af49 /system/lib/libjavacrypto.so\r\n#08 0x000203cc /system/lib/libdvm.so (dvmPlatformInvoke+112)\r\n#09 0x00050ef3 /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+398)\r\n#10 0x00029860 /system/lib/libdvm.so\r\n#11 0x00030b68 /system/lib/libdvm.so (dvmMterpStd(Thread*)+76)\r\n#12 0x0002e200 /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+184)\r\n#13 0x00063519 /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, std::__va_list)+336)\r\n#14 0x0006353d /system/lib/libdvm.so (dvmCallMethod(Thread*, Method const*, Object*, JValue*, ...)+20)\r\n#15 0x0005820b /system/lib/libdvm.so\r\n#16 0x0000d2b0 /system/lib/libc.so (__thread_entry+72)\r\n#17 0x0000d448 /system/lib/libc.so (pthread_create+240)\r\nCrash dump is completed\r\n```\r\n\r\nAny guidance how to resolve/workaround this issue?", "url": "https://github.com/square/okhttp/issues/5198", "user": "tobrun", "labels": ["bug"], "created": "2019-06-18 14:54:21", "closed": "2019-07-16 02:30:09", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "Conditional GET is issued even though cache is fresh (max-age ignored?)", "body": "Given the following response to a GET request\r\n```\r\ncache-control: public, max-age=1800\r\ncontent-encoding: gzip\r\ncontent-type: application/json\r\ndate: Tue, 18 Jun 2019 08:33:16 GMT\r\n```\r\n\r\nI would expect a subsequent GET for the same resource to use the cached response.\r\nInstead a conditional GET is issued\r\n```\r\nRequest Method: GET\r\nAccept-Encoding: gzip\r\nConnection: Keep-Alive\r\nIf-Modified-Since: Tue, 18 Jun 2019 08:33:16 GMT\r\n```\r\n\r\nThe clock on the phone was around 08:40:00 GMT at the time of testing, so the `max-age` (30 min) should have prevented the network call.\r\n\r\nAlso note that the response doesn't include a `Last-Modified` header, but still a `If-Modified-Since` is added in the request based on the previous `Date` header.\r\n\r\nFrom: https://tools.ietf.org/html/rfc7232#section-3.3\r\n>    However, caches occasionally generate the field\r\n>    value based on other data, such as the Date header field of the\r\n>    cached message or the local clock time that the message was received,\r\n>    particularly when the cached message does not contain a Last-Modified\r\n>    field.\r\n> \r\n\r\nBtw, is it possible to turn off this behavior so a conditional GET is only performed if a `Last-Modified` header or `Etag` header is present in the response?\r\n\r\nI might be missing something that \"Wiki page all about caching #4637\" would answer.\r\n\r\nEnvironment: Android\r\nVersion: 'com.squareup.okhttp3:okhttp:3.11.0'", "url": "https://github.com/square/okhttp/issues/5197", "user": "TommyN", "labels": ["bug"], "created": "2019-06-18 09:07:13", "closed": "2019-06-19 11:30:32", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Fatal Exception: java.lang.ArrayIndexOutOfBoundsException", "body": "Retrofit version: 2.3.0\r\nokHttp version: 3.14.1\r\nBrand: samsung\r\nModel: Galaxy S7 edge\r\nRAM free: 1.17 GB\r\nDisk free: 898.03 MB\r\nOperating System Version: 8.0.0\r\nRooted: No\r\n\r\nStacktrace: Fatal Exception: java.lang.ArrayIndexOutOfBoundsException\r\nsize=13 offset=0 byteCount=4827\r\n\r\nokio.Util.checkOffsetAndCount (Util.java:30)\r\nokio.AsyncTimeout$1.write (AsyncTimeout.java:162)\r\nokio.RealBufferedSink.emitCompleteSegments (RealBufferedSink.java:179)\r\nokio.RealBufferedSink.writeByte (RealBufferedSink.java:125)\r\nokhttp3.internal.http2.Http2Writer.writeMedium (Http2Writer.java:265)\r\nokhttp3.internal.http2.Http2Writer.frameHeader (Http2Writer.java:253)\r\nokhttp3.internal.http2.Http2Writer.goAway (Http2Writer.java:220)\r\nokhttp3.internal.http2.Http2Connection.shutdown (Http2Connection.java:428)\r\nokhttp3.internal.http2.Http2Connection.close (Http2Connection.java:443)\r\nokhttp3.internal.http2.Http2Connection$ReaderRunnable.execute (Http2Connection.java:609)\r\nokhttp3.internal.NamedRunnable.run (NamedRunnable.java:32)\r\njava.lang.Thread.run (Thread.java:764)\r\n\r\nAs it only happened once, we weren't able to reproduce yet or provide a test case atm. Will update when happens again though. ", "url": "https://github.com/square/okhttp/issues/5196", "user": "MajaTrzebiatowska", "labels": ["bug"], "created": "2019-06-18 08:54:30", "closed": "2019-07-16 02:30:30", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "SocketTimeoutException on IPv6 from okhttp 3.14.1 ", "body": "Okhttp 3.14.0 work ok, but from 3.14.1, IPv6 SocketTimeoutException\r\n```\r\n  java.net.SocketTimeoutException: failed to connect to xxx/2606:4700::6810:7c11 (port 443) from /2409:8900:2908:45a4:20:4951:b35b:d9e2 (port 34876) after 10000ms\r\n                         E      at libcore.io.IoBridge.connectErrno(IoBridge.java:185)\r\n                         E      at libcore.io.IoBridge.connect(IoBridge.java:129)\r\n                         E      at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:137)\r\n                         E      at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:390)\r\n                         E      at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:230)\r\n                         E      at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:212)\r\n                         E      at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:436)\r\n                         E      at java.net.Socket.connect(Socket.java:621)\r\n                         E      at okhttp3.internal.platform.AndroidPlatform.connectSocket(AndroidPlatform.java:71)\r\n                         E      at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:263)\r\n                         E      at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:183)\r\n                         E      at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224)\r\n                         E      at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108)\r\n                         E      at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88)\r\n                         E      at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n                         E      at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n                         E      at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n                         E      at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n                         E      at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n                         E      at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n                         E      at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n                         E      at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n                         E      at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n                         E      at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n                         E      at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n                         E      at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n                         E      at\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/5186", "user": "crossle", "labels": ["bug"], "created": "2019-06-14 05:57:08", "closed": "2019-06-15 02:53:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Error while dexing with okhttp 4.0.0 releases", "body": "Preparing a migration to okhttp 4.0.0 (using 4.0.0-RC1) we are seeing an issue when trying to  install the app.\r\n\r\nA gist of the stacktrace can be found [here](https://gist.github.com/bohsen/3b0b30168d723e15a6a46e209d1a8e42).\r\n\r\nBuild output looks like this:\r\n![Sk\u00e6rmbillede 2019-06-12 kl  14 46 04](https://user-images.githubusercontent.com/355452/59352542-37bbc300-8d21-11e9-81ae-eba2d004ccbb.png)\r\n\r\nHappens every time we try to run the app.\r\n\r\nReverting to version 3.14.2 fixes it.", "url": "https://github.com/square/okhttp/issues/5185", "user": "bohsen", "labels": ["bug"], "created": "2019-06-12 12:51:05", "closed": "2019-06-12 15:44:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Docker container missing SNAT on massive request", "body": "Hi all,\r\n\r\nI've introduced retrofit2 into a java application that made massive (bulk of 250k) http request to some (3) endpoint and run into a Docker container.\r\n\r\nDockerfile example:\r\n`FROM openjdk:8-jre-alpine\r\n\r\nCOPY \"./FlinkHTTPTest.jar\" \"/tmp/FlinkHTTPTest.jar\"\r\n\r\nENV jar_file=FlinkHTTPTest.jar\r\nENTRYPOINT exec java $JAVA_OPTS -jar /tmp/$jar_file\r\n`\r\nInitially apps work well but after few second I see on the host TCP packet exiting with container source IP.\r\nThe expected behavior is that host NAT source IP of each packet coming from Docker container with host IP so the other host that recive request could respond through it.\r\n\r\nInstead with this bug other host receive request and respond to docker ip that is not exposed to all VM so that packet generate an alert in the firewall.\r\n\r\nPing and telnet command works fine so I think host ARP table is correct.\r\n\r\nI've used Retrofit with okHttp implementation.\r\n\r\nAnyone with same problem?\r\nI've run mi code also with plain java (HttpURLConnection) implementation and this work fine.\r\n", "url": "https://github.com/square/okhttp/issues/5183", "user": "msartor92", "labels": ["bug", "needs info"], "created": "2019-06-11 14:28:38", "closed": "2019-06-15 02:56:23", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Non SDK API usages byOkHttp in Android Q Beta 4 ", "body": "Hi,\r\n\r\nI am seeing the following log when checking for non-SDK usages in Android Q Beta 4 emulator\r\n\r\nFor OkHttp 3.12.0 version\r\nAccessing hidden method Lcom/android/org/conscrypt/ConscryptFileDescriptorSocket;->setUseSessionTickets(Z)V (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Lcom/android/org/conscrypt/ConscryptFileDescriptorSocket;->setHostname(Ljava/lang/String;)V (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setAlpnProtocols([B)V (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Lcom/android/org/conscrypt/OpenSSLSocketImpl;->getAlpnSelectedProtocol()[B (greylist,core-platform-api, reflection, allowed)\r\n\r\nFor OkHttp 3.14.2 version\r\nAccessing hidden method Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setUseSessionTickets(Z)V (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setHostname(Ljava/lang/String;)V (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Lcom/android/org/conscrypt/OpenSSLSocketImpl;->getAlpnSelectedProtocol()[B (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setAlpnProtocols([B)V (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Ldalvik/system/CloseGuard;->get()Ldalvik/system/CloseGuard; (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Ldalvik/system/CloseGuard;->open(Ljava/lang/String;)V (greylist,core-platform-api, reflection, allowed)\r\nAccessing hidden method Ldalvik/system/CloseGuard;->warnIfOpen()V (greylist,core-platform-api, reflection, allowed)\r\n\r\nI see that in ticket [#3980](https://github.com/square/okhttp/issues/3980) some of these warnings are resolved. I am planning to use 3.12.0 version as my app supports KitKat and above. \r\n\r\nPlease let me know if all the non-SDK usages will be resolved in the future releases of OkHttp. If not, will it be fine to just continue using the non-SDK APIs without any problem?\r\n\r\nThanks", "url": "https://github.com/square/okhttp/issues/5181", "user": "adityaiit", "labels": ["bug"], "created": "2019-06-10 19:20:02", "closed": "2019-06-11 00:51:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": " java.net.SocketException:Socket closed", "body": "\r\n\r\njava.lang.IllegalStateException:Fata Exceptio throw o Scheduler.Worke thread.\r\n rx.android.schedulers.LooperScheduler$ScheduledAction.run(LooperScheduler.java:114)\r\n ......\r\n Cause by:\r\n java.net.SocketException:Socke closed\r\n java.net.SocketInputStream.read(SocketInputStream.java:203)\r\n java.net.SocketInputStream.read(SocketInputStream.java:139)\r\n okio.Okio$2.read(Okio.java:140)\r\n okio.AsyncTimeout$2.read(AsyncTimeout.java:237)\r\n okio.RealBufferedSource.indexOf(RealBufferedSource.java:355)\r\n okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:227)\r\n okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:215)\r\n okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)\r\n okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n com.fr_cloud.common.thirdparty.RetrofitModule$2.intercept(RetrofitModule.java:103)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n okhttp3.RealCall.execute(RealCall.java:77)\r\n retrofit2.OkHttpCall.execute(OkHttpCall.java:174)\r\n retrofit2.adapter.rxjava.RxJavaCallAdapterFactory$RequestArbiter.request(RxJavaCallAdapterFactory.java:171)\r\n rx.internal.operators.OperatorSubscribeOn$1$1$1.request(OperatorSubscribeOn.java:80)\r\n rx.Subscriber.setProducer(Subscriber.java:211)\r\n rx.internal.operators.OperatorSubscribeOn$1$1.setProducer(OperatorSubscribeOn.java:76)\r\n rx.internal.operators.OperatorMap$MapSubscriber.setProducer(OperatorMap.java:99)\r\n rx.Subscriber.setProducer(Subscriber.java:205)\r\n retrofit2.adapter.rxjava.RxJavaCallAdapterFactory$CallOnSubscribe.call(RxJavaCallAdapterFactory.java:152)\r\n retrofit2.adapter.rxjava.RxJavaCallAdapterFactory$CallOnSubscribe.call(RxJavaCallAdapterFactory.java:138)\r\n rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)\r\n rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)\r\n rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n rx.Observable.unsafeSubscribe(Observable.java:8460)\r\n rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)\r\n rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)\r\n java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)\r\n java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\r\n java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n java.lang.Thread.run(Thread.java:764)", "url": "https://github.com/square/okhttp/issues/5179", "user": "supermavericks", "labels": ["bug"], "created": "2019-06-10 03:50:46", "closed": "2019-06-15 02:56:43", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "String.toRequestBody() vs. String.asRequestBody()", "body": "We\u2019ve implemented it as `String.toRequestBody()` but I think we might be mistaken here. `to` feels like a conversion; `as` feels like a cast. I\u2019d like to confirm what the precedents are and follow them.", "url": "https://github.com/square/okhttp/issues/5177", "user": "swankjesse", "labels": ["bug"], "created": "2019-06-09 02:30:04", "closed": "2019-06-15 05:43:08", "commits": {"9fc59a5ffb491dbce8713a0fbdf34ffcb020a05f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "c4f338ec172411975c9c0f05c7f48fc1b3dca715": {"commitGHEventType": "referenced", "commitUser": "yschimke"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "9fc59a5ffb491dbce8713a0fbdf34ffcb020a05f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c4f338ec172411975c9c0f05c7f48fc1b3dca715", "commitGHEventType": "referenced", "commitUser": "yschimke", "commitParents": ["ead00e22105d5e135aeb213d9123a693b59c70e8"], "nameRev": "c4f338ec172411975c9c0f05c7f48fc1b3dca715 tags/parent-4.0.0-RC2~12", "commitMessage": "Use asX() instead of toX() when a view is returned (#5187)\n\nWhen the returned value remembers what it was created with, we use as()\n\nCloses: https://github.com/square/okhttp/issues/5177", "commitDateTime": "2019-06-15 06:43:07", "authoredDateTime": "2019-06-15 01:43:08", "commitGitStats": [{"filePath": "UPGRADING_TO_OKHTTP_4.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/RequestBody.kt", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "okhttp/src/main/java/okhttp3/Response.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/ResponseBody.kt", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "okhttp/src/test/java/okhttp3/KotlinSourceModernTest.kt", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c4f338ec172411975c9c0f05c7f48fc1b3dca715"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14.0, "deletions": 14.0, "lines": 28.0, "gitFilesChange": 3}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/RequestBody.kt", "okhttp/src/main/java/okhttp3/ResponseBody.kt", "okhttp/src/main/java/okhttp3/Response.kt"]}, {"title": "NPE building HandshakeCertificates when Proguard is enabled", "body": "Hi there,\r\n\r\nI'm using the following code with version **3.13.1** to create a `HandshakeCertificates` that is going to be used to configure `MockWebserver` to enable https in acceptance tests where our api is mocked this way, running on **Android P** emulators.\r\n\r\n```\r\nHandshakeCertificates serverCertificates = new HandshakeCertificates.Builder()\r\n\t\t.heldCertificate(certificate)\r\n\t\t.build();\r\n\r\nmockWebServer.useHttps(serverCertificates.sslSocketFactory(), false);\r\n```\r\n\r\nas described in [this example gist](https://github.com/square/okhttp/blob/master/samples/guide/src/main/java/okhttp3/recipes/HttpsServer.java) you published.\r\n\r\nEverything works fine (configuring the certificate in client side, handshaking of the connection, etc), without **Proguard** but when we enable it the following error occurs while initialising test code:\r\n\r\n```\r\njava.lang.NullPointerException: Attempt to invoke interface method 'java.lang.String java.security.PublicKey.getAlgorithm()' on a null object reference\r\n        at java.security.KeyStore$PrivateKeyEntry.<init>(KeyStore.java:576)\r\n        at java.security.KeyStore$PrivateKeyEntry.<init>(KeyStore.java:526)\r\n        at java.security.KeyStoreSpi.engineGetEntry(KeyStoreSpi.java:485)\r\n        at java.security.KeyStore.getEntry(KeyStore.java:1560)\r\n        at com.android.org.conscrypt.KeyManagerImpl.<init>(KeyManagerImpl.java:71)\r\n        at com.android.org.conscrypt.KeyManagerFactoryImpl.engineGetKeyManagers(KeyManagerFactoryImpl.java:114)\r\n        at javax.net.ssl.KeyManagerFactory.getKeyManagers(KeyManagerFactory.java:305)\r\n        at okhttp3.tls.internal.TlsUtil.newKeyManager(SourceFile:101)\r\n        at okhttp3.tls.HandshakeCertificates$Builder.build(SourceFile:164)\r\n```\r\n\r\nso I don't know if there is something I should be excluding explicitly in our config in order to avoid this problem.\r\n\r\nThe certificate used to configure `HandshakeCertificates` is provided here:\r\n\r\n```\r\n@Provides\r\n@Singleton\r\nHeldCertificate provideHeldCertificate() {\r\n\treturn new HeldCertificate.Builder()\r\n\t\t\t.addSubjectAlternativeName(\"localhost\")\r\n\t\t\t.build();\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/5172", "user": "nimeacuerdo", "labels": ["bug", "proguard"], "created": "2019-06-06 09:01:38", "closed": "2020-03-29 18:07:56", "commits": {}, "ttf": 297.0002777777778, "commitsDetails": []}, {"title": "okhttp cellular and wifi problem", "body": "Hi,\r\n\r\nI've got problem OkHttpClient. \r\nCellular data on, WIFI connected. Application reqests HTTPS and everything works perfect. When WIFI lose connection (still on) app link through cellular and works ok. The problem is when phone connect back to this WIFI\r\n{java.net.UnknownHostException: Unable to resolve host: No address associated with hostname}\r\n\r\nThe only solution is to restart app, but I try to do this using JobScheduler and it have to work in backgroud.\r\n\r\n```\r\n    var vProtokoly : java.Util.List<Protocol> := new java.util.ArrayList<Protocol>;\r\n    var vUprawnienia : RemObjects.Elements.RTL.String;\r\n    var Wywolanie : Request;\r\n    var Odpowiedz : Response;\r\n\r\n    vProtokoly.add(Protocol.HTTP_1_1);\r\n    vUprawnienia := okhttp3.Credentials.basic('some', 'credentials');\r\n\r\n    Http := new OkHttpClient.Builder()\r\n\t\t.connectTimeout(15,java.util.concurrent.TimeUnit.SECONDS)\r\n\t\t.writeTimeout(20,java.util.concurrent.TimeUnit.SECONDS)\r\n\t\t.readTimeout(20,java.util.concurrent.TimeUnit.SECONDS)\r\n\t\t.retryOnConnectionFailure(false)\r\n\t\t.protocols(vProtokoly)\r\n\t\t.proxy(Proxy.NO_PROXY)\r\n\t\t//.socketFactory(android.net.Network.getSocketFactory())\r\n\t\t.build();\r\n    Http.ConnectionPool.evictAll;\r\n\r\n           Wywolanie :=  new okhttp3.Request.Builder().url(Parametry.Uri).header('Authorization',vUprawnienia).build();\r\n        Odpowiedz := Http.newCall(Wywolanie).execute;\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/5170", "user": "LHeczko", "labels": ["bug"], "created": "2019-06-05 13:28:26", "closed": "2019-06-06 10:38:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "4.0.0 upgrade testing - CipherSuite.forName", "body": "Needed the following after a cleanup in Intellij of existing Kotlin code\r\n\r\n```\r\n-import okhttp3.CipherSuite.forJavaName\r\n+import okhttp3.CipherSuite.Companion.forJavaName\r\n```\r\n\r\nThe upgrade for MockWebServer.setProtocols is also really ugly with the run method.", "url": "https://github.com/square/okhttp/issues/5169", "user": "yschimke", "labels": ["bug"], "created": "2019-06-04 19:55:44", "closed": "2019-06-09 02:26:45", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "4.0.0-alpha02 ProGuard issues", "body": "Yes, I'm using the ProGuard rules from readme.\r\n\r\n```\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$configureTrustManager$1: ca\r\nn't find superclass or interface org.conscrypt.ConscryptHostnameVerifier\r\nWarning: okhttp3.Authenticator$Companion$NONE$1: can't find referenced class okh\r\nttp3.Authenticator$DefaultImpls\r\nWarning: okhttp3.Authenticator$Companion$NONE$1: can't find referenced class okh\r\nttp3.Authenticator$DefaultImpls\r\nWarning: okhttp3.CookieJar$Companion$NO_COOKIES$1: can't find referenced class o\r\nkhttp3.CookieJar$DefaultImpls\r\nWarning: okhttp3.CookieJar$Companion$NO_COOKIES$1: can't find referenced class o\r\nkhttp3.CookieJar$DefaultImpls\r\nWarning: okhttp3.Dns$Companion$SYSTEM$1: can't find referenced class okhttp3.Dns\r\n$DefaultImpls\r\nWarning: okhttp3.Dns$Companion$SYSTEM$1: can't find referenced class okhttp3.Dns\r\n$DefaultImpls\r\nWarning: okhttp3.internal.http2.PushObserver$Companion$CANCEL$1: can't find refe\r\nrenced class okhttp3.internal.http2.PushObserver$DefaultImpls\r\nWarning: okhttp3.internal.http2.PushObserver$Companion$CANCEL$1: can't find refe\r\nrenced class okhttp3.internal.http2.PushObserver$DefaultImpls\r\nWarning: okhttp3.internal.io.FileSystem$Companion$SYSTEM$1: can't find reference\r\nd class okhttp3.internal.io.FileSystem$DefaultImpls\r\nWarning: okhttp3.internal.io.FileSystem$Companion$SYSTEM$1: can't find reference\r\nd class okhttp3.internal.io.FileSystem$DefaultImpls\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$Companion: can't find refer\r\nenced class org.conscrypt.Conscrypt\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$Companion: can't find refer\r\nenced class org.conscrypt.Conscrypt\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$Companion: can't find refer\r\nenced class org.conscrypt.Conscrypt\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$Companion: can't find refer\r\nenced class org.conscrypt.Conscrypt$Version\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$Companion: can't find refer\r\nenced class org.conscrypt.Conscrypt$Version\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$Companion: can't find refer\r\nenced class org.conscrypt.Conscrypt$Version\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$Companion: can't find refer\r\nenced class org.conscrypt.Conscrypt$Version\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$Companion: can't find refer\r\nenced class org.conscrypt.Conscrypt$Version\r\nWarning: okhttp3.internal.platform.ConscryptPlatform$configureTrustManager$1: ca\r\nn't find referenced class org.conscrypt.ConscryptHostnameVerifier\r\n```", "url": "https://github.com/square/okhttp/issues/5167", "user": "Albert221", "labels": ["bug", "proguard"], "created": "2019-06-03 16:21:29", "closed": "2019-06-09 02:24:57", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "java.lang.IllegalStateException: Expected Android API level 21+ but was 19", "body": "version:3.14.2\r\nandroid-version:4.4\r\n\r\ncompileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n}\r\n\r\njava8 is already configured\r\n\r\nimplementation 'com.squareup.retrofit2:retrofit:2.5.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'\r\n    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'\r\n    implementation 'com.squareup.retrofit2:retrofit:2.5.0'\r\n    implementation 'com.squareup.okhttp3:okhttp:3.14.2'\r\n    implementation 'com.google.code.gson:gson:2.8.2'//\u4f7f\u7528\u6700\u65b0\u7248\u672c\u89e3\u6790\u4f1a\u51fa\u95ee\u9898\r\n    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'\r\n    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'\r\n\r\n06-03 12:07:03.205 12012-12012/? E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.yindex.yindexclient, PID: 12012\r\n    java.lang.ExceptionInInitializerError\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:2)\r\n        at com.yindex.yindexclient.http.RetrofitCreateHelper.<init>(RetrofitCreateHelper.kt:3)\r\n        at com.yindex.yindexclient.http.RetrofitCreateHelper.<init>(RetrofitCreateHelper.kt:25)\r\n        at com.yindex.yindexclient.http.RetrofitCreateHelper$Companion.getInstance(RetrofitCreateHelper.kt:4)\r\n        at com.yindex.yindexclient.ui.activity.login.LoginMode.login(LoginMode.kt:1)\r\n        at com.yindex.yindexclient.ui.activity.login.LoginPresenter.login(LoginPresenter.kt:6)\r\n        at com.yindex.yindexclient.ui.activity.login.LoginActivity.login(LoginActivity.kt:6)\r\n        at com.yindex.yindexclient.ui.activity.login.LoginActivity.cliclView(LoginActivity.kt:20)\r\n        at com.yindex.yindexclient.ui.base.BaseMvpActivity.onClick(BaseMvpActivity.kt:2)\r\n        at android.view.View.performClick(View.java:4457)\r\n        at android.view.View$PerformClick.run(View.java:18477)\r\n        at android.os.Handler.handleCallback(Handler.java:733)\r\n        at android.os.Handler.dispatchMessage(Handler.java:95)\r\n        at android.os.Looper.loop(Looper.java:136)\r\n        at android.app.ActivityThread.main(ActivityThread.java:5143)\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:515)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:602)\r\n        at dalvik.system.NativeStart.main(Native Method)\r\n     Caused by: java.lang.IllegalStateException: Expected Android API level 21+ but was 19\r\n        at okhttp3.internal.platform.AndroidPlatform.buildIfSupported(AndroidPlatform.java:9)\r\n        at okhttp3.internal.platform.Platform.findPlatform(Platform.java:1)\r\n        at okhttp3.internal.platform.Platform.<clinit>(Platform.java:1)\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:2)\u00a0\r\n        at com.yindex.yindexclient.http.RetrofitCreateHelper.<init>(RetrofitCreateHelper.kt:3)\u00a0\r\n        at com.yindex.yindexclient.http.RetrofitCreateHelper.<init>(RetrofitCreateHelper.kt:25)\u00a0\r\n        at com.yindex.yindexclient.http.RetrofitCreateHelper$Companion.getInstance(RetrofitCreateHelper.kt:4)\u00a0\r\n        at com.yindex.yindexclient.ui.activity.login.LoginMode.login(LoginMode.kt:1)\u00a0\r\n        at com.yindex.yindexclient.ui.activity.login.LoginPresenter.login(LoginPresenter.kt:6)\u00a0\r\n        at com.yindex.yindexclient.ui.activity.login.LoginActivity.login(LoginActivity.kt:6)\u00a0\r\n        at com.yindex.yindexclient.ui.activity.login.LoginActivity.cliclView(LoginActivity.kt:20)\u00a0\r\n        at com.yindex.yindexclient.ui.base.BaseMvpActivity.onClick(BaseMvpActivity.kt:2)\u00a0\r\n        at android.view.View.performClick(View.java:4457)\u00a0\r\n        at android.view.View$PerformClick.run(View.java:18477)\u00a0\r\n        at android.os.Handler.handleCallback(Handler.java:733)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:95)\u00a0\r\n        at android.os.Looper.loop(Looper.java:136)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:5143)\u00a0\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\u00a0\r\n        at java.lang.reflect.Method.invoke(Method.java:515)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:602)\u00a0\r\n        at dalvik.system.NativeStart.main(Native Method)\u00a0\r\n\r\nwhy?", "url": "https://github.com/square/okhttp/issues/5162", "user": "fishsoft", "labels": ["bug"], "created": "2019-06-03 06:28:33", "closed": "2019-06-03 07:27:58", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[4.0.0-alpha02] Call.clone is not accessible anymore", "body": "I just tried out the latest alpha to see what would be required for the migration and found an incompatiblity! `Call.clone` is not accessible anymore, since it is `protected` now. `RealCall` simply `overrides` the method, without adjusting the visiblity to `public`.\r\n\r\nThis comes from Kotlin code. I see that OkHttp has Java tests which call `clone`, so I'm not sure why it works in Java, but not in Kotlin.", "url": "https://github.com/square/okhttp/issues/5161", "user": "rubengees", "labels": ["bug"], "created": "2019-06-02 19:47:50", "closed": "2019-06-15 05:39:34", "commits": {"335b5051a3bbcf3bb3a1d3075409e8238be4fb6c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ead00e22105d5e135aeb213d9123a693b59c70e8": {"commitGHEventType": "referenced", "commitUser": "yschimke"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "335b5051a3bbcf3bb3a1d3075409e8238be4fb6c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ead00e22105d5e135aeb213d9123a693b59c70e8", "commitGHEventType": "referenced", "commitUser": "yschimke", "commitParents": ["3a0980e6216262f25beae4336368572ceabcacee"], "nameRev": "ead00e22105d5e135aeb213d9123a693b59c70e8 tags/parent-4.0.0-RC2~13", "commitMessage": "Fix the visibility of Call.clone() called from Kotlin (#5188)\n\nCloses: https://github.com/square/okhttp/issues/5161", "commitDateTime": "2019-06-15 06:39:33", "authoredDateTime": "2019-06-15 01:39:33", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/Call.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/test/java/okhttp3/CallKotlinTest.kt", "insertions": 53, "deletions": 0, "lines": 53}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ead00e22105d5e135aeb213d9123a693b59c70e8"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/Call.kt"]}, {"title": "Non-IOException subtypes thrown from interceptor never notify Callback", "body": "A programming error in an interceptor or in OkHttp or an error of any kind will bypass the `Callback` and crash the `Dispatcher` thread leaving your consumer hanging forever. This was reported to Retrofit's Kotlin coroutine support, but is not specific to it.\r\n\r\nMy proposal is for adding something like\r\n```java\r\ndefault void onFailure(Call call, Throwable t) {\r\n  if (t instanceof IOException) {\r\n    onFailure(call, (IOException) t);\r\n  }\r\n}\r\n```\r\nand deprecating the existing `onFailure` callback in a 3.14.3 or 3.15 and the equivalent added to 4.0. This will force Retrofit onto Java 8, although given the added safety I think that's acceptable.", "url": "https://github.com/square/okhttp/issues/5151", "user": "JakeWharton", "labels": ["bug"], "created": "2019-05-31 20:36:06", "closed": "2019-09-14 19:46:56", "commits": {"f25c027b197559df10d09b87ced0c03a776d5b1d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "649c0c2b3f2aa8a9ba2b211b7e4f119fbe4f167a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "29e3b529bd11fb14d8f4248c20e4fadfde2e8461": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "5fbf7cccd19c6f144a59cc2487e8a93636ecac0c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "447139588925ab6d8ec16196fd9010af45c0c9f1": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "30be74f9e61ea287747ea9bd68ad097b5fba0345": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0886def52dc34117ce344d301fa3965b60fc58fd": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 105.00027777777778, "commitsDetails": [{"commitHash": "f25c027b197559df10d09b87ced0c03a776d5b1d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "649c0c2b3f2aa8a9ba2b211b7e4f119fbe4f167a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "29e3b529bd11fb14d8f4248c20e4fadfde2e8461", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5fbf7cccd19c6f144a59cc2487e8a93636ecac0c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["24fd042c3ba37f20cb23dfbe06a9690384a5b290"], "nameRev": "5fbf7cccd19c6f144a59cc2487e8a93636ecac0c tags/parent-4.3.0~92^2", "commitMessage": "Cancel calls on unexpected exceptions\n\nCloses: https://github.com/square/okhttp/issues/5151\n", "commitDateTime": "2019-09-14 13:49:46", "authoredDateTime": "2019-09-14 13:45:38", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/RealCall.kt", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "okhttp/src/test/java/okhttp3/InterceptorTest.java", "insertions": 12, "deletions": 5, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InterceptorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.InterceptorTest.interceptorThrowsRuntimeExceptionAsynchronous(boolean)", "TOT": 15, "UPD": 3, "INS": 9, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "447139588925ab6d8ec16196fd9010af45c0c9f1", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["c8833f644e7214580bdd4dbe736ce58008b1a2b3"], "nameRev": "447139588925ab6d8ec16196fd9010af45c0c9f1 tags/parent-3.14.4~1^2", "commitMessage": "Cancel calls on unexpected exceptions (3.14.x branch)\n\nCloses: https://github.com/square/okhttp/issues/5151\n", "commitDateTime": "2019-09-26 22:58:08", "authoredDateTime": "2019-09-14 13:45:38", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/InterceptorTest.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "okhttp/src/main/java/okhttp3/RealCall.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InterceptorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.InterceptorTest.interceptorThrowsRuntimeExceptionAsynchronous(boolean)", "TOT": 15, "UPD": 3, "INS": 9, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "RealCall.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RealCall.AsyncCall.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "30be74f9e61ea287747ea9bd68ad097b5fba0345", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0886def52dc34117ce344d301fa3965b60fc58fd", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["043b57006c39357180c6178f53907e7f30467180"], "nameRev": "0886def52dc34117ce344d301fa3965b60fc58fd tags/parent-3.12.6~1^2", "commitMessage": "Cancel calls on unexpected exceptions (3.12.x branch)\n\nCloses: https://github.com/square/okhttp/issues/5151\n", "commitDateTime": "2019-09-27 00:16:33", "authoredDateTime": "2019-09-14 13:45:38", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/InterceptorTest.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "okhttp/src/main/java/okhttp3/RealCall.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InterceptorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.InterceptorTest.interceptorThrowsRuntimeExceptionAsynchronous(boolean)", "TOT": 10, "UPD": 1, "INS": 7, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.InterceptorTest.interceptorThrowsRuntimeExceptionAsynchronous(boolean).18.intercept(okhttp3.Chain)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealCall.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RealCall.AsyncCall.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5fbf7cccd19c6f144a59cc2487e8a93636ecac0c", "447139588925ab6d8ec16196fd9010af45c0c9f1", "0886def52dc34117ce344d301fa3965b60fc58fd"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 23.0, "deletions": 0.0, "lines": 23.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/RealCall.kt"], "changesInPackagesSPOON": ["okhttp3.RealCall.AsyncCall.execute()"]}, {"title": "Facing Security issue", "body": "We got the security issue in the okhttp.\r\nWith the IBM Application Security, we got the following trace. Please check\r\n\r\n\r\n\r\njavax.net.ssl.SSLParameters.setCipherSuites(java.lang.String[]):void | SSLParameters | (javax\\net\\ssl\\SSLParameters.java:140)\r\n-- | -- | --\r\n[Framework Code, 8 lines removed] | ... | (...)\r\ncom.android.org.conscrypt.OpenSSLSocketImpl.startHandshake():void | OpenSSLSocketImpl | (com\\android\\org\\conscrypt\\OpenSSLSocketImpl.java:351)\r\nokhttp3.internal.connection.RealConnection.connectTls(okhttp3.internal.connection.ConnectionSpecSelector):void | RealConnection | (okhttp3\\internal\\connection\\RealConnection.java:318)\r\nokhttp3.internal.connection.RealConnection.establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector, int, okhttp3.Call, okhttp3.EventListener):void | RealConnection | (okhttp3\\internal\\connection\\RealConnection.java:282)\r\nokhttp3.internal.connection.RealConnection.connect(int, int, int, int, boolean, okhttp3.Call, okhttp3.EventListener):void | RealConnection | (okhttp3\\internal\\connection\\RealConnection.java:167)\r\nokhttp3.internal.connection.StreamAllocation.findConnection(int, int, int, int, boolean):okhttp3.internal.connection.RealConnection | StreamAllocation | (okhttp3\\internal\\connection\\StreamAllocation.java:257)\r\nokhttp3.internal.connection.StreamAllocation.findHealthyConnection(int, int, int, int, boolean, boolean):okhttp3.internal.connection.RealConnection | StreamAllocation | (okhttp3\\internal\\connection\\StreamAllocation.java:135)\r\nokhttp3.internal.connection.StreamAllocation.newStream(okhttp3.OkHttpClient, okhttp3.Interceptor.Chain, boolean):okhttp3.internal.http.HttpCodec | StreamAllocation | (okhttp3\\internal\\connection\\StreamAllocation.java:114)\r\nokhttp3.internal.connection.ConnectInterceptor.intercept(okhttp3.Interceptor.Chain):okhttp3.Response | ConnectInterceptor | (okhttp3\\internal\\connection\\ConnectInterceptor.java:42)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpCodec, okhttp3.internal.connection.RealConnection):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:147)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:121)\r\nokhttp3.internal.cache.CacheInterceptor.intercept(okhttp3.Interceptor.Chain):okhttp3.Response | CacheInterceptor | (okhttp3\\internal\\cache\\CacheInterceptor.java:93)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpCodec, okhttp3.internal.connection.RealConnection):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:147)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:121)\r\nokhttp3.internal.http.BridgeInterceptor.intercept(okhttp3.Interceptor.Chain):okhttp3.Response | BridgeInterceptor | (okhttp3\\internal\\http\\BridgeInterceptor.java:93)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpCodec, okhttp3.internal.connection.RealConnection):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:147)\r\nokhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(okhttp3.Interceptor.Chain):okhttp3.Response | RetryAndFollowUpInterceptor | (okhttp3\\internal\\http\\RetryAndFollowUpInterceptor.java:126)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpCodec, okhttp3.internal.connection.RealConnection):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:147)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:121)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpCodec, okhttp3.internal.connection.RealConnection):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:147)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:121)\r\nokhttp3.logging.HttpLoggingInterceptor.intercept(okhttp3.Interceptor.Chain):okhttp3.Response | HttpLoggingInterceptor | (okhttp3\\logging\\HttpLoggingInterceptor.java:212)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request, okhttp3.internal.connection.StreamAllocation, okhttp3.internal.http.HttpCodec, okhttp3.internal.connection.RealConnection):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:147)\r\nokhttp3.internal.http.RealInterceptorChain.proceed(okhttp3.Request):okhttp3.Response | RealInterceptorChain | (okhttp3\\internal\\http\\RealInterceptorChain.java:121)\r\nokhttp3.RealCall.getResponseWithInterceptorChain():okhttp3.Response | RealCall | (okhttp3\\RealCall.java:200)\r\nokhttp3.RealCall.AsyncCall.execute():void | RealCall$AsyncCall | (okhttp3\\RealCall.java:147)\r\nokhttp3.internal.NamedRunnable.run():void | NamedRunnable | (okhttp3\\internal\\NamedRunnable.java:32)\r\njava.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor.Worker):void | ThreadPoolExecutor | (java\\util\\concurrent\\ThreadPoolExecutor.java:1162)\r\njava.util.concurrent.ThreadPoolExecutor.Worker.run():void | ThreadPoolExecutor$Worker | (java\\util\\concurrent\\ThreadPoolExecutor.java:636)\r\njava.lang.Thread.run():void | Thread | (java\\lang\\Thread.java:764)\r\n\r\n\r\n\r\nPlease check this and let us know. We are using, \r\nimplementation 'com.squareup.retrofit2:retrofit:2.1.0'\r\nimplementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'", "url": "https://github.com/square/okhttp/issues/5148", "user": "vigneshthillaichithambaram", "labels": ["bug"], "created": "2019-05-31 09:06:42", "closed": "2019-06-15 02:57:43", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "okhttp3.Headers bug", "body": "**no spaces allowed in header**\r\n\r\n![image](https://user-images.githubusercontent.com/13159188/58681651-ed8d2600-839f-11e9-824f-0c74a61077cd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/13159188/58681666-00075f80-83a0-11e9-8be0-bdfb703e7d0c.png)\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5146", "user": "xiaomingzhong", "labels": ["bug"], "created": "2019-05-31 04:31:27", "closed": "2019-05-31 08:01:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.ArrayIndexOutOfBoundsException: size=0 offset=0 byteCount=64", "body": "Using:\r\napi 'com.squareup.okhttp3:okhttp:3.10.0'\r\napi 'com.squareup.okio:okio:1.14.0'\r\napi 'com.squareup.okhttp3:logging-interceptor:3.10.0'\r\n\r\njava.lang.ArrayIndexOutOfBoundsException: size=0 offset=0 byteCount=64\r\nat okio.Util.checkOffsetAndCount(Util.java:30)\r\nat okio.Buffer.copyTo(Buffer.java:175)\r\nat okhttp3.logging.HttpLoggingInterceptor.isPlaintext(HttpLoggingInterceptor.java:296)\r\nat okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:265)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\nat okhttp3.RealCall$AsyncCall.execute(RealCall.java:147)\r\nat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\nat java.lang.Thread.run(Thread.java:761)", "url": "https://github.com/square/okhttp/issues/5145", "user": "Shawpoo", "labels": ["bug"], "created": "2019-05-30 09:23:27", "closed": "2019-06-15 02:59:38", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Misssing callEnd and responseBodyEnd", "body": "Using:\r\ncom.squareup.retrofit2:retrofit:2.5.0   (okhttp version:3.12.0)\r\n\r\nWhen I using EventListener, I found the \"callEnd\" and \"responseBodyEnd\"  method is not be called\r\n\r\nokhttp/okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java \r\n\r\n```Java\r\n@Override public long read(Buffer sink, long byteCount) throws IOException {\r\n      try {\r\n        long read = delegate().read(sink, byteCount);\r\n        if (read > 0) {\r\n          bytesRead += read;\r\n        }\r\n\r\n        //Here! I think need add some code like this:\r\n        if(read == -1){\r\n            endOfInput(null);\r\n        }\r\n\r\n        return read;\r\n      } catch (IOException e) {\r\n        endOfInput(e);\r\n        throw e;\r\n      }\r\n}\r\n```\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5143", "user": "robining", "labels": ["bug"], "created": "2019-05-30 03:58:55", "closed": "2019-06-03 00:14:56", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Mandatory: compliance as a function of version. ", "body": "PLEASE DISREGARD. THE ERROR WAS SOMETHING ELSE. SEE NEW COMMENT. \r\nUsing Gradle, updating to latest okhttp given by readme, the following error is reported, opposing your statement in readme that okhttp is in compliance with Android 21+ \r\n\r\nError: Static interface methods are only supported starting with Android N (--min-api 24): void okhttp3.logging.HttpLoggingInterceptor$Logger.lambda$static$0(java.lang.String)\r\n\r\nThe library was updated due to nodefined class exception concerning the logging interceptor. Both okhttp and okhttp-loggin-interceptor, thus non-working, was 3.10.0. This error is therefore equal to a push on the \"wild guess button\". We are not the only ones at loss for proper explanantion. What is causing it? Should you include a section in your readme on this common issue? Please understand that we want to avoid library integration becoming a recurring timethief each time an update is mandatory for this or that reason.\r\n\r\nSUGGESTED REMEDY:\r\nAt the very minimum, please update your readme with a compliance table, including Android, Java, retrofit, or other libraries of relevance. Do have in mind that when developing apps for Android, it is of very high interest to be backward compliant to the extent possible, so as to cover as large a market segment as possible. I would suggest that your code, if at all possible, should be that; backward compliant to for example Android 19. There are still many models of this version in use. Put version control if then else into your code!\r\n\r\nBeyond this lack of professional configuration control on versions, okhttp is brilliant!\r\n\r\nThankyou.\r\n", "url": "https://github.com/square/okhttp/issues/5122", "user": "chjan", "labels": ["bug"], "created": "2019-05-25 20:02:23", "closed": "2019-05-26 14:43:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[HTTP/2] HTTP_1_1_REQUIRED not handled correctly", "body": "There are cases when the server [resets a HTTP/2 stream with HTTP_1_1 REQUIRED](https://tools.ietf.org/html/rfc7540#section-7). I think that okhttp should then automatically retry requests with HTTP/1.1.\r\n\r\nFor instance, when using client certificates for authentication (by setting an appropriate socket factory in `OkHttpClient.Builder`), [HTTP/2 can't be used yet](https://tools.ietf.org/html/draft-ietf-httpbis-http2-secondary-certs-04). However, okhttp tries HTTP/2 first for such requests (which is absolutely OK and intended), and then the server resets the stream with HTTP_1_1_REQUIRED, which means (RFC 7540):\r\n\r\n>The endpoint requires that HTTP/1.1 be used instead of HTTP/2.\r\n\r\nIn this case, I think that okhttp should retry with HTTP/1.1 automatically, because\r\n* it now knows that HTTP/2 is not available for this endpoint and thus the request has not been delivered yet, and\r\n* HTTP/1.1 will work for this endpoint, and\r\n* there is no reason why the calling application should handle this itself instead of okhttp.\r\n\r\nFor client certificates, [this situation can be worked around in the client that calls okhttp](https://forums.bitfire.at/post/11587) by restricting the request to HTTP/1.1, but there may be other reasons why a server doesn't allow HTTP/2 for an endpoint, and this could happen without prior knowledge on application side.\r\n\r\nIf there's anything you need or I can do to further assist in this, just let me know :)\r\n\r\nEdit: I don't know whether this should be labelled as a \"bug\", but now I can't change it anymore.", "url": "https://github.com/square/okhttp/issues/5100", "user": "rfc2822", "labels": ["bug"], "created": "2019-05-23 11:57:12", "closed": "2020-03-29 18:04:34", "commits": {}, "ttf": 311.0002777777778, "commitsDetails": []}, {"title": "okhttp:3.14.2 Conflict with AndroidX", "body": "implementation(\"com.squareup.okhttp3:okhttp:3.14.2\") complains\r\n\u3010    java.lang.RuntimeException: Unable to instantiate activity ComponentInfo{com.jun.mytestokhttp14/com.jun.mytestokhttp14.MainActivity}: java.lang.ClassNotFoundException: Didn't find class \"com.jun.mytestokhttp14.MainActivity\" on path: DexPathList[[zip file \"/data/app/com.jun.mytestokhttp14-0UbdODX-2Q9uu8LIgI_jXg==/base.apk\"],nativeLibraryDirectories=[/data/app/com.jun.mytestokhttp14-0UbdODX-2Q9uu8LIgI_jXg==/lib/arm64, /system/lib64, /system/vendor/lib64]]\u3011\r\n\r\n implementation(\"com.squareup.okhttp3:okhttp:3.10.0\") succeed \r\n\r\ndevelopment environment \r\n  AndroidStudio3.3.1\r\n  classpath 'com.android.tools.build:gradle:3.3.1'\r\nandroid {\r\n    compileSdkVersion 28\r\n    defaultConfig {\r\n        applicationId \"com.jun.mytestokhttp14\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 28\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5099", "user": "GitJoBo", "labels": ["bug"], "created": "2019-05-23 11:01:59", "closed": "2019-05-23 11:16:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "HTTPS - Breaking client authentication on server side", "body": "Hi Guys,\r\n\r\nWhen you don't specify a sslSocketFactory okhttp recreate a TLS SSLcontext instead of using SSLContext.getDefault. Doing so you init the SSLContext without giving the default keyStore and this break server side client certificate authentication.\r\n\r\nIn a system where you configure your trustCertificate and keyStore using system properties like\r\n\"javax.net.ssl.keyStore\" & \"javax.net.ssl.trustStore\" , java merge them and init the SSLContext.getDefault for you. Basically you just need to get the socketFactory from that default context.\r\n\r\nTo make sure the sslsocket factory contain my client certificate from the keystore I have to call \r\n`OkHttpClient.builder.slSocketFactory(**SSLContext.getDefault().getSocketFactory**, trustManager) `\r\n\r\nLet me know if you guys need something or if i got it wrong \r\nI will try to follow with a pull request.\r\n\r\nBest,\r\n\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/5090", "user": "aponhcet", "labels": ["bug"], "created": "2019-05-22 11:27:59", "closed": "2020-03-29 18:05:25", "commits": {}, "ttf": 312.0002777777778, "commitsDetails": []}, {"title": "If ProxySelector getDefault() throws AccessControlException, we should default to NullProxySelector", "body": "Hi there, I am trying to use okhttp but run into security permissions. It failed at ProxySelector getDefault with SecurityManager checkPermission on \"getProxySelector\". \r\n\r\nFor any case if getDefault throws exception, I think we should fall into NullProxySelector.\r\n\r\n ` this.proxySelector = ProxySelector.getDefault();`\r\n  ` if (this.proxySelector == null) {`\r\n `               this.proxySelector = new NullProxySelector();`\r\n   `         }`\r\n\r\n\r\n\r\n\r\n \r\n", "url": "https://github.com/square/okhttp/issues/5074", "user": "theonecf", "labels": ["bug"], "created": "2019-05-20 15:58:04", "closed": "2019-08-27 13:10:09", "commits": {}, "ttf": 98.00027777777778, "commitsDetails": []}, {"title": "Remove isAndroidGetsocknameError", "body": "It isn't necessary for Android 5+.", "url": "https://github.com/square/okhttp/issues/5057", "user": "swankjesse", "labels": ["bug"], "created": "2019-05-17 12:17:33", "closed": "2019-05-19 07:33:55", "commits": {"6d872df83bd9e377c6309e4cb1365faf60fffbd5": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "301c8f8ed1687ead84089125ac77f5a4e0ff25dc": {"commitGHEventType": "closed", "commitUser": "yschimke"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "6d872df83bd9e377c6309e4cb1365faf60fffbd5", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["9d726d8f6c037d371c7b9bd2a3369771e805f83c"], "nameRev": "6d872df83bd9e377c6309e4cb1365faf60fffbd5 tags/parent-4.0.0-alpha02~56^2", "commitMessage": "Promote some Util functions to be extensions\n", "commitDateTime": "2019-05-15 20:35:07", "authoredDateTime": "2019-05-14 20:25:18", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "mockwebserver/src/test/java/okhttp3/mockwebserver/internal/http2/Http2Server.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp-tls/src/test/java/okhttp3/tls/HandshakeCertificatesTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/Address.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/Cache.kt", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "okhttp/src/main/java/okhttp3/FormBody.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/Handshake.kt", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "okhttp/src/main/java/okhttp3/MultipartBody.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.kt", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "okhttp/src/main/java/okhttp3/RealCall.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/Request.kt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp/src/main/java/okhttp3/ResponseBody.kt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp/src/main/java/okhttp3/internal/Util.kt", "insertions": 0, "deletions": 124, "lines": 124}, {"filePath": "okhttp/src/main/java/okhttp3/internal/UtilKt.kt", "insertions": 109, "deletions": 0, "lines": 109}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.kt", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache/DiskLruCache.kt", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache2/Relay.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnectionPool.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RouteSelector.kt", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Transmitter.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/RetryAndFollowUpInterceptor.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http1/Http1ExchangeCodec.kt", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.kt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2ExchangeCodec.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Reader.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "okhttp/src/test/java/okhttp3/AddressTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/test/java/okhttp3/ConnectionReuseTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/SocksProxy.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "okhttp/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/WebPlatformUrlTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "okhttp/src/test/java/okhttp3/internal/UtilTest.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "okhttp/src/test/java/okhttp3/internal/UtilTest.kt", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "okhttp/src/test/java/okhttp3/internal/connection/RouteSelectorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http/ExternalHttp2Example.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/MockHttp2Peer.java", "insertions": 5, "deletions": 3, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2Server.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.internal.http2.Http2Server.run()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HandshakeCertificatesTest.java", "spoonMethods": []}, {"spoonFilePath": "AddressTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.AddressTest", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionReuseTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.ConnectionReuseTest.connectionsAreNotReusedIfNetworkInterceptorInterferes()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SocksProxy.java", "spoonMethods": [{"spoonMethodName": "okhttp3.SocksProxy.play()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.SocksProxy.service(java.net.Socket)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.connectViaHttpProxyToHttpsUsingBadProxyAndHttpResponseCache()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebPlatformUrlTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.WebPlatformUrlTest", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UtilTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.UtilTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RouteSelectorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RouteSelectorTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExternalHttp2Example.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.ExternalHttp2Example.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionWindowUpdateAfterCanceling()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockHttp2Peer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.MockHttp2Peer.play()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.MockHttp2Peer.close()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "301c8f8ed1687ead84089125ac77f5a4e0ff25dc", "commitGHEventType": "closed", "commitUser": "yschimke", "commitParents": ["d6cc7dd74613b3d84da9c04e9069461ba445d32a"], "nameRev": "301c8f8ed1687ead84089125ac77f5a4e0ff25dc tags/parent-4.0.0-alpha02~47", "commitMessage": "Fix #5057: Remove unnecessary `isAndroidGetsocknameError` function (#5058)\n\n", "commitDateTime": "2019-05-19 08:33:48", "authoredDateTime": "2019-05-19 09:33:48", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/UtilKt.kt", "insertions": 1, "deletions": 9, "lines": 10}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.kt", "insertions": 0, "deletions": 4, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6d872df83bd9e377c6309e4cb1365faf60fffbd5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 204, "deletions": 208, "lines": 412, "gitFilesChange": 27}, "spoonStatsSummary": {"TOT": 8.0, "UPD": 5.0, "INS": 0.0, "MOV": 0.0, "DEL": 3.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/Request.kt", "okhttp/src/main/java/okhttp3/internal/cache/DiskLruCache.kt", "okhttp/src/main/java/okhttp3/Address.kt", "okhttp/src/main/java/okhttp3/internal/connection/RealConnectionPool.kt", "okhttp/src/main/java/okhttp3/RealCall.kt", "okhttp/src/main/java/okhttp3/internal/connection/Transmitter.kt", "okhttp/src/main/java/okhttp3/ResponseBody.kt", "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt", "okhttp/src/main/java/okhttp3/internal/http2/Http2Reader.kt", "okhttp/src/main/java/okhttp3/internal/cache2/Relay.kt", "okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.kt", "okhttp/src/main/java/okhttp3/Cache.kt", "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt", "okhttp/src/main/java/okhttp3/OkHttpClient.kt", "okhttp/src/main/java/okhttp3/internal/connection/RouteSelector.kt", "okhttp/src/main/java/okhttp3/internal/UtilKt.kt", "okhttp/src/main/java/okhttp3/internal/http1/Http1ExchangeCodec.kt", "okhttp/src/main/java/okhttp3/FormBody.kt", "okhttp/src/main/java/okhttp3/MultipartBody.kt", "okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.kt", "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.kt", "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.kt", "okhttp/src/main/java/okhttp3/internal/http/RetryAndFollowUpInterceptor.kt", "okhttp/src/main/java/okhttp3/Handshake.kt", "okhttp/src/main/java/okhttp3/internal/Util.kt", "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "okhttp/src/main/java/okhttp3/internal/http2/Http2ExchangeCodec.kt"], "changesInPackagesSPOON": ["okhttp3.SocksProxy.play()", "okhttp3.SocksProxy.service(java.net.Socket)", "okhttp3.internal.http.ExternalHttp2Example.main(java.lang.String[])", "okhttp3.internal.http2.MockHttp2Peer.play()", "okhttp3.internal.http2.MockHttp2Peer.close()", "okhttp3.mockwebserver.internal.http2.Http2Server.run()"]}, {"title": "MockWebServer responds successful even with SocketPolicy.DISCONNECT_AT_START", "body": "If I enqueue a `MockResponse` with `SocketPolicy.DISCONNECT_AT_START` after another `MockResponse` both requests succeed.\r\n\r\nHere is a small example of how to reproduce the issue:\r\n\r\n```java\r\nMockWebServer server = new MockWebServer();\r\n\r\nserver.enqueue(new MockResponse());\r\nserver.enqueue(new MockResponse().setSocketPolicy(SocketPolicy.DISCONNECT_AT_START));\r\n\r\nOkHttpClient client = new OkHttpClient.Builder().build();\r\nRequest request = new Request.Builder().url(server.url(\"/\")).build();\r\n\r\ntry (Response response = client.newCall(request).execute()) {\r\n    System.out.println(\"SUCCESS\");\r\n} catch (Exception e) {\r\n    System.out.println(\"ERROR\");\r\n}\r\n\r\ntry (Response response = client.newCall(request).execute()) {\r\n    System.out.println(\"SUCCESS\");\r\n} catch (Exception e) {\r\n    System.out.println(\"ERROR\");\r\n}\r\n```\r\n\r\nI expect this to print:\r\n\r\n```\r\nSUCCESS\r\nERROR\r\n```\r\n\r\nHowever it prints\r\n\r\n```\r\nSUCCESS\r\nSUCCESS\r\n```\r\nNote that if I change the enqueueing order and I enqueue the `MockResponse` that throws errors first, and the successful one second, this works as expected.\r\n\r\nI'm using version 3.14.1 ", "url": "https://github.com/square/okhttp/issues/5054", "user": "ceronman", "labels": ["bug"], "created": "2019-05-16 16:38:28", "closed": "2019-06-15 03:03:13", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "Kotlin Documentation leaks some weird public APIs ", "body": "http://square.github.io/okhttp/4.x/okhttp/okhttp/okhttp3/-dns/index.html\r\n\r\n<img width=\"659\" alt=\"image\" src=\"https://user-images.githubusercontent.com/231923/57583963-ef18ac00-74cd-11e9-8234-bf0cdf61f6d2.png\">\r\n", "url": "https://github.com/square/okhttp/issues/5043", "user": "yschimke", "labels": ["bug"], "created": "2019-05-12 14:52:27", "closed": "2019-06-16 07:06:56", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Exception in thread \"OkHttp Dispatcher\" java.lang.NoSuchMethodError: okio.BufferedSource.getBuffer()Lokio/Buffer;", "body": "I use okhttpVersion = 3.14.1 and got the following error when I integrate with line bot library.\r\n\r\n```\r\nException in thread \"OkHttp Dispatcher\" java.lang.NoSuchMethodError: okio.BufferedSource.getBuffer()Lokio/Buffer;\r\n\tat okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:252)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat com.linecorp.bot.client.HeaderInterceptor.intercept(HeaderInterceptor.java:39)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n\tat okhttp3.RealCall$AsyncCall.execute(RealCall.java:172)\r\n\tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\nThe error because of can't resolve method `getBuffer()` from `BufferedSource` object. I think it should be `source.buffer()` not `source.getBuffer()`", "url": "https://github.com/square/okhttp/issues/5030", "user": "bertytobing", "labels": ["bug"], "created": "2019-05-10 03:59:19", "closed": "2019-05-19 02:22:07", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "java.lang.IndexOutOfBoundsException", "body": "this bug always exists!   but can not repeat it, maybe can add protecting code to avoid exception ...\r\n\r\njava.lang.IndexOutOfBoundsException: Index: 0\r\njava.util.Collections$EmptyList.get(Collections.java:4502)\r\nat okhttp3.internal.connection.RealConnection.connectTls(SourceFile:326)\r\nat okhttp3.internal.connection.RealConnection.establishProtocol(SourceFile:283)\r\nat okhttp3.internal.connection.RealConnection.connect(SourceFile:168)\r\nat okhttp3.internal.connection.StreamAllocation.findConnection(SourceFile:257)\r\nat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(SourceFile:135)\r\nat okhttp3.internal.connection.StreamAllocation.newStream(SourceFile:114)\r\nat okhttp3.internal.connection.ConnectInterceptor.intercept(SourceFile:42)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile:147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile:121)\r\nat okhttp3.internal.cache.CacheInterceptor.intercept(SourceFile:93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile:147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile:121)\r\nat okhttp3.internal.http.BridgeInterceptor.intercept(SourceFile:93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile:147)\r\nat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(SourceFile:126)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile:147)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(SourceFile:121)\r\nat okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile:254)\r\nat okhttp3.RealCall$AsyncCall.execute(SourceFile:200)\r\nat okhttp3.internal.NamedRunnable.run(SourceFile:32)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\nat java.lang.Thread.run(Thread.java:784)\r\n", "url": "https://github.com/square/okhttp/issues/5029", "user": "hbzhzw", "labels": ["bug"], "created": "2019-05-10 03:30:51", "closed": "2019-05-19 02:22:31", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "R8 on then NPE happened with okhttp3, AGP 3.4", "body": "I'm facing a problem on enabling R8 with Gradle 3.4 and Okhttp 3.13.1\r\n\r\n```\r\nD8: synthesized for lambda desugaring: Type `okhttp3.Authenticator$-CC` was not found, it is required for default or static interface methods desugaring of `okhttp3.Request okhttp3.-$$Lambda$Authenticator$xBBU2iHkJpDKH0vhaB2vteUyEoc.authenticate(okhttp3.Route, okhttp3.Response)`\r\nD8: synthesized for lambda desugaring: Type `okhttp3.Dns$-CC` was not found, it is required for default or static interface methods desugaring of `java.util.List okhttp3.-$$Lambda$Dns$mTkNcZf2K4euny3_jks6Cac6Az0.lookup(java.lang.String)`\r\nD8: synthesized for lambda desugaring: Type `okhttp3.logging.HttpLoggingInterceptor$Logger$-CC` was not found, it is required for default or static interface methods desugaring of `void okhttp3.logging.-$$Lambda$HttpLoggingInterceptor$Logger$smmbr_QNvGsDM4WCreZZz8uMHLQ.log(java.lang.String)`\r\n```\r\n\r\nSource code build OK but app crash when call any api via network.\r\nThis looks like the okhttp3 problem !\r\n\r\nBtw, I also tried to add \r\n\r\n```\r\n-keep class okhttp3.* { *; }\r\n-keep interface okhttp3.* { *; }\r\n```\r\nbut it still does.\r\n\r\nI already refer this issue https://issuetracker.google.com/issues/131810441\r\n", "url": "https://github.com/square/okhttp/issues/5024", "user": "vegeta2102", "labels": ["bug"], "created": "2019-05-09 04:14:39", "closed": "2019-06-15 03:05:00", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "No async message support and buffer too small.", "body": "onClosing():reason:No async message support and buffer too small. Buffer size: [8,192], Message size: [12,990]\r\n\r\n\t\t\tval message=ByteBuffer.allocate(output.size()).also {\r\n\t\t\t\tit.clear()\r\n\t\t\t\tit.put(output.toByteArray())\r\n\t\t\t}\r\n\t\t\tmessage.flip()\r\n\t\t\tthis.webSocket.send(message.toByteString())", "url": "https://github.com/square/okhttp/issues/5022", "user": "xtsh", "labels": ["bug"], "created": "2019-05-07 17:46:43", "closed": "2019-05-08 02:13:28", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Getting unexpected end of stream on Connection error by Using okhttp with Retrofit for https", "body": "I have similar problem which is reported over [ Issue 1 ](https://github.com/square/okhttp/issues/1490)  and [ Issue 2 ](https://github.com/square/okhttp/issues/1741) , but solution suggested did not worked out for the below yet (**for https**)!\r\n\r\nMy code is as follows\r\n\r\n```\r\nreturn new Retrofit.Builder()\r\n                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\r\n                .client(okHttpClient)\r\n                .addConverterFactory(ScalarsConverterFactory.create())\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .baseUrl(BuildConfig.BASE_URL).build();\r\n\r\nOkHttpClient okHttpClient = new OkHttpClient.Builder()\r\n                .addInterceptor(cache_interceptor)\r\n                .cache(cache)\r\n                .connectTimeout(AppConstants.TIME_OUT, TimeUnit.SECONDS)\r\n                .readTimeout(AppConstants.TIME_OUT, TimeUnit.SECONDS)\r\n                .writeTimeout(AppConstants.TIME_OUT, TimeUnit.SECONDS)\r\n                .connectionSpecs(Collections.singletonList(ConnectionSpec.CLEARTEXT))\r\n                .retryOnConnectionFailure(false)\r\n                .build();\r\n\r\nAppConstants.TIME_OUT = 60;\r\n\r\nprivate final Interceptor cache_interceptor = new Interceptor() {\r\n        @Override\r\n        public Response intercept(Chain chain) throws IOException {\r\n\r\n            Request request = chain.request().newBuilder().addHeader(\"Connection\", \"close\").build();\r\n            return chain.proceed(request);\r\n        }\r\n    };\r\n```\r\n\r\nThe dependencies are \r\n\r\n```\r\nimplementation 'com.squareup.retrofit2:retrofit:2.3.0'\r\nimplementation 'com.squareup.retrofit2:converter-gson:2.3.0'\r\nimplementation 'com.squareup.retrofit2:converter-scalars:2.3.0'\r\nimplementation 'com.squareup.okhttp3:okhttp:3.10.0'\r\nimplementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'\r\n```\r\n\r\nThe URL is https one, pointing to AWS S3 instance.\r\nBut I am getting following error for https URL end point.\r\n\r\n`\r\njava.io.IOException: unexpected end of stream on Connection{s3.amazonaws.com:443, proxy=DIRECT hostAddress=s3.amazonaws.com/XX.XXX.XXX.XX:443 cipherSuite=none protocol=http/1.1}\r\n`\r\n\r\n### If I replace **https** with **http** , there is no error as well !!", "url": "https://github.com/square/okhttp/issues/5021", "user": "sreeharikv112", "labels": ["bug"], "created": "2019-05-07 07:28:43", "closed": "2019-05-07 14:42:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "3.14.1 interceptor regression", "body": "I think this is probably a bug in my client code, but it's a new behaviour so flagging anyway\r\n\r\nhttps://github.com/yschimke/okurl/blob/5a40144ff173e055d60a67f0c51df1ccad07a419/src/main/kotlin/com/baulsupp/okurl/authenticator/RenewingInterceptor.kt#L34\r\n\r\n```\r\nApr 27, 2019 9:25:20 AM com.baulsupp.cooee.ProdAppServices$client$1$1 log\r\nINFO: [33 ms] requestHeadersStart\r\nApr 27, 2019 9:25:20 AM com.baulsupp.cooee.ProdAppServices$client$1$1 log\r\nINFO: [33 ms] requestHeadersEnd\r\nApr 27, 2019 9:25:20 AM com.baulsupp.cooee.ProdAppServices$client$1$1 log\r\nINFO: [34 ms] responseHeadersStart\r\nApr 27, 2019 9:25:20 AM com.baulsupp.cooee.ProdAppServices$client$1$1 log\r\nINFO: [2835 ms] connectionReleased\r\nApr 27, 2019 9:25:20 AM com.baulsupp.cooee.ProdAppServices$client$1$1 log\r\nINFO: [2836 ms] callEnd\r\nException in thread \"OkHttp Dispatcher\" java.lang.IllegalStateException: cannot make a new request because the previous response is still open: please call response.close()\r\n\tat okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:164)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat com.baulsupp.okurl.authenticator.RenewingInterceptor$intercept$1.invokeSuspend(RenewingInterceptor.kt:34)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(Dispatched.kt:238)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.kt:116)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:80)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat com.baulsupp.okurl.authenticator.RenewingInterceptor.intercept(RenewingInterceptor.kt:28)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n\tat okhttp3.RealCall$AsyncCall.execute(RealCall.java:172)\r\n\tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```", "url": "https://github.com/square/okhttp/issues/4986", "user": "yschimke", "labels": ["bug"], "created": "2019-04-27 08:30:11", "closed": "2019-04-27 08:39:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SocketTimeoutException occurs all the time after an SocketTimeoutException occurs.", "body": "must reconnect to wifi or restart your app to get back to normal after a problem occurs.\r\n", "url": "https://github.com/square/okhttp/issues/4981", "user": "KaiXuan666", "labels": ["bug", "needs info"], "created": "2019-04-26 09:34:11", "closed": "2019-12-09 02:13:07", "commits": {}, "ttf": 226.00027777777777, "commitsDetails": []}, {"title": "Some OkHttp versions don't call EventListener.callEnd if interceptor short-circuits", "body": "In older OkHttp versions, when using EventListener, if an interceptor short circuits the request and does not go to network, the only event received is `callStart`.\r\n\r\nIn new OkHttp versions, having the same code, both `callStart` and `callEvent` events are received.\r\n\r\nI don't know which one is the intended version. I certainly prefer the new one. But I would like if this can be clarified in the docs so we can rely on the intended behavior.\r\n\r\nDifference happened somewhere between 3.13.0 and 3.14.1. I will post code example shortly.", "url": "https://github.com/square/okhttp/issues/4980", "user": "hey99xx", "labels": ["bug"], "created": "2019-04-26 03:41:54", "closed": "2019-04-26 07:39:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NullPointerException: Attempt to invoke virtual method 'java.util.Map java.net.CookieHandler.get(java.net.URI, java.util.Map)' on a null object reference", "body": "\r\n\r\nI get this exception:\r\n```java\r\n2019-04-26 00:22:20.298 3186-3265/com.jukusoft.rise E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\r\n    Process: com.jukusoft.rise, PID: 3186\r\n    java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.Map java.net.CookieHandler.get(java.net.URI, java.util.Map)' on a null object reference\r\n        at okhttp3.JavaNetCookieJar.loadForRequest(JavaNetCookieJar.java:61)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:84)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:223)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:172)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n\r\n```\r\n\r\nCode:\r\n```java\r\nimport android.text.TextUtils;\r\n\r\nimport com.jukusoft.rise.BuildConfig;\r\nimport com.jukusoft.rise.Const;\r\n\r\nimport java.net.CookieHandler;\r\n\r\nimport okhttp3.Credentials;\r\nimport okhttp3.JavaNetCookieJar;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.logging.HttpLoggingInterceptor;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\npublic class ServiceGenerator {\r\n\r\n    //protected static final Retrofit retrofit;\r\n\r\n    private static Retrofit.Builder builder =\r\n            new Retrofit.Builder()\r\n                    .baseUrl(Const.getRestServerBaseURL())\r\n                    .addConverterFactory(GsonConverterFactory.create())\r\n                    .client(OkHttpClientFactory.getUnsafeOkHttpClient());\r\n\r\n    private static Retrofit retrofit = builder.build();\r\n\r\n    private static JavaNetCookieJar jncj = new JavaNetCookieJar(CookieHandler.getDefault());\r\n\r\n    private static OkHttpClient.Builder httpClient =\r\n            new OkHttpClient.Builder()\r\n                    .cookieJar(jncj);\r\n\r\n    private static HttpLoggingInterceptor logging =\r\n            new HttpLoggingInterceptor()\r\n                    .setLevel(HttpLoggingInterceptor.Level.BODY);\r\n\r\n    protected ServiceGenerator () {\r\n        //\r\n    }\r\n\r\n    public static <S> S createService(Class<S> serviceClass) {\r\n        return createService(serviceClass, null, null);\r\n    }\r\n\r\n    public static <S> S createService(\r\n            Class<S> serviceClass, String username, String password) {\r\n        if (!TextUtils.isEmpty(username)\r\n                && !TextUtils.isEmpty(password)) {\r\n            String authToken = Credentials.basic(username, password);\r\n            return createService(serviceClass, authToken);\r\n        }\r\n\r\n        return createService(serviceClass, null);\r\n    }\r\n\r\n    public static <S> S createService(\r\n            Class<S> serviceClass, final String authToken) {\r\n        if (!TextUtils.isEmpty(authToken)) {\r\n            AuthenticationInterceptor interceptor =\r\n                    new AuthenticationInterceptor(authToken);\r\n\r\n            if (!httpClient.interceptors().contains(interceptor)) {\r\n                httpClient.addInterceptor(interceptor);\r\n\r\n                builder.client(httpClient.build());\r\n                retrofit = builder.build();\r\n            }\r\n        }\r\n\r\n        //add logging\r\n        if (!httpClient.interceptors().contains(logging)) {\r\n            if (BuildConfig.DEBUG) {\r\n                // development build\r\n                logging.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n            } else {\r\n                // production build\r\n                logging.setLevel(HttpLoggingInterceptor.Level.BASIC);\r\n            }\r\n\r\n            //don't log sensitive information\r\n            logging.redactHeader(\"Authorization\");\r\n\r\n            httpClient.addInterceptor(logging);\r\n            builder.client(httpClient.build());\r\n            retrofit = builder.build();\r\n        }\r\n\r\n        return retrofit.create(serviceClass);\r\n    }\r\n\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/4977", "user": "JuKu", "labels": ["bug"], "created": "2019-04-25 22:26:16", "closed": "2019-04-28 15:29:28", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "R8 produces the following warnings on build", "body": "When using R8 (Android shrinker) the following warnings are produced on build. These are harmless and won't fail to the build but it would be nice get rid of these.\r\n\r\n```\r\nAGPBI: {\"kind\":\"warning\",\"text\":\"Type `org.conscrypt.Conscrypt` was not found, it is required for default or static interface methods desugaring of `java.security.Provider okhttp3.internal.platform.ConscryptPlatform.getProvider()`\",\"sources\":[{\"file\":\"/Projects/Wez/NextEpisode/app/build/intermediates/transforms/FirebasePerformancePlugin/debug/80/okhttp3/internal/platform/ConscryptPlatform.class\"}],\"tool\":\"D8\"}\r\nAGPBI: {\"kind\":\"warning\",\"text\":\"synthesized for lambda desugaring: Type `okhttp3.Dns$-CC` was not found, it is required for default or static interface methods desugaring of `java.util.List okhttp3.-$$Lambda$Dns$mTkNcZf2K4euny3_jks6Cac6Az0.lookup(java.lang.String)`\",\"sources\":[{}],\"tool\":\"D8\"}\r\nAGPBI: {\"kind\":\"warning\",\"text\":\"synthesized for lambda desugaring: Type `okhttp3.Authenticator$-CC` was not found, it is required for default or static interface methods desugaring of `okhttp3.Request okhttp3.-$$Lambda$Authenticator$xBBU2iHkJpDKH0vhaB2vteUyEoc.authenticate(okhttp3.Route, okhttp3.Response)`\",\"sources\":[{}],\"tool\":\"D8\"}\r\n```", "url": "https://github.com/square/okhttp/issues/4975", "user": "wezley98", "labels": ["bug"], "created": "2019-04-24 18:15:47", "closed": "2019-06-15 03:06:01", "commits": {}, "ttf": 51.000277777777775, "commitsDetails": []}, {"title": "java.lang.IllegalStateException: Null interceptor: [null, null, com.argusapm.android.okhttp3.NetWorkInterceptor@1a447fb, com.argusapm.android.okhttp3.NetWorkInterceptor@be568d7, com.argusapm.android.okhttp3.NetWorkInterceptor@3e955c4, com.argusapm.android.okhttp3.NetWorkInterceptor@a302be2]", "body": "java.lang.IllegalStateException: Null interceptor: [null, null, com.argusapm.android.okhttp3.NetWorkInterceptor@1a447fb, com.argusapm.android.okhttp3.NetWorkInterceptor@be568d7, com.argusapm.android.okhttp3.NetWorkInterceptor@3e955c4, com.argusapm.android.okhttp3.NetWorkInterceptor@a302be2]\r\n    at okhttp3.OkHttpClient.<init>(apmsdk:283)\r\n    at okhttp3.OkHttpClient$Builder.build(apmsdk:1040)java.lang.IllegalStateException: Null interceptor: [null, null, com.argusapm.android.okhttp3.NetWorkInterceptor@1a447fb, com.argusapm.android.okhttp3.NetWorkInterceptor@be568d7, com.argusapm.android.okhttp3.NetWorkInterceptor@3e955c4, com.argusapm.android.okhttp3.NetWorkInterceptor@a302be2]\r\n    at okhttp3.OkHttpClient.<init>(apmsdk:283)\r\n    at okhttp3.OkHttpClient$Builder.build(apmsdk:1040)\r\n\r\n\r\nThe following is my code:\r\n\r\npublic class NetWorkInterceptor implements Interceptor {\r\n\r\n    private static final String TAG = Env.TAG;\r\n\r\n    private OkHttpData mOkHttpData;\r\n\r\n    public NetWorkInterceptor() {\r\n    }\r\n\r\n    @Override\r\n    public Response intercept(Chain chain) throws IOException {\r\n\r\n        long startNs = System.currentTimeMillis();\r\n\r\n        mOkHttpData = new OkHttpData();\r\n        mOkHttpData.startTime = startNs;\r\n\r\n        if (Env.DEBUG) {\r\n            Log.d(TAG, \"okhttp request \u5f00\u59cb\u65f6\u95f4\uff1a\" + mOkHttpData.startTime);\r\n        }\r\n\r\n        Request request = chain.request();\r\n\r\n        recordRequest(request);\r\n\r\n        Response response;\r\n\r\n        try {\r\n            response = chain.proceed(request);\r\n        } catch (IOException e) {\r\n            if (Env.DEBUG) {\r\n                e.printStackTrace();\r\n                Log.e(TAG, \"HTTP FAILED: \" + e);\r\n            }\r\n            throw e;\r\n        }\r\n\r\n        mOkHttpData.costTime = System.currentTimeMillis() - startNs;\r\n\r\n        if (Env.DEBUG) {\r\n            Log.d(TAG, \"okhttp chain.proceed \u8017\u65f6\uff1a\" + mOkHttpData.costTime);\r\n        }\r\n\r\n        recordResponse(response);\r\n\r\n        if (Env.DEBUG) {\r\n            Log.d(TAG, \"okhttp chain.proceed end.\");\r\n        }\r\n\r\n        DataRecordUtils.recordUrlRequest(mOkHttpData);\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * request\r\n     */\r\n    private void recordRequest(Request request) {\r\n        if (request == null || request.url() == null || TextUtils.isEmpty(request.url().toString())) {\r\n            return;\r\n        }\r\n\r\n        mOkHttpData.url = request.url().toString();\r\n\r\n        RequestBody requestBody = request.body();\r\n        if (requestBody == null) {\r\n            mOkHttpData.requestSize = request.url().toString().getBytes().length;\r\n            if (Env.DEBUG) {\r\n                Log.d(TAG, \"okhttp request \u4e0a\u884c\u6570\u636e\uff0c\u5927\u5c0f\uff1a\" + mOkHttpData.requestSize);\r\n            }\r\n            return;\r\n        }\r\n\r\n        long contentLength = 0;\r\n        try {\r\n            contentLength = requestBody.contentLength();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        if (contentLength > 0) {\r\n            mOkHttpData.requestSize = contentLength;\r\n        } else {\r\n            mOkHttpData.requestSize = request.url().toString().getBytes().length;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u8bbe\u7f6e code responseSize\r\n     */\r\n    private void recordResponse(Response response) {\r\n        if (response == null) {\r\n            return;\r\n        }\r\n\r\n        mOkHttpData.code = response.code();\r\n\r\n        if (Env.DEBUG) {\r\n            Log.d(TAG, \"okhttp chain.proceed \u72b6\u6001\u7801\uff1a\" + mOkHttpData.code);\r\n        }\r\n\r\n        if (!response.isSuccessful()) {\r\n            return;\r\n        }\r\n\r\n        ResponseBody responseBody = response.body();\r\n        if (responseBody == null) {\r\n            return;\r\n        }\r\n\r\n        long contentLength = responseBody.contentLength();\r\n\r\n        if (contentLength > 0) {\r\n            if (Env.DEBUG) {\r\n                Log.d(TAG, \"\u76f4\u63a5\u901a\u8fc7responseBody\u53d6\u5230contentLength:\" + contentLength);\r\n            }\r\n        } else {\r\n            BufferedSource source = responseBody.source();\r\n            if (source != null) {\r\n                try {\r\n                    source.request(Long.MAX_VALUE);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                Buffer buffer = source.buffer();\r\n                contentLength = buffer.size();\r\n\r\n                if (Env.DEBUG) {\r\n                    Log.d(TAG, \"\u901a\u8fc7responseBody.source()\u624d\u53d6\u5230contentLength:\" + contentLength);\r\n                }\r\n            }\r\n        }\r\n\r\n        mOkHttpData.responseSize = contentLength;\r\n\r\n        if (Env.DEBUG) {\r\n            Log.d(TAG, \"okhttp \u63a5\u6536\u5b57\u8282\u6570\uff1a\" + mOkHttpData.responseSize);\r\n        }\r\n    }\r\n}\r\n", "url": "https://github.com/square/okhttp/issues/4972", "user": "guanbo123456", "labels": ["bug"], "created": "2019-04-22 02:55:53", "closed": "2019-04-26 21:09:10", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "App crash at start up on Android 8.0", "body": "Android Studio: 3.3.2\r\nDevice OS: 26\r\nKotlin version: 1.3.30\r\nGradle wrapper: 4.10.1\r\nSteps to reproduce:\r\n1. Create a new project using Android Studio, set the minimal sdk level to 26, and check \"Use AndroidX artifact\"\r\n2. Without changing anything, add this line to the app's dependency\r\n`    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'`\r\n3. Run the app on Android 8.0 (SDK 26)\r\n\r\nThe app will crash when starting up, with this stacktrace\r\n```\r\njava.lang.RuntimeException: Unable to instantiate activity ComponentInfo{peike.testokhttp/peike.testokhttp.MainActivity}: java.lang.ClassNotFoundException: Didn't find class \"peike.testokhttp.MainActivity\" on path: DexPathList[[zip file \"/data/app/peike.testokhttp-8XiJCpXfzD7iFbbBYv9HJw==/base.apk\"],nativeLibraryDirectories=[/data/app/peike.testokhttp-8XiJCpXfzD7iFbbBYv9HJw==/lib/x86, /system/lib, /vendor/lib]]\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2718)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2892)\r\n        at android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1593)\r\n        at android.os.Handler.dispatchMessage(Handler.java:105)\r\n        at android.os.Looper.loop(Looper.java:164)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6541)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)\r\n     Caused by: java.lang.ClassNotFoundException: Didn't find class \"peike.testokhttp.MainActivity\" on path: DexPathList[[zip file \"/data/app/peike.testokhttp-8XiJCpXfzD7iFbbBYv9HJw==/base.apk\"],nativeLibraryDirectories=[/data/app/peike.testokhttp-8XiJCpXfzD7iFbbBYv9HJw==/lib/x86, /system/lib, /vendor/lib]]\r\n        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:93)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:379)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:312)\r\n        at android.app.Instrumentation.newActivity(Instrumentation.java:1173)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2708)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2892)\u00a0\r\n        at android.app.ActivityThread.-wrap11(Unknown Source:0)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1593)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:105)\u00a0\r\n        at android.os.Looper.loop(Looper.java:164)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:6541)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)\u00a0\r\n    \tSuppressed: java.lang.NoClassDefFoundError: Failed resolution of: Landroidx/appcompat/app/AppCompatActivity;\r\n        at java.lang.VMClassLoader.findLoadedClass(Native Method)\r\n        at java.lang.ClassLoader.findLoadedClass(ClassLoader.java:738)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:363)\r\n        \t\t... 12 more\r\n     Caused by: java.lang.ClassNotFoundException: Didn't find class \"androidx.appcompat.app.AppCompatActivity\" on path: DexPathList[[zip file \"/data/app/peike.testokhttp-8XiJCpXfzD7iFbbBYv9HJw==/base.apk\"],nativeLibraryDirectories=[/data/app/peike.testokhttp-8XiJCpXfzD7iFbbBYv9HJw==/lib/x86, /system/lib, /vendor/lib]]\r\n        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:93)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:379)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:312)\r\n        \t\t... 15 more\r\n```\r\n\r\nBut this crash will not happen on a device running Android 9.0, or on the same 8.0 device but this is added in the gradle\r\n```\r\ncompileOptions {\r\n    sourceCompatibility = JavaVersion.VERSION_1_8\r\n    targetCompatibility = JavaVersion.VERSION_1_8\r\n}\r\n```\r\nIs this a bug?", "url": "https://github.com/square/okhttp/issues/4969", "user": "CollinDai", "labels": ["bug"], "created": "2019-04-21 02:48:18", "closed": "2019-04-22 22:19:45", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "CVE-2018-20200: CertificatePinner.java allows man-in-the-middle attackers to bypass certificate pinning", "body": "Apparently there was [CVE-2018-20200](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-20200) for an issue described as\r\n\r\n> CertificatePinner.java in OkHttp 3.x through 3.12.0 allows man-in-the-middle attackers to bypass certificate pinning by changing SSLContext and the boolean values while hooking the application.\r\n\r\nA report is at https://cxsecurity.com/issue/WLB-2018120252 was this forwarded already?", "url": "https://github.com/square/okhttp/issues/4967", "user": "carnil", "labels": ["bug"], "created": "2019-04-19 09:16:04", "closed": "2019-04-19 11:05:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OkHostnameVerifier does not check common-name of certificates", "body": "The current implementation of the OkHostnameVerifier does not appear to conform to [RFC 2818, Section 3.1](https://tools.ietf.org/html/rfc2818#section-3.1)\r\n\r\nFrom that document:\r\n\r\n>   If a subjectAltName extension of type dNSName is present, that MUST\r\n>   be used as the identity. Otherwise, the (most specific) Common Name\r\n>   field in the Subject field of the certificate MUST be used. Although\r\n>   the use of the Common Name is existing practice, it is deprecated and\r\n>   Certification Authorities are encouraged to use the dNSName instead.\r\n\r\nAs of 3.14.0, in the implementation of OkHostnameVerifier, only the subject alternate names are being used.", "url": "https://github.com/square/okhttp/issues/4966", "user": "kalexmills", "labels": ["bug"], "created": "2019-04-18 15:21:19", "closed": "2019-04-18 15:57:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Permission Denied: Connect after timeouts", "body": "There is a change in behaviour introduced in `3.14.0`. The background is I have a test to make sure that after many client timeouts, subsequent requests succeed.\r\n\r\nThe test goes like this:\r\n\r\n1. Start a web server\r\n2. Create a client with a 10 millisecond timeout\r\n3. Fire 200 calls at the server (some will finish in time, many will timeout)\r\n4. Use a client with a default timeout to call the server\r\n\r\nIn this case, I expect many calls in step 3 to fail, however after going back to a normal timeout the call in step 4 should succeed. This test passes with `3.13.1` and earlier, however after upgrading to `3.14.0` (and `3.14.1`) the call with the \"normal\" client fails with a SocketException.\r\n\r\nHere is the test:\r\n\r\n````java\r\n    @Test\r\n    public void canHandleStuffWithoutBreaking() throws InterruptedException, IOException {\r\n        server = httpServer()\r\n            .addHandler(Method.GET, \"/full\", (req, resp, pp) -> {\r\n                try {\r\n                    resp.write(\"A full length message\");\r\n                } catch (Exception ignored) {\r\n                }\r\n            })\r\n            .addHandler(Method.GET, \"/chunks\", (req, resp, pp) -> {\r\n                Thread.sleep(4);\r\n                try {\r\n                    resp.sendChunk(\"Chunk one\");\r\n                    resp.sendChunk(\"Chunk two\");\r\n                } catch (Exception ignored) {\r\n                }\r\n            })\r\n            .start();\r\n\r\n        OkHttpClient shortReader = ClientUtils.client.newBuilder()\r\n            .readTimeout(10, TimeUnit.MILLISECONDS)\r\n            .build();\r\n\r\n        int calls = 200;\r\n        CountDownLatch latch = new CountDownLatch(calls * 2);\r\n        for (int i = 0; i < calls; i++) {\r\n            Callback responseCallback = new Callback() {\r\n                public void onFailure(Call call, IOException e) {\r\n                    latch.countDown();\r\n                }\r\n                public void onResponse(Call call, Response response) {\r\n                    latch.countDown();\r\n                    response.close();\r\n                }\r\n            };\r\n            shortReader.newCall(request(server.uri().resolve(\"/full\")).build()).enqueue(responseCallback);\r\n            shortReader.newCall(request(server.uri().resolve(\"/chunks\")).build()).enqueue(responseCallback);\r\n        }\r\n\r\n        assertThat(latch.await(2, TimeUnit.MINUTES), is(true));\r\n\r\n        try (Response resp = call(request(server.uri().resolve(\"/full\")))) {\r\n            assertThat(resp.body().string(), is(\"A full length message\"));\r\n        }\r\n        try (Response resp = call(request(server.uri().resolve(\"/chunks\")))) {\r\n            assertThat(resp.body().string(), is(\"Chunk oneChunk two\"));\r\n        }\r\n    }\r\n````\r\n\r\nThe exception is thrown by `try (Response resp = call(request(server.uri().resolve(\"/full\")))) {`\r\n\r\n    Caused by: java.net.SocketException: Permission denied: connect\r\n\tat java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)\r\n\tat java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)\r\n\tat java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)\r\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)\r\n\tat java.base/java.net.Socket.connect(Socket.java:591)\r\n\tat okhttp3.internal.platform.Platform.connectSocket(Platform.java:130)\r\n\tat okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:263)\r\n\tat okhttp3.internal.connection.RealConnection.connect(RealConnection.java:183)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224)\r\n\tat okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:107)\r\n\tat okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:87)\r\n\tat okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n\tat okhttp3.RealCall.execute(RealCall.java:81)\r\n\r\nNote that using HTTP and HTTPS has the same result.\r\n\r\nThat test depends on various utilities however it can be run if the repo is cloned: https://github.com/3redronin/mu-server/blob/master/src/test/java/io/muserver/FlakyClientTest.java\r\n\r\nThe test fails when changing the okhttpclient in pom.xml to `3.14.0`\r\n\r\nIf it helps, I can try to isolate this further into a smaller standalone test.", "url": "https://github.com/square/okhttp/issues/4965", "user": "danielflower", "labels": ["bug"], "created": "2019-04-18 15:21:09", "closed": "2019-09-11 02:05:24", "commits": {}, "ttf": 145.00027777777777, "commitsDetails": []}, {"title": "Issues with retry on connection failure", "body": "Most of our clients are receiving this kind of exceptions per our logs.\r\n\r\n![1](https://user-images.githubusercontent.com/1249919/56342297-a882ab00-61c8-11e9-8b31-86638e68005b.PNG)\r\n![2](https://user-images.githubusercontent.com/1249919/56342298-a882ab00-61c8-11e9-9731-778f83885fff.PNG)\r\n\r\nWhat they complain about is that data is uploaded to the server but mobile still shows as not uploaded. I have researched a bit and found that okHttp is retrying requests on connection failure and guess it is related to this topic. I can't create a case while debugging the app. I have tried to connect to 10.10.10.1, it is getting socket timeout, but it seems that okhttp doesn't retry this request. It just returns on this line `if (!streamAllocation.hasMoreRoutes()) return false;` (**okhttp v3.12.1**). I can't see any logs on retrying in logcat or stetho. How to reproduce this case? Should okHttp retry in this case? Will disabling retry help in this case?", "url": "https://github.com/square/okhttp/issues/4963", "user": "androideveloper", "labels": ["bug"], "created": "2019-04-18 07:07:22", "closed": "2019-04-26 21:15:37", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "okhttp-bom includes incorrect maven coordinate for logging-interceptor", "body": "```\r\n<dependency>\r\n  <groupId>${project.groupId}</groupId>\r\n  <artifactId>okhttp-logging-interceptor</artifactId>\r\n  <version>${project.version}</version>\r\n</dependency>\r\n```\r\n\r\nThe artifactId should be `logging-interceptor` not `okhttp-logging-interceptor`.", "url": "https://github.com/square/okhttp/issues/4960", "user": "robfletcher", "labels": ["bug"], "created": "2019-04-16 22:31:49", "closed": "2019-04-17 00:58:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "HostName becomes \"[localhost]\" inside MockWebServer RecordedRequest Constructor for ipv6 host", "body": "### Symptom\r\n\r\n**RecordedRequest#getRequestUrl() is returning null because hostname is set to \"[localhost]\", which causes IllegalArgumentException inside HttpUrl#parse().**\r\n\r\n### Reproducible Env\r\n\r\nSimple test using MockWebServer can reproduce this issue.\r\n\r\nAffected versions: Above 3.12.0 (Probably related to https://github.com/square/okhttp/pull/4235)\r\nOS: macOS 10.14.4, Android API Level 28\r\nNetwork env: Secure VPN (ipv6)\r\n\r\n#### Test\r\n\r\n```kotlin\r\npackage auth\r\n\r\nimport auth.model.AccessTokenResponse\r\nimport io.reactivex.observers.TestObserver\r\nimport okhttp3.mockwebserver.MockResponse\r\nimport okhttp3.mockwebserver.MockWebServer\r\nimport org.junit.jupiter.api.Assertions\r\nimport org.junit.jupiter.api.Test\r\nimport retrofit2.Retrofit\r\nimport retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\n\r\n/**\r\n * @author kevin.kang. Created on 15/04/2019..\r\n */\r\nclass MockWebServerTest {\r\n    @Test fun requestUrl() {\r\n        val server = MockWebServer()\r\n        server.enqueue(MockResponse().setResponseCode(200))\r\n        val api = Retrofit.Builder().baseUrl(server.url(\"/\"))\r\n            .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\r\n            .addConverterFactory(GsonConverterFactory.create()).build().create(AuthApi::class.java)\r\n        api.issueAccessToken(\r\n            authCode = \"auth_code\",\r\n            clientId = \"some_client_id\",\r\n            redirectUri = \"https://example.com/oauth\",\r\n            androidKeyHash = \"sample_key_hash\"\r\n        ).subscribe(TestObserver<AccessTokenResponse>())\r\n        val request = server.takeRequest()\r\n        Assertions.assertNotNull(request.requestUrl)\r\n        server.shutdown()\r\n    }\r\n}\r\n```\r\n\r\nSince the reproducibility might depend on the network environment, I attach extra debug infos.\r\n\r\nHostname becomes \"[localhost]\" inside the constructor of RecordedRequest.\r\n\r\n```java\r\nInetAddress inetAddress = socket.getLocalAddress(); // inetAddress: \"/0:0:0:0:0:0:0:1\"\r\nString hostname = inetAddress.getHostName(); // hostname: \"localhost\"\r\nif (inetAddress instanceof Inet6Address) {\r\nhostname = \"[\" + hostname + \"]\"; // hostname: \"[localhost]\" \r\n```\r\n\r\nUtil#canonicalizeHost() method is determining whether a host is ipv6 address by checking if it contains colon so \"[localhost]\" passes this if block.\r\n\r\n```java\r\n  public static String canonicalizeHost(String host) {\r\n    // If the input contains a :, it\u2019s an IPv6 address.\r\n    if (host.contains(\":\")) {\r\n      // If the input is encased in square braces \"[...]\", drop 'em.\r\n      InetAddress inetAddress = host.startsWith(\"[\") && host.endsWith(\"]\")\r\n          ? decodeIpv6(host, 1, host.length() - 1)\r\n          : decodeIpv6(host, 0, host.length());\r\n      if (inetAddress == null) return null;\r\n      byte[] address = inetAddress.getAddress();\r\n      if (address.length == 16) return inet6AddressToAscii(address);\r\n      if (address.length == 4) return inetAddress.getHostAddress(); // An IPv4-mapped IPv6 address.\r\n      throw new AssertionError(\"Invalid IPv6 address: '\" + host + \"'\");\r\n    }\r\n    ...\r\n  }\r\n```\r\n\r\nI assume that either:\r\n\r\n1. hostName should never be localhost inside RecordedRequest's constructor (should be 0:0:0:0:0:0:0:1 in this case)\r\n2. Or the logic of determining ipv6 address inside Util#canonicalizeHost() should be improved.\r\n\r\nThis is also reproduced in OkHttp tests. Will be happy to create a PR.\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4950", "user": "CoderSpinoza", "labels": ["bug"], "created": "2019-04-15 03:06:25", "closed": "2019-09-11 02:07:33", "commits": {}, "ttf": 148.00027777777777, "commitsDetails": []}, {"title": "HEAD requests break if the response contains the content-length header over HTTP2", "body": "This is similar to #2998 except it only happens on HTTP2 requests. The following example with okhttp `3.14.1` shows the issue:\r\n\r\n````java\r\n@Test\r\npublic void headOverHttp2() throws IOException {\r\n    try (Response resp = client.newCall(\r\n        new Request.Builder()\r\n            .head()\r\n            .url(\"https://http2.akamai.com/demo\")\r\n            .build()\r\n    ).execute()) {\r\n        System.out.println(\"resp.protocol() = \" + resp.protocol().toString());\r\n        System.out.println(\"resp.header(\\\"content-length\\\") = \" + resp.header(\"content-length\"));\r\n        System.out.println(\"resp.body().contentLength() = \" + resp.body().contentLength());\r\n        System.out.println(\"resp.body().bytes().length = \" + resp.body().bytes().length);\r\n    }\r\n}\r\n````\r\n\r\nI get this output:\r\n\r\n\tresp.protocol() = h2\r\n\tresp.header(\"content-length\") = 2421\r\n\tresp.body().contentLength() = 2421\r\n\r\n\tjava.io.IOException: Content-Length (2421) and stream length (0) disagree\r\n\t\tat okhttp3.ResponseBody.bytes(ResponseBody.java:139)\r\n\r\nIt is `resp.body().bytes().length` that throws the exception. When not using HTTP2, the `resp.body().contentLength()` correctly returns 0, as does `resp.body().bytes().length`.", "url": "https://github.com/square/okhttp/issues/4948", "user": "danielflower", "labels": ["bug"], "created": "2019-04-14 15:01:01", "closed": "2019-12-31 19:49:54", "commits": {}, "ttf": 261.0002777777778, "commitsDetails": []}, {"title": "Broken kotlin source compatibility", "body": "I think this is hidden because KotlinSourceCompatibilityTest is in the same package \r\n\r\nWas: import okhttp3.CipherSuite.forJavaName\r\nNow import okhttp3.CipherSuite.Companion.forJavaName", "url": "https://github.com/square/okhttp/issues/4937", "user": "yschimke", "labels": ["bug"], "created": "2019-04-13 08:27:12", "closed": "2019-06-09 02:23:49", "commits": {}, "ttf": 56.000277777777775, "commitsDetails": []}, {"title": "Invalid Malformed URL", "body": "The path of a URL contains a colon symbol which is causing the call to fail.\r\n\r\nUsing version com.squareup.retrofit2:retrofit:2.5.0\r\n\r\nCode:\r\n```\r\npublic interface ClientApi {\r\n    @PUT(\"user:email={email}/login\")\r\n    Call<WrappedResponse<String>> login(@Path(\"email\") String email, @Body String pass);\r\n...\r\n```\r\n\r\nStack trace:\r\n```\r\nCaused by: java.lang.IllegalArgumentException: Malformed URL. Base: https://test.com/restapi/, Relative: user:email=me@test.com/login\r\n        at retrofit2.RequestBuilder.get(RequestBuilder.java:221)\r\n        at retrofit2.RequestFactory.create(RequestFactory.java:111)\r\n        at retrofit2.OkHttpCall.createRawCall(OkHttpCall.java:190)\r\n        at retrofit2.OkHttpCall.execute(OkHttpCall.java:173)\r\n        at Service.login(Service.java:38)\r\n```\r\n\r\nThink the code needs to treat the relative portion of the URL like an absolute URL when parsing.", "url": "https://github.com/square/okhttp/issues/4934", "user": "nathancassano", "labels": ["bug"], "created": "2019-04-12 23:47:14", "closed": "2019-04-13 13:38:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "onWebsocketError Read error: ssl=0x7e80a29c00: I/O error during system call, Connection reset by peer response:null  and onWebsocketError Socket is closed response:null", "body": "I used okhttp for websocket but okhttp has given this error log and interrupt websocket connection:\r\n```\r\n[Meteor]  onFailure onWebsocketError Read error: ssl=0x7e80a29c00: I/O error during system call, Connection reset by peer response:null\r\n[Meteor] onDisconnect \r\n[Meteor] onFail \r\n```\r\n\r\nMy meteor websocket connection method:\r\n\r\n ```\r\n\r\n  void openConnection(){\r\n       try {\r\n\r\n            OKHttpUtil okHttpUtil = new OKHttpUtil();\r\n\r\n            Request request = new Request.Builder().url(Urls.getInstance().getMeteorUrl()).build();\r\n            OkHttpClient okHttpClient = okHttpUtil.getNewClient(null);\r\n            mWebSocket = okHttpClient.newWebSocket(request, mWebSocketListener);\r\n\r\n        } catch (Exception e) {\r\n            Mylog.printStackTrace(TAG + \" openConnection error \", e);\r\n\r\n            mCallbackProxy.onException(e);\r\n            disconnectOnCallback(false);\r\n        }\r\n}\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/4930", "user": "gelbertgel", "labels": ["bug"], "created": "2019-04-12 12:10:17", "closed": "2019-04-13 13:38:48", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "java.net.SocketException: Bad file descriptor (Write failed)", "body": "I'm reading a file and sending each line of the file to a server using okHttp. The file is really big, almost 10 millions of lines. \r\n\r\nI'm reusing the client to send the requests, even though after some 4 thousand or 5 thousand requests I get the following stack trace:\r\n\r\n```\r\njava.net.SocketException: Bad file descriptor (Write failed)\r\n\r\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\r\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)\r\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:155)\r\n\tat okio.Okio$1.write(Okio.java:79)\r\n\tat okio.AsyncTimeout$1.write(AsyncTimeout.java:180)\r\n\tat okio.RealBufferedSink.flush(RealBufferedSink.java:224)\r\n\tat okhttp3.internal.http1.Http1Codec.finishRequest(Http1Codec.java:166)\r\n\tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:84)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:254)\r\n\tat okhttp3.RealCall.execute(RealCall.java:92)\r\n```\r\n\r\nCode example:\r\n```\r\nval lines = Files.lines(Paths.get(File(\"myfile.csv\").toURI()))\r\n\r\nval httpClientConfig = HttpClientConfig()\r\nval builder = getBuilder(httpClientConfig)\r\nvar client = builder.build()\r\n\r\nlines.parallel().forEach {\r\n\ttry {\r\n\t        val body = RequestBody.create(HttpClient.MEDIA_TYPE, JSONParser.toJSON({\"myJson\" : \"test\"}))\r\n\t\tval requestBuilder = Request.Builder()\r\n\t\t\t.url(Analytics.endpointURL)\r\n\t\t\t.post(body)\r\n\r\n\t\tval request = requestBuilder.build()\r\n\t\tclient.newCall(request).execute()\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/4921", "user": "victorlaerte", "labels": ["bug"], "created": "2019-04-09 21:10:15", "closed": "2019-04-13 13:40:40", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Exception in thread \"OkHttp Dispatcher\" java.lang.NullPointerException", "body": "`mvn springboot:run`  is ok.\r\n\r\n`java -jar target/*.jar`  error.\r\n```\r\nException in thread \"OkHttp Dispatcher\" java.lang.NullPointerException\r\n        at okhttp3.internal.ws.RealWebSocket.failWebSocket(RealWebSocket.java:570)\r\n        at okhttp3.internal.ws.RealWebSocket$1.onResponse(RealWebSocket.java:211)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:174)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n2019-04-09 23:28:10.123  INFO 41265 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'\r\n2019-04-09 23:28:10.320  INFO 41265 --- [           main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService 'taskScheduler'\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/4919", "user": "lly835", "labels": ["bug", "needs info"], "created": "2019-04-09 15:33:39", "closed": "2019-05-19 02:23:51", "commits": {}, "ttf": 39.000277777777775, "commitsDetails": []}, {"title": "java.lang.IllegalArgumentException: Expected URL scheme 'http' or 'https' but no colon was found", "body": "Hi,\r\n\r\nAfter searching google, Github issue etc..., I didn't find the answer to resolve this issue.\r\nI found the #4322 and this is only because of the cache.\r\n\r\nReact Native: 59+\r\nbuildToolsVersion: 28.03\r\nminSdkVersion: 16\r\ncompileSdkVersion: 28\r\ntargetSdkVersion: 28\r\nGradle: 3.3.1\r\n\r\n- This error comes wit ADB install signed apk package on a REAL device.\r\n- Debugging and release run in react native works without problem.\r\n\r\nError:\r\n```\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: FATAL EXCEPTION: mqt_native_modules\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: Process: com.app_app, PID: 22070\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: java.lang.IllegalArgumentException: Expected URL scheme 'http' or 'https' but no colon was found\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat okhttp3.HttpUrl$Builder.parse(HttpUrl.java:1333)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat okhttp3.HttpUrl.get(HttpUrl.java:916)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat okhttp3.Request$Builder.url(Request.java:165)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat com.facebook.react.modules.websocket.WebSocketModule.connect(WebSocketModule.java:93)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat java.lang.reflect.Method.invoke(Native Method)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat com.facebook.react.bridge.JavaMethodWrapper.invoke(JavaMethodWrapper.java:372)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat com.facebook.react.bridge.JavaModuleWrapper.invoke(JavaModuleWrapper.java:158)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat com.facebook.react.bridge.queue.NativeRunnable.run(Native Method)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat android.os.Handler.handleCallback(Handler.java:789)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat com.facebook.react.bridge.queue.MessageQueueThreadHandler.dispatchMessage(MessageQueueThreadHandler.java:29)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat android.os.Looper.loop(Looper.java:164)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat com.facebook.react.bridge.queue.MessageQueueThreadImpl$4.run(MessageQueueThreadImpl.java:232)\r\n04-09 16:53:02.841 22070 22093 E AndroidRuntime: \tat java.lang.Thread.run(Thread.java:764)\r\n04-09 16:53:02.856 22070 22075 I zygote64: Do partial code cache collection, code=236KB, data=142KB\r\n04-09 16:53:02.857 17048 25342 W ActivityManager:   Force finishing activity com.app_app/.MainActivity\r\n04-09 16:53:02.857 22070 22075 I zygote64: After code cache collection, code=231KB, data=140KB\r\n04-09 16:53:02.857 22070 22075 I zygote64: Increasing code cache capacity to 1024KB\r\n04-09 16:53:02.863 17048 17163 I ActivityManager: Showing crash dialog for package com.app_app u0```\r\n", "url": "https://github.com/square/okhttp/issues/4918", "user": "MrDatastorage", "labels": ["bug"], "created": "2019-04-09 14:58:58", "closed": "2019-04-13 13:45:08", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "EventListener method's are not called", "body": "We created an EventListener implementation to collect metrics data for insights.\r\nWe collect the data and thru a helper class we push it fire-and-forget to a dedicated api on our back-end.\r\n\r\nOn dev environments (debug run) and unit tests (mocked apps) we are able to successfully collect insights data (all EventListener methods get called).\r\nOn staging and prod environments, we have cases where:\r\na- `callStart()`, `dnsStart()`, `dnsEnd()`, `connectStart()` were called, **but** `secureConnectStart()` nor `secureConnectEnd()` nor `connectEnd()` nor `connectFailed()` nor `connectionAcquired()` were called\r\nb- `callStart()` to `responseHeadersEnd()` were called, **but** `responseBodyStart()` nor `responseBodyEnd()` nor `connectionReleased()` nor `callEnd()` were called\r\n\r\nFor all the cases:\r\n- okHttp v3.11.0 on dev, staging & prod\r\n- okHttp v3.12.x was also tested (dev and staging) with the same behavior\r\n- we call secured endpoints (https with valid TLS certificates) \r\n- the app has no weird functioning (no missed responses from backend nor missing payload from responses) \r\n- presence of `HttpLoggingInterceptor` in the interceptor chain (enabled or not) makes no difference (at least not worse)\r\n\r\nHere you can take a look at the two classes that handle the collect and push the metrics:\r\nhttps://gist.github.com/rkuzner/1b2e2224c4586fc7d0eb390f5f59632f", "url": "https://github.com/square/okhttp/issues/4917", "user": "rkuzner", "labels": ["bug", "needs info"], "created": "2019-04-09 14:40:04", "closed": "2019-05-19 02:24:04", "commits": {}, "ttf": 39.000277777777775, "commitsDetails": []}, {"title": "NullPointerException in Http1ExchangeCodec.readResponseHeaders() in OkHttp 3.14.0", "body": "Since upgrading OkHttp from 3.13.1 to 3.14.0 in our Android app, some of our users experience crashes because of a NullPointerException in [`Http1ExchangeCodec` line 233](https://github.com/square/okhttp/blob/df95c77adfbf4f5ddd30bfc6a2bb684295d7d313/okhttp/src/main/java/okhttp3/internal/http1/Http1ExchangeCodec.java#L233).\r\n\r\nRelevant stacktrace:\r\n```\r\nFatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'okhttp3.Route okhttp3.internal.connection.RealConnection.route()' on a null object reference\r\n       at okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.java:233)\r\n       at okhttp3.internal.connection.RealConnection.createTunnel(RealConnection.java:400)\r\n       at okhttp3.internal.connection.RealConnection.connectTunnel(RealConnection.java:236)\r\n       at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:177)\r\n       at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224)\r\n       at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:107)\r\n       at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:87)\r\n       at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:162)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n...\r\n```\r\n\r\nThe majority of the crashes occur on Motorola devices. We have not been able to reproduce the issue on a test device, but it seems related to the app forcing a request over WiFi, and users having a proxy set on the device.\r\n\r\nThe cause of the NullPointerException is easy to find from the stacktrace, though. From [RealConnection](https://github.com/square/okhttp/blob/df95c77adfbf4f5ddd30bfc6a2bb684295d7d313/okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java#L395):\r\n```\r\n      Http1ExchangeCodec tunnelCodec = new Http1ExchangeCodec(null, null, source, sink);\r\n      source.timeout().timeout(readTimeout, MILLISECONDS);\r\n      sink.timeout().timeout(writeTimeout, MILLISECONDS);\r\n      tunnelCodec.writeRequest(tunnelRequest.headers(), requestLine);\r\n      tunnelCodec.finishRequest();\r\n      Response response = tunnelCodec.readResponseHeaders(false)\r\n          .request(tunnelRequest)\r\n          .build();\r\n```\r\nThe second argument to `Http1ExchangeCodec()` (realConnection) is passed as `null`, which causes `readResponseHeaders()` to throw a NullPointerException when an EOFException is encountered.", "url": "https://github.com/square/okhttp/issues/4915", "user": "bvschaik", "labels": ["bug"], "created": "2019-04-09 09:30:38", "closed": "2019-05-19 02:25:02", "commits": {"b2c85ba3dd00a484c323b8f9335c79b31145fd51": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "b2c85ba3dd00a484c323b8f9335c79b31145fd51", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["a4c059967d636187b30afda0eab66e639e1cac04", "0db2005de3c2ff245fddf7599fbdd7ce0a9a7b6d"], "nameRev": "b2c85ba3dd00a484c323b8f9335c79b31145fd51 tags/parent-3.14.2~4", "commitMessage": "Merge pull request #4936 from TangHuaiZhe/dev2\n\nFix #4915 nullPointerException caused by realConnection is null", "commitDateTime": "2019-04-13 09:24:46", "authoredDateTime": "2019-04-13 09:24:46", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/http1/Http1ExchangeCodec.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http1ExchangeCodec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(boolean)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Exclude existing maintenance branches from circle ci", "body": "https://github.com/square/okhttp/pull/4901\r\n\r\ne.g. https://circleci.com/gh/square/okhttp/910?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link", "url": "https://github.com/square/okhttp/issues/4903", "user": "yschimke", "labels": ["bug"], "created": "2019-04-08 05:35:44", "closed": "2019-04-09 18:35:34", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Okhttp multiple response handling for single http/2 request android", "body": "I have an android application and I am trying to make an http/2 call with okHttp version 3.13.1, in my case for one request I will be receiving two responses sequentially separated by a time interval of 4 seconds from the server, but with the okHttp client integrated in my android application, I am getting only one response and if I try to send the same request using curl command I am able to receive two responses sequentially from the server.\r\n\r\nIs there a way to handle multiple responses for a single http/2 request with OKHttp in android?\r\n\r\nI tried various ways, but no luck:( Would be more than happy, if anyone could provide your inputs.\r\n\r\nThanks for your help and time in advance!!!", "url": "https://github.com/square/okhttp/issues/4885", "user": "dsrisandhiya", "labels": ["bug", "needs info"], "created": "2019-04-05 22:30:14", "closed": "2019-04-13 13:48:18", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "java.lang.IllegalStateException: Unable to extract the trust manager on AndroidPlatform, sslSocketFactory is class org.conscrypt.OpenSSLSocketFactoryImpl at okhttp3.internal.platform.Platform.buildCertificateChainCleaner(Platform.java:183)", "body": "In my Android application i have two libraries one is chat and one is video calling when i opened first time video calling its working fine but when open after chat library open next time video calling not connected and crash was generated and get below exception like this java.lang.IllegalStateException: Unable to extract the trust manager on AndroidPlatform, sslSocketFactory is class org.conscrypt.OpenSSLSocketFactoryImpl\r\nat okhttp3.internal.platform.Platform.buildCertificateChainCleaner(Platform.java:183)....(both side created sockets for different servers)", "url": "https://github.com/square/okhttp/issues/4880", "user": "raviteja74", "labels": ["bug"], "created": "2019-04-05 12:00:52", "closed": "2019-04-13 13:48:33", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "NoSuchElementException coming from RouteSelector after upgrading 3.12 -> 3.14", "body": "After upgrading our android app from okhttp 3.12.2 to 3.14.0, we started seeing this error (stacktrace below) coming through Crashlytics in production at a very high rate. Because we upgraded directly from 3.12 to 3.14, I'm not sure if this error was introduced in 3.13 or 3.14.\r\n\r\nWith an admittedly small sample size, the crash was affecting over 10% of sessions and over 20% of users, so we were forced to roll back. It appeared across Android versions 7, 8, 9, and Q.\r\n\r\nUnfortunately, I wasn't able to reproduce it locally. However, it seems very similar to this issue from 2 years ago, which appears to have been re-introduced to the library: https://github.com/square/okhttp/issues/3308\r\n\r\nI am not sure if this is related but we are compiling our app with R8 version 1.4.72\r\n\r\nOur app uses Java 8, min SDK 21, and the latest version of retrofit (2.5.0).\r\n\r\nHopefully this information and the stack trace below is enough to be helpful, apologies for not being able to include a reproducible case outside of production.\r\n\r\nThank you for the amazing library and everything you do for android open source!\r\n\r\n```\r\nFatal Exception: java.util.NoSuchElementException\r\n       at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:75)\r\n       at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:187)\r\n       at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:107)\r\n       at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:87)\r\n       at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:162)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n       at com.redacted.myapp.MyNetworkingModule.doRequestWithExceptionCatching(MyNetworkingModule.java:150)\r\n       at com.redacted.myapp.MyNetworkingModule.lambda$provideOkhttpClient$0(MyNetworkingModule.java:99)\r\n       at com.redacted.myapp.-$$Lambda$MyNetworkingModule$f9YhFuxMEYBUFTv_jyu3YSQWZX8.intercept(-.java:2)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:172)\r\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n```", "url": "https://github.com/square/okhttp/issues/4875", "user": "ygnessin", "labels": ["bug", "needs info"], "created": "2019-04-04 21:48:34", "closed": "2020-05-07 21:12:31", "commits": {"33f0d028a4355af49a23dfb946d87cca5c336105": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "79c23e3e567e2e17ca3e2e1e6163e8070270fb9f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "56557a8732ba68c6e7946b0399ba23a61ca581bf": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ebe5c601304414f0794aaf67203baa0b0cd7de9a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "48f62889cf3924285fc7ebc4a84c04ee5458fdd7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "5ecec36c2e0c01b466daebd925c64e4c4457f34f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "befd58408ae5b9be906c1ec40fc9c35bcd8b15ab": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "6ed894cb6c2cb1326d1d1d7992b43f90bbf94937": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 398.0002777777778, "commitsDetails": [{"commitHash": "33f0d028a4355af49a23dfb946d87cca5c336105", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["0f87d95c7de96ae028fb403f57ade0c7f8fca33f"], "nameRev": "33f0d028a4355af49a23dfb946d87cca5c336105 tags/parent-3.14.1~4^2", "commitMessage": "Don't crash on retry when there are no more routes (3.x branch)\n\nhttps://github.com/square/okhttp/issues/4875\n", "commitDateTime": "2019-04-07 21:30:11", "authoredDateTime": "2019-04-07 21:30:09", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody()", "TOT": 11, "UPD": 1, "INS": 1, "MOV": 9, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelWhileRequestHeadersAreSent().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelInFlightBeforeResponseReadThrowsIOE().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncResponseCanBeConsumedLater().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestBody(boolean,long,int).14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.postWithFileNotFound().16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall().19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long).20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite).21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestBodyThrowsUnrelatedToNetwork().17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.lateCancelCallsOnFailure().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().13.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().15.onFailure(okhttp3.Call,java.io.IOException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelWhileRequestHeadersAreSent().7.requestHeadersStart(okhttp3.Call)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().9.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody().5.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cannotRetryOneShotRequestBody()", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "okhttp3.CallTest.interceptorRecoversWhenRoutesExhausted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cannotRetryOneShotRequestBody().6.isOneShot()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ExchangeFinder.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.ExchangeFinder.canRetry()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.connection.ExchangeFinder.hasStreamFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Transmitter.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.Transmitter.canRetry()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.Transmitter.prepareToConnect(okhttp3.Request)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "79c23e3e567e2e17ca3e2e1e6163e8070270fb9f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "56557a8732ba68c6e7946b0399ba23a61ca581bf", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["677511daccefac94458df59d1f5fbdcc5442bcc7"], "nameRev": "56557a8732ba68c6e7946b0399ba23a61ca581bf tags/parent-4.0.0-ALPHA01~57^2", "commitMessage": "Don't crash on retry when there are no more routes (4.x branch)\n\nhttps://github.com/square/okhttp/issues/4875\n", "commitDateTime": "2019-04-08 06:34:41", "authoredDateTime": "2019-04-07 21:30:09", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "okhttp/src/test/java/okhttp3/CallTest.java", "insertions": 26, "deletions": 0, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExchangeFinder.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.ExchangeFinder.canRetry()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.connection.ExchangeFinder.hasStreamFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Transmitter.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.Transmitter.canRetry()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.Transmitter.prepareToConnect(okhttp3.Request)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody()", "TOT": 11, "UPD": 1, "INS": 1, "MOV": 9, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelWhileRequestHeadersAreSent().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelInFlightBeforeResponseReadThrowsIOE().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncResponseCanBeConsumedLater().14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestBody(boolean,long,int).16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.postWithFileNotFound().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall().21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long).22", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite).23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestBodyThrowsUnrelatedToNetwork().19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.lateCancelCallsOnFailure().20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().15.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().17.onFailure(okhttp3.Call,java.io.IOException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelWhileRequestHeadersAreSent().9.requestHeadersStart(okhttp3.Call)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().5.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().11.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody().7.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cannotRetryOneShotRequestBody()", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "okhttp3.CallTest.interceptorRecoversWhenRoutesExhausted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cannotRetryOneShotRequestBody().8.isOneShot()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ebe5c601304414f0794aaf67203baa0b0cd7de9a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["3ec8537bf5fda689136660704d5529bb383293ab"], "nameRev": "ebe5c601304414f0794aaf67203baa0b0cd7de9a tags/parent-3.14.2~1^2~1", "commitMessage": "Reproduce NoSuchElementException in RouteSelector.next() in a test\n\nI was unable to write a test that reproduces https://github.com/square/okhttp/issues/4875 consistently, but this is the closest I got. When I run it repeatedly in IntelliJ, it fails about 1 out of 5 times.\n", "commitDateTime": "2019-05-18 22:14:21", "authoredDateTime": "2019-05-04 17:50:55", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 37, "deletions": 0, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.shutdownAfterLateCoalescing()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "48f62889cf3924285fc7ebc4a84c04ee5458fdd7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5ecec36c2e0c01b466daebd925c64e4c4457f34f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ebe5c601304414f0794aaf67203baa0b0cd7de9a"], "nameRev": "5ecec36c2e0c01b466daebd925c64e4c4457f34f tags/parent-3.14.2~1^2", "commitMessage": "Lock in a route in hasRouteToTry() (3.14.x branch)\n\nOtherwise we end up making multiple calls to retryCurrentRoute()\nand if it returns true then false we can fail to find a route on\na retry.\n\nCloses: https://github.com/square/okhttp/issues/4875\n", "commitDateTime": "2019-05-18 22:15:56", "authoredDateTime": "2019-05-18 22:10:32", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java", "insertions": 15, "deletions": 8, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExchangeFinder.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.ExchangeFinder.findConnection(int,int,int,int,boolean)", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 3}, {"spoonMethodName": "okhttp3.internal.connection.ExchangeFinder.hasRouteToTry()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.connection.ExchangeFinder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "befd58408ae5b9be906c1ec40fc9c35bcd8b15ab", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6ed894cb6c2cb1326d1d1d7992b43f90bbf94937", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["cf5ebfddf6c16a9971fd3055df67d050adfa3ce4"], "nameRev": "6ed894cb6c2cb1326d1d1d7992b43f90bbf94937 tags/parent-4.0.0-alpha02~40^2", "commitMessage": "Lock in a route in hasRouteToTry()\n\nOtherwise we end up making multiple calls to retryCurrentRoute()\nand if it returns true then false we can fail to find a route on\na retry.\n\nCloses: https://github.com/square/okhttp/issues/4875\n", "commitDateTime": "2019-05-19 13:23:06", "authoredDateTime": "2019-05-19 13:22:17", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt", "insertions": 15, "deletions": 13, "lines": 28}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.shutdownAfterLateCoalescing()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["33f0d028a4355af49a23dfb946d87cca5c336105", "56557a8732ba68c6e7946b0399ba23a61ca581bf", "ebe5c601304414f0794aaf67203baa0b0cd7de9a", "5ecec36c2e0c01b466daebd925c64e4c4457f34f", "6ed894cb6c2cb1326d1d1d7992b43f90bbf94937"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 54.0, "deletions": 31.0, "lines": 85.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 35.0, "UPD": 4.0, "INS": 11.0, "MOV": 14.0, "DEL": 6.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection", "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt"], "changesInPackagesSPOON": ["okhttp3.internal.connection.ExchangeFinder.hasStreamFailure()", "okhttp3.internal.connection.ExchangeFinder.canRetry()", "okhttp3.internal.connection.Transmitter.canRetry()", "okhttp3.internal.connection.Transmitter.prepareToConnect(okhttp3.Request)", "okhttp3.internal.connection.ExchangeFinder", "okhttp3.internal.connection.ExchangeFinder.hasRouteToTry()", "okhttp3.internal.connection.ExchangeFinder.findConnection(int,int,int,int,boolean)"]}, {"title": "OkHttp failed future request when the previous request encountered this error java.net.SocketTimeOutException:timeout", "body": "val logging = HttpLoggingInterceptor().apply { level = HttpLoggingInterceptor.Level.BODY }\r\n        val internet = ConnectivityInterceptor(context)\r\n        val chuck = ChuckInterceptor(context)\r\n        val builder = OkHttpClient.Builder()\r\n            .addInterceptor(internet)\r\n            .connectTimeout(30, TimeUnit.SECONDS)\r\n            .writeTimeout(30, TimeUnit.SECONDS)\r\n            .readTimeout(30, TimeUnit.SECONDS)\r\n        if (BuildConfig.DEBUG) {\r\n            builder\r\n                .addInterceptor(chuck)\r\n                .addInterceptor(logging)\r\n        }\r\n        return builder.build()\r\n\r\ni'm using 3.12.2\r\nmy application encountered the problem when the previous request is timeout ,, the app cant request to the server anymore , request always return timeout exception, it's need to relaunch the app or reconnect in the internet to make it works", "url": "https://github.com/square/okhttp/issues/4869", "user": "jomarierafa", "labels": ["bug"], "created": "2019-04-04 09:32:23", "closed": "2019-04-08 16:40:42", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Samsung devices : SecCertPathValidatorSpi crash", "body": "Hello I am using OkHttp and retrofit in my network layer and I applied certificate pinner like below code \r\n\r\n```\r\n    implementation 'com.squareup.retrofit2:retrofit:2.4.0'\r\n    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'\r\n    implementation 'com.burgstaller:okhttp-digest:1.15'\r\n```\r\n\r\n```\r\nCertificatePinner certificatePinner = new CertificatePinner.Builder()\r\n                .add(\"domain.com.eg\", \"sha256/*********\") \r\n                .add(\"domain.com.eg\", \"sha256/*********\") \r\n                .build();\r\n```\r\n\r\nI got the below crash in fabric in **Samsung devices only** and in a variety of OS version but it's mostly happening in version 4\r\n\r\n```\r\nCaused by java.lang.StackOverflowError\r\n       at java.io.FilterInputStream.read(FilterInputStream.java:114)\r\n       at com.android.org.bouncycastle.asn1.DefiniteLengthInputStream.read(DefiniteLengthInputStream.java:50)\r\n       at java.io.FilterInputStream.read(FilterInputStream.java:114)\r\n       at com.android.org.bouncycastle.asn1.DefiniteLengthInputStream.read(DefiniteLengthInputStream.java:50)\r\n       at java.io.FilterInputStream.read(FilterInputStream.java:114)\r\n       at com.android.org.bouncycastle.asn1.DefiniteLengthInputStream.read(DefiniteLengthInputStream.java:50)\r\n       at java.io.FilterInputStream.read(FilterInputStream.java:114)\r\n       at com.android.org.bouncycastle.asn1.DefiniteLengthInputStream.read(DefiniteLengthInputStream.java:50)\r\n       at java.io.FilterInputStream.read(FilterInputStream.java:114)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.readLength(ASN1InputStream.java:323)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.readLength(ASN1InputStream.java:112)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.readObject(ASN1InputStream.java:231)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildEncodableVector(ASN1InputStream.java:193)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildDEREncodableVector(ASN1InputStream.java:204)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildObject(ASN1InputStream.java:173)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.readObject(ASN1InputStream.java:272)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildEncodableVector(ASN1InputStream.java:193)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildDEREncodableVector(ASN1InputStream.java:204)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildObject(ASN1InputStream.java:173)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.readObject(ASN1InputStream.java:272)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildEncodableVector(ASN1InputStream.java:193)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildDEREncodableVector(ASN1InputStream.java:204)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildObject(ASN1InputStream.java:173)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.readObject(ASN1InputStream.java:272)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildEncodableVector(ASN1InputStream.java:193)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildDEREncodableVector(ASN1InputStream.java:204)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.buildObject(ASN1InputStream.java:173)\r\n       at com.android.org.bouncycastle.asn1.ASN1InputStream.readObject(ASN1InputStream.java:272)\r\n       at com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities.getObject(CertPathValidatorUtilities.java:339)\r\n       at com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities.getExtensionValue(CertPathValidatorUtilities.java:325)\r\n       at com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities.processCertD(RFC3280CertPathUtilities.java:1268)\r\n       at com.android.org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi.engineValidate(PKIXCertPathValidatorSpi.java:310)\r\n       at com.sec.android.security.pkix.SecCertPathValidatorSpi.engineValidate(SecCertPathValidatorSpi.java:100)\r\n       at java.security.cert.CertPathValidator.validate(CertPathValidator.java:190)\r\n       at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:301)\r\n       at com.android.org.conscrypt.TrustManagerImpl.checkServerTrusted(TrustManagerImpl.java:208)\r\n       at com.android.org.conscrypt.OpenSSLSocketImpl.verifyCertificateChain(OpenSSLSocketImpl.java:611)\r\n       at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(NativeCrypto.java)\r\n       at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:406)\r\n       at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:302)\r\n       at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:270)\r\n       at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:162)\r\n       at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n       at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n       at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.execute(ExecutorCallAdapterFactory.java:91)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.refreshTokenSeamless(TokenAuthenticator.java:72)\r\n       at vodafone.vis.engezly.data.network2.TokenAuthenticator.authenticate(TokenAuthenticator.java:35)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(RetryAndFollowUpInterceptor.java:288)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:158)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.ElasticsInterceptor.intercept(ElasticsInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at vodafone.vis.engezly.data.network2.AuthInterceptor.intercept(AuthInterceptor.java:33)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n       at retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\r\n       at retrofit2.adapter.rxjava.CallExecuteOnSubscribe.call(CallExecuteOnSubscribe.java:40)\r\n       at retrofit2.adapter.rxjava.CallExecuteOnSubscribe.call(CallExecuteOnSubscribe.java:24)\r\n       at retrofit2.adapter.rxjava.BodyOnSubscribe.call(BodyOnSubscribe.java:36)\r\n       at retrofit2.adapter.rxjava.BodyOnSubscribe.call(BodyOnSubscribe.java:28)\r\n       at rx.Observable.unsafeSubscribe(Observable.java:10256)\r\n       at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)\r\n       at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)\r\n       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n       at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:152)\r\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:265)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n       at java.lang.Thread.run(Thread.java:841)\r\n```", "url": "https://github.com/square/okhttp/issues/4858", "user": "mmoamenn", "labels": ["bug"], "created": "2019-04-02 14:03:18", "closed": "2019-04-06 02:12:31", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "\u4e3a\u4ec0\u4e48\u5f03\u7528\u4e86streamAllocation  \u57283.14\u7248\u672c", "body": "![image](https://user-images.githubusercontent.com/29397850/55389472-e7c5c080-5567-11e9-8312-bdf2a0682835.png)\r\n![image](https://user-images.githubusercontent.com/29397850/55389488-f1e7bf00-5567-11e9-84c9-80a5664a002b.png)\r\n", "url": "https://github.com/square/okhttp/issues/4857", "user": "lihua45678910", "labels": ["bug"], "created": "2019-04-02 08:54:17", "closed": "2019-04-02 11:36:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.io.IOException: CRC: actual 0x648b6135 != expected 0x29d115fe", "body": "java.io.IOException: CRC: actual 0x648b6135 != expected 0x29d115fe\r\nat okio.GzipSource.checkEqual(GzipSource.java:205)\r\nat okio.GzipSource.consumeTrailer(GzipSource.java:173)\r\nat okio.GzipSource.read(GzipSource.java:92)\r\nat okio.RealBufferedSource$1.read(RealBufferedSource.java:430)\r\nat java.io.InputStream.read(InputStream.java:101)\r\n\r\n---------------------------------------------------------------------------------------\r\n\r\nTest Url  https://www.toptoon.net/comic/contents_list?comic_id=80029 \r\n\r\n\r\n---------------------------------------------------------------------------------------\r\nSuccessful HTML\r\n\r\n```\r\n//..........\r\n//gtag('send', 'pageview', 'comic/contents_list?comic_id=80029/comic/contents_list?comic_id=80029');\r\n\r\n\t}\r\n\tcatch (e)\r\n\t{\r\n\t}\r\n\r\n</script><img height=\"1\" width=\"1\" style=\"display:none\"  src=\"https://www.facebook.com/tr?id=2099949253593107&amp;ev=CustomEvent&amp;cd[episode_idx]=&amp;cd[comic_id]=80029&amp;cd[user_idx]=0&amp;cd[pay_cnt]=\"/>\r\n```\r\n\r\nRead until this location sends an exception~\r\n\r\n```\r\n\t\t//gtag('send', 'pageview', '/comic/contents_list?comic_id=80029');\r\n\r\n\t}\r\n\tcatch (e)\r\n\t{\r\n\t}\r\n\r\n//There's an anomaly here.\r\n```\r\n\r\nmy code \r\n```\r\nString url = \"https://www.toptoon.net/comic/contents_list?comic_id=80029&tmp=undefined_undefined_pc\";\r\n        OkHttpClient okHttpClient = new OkHttpClient();\r\n        Request request = new Request.Builder()\r\n                .url(url).header(\"accept-encoding\",\"gzip, deflate, br\")\r\n                .get()\r\n                .build();\r\n        Call call = okHttpClient.newCall(request);\r\n        call.enqueue(new Callback() {\r\n            @Override\r\n            public void onFailure(Call call, IOException e) {\r\n            }\r\n            @Override\r\n            public void onResponse(Call call, okhttp3.Response response) throws IOException {\r\n                InputStream is = response.body().byteStream();\r\n                GZIPInputStream gzin = new GZIPInputStream(is);\r\n                InputStreamReader isr = new InputStreamReader(gzin, StandardCharsets.UTF_8);\r\n                java.io.BufferedReader br = new java.io.BufferedReader(isr);\r\n                StringBuffer sb = new StringBuffer();\r\n                String tempbf;\r\n                try {\r\n                    while ((tempbf = br.readLine()) != null) {\r\n                        sb.append(tempbf);\r\n                        sb.append(\"\\r\\n\");\r\n                    }\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                isr.close();\r\n                gzin.close();\r\n                Log.i(\"body\", \"\" + sb.toString());\r\n            }\r\n```\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4850", "user": "dingyong666", "labels": ["bug"], "created": "2019-04-01 08:42:09", "closed": "2019-04-02 11:38:31", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "OkHttp 4.0.0-SNAPSHOT Kotlin incompatibilities", "body": "Missing snapshot jars\r\n\r\n```\r\ncom.squareup.okhttp3.sample:unixdomainsockets\r\ncom.squareup.okhttp3:okhttp-testing-support\r\n```\r\n\r\nMissing setter\r\n```\r\n       val loggingInterceptor = HttpLoggingInterceptor()\r\n-      loggingInterceptor.level = HttpLoggingInterceptor.Level.HEADERS\r\n+      loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.HEADERS)\r\n```\r\n\r\nMissing SAM support\r\n\r\n```\r\n-      val logger = HttpLoggingInterceptor.Logger { message -> println(message) }\r\n+      val logger = object : HttpLoggingInterceptor.Logger {\r\n+        override fun log(message: String) {\r\n+          println(message)\r\n+        }\r\n+      }\r\n```\r\n\r\n```\r\n-    clientBuilder.eventListenerFactory { call ->\r\n-      ZipkinTracingListener(call, tracer, httpTracing, opener, tracing == TracingMode.ZIPKIN_TRACING)\r\n-    }\r\n+    clientBuilder.eventListenerFactory(object: EventListener.Factory {\r\n+      override fun create(call: Call): EventListener =\r\n+        ZipkinTracingListener(call, tracer, httpTracing, opener, tracing == TracingMode.ZIPKIN_TRACING)\r\n+    })\r\n```\r\n\r\nCipherSuite.forJavaName\r\n\r\n```\r\n-import okhttp3.CipherSuite.forJavaName\r\n+import okhttp3.CipherSuite.Companion.forJavaName\r\n```\r\n\r\nCertificatePin.pin is optional\r\n\r\n```\r\n       pins.groupBy { it.pattern }.forEach { (pattern, pins) ->\r\n-        builder.add(pattern, *(pins.map { it.pin }.toTypedArray()))\r\n+        builder.add(pattern, *(pins.map { it.pin!! }.toTypedArray()))\r\n       }\r\n```\r\n\r\nInternal platform change\r\n\r\n```\r\n-    val context = Platform.get().sslContext\r\n+    val context = Platform.get().getSSLContext()\r\n```\r\n\r\nHttpUrl.pathSegments() and encodedPathSegments() returns immutible list\r\n\r\n```\r\n-    val path = url.pathSegments()\r\n+    val path = url.pathSegments().toMutableList()\r\n```\r\n\r\nEventListener nullability changes\r\n\r\n```\r\n-  override fun callFailed(call: Call, ioe: IOException?) {\r\n+  override fun callFailed(call: Call, ioe: IOException) {\r\n     if (callSpan.isNoop) {\r\n       return\r\n     }\r\n\r\n-    callSpan.tag(\"error\", ioe!!.toString())\r\n+    callSpan.tag(\"error\", ioe.toString())\r\n\r\n     callEnd(call)\r\n   }\r\n\r\n-  override fun dnsStart(call: Call, domainName: String?) {\r\n+  override fun dnsStart(call: Call, domainName: String) {\r\n     if (callSpan.isNoop || !detailed) {\r\n       return\r\n     }\r\n@@ -76,33 +76,33 @@ class ZipkinTracingListener(\r\n     dnsSpan = tracer.newChild(callSpan.context()).start().name(\"dns\")\r\n   }\r\n\r\n-  override fun dnsEnd(call: Call, domainName: String?, inetAddressList: List<InetAddress>?) {\r\n+  override fun dnsEnd(call: Call, domainName: String, inetAddressList: List<InetAddress>) {\r\n     if (callSpan.isNoop || !detailed) {\r\n       return\r\n     }\r\n\r\n     dnsSpan!!.tag(\"dns.results\",\r\n-      inetAddressList!!.joinToString(\", \", transform = { it.toString() })\r\n+      inetAddressList.joinToString(\", \", transform = { it.toString() })\r\n     )\r\n\r\n     dnsSpan!!.finish()\r\n   }\r\n\r\n-  override fun connectStart(call: Call, inetSocketAddress: InetSocketAddress?, proxy: Proxy?) {\r\n+  override fun connectStart(call: Call, inetSocketAddress: InetSocketAddress, proxy: Proxy) {\r\n     if (callSpan.isNoop || !detailed) {\r\n       return\r\n     }\r\n\r\n     connectSpan = tracer.newChild(callSpan.context()).start().name(\"connect\")\r\n\r\n-    connectSpan!!.tag(\"host\", inetSocketAddress!!.toString())\r\n-    connectSpan!!.tag(\"proxy\", proxy!!.toString())\r\n+    connectSpan!!.tag(\"host\", inetSocketAddress.toString())\r\n+    connectSpan!!.tag(\"proxy\", proxy.toString())\r\n   }\r\n\r\n   override fun connectEnd(\r\n     call: Call,\r\n-    inetSocketAddress: InetSocketAddress?,\r\n-    proxy: Proxy?,\r\n+    inetSocketAddress: InetSocketAddress,\r\n+    proxy: Proxy,\r\n     protocol: Protocol?\r\n   ) {\r\n     if (callSpan.isNoop || !detailed) {\r\n@@ -116,10 +116,10 @@ class ZipkinTracingListener(\r\n\r\n   override fun connectFailed(\r\n     call: Call,\r\n-    inetSocketAddress: InetSocketAddress?,\r\n-    proxy: Proxy?,\r\n+    inetSocketAddress: InetSocketAddress,\r\n+    proxy: Proxy,\r\n     protocol: Protocol?,\r\n-    ioe: IOException?\r\n+    ioe: IOException\r\n   ) {\r\n     if (callSpan.isNoop || !detailed) {\r\n       return\r\n@@ -128,7 +128,7 @@ class ZipkinTracingListener(\r\n     if (protocol != null) {\r\n       connectSpan!!.tag(\"protocol\", protocol.toString())\r\n     }\r\n-    connectSpan!!.tag(\"failed\", ioe!!.toString())\r\n+    connectSpan!!.tag(\"failed\", ioe.toString())\r\n\r\n     connectSpan!!.finish()\r\n   }\r\n@@ -143,12 +143,12 @@ class ZipkinTracingListener(\r\n     connectionSpan!!.tag(\"route\", route)\r\n   }\r\n\r\n-  override fun connectionReleased(call: Call, connection: Connection?) {\r\n+  override fun connectionReleased(call: Call, connection: Connection) {\r\n     if (callSpan.isNoop) {\r\n       return\r\n     }\r\n\r\n-    if (connection!!.route().proxy().type() != Proxy.Type.DIRECT) {\r\n+    if (connection.route().proxy().type() != Proxy.Type.DIRECT) {\r\n       connectionSpan!!.tag(\"proxy\", connection.route().proxy().toString())\r\n     }\r\n     if (connection.handshake() != null) {\r\n@@ -185,20 +185,20 @@ class ZipkinTracingListener(\r\n     requestSpan = tracer.newChild(callSpan.context()).start().name(\"request\")\r\n   }\r\n\r\n-  override fun requestHeadersEnd(call: Call, request: Request?) {\r\n+  override fun requestHeadersEnd(call: Call, request: Request) {\r\n     if (callSpan.isNoop || !detailed) {\r\n       return\r\n     }\r\n\r\n-    requestSpan!!.tag(\"requestHeaderLength\", \"\" + request!!.headers().byteCount())\r\n+    requestSpan!!.tag(\"requestHeaderLength\", \"\" + request.headers().byteCount())\r\n   }\r\n\r\n-  override fun requestBodyEnd(call: Call, bytesWritten: Long) {\r\n+  override fun requestBodyEnd(call: Call, byteCount: Long) {\r\n     if (callSpan.isNoop) {\r\n       return\r\n     }\r\n\r\n-    requestSpan!!.tag(\"http.request.size\", \"\" + bytesWritten)\r\n+    requestSpan!!.tag(\"http.request.size\", \"\" + byteCount)\r\n\r\n     requestSpan = finish(requestSpan)\r\n   }\r\n@@ -216,23 +216,23 @@ class ZipkinTracingListener(\r\n     requestSpan = finish(requestSpan)\r\n   }\r\n\r\n-  override fun responseHeadersEnd(call: Call, response: Response?) {\r\n+  override fun responseHeadersEnd(call: Call, response: Response) {\r\n     if (callSpan.isNoop || !detailed) {\r\n       return\r\n     }\r\n\r\n     responseSpan = tracer.newChild(callSpan.context()).start()\r\n       .name(\"response\")\r\n-      .tag(\"responseHeaderLength\", \"\" + response!!.headers().byteCount())\r\n+      .tag(\"responseHeaderLength\", \"\" + response.headers().byteCount())\r\n       .tag(\"http.status_code\", response.code().toString())\r\n   }\r\n\r\n-  override fun responseBodyEnd(call: Call, bytesRead: Long) {\r\n+  override fun responseBodyEnd(call: Call, byteCount: Long) {\r\n     if (callSpan.isNoop || !detailed) {\r\n       return\r\n     }\r\n\r\n-    responseSpan!!.tag(\"http.response.size\", \"\" + bytesRead)\r\n+    responseSpan!!.tag(\"http.response.size\", \"\" + byteCount)\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/4837", "user": "yschimke", "labels": ["bug"], "created": "2019-03-31 15:14:09", "closed": "2019-04-03 17:03:54", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Flaky test: HttpOverHttp2Test#responseHeadersAfterGoaway", "body": "https://227-5152285-gh.circle-artifacts.com/0/home/circleci/testrepo11/reports/okhttp/build/reports/tests/test/classes/okhttp3.internal.http2.HttpOverHttp2Test.html#responseHeadersAfterGoaway[h2]\r\n\r\n```\r\norg.junit.ComparisonFailure: expected:<\"[DEF]\"> but was:<\"[ABC]\">\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat okhttp3.internal.http2.HttpOverHttp2Test.responseHeadersAfterGoaway(HttpOverHttp2Test.java:1421)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat okhttp3.OkHttpClientTestRule$1.evaluate(OkHttpClientTestRule.java:37)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)\r\n\tat org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```", "url": "https://github.com/square/okhttp/issues/4836", "user": "yschimke", "labels": ["bug", "tests"], "created": "2019-03-31 09:14:41", "closed": "2019-12-23 08:18:34", "commits": {}, "ttf": 266.0002777777778, "commitsDetails": []}, {"title": "Migrate (Request/Response)(Body) to Kotlin", "body": "Request\r\nRequestBody\r\nResponse\r\nResponseBody\r\n\r\nI'll take these on!", "url": "https://github.com/square/okhttp/issues/4830", "user": "ZacSweers", "labels": ["bug"], "created": "2019-03-30 23:37:39", "closed": "2019-04-01 08:28:00", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Handshake failed after updated to okhttp 3.14.0", "body": "When I use okhttp 3.12.2, I can make a GET request on https web site.\r\n\r\nAfter upgrading to okhttp 3.14.0, I have an IO exception on execute when I perform the same GET request. The interceptor message indicates \"handshake failed\".\r\n\r\n`request = new Request.Builder().url(\"https://anhttpswebsite\").build();\r\nresponse = client.newCall(request).execute();\r\n`\r\n", "url": "https://github.com/square/okhttp/issues/4823", "user": "MS893", "labels": ["bug", "stackoverflow"], "created": "2019-03-30 12:15:18", "closed": "2019-03-30 15:25:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "After http2, connectPool prevent program from exit.", "body": "After complete a http2 connection, the connectPool prevent program from exit.\r\n\r\nCode like this:\r\nhttps://gist.github.com/moonfruit/2abfa558e9506b389cbef856817635a2\r\n\r\nThis program never exit, even the main thread terminate.\r\nThis happens on Java 11 (openjdk) and Java 12 (openjdk), but the program can exit normally on Java 8 (oracle jdk).\r\n\r\nWhen I add `client.connectionPool().evictAll();` to the end of the main method, everything is ok.\r\n\r\nAnd this only happens on http2 connection. (https://search.maven.org/ supports http2).\r\n\r\nNow I must manually evict the connectionPool to make my program to run normally on java 11 or 12.\r\n\r\nBy the way, I didn't test this on Java 9 or 10.", "url": "https://github.com/square/okhttp/issues/4815", "user": "moonfruit", "labels": ["bug"], "created": "2019-03-28 10:44:13", "closed": "2019-04-13 13:49:16", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "BLOCKED  and eat cpu", "body": "ttp-nio-8081-exec-8\" Id=51 cpuUsage=1% BLOCKED on okhttp3.internal.connection.RealConnectionPool@7a5b3b68 owned by \"http-nio-8081-exec-64\" Id=256\r\n    at okhttp3.internal.connection.Transmitter.isCanceled(Transmitter.java:342)\r\n    -  blocked on okhttp3.internal.connection.RealConnectionPool@7a5b3b68\r\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:222)\r\n    at okhttp3.RealCall.execute(RealCall.java:81)\r\n\r\n\r\n\r\n\"http-nio-8081-exec-116\" Id=354 cpuUsage=2% RUNNABLE\r\n    at java.net.SocketInputStream.socketRead0(Native Method)\r\n    at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\n    at java.net.SocketInputStream.read(SocketInputStream.java:170)\r\n    at java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n    at okio.Okio$2.read(Okio.java:140)\r\n    at okio.AsyncTimeout$2.read(AsyncTimeout.java:237)\r\n    at okio.RealBufferedSource.indexOf(RealBufferedSource.java:358)\r\n    at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:230)\r\n    at okhttp3.internal.http1.Http1ExchangeCodec.readHeaderLine(Http1ExchangeCodec.java:238)\r\n    at okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.java:213)\r\n    at okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.java:115)\r\n    at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:94)\r\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n    at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:43)\r\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n    at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n    at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n    at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)\r\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)\r\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)\r\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:221)\r\n    at okhttp3.RealCall.execute(RealCall.java:81)", "url": "https://github.com/square/okhttp/issues/4810", "user": "dongdongyang", "labels": ["bug"], "created": "2019-03-27 14:42:46", "closed": "2019-04-13 13:49:32", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "'response.body().close()' not called", "body": "use:\r\nStrictMode.setThreadPolicy\r\nStrictMode.setVmPolicy\r\n\r\ncause:\r\n\r\nE/StrictMode: A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\r\n    java.lang.Throwable: Explicit termination method 'response.body().close()' not called\r\n        at dalvik.system.CloseGuard.open(CloseGuard.java:184)\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:515)\r\n        at okhttp3.internal.platform.AndroidPlatform$CloseGuard.createAndOpen(AndroidPlatform.java:343)\r\n        at okhttp3.internal.platform.AndroidPlatform.getStackTraceForCloseable(AndroidPlatform.java:158)\r\n        at okhttp3.RealCall.captureCallStackTrace(RealCall.java:115)\r\n        at okhttp3.RealCall.enqueue(RealCall.java:124)\r\nat com.xx.OkHttpStreamFetcher.loadData(OkHttpStreamFetcher.java)//call.enqueue(this);\r\n        at com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher.loadData(MultiModelLoader.java:99)\r\n        at com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher.startNextOrFail(MultiModelLoader.java:150)\r\n        at com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher.onLoadFailed(MultiModelLoader.java:144)\r\n        at com.xx.OkHttpStreamFetcher.onFailure(OkHttpStreamFetcher.java)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:215)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n        at java.lang.Thread.run(Thread.java:841)\r\n", "url": "https://github.com/square/okhttp/issues/4809", "user": "654277633", "labels": ["bug"], "created": "2019-03-27 09:02:49", "closed": "2019-03-31 03:26:30", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "addNetworkInterceptor   Post method data is missing", "body": "OkHttpClient.Builder builder = new OkHttpClient.Builder()\r\n                .retryOnConnectionFailure(true)\r\n                .connectTimeout(60, TimeUnit.SECONDS)\r\n                .writeTimeout(60, TimeUnit.SECONDS)\r\n                .readTimeout(60, TimeUnit.SECONDS)\r\n                .addNetworkInterceptor(mTokenInterceptor)\r\n                .addInterceptor(interceptor);\r\n\r\nInterceptor mTokenInterceptor = new Interceptor() {\r\n        @Override\r\n        public Response intercept(Chain chain) throws IOException {\r\n        Request request = chain.request();\r\n\r\n       String  tests = \"f150bdcae8578d4f1db3646ead4ef002c282a6ebde6e3b9bf464e94cdae68b34b73e0b7697140d303465de824754ed8aafac388787be325f687f6c0b918c8044c6813c35314735a59bd225aa59aeb99f97942e3fe9ab0846056101c09cc3e72a52bb91eadf503752c48b8b54cda3e368a99246c97f1297a1771865869ad108dc5088355489ac0e5b63cc355c0f0facbfb713228ec062ed927cdb517bab0ac79d5cb6ccd36b5048a38ab16137a99bee80c94bc2f3d98d7843ce0e16b350b5f4a1e11e37bd72c366f1e22af8bcc359a0117f3ed3914bfe55228f1be9b43e1d1fbc93da7743a7c33613fc00305ee194b85010b8a014f871533e60890a576ff31ea46906d9fe85b3ddc2c4ffca549fde9e5de829ef05d5636733c2a87a0d7c74791f6006ccace21220f0\";    \uff08Encrypt the data\uff09\r\n              \uff08or  application/json\uff09                  \r\n            RequestBody requestBody = RequestBody.create(MediaType.parse(\"text/plain\"), tests);\r\n            request = request.newBuilder().post(requestBody).build();\r\n\r\n            return chain.proceed(request);\r\n\r\n        }\r\n\r\nretrofit2\uff1a\r\n@POST(\"{url}\")\r\nObservable<Response> getTestLogin(@Path(value = \"url\", encoded = true) String url, @Body Map<String, String> maps);\r\n\r\nserver  results\uff1a\r\nf150bdcae8578d4f1db3646ead4ef002c282a6ebde6e3b9bf464e94cdae68b34b73e0b7697140d303465de824754ed8aafac388787be325f687f6c0b918c8044c6813c35314735a59bd225aa59aeb99f97942e3fe9ab0846056101c09cc3e72a52bb91eadf503752c48b8b54cda3e368a99246c97f1297a1771865869ad108dc5088355489ac0e5b63cc355c0f0facbfb71\r\n\r\nLoss of data\uff1a\r\n3228ec062ed927cdb517bab0ac79d5cb6ccd36b5048a38ab16137a99bee80c94bc2f3d98d7843ce0e16b350b5f4a1e11e37bd72c366f1e22af8bcc359a0117f3ed3914bfe55228f1be9b43e1d1fbc93da7743a7c33613fc00305ee194b85010b8a014f871533e60890a576ff31ea46906d9fe85b3ddc2c4ffca549fde9e5de829ef05d5636733c2a87a0d7c74791f6006ccace21220f0\r\n\r\nNo Interceptor   data is normal  \uff08Cannot handle encryption uniformly  Body\uff09\r\nWhy set Content-Length ???\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4808", "user": "MyWdq", "labels": ["bug"], "created": "2019-03-27 08:45:25", "closed": "2019-04-13 13:50:12", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "Non-SDK methods used ", "body": "Hello,\r\nIs there any plans of fixing this issue in the latest release for using hidden methods for SDK version 28.\r\n\r\nAccessing hidden method Ldalvik/system/CloseGuard;->get()Ldalvik/system/CloseGuard; (light greylist, reflection)\r\nD/StrictMode: StrictMode policy violation: android.os.strictmode.NonSdkApiUsedViolation: Ldalvik/system/CloseGuard;->get()Ldalvik/system/CloseGuard;\r\nat android.os.StrictMode.lambda$static$1(StrictMode.java:428)\r\nat android.os.-$$Lambda$StrictMode$lu9ekkHJ2HMz0jd3F8K8MnhenxQ.accept(Unknown Source:2)\r\nat java.lang.Class.getDeclaredMethodInternal(Native Method)\r\nat java.lang.Class.getPublicMethodRecursive(Class.java:2075)\r\nat java.lang.Class.getMethod(Class.java:2063)\r\nat java.lang.Class.getMethod(Class.java:1690)\r\nat okhttp3.internal.platform.AndroidPlatform$CloseGuard.get(AndroidPlatform.java:368)\r\nat okhttp3.internal.platform.AndroidPlatform.(AndroidPlatform.java:56)\r\nat okhttp3.internal.platform.AndroidPlatform.buildIfSupported(AndroidPlatform.java:258)\r\nat okhttp3.internal.platform.Platform.findPlatform(Platform.java:199)\r\nat okhttp3.internal.platform.Platform.(Platform.java:78)\r\nat okhttp3.internal.platform.Platform.get(Platform.java:84)\r\nat okhttp3.OkHttpClient.systemDefaultSslSocketFactory(OkHttpClient.java:300)\r\nat okhttp3.OkHttpClient.(OkHttpClient.java:255)\r\nat okhttp3.OkHttpClient.(OkHttpClient.java:228)\r\nat webServices.apiCalls.ApiClient.getRequestHeader(ApiClient.java:126)\r\nat webServices.apiCalls.ApiClient.apiCall(ApiClient.java:47)\r\nat webServices.api_callback.AppVersionDetailsCallback.callApi(AppVersionDetailsCallback.java:39)\r\nat manager.MyApplication$2.run(MyApplication.java:297)\r\nat android.os.Handler.handleCallback(Handler.java:874)\r\nat android.os.Handler.dispatchMessage(Handler.java:100)\r\nat android.os.Looper.loop(Looper.java:198)\r\nat android.app.ActivityThread.main(ActivityThread.java:6729)\r\nat java.lang.reflect.Method.invoke(Native Method)\r\nat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\r\n\r\nAccessing hidden method Ldalvik/system/CloseGuard;->open(Ljava/lang/String;)V (light greylist, reflection)\r\nD/StrictMode: StrictMode policy violation: android.os.strictmode.NonSdkApiUsedViolation: Ldalvik/system/CloseGuard;->open(Ljava/lang/String;)V\r\nat android.os.StrictMode.lambda$static$1(StrictMode.java:428)\r\nat android.os.-$$Lambda$StrictMode$lu9ekkHJ2HMz0jd3F8K8MnhenxQ.accept(Unknown Source:2)\r\nat java.lang.Class.getDeclaredMethodInternal(Native Method)\r\nat java.lang.Class.getPublicMethodRecursive(Class.java:2075)\r\nat java.lang.Class.getMethod(Class.java:2063)\r\nat java.lang.Class.getMethod(Class.java:1690)\r\nat okhttp3.internal.platform.AndroidPlatform$CloseGuard.get(AndroidPlatform.java:369)\r\nat okhttp3.internal.platform.AndroidPlatform.(AndroidPlatform.java:56)\r\nat okhttp3.internal.platform.AndroidPlatform.buildIfSupported(AndroidPlatform.java:258)\r\nat okhttp3.internal.platform.Platform.findPlatform(Platform.java:199)\r\nat okhttp3.internal.platform.Platform.(Platform.java:78)\r\nat okhttp3.internal.platform.Platform.get(Platform.java:84)\r\nat okhttp3.OkHttpClient.systemDefaultSslSocketFactory(OkHttpClient.java:300)\r\nat okhttp3.OkHttpClient.(OkHttpClient.java:255)\r\nat okhttp3.OkHttpClient.(OkHttpClient.java:228)\r\nat webServices.apiCalls.ApiClient.getRequestHeader(ApiClient.java:126)\r\nat webServices.apiCalls.ApiClient.apiCall(ApiClient.java:47)\r\nat webServices.api_callback.AppVersionDetailsCallback.callApi(AppVersionDetailsCallback.java:39)\r\nat manager.MyApplication$2.run(MyApplication.java:297)\r\nat android.os.Handler.handleCallback(Handler.java:874)\r\nat android.os.Handler.dispatchMessage(Handler.java:100)\r\nat android.os.Looper.loop(Looper.java:198)\r\nat android.app.ActivityThread.main(ActivityThread.java:6729)\r\nat java.lang.reflect.Method.invoke(Native Method)\r\nat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\r\n\r\nW/:  Accessing hidden method Ldalvik/system/CloseGuard;->warnIfOpen()V (light greylist, reflection)\r\nD/StrictMode: StrictMode policy violation: android.os.strictmode.NonSdkApiUsedViolation: Ldalvik/system/CloseGuard;->warnIfOpen()V\r\nat android.os.StrictMode.lambda$static$1(StrictMode.java:428)\r\nat android.os.-$$Lambda$StrictMode$lu9ekkHJ2HMz0jd3F8K8MnhenxQ.accept(Unknown Source:2)\r\nat java.lang.Class.getDeclaredMethodInternal(Native Method)\r\nat java.lang.Class.getPublicMethodRecursive(Class.java:2075)\r\nat java.lang.Class.getMethod(Class.java:2063)\r\nat java.lang.Class.getMethod(Class.java:1690)\r\nat okhttp3.internal.platform.AndroidPlatform$CloseGuard.get(AndroidPlatform.java:370)\r\nat okhttp3.internal.platform.AndroidPlatform.(AndroidPlatform.java:56)\r\nat okhttp3.internal.platform.AndroidPlatform.buildIfSupported(AndroidPlatform.java:258)\r\nat okhttp3.internal.platform.Platform.findPlatform(Platform.java:199)\r\nat okhttp3.internal.platform.Platform.(Platform.java:78)\r\nat okhttp3.internal.platform.Platform.get(Platform.java:84)\r\nat okhttp3.OkHttpClient.systemDefaultSslSocketFactory(OkHttpClient.java:300)\r\nat okhttp3.OkHttpClient.(OkHttpClient.java:255)\r\nat okhttp3.OkHttpClient.(OkHttpClient.java:228)\r\nat elika.version2.webServices.apiCalls.ApiClient.getRequestHeader(ApiClient.java:126)\r\nat elika.version2.webServices.apiCalls.ApiClient.apiCall(ApiClient.java:47)\r\nat webServices.api_callback.AppVersionDetailsCallback.callApi(AppVersionDetailsCallback.java:39)\r\nat manager.MyApplication$2.run(MyApplication.java:297)\r\nat android.os.Handler.handleCallback(Handler.java:874)\r\nat android.os.Handler.dispatchMessage(Handler.java:100)\r\nat android.os.Looper.loop(Looper.java:198)\r\nat android.app.ActivityThread.main(ActivityThread.java:6729)\r\nat java.lang.reflect.Method.invoke(Native Method)\r\nat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\r\n2019-03-19 15:25:56.984 13060-13060 W/ActivityThread: handleWindowVisibility: no activity for token android.os.BinderProxy@b7c1ad4", "url": "https://github.com/square/okhttp/issues/4791", "user": "anjani0401", "labels": ["bug"], "created": "2019-03-25 09:58:04", "closed": "2019-03-25 12:31:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "CircleCI test results showing slow tests in CI", "body": "Slow test results for https://circleci.com/gh/square/okhttp/38#tests/containers/0\r\n\r\n> Your job ran 2345 tests in junit with 0 failures\r\n> Slowest test: okhttp3.EventListenerTest requestBodyFailHttp2OverHttps (took 95.48 seconds).\r\n\r\nSaw it slow on another branch also", "url": "https://github.com/square/okhttp/issues/4784", "user": "yschimke", "labels": ["bug", "tests"], "created": "2019-03-24 17:08:10", "closed": "2019-04-04 19:58:52", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "CacheControl exposes two getters for Java consumers", "body": "With #4762, `CacheControl` has two getters for Java consumers. \r\n```java\r\nCacheControl cacheControl = new CacheControl.Builder().build();\r\ncacheControl.immutable();\r\ncacheControl.getImmutable();\r\n```\r\n\r\nThis might be confusing for consumers. Should we be adding `@get:JvmName(\"immutable\")` to the `immutable` property? ", "url": "https://github.com/square/okhttp/issues/4782", "user": "ShaishavGandhi", "labels": ["bug"], "created": "2019-03-24 16:48:11", "closed": "2019-03-25 17:09:37", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Gradle build is not compatible with OpenJDK 8", "body": "Discussion here\r\n\r\nhttps://github.com/eclipse/jetty.project/issues/3100\r\nhttps://github.com/jetty-project/jetty-alpn/pull/24/files\r\n\r\nI'm testing with various docker images as a workaround also\r\n\r\nhttps://github.com/square/okhttp/pull/4778\r\nhttps://github.com/square/okhttp/pull/4779\r\n", "url": "https://github.com/square/okhttp/issues/4781", "user": "yschimke", "labels": ["bug"], "created": "2019-03-24 16:10:51", "closed": "2019-04-04 19:59:06", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Getting hit by submodule issues", "body": "Not sure why I have seen this 3 times recently, but getting hit by submodule issues for clone.  I think this used to be automatic?\r\n\r\n```\r\n$ git submodule init\r\nSubmodule 'okhttp-hpacktests/src/test/resources/hpack-test-case' (git://github.com/http2jp/hpack-test-case.git) registered for path 'okhttp-hpacktests/src/test/resources/hpack-test-case'\r\n$ git submodule update\r\n```", "url": "https://github.com/square/okhttp/issues/4767", "user": "yschimke", "labels": ["bug"], "created": "2019-03-23 12:03:28", "closed": "2019-04-04 20:01:10", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Building wiki page out of date", "body": "https://github.com/square/okhttp/wiki/Building\r\n\r\nrefers to java 6 and 7", "url": "https://github.com/square/okhttp/issues/4766", "user": "yschimke", "labels": ["bug", "documentation"], "created": "2019-03-23 09:45:33", "closed": "2019-06-15 23:31:37", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "Regression in Exchange in 3.14", "body": "Hey, folks - I think I'm running into something that appears to be a regression in 3.14 around the new exchange mechanism. I can reproduce this 100% of the time in my app by creating a specific scenario.\r\n\r\nHere's the basic setup. We have an interceptor that does a lot of things for us, including setting headers and handling retries for auth errors. Here's a simplified version of the code, eliding a lot of details around how the retries are triggered:\r\n\r\n```\r\n@Override\r\npublic Response intercept(Chain chain) throws IOException {\r\n  Request originalRequest = chain.request();\r\n  Request.Builder builder = originalRequest.newBuilder();\r\n  // Add headers/etc here.\r\n  Request request = builder.build();\r\n  Response response = chain.proceed(request);\r\n\r\n  if (isError(response)) {\r\n    // Grab a new auth token, etc.\r\n    response = chain.proceed(retry);\r\n    return response;\r\n  }\r\n}\r\n```\r\n\r\nIn 3.13.1, this seems to work just fine. In 3.14.0, this crashes with the following error:\r\n\r\n```\r\n03-22 11:52:21.889 E/AndroidRuntime(10135): java.lang.IllegalStateException: exchange != null\r\n03-22 11:52:21.889 E/AndroidRuntime(10135): \tat okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:159)\r\n03-22 11:52:21.889 E/AndroidRuntime(10135): \tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)\r\n...\r\n```\r\n\r\nIt doesn't seem to matter if you mutate the request or not. Even just using (as above) a newly built version of the request produces the same behavior.\r\n\r\nAny ideas what's happening here? I'm going to revert our library back to 3.13 for now to work around this, but I'm curious what could be causing this.", "url": "https://github.com/square/okhttp/issues/4761", "user": "tmtrademarked", "labels": ["bug"], "created": "2019-03-22 16:15:22", "closed": "2019-04-13 13:26:15", "commits": {"ca961db9e94209af405906b1f2ff3ca267e3a215": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "3ea2c22d64609d304ce8faec4f498dea496ca959": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "ca961db9e94209af405906b1f2ff3ca267e3a215", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["7f9d7801e1e1330dcc92ae9ffda10cffe7331ab9"], "nameRev": "ca961db9e94209af405906b1f2ff3ca267e3a215 tags/parent-3.14.1~2^2", "commitMessage": "Provide actionable advice when the exchange is non-null (3.x branch)\n\nhttps://github.com/square/okhttp/issues/4761\n", "commitDateTime": "2019-04-08 09:28:03", "authoredDateTime": "2019-04-08 09:28:01", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java", "insertions": 7, "deletions": 2, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody()", "TOT": 11, "UPD": 1, "INS": 1, "MOV": 9, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelWhileRequestHeadersAreSent().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelInFlightBeforeResponseReadThrowsIOE().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncResponseCanBeConsumedLater().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestBody(boolean,long,int).15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.postWithFileNotFound().17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall().20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long).21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite).22", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestBodyThrowsUnrelatedToNetwork().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.lateCancelCallsOnFailure().19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().14.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().5.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().16.onFailure(okhttp3.Call,java.io.IOException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelWhileRequestHeadersAreSent().8.requestHeadersStart(okhttp3.Call)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().10.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody().6.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cannotRetryOneShotRequestBody()", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "okhttp3.CallTest.interceptorCallsProceedWithoutClosingPriorResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cannotRetryOneShotRequestBody().7.isOneShot()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Transmitter.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.Transmitter.newExchange(okhttp3.Interceptor$Chain,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3ea2c22d64609d304ce8faec4f498dea496ca959", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ff9c8ebcc6719a9d07789d870fd2ebaff8ba3aca"], "nameRev": "3ea2c22d64609d304ce8faec4f498dea496ca959 tags/parent-4.0.0-ALPHA01~54^2", "commitMessage": "Provide actionable advice when the exchange is non-null (4.x branch)\n\nhttps://github.com/square/okhttp/issues/4761\n", "commitDateTime": "2019-04-09 22:12:36", "authoredDateTime": "2019-04-08 09:28:01", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "okhttp/src/test/java/okhttp3/CallTest.java", "insertions": 29, "deletions": 0, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Transmitter.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.Transmitter.newExchange(okhttp3.Interceptor$Chain,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody()", "TOT": 11, "UPD": 1, "INS": 1, "MOV": 9, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelWhileRequestHeadersAreSent().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelInFlightBeforeResponseReadThrowsIOE().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().12", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce().14", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncResponseCanBeConsumedLater().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestBody(boolean,long,int).17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.postWithFileNotFound().19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall().22", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long).23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite).24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestBodyThrowsUnrelatedToNetwork().20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.lateCancelCallsOnFailure().21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().16.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().5.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().18.onFailure(okhttp3.Call,java.io.IOException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelWhileRequestHeadersAreSent().10.requestHeadersStart(okhttp3.Call)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().6.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().12.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.canRetryNormalRequestBody().8.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cannotRetryOneShotRequestBody()", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "okhttp3.CallTest.interceptorCallsProceedWithoutClosingPriorResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cannotRetryOneShotRequestBody().9.isOneShot()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ca961db9e94209af405906b1f2ff3ca267e3a215", "3ea2c22d64609d304ce8faec4f498dea496ca959"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 14, "deletions": 4, "lines": 18, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection"], "changesInPackagesSPOON": ["okhttp3.internal.connection.Transmitter.newExchange(okhttp3.Interceptor$Chain,boolean)"]}, {"title": "new OkhttpClient() crash on android 4.4", "body": "version:3.14.0\r\nandroid-version:4.4\r\n\r\ncrash-code:\r\n`    new OkhttpClient();`\r\n\r\n```\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n```\r\n\r\n   java8 is already configured\r\n\r\nwhy?\r\n\r\nlog:\r\n\r\n03-19 13:01:19.857 25428-25428/com.syiyi.vote E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.syiyi.vote, PID: 25428\r\n    java.lang.ExceptionInInitializerError\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:263)\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:229)\r\n        at okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:1015)\r\n        at com.syiyi.vote.util.ConfigManager.loadConfig(ConfigManager.kt:16)\r\n        at com.syiyi.vote.page.main.MainActivity$hmasTest$1.run(MainActivity.kt:69)\r\n        at android.os.Handler.handleCallback(Handler.java:733)\r\n        at android.os.Handler.dispatchMessage(Handler.java:95)\r\n        at android.os.Looper.loop(Looper.java:136)\r\n        at android.app.ActivityThread.main(ActivityThread.java:5314)\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:515)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:864)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:680)\r\n        at dalvik.system.NativeStart.main(Native Method)\r\n     Caused by: java.lang.IllegalStateException: Expected Android API level 21+ but was 19\r\n        at okhttp3.internal.platform.AndroidPlatform.buildIfSupported(AndroidPlatform.java:238)\r\n        at okhttp3.internal.platform.Platform.findPlatform(Platform.java:202)\r\n        at okhttp3.internal.platform.Platform.<clinit>(Platform.java:79)\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:263)\u00a0\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:229)\u00a0\r\n        at okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:1015)\u00a0\r\n        at com.syiyi.vote.util.ConfigManager.loadConfig(ConfigManager.kt:16)\u00a0\r\n        at com.syiyi.vote.page.main.MainActivity$hmasTest$1.run(MainActivity.kt:69)\u00a0\r\n        at android.os.Handler.handleCallback(Handler.java:733)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:95)\u00a0\r\n        at android.os.Looper.loop(Looper.java:136)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:5314)\u00a0\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\u00a0\r\n        at java.lang.reflect.Method.invoke(Method.java:515)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:864)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:680)\u00a0\r\n        at dalvik.system.NativeStart.main(Native Method)\u00a0\r\n", "url": "https://github.com/square/okhttp/issues/4746", "user": "s949492225", "labels": ["bug"], "created": "2019-03-19 05:09:17", "closed": "2019-03-19 05:26:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Flaky test: HttpOverHttp2Test.recoverFromMultipleCancelReusesConnection", "body": "https://travis-ci.org/square/okhttp/jobs/507883859\r\n\r\n```\r\nokhttp3.internal.http2.HttpOverHttp2Test > recoverFromMultipleCancelReusesConnection[h2_prior_knowledge] FAILED\r\n    org.junit.runners.model.TestTimedOutException at HttpOverHttp2Test.java:946\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/4744", "user": "amirlivneh", "labels": ["bug", "tests"], "created": "2019-03-18 15:40:38", "closed": "2019-03-24 00:40:12", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Flaky test: DuplexTest.duplexWithRedirect", "body": "https://travis-ci.org/square/okhttp/jobs/507883749\r\n\r\n```\r\nokhttp3.DuplexTest > duplexWithRedirect FAILED\r\n    java.util.concurrent.ExecutionException at DuplexTest.java:316\r\n        Caused by: okhttp3.internal.http2.StreamResetException\r\n```", "url": "https://github.com/square/okhttp/issues/4743", "user": "amirlivneh", "labels": ["bug", "tests"], "created": "2019-03-18 15:37:29", "closed": "2019-03-24 19:43:47", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "NPE Crash At java.net.Proxy.type() on 3.12.x", "body": "Make sure this test passes:\r\nhttps://github.com/square/okhttp/commit/77f3cec493e09a704301b18d577ca7220e46231e\r\n\r\nPossibly borrowing these code changes:\r\nhttps://github.com/square/okhttp/pull/4611/files\r\n\r\nFrom this mainline issue:\r\nhttps://github.com/square/okhttp/issues/3995", "url": "https://github.com/square/okhttp/issues/4726", "user": "swankjesse", "labels": ["bug"], "created": "2019-03-16 02:07:16", "closed": "2019-05-07 17:16:03", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "[3.13.1] Program type already present: okhttp3.EventListener$Factory", "body": "To replicate I went from `okhttp 3.12.1`-> `3.13.1`\r\n\r\n`implementation 'com.squareup.okhttp3:okhttp:3.13.1'`\r\n\r\non a multidex project, now when I try to build:\r\n\r\n```\r\nAGPBI: {\"kind\":\"error\",\"text\":\"Program type already present: okhttp3.EventListener$Factory\",\"sources\":[{}],\"tool\":\"D8\"}\r\n> Task :transformDexArchiveWithDexMergerForBasicDebug FAILED\r\njava.lang.RuntimeException: java.lang.RuntimeException: com.android.builder.dexing.DexArchiveMergerException: Error while merging dex archives: /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/0, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/1, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/2, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/3, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/4, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/5, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/6, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/7, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/8, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/9, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/10, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/11, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/12, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/13, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/14, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/15, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/16, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/17, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/18, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/19, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/20, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/21, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/22, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/23, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/24, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/25, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/26, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/27, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/28, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/29, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/30, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/31, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/32, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/33, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/34, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/35, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/36, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/37, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/38, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/39, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/40, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/41, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/42, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/43, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/44, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/45, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/46, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/47, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/48, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/49, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/50, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/51, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/52, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/53, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/54, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/55, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/56, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/57, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/58, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/59, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/60, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/61, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/62, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/63, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/64, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/65, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/66, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/67, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/68, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/69, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/70, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/71\r\nLearn how to resolve the issue at https://developer.android.com/studio/build/dependencies#duplicate_classes.\r\nProgram type already present: okhttp3.EventListener$Factory\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n\tat java.util.concurrent.ForkJoinTask.reportException(ForkJoinTask.java:677)\r\n\tat java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:720)\r\n\tat com.google.common.collect.ImmutableList.forEach(ImmutableList.java:406)\r\n\tat com.android.build.gradle.internal.transforms.DexMergerTransform.transform(DexMergerTransform.java:233)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:239)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:235)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:230)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:50)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:131)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:300)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:292)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:174)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:120)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:99)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:77)\r\n\tat org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101)\r\n\tat org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44)\r\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.run(EventFiringTaskExecuter.java:51)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:300)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:292)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:174)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:46)\r\n\tat org.gradle.execution.taskgraph.LocalTaskInfoExecutor.execute(LocalTaskInfoExecutor.java:42)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareWorkItemExecutor.execute(DefaultTaskExecutionGraph.java:277)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareWorkItemExecutor.execute(DefaultTaskExecutionGraph.java:262)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:135)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:130)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.execute(DefaultTaskPlanExecutor.java:200)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.executeWithWork(DefaultTaskPlanExecutor.java:191)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.run(DefaultTaskPlanExecutor.java:130)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nLearn how to resolve the issue at https://developer.android.com/studio/build/dependencies#duplicate_classes.\r\nProgram type already present: okhttp3.EventListener$Factory\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1431)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nLearn how to resolve the issue at https://developer.android.com/studio/build/dependencies#duplicate_classes.\r\nProgram type already present: okhttp3.EventListener$Factory\r\n\tat com.android.builder.dexing.D8DexArchiveMerger.getExceptionToRethrow(D8DexArchiveMerger.java:132)\r\n\tat com.android.builder.dexing.D8DexArchiveMerger.mergeDexArchives(D8DexArchiveMerger.java:117)\r\n\tat com.android.build.gradle.internal.transforms.DexMergerTransformCallable.call(DexMergerTransformCallable.java:101)\r\n\tat com.android.build.gradle.internal.transforms.DexMergerTransformCallable.call(DexMergerTransformCallable.java:36)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1424)\r\n\t... 4 more\r\n\tat com.android.tools.r8.utils.ExceptionUtils.withCompilationHandler(ExceptionUtils.java:65)\r\n\tat com.android.tools.r8.utils.ExceptionUtils.withD8CompilationHandler(ExceptionUtils.java:43)\r\n\tat com.android.tools.r8.D8.run(D8.java:90)\r\n\tat com.android.builder.dexing.D8DexArchiveMerger.mergeDexArchives(D8DexArchiveMerger.java:115)\r\n\t... 7 more\r\n\tat com.android.tools.r8.utils.Reporter.failIfPendingErrors(Reporter.java:116)\r\n\tat com.android.tools.r8.utils.Reporter.fatalError(Reporter.java:74)\r\n\tat com.android.tools.r8.utils.ExceptionUtils.withCompilationHandler(ExceptionUtils.java:59)\r\n\t... 10 more\r\nFAILURE: Build failed with an exception.\r\n* What went wrong:\r\nExecution failed for task ':transformDexArchiveWithDexMergerForBasicDebug'.\r\n> com.android.build.api.transform.TransformException: java.lang.RuntimeException: java.lang.RuntimeException: com.android.builder.dexing.DexArchiveMergerException: Error while merging dex archives: /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/0, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/1, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/2, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/3, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/4, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/5, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/6, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/7, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/8, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/9, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/10, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/11, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/12, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/13, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/14, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/15, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/16, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/17, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/18, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/19, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/20, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/21, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/22, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/23, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/24, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/25, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/26, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/27, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/28, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/29, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/30, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/31, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/32, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/33, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/34, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/35, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/36, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/37, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/38, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/39, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/40, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/41, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/42, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/43, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/44, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/45, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/46, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/47, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/48, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/49, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/50, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/51, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/52, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/53, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/54, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/55, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/56, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/57, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/58, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/59, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/60, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/61, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/62, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/63, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/64, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/65, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/66, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/67, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/68, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/69, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/70, /Users/gubatron/workspace.frostwire/frostwire/android/build/intermediates/transforms/dexBuilder/basic/debug/71\r\n  Learn how to resolve the issue at https://developer.android.com/studio/build/dependencies#duplicate_classes.\r\n  Program type already present: okhttp3.EventListener$Factory\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/4724", "user": "gubatron", "labels": ["bug"], "created": "2019-03-15 03:11:42", "closed": "2019-03-18 14:17:03", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "IllegalStateException: closed", "body": "We have faced this issue for certain users. And we know it can be reproduced under certain environment, since it will block these users constantly while it happens. But our developers cannot reproduce this issue.\r\nJust want to see if anyone has insights about it\r\n```\r\nokhttp3.internal.http1.Http1Codec$ChunkedSource.read(Http1Codec.java:445)\r\nokio.RealBufferedSource.readAll(RealBufferedSource.java:173)\r\nretrofit2.Utils.buffer(Utils.java:303)\r\nretrofit2.OkHttpCall.parseResponse(OkHttpCall.java:198)\r\nretrofit2.OkHttpCall.execute(OkHttpCall.java:174)\r\nretrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:41)\r\nio.reactivex.Observable.subscribe(Observable.java:10910)\r\nretrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\nio.reactivex.Observable.subscribe(Observable.java:10910)\r\nio.reactivex.internal.operators.observable.ObservableMap.subscribeActual(ObservableMap.java:33)\r\nio.reactivex.Observable.subscribe(Observable.java:10910)\r\nio.reactivex.internal.operators.observable.ObservableSubscribeOn$SubscribeTask.run(ObservableSubscribeOn.java:96)\r\nio.reactivex.Scheduler$DisposeTask.run(Scheduler.java:452)\r\nio.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:61)\r\nio.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:52)\r\njava.util.concurrent.FutureTask.run(FutureTask.java:266)\r\njava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)\r\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\njava.lang.Thread.run(Thread.java:764)\r\n```", "url": "https://github.com/square/okhttp/issues/4722", "user": "wuhao-ouyang", "labels": ["bug", "needs info"], "created": "2019-03-14 21:25:47", "closed": "2019-06-11 18:46:32", "commits": {}, "ttf": 88.00027777777778, "commitsDetails": []}, {"title": "java.lang.NoClassDefFoundError: java.util.Objects", "body": "Genymotion Samsung Galaxy S2 4.1.1 API16 480*800\r\nokhttp:3.13.1\r\n\r\n![TIM\u622a\u56fe20190314145058](https://user-images.githubusercontent.com/24518328/54337169-0ae80900-4669-11e9-9f73-a814ee6028b8.jpg)\r\n![TIM\u622a\u56fe20190314145509](https://user-images.githubusercontent.com/24518328/54337208-2f43e580-4669-11e9-88ec-512dd5b1bc0e.jpg)\r\n", "url": "https://github.com/square/okhttp/issues/4716", "user": "APLK", "labels": ["bug"], "created": "2019-03-14 06:55:37", "closed": "2019-03-14 07:14:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Failed to transform file 'okhttp-3.13.1.jar' to match attributes", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\nFailed to transform file 'okhttp-3.13.1.jar' to match attributes {artifactType=android-dex, dexing-is-debuggable=true, dexing-min-sdk=15} using transform DexingTransform\r\n   > Error while dexing.", "url": "https://github.com/square/okhttp/issues/4710", "user": "zhufengi", "labels": ["bug"], "created": "2019-03-13 09:57:57", "closed": "2019-03-13 11:53:53", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.ExceptionInInitializerError         at okhttp3.OkHttpClient.newSslSocketFactory", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n", "url": "https://github.com/square/okhttp/issues/4709", "user": "chengmenghuiAndroid", "labels": ["bug"], "created": "2019-03-13 07:09:17", "closed": "2019-03-14 01:55:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "CallTest.recoverWhenRetryOnConnectionFailureIsTrue_HTTP2 is flaky", "body": "Example build: https://travis-ci.org/square/okhttp/jobs/504497379\r\n\r\nThis assertion fails: https://github.com/square/okhttp/blob/c912b90b8a0f735eaf057b2f623cc2cda5251fab/okhttp-tests/src/test/java/okhttp3/CallTest.java#L1054", "url": "https://github.com/square/okhttp/issues/4704", "user": "amirlivneh", "labels": ["bug", "tests"], "created": "2019-03-11 03:19:04", "closed": "2019-03-25 12:27:58", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "When TLS uses pre-shared keys the Handshake has no peer certs", "body": "Java 11\u2019s TLS stack [automatically supports](https://bugs.openjdk.java.net/browse/JDK-8049402) pre-shared keys when attempting a repeat TLS connection to a server.\r\n\r\nUnfortunately these TLS handshakes don\u2019t have peer certificates and `SSLSession.getPeerCertificates()` throws.\r\n\r\nWithout the peer certificates other things break including certificate pinning.\r\n\r\n```\r\njava.util.NoSuchElementException\r\n\tat java.base/java.util.ArrayDeque.removeFirst(ArrayDeque.java:363)\r\n\tat okhttp3.internal.tls.BasicCertificateChainCleaner.clean(BasicCertificateChainCleaner.java:58)\r\n\tat okhttp3.CertificatePinner.check(CertificatePinner.java:166)\r\n\tat okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:358)\r\n\tat okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:300)\r\n```\r\n\r\nThis is reproduced by `CallTest.matchingPinnedCertificate()` on Java 11.", "url": "https://github.com/square/okhttp/issues/4703", "user": "swankjesse", "labels": ["bug"], "created": "2019-03-10 16:29:00", "closed": "2019-06-22 08:50:54", "commits": {}, "ttf": 103.00027777777778, "commitsDetails": []}, {"title": "File Descriptors exhausted by Cache", "body": "We are observing crashes in a Android app that are caused by the exhaustion of the available File Descriptors.\r\nThis seems to happen if many requests are `Call.enqueue`ed. We already made sure that we only have a single OkHttp instance.\r\nWhile debugging it on a rooted emulator it seems to only happen if `OkHttpClient.Builder.cache()` is used.\r\n### `Call.enqueue`ing a few thousand calls, with a Cache set, leads to:\r\n- number of open File Descriptors goes up quite fast (well beyond 1k) and decreases slowly as the requests are being processed. If it does not crash because of missing File Descriptors it will go back to a normal number again once requests are finishing. \r\n```\r\n...\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n967\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n1327\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n1617\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n1963\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n1547\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n1040\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n536\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n149\r\n```\r\nand there are thousand of open File Descriptors like:\r\n```\r\n/proc/<pid>/fd # ls -al\r\n\r\n/<path-to-the-http-cache>/c5c99e84ce2ff13078cb523c95d74dff.1.tmp\r\n/<path-to-the-http-cache>/e4e886e180225e2e05a2e1cf94537ef9.1.tmp\r\n/<path-to-the-http-cache>/80de10600cb6c424fe994169e1135620.1.tmp\r\n/<path-to-the-http-cache>/043d5411a5b6f8930d8c34397b983e74.1.tmp\r\n```\r\n\r\n### `Call.enqueue`ing a few thousand calls, with**out** a Cache set, leads to:\r\n- steady number of open File Descriptors that stays around that number while the requests are being fetched\r\n```\r\n/proc/<pid>/fd # ls -al | wc -l                                                                                        \r\n150\r\n```\r\n\r\nFor both runs (with and without cache) the app storage was cleared (nothing cached yet), so I think it is caused by OkHttp Cache writing all the responses to the File System.\r\n", "url": "https://github.com/square/okhttp/issues/4699", "user": "awenger", "labels": ["bug", "needs info"], "created": "2019-03-08 16:44:48", "closed": "2019-12-23 08:08:07", "commits": {}, "ttf": 289.0002777777778, "commitsDetails": []}, {"title": "Android 6.0.1 Use OkHhttp  with Retrofit  cause:  java.lang.InternalError:  Invoking getAttribute with bad arg 0", "body": "Use OkHttp with Retrofit   Crash only on  Android 6.0.1 Devices\uff0c Maybe an ART Bug?\r\n\r\n##  Versions:\r\nOkhttp:   3.10.0\r\nRetrofit:  2.4.0\r\nRxjava:  2.0.8\r\nAndroid Gradle Plugin: 3.2.1\r\n\r\n## Crash log\uff1a\r\n```\r\n\u00a0java.lang.InternalError:Invoking getAttribute with bad arg 0, type 'Lcom/example/user/model/RegisterModel;' not instance of 'Ljava/lang/String;'\r\n\r\n2  at com.example.user.UserHelper$Companion.io.reactivex.Observable register(com.example.user.model.RegisterModel)(SourceFile:77)\r\n3  at com.example.user.login.LoginPresenter.io.reactivex.Observable \r\n\r\n```\r\n## My Code\uff1a\r\n \r\n```kotlin\r\n\r\ninterface ApiService {\r\n\r\n    @POST(AppConfig.API_PATH + \"/register\")\r\n    fun register(@Body registerModel: RegisterModel): Observable<LoginRespResult>\r\n\r\n}\r\n\r\n@Keep\r\nclass RegisterModel {\r\n    @SerializedName(\"email\")\r\n    @JvmField\r\n    var emailAddress: String? = null\r\n    @SerializedName(\"password\")\r\n    @JvmField\r\n    var password: String? = null\r\n\r\n}\r\n\r\n@Keep\r\nclass LoginRespResult {\r\n    @SerializedName(\"auth\")\r\n    @JvmField\r\n    var userAuth: UserAuth? = null\r\n}\r\n\r\n// call api\r\n\r\nfun test() {\r\n       HttpClient.API.register(registerModel)\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe()                \r\n}\r\n\r\n```\r\n\r\n\r\n##   Someone other  asked\uff1a\r\n[Redmi note 3 ,Android 6.0.1 crash](https://cloud.tencent.com/developer/ask/196354)\r\n\r\n`\r\njava.lang.InternalError: Invoking with bad arg 0, type 'Lokhttp3/RequestBody$2;' not instance of '[Ljava/lang/Object;'\r\n2    at com.sfpush.pushsdk.PushManager.getRegistrationId(PushManager.java:152)\r\n3    at com.sfpush.pushsdk.PushManager.start(PushManager.java:63)\r\n4    at com.sferp.employe.ui.MainActivity.onCreate(MainActivity.java:174)\r\n5    at android.app.Activity.performCreate(Activity.java:6278)\r\n6    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1107)\r\n7    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2396)\r\n8    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2503)\r\n9    at android.app.ActivityThread.-wrap11(ActivityThread.java)\r\n10    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1353)\r\n11    at android.os.Handler.dispatchMessage(Handler.java:102)\r\n12    at android.os.Looper.loop(Looper.java:148)\r\n13    at android.app.ActivityThread.main(ActivityThread.java:5529)\r\n14    at java.lang.reflect.Method.invoke(Native Method)\r\n15    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:745)\r\n16    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:635)\r\n`\r\n\r\n## Related stackoverflow question:\r\n[Why does Facebook and Messenger set the vmSafeMode option as false to the manifest file?\r\n](https://stackoverflow.com/questions/54439914/why-does-facebook-and-messenger-set-the-vmsafemode-option-as-false-to-the-manife?newreg=73e576d3be374379a22241849dd184ab)", "url": "https://github.com/square/okhttp/issues/4697", "user": "nicai1900", "labels": ["bug"], "created": "2019-03-08 12:03:16", "closed": "2019-03-11 03:37:22", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "WebSocketHttpTest.missingConnectionHeader failing randomly", "body": "I've just seen this fail locally with latest master (which includes fix for #4658)\r\n\r\n```\r\n[ERROR] Tests run: 40, Failures: 1, Errors: 0, Skipped: 1, Time elapsed: 8.026 s <<< FAILURE! - in okhttp3.internal.ws.WebSocketHttpTest\r\n[ERROR] missingConnectionHeader(okhttp3.internal.ws.WebSocketHttpTest)  Time elapsed: 0.013 s  <<< FAILURE!\r\njava.lang.AssertionError: expected:<0> but was:<1>\r\n\tat okhttp3.internal.ws.WebSocketHttpTest.missingConnectionHeader(WebSocketHttpTest.java:309)\r\n```\r\n\r\nFINE logs of testsuite [here](https://www.dropbox.com/s/sbb21spbn43j69y/okhttp-missingConnectionHeader.tgz?dl=0).", "url": "https://github.com/square/okhttp/issues/4695", "user": "galderz", "labels": ["bug"], "created": "2019-03-08 10:10:42", "closed": "2019-04-13 16:03:53", "commits": {"12bc2b7bde7cbf70be932729045120dc021e25e7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "12bc2b7bde7cbf70be932729045120dc021e25e7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["e7c533e4aca63e14fdb64a51f7aee722a4307b7b", "e7a04f92a2f5d1fa13866b333dada999c3c11fd8"], "nameRev": "12bc2b7bde7cbf70be932729045120dc021e25e7 tags/parent-3.14.0~8", "commitMessage": "Merge pull request #4696 from galderz/t_websocket_randomfail\n\nRelease websocket transmitter before failing response #4695", "commitDateTime": "2019-03-08 21:23:18", "authoredDateTime": "2019-03-08 21:23:18", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealWebSocket.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.connect(okhttp3.OkHttpClient).1.onResponse(okhttp3.Call,okhttp3.Response)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SocketTimeoutException when using Http2", "body": "OkHttp Version : okhttp/3.12.1\r\nHttp protocol : h2\r\n\r\n\r\nHere is the request log:\r\n![image](https://user-images.githubusercontent.com/1811579/54020768-8a895a00-41c9-11e9-98b9-3cef1953a641.png)\r\n\r\nI got this Excpeption:\r\n\r\nLoggingEventListener: [10061 ms] connectionReleased\r\n2019-03-08 17:41:04.904 27183-27248/com.immomo.momo.dev D/LoggingEventListener: [10061 ms] callEnd\r\n2019-03-08 17:41:04.905 27183-27248/com.immomo.momo.dev D/LoggingEventListener: [10061 ms] callFailed: java.net.SocketTimeoutException: timeout\r\n2019-03-08 17:41:04.905 27183-27248/com.immomo.momo.dev W/System.err: java.net.SocketTimeoutException: timeout\r\n2019-03-08 17:41:04.905 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http2.Http2Stream$StreamTimeout.newTimeoutException(Http2Stream.java:656)\r\n2019-03-08 17:41:04.905 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http2.Http2Stream$StreamTimeout.exitAndThrowIfTimedOut(Http2Stream.java:664)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http2.Http2Stream.takeHeaders(Http2Stream.java:153)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http2.Http2Codec.readResponseHeaders(Http2Codec.java:131)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:61)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:254)\r\n2019-03-08 17:41:04.906 27183-27248/com.immomo.momo.dev W/System.err:     at okhttp3.RealCall.execute(RealCall.java:92)\r\n\r\nBut when i force use Protocol.HTTP_1_1 , every request is ok, how can I fix this problem , thanks \ud83d\udc4d ", "url": "https://github.com/square/okhttp/issues/4694", "user": "SwordBearer", "labels": ["bug"], "created": "2019-03-08 09:50:20", "closed": "2019-03-11 02:18:34", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "ssl handshake time ", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n\r\nHttpLoggingInterceptor logging = new HttpLoggingInterceptor();\r\n      // set your desired log level\r\n      logging.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n      OkHttpClient okHttpClient = new OkHttpClient().newBuilder()\r\n          .connectTimeout(TIMEOUT, TimeUnit.SECONDS)\r\n          .readTimeout(TIMEOUT, TimeUnit.SECONDS)\r\n          .writeTimeout(TIMEOUT, TimeUnit.SECONDS)\r\n          .addNetworkInterceptor(new Interceptor() {\r\n            @Override public Response intercept(Chain chain) throws IOException {\r\n              okhttp3.Request request = chain.request()\r\n                  .newBuilder()\r\n                  .build();\r\n              return chain.proceed(request);\r\n            }\r\n          })\r\n          .addInterceptor(logging)\r\n          .build();\r\n\r\n      mRetrofit4 = new Retrofit.Builder().baseUrl(\"https://enquiry.indianrail.gov.in/crisntes/\")\r\n          .client(okHttpClient)\r\n          .addConverterFactory(new NullOnEmptyConverterFactory())\r\n          .addConverterFactory(new ToStringConverterFactory())\r\n          .addConverterFactory(ScalarsConverterFactory.create())\r\n          .addConverterFactory(GsonConverterFactory.create())\r\n          .build();\r\n      mApiHelper4 = mRetrofit4.create(ApiHelper.class);\r\n\r\ngetting SSL handshake exception\r\nIt is working when making network call using HttpUrlConnection \r\n", "url": "https://github.com/square/okhttp/issues/4692", "user": "ankitjain10", "labels": ["bug"], "created": "2019-03-08 07:36:06", "closed": "2019-03-13 11:31:52", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Strange crash during initialization sequense", "body": "```\r\nNumberFormatException: Invalid BigInteger: 82cb8efb37a1e084693f6d8cf8b35f0082aaf61676a7c8bf37ec06396037168a635278a1a8fa5c138cd\u000e9eb&bFab4`4df@1/3scd7r5eec2le de4g8a4-9\"3eet\r\n       at java.math.BigInt.invalidBigInteger(BigInt.java:90)\r\n       at java.math.BigInt.checkString(BigInt.java:144)\r\n       at java.math.BigInt.putHexString(BigInt.java:103)\r\n       at java.math.BigInteger.<init>(BigInteger.java:244)\r\n       at com.android.org.conscrypt.PinListEntry.validatePin(PinListEntry.java:133)\r\n       at com.android.org.conscrypt.PinListEntry.addPins(PinListEntry.java:121)\r\n       at com.android.org.conscrypt.PinListEntry.<init>(PinListEntry.java:77)\r\n       at com.android.org.conscrypt.CertPinManager.rebuild(CertPinManager.java:91)\r\n       at com.android.org.conscrypt.CertPinManager.<init>(CertPinManager.java:49)\r\n       at com.android.org.conscrypt.TrustManagerImpl.<init>(TrustManagerImpl.java:137)\r\n       at com.android.org.conscrypt.TrustManagerImpl.<init>(TrustManagerImpl.java:97)\r\n       at com.android.org.conscrypt.TrustManagerFactoryImpl.engineGetTrustManagers(TrustManagerFactoryImpl.java:80)\r\n       at javax.net.ssl.TrustManagerFactory.getTrustManagers(TrustManagerFactory.java:219)\r\n       at okhttp3.internal.Util.platformTrustManager(Util.java:667)\r\n       at okhttp3.OkHttpClient.<init>(OkHttpClient.java:257)\r\n       at okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:1040)\r\n```\r\n\r\n Android 4.4.2\r\n Galaxy Tab4 7.0\r\n", "url": "https://github.com/square/okhttp/issues/4691", "user": "OleksandrKucherenko", "labels": ["bug"], "created": "2019-03-07 15:57:19", "closed": "2019-04-13 16:05:29", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "failedRoutes in RouteDatabase causes Full GC", "body": "1. In my project, I used Okhttp with a large of proxies. Most of the proxies were used only once, so failedRoutes saved too many routes and cause full gc all the time\r\n2. I think that failedRoutes use a time-bound cache instead of a simple set is better\r\n", "url": "https://github.com/square/okhttp/issues/4689", "user": "lfz757077613", "labels": ["bug"], "created": "2019-03-07 06:52:46", "closed": "2020-03-19 02:19:00", "commits": {"f0501a15abe6ca89e183e631965883b830f4ad72": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "6f79b1752accb6e94eebf68115d88d860cda86c3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 377.0002777777778, "commitsDetails": [{"commitHash": "f0501a15abe6ca89e183e631965883b830f4ad72", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6f79b1752accb6e94eebf68115d88d860cda86c3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "LoggingEventListenerTest.secureGet failing with incorrect cipher suite", "body": "`LoggingEventListenerTest.secureGet` failing on `jdk1.8.0_144` with:\r\n\r\n```\r\njava.lang.AssertionError: \r\n<[382 ms] secureConnectEnd: Handshake{tlsVersion=TLS_1_2 cipherSuite=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 peerCertificates=[CN=localhost] localCertificates=[]}>\r\ndid not match pattern\r\n<\\[\\d+ ms] secureConnectEnd: Handshake\\{tlsVersion=TLS_1_[23] cipherSuite=(?:TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384|TLS_AES_128_GCM_SHA256) peerCertificates=\\[CN=localhost\\] localCertificates=\\[\\]}>\r\n\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat okhttp3.logging.HttpLoggingInterceptorTest$LogRecorder.assertLogMatch(HttpLoggingInterceptorTest.java:861)\r\n\tat okhttp3.logging.LoggingEventListenerTest$LogRecorder.assertLogMatch(LoggingEventListenerTest.java:224)\r\n\tat okhttp3.logging.LoggingEventListenerTest.secureGet(LoggingEventListenerTest.java:148)\r\n```", "url": "https://github.com/square/okhttp/issues/4685", "user": "galderz", "labels": ["bug"], "created": "2019-03-06 06:35:51", "closed": "2019-04-13 16:06:11", "commits": {"5dcff56604612efe14f51ee64ee1992f07b4c5f0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 38.000277777777775, "commitsDetails": [{"commitHash": "5dcff56604612efe14f51ee64ee1992f07b4c5f0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["8c3709689650eec64ecab12a9a6e9a667fc82062", "ee011b71cf8898d5b974ae6bb5cad787bfe70320"], "nameRev": "5dcff56604612efe14f51ee64ee1992f07b4c5f0 tags/parent-3.14.0~14", "commitMessage": "Merge pull request #4686 from galderz/t_logmatch\n\nExpand possible cipher suite options #4685", "commitDateTime": "2019-03-06 07:55:08", "authoredDateTime": "2019-03-06 07:55:08", "commitGitStats": [{"filePath": "okhttp-logging-interceptor/src/test/java/okhttp3/logging/LoggingEventListenerTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LoggingEventListenerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.logging.LoggingEventListenerTest.secureGet()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "CookieJar not working on Android Pie", "body": "Anyone encountered problem where your app network calls work perfectly on devices which are not on Android Pie, but fails on Android Pie? I use cookie authorization for my Android app, and it works perfectly with OkHttp client which is setup like this: \r\n\r\n```\r\nCookieManager cookieManager = new CookieManager();\r\ncookieManager.setCookiePolicy(CookiePolicy.ACCEPT_ALL);\r\nJavaNetCookieJar cookieJar = new JavaNetCookieJar(cookieManager);\r\n\r\nOkHttpClient client = new OkHttpClient.Builder().cookieJar(cookieJar).build();\r\n```\r\n\r\nProblem appears on Android 9 (Pie) devices, where my server fails to fetch cookies from request I call on my device.", "url": "https://github.com/square/okhttp/issues/4673", "user": "banmarkovic", "labels": ["bug"], "created": "2019-03-01 15:49:26", "closed": "2019-03-03 16:33:45", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "SocketTimeoutException over mobile network, fails twice and works third time", "body": "Hi I am having a strange issue, our API provider recently moved to TLS and we started getting timeout errors on some devices over mobile data. WIFI works fine.\r\n\r\nIt gives the timeout error twice and works fine third time. I am sure there is some kind of fallback that is happening the third time.\r\n\r\nI am using okhttp:3.13.1\r\n\r\n```\r\nHttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\r\n        interceptor.setLevel(HttpLoggingInterceptor.Level.HEADERS);\r\n        interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n        OkHttpClient.Builder builder = new OkHttpClient.Builder()\r\n                .addNetworkInterceptor(interceptor)\r\n                .addInterceptor(interceptor)\r\n                .eventListener(new PrintingEventListener())\r\n                .retryOnConnectionFailure(true)\r\n                .connectTimeout(300L, TimeUnit.MILLISECONDS).writeTimeout(5L, TimeUnit.MINUTES).readTimeout(5L, TimeUnit.MINUTES);\r\n```\r\n\r\nIf I increase the connectTimeout to 10 Seconds, 20 Seconds, 1 Minute, it still fails twice and works the third time.\r\n\r\nThis is the response on my OnePlus 5, Android version 9, 4G data\r\n\r\n```\r\nI/System.out: 0.000 callStart\r\nD/OkHttp: --> GET xxxxxx\r\nD/OkHttp: --> END GET\r\nI/System.out: 0.010 dnsStart\r\nI/System.out: 1.125 dnsEnd\r\nI/System.out: 1.132 connectStart\r\nW/System.err: java.net.SocketTimeoutException: failed to connect to xxxx/2406:da1a:881:7f00:ab8d:5b6f:e60f:9ac6 (port 443) from /2402:3a80:93f:31cf:cb68:3e51:8e44:6269 (port 48937) after 300ms\r\nW/System.err:     at libcore.io.IoBridge.connectErrno(IoBridge.java:185)\r\nW/System.err:     at libcore.io.IoBridge.connect(IoBridge.java:129)\r\nW/System.err:     at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:137)\r\nW/System.err:     at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:390)\r\nW/System.err:     at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:230)\r\nW/System.err:     at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:212)\r\nW/System.err:     at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:436)\r\nW/System.err:     at java.net.Socket.connect(Socket.java:621)\r\nW/System.err:     at okhttp3.internal.platform.AndroidPlatform.connectSocket(AndroidPlatform.java:71)\r\nW/System.err:     at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)\r\nW/System.err:     at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:167)\r\nW/System.err:     at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\nW/System.err:     at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\nW/System.err:     at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\nW/System.err:     at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nW/System.err:     at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nW/System.err:     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nW/System.err:     at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:212)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nW/System.err:     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:264)\r\nW/System.err:     at okhttp3.RealCall$AsyncCall.execute(RealCall.java:210)\r\nW/System.err:     at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\nW/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\nW/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\nW/System.err:     at java.lang.Thread.run(Thread.java:764)\r\nI/System.out: 1.451 connectFailed\r\nI/System.out: 1.456 connectStart\r\nW/System.err: java.net.SocketTimeoutException: failed to connect to xxxx/2406:da1a:881:7f01:bd15:e30f:d8d9:9010 (port 443) from /2402:3a80:93f:31cf:cb68:3e51:8e44:6269 (port 40799) after 300ms\r\nW/System.err:     at libcore.io.IoBridge.connectErrno(IoBridge.java:185)\r\nW/System.err:     at libcore.io.IoBridge.connect(IoBridge.java:129)\r\nW/System.err:     at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:137)\r\nW/System.err:     at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:390)\r\nW/System.err:     at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:230)\r\nW/System.err:     at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:212)\r\nW/System.err:     at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:436)\r\nW/System.err:     at java.net.Socket.connect(Socket.java:621)\r\nW/System.err:     at okhttp3.internal.platform.AndroidPlatform.connectSocket(AndroidPlatform.java:71)\r\nW/System.err:     at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)\r\nW/System.err:     at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:167)\r\nW/System.err:     at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\nW/System.err:     at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\nW/System.err:     at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\nW/System.err:     at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nW/System.err:     at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nW/System.err:     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nW/System.err:     at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:212)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\nW/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\nW/System.err:     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:264)\r\nW/System.err:     at okhttp3.RealCall$AsyncCall.execute(RealCall.java:210)\r\nW/System.err:     at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\nW/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\nW/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\nW/System.err:     at java.lang.Thread.run(Thread.java:764)\r\nI/System.out: 1.773 connectFailed\r\nI/System.out: 1.777 connectStart\r\nI/System.out: 1.892 secureConnectStart\r\nI/System.out: 2.087 secureConnectEnd\r\nI/System.out: 2.093 connectEnd\r\nI/System.out: 2.095 connectionAcquired\r\nD/OkHttp: --> GET xxxx h2\r\nD/OkHttp: Host: xxxx\r\nD/OkHttp: Connection: Keep-Alive\r\nD/OkHttp: Accept-Encoding: gzip\r\nD/OkHttp: User-Agent: okhttp/3.13.1\r\nD/OkHttp: --> END GET\r\nI/System.out: 2.096 requestHeadersStart\r\nI/System.out: 2.098 requestHeadersEnd\r\nI/System.out: 2.099 responseHeadersStart\r\nI/System.out: 2.303 responseHeadersEnd\r\nI/System.out: 2.307 responseBodyStart\r\nD/OkHttp: <-- 200 xxxx (214ms)\r\nD/OkHttp: date: Wed, 27 Feb 2019 09:17:39 GMT\r\nD/OkHttp: content-type: application/json;charset=UTF-8\r\nD/OkHttp: access-control-allow-origin: *\r\nD/OkHttp: access-control-allow-methods: POST, GET, OPTIONS, DELETE\r\nD/OkHttp: access-control-max-age: 3600\r\nD/OkHttp: access-control-allow-headers: token,Accept,Authorization,WWW-Authenticate,Connection,X-Requested-With,Pragma,Cache-Control,Accept-Language,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With,app-type,sessionId,source\r\nD/OkHttp: x-application-context: application:prod:80\r\nD/OkHttp: {\"statusCode\":\"OK\",\"message\":\"SUCCESS\",\"data\":\"yyyy\"}\r\nD/OkHttp: <-- END HTTP (454-byte body)\r\nD/OkHttp: <-- 200 xxxx (2309ms)\r\nD/OkHttp: date: Wed, 27 Feb 2019 09:17:39 GMT\r\nD/OkHttp: content-type: application/json;charset=UTF-8\r\nD/OkHttp: access-control-allow-origin: *\r\nD/OkHttp: access-control-allow-methods: POST, GET, OPTIONS, DELETE\r\nD/OkHttp: access-control-max-age: 3600\r\nD/OkHttp: access-control-allow-headers: token,Accept,Authorization,WWW-Authenticate,Connection,X-Requested-With,Pragma,Cache-Control,Accept-Language,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With,app-type,sessionId,source\r\nD/OkHttp: x-application-context: application:prod:80\r\nD/OkHttp: {\"statusCode\":\"OK\",\"message\":\"SUCCESS\",\"data\":\"yyyy\"}\r\nD/OkHttp: <-- END HTTP (454-byte body)\r\n```\r\nWhen over Wifi\r\n```\r\nI/System.out: 0.000 callStart\r\nD/OkHttp: --> GET xxxx\r\nD/OkHttp: --> END GET\r\nI/System.out: 0.057 dnsStart\r\nI/System.out: 1.302 dnsEnd\r\nI/System.out: 1.305 connectStart\r\nI/System.out: 1.585 secureConnectStart\r\nI/System.out: 2.487 secureConnectEnd\r\nI/System.out: 2.508 connectEnd\r\nI/System.out: 2.509 connectionAcquired\r\nD/OkHttp: --> GET xxxx h2\r\nD/OkHttp: Host: xxx\r\nD/OkHttp: Connection: Keep-Alive\r\nD/OkHttp: Accept-Encoding: gzip\r\nD/OkHttp: User-Agent: okhttp/3.13.1\r\nD/OkHttp: --> END GET\r\nI/System.out: 2.516 requestHeadersStart\r\nI/System.out: 2.529 requestHeadersEnd\r\nI/System.out: 2.530 responseHeadersStart\r\nI/System.out: 2.788 responseHeadersEnd\r\nI/System.out: 2.789 responseBodyStart\r\nD/OkHttp: <-- 200 xxxx (275ms)\r\nD/OkHttp: date: Wed, 27 Feb 2019 09:16:37 GMT\r\nD/OkHttp: content-type: application/json;charset=UTF-8\r\nD/OkHttp: access-control-allow-origin: *\r\nD/OkHttp: access-control-allow-methods: POST, GET, OPTIONS, DELETE\r\nD/OkHttp: access-control-max-age: 3600\r\nD/OkHttp: access-control-allow-headers: token,Accept,Authorization,WWW-Authenticate,Connection,X-Requested-With,Pragma,Cache-Control,Accept-Language,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With,app-type,sessionId,source\r\nD/OkHttp: x-application-context: application:prod:80\r\nD/OkHttp: {\"statusCode\":\"OK\",\"message\":\"SUCCESS\",\"data\":\"yyyy\"}\r\nD/OkHttp: <-- END HTTP (454-byte body)\r\nD/OkHttp: <-- 200 xxxx (2747ms)\r\nD/OkHttp: date: Wed, 27 Feb 2019 09:16:37 GMT\r\nD/OkHttp: content-type: application/json;charset=UTF-8\r\nD/OkHttp: access-control-allow-origin: *\r\nD/OkHttp: access-control-allow-methods: POST, GET, OPTIONS, DELETE\r\nD/OkHttp: access-control-max-age: 3600\r\nD/OkHttp: access-control-allow-headers: token,Accept,Authorization,WWW-Authenticate,Connection,X-Requested-With,Pragma,Cache-Control,Accept-Language,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With,app-type,sessionId,source\r\nD/OkHttp: x-application-context: application:prod:80\r\nD/OkHttp: {\"statusCode\":\"OK\",\"message\":\"SUCCESS\",\"data\":\"yyyy\"}\r\nD/OkHttp: <-- END HTTP (454-byte body)\r\nI/Timeline: Timeline: Activity_idle id: android.os.BinderProxy@30106f47 time:153260486\r\nD/ViewRootImpl: ViewPostImeInputStage ACTION_DOWN\r\nD/ViewRootImpl: ViewPostImeInputStage ACTION_DOWN\r\n```\r\n\r\nSame is happening over different types of phones on different android versions over different mobile networks. And strangely it is working perfectly fine on some phones. Works fine over wifi. Also working fine on iOS.\r\n\r\nI cannot prove the API information so I have replaced the sensitive info with xxxx(API endpoint) and yyyy(response)\r\n\r\nSame is over previous version when using with retrofit 2.1.0 so Okhttp 3.3.0\r\nIs there any ConnectionSpec I can use for this.\r\nI have gone through hundreds of links. Please advice.\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4671", "user": "NaveenSinghTTN", "labels": ["bug"], "created": "2019-02-28 17:34:20", "closed": "2019-03-01 07:16:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SSL handshake aborted: ssl=0xe31d0a08: Failure in SSL library, usually a protocol error (3.13.1)", "body": "When upgrading from 3.12.1 to 3.13.1 I get this exception:\r\n```\r\n\r\n    javax.net.ssl.SSLHandshakeException: Handshake failed\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(ConscryptFileDescriptorSocket.java:286)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:320)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\r\n        at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n        at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n        at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at org.foo.manager.service.HttpClient$LoggingInterceptor.intercept(HttpClient.java:122)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:264)\r\n        at okhttp3.RealCall.execute(RealCall.java:93)\r\n        at retrofit2.OkHttpCall.execute(OkHttpCall.java:186)\r\n        at retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:45)\r\n        at io.reactivex.Observable.subscribe(Observable.java:12246)\r\n        at retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\r\n...\r\n     Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xe31d0a08: Failure in SSL library, usually a protocol error\r\n    error:100000f0:SSL routines:OPENSSL_internal:UNSUPPORTED_PROTOCOL (external/boringssl/src/ssl/handshake_client.cc:576 0xe09aba43:0x00000000)\r\n        at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\r\n        at com.android.org.conscrypt.NativeSsl.doHandshake(NativeSsl.java:375)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(ConscryptFileDescriptorSocket.java:224)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:320)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:284)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:169)\r\n        at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n        at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n        at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at org.foo.manager.service.HttpClient$LoggingInterceptor.intercept(HttpClient.java:122)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:264)\r\n        at okhttp3.RealCall.execute(RealCall.java:93)\r\n        at retrofit2.OkHttpCall.execute(OkHttpCall.java:186)\r\n\r\n```\r\n\r\n```\r\n    public class LoggingInterceptor implements Interceptor {\r\n        @EverythingIsNonNull\r\n        @Override\r\n        public okhttp3.Response intercept(Chain chain) throws IOException {\r\n            Request request = chain.request();\r\n\r\n            long t1 = System.nanoTime();\r\n\r\n            okhttp3.Response response = chain.proceed(request);\r\n\r\n            long t2 = System.nanoTime();\r\n            String log = String.format(\"<-- Received response for %s in %.1fms%n%s\", response.request().url(), (t2 - t1) / 1e6d, response.headers());\r\n\r\n            if (response.body() != null) {\r\n                MediaType contentType = response.body().contentType();\r\n                byte[] bytes = response.body().bytes();\r\n                String content = new String(bytes, Charset.forName(\"ISO-8859-1\"));\r\n                Log.d(\"OkHttp\", log + \"\\n\" + content);\r\n\r\n                ResponseBody wrappedBody = ResponseBody.create(contentType, bytes);\r\n                return response.newBuilder().body(wrappedBody).build();\r\n            }\r\n            Log.d(\"OkHttp\", log);\r\n            return response;\r\n        }\r\n    }\r\n\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/4670", "user": "flocsy", "labels": ["bug", "needs info"], "created": "2019-02-27 20:58:43", "closed": "2019-03-04 17:36:08", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Required method checkServerTrusted(X509Certificate[], String, String, String) missing (3.13.0)", "body": "When upgrading from 3.12.1 to 3.13.0 I get these exceptions:\r\n\r\n```\r\n2019-02-27 22:47:21.106 24799-24799 E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.fletech.trackid, PID: 24799\r\n    java.lang.AssertionError: java.lang.reflect.InvocationTargetException\r\n        at okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(AndroidPlatform.java:201)\r\n        at okhttp3.internal.tls.CertificateChainCleaner.get(CertificateChainCleaner.java:41)\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:821)\r\n        at org.foo.manager.service.HttpClient.getHttpClientBuilder(HttpClient.java:102)\r\n        at org.foo.manager.service.HttpClient.getClient(HttpClient.java:166)\r\n        at org.foo.manager.service.WebSocketRx.<init>(WebSocketRx.java:49)\r\n        at org.foo.manager.service.WebSocketRx.init(WebSocketRx.java:37)\r\n        at org.foo.manager.service.Devices.init(Devices.java:36)\r\n        at org.foo.manager.MainApplication.onCreate(MainApplication.java:46)\r\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1154)\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5871)\r\n        at android.app.ActivityThread.access$1100(ActivityThread.java:199)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1650)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:193)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6669)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\r\n     Caused by: java.lang.reflect.InvocationTargetException\r\n        at java.lang.reflect.Constructor.newInstance0(Native Method)\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:343)\r\n        at okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(AndroidPlatform.java:196)\r\n        at okhttp3.internal.tls.CertificateChainCleaner.get(CertificateChainCleaner.java:41)\u00a0\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:821)\u00a0\r\n        at org.foo.manager.service.HttpClient.getHttpClientBuilder(HttpClient.java:102)\u00a0\r\n        at org.foo.manager.service.HttpClient.getClient(HttpClient.java:166)\u00a0\r\n        at org.foo.manager.service.WebSocketRx.<init>(WebSocketRx.java:49)\u00a0\r\n        at org.foo.manager.service.WebSocketRx.init(WebSocketRx.java:37)\u00a0\r\n        at org.foo.manager.service.Devices.init(Devices.java:36)\u00a0\r\n        at org.foo.manager.MainApplication.onCreate(MainApplication.java:46)\u00a0\r\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1154)\u00a0\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5871)\u00a0\r\n        at android.app.ActivityThread.access$1100(ActivityThread.java:199)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1650)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\u00a0\r\n        at android.os.Looper.loop(Looper.java:193)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:6669)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\u00a0\r\n     Caused by: java.lang.IllegalArgumentException: Required method checkServerTrusted(X509Certificate[], String, String, String) missing\r\n        at android.net.http.X509TrustManagerExtensions.<init>(X509TrustManagerExtensions.java:72)\r\n        at java.lang.reflect.Constructor.newInstance0(Native Method)\u00a0\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:343)\u00a0\r\n        at okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(AndroidPlatform.java:196)\u00a0\r\n        at okhttp3.internal.tls.CertificateChainCleaner.get(CertificateChainCleaner.java:41)\u00a0\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:821)\u00a0\r\n        at org.foo.manager.service.HttpClient.getHttpClientBuilder(HttpClient.java:102)\u00a0\r\n        at org.foo.manager.service.HttpClient.getClient(HttpClient.java:166)\u00a0\r\n        at org.foo.manager.service.WebSocketRx.<init>(WebSocketRx.java:49)\u00a0\r\n        at org.foo.manager.service.WebSocketRx.init(WebSocketRx.java:37)\u00a0\r\n        at org.foo.manager.service.Devices.init(Devices.java:36)\u00a0\r\n        at org.foo.manager.MainApplication.onCreate(MainApplication.java:46)\u00a0\r\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1154)\u00a0\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5871)\u00a0\r\n        at android.app.ActivityThread.access$1100(ActivityThread.java:199)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1650)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\u00a0\r\n        at android.os.Looper.loop(Looper.java:193)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:6669)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\u00a0\r\n\r\n```\r\n```\r\n    private OkHttpClient.Builder getHttpClientBuilder(boolean ignoreSslErrors) {\r\n        if(!ignoreSslErrors){\r\n            return new OkHttpClient.Builder();\r\n        }\r\n\r\n        final TrustManager[] trustAllCerts = new TrustManager[] {\r\n                new X509TrustManager() {\r\n                    @Override\r\n                    public void checkClientTrusted(java.security.cert.X509Certificate[] chain, String authType) throws CertificateException {\r\n                    }\r\n\r\n                    @Override\r\n                    public void checkServerTrusted(java.security.cert.X509Certificate[] chain, String authType) throws CertificateException {\r\n                    }\r\n\r\n                    @Override\r\n                    public java.security.cert.X509Certificate[] getAcceptedIssuers() {\r\n                        return new java.security.cert.X509Certificate[]{\r\n                        };\r\n                    }\r\n                }\r\n        };\r\n\r\n        SSLContext sslContext;\r\n        try {\r\n            sslContext = SSLContext.getInstance(\"SSL\");\r\n            sslContext.init(null, trustAllCerts, new java.security.SecureRandom());\r\n        }\r\n        catch (Exception exception){\r\n            throw new RuntimeException(exception);\r\n        }\r\n\r\n        final SSLSocketFactory sslSocketFactory = sslContext.getSocketFactory();\r\n        OkHttpClient.Builder builder = new OkHttpClient.Builder();\r\n        builder.sslSocketFactory(sslSocketFactory, (X509TrustManager) trustAllCerts[0]);\r\n        builder.hostnameVerifier((hostname, session) -> true);\r\n        return builder;\r\n    }\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/4669", "user": "flocsy", "labels": ["bug", "needs info"], "created": "2019-02-27 20:53:24", "closed": "2019-03-05 00:55:04", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Connection leaks if WebSocket handshake fails", "body": "This is a recent regression bisected to dd70407455f09f3eda7288f0bb9610f8943af03e.\r\n\r\nIt may be the cause for the recent increase in test flakiness.\r\n\r\nTo reproduce, run this modified test:\r\n```\r\n  @Test public void missingConnectionHeader() throws IOException {\r\n    webServer.enqueue(new MockResponse()\r\n        .setResponseCode(101)\r\n        .setHeader(\"Upgrade\", \"websocket\")\r\n        .setHeader(\"Sec-WebSocket-Accept\", \"ujmZX4KXZqjwy6vi1aQFH5p4Ygk=\"));\r\n    newWebSocket();\r\n\r\n    clientListener.assertFailure(101, null, ProtocolException.class,\r\n        \"Expected 'Connection' header value 'Upgrade' but was 'null'\");\r\n\r\n    client.connectionPool().evictAll();\r\n    assertEquals(0, client.connectionPool().connectionCount());\r\n  }\r\n```\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4658", "user": "amirlivneh", "labels": ["bug"], "created": "2019-02-25 05:05:42", "closed": "2019-03-07 01:55:54", "commits": {"c13c8fa897b8f33198226db9ed7f9cf471cc624c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "dff5a61fc6045f5849a2a7cd4ae2eadbfd773dd7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "c13c8fa897b8f33198226db9ed7f9cf471cc624c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "dff5a61fc6045f5849a2a7cd4ae2eadbfd773dd7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["8c3709689650eec64ecab12a9a6e9a667fc82062"], "nameRev": "dff5a61fc6045f5849a2a7cd4ae2eadbfd773dd7 tags/parent-3.14.0~11^2", "commitMessage": "Don't leak a connection if a WebSocket handshake fails\n\nI'm not particularly happy with all of the moving parts here. I think\nperhaps doing web sockets over duplex is a possible fix here.\n\nCloses: https://github.com/square/okhttp/issues/4658\n", "commitDateTime": "2019-03-06 20:40:33", "authoredDateTime": "2019-03-05 23:25:20", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/Exchange.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WebSocketHttpTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.missingConnectionHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Exchange.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.Exchange.webSocketUpgradeFailed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealWebSocket.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.extractStreamsFromResponse(okhttp3.Response)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.connect(okhttp3.OkHttpClient).1.onResponse(okhttp3.Call,okhttp3.Response)", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dff5a61fc6045f5849a2a7cd4ae2eadbfd773dd7"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9.0, "deletions": 4.0, "lines": 13.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 9.0, "UPD": 3.0, "INS": 3.0, "MOV": 2.0, "DEL": 1.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/ws", "okhttp/src/main/java/okhttp3/internal/connection"], "changesInPackagesSPOON": ["okhttp3.internal.ws.RealWebSocket.connect(okhttp3.OkHttpClient).1.onResponse(okhttp3.Call,okhttp3.Response)", "okhttp3.internal.connection.Exchange.webSocketUpgradeFailed()", "okhttp3.internal.ws.RealWebSocket.extractStreamsFromResponse(okhttp3.Response)"]}, {"title": "java.lang.NoSuchMethodError: No virtual method getHttpUrlChecked(Ljava/lang/String;)Lokhttp3/HttpUrl", "body": "Hello, everyone.\r\n\r\nI am developing an Ionic App (hence I don't know much about Android).\r\n\r\nRecently I am facing a problem since I installed two different cordova plugins which are:\r\n\r\n- https://github.com/silkimen/cordova-plugin-advanced-http\r\n- https://github.com/situmtech/situm-cordova-plugin\r\n\r\nWhen I install these two plugins **and** make a HTTP request, I get the following error:\r\n\r\n```\r\njava.lang.NoSuchMethodError: No virtual method getHttpUrlChecked(Ljava/lang/String;)Lokhttp3/HttpUrl; in class Lokhttp3/internal/Internal; or its super classes (declaration of 'okhttp3.internal.Internal' appears in /data/app/es.sanitas.hospitales.portalpaciente-1/base.apk)\r\n        at okhttp3.internal.huc.OkHttpURLConnection.buildCall(OkHttpURLConnection.java:373)\r\n        at okhttp3.internal.huc.OkHttpURLConnection.getResponse(OkHttpURLConnection.java:435)\r\n        at okhttp3.internal.huc.OkHttpURLConnection.getResponseCode(OkHttpURLConnection.java:491)\r\n        at okhttp3.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:106)\r\n        at okhttp3.internal.huc.OkHttpsURLConnection.getResponseCode(OkHttpsURLConnection.java:26)\r\n        at com.github.kevinsawicki.http.HttpRequest.code(HttpRequest.java:1758)\r\n        at com.synconset.cordovahttp.CordovaHttp.returnResponseObject(CordovaHttp.java:247)\r\n        at com.synconset.cordovahttp.CordovaHttpGet.run(CordovaHttpGet.java:30)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n        at java.lang.Thread.run(Thread.java:776)\r\n```\r\n\r\nIn the second plugin I've read that it uses proguard and that it could cause some problems so I modified it as I read as follows (but the problem is not gone): \r\n\r\n```\r\n# Add project specific ProGuard rules here.\r\n# You can control the set of applied configuration files using the\r\n# proguardFiles setting in build.gradle.\r\n#\r\n# For more details, see\r\n#   http://developer.android.com/guide/developing/tools/proguard.html\r\n-keepattributes Signature\r\n-keepattributes Annotation\r\n-keep class okhttp3.** { *; }\r\n-keep interface okhttp3.** { *; }\r\n-dontwarn okhttp3.**\r\n-dontwarn okio.**\r\n\r\n# If your project uses WebView with JS, uncomment the following\r\n# and specify the fully qualified class name to the JavaScript interface\r\n# class:\r\n-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n   public *;\r\n}\r\n\r\n# Uncomment this to preserve the line number information for\r\n# debugging stack traces.\r\n-keepattributes SourceFile,LineNumberTable\r\n\r\n# If you keep the line number information, uncomment this to\r\n# hide the original source file name.\r\n-renamesourcefileattribute SourceFile\r\n\r\n```\r\n\r\nCould anyone please give me a hand with this?\r\n\r\nI've been a couple days with this problem and cant find out how to fix it. Please, help.\r\n\r\nThanks.", "url": "https://github.com/square/okhttp/issues/4640", "user": "UlisesCeca", "labels": ["bug", "proguard"], "created": "2019-02-22 09:06:17", "closed": "2019-04-13 16:08:52", "commits": {}, "ttf": 50.000277777777775, "commitsDetails": []}, {"title": "Tests hanging in HttpOverHttp2Test", "body": "I\u2019ve seen this twice, both times on JDK11. This is alarming.\r\n```\r\n01:53:45:383 [INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in okhttp3.internal.http2.HuffmanTest\r\n01:53:45:384 [INFO] Running okhttp3.internal.http2.HttpOverHttp2Test\r\n\r\n\r\nNo output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.\r\nCheck the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received\r\n\r\nThe build has been terminated\r\n```", "url": "https://github.com/square/okhttp/issues/4633", "user": "swankjesse", "labels": ["bug", "tests"], "created": "2019-02-18 02:34:19", "closed": "2020-04-30 19:02:27", "commits": {}, "ttf": 437.0002777777778, "commitsDetails": []}, {"title": "Error while using androidx", "body": "Failed to transform file 'jetified-okhttp-3.13.1.jar' to match attributes {artifactType=android-dex, dexing-is-debuggable=true, dexing-min-sdk=15} using transform DexingTransform\r\n   > Error while dexing.\r\n", "url": "https://github.com/square/okhttp/issues/4625", "user": "Aqil-Sharad", "labels": ["bug"], "created": "2019-02-16 10:50:45", "closed": "2019-02-18 03:39:03", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Error on retrofit when add dependencies of okhttp", "body": "Hello, when I am using Retrofit without Okhttp dependencies, its working fine, but when I want to add okhttp for logging to my dependencies.\r\nIt show error in my logcat:\r\n``` E/AndroidRuntime: FATAL \r\nEXCEPTION: main\r\n    Process: com.myapp., PID: 2687\r\n    java.lang.ExceptionInInitializerError\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:296)\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:262)\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:235)\r\n        at retrofit2.Retrofit$Builder.build(Retrofit.java:580)\r\n        at com.myapp..fragment.LoginFragment.onCreate(LoginFragment.java:73)\r\n        at android.support.v4.app.Fragment.performCreate(Fragment.java:2414)\r\n        at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1418)\r\n        at android.support.v4.app.FragmentTransition.addToFirstInLastOut(FragmentTransition.java:1195)\r\n        at android.support.v4.app.FragmentTransition.calculateFragments(FragmentTransition.java:1078)\r\n        at android.support.v4.app.FragmentTransition.startTransitions(FragmentTransition.java:117)\r\n        at android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2408)\r\n        at android.support.v4.app.FragmentManagerImpl.removeRedundantOperationsAndExecute(FragmentManager.java:2366)\r\n        at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2273)\r\n        at android.support.v4.app.FragmentManagerImpl.dispatchStateChange(FragmentManager.java:3273)\r\n        at android.support.v4.app.FragmentManagerImpl.dispatchActivityCreated(FragmentManager.java:3229)\r\n        at android.support.v4.app.FragmentController.dispatchActivityCreated(FragmentController.java:201)\r\n        at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:620)\r\n        at android.support.v7.app.AppCompatActivity.onStart(AppCompatActivity.java:178)\r\n        at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1188)\r\n        at android.app.Activity.performStart(Activity.java:5241)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2166)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)\r\n        at android.app.ActivityThread.access$800(ActivityThread.java:135)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:136)\r\n        at android.app.ActivityThread.main(ActivityThread.java:5019)\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:515)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)\r\n        at dalvik.system.NativeStart.main(Native Method)\r\n     Caused by: java.lang.IllegalStateException: Expected Android API level 21+ but was 19\r\n        at okhttp3.internal.platform.AndroidPlatform.buildIfSupported(AndroidPlatform.java:238)\r\n        at okhttp3.internal.platform.Platform.findPlatform(Platform.java:202)\r\n        at okhttp3.internal.platform.Platform.<clinit>(Platform.java:79)\r\n        at okhttp3.OkHttpClient.newSslSocketFactory(OkHttpClient.java:296)\u00a0\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:262)\u00a0\r\n        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:235)\u00a0\r\n        at retrofit2.Retrofit$Builder.build(Retrofit.java:580)\u00a0\r\n        at com.myapp.fragment.LoginFragment.onCreate(LoginFragment.java:73)\u00a0\r\n        at android.support.v4.app.Fragment.performCreate(Fragment.java:2414)\u00a0\r\n        at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1418)\u00a0\r\n        at android.support.v4.app.FragmentTransition.addToFirstInLastOut(FragmentTransition.java:1195)\u00a0\r\n        at android.support.v4.app.FragmentTransition.calculateFragments(FragmentTransition.java:1078)\u00a0\r\n        at android.support.v4.app.FragmentTransition.startTransitions(FragmentTransition.java:117)\u00a0\r\n        at android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2408)\u00a0\r\n        at android.support.v4.app.FragmentManagerImpl.removeRedundantOperationsAndExecute(FragmentManager.java:2366)\u00a0\r\n        at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2273)\u00a0\r\n        at android.support.v4.app.FragmentManagerImpl.dispatchStateChange(FragmentManager.java:3273)\u00a0\r\n        at android.support.v4.app.FragmentManagerImpl.dispatchActivityCreated(FragmentManager.java:3229)\u00a0\r\n        at android.support.v4.app.FragmentController.dispatchActivityCreated(FragmentController.java:201)\u00a0\r\n        at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:620)\u00a0\r\n        at android.support.v7.app.AppCompatActivity.onStart(AppCompatActivity.java:178)\u00a0\r\n        at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1188)\u00a0\r\n        at android.app.Activity.performStart(Activity.java:5241)\u00a0\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2166)\u00a0\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2243)\u00a0\r\n        at android.app.ActivityThread.access$800(ActivityThread.java:135)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\u00a0\r\n        at android.os.Looper.loop(Looper.java:136)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:5019)\u00a0\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\u00a0\r\n        at java.lang.reflect.Method.invoke(Method.java:515)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)\u00a0\r\n        at dalvik.system.NativeStart.main(Native Method)\u00a0\r\n```\r\nNo problem when I using retrofit only", "url": "https://github.com/square/okhttp/issues/4622", "user": "dennykurniawan48", "labels": ["bug"], "created": "2019-02-15 21:53:51", "closed": "2019-02-15 22:02:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Network Interceptor Cache", "body": "Hello, \r\n\r\nim am using OkHttp in our Android App for quite a long time. Unfortunately some problems occur after \r\nimplementing a Network Interceptor to support brotli compression. \r\n\r\n```\r\n        builder.addNetworkInterceptor(chain -> {\r\n            Request request = chain.request().newBuilder().removeHeader(\"Accept-Encoding\").addHeader(\"Accept-Encoding\", \"br, gzip\").build();\r\n            Response response = chain.proceed(request);\r\n            if (\"br\".equals(response.header(\"Content-Encoding\"))) {\r\n                ResponseBody body = response.body();\r\n                if (body != null) {\r\n                    BufferedSource deCompressedSource = Okio.buffer(Okio.source(new BrotliInputStream(body.source().inputStream())));\r\n                    return response\r\n                            .newBuilder()\r\n                            .removeHeader(\"Content-Encoding\")\r\n                            .body(ResponseBody.create(body.contentType(), -1, deCompressedSource))\r\n                            .build();\r\n                }\r\n            }\r\n            return response;\r\n        });\r\n\r\n```\r\nWith added interceptor the network data does not get cached.\r\n\r\nA following request with `CacheControl.FORCE_CACHE` returns empty result (aka 504).\r\nNo Problems when using without the interceptor. \r\n\r\n", "url": "https://github.com/square/okhttp/issues/4619", "user": "okjoller", "labels": ["bug"], "created": "2019-02-15 13:47:57", "closed": "2019-05-20 19:20:25", "commits": {}, "ttf": 94.00027777777778, "commitsDetails": []}, {"title": "Okhttp breaks jetty on Java 8 with ALPN enabled *dynamically*", "body": "Specifically, if this line is executed:\r\n\r\nhttps://github.com/square/okhttp/blob/5ecd590c8c0cd7833ed378c8702d3a228817b4e8/okhttp/src/main/java/okhttp3/internal/platform/Jdk8WithJettyBootPlatform.java#L85\r\n\r\nand that ALPN class is on the normal classpath, in addition to the boot classpath, then the class will be initialized from the class' ClassLoader, _not_ from the 'null' (system / bootstrap) classloader.\r\n\r\nThen, Jetty will fail to initialize its `OpenJDK8ServerALPNProcessor` because the following check will fail:\r\n\r\nhttps://github.com/eclipse/jetty.project/blob/f88f856673f2e8768042c973481ad78d41910e22/jetty-alpn/jetty-alpn-openjdk8-server/src/main/java/org/eclipse/jetty/alpn/openjdk8/server/OpenJDK8ServerALPNProcessor.java#L44-L45\r\n\r\nWe've usually hit this failure case when initializing okhttp clients in tests first (simply due to an unfortunate class load ordering), and only later loading the [jetty ALPN agent](https://github.com/jetty-project/jetty-alpn-agent) dynamically by calling a method [Http2Agent.install](https://github.com/palantir/conjure-java-runtime/blob/4f7e9c6428b356394771ef136f22bb4ad825877e/jetty-http2-agent/src/main/java/com/palantir/conjure/java/http2/Http2Agent.java#L33-L50) in a static initializer.\r\n\r\nTODO:\r\n\r\n- [x] test: https://github.com/square/okhttp/pull/4617\r\n", "url": "https://github.com/square/okhttp/issues/4615", "user": "dansanduleac", "labels": ["bug"], "created": "2019-02-15 00:34:07", "closed": "2019-02-17 18:53:43", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Uncontrollable retries when read timeout in 3.1.2", "body": "In version 3.1.2, when the client (readTimeout=1s) send a request to a bad server which costs much time to handle a request,  it will retry many times when a SocketTimeoutException is caught util the connection pool is empty or the request is handled successfully in time. \r\nIs it a bug? fixed?", "url": "https://github.com/square/okhttp/issues/4612", "user": "eticwu", "labels": ["bug"], "created": "2019-02-14 12:29:15", "closed": "2019-02-18 03:59:45", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "the picture of introducing Follow-UP new connection is not correct", "body": "this url is redirect\uff1ahttp://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\nwe can get from its log:\r\nonce time callStart; two times callEnd\r\nthis is not same with your wiki.\r\nthe log detail is:\r\n02-14 14:04:56.413 : callStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:56.422 : dnsStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c;domainName:push.gd165.com\r\n02-14 14:04:57.028 : dnsEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c;domainName:push.gd165.com\r\n02-14 14:04:57.029 : connectStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c;hostString:push.gd165.com;proxy:DIRECT\r\n02-14 14:04:57.164 : connectEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c;hostString:push.gd165.com;proxy:DIRECT;protocol:http/1.1\r\n02-14 14:04:57.168 : connectionAcquired  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.170 : requestHeadersStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.172 : requestHeadersEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.176 : responseHeadersStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.260 : responseHeadersEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.260 : responseBodyStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.291 : responseBodyEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.292 : connectionReleased  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.293 : callEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.306 : dnsStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c;domainName:push.gd165.com\r\n02-14 14:04:57.309 : dnsEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c;domainName:push.gd165.com\r\n02-14 14:04:57.310 : connectStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c;hostString:push.gd165.com;proxy:DIRECT\r\n02-14 14:04:57.350 : connectEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c;hostString:push.gd165.com;proxy:DIRECT;protocol:http/1.1\r\n02-14 14:04:57.351 : connectionAcquired  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.351 : requestHeadersStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.353 : requestHeadersEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.354 : responseHeadersStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.392 : responseHeadersEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.392 : responseBodyStart  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.394 : responseBodyEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.395 : connectionReleased  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n02-14 14:04:57.395 : callEnd  url:http://push.gd165.com:8080/?psbs_sid=b1-s-gd020012047010164eab65258895&psbs_pid=a6115a002ba6e46c\r\n", "url": "https://github.com/square/okhttp/issues/4610", "user": "chwnFlyPig", "labels": ["bug"], "created": "2019-02-14 06:25:38", "closed": "2019-02-18 03:59:17", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "R8 NullPointerException with OkHttp 3.13.1", "body": "When I upgrade to OkHttp 3.13.1, my release builds with R8 fails to build. \r\n\r\nVersions that I have:\r\nOkHttp: 3.13.1\r\nAndroid Gradle Plugin: 3.3.1\r\nGradle: 5.1.1\r\n\r\nNote: Tried with `r8` dependency latest version: `1.3.52` and with whatever AGP 3.3.1 ships with.\r\n\r\nHere is my `gradle.properties`\r\n\r\n```\r\nandroid.enableR8=true\r\nandroid.enableR8.fullMode=true\r\n```\r\n\r\nAnd here is the stacktrace of the build.\r\n\r\n```\r\n> Task :app:transformClassesAndResourcesWithR8ForExtranetRelease\r\nR8 is an experimental feature. If you experience any issues, please file a bug at\r\nhttps://issuetracker.google.com, using 'Shrinker (R8)' as component name. You can\r\ndisable R8 by updating gradle.properties with 'android.enableR8=false'.\r\n\r\n/Users/sdane/dev/wf/waystation-app/android/app/build/intermediates/proguard-files/proguard-android-optimize.txt-3.3.1:17:2-23: D8: Ignoring option: -optimizationpasses\r\n\r\n/Users/sdane/.gradle/caches/transforms-2/files-2.1/d290ba94b37fb20f73ba886f45da97b9/jetified-okhttp-3.13.1.jar: D8: Type `org.conscrypt.Conscrypt` was not found, it is required for default or static interface methods desugaring of `void okhttp3.internal.platform.ConscryptPlatform.configureSslSocketFactory(javax.net.ssl.SSLSocketFactory)`\r\n\r\n> Task :app:transformClassesAndResourcesWithR8ForExtranetRelease FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':app:transformClassesAndResourcesWithR8ForExtranetRelease'.\r\n> java.lang.NullPointerException (no error message)\r\n\r\n* Try:\r\nRun with --info or --debug option to get more log output. Run with --scan to get full insights.\r\n\r\n* Exception is:\r\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:transformClassesAndResourcesWithR8ForExtranetRelease'.\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:95)\r\n        at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:91)\r\n        at org.gradle.api.internal.tasks.execution.ResolveBuildCacheKeyExecuter.execute(ResolveBuildCacheKeyExecuter.java:79)\r\n        at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:57)\r\n        at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:119)\r\n        at org.gradle.api.internal.tasks.execution.ResolvePreviousStateExecuter.execute(ResolvePreviousStateExecuter.java:43)\r\n        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:93)\r\n        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:45)\r\n        at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:94)\r\n        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:56)\r\n        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:55)\r\n        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\r\n        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:67)\r\n        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\r\n        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:49)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:315)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:305)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:175)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:101)\r\n        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)\r\n        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:49)\r\n        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:43)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:355)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:343)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:336)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:322)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker$1.execute(DefaultPlanExecutor.java:134)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker$1.execute(DefaultPlanExecutor.java:129)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:202)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:193)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:129)\r\n        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\nCaused by: java.lang.NullPointerException\r\n        at com.android.tools.r8.graph.GraphLense.mapDexEncodedMethod(GraphLense.java:111)\r\n        at com.android.tools.r8.ir.desugar.InterfaceMethodDesugaringLense.mapDexEncodedMethod(InterfaceMethodDesugaringLense.java:38)\r\n        at com.android.tools.r8.ir.optimize.Outliner.selectMethodsForOutlining(Outliner.java:868)\r\n        at com.android.tools.r8.ir.conversion.IRConverter.optimize(IRConverter.java:522)\r\n        at com.android.tools.r8.R8.run(R8.java:398)\r\n        at com.android.tools.r8.R8.run(R8.java:229)\r\n        at com.android.tools.r8.R8.lambda$runForTesting$1(R8.java:220)\r\n        at com.android.tools.r8.utils.ExceptionUtils.withCompilationHandler(ExceptionUtils.java:60)\r\n        at com.android.tools.r8.utils.ExceptionUtils.withR8CompilationHandler(ExceptionUtils.java:48)\r\n        at com.android.tools.r8.R8.runForTesting(R8.java:216)\r\n        at com.android.tools.r8.R8.run(R8.java:129)\r\n        at com.android.builder.dexing.R8Tool.runR8(r8Tool.kt:184)\r\n        at com.android.build.gradle.internal.transforms.R8Transform.transform(R8Transform.kt:244)\r\n        at com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:239)\r\n        at com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:235)\r\n        at com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n        at com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:230)\r\n        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n        at org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:47)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:41)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:28)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$2.run(ExecuteActionsTaskExecuter.java:284)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:301)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:293)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:175)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\r\n        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:273)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:258)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$200(ExecuteActionsTaskExecuter.java:67)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:145)\r\n        at org.gradle.internal.execution.impl.steps.ExecuteStep.execute(ExecuteStep.java:49)\r\n        at org.gradle.internal.execution.impl.steps.CancelExecutionStep.execute(CancelExecutionStep.java:34)\r\n        at org.gradle.internal.execution.impl.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:69)\r\n        at org.gradle.internal.execution.impl.steps.TimeoutStep.execute(TimeoutStep.java:49)\r\n        at org.gradle.internal.execution.impl.steps.CatchExceptionStep.execute(CatchExceptionStep.java:33)\r\n        at org.gradle.internal.execution.impl.steps.CreateOutputsStep.execute(CreateOutputsStep.java:50)\r\n        at org.gradle.internal.execution.impl.steps.SnapshotOutputStep.execute(SnapshotOutputStep.java:43)\r\n        at org.gradle.internal.execution.impl.steps.SnapshotOutputStep.execute(SnapshotOutputStep.java:29)\r\n        at org.gradle.internal.execution.impl.steps.CacheStep.executeWithoutCache(CacheStep.java:134)\r\n        at org.gradle.internal.execution.impl.steps.CacheStep.lambda$execute$3(CacheStep.java:83)\r\n        at org.gradle.internal.execution.impl.steps.CacheStep.execute(CacheStep.java:82)\r\n        at org.gradle.internal.execution.impl.steps.CacheStep.execute(CacheStep.java:36)\r\n        at org.gradle.internal.execution.impl.steps.PrepareCachingStep.execute(PrepareCachingStep.java:33)\r\n        at org.gradle.internal.execution.impl.steps.StoreSnapshotsStep.execute(StoreSnapshotsStep.java:38)\r\n        at org.gradle.internal.execution.impl.steps.StoreSnapshotsStep.execute(StoreSnapshotsStep.java:23)\r\n        at org.gradle.internal.execution.impl.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:96)\r\n        at org.gradle.internal.execution.impl.steps.SkipUpToDateStep.lambda$execute$0(SkipUpToDateStep.java:89)\r\n        at org.gradle.internal.execution.impl.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:52)\r\n        at org.gradle.internal.execution.impl.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:36)\r\n        at org.gradle.internal.execution.impl.DefaultWorkExecutor.execute(DefaultWorkExecutor.java:34)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:91)\r\n        ... 33 more\r\n\r\n\r\n* Get more help at https://help.gradle.org\r\n\r\nDeprecated Gradle features were used in this build, making it incompatible with Gradle 6.0.\r\nUse '--warning-mode all' to show the individual deprecation warnings.\r\nSee https://docs.gradle.org/5.1.1/userguide/command_line_interface.html#sec:command_line_warnings\r\n\r\nBUILD FAILED in 1m 17s\r\n294 actionable tasks: 108 executed, 184 from cache, 2 up-to-date\r\n\u279c  android git:(dev-android)\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/4604", "user": "tasomaniac", "labels": ["bug"], "created": "2019-02-11 08:20:59", "closed": "2019-02-20 14:15:16", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Get Request error", "body": "Hello, im trying to make a simple get request to retrieve a JSON using this library, with kotlin. However, i get this in the console:\r\n\r\n\r\n> AGPBI: {\"kind\":\"error\",\"text\":\"Static interface methods are only supported starting with Android N (--min-api 24): okhttp3.Request okhttp3.Authenticator.lambda$static$0(okhttp3.Route, okhttp3.Response)\",\"sources\":[{}],\"tool\":\"D8\"}\r\n> FAILURE: Build failed with an exception.\r\n> * What went wrong:\r\n> Could not resolve all files for configuration ':app:debugRuntimeClasspath'.\r\n> > Failed to transform file 'okhttp-3.13.1.jar' to match attributes {artifactType=android-dex, dexing-is-debuggable=true, dexing-min-sdk=15} using transform DexingTransform\r\n>    > Error while dexing.\r\n> \r\n\r\nI m pretty new to android development(i am an iOS dev), so i may be missing something but the code im using comes from various tutorials, and i do not understand what could be the issue. \r\n\r\nThis is the code:\r\n\r\n```\r\nprivate val url = \"...\"\r\nprivate val client = OkHttpClient()\r\nprivate val request = Request.Builder().url(url).build()\r\nfun fetchJson(){\r\n\r\n        client.newCall(request).enqueue(object: Callback{\r\n            override fun onFailure(call: Call, e: IOException) {\r\n                println(\"Http request failed: ${e.localizedMessage}\")\r\n            }\r\n\r\n            override fun onResponse(call: Call, response: Response) {\r\n                val result = response.body().let {\r\n                    it!!.string()\r\n                }\r\n                println(\"The response is: $result\")\r\n            }\r\n\r\n        })\r\n    }\r\n```\r\n\r\nI have used gradle to integrate it within my project. Pasting on google parts of the log above did not help at all, i did not found any useful solution.\r\nThank you for the attention.", "url": "https://github.com/square/okhttp/issues/4602", "user": "siideffect", "labels": ["bug"], "created": "2019-02-10 18:39:52", "closed": "2019-02-10 19:05:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MultipartBody not working with PUT ", "body": "```\r\nMultipartBody formBody = new MultipartBody.Builder()\r\n\t\t\t\t.setType(MultipartBody.FORM)\r\n\t\t\t\t.addFormDataPart(\"message\", message.trim())\r\n\t\t\t\t.build(); //not working\r\n\t\tRequestBody formBody = new FormBody.Builder()\r\n\t\t\t\t.add(\"message\", message.trim())\r\n\t\t\t\t.build(); //working\r\n\r\n\t\tRequest request = new Request.Builder()\r\n\t\t\t\t.url(url)\r\n\t\t\t\t.put(formBody) // here I use PUT request\r\n\t\t\t\t.build();\r\n```\r\n\r\nIf I sent MultipartBody with PUT request, empty data is sent. It works fine if MultiPartBody is sent with POST request.", "url": "https://github.com/square/okhttp/issues/4601", "user": "neobie", "labels": ["bug"], "created": "2019-02-10 17:14:44", "closed": "2019-02-18 03:54:26", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "JDK 11 test failures", "body": "- No appropriate protocol (protocol is disabled or cipher suites are inappropriate)\r\n- NoSuchElementException in BasicCertificateChainCleaner.clean\r\n- StreamReset stream was reset: PROT...\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4598", "user": "yschimke", "labels": ["bug"], "created": "2019-02-09 08:30:20", "closed": "2019-06-22 09:42:57", "commits": {}, "ttf": 133.00027777777777, "commitsDetails": []}, {"title": "Unable to instantiate the client", "body": "While trying to instantiate OkHttpClient as follows inside the MainActivity of android:\r\n\r\n```OkHttpClient client = new OkHttpClient();```\r\n\r\nStacktrace : \r\n\r\n    java.lang.BootstrapMethodError: Exception from call site #5 bootstrap method\r\n        at okhttp3.internal.Util.<clinit>(Util.java:87)\r\n        at okhttp3.internal.Util.immutableList(Util.java:234)\r\n        at okhttp3.OkHttpClient.<clinit>(OkHttpClient.java:127)\r\n        at com.amazonaws.transcribestreaminghttpclient.MainActivity.<init>(MainActivity.java:28)\r\n        at java.lang.Class.newInstance(Native Method)\r\n        at android.app.AppComponentFactory.instantiateActivity(AppComponentFactory.java:69)\r\n        at android.support.v4.app.CoreComponentFactory.instantiateActivity(CoreComponentFactory.java:43)\r\n        at android.app.Instrumentation.newActivity(Instrumentation.java:1215)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2831)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3048)\r\n\r\n\r\nHappens only on 3.13.1. Works well on 3.12.1.\r\nAny insights?\r\n", "url": "https://github.com/square/okhttp/issues/4597", "user": "desokroshan", "labels": ["bug"], "created": "2019-02-06 21:35:53", "closed": "2019-02-06 21:57:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Tomcat unloading ", "body": "The field \r\n`\r\nprivate static final Executor executor = new ThreadPoolExecutor(0 /* corePoolSize */,\r\n      Integer.MAX_VALUE /* maximumPoolSize */, 60L /* keepAliveTime */, TimeUnit.SECONDS,\r\n      new SynchronousQueue<Runnable>(), Util.threadFactory(\"OkHttp ConnectionPool\", true));\r\n`\r\n\r\nin the class **ConnectionPool** does not get unloaded in a JEE server and upon war reloading this will be unloaded.\r\n\r\n\r\nI have the following options:\r\n\r\n1. I believe if you **remove the static modifier** and **shutdown executor** on a custom method  or on an existing one such as \"evictAll\" the whole issue will be avoided.\r\n\r\n2. Create a **constructor** with that will provide  **custom Executor instance** and the shutting down this executor will be carried out of who provided it in consturctor.\r\n\r\nThank you in advance\r\n\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4596", "user": "costinarsene", "labels": ["bug"], "created": "2019-02-06 09:33:12", "closed": "2019-02-18 03:53:07", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "memory leak warning on re-deploy application", "body": "```\r\n06-Feb-2019 01:44:05.257 WARNING [Catalina-utility-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [...] appears to have started a thread named [OkHttp ConnectionPool] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n java.lang.Object.wait(Native Method)\r\n java.lang.Object.wait(Object.java:460)\r\n okhttp3.ConnectionPool.lambda$new$0(ConnectionPool.java:66)\r\n okhttp3.ConnectionPool$$Lambda$143/649093426.run(Unknown Source)\r\n java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n java.lang.Thread.run(Thread.java:748)\r\n06-Feb-2019 01:44:05.260 WARNING [Catalina-utility-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [...] appears to have started a thread named [Okio Watchdog] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n java.lang.Object.wait(Native Method)\r\n okio.AsyncTimeout.awaitTimeout(AsyncTimeout.java:348)\r\n okio.AsyncTimeout$Watchdog.run(AsyncTimeout.java:313)\r\n06-Feb-2019 01:44:05.260 WARNING [Catalina-utility-1] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [...] appears to have started a thread named [OkHttp ConnectionPool] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n sun.misc.Unsafe.park(Native Method)\r\n java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\r\n java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\r\n java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)\r\n java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)\r\n java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)\r\n java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)\r\n java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\napache-tomcat-9.0.14 + okhttp 3.13.1", "url": "https://github.com/square/okhttp/issues/4595", "user": "antongorkovenko", "labels": ["bug", "stackoverflow"], "created": "2019-02-06 06:47:47", "closed": "2019-02-07 06:50:49", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Ionic/Cordova application build fails with latest version(3.13.0)", "body": "I tried running my application this morning and this error appeared:\r\n\r\nError: /platforms/android/gradlew: Command failed with exit code 1 Error output:\r\nWARNING in okhttp3.Authenticator.lambda$static$0:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;: defining a static interface method requires --min-sdk-version >= 24 (currently 13) for interface methods: okhttp3.Authenticator.lambda$static$0:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;\r\nWARNING in okhttp3.Dns.lambda$static$0:(Ljava/lang/String;)Ljava/util/List;: defining a static interface method requires --min-sdk-version >= 24 (currently 13) for interface methods: okhttp3.Dns.lambda$static$0:(Ljava/lang/String;)Ljava/util/List;\r\nUncaught translation error: com.android.dx.cf.code.SimException: ERROR in okhttp3.Authenticator.<clinit>:()V: invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 13)\r\nUncaught translation error: com.android.dx.cf.code.SimException: ERROR in okhttp3.ConnectionPool.<init>:(IJLjava/util/concurrent/TimeUnit;)V: invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 13)\r\nUncaught translation error: com.android.dx.cf.code.SimException: ERROR in okhttp3.internal.Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;: invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 13)\r\nUncaught translation error: com.android.dx.cf.code.SimException: ERROR in okhttp3.CipherSuite.<clinit>:()V: invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 13)\r\nUncaught translation error: com.android.dx.cf.code.SimException: ERROR in okhttp3.Dns.<clinit>:()V: invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 13)\r\nUncaught translation error: com.android.dx.cf.code.SimException: ERROR in okhttp3.EventListener.factory:(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;: invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 13)\r\nUncaught translation error: com.android.dx.cf.code.SimException: ERROR in okhttp3.internal.ws.RealWebSocket.<init>:(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V: invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 13)\r\n7 errors; aborting\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n\r\nAfter hours of searching... I decided to change this line of code on my 'project.properties' file:\r\n\r\ncom.squareup.okhttp3:okhttp:3+\r\n\r\nto\r\n\r\ncom.squareup.okhttp3:okhttp:3.12.1\r\n\r\nand now the app builds correctly\r\n", "url": "https://github.com/square/okhttp/issues/4594", "user": "mgarcia66", "labels": ["bug"], "created": "2019-02-05 17:01:34", "closed": "2019-02-05 17:04:36", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OkHttp 3.13 on Android with custom trust manager fails with AssertionError", "body": "TL;DR: How to use custom trust managers with OkHttp 3.13?\r\n\r\nWe have an app that uses a custom `X509TrustManager` (`X509ExtendedTrustManager` on API >= 24) to implement additional certificate whitelisting requirements. Basically the custom trust manager takes system trust manager as a delegate and adds custom whitelist checks on top.\r\n\r\nThis used to work fine up to OkHttp 3.12.1.\r\n\r\nOn OkHttp 3.13.0 this fails when initialising `OkHttpClient.Builder#sslSocketFactory` like:\r\n\r\n```\r\n        X509TrustManager trustManager;\r\n        SSLSocketFactory sslSocketFactory;\r\n        try {\r\n            trustManager = buildTrustManager(...);\r\n            SSLContext sslContext = SSLContext.getInstance(\"TLS\");\r\n            sslContext.init(null, new TrustManager[] { trustManager }, null);\r\n            sslSocketFactory = sslContext.getSocketFactory();\r\n        } catch (NoSuchAlgorithmException | KeyManagementException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        okClientBuilder.sslSocketFactory(sslSocketFactory, trustManager);\r\n```\r\n\r\nwith stacktrace like:\r\n\r\n```\r\njava.lang.AssertionError: java.lang.reflect.InvocationTargetException\r\n        at okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(AndroidPlatform.java:201)\r\n        at okhttp3.internal.tls.CertificateChainCleaner.get(CertificateChainCleaner.java:41)\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:821)\r\n\r\n...\r\n\r\n     Caused by: java.lang.reflect.InvocationTargetException\r\n        at java.lang.reflect.Constructor.newInstance0(Native Method)\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:343)\r\n        at okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(AndroidPlatform.java:196)\r\n        at okhttp3.internal.tls.CertificateChainCleaner.get(CertificateChainCleaner.java:41)\u00a0\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:821)\u00a0 \r\n\r\n...\r\n\r\nCaused by: java.lang.IllegalArgumentException: Required method checkServerTrusted(X509Certificate[], String, String, String) missing\r\n        at android.net.http.X509TrustManagerExtensions.<init>(X509TrustManagerExtensions.java:72)\r\n        at java.lang.reflect.Constructor.newInstance0(Native Method)\u00a0\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:343)\u00a0\r\n        at okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(AndroidPlatform.java:196)\u00a0\r\n        at okhttp3.internal.tls.CertificateChainCleaner.get(CertificateChainCleaner.java:41)\u00a0\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:821)\u00a0\r\n\r\n```\r\n\r\nFrom the commits I see https://github.com/square/okhttp/commit/bdc7681b3ba16ae311d2dd21160d61315e8942ca introduced this `AssertionError` while earlier execution would fall back to `super` implementation.\r\n\r\nOn API >= 24 (tested only on 28) I can get rid of this crash by adding the method looked up reflectively to our `X509ExtendedTrustManager` implementation:\r\n\r\n```\r\n        /** This is used reflectively by Android X509TrustManagerExtensions and okhttp CertificateChainCleaner **/\r\n        @SuppressWarnings(\"unused\")\r\n        public void checkServerTrusted(X509Certificate[] chain, String authType, String host) throws CertificateException {\r\n            // TODO figure out if something could be done with the host param\r\n            delegate.checkServerTrusted(chain, authType);\r\n            whitelistChecker.checkCertWhitelisted(chain[0]);\r\n        }\r\n```\r\n\r\nHowever this does not work on API < 24 (our min SDK is 21). Adding the same method to `X509TrustManager` (`javax.net.ssl.X509TrustManager`) just introduces another issue. This one on API 21 emulator:\r\n\r\n```\r\nCaused by: java.lang.IllegalArgumentException: tm is an instance of ...WhitelistingTrustManager which is not a supported type of X509TrustManager\r\n        at android.net.http.X509TrustManagerExtensions.<init>(X509TrustManagerExtensions.java:51)\r\n        at java.lang.reflect.Constructor.newInstance(Native Method)\u00a0\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:288)\u00a0\r\n        at okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(AndroidPlatform.java:196)\u00a0\r\n        at okhttp3.internal.tls.CertificateChainCleaner.get(CertificateChainCleaner.java:41)\u00a0\r\n        at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:821)\u00a0\r\n```\r\n\r\nLooking up the [platform source](http://androidxref.com/5.0.0_r2/xref/frameworks/base/core/java/android/net/http/X509TrustManagerExtensions.java#51) the code just allows `TrustManagerImpl`s which is a platform-internal class and cannot really be used in app code.\r\n\r\nQuestions:\r\n 1. How would one use custom `X509TrustManager`s with OkHttp 3.13 without crashes?\r\n 2. Any alternative ideas for implementing custom certificate checks?", "url": "https://github.com/square/okhttp/issues/4592", "user": "laalto", "labels": ["bug"], "created": "2019-02-05 12:33:07", "closed": "2019-02-05 17:06:19", "commits": {"9037bb2717177591c728ac7add774dd96afb6c33": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ad8d8099a5e475475ddce44cde1b5e1d360990c4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9037bb2717177591c728ac7add774dd96afb6c33", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ad8d8099a5e475475ddce44cde1b5e1d360990c4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ffbe3ca5009a443ece2802c49bb366eefbac5906"], "nameRev": "ad8d8099a5e475475ddce44cde1b5e1d360990c4 tags/parent-3.13.1~1^2", "commitMessage": "Restore support for custom trust managers on Android\n\nI took this away because I thought it was only useful for Android versions\nwe've since dropped. But it turns out it's also necessary when there's a\ncustom TrustManager in use.\n\nCloses: https://github.com/square/okhttp/issues/4592\n", "commitDateTime": "2019-02-05 11:29:05", "authoredDateTime": "2019-02-05 11:27:55", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.java", "insertions": 76, "deletions": 5, "lines": 81}, {"filePath": "okhttp/src/main/java/okhttp3/internal/platform/Platform.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/BasicCertificateChainCleaner.java", "insertions": 6, "deletions": 40, "lines": 46}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/BasicTrustRootIndex.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/CertificateChainCleaner.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/TrustRootIndex.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidPlatform.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.buildIfSupported()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.buildTrustRootIndex(javax.net.ssl.X509TrustManager)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.CustomTrustRootIndex", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.getSelectedProtocol(javax.net.ssl.SSLSocket)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Platform.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.platform.Platform.buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)", "TOT": 5, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BasicCertificateChainCleaner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.BasicCertificateChainCleaner", "TOT": 8, "UPD": 5, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.tls.BasicCertificateChainCleaner.hashCode()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.BasicCertificateChainCleaner.equals(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.BasicCertificateChainCleaner.clean(java.util.List,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.tls.BasicCertificateChainCleaner.findByIssuerAndSignature(java.security.cert.X509Certificate)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BasicTrustRootIndex.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.BasicTrustRootIndex", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificateChainCleaner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.CertificateChainCleaner.get(java.security.cert.X509Certificate[])", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TrustRootIndex.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ad8d8099a5e475475ddce44cde1b5e1d360990c4"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 183.0, "deletions": 47.0, "lines": 230.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 34.0, "UPD": 12.0, "INS": 14.0, "MOV": 2.0, "DEL": 6.0, "spoonFilesChanged": 6, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/tls", "okhttp/src/main/java/okhttp3/internal/platform"], "changesInPackagesSPOON": ["okhttp3.internal.tls.CertificateChainCleaner.get(java.security.cert.X509Certificate[])", "okhttp3.internal.platform.AndroidPlatform.buildTrustRootIndex(javax.net.ssl.X509TrustManager)", "okhttp3.internal.platform.Platform.buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)", "okhttp3.internal.platform.AndroidPlatform.buildIfSupported()", "okhttp3.internal.tls.BasicCertificateChainCleaner.hashCode()", "okhttp3.internal.platform.AndroidPlatform.getSelectedProtocol(javax.net.ssl.SSLSocket)", "okhttp3.internal.platform.AndroidPlatform.buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)", "okhttp3.internal.tls", "okhttp3.internal.tls.BasicTrustRootIndex", "okhttp3.internal.platform.AndroidPlatform", "okhttp3.internal.tls.BasicCertificateChainCleaner.clean(java.util.List,java.lang.String)", "okhttp3.internal.tls.BasicCertificateChainCleaner.findByIssuerAndSignature(java.security.cert.X509Certificate)", "okhttp3.internal.platform.AndroidPlatform.CustomTrustRootIndex", "okhttp3.internal.tls.BasicCertificateChainCleaner", "okhttp3.internal.tls.BasicCertificateChainCleaner.equals(java.lang.Object)", "okhttp3.internal.platform.AndroidPlatform.configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)"]}, {"title": "Tests fail on Java 1.8 v202", "body": "We\u2019re testing that obsolete TLS things don\u2019t work and the new JDKs won\u2019t even let us do that.\r\n\r\n```\r\njava.lang.AssertionError: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat okhttp3.RecordedResponse.assertFailure(RecordedResponse.java:162)\r\n\tat okhttp3.CallTest.tlsHostnameVerificationFailureNoPeerCertificates(CallTest.java:1272)\r\n```", "url": "https://github.com/square/okhttp/issues/4588", "user": "swankjesse", "labels": ["bug"], "created": "2019-02-05 03:13:28", "closed": "2019-03-03 16:52:00", "commits": {"d6daca4aa740cbd6ec547c66b26d5b95afc2d749": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "d6daca4aa740cbd6ec547c66b26d5b95afc2d749", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6468239d3189d2d86a0746eddfee7c4c95b30b0d"], "nameRev": "d6daca4aa740cbd6ec547c66b26d5b95afc2d749 tags/parent-3.14.0~16^2", "commitMessage": "Assume _anon_ cipher suites are unsupported.\n\nCloses: https://github.com/square/okhttp/issues/4588\n", "commitDateTime": "2019-03-03 11:27:19", "authoredDateTime": "2019-03-03 11:27:19", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 10, "deletions": 50, "lines": 60}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.tlsHostnameVerificationFailureNoPeerCertificates()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.CallTest.tlsSuccessWithNoPeerCertificates()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.CallTest.anonCipherSuiteUnsupported()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d6daca4aa740cbd6ec547c66b26d5b95afc2d749"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RealCall possible response leak?", "body": "I'm trying to understand why I have a what seems impossible very rare  LeakedClosableViolation error when doing lots of call.enqueue cancellations.\r\n\r\nI'm sure that I close everything everywhere possible.\r\n\r\nWhile looking at OkHTTP source I saw this: \r\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/RealCall.java#L209\r\n\r\nI don't know all the internals but it seems there can be a racy condition here. Where the response is correctly get but call is cancelled just before the isCanceled() test. Leading to the leak as the response is never closed since never passed back to the caller.\r\n\r\ncc: @swankjesse \r\n\r\nStrictMode log:\r\n```\r\n2019-02-01 12:38:45.968 4693-4777/org.leetzone.android.yatsewidgetfree.debug D/StrictMode: StrictMode policy violation: android.os.strictmode.LeakedClosableViolation: A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\r\n        at android.os.StrictMode$AndroidCloseGuardReporter.report(StrictMode.java:1786)\r\n        at dalvik.system.CloseGuard.warnIfOpen(CloseGuard.java:264)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at okhttp3.internal.platform.AndroidPlatform$CloseGuard.warnIfOpen(AndroidPlatform.java:355)\r\n        at okhttp3.internal.platform.AndroidPlatform.logCloseableLeak(AndroidPlatform.java:162)\r\n        at okhttp3.ConnectionPool.pruneAndGetAllocationCount(ConnectionPool.java:271)\r\n        at okhttp3.ConnectionPool.cleanup(ConnectionPool.java:211)\r\n        at okhttp3.ConnectionPool$1.run(ConnectionPool.java:60)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n     Caused by: java.lang.Throwable: Explicit termination method 'response.body().close()' not called\r\n        at dalvik.system.CloseGuard.open(CloseGuard.java:221)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at okhttp3.internal.platform.AndroidPlatform$CloseGuard.createAndOpen(AndroidPlatform.java:343)\r\n        at okhttp3.internal.platform.AndroidPlatform.getStackTraceForCloseable(AndroidPlatform.java:158)\r\n        at okhttp3.RealCall.captureCallStackTrace(RealCall.java:115)\r\n        at okhttp3.RealCall.enqueue(RealCall.java:124)\r\n        at com.genimee.android.utils.http.OkHttpWorkerPool.await(OkHttpWorkerPool.kt:92)\r\n        at com.genimee.android.utils.http.OkHttpWorkerPool.executeTask(OkHttpWorkerPool.kt:72)\r\n        at com.genimee.android.utils.http.OkHttpWorkerPool$startWorkers$$inlined$repeat$lambda$1.invokeSuspend(OkHttpWorkerPool.kt:45)\r\n        at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:32)\r\n        at kotlinx.coroutines.DispatchedTask.run(Dispatched.kt:233)\r\n        at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:594)\r\n        at kotlinx.coroutines.scheduling.CoroutineScheduler.access$runSafely(CoroutineScheduler.kt:60)\r\n        at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:742)\r\n```\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4583", "user": "Tolriq", "labels": ["bug"], "created": "2019-02-01 11:56:48", "closed": "2019-02-24 11:34:30", "commits": {"da20361db5470a7bcbee0bcb1bffc92a84169893": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "2768adebe8a1a1510f4acc867dbd24f58ab1a8d4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "bf394560e1c83d05a552079634359fad9e0a640b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a1bf9b80ec638e04bb90e9a126fe74fda96ca4d6": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "da20361db5470a7bcbee0bcb1bffc92a84169893", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["03f4170e8904b17da25a07a768183cee5ee48616"], "nameRev": "da20361db5470a7bcbee0bcb1bffc92a84169893 tags/parent-3.14.0~32^2", "commitMessage": "Fix a bug where responses weren't closed on a late cancel\n\nCloses: https://github.com/square/okhttp/issues/4583\n", "commitDateTime": "2019-02-23 20:26:19", "authoredDateTime": "2019-02-23 20:26:19", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "okhttp/src/main/java/okhttp3/RealCall.java", "insertions": 8, "deletions": 3, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall().16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long).17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite).18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.lateCancelCallsOnFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealCall.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RealCall.AsyncCall.execute()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.RealCall.getResponseWithInterceptorChain()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2768adebe8a1a1510f4acc867dbd24f58ab1a8d4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bf394560e1c83d05a552079634359fad9e0a640b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a1bf9b80ec638e04bb90e9a126fe74fda96ca4d6", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["8428c9180346c479b45351408f770c8935367eae"], "nameRev": "a1bf9b80ec638e04bb90e9a126fe74fda96ca4d6 tags/parent-3.12.2~2^2", "commitMessage": "Fix a bug where responses weren't closed on a late cancel\n\nCloses: https://github.com/square/okhttp/issues/4583\n", "commitDateTime": "2019-02-24 11:12:44", "authoredDateTime": "2019-02-23 20:26:19", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "okhttp/src/main/java/okhttp3/RealCall.java", "insertions": 9, "deletions": 8, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall().23", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long).24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.lateCancelCallsOnFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealCall.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RealCall.AsyncCall.execute()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "okhttp3.RealCall.getResponseWithInterceptorChain()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["da20361db5470a7bcbee0bcb1bffc92a84169893"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8.0, "deletions": 3.0, "lines": 11.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 0.0, "INS": 3.0, "MOV": 3.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.RealCall.getResponseWithInterceptorChain()", "okhttp3.RealCall.AsyncCall.execute()"]}, {"title": "Fatal Exception: java.lang.IllegalStateException:Null interceptorFatal Exception: java.lang.IllegalStateException:Null interceptor", "body": "Fatal Exception: java.lang.IllegalStateException:Null interceptor: [null, com.xxx.inspectionsign.LJISHeaderInterceptor@5151e9d]\r\nat okhttp3.OkHttpClient.<init>(OkHttpClient.java:283)\r\nat okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:1040)\r\nat com.xxx.LJTSSampleApi.init(LJTSSampleApi.java:91)\r\nat com.xxx.sample.LJTSSampleApi.fetchSampleInfo(LJTSSampleApi.java:105)\r\nat com.xxx.sample.LJTSSampleManager.fetchSampleNetStatsInfo(LJTSSampleManager.java:197)\r\nat com.xxx.sample.LJTSSampleManager.getCacheSampleNetStatsInfo(LJTSSampleManager.java:113)\r\nat com.xxx.sample.LJTSSampleManager.shouldIntercept(LJTSSampleManager.java:126)\r\nat com.xxx.trafficstats.LJTrafficStats.handleNetResponse(LJTrafficStats.java:165)\r\nat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:254)\r\nat okhttp3.RealCall$AsyncCall.execute(RealCall.java:200)\r\nat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\nat java.lang.Thread.run(Thread.java:776)", "url": "https://github.com/square/okhttp/issues/4579", "user": "android-ext", "labels": ["bug"], "created": "2019-01-28 09:40:29", "closed": "2019-02-18 03:50:02", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "http/2 works except when using okhttp-urlconnection", "body": "Here's a kotlin script that reproduces the problem:\r\n\r\n```kt\r\nimport okhttp3.*\r\n\r\nval client = OkHttpClient.Builder()\r\n  .protocols(listOf(Protocol.HTTP_1_1, Protocol.HTTP_2))\r\n  .build()\r\n\r\nfun directConnect() {\r\n    val url = HttpUrl.parse(\"https://http2.akamai.com/\")\r\n    val request = Request.Builder()\r\n        .url(url)\r\n        .build()\r\n\r\n    val response = client.newCall(request).execute()\r\n    println(\"Headers from direct connection\")\r\n    response.headers().names().forEach { if (it.contains(\"proto\")) {println(it +  response.headers().values(it))} }\r\n}\r\n\r\nfun urlConnect() {\r\n    val url = java.net.URL(\"https://http2.akamai.com/\")\r\n    val urlFactory = okhttp3.OkUrlFactory(client)\r\n    java.net.URL.setURLStreamHandlerFactory(urlFactory);\r\n    val connection = url.openConnection()\r\n    val headers = connection.getHeaderFields()\r\n    println(\"Headers from url connection\")\r\n    headers.keys.forEach{ if (it != null && it.contains(\"proto\")) {println(it +  headers.get(it))} }\r\n}\r\n\r\nprintln(System.getProperty(\"java.home\"))\r\ndirectConnect()\r\nprintln(\"--------------\")\r\nurlConnect()\r\n```\r\n\r\nCommand to run the script:\r\n```\r\nkotlinc -cp okhttp-3.12.1.jar:okio-1.17.2.jar:okhttp-urlconnection-3.12.1.jar -script http2.kts\r\n```\r\n\r\nThe output I see on Java 10 is:\r\n```\r\nHeaders from direct connection\r\nmyproto[h2]\r\nprotocol_negotiation[h2]\r\n--------------\r\nHeaders from url connection\r\nmyproto[]\r\nprotocol_negotiation[h1]\r\n```\r\n\r\nThat is, directly using OkHTTP client results in `http/2` neogitation, but using url-connection results in `http1.x`.\r\n\r\n----\r\nBy quickly scanning the code, I was unable to determine if this is a fundamental limitation or just a bug.", "url": "https://github.com/square/okhttp/issues/4578", "user": "hrj", "labels": ["bug"], "created": "2019-01-27 11:42:30", "closed": "2019-01-27 13:47:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Content type of FormBody should include charset", "body": "I builded a `FormBody` like this:\r\n```kotlin\r\nval requestBody = FormBody.Builder(Charset.forName(\"UTF-8\"))\r\n    .add(\"...\", \"...\")\r\n    .add(\"...\", \"...\")\r\n    .add(\"...\", \"...\")\r\n    .build()\r\n```\r\n\r\nThe next code should return `application/x-www-form-urlencoded; charset=UTF-8`.\r\n```kotlin\r\nrequestBody.contentType()\r\n```\r\nHowever, it only returns `application/x-www-form-urlencoded`.", "url": "https://github.com/square/okhttp/issues/4574", "user": "BoxResin", "labels": ["bug"], "created": "2019-01-26 04:40:50", "closed": "2019-01-28 02:31:55", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Interceptor is not getting called when no connection in available", "body": "Hello I am using the okhttp3 version 3.11.0 on android.\r\n\r\nI want to use an interceptor to check for network connection before executing a network request to fail fast, but when the is no connection, or the flight mode is on the interceptors are not called. No the application nor the network interceptors.\r\n\r\nThis is my interceptor\r\n\r\nclass NetworkAvailabilityInterceptor(private val connectivityManager: ConnectivityManager): Interceptor {\r\n\r\n    private val isConnected: Boolean\r\n        get() {\r\n            val activeNetworkInfo = connectivityManager.activeNetworkInfo\r\n            return activeNetworkInfo != null && activeNetworkInfo.isConnected\r\n        }\r\n\r\n    @Throws(Exception::class)\r\n    override fun intercept(chain: Interceptor.Chain): Response {\r\n        val request = chain.request()\r\n        Log.d(\"NetworkAvailability\", \"NetworkAvailabilityInterceptor\")\r\n        if(!isConnected) {\r\n            throw NoInternetConnectionException()\r\n        }\r\n        return chain.proceed(request)\r\n    }\r\n}\r\n\r\nThanks\r\n", "url": "https://github.com/square/okhttp/issues/4573", "user": "alex-cabezas-medina", "labels": ["bug"], "created": "2019-01-25 14:30:18", "closed": "2019-02-18 03:49:49", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "Not sending network call when android app is closed/background", "body": "I am using Retrofit2 with OkHttp. Everything is working fine with it except the one thing - a network call when app is closed or in background.\r\n\r\n**Working**\r\nWhenever Firebase notification arrives, I make a network call to fetch data related to that notifications and then show notification.\r\n\r\n**Scenario**\r\nConsider an Android app which is in background or closed and notification arrives.\r\n\r\n**What's Happening**\r\nNotification arrives successfully, I can see it. But when I try to make a call, it is always giving an error _Failed to connect to: *******_ and I can't see any call coming on server.\r\n\r\nI have seen some similar type of issues but none of them could help me.\r\nHere's a list:\r\n\r\n1. https://github.com/square/okhttp/issues/1771\r\n2. https://github.com/square/okhttp/issues/3146\r\n3. https://github.com/square/okhttp/issues/1037\r\n4. https://github.com/square/okhttp/issues/1792\r\n\r\n\r\nSome suggested to use _connectionPool_ and some to use _pingInterval_. Nothing worked in my case. I am not sure if it's bug of Retrofit or OkHttp.\r\n\r\nBelow is the piece of code I am using for the call. Remember that it's working perfectly fine when app is in foreground.\r\n\r\n\r\n        OkHttpClient.Builder builder = getHttpBuilder()\r\n                .connectionSpecs(getSpecList());\r\n\r\n        retrofit = new Retrofit.Builder()\r\n                .baseUrl(Session.getBaseUrl())\r\n                .client(builder.build())\r\n                .build();\r\n\r\n\r\n        Call<ResponseBody> call = retrofit\r\n                .create(Webservice.class)\r\n                .pullNotify(authToken, ivB64, digest, Session.getTimestamp());\r\n        call.enqueue(new Callback<ResponseBody>() {\r\n            @Override\r\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\r\n                listener.onNetworkCallSuccess(response);\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\r\n                listener.onNetworkCallFailure(t);\r\n            }\r\n        });\r\n\r\n\r\nIt always returns `SocketTimeoutException`. Any help/guidance is appreciated.", "url": "https://github.com/square/okhttp/issues/4572", "user": "waqas-ansari", "labels": ["bug"], "created": "2019-01-24 12:19:17", "closed": "2019-01-24 15:30:14", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Reopen of #4253 : retry indefinitely during a file upload", "body": "We observed similar behavior as this [comment](https://github.com/square/okhttp/issues/4253#issuecomment-444690032) We have audit our app extensively. We have narrowed down to similar area in RetryAndFollowUpInterceptor and that IOException or RouteException short circuit. \r\n\r\nhere is the stacktrace of the issue\r\n<img width=\"1251\" alt=\"screen shot 2019-01-09 at 10 05 28 am\" src=\"https://user-images.githubusercontent.com/489742/50918885-3e52b100-13f6-11e9-957d-9db33c93755b.png\">\r\n\r\nCouple questions:\r\n\r\n- is there a mitigate we can use? \r\n- Is there a fix of the issue  ? We saw this PR#4523. We can try to take up the fix of the issue but would love to have a guideline on how to best approach the problem\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4570", "user": "yuit", "labels": ["bug"], "created": "2019-01-21 23:25:09", "closed": "2019-02-18 03:49:19", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "Missing MPL notice and source redist for publicsuffix data", "body": "From what I can see an older version of https://publicsuffix.org/list/public_suffix_list.dat is bundled in https://github.com/square/okhttp/tree/2f4b90050e739f2310a1e1a26634124dd3b618e2/okhttp/src/main/resources/okhttp3/internal/publicsuffix ... but there is no indication anywhere that this is using an MPL-license. This is not Apache-licensed for sure (as your code is at https://github.com/square/okhttp/blob/2f4b90050e739f2310a1e1a26634124dd3b618e2/okhttp/src/main/java/okhttp3/internal/publicsuffix/PublicSuffixDatabase.java )\r\n\r\nIMHO, somehow, somewhere I think that the original notice from https://publicsuffix.org/list/public_suffix_list.dat should be included in the JARs at the minimum and that the source for the list data should be made available for redistribution since the license is MPL...\r\n\r\n```\r\n// This Source Code Form is subject to the terms of the Mozilla Public\r\n// License, v. 2.0. If a copy of the MPL was not distributed with this\r\n// file, You can obtain one at https://mozilla.org/MPL/2.0/.\r\n```\r\n\r\nSee https://github.com/publicsuffix/list/blob/master/LICENSE#L170 for details.", "url": "https://github.com/square/okhttp/issues/4569", "user": "pombredanne", "labels": ["bug"], "created": "2019-01-21 18:52:36", "closed": "2019-02-25 12:52:36", "commits": {"73ce3799db6125d587d17d23420a9b36cc1aec98": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "73ce3799db6125d587d17d23420a9b36cc1aec98", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["aa7d369e0a6113a2e982de84e0c5d3e9fbf07077"], "nameRev": "73ce3799db6125d587d17d23420a9b36cc1aec98 tags/parent-3.14.0~28^2", "commitMessage": "Credit The Public Suffix List for their awesome data.\n\nCloses: https://github.com/square/okhttp/issues/4569\n", "commitDateTime": "2019-02-24 22:10:49", "authoredDateTime": "2019-02-24 22:10:49", "commitGitStats": [{"filePath": "okhttp/src/main/resources/okhttp3/internal/publicsuffix/NOTICE", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["73ce3799db6125d587d17d23420a9b36cc1aec98"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/resources/okhttp3/internal/publicsuffix/NOTICE"]}, {"title": "java.net.ProtocolException: unexpected end of stream", "body": "![1](https://user-images.githubusercontent.com/8720881/51364706-f7f90280-1b17-11e9-9400-60bec7ea3727.jpg)\r\n\r\nat okhttp3.internal.d.a$e.read(SourceFile:409)", "url": "https://github.com/square/okhttp/issues/4567", "user": "zhouhui520w", "labels": ["bug"], "created": "2019-01-18 03:56:32", "closed": "2019-02-18 03:45:00", "commits": {}, "ttf": 30.00027777777778, "commitsDetails": []}, {"title": "okhttp3 3.12.x parse Part BUG", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n\r\n# Version :\r\n3.12.x\r\n\r\n# Error description :\r\nWhen the `MultipartBody.Part.createFormData(String name, @Nullable String filename, RequestBody body) ` method is called, if the file name contains Chinese, an IllegalArgumentException will be thrown to locate the calling chain:\r\n```\r\nMultipartBody.Part.createFormData(String name, @Nullable String filename, RequestBody body) \r\nHeaders.of(String... namesAndValues)\r\nHeaders.checkValue(String value, String name)\r\n```\r\nThe final code is as follows:\r\n```java\r\n  static void checkValue(String value, String name) {\r\n    if (value == null) throw new NullPointerException(\"value for name \" + name + \" == null\");\r\n    for (int i = 0, length = value.length(); i < length; i++) {\r\n      char c = value.charAt(i);\r\n      if ((c <= '\\u001f' && c != '\\t') || c >= '\\u007f') {\r\n        throw new IllegalArgumentException(Util.format(\r\n            \"Unexpected char %#04x at %d in %s value: %s\", (int) c, i, name, value));\r\n      }\r\n    }\r\n  }\r\n```\r\nAs shown above, this code does not handle Chinese correctly.", "url": "https://github.com/square/okhttp/issues/4564", "user": "lx0758", "labels": ["bug"], "created": "2019-01-17 08:22:07", "closed": "2019-02-02 19:03:42", "commits": {"94c38da706a99f2be825c67718c150b58eb08928": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "94c38da706a99f2be825c67718c150b58eb08928", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["56f55d9914c10a669435589a8eda135206e0672d"], "nameRev": "94c38da706a99f2be825c67718c150b58eb08928 tags/parent-3.13.0~7^2", "commitMessage": "Permit multipart filenames to contain non-ascii characters\n\nCloses: https://github.com/square/okhttp/issues/4564\n", "commitDateTime": "2019-02-02 12:55:32", "authoredDateTime": "2019-02-02 12:55:32", "commitGitStats": [{"filePath": "mockwebserver/src/test/java/okhttp3/mockwebserver/RecordedRequestTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/okhttp3/HeadersTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp-tests/src/test/java/okhttp3/MultipartBodyTest.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "okhttp/src/main/java/okhttp3/MultipartBody.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpHeaders.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RecordedRequestTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.RecordedRequestTest", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JavaApiConverter.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.varyHeaders(java.net.URLConnection,okhttp3.Headers)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.createOkResponseForCacheGet(okhttp3.Request,java.net.CacheResponse)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HeadersTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HeadersTest.byteCount()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MultipartBodyTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.MultipartBodyTest.nonAsciiFilename()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MultipartBody.java", "spoonMethods": [{"spoonMethodName": "okhttp3.MultipartBody.Part.createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CacheInterceptor.java", "spoonMethods": []}, {"spoonFilePath": "HttpHeaders.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpHeaders.varyHeaders(okhttp3.Headers,okhttp3.Headers)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["94c38da706a99f2be825c67718c150b58eb08928"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 6, "lines": 18, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 4, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/cache", "okhttp-android-support/src/main/java/okhttp3/internal/huc", "okhttp/src/main/java/okhttp3/internal/http", "okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.internal.huc.JavaApiConverter.createOkResponseForCacheGet(okhttp3.Request,java.net.CacheResponse)", "okhttp3.internal.http.HttpHeaders.varyHeaders(okhttp3.Headers,okhttp3.Headers)", "okhttp3.MultipartBody.Part.createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)", "okhttp3.internal.huc.JavaApiConverter.varyHeaders(java.net.URLConnection,okhttp3.Headers)"]}, {"title": "SocketTimeoutException after I change WIFI without proxy", "body": "okhttp:3.9.0  and  okhttp:3.12.1 \r\n\r\nsteps:\r\n1.Connection Fiddler and set proxy on WIFi Setting (172.30.161.185:8888)\r\n2.Start My APP,do some request by okhttp,Now that the request fails, I can accept it\r\n3.But Do not quit APP,change WIFI to which WIFI without Proxy.\r\n4.request by okhttp is socket timeout all time.\r\n\r\nI found a solution.\r\n\r\nOkHttpClient.Builder builder = new OkHttpClient.Builder();\r\nbuilder.proxy(Proxy.NO_PROXY)\r\nif I set Proxy.NO_PROXY,it's ok\r\n\r\nBut it's not a good way. I think it's a bug and I should fix it.\r\n\r\nI guess RouteSelector -> resetNextProxy -> address.proxySelector().select(url.uri())  caused it. it return invalid proxy(HTTP @ 172.30.161.185:8888) but not DIRECT.\r\n\r\nsome logs:\r\n\r\n    01-17 11:00:37.537 31892-32423/com.hansion.app W/System.err: java.net.SocketTimeoutException: timeout\r\n    01-17 11:00:37.538 31892-32423/com.hansion.app W/System.err:     at okio.SocketAsyncTimeout.newTimeoutException(Okio.kt:159)\r\n            01-17 11:00:37.539 31892-32423/com.hansion.app W/System.err:     at okio.AsyncTimeout.exit$jvm(AsyncTimeout.kt:203)\r\n            01-17 11:00:37.539 31892-32423/com.hansion.app W/System.err:     at okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:163)\r\n            01-17 11:00:37.539 31892-32423/com.hansion.app W/System.err:     at okio.RealBufferedSource.indexOf(RealBufferedSource.kt:349)\r\n            01-17 11:00:37.539 31892-32423/com.hansion.app W/System.err:     at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.kt:222)\r\n            01-17 11:00:37.539 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:215)\r\n            01-17 11:00:37.540 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)\r\n            01-17 11:00:37.540 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88)\r\n            01-17 11:00:37.542 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n            01-17 11:00:37.542 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n            01-17 11:00:37.542 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n            01-17 11:00:37.543 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n            01-17 11:00:37.543 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n            01-17 11:00:37.543 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n            01-17 11:00:37.543 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n            01-17 11:00:37.543 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n            01-17 11:00:37.543 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at com.networkbench.agent.impl.i.b.intercept(SourceFile:69)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:254)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at okhttp3.RealCall.execute(RealCall.java:92)\r\n            01-17 11:00:37.544 31892-32423/com.hansion.app W/System.err:     at com.networkbench.agent.impl.i.c.execute(SourceFile:39)\r\n            01-17 11:00:37.545 31892-32423/com.hansion.app W/System.err:     at com.hansion.app.util.download.core.DownLoadTask.writeFileFromRequest(DownLoadTask.java:279)\r\n            01-17 11:00:37.545 31892-32423/com.hansion.app W/System.err:     at com.hansion.app.util.download.core.DownLoadTask.run(DownLoadTask.java:212)\r\n            01-17 11:00:37.545 31892-32423/com.hansion.app W/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n            01-17 11:00:37.545 31892-32423/com.hansion.app W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n            01-17 11:00:37.546 31892-32423/com.hansion.app W/System.err:     at java.lang.Thread.run(Thread.java:761)\r\n            01-17 11:00:37.547 31892-32423/com.hansion.app W/System.err: Caused by: java.net.SocketException: Socket closed\r\n    01-17 11:00:37.547 31892-32423/com.hansion.app W/System.err:     at java.net.SocketInputStream.socketRead0(Native Method)\r\n            01-17 11:00:37.548 31892-32423/com.hansion.app W/System.err:     at java.net.SocketInputStream.read(SocketInputStream.java:151)\r\n            01-17 11:00:37.548 31892-32423/com.hansion.app W/System.err:     at java.net.SocketInputStream.read(SocketInputStream.java:120)\r\n            01-17 11:00:37.548 31892-32423/com.hansion.app W/System.err:     at okio.InputStreamSource.read(Okio.kt:102)\r\n            01-17 11:00:37.548 31892-32423/com.hansion.app W/System.err:     at okio.AsyncTimeout$source$1.read(AsyncTimeout.kt:159)\r\n            01-17 11:00:37.548 31892-32423/com.hansion.app W/System.err: \t... 28 more", "url": "https://github.com/square/okhttp/issues/4563", "user": "hansionit", "labels": ["bug"], "created": "2019-01-17 03:29:52", "closed": "2019-01-17 06:19:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OkHttp websocket bug without running Activity in Android", "body": "I receive a standard notification about closing  a websocket connection due to a pong  was not received in time when Activity is destroyed.\r\nWebsocket connection is launched in  Service, which is launched through  startForeground.\r\n\u00a0 Ping interval is 30 seconds.\r\nIt seems that  client websocket has  problems when activity is destroyed.\r\nWhat is it :  problems with Android system or  with OkHTTP module?", "url": "https://github.com/square/okhttp/issues/4562", "user": "loader77", "labels": ["bug"], "created": "2019-01-17 00:43:27", "closed": "2019-01-17 08:03:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "The Dispatcher runningAsyncCalls > 64", "body": "I mimic your Dispatcher.java to implement a ThreadPoolUtil,but I found the runningAsyncCalls> 64.\r\n\r\nimport java.util.*;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.SynchronousQueue;\r\nimport java.util.concurrent.ThreadPoolExecutor;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic final class Dispatcher {\r\n    private int maxRequests = 64;\r\n    private ExecutorService executorService;\r\n    private final Deque<LightTask> readyAsyncCalls = new ArrayDeque<>();\r\n    private final Deque<LightTask> runningAsyncCalls = new ArrayDeque<>();\r\n\r\n    private Dispatcher() {\r\n    }\r\n\r\n    public static Dispatcher getInstance(){\r\n        return InstanceHolder.INSTANCE;\r\n    }\r\n\r\n    private static  class InstanceHolder {\r\n        static Dispatcher INSTANCE = new Dispatcher();\r\n    }\r\n\r\n    public synchronized ExecutorService executorService() {\r\n        if (executorService == null) {\r\n            executorService = new ThreadPoolExecutor(0, Integer.MAX_VALUE, 60, TimeUnit.SECONDS,\r\n                    new SynchronousQueue<>());\r\n        }\r\n        return executorService;\r\n    }\r\n\r\n    void enqueue(LightTask call) {\r\n        synchronized (this) {\r\n            readyAsyncCalls.add(call);\r\n        }\r\n        promoteAndExecute();\r\n    }\r\n\r\n    private void promoteAndExecute() {\r\n        List<LightTask> executableCalls = new ArrayList<>();\r\n        synchronized (this) {\r\n            for (Iterator<LightTask> i = readyAsyncCalls.iterator(); i.hasNext(); ) {\r\n                LightTask asyncCall = i.next();\r\n                if (runningAsyncCalls.size() >= maxRequests) break; // Max capacity.\r\n                i.remove();\r\n                asyncCall.ready2runing = true;\r\n                executableCalls.add(asyncCall);\r\n                runningAsyncCalls.add(asyncCall);\r\n            }\r\n        }\r\n\r\n        for (int i = 0, size = executableCalls.size(); i < size; i++) {\r\n            LightTask asyncCall = executableCalls.get(i);\r\n            executorService().execute(asyncCall);\r\n        }\r\n    }\r\n\r\n    private void finished(LightTask call) {\r\n        synchronized (this) {\r\n            if (!runningAsyncCalls.remove(call)) throw new AssertionError(\"Call wasn't in-flight!\");\r\n        }\r\n        promoteAndExecute();\r\n    }\r\n\r\n    public synchronized int queuedCallsCount() {\r\n        return readyAsyncCalls.size();\r\n    }\r\n\r\n    public synchronized int runningCallsCount() {\r\n        return runningAsyncCalls.size();\r\n    }\r\n\r\n    public static class LightTask implements Runnable {\r\n        private Runnable realTask;\r\n        private String name;\r\n        public boolean ready2runing;\r\n\r\n        public LightTask(Runnable realTask, String name) {\r\n            this.realTask = realTask;\r\n            this.name = name;\r\n        }\r\n\r\n        @Override\r\n        public final void run() {\r\n            String oldName = Thread.currentThread().getName();\r\n            if (name != null && name.length() != 0) {\r\n                Thread.currentThread().setName(name);\r\n            }\r\n            try {\r\n                realTask.run();\r\n                int count = ((ThreadPoolExecutor) Dispatcher.getInstance().executorService()).getActiveCount();\r\n                System.out.println(\"queuedCallsCount\uff1a\" + Dispatcher.getInstance().queuedCallsCount() +\r\n                        \" runningCallsCount\uff1a\" + Dispatcher.getInstance().runningCallsCount() +\r\n                        \" activeCallCount\uff1a\" + (count > 64 ? \"**\" + count : count) + ready2runing\r\n                );\r\n            } finally {\r\n                getInstance().finished(this);\r\n                Thread.currentThread().setName(oldName);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n===============Test=================\r\n    private static final int MAX = 1_000;\r\n    public static void main(String[] args) {\r\n        for (int i = 0; i <= MAX; i++) {\r\n            Dispatcher.getInstance().enqueue(new Dispatcher.LightTask(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    \r\n                }\r\n            },\"\"));\r\n        }\r\n    }\r\n================Result================\r\nqueuedCallsCount\uff1a293 runningCallsCount\uff1a64 activeCallCount\uff1a64true\r\nqueuedCallsCount\uff1a277 runningCallsCount\uff1a64 activeCallCount\uff1a**65true\r\nqueuedCallsCount\uff1a293 runningCallsCount\uff1a64 activeCallCount\uff1a64true\r\nqueuedCallsCount\uff1a294 runningCallsCount\uff1a64 activeCallCount\uff1a64true\r\nqueuedCallsCount\uff1a300 runningCallsCount\uff1a64 activeCallCount\uff1a64true", "url": "https://github.com/square/okhttp/issues/4559", "user": "Chumfuchiu", "labels": ["bug"], "created": "2019-01-16 09:24:19", "closed": "2019-01-16 20:43:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Disabling SSL Pinning", "body": "Hello everyone!\r\nWe are using OkHttp 3.11.0 in our Android project and recently implemented certificate pinning feature thanks to CertificatePinner in OkHttp for security requirements.\r\n\r\nWe just noticed that [Objection](https://github.com/sensepost/objection) toolkit can disable certificate pinning after applying the patch to the generated APK. As a result, patched apk can be installed to the device and bypassing SSL pinning.\r\n\r\nIs there any way to get rid of this issue?\r\nThanks in advance.", "url": "https://github.com/square/okhttp/issues/4558", "user": "yunusmete", "labels": ["bug"], "created": "2019-01-16 06:56:20", "closed": "2019-01-16 20:54:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Crashed: OkHttp IllegalMonitorStateException ConnectionPool ReentrantLock$Sync.tryRelease", "body": "Crashes comes from crashlytics. OkHttp Version 3.10.0\r\n\r\n#0. Crashed: OkHttp ConnectionPool\r\n       at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:152)\r\n       at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1285)\r\n       at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:458)\r\n       at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:474)\r\n       at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1086)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1147)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n\r\n--\r\n\r\nFatal Exception: java.lang.IllegalMonitorStateException\r\n       at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:152)\r\n       at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1285)\r\n       at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:458)\r\n       at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:474)\r\n       at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1086)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1147)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n\r\n#0. Crashed: OkHttp ConnectionPool\r\n       at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:152)\r\n       at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1285)\r\n       at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:458)\r\n       at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:474)\r\n       at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1086)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1147)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n\r\n#3. OkHttp ConnectionPool\r\n       at java.lang.Object.wait(Object.java)\r\n       at java.lang.Thread.parkFor$(Thread.java:2135)\r\n       at sun.misc.Unsafe.park(Unsafe.java:358)\r\n       at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:230)\r\n       at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2101)\r\n       at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\r\n       at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1086)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1147)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n\r\n#6. OkHttp ConnectionPool\r\n       at java.lang.Object.wait(Object.java)\r\n       at java.lang.Thread.parkFor$(Thread.java:2135)\r\n       at sun.misc.Unsafe.park(Unsafe.java:358)\r\n       at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:230)\r\n       at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2101)\r\n       at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\r\n       at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1086)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1147)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n\r\n#11. OkHttp ConnectionPool\r\n       at java.lang.Object.wait(Object.java)\r\n       at java.lang.Thread.parkFor$(Thread.java:2135)\r\n       at sun.misc.Unsafe.park(Unsafe.java:358)\r\n       at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:230)\r\n       at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2101)\r\n       at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\r\n       at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1086)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1147)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n\r\n#14. Okio Watchdog\r\n       at java.lang.Object.wait(Object.java)\r\n       at com.android.okhttp.okio.AsyncTimeout.awaitTimeout(AsyncTimeout.java:311)\r\n       at com.android.okhttp.okio.AsyncTimeout.-wrap0(Unknown Source)\r\n       at com.android.okhttp.okio.AsyncTimeout$Watchdog.run(AsyncTimeout.java:286)\r\n\r\n#25. OkHttp ConnectionPool\r\n       at com.crashlytics.android.core.CrashlyticsController.handleUncaughtException(Unknown Source)\r\n       at com.crashlytics.android.core.CrashlyticsController$6.onUncaughtException(SourceFile:301)\r\n       at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler.uncaughtException(SourceFile:42)\r\n       at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:1068)\r\n       at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:1063)\r\n       at java.lang.Thread.dispatchUncaughtException(Thread.java:1953)\r\n\r\n#37. OkHttp ConnectionPool\r\n       at java.lang.Object.wait(Object.java)\r\n       at java.lang.Thread.parkFor$(Thread.java:2135)\r\n       at sun.misc.Unsafe.park(Unsafe.java:358)\r\n       at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:230)\r\n       at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2101)\r\n       at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\r\n       at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1086)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1147)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n\r\n#62. OkHttp ConnectionPool\r\n       at java.lang.Object.wait(Object.java)\r\n       at java.lang.Thread.parkFor$(Thread.java:2135)\r\n       at sun.misc.Unsafe.park(Unsafe.java:358)\r\n       at java.util.concurrent.locks.LockSupport.park(LockSupport.java:190)\r\n       at java.util.concurrent.FutureTask.awaitDone(FutureTask.java:450)\r\n       at java.util.concurrent.FutureTask.get(FutureTask.java:192)\r\n       at com.crashlytics.android.core.CrashlyticsBackgroundWorker.submitAndWait(SourceFile:43)\r\n       at com.crashlytics.android.core.CrashlyticsController.handleUncaughtException(SourceFile:321)\r\n       at com.crashlytics.android.core.CrashlyticsController$6.onUncaughtException(SourceFile:301)\r\n       at com.crashlytics.android.core.CrashlyticsUncaughtExceptionHandler.uncaughtException(SourceFile:42)\r\n       at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:1068)\r\n       at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:1063)\r\n       at java.lang.Thread.dispatchUncaughtException(Thread.java:1953)\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4556", "user": "stipundzya", "labels": ["bug"], "created": "2019-01-15 16:40:11", "closed": "2019-01-16 20:51:25", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "RequestBody- Multipart (contentType) NullPointerException", "body": "Help!. \"com.squareup.okhttp3:okhttp:3.12.1\"\r\n\r\n```\r\npublic static String signUp(Context context,\r\n                                int registerType,\r\n                                String name,\r\n                                String email,\r\n                                int gender,\r\n                                String birthdate,\r\n                                String imagePath,\r\n                                String password,\r\n                                long countryId,\r\n                                long stateId,\r\n                                long cityId,\r\n                                int reasonId,\r\n                                String facebookId,\r\n                                String googleId) throws IOException {\r\n        final String firebaseToken = Prefs.get(context).getFirebaseToken();\r\n        MultipartBody.Builder builder = new MultipartBody.Builder()\r\n                .setType(MultipartBody.FORM)\r\n                .addFormDataPart(\"name\", name)\r\n                .addFormDataPart(\"email\", email)\r\n                .addFormDataPart(\"country\", String.valueOf(countryId))\r\n                .addFormDataPart(\"state\", String.valueOf(stateId))\r\n                .addFormDataPart(\"city\", String.valueOf(cityId))\r\n                .addFormDataPart(\"os\", \"2\")\r\n                .addFormDataPart(\"register_type\", String.valueOf(registerType))\r\n                .addFormDataPart(\"id_device\", firebaseToken);\r\n        if(imagePath != null && imagePath.length() > 0) {\r\n            builder.addFormDataPart(\"image_profile\", \"avatar.png\",\r\n                    RequestBody.create(MEDIA_TYPE_PNG, new File(imagePath)));\r\n        }\r\n        if(birthdate != null && birthdate.length() > 0) {\r\n            builder.addFormDataPart(\"birthdate\", birthdate);\r\n        }\r\n        if(gender != 0) {\r\n            builder.addFormDataPart(\"gender\", String.valueOf(gender));\r\n        }\r\n        if(reasonId != 0) {\r\n            builder.addFormDataPart(\"reason\", String.valueOf(reasonId));\r\n        }\r\n        if(registerType == 1) {\r\n            builder.addFormDataPart(\"password\", password);\r\n        } else if(registerType == 2) {\r\n            builder.addFormDataPart(\"idFacebook\", facebookId);\r\n        } else if(registerType == 3) {\r\n            builder.addFormDataPart(\"idGoogle\", googleId);\r\n        }\r\n        return performPostCall(null, fullUrl(URL_API_REGISTER), builder.build());\r\n    }\r\n```\r\n\r\nCrashlytics Log:\r\n```\r\nCaused by java.lang.NullPointerException: Attempt to invoke virtual method 'byte[] java.lang.String.getBytes(java.nio.charset.Charset)' on a null object reference\r\n       at okhttp3.RequestBody.contentType(Unknown Source)\r\n       at okhttp3.MultipartBody$Part.create(Unknown Source)\r\n       at okhttp3.MultipartBody$Builder.setType(Unknown Source)\r\n       at com.turismonl.pasaportenle.data.api.ApiHelper.getTermsAndConditions(Unknown Source)\r\n       at com.turismonl.pasaportenle.data.loader.SignupLoader.loadData(Unknown Source)\r\n       at com.turismonl.pasaportenle.data.loader.BaseLoader.loadInBackground(Unknown Source)\r\n       at com.turismonl.pasaportenle.data.loader.BaseLoader.loadInBackground(Unknown Source)\r\n       at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(Unknown Source)\r\n       at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(Unknown Source)\r\n       at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(Unknown Source)\r\n       at android.support.v4.content.ModernAsyncTask$2.call(Unknown Source)\r\n       at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n       at java.lang.Thread.run(Thread.java:818)\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/4552", "user": "enriquebautista", "labels": ["bug"], "created": "2019-01-12 06:21:27", "closed": "2019-02-18 03:43:45", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "TAG = [Classname].class.getSimpleName().substring(0,15) not ProGuard friendly", "body": "I'm using `implementation 'com.squareup.okhttp3:okhttp:3.11.0'`\r\n\r\nMy application crashes on initialization at the following line, but only in production builds: \r\n```java\r\npublic class OkHttp3WebClient implements IWebClient {\r\n    private static final String TAG = OkHttp3WebClient.class.getSimpleName().substring(0, 15);\r\n    ...\r\n}\r\n```\r\n\r\nI followed the \"guidance\" for ProGuard rules [here](https://github.com/square/okhttp/blob/master/okhttp/src/main/resources/META-INF/proguard/okhttp3.pro)\r\n\r\nWhat I've found is that the application crashes on the line above with `java.lang.ExceptionInInitializerError Caused by: java.lang.StringIndexOutOfBoundsException: length=1; index=15`\r\n\r\nI believe what is happening that ProGuard is mapping the name to some class `C`.  Then `C.class.getSimpleName()` becomes a one character string `\"C\"`.  So `\"C\".substring(0,15)` throws an `StringIndexOutOfBoundsException`\r\n\r\nThere was an older discussion about this, but [issue 2230](https://github.com/square/okhttp/issues/2230) was closed a long time ago.", "url": "https://github.com/square/okhttp/issues/4548", "user": "Kumfert", "labels": ["bug"], "created": "2019-01-12 01:00:25", "closed": "2019-01-12 15:28:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "javax.net.ssl.SSLException: Unable to create application data", "body": "Caused by javax.net.ssl.SSLException: Unable to create application data\r\n       at com.android.org.conscrypt.NativeCrypto.SSL_new(NativeCrypto.java)\r\n       at com.android.org.conscrypt.SslWrapper.newInstance(SslWrapper.java:58)\r\n       at com.android.org.conscrypt.ConscryptFileDescriptorSocket.newSsl(ConscryptFileDescriptorSocket.java:159)\r\n       at com.android.org.conscrypt.ConscryptFileDescriptorSocket.(ConscryptFileDescriptorSocket.java:152)\r\n       at com.android.org.conscrypt.OpenSSLSocketFactoryImpl.createSocket(OpenSSLSocketFactoryImpl.java:149)\r\n       at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:308)\r\n       at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:283)\r\n       at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:168)\r\n       at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n       at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n       at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:254)\r\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:200)\r\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n\r\nmodel:ONEPLUS A5000\r\nandroid version:8.1\r\nokhttp version:3.12.1\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4546", "user": "jaydenyuhy", "labels": ["bug"], "created": "2019-01-11 15:33:34", "closed": "2019-01-11 16:40:28", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SocketTimeoutException on cellular data connection    okHttp 2.7.5 + Retrofit 1.9.0", "body": "D/CONNECTION_ISSUE: ERROR : java.net.SocketTimeoutException: timeout\r\nD/CONNECTION_ISSUE: Message : timeout\r\nD/CONNECTION_ISSUE: StackTrace : retrofit.RetrofitError: timeout\r\n        at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:395)\r\n        at retrofit.RestAdapter$RestHandler.access$100(RestAdapter.java:220)\r\n        at retrofit.RestAdapter$RestHandler$1.invoke(RestAdapter.java:265)\r\n        at retrofit.RxSupport$2.run(RxSupport.java:55)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n        at retrofit.Platform$Android$2$1.run(Platform.java:142)\r\n        at java.lang.Thread.run(Thread.java:818)\r\n     Caused by: java.net.SocketTimeoutException: timeout\r\n        at com.squareup.okhttp.internal.framed.FramedStream$StreamTimeout.newTimeoutException(FramedStream.java:605)\r\n        at com.squareup.okhttp.internal.framed.FramedStream$StreamTimeout.exitAndThrowIfTimedOut(FramedStream.java:613)\r\n        at com.squareup.okhttp.internal.framed.FramedStream.getResponseHeaders(FramedStream.java:143)\r\n        at com.squareup.okhttp.internal.http.Http2xStream.readResponseHeaders(Http2xStream.java:150)\r\n        at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:737)\r\n        at com.squareup.okhttp.internal.http.HttpEngine.access$200(HttpEngine.java:87)\r\n        at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:722)\r\n        at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:576)\r\n        at com.squareup.okhttp.Call.getResponse(Call.java:287)\r\n        at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:243)\r\n        at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:205)\r\n        at com.squareup.okhttp.Call.execute(Call.java:80)\r\n        at retrofit.client.OkClient.execute(OkClient.java:53)\r\n        at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:326)\r\n        at retrofit.RestAdapter$RestHandler.access$100(RestAdapter.java:220)\u00a0\r\n        at retrofit.RestAdapter$RestHandler$1.invoke(RestAdapter.java:265)\u00a0\r\n        at retrofit.RxSupport$2.run(RxSupport.java:55)\u00a0\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\u00a0\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:237)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\u00a0\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\u00a0\r\n        at retrofit.Platform$Android$2$1.run(Platform.java:142)\u00a0\r\n        at java.lang.Thread.run(Thread.java:818)\u00a0\r\n\r\nI tried increasing time out to 30 sec.\r\n        client.setConnectTimeout(30, TimeUnit.SECONDS); // connect timeout\r\n        client.setReadTimeout(30, TimeUnit.SECONDS);\r\n        client.setWriteTimeout(30, TimeUnit.SECONDS);\r\n\r\nAlso tried adding \r\n        android:vmSafeMode=\"true\"", "url": "https://github.com/square/okhttp/issues/4544", "user": "ashwinthomson", "labels": ["bug"], "created": "2019-01-09 06:50:31", "closed": "2019-01-14 11:51:50", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Using okhttp3 & Springboot to call http get request, no response until timeout", "body": "I am using springboot to receive a request from frontend and then send another request to another address.\r\n\r\nBut sometimes there will report java.net.SocketTimeoutException: connect timed out, not every time the error occurs. But when I used postman to test, I found that the request will respond in 60s, and I set the timeout as 60s. And I set the timeout in frontend as 8s, so I doubt that the request should respond when 60s, but the 8s caused the timeout issue. But 60s is not right, because in most cases, the request respond in less than 200ms. I am using okhttp 3.7\r\n```\r\n\r\njava.net.SocketTimeoutException: connect timed out\r\nat java.net.PlainSocketImpl.socketConnect(Native Method)\r\nat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\nat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\nat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\nat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\nat java.net.Socket.connect(Socket.java:589)\r\nat okhttp3.internal.platform.Platform.connectSocket(Platform.java:124)\r\nat okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:221)\r\nat okhttp3.internal.connection.RealConnection.connect(RealConnection.java:147)\r\nat okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:192)\r\nat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:121)\r\nat okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:100)\r\nat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)\r\nat okhttp3.RealCall.execute(RealCall.java:69)\r\n```\r\nMethod in the springboot controller/service:\r\n```\r\n\r\nprivate HttpHelper httpHelper;\r\nprivate static Logger logger = LoggerFactory.getLogger(ITSMServiceImpl.class);\r\n\r\nprivate HttpHelper getHttpHelper() {\r\n    if (this.httpHelper == null) {\r\n        this.httpHelper = new HttpHelper();\r\n    }\r\n    return this.httpHelper;\r\n}\r\n\r\n    @Override\r\npublic ITSMResult submitTicket(Ticket ticket, List<MultipartFile> files) throws SubmitException {\r\n    ITSMResult itsmResult = new Result();\r\n    Map<String, String> headers = new HashMap<>();\r\n    headers.put(\"SOAPACTION\", \"urn:Interface_INCFromIVA_WS\");\r\n    String soupBody = this.generateSoupBody(ticket, files);\r\n    try {\r\n        Response response = this.getHttpHelper().executePostRequest(Constants.ITSM_END_POINT, headers, soupBody);\r\n        String bodyString = response.body().string();\r\n        logger.info(bodyString);\r\n        if (response.isSuccessful()) {\r\n            itsmResult = parseResponse(bodyString);\r\n            logger.info(itsmResult.getTicketId());\r\n        } else {\r\n            logger.error(response.body().string());\r\n            throw new XXXXException(ErrorCodes.ITSM_SUBIT_FAILURE, \"\u63d0\u4ea4\u5931\u8d25\uff0c\u8bf7\u91cd\u65b0\u63d0\u4ea4\");\r\n\r\n        }\r\n\r\n    } catch (IOException e) {\r\n        logger.error(e.getMessage());\r\n        e.printStackTrace();\r\n        throw new XXXXException(ErrorCodes.ITSM_SUBIT_FAILURE, \"\u63d0\u4ea4\u5931\u8d25\uff0c\u8bf7\u91cd\u65b0\u63d0\u4ea4\");\r\n\r\n    }\r\n    return itsmResult;\r\n}\r\n```\r\nCode in the OkhttpHelper:\r\n```\r\n\r\nimport java.io.IOException;\r\nimport java.net.CookieManager;\r\nimport java.net.CookiePolicy;\r\nimport java.util.*;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport okhttp3.*;\r\n\r\nimport okhttp3.Request.Builder;\r\n\r\n\r\npublic class HttpHelper {\r\n\r\nOkHttpClient client;\r\n\r\npublic HttpHelper() {\r\n    this.client = configureHttpClient();\r\n}\r\n\r\n/**\r\n * @param username\r\n * @param password\r\n */\r\npublic HttpHelper(String username, String password) {\r\n    this.client = configureHttpClient(username, password);\r\n}\r\n\r\nprivate OkHttpClient.Builder initDefaultBuilder() {\r\n    OkHttpClient.Builder builder = new OkHttpClient.Builder();\r\n    ConnectionSpec spec =\r\n            new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)\r\n                    .allEnabledCipherSuites()\r\n                    .build();\r\n\r\n    builder.connectionSpecs(Arrays.asList(spec, ConnectionSpec.CLEARTEXT));\r\n\r\n    final CookieManager cookieManager = new CookieManager();\r\n    cookieManager.setCookiePolicy(CookiePolicy.ACCEPT_ALL);\r\n\r\n    builder.cookieJar(new CookieJar() {\r\n        private Map<String, List<Cookie>> cookieStore = new HashMap<>();\r\n\r\n        @Override\r\n        public void saveFromResponse(HttpUrl url, List<Cookie> cookies) {\r\n            cookieStore.put(url.host(), cookies);\r\n        }\r\n\r\n        @Override\r\n        public List<Cookie> loadForRequest(HttpUrl url) {\r\n            List<Cookie> cookies = cookieStore.get(url.host());\r\n            return cookies != null ? cookies : new ArrayList<Cookie>();\r\n        }\r\n    });\r\n\r\n    builder.connectTimeout(60, TimeUnit.SECONDS);\r\n    builder.writeTimeout(120, TimeUnit.SECONDS);\r\n    builder.readTimeout(240, TimeUnit.SECONDS);\r\n\r\n    return builder;\r\n}\r\n\r\n/**\r\n * @return\r\n */\r\nprotected OkHttpClient configureHttpClient() {\r\n    return initDefaultBuilder().build();\r\n}\r\n\r\nprotected OkHttpClient configureHttpClient(final String username, final String password) {\r\n    OkHttpClient.Builder builder = initDefaultBuilder();\r\n    builder.authenticator(new Authenticator() {\r\n        @Override\r\n        public Request authenticate(Route route, Response response) throws IOException {\r\n            String credential = Credentials.basic(username, password);\r\n            return response.request().newBuilder().header(\"Authorization\", credential).build();\r\n        }\r\n    });\r\n    return builder.build();\r\n}\r\n\r\npublic Response executeGetRequest(String requestURL) throws IOException {\r\n    return this.executeGetRequest(requestURL, null);\r\n}\r\n\r\n\r\npublic Response executeGetRequest(String requestURL, Map<String, String> headers) throws IOException {\r\n    Builder requestBuilder = new Request.Builder().url(requestURL).get();\r\n    if (headers != null && headers.size() > 0) {\r\n        for (String key : headers.keySet())\r\n            requestBuilder.addHeader(key, headers.get(key));\r\n    }\r\n\r\n    return client.newCall(requestBuilder.build()).execute();\r\n}\r\n\r\npublic Response executePostRequest(String requestURL, Map<String, String> headers, String bodyString) throws IOException {\r\n    MediaType contentType = MediaType.parse(headers.get(\"Content-Type\") + \"; charset=utf-8\");\r\n    RequestBody body = RequestBody.create(contentType, bodyString);\r\n    Builder requestBuilder = new Request.Builder()\r\n            .url(requestURL)\r\n            .post(body);\r\n    for (String key : headers.keySet())\r\n        requestBuilder.addHeader(key, headers.get(key));\r\n    return client.newCall(requestBuilder.build()).execute();\r\n}\r\n```\r\nthe error occurs sometimes, I didnot find the reason.", "url": "https://github.com/square/okhttp/issues/4542", "user": "jewelcai", "labels": ["bug"], "created": "2019-01-08 13:15:15", "closed": "2019-02-18 04:01:13", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": " Response header Hpack compression is not correct", "body": "Hi guys,\r\n\r\nI tried to use Hpack to compression response header block, I found the compressed data is not correct. For example:\r\n\r\nHeader list to encode:\r\n:status: 302\r\n\r\nAccording to [rfc7541#page-45](https://tools.ietf.org/html/rfc7541#page-45), the first byte should be 0x48, but now it is 0x08.\r\n\r\nThe response code should use 'Literal Header Field with Incremental Indexing', but now uses 'Literal Header Field without Indexing'.  It goes this line: https://github.com/square/okhttp/blob/bb4a067e06791ce48b5b65aa138599c69a87dc21/okhttp/src/main/java/okhttp3/internal/http2/Hpack.java#L519 , it is not correct.\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4541", "user": "MegatronKing", "labels": ["bug"], "created": "2019-01-07 16:41:50", "closed": "2019-01-08 15:21:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "cache response is stale", "body": "Hi, it seems like the cache response contains the old response while the network response is new and modified.\r\n\r\nWe're on android using  'com.squareup.okhttp3:okhttp:3.11.0'\r\n\r\nSee example below of the headers we get this in the same Response, notice the network response has 200 status code and a newer LastModified, different ETag etc.\r\n\r\nThe expected result would be that the cache response would contain the same (new) data as the network response in cases where the network response is fresher.\r\n\r\n\r\n**network response**\r\nResponse{protocol=http/1.1, code=200, message=OK, url=http://xxx.yyy.zzz/test} \r\nheaders: Content-Type: application/octet-stream\r\n    Content-Length: 3093384\r\n    Connection: keep-alive\r\n    Date: Mon, 07 Jan 2019 09:11:45 GMT\r\n    Last-Modified: Mon, 07 Jan 2019 09:11:15 GMT\r\n    ETag: \"18905c1f58feca0c6df495f7cc2e6846\"\r\n    x-amz-version-id: 6J9k_vF2g.lPoELovv9G.rUPpfnk2h4r\r\n    Accept-Ranges: bytes\r\n    Server: AmazonS3\r\n    Age: 10\r\n    X-Cache: Hit from cloudfront\r\n    Via: 1.1 32c8da10203574baccb74b8f771a7ffb.cloudfront.net (CloudFront)\r\n    X-Amz-Cf-Id: FVvnNF3QD5I0vELy78FoVxYgvJeqRsCACGdbbh5W8MGtARkg0lH9CQ==\r\n\r\n**cache response** \r\nResponse{protocol=http/1.1, code=200, message=OK, url=http://http://xxx.yyy.zzz/test} \r\nheaders: Content-Type: application/octet-stream\r\n    Content-Length: 3093323\r\n    Connection: keep-alive\r\n    Last-Modified: Sun, 06 Jan 2019 15:03:31 GMT\r\n    Accept-Ranges: bytes\r\n    Date: Mon, 07 Jan 2019 09:09:11 GMT\r\n    ETag: \"9725f2a6b04151c54f8a420be6fa7690\"\r\n    x-amz-version-id: vKJV3auEiruTggNKvciHJoy1LWscENFM\r\n    Server: AmazonS3\r\n    Age: 65063\r\n    X-Cache: Hit from cloudfront\r\n    Via: 1.1 e64eb476d8f76c461d21278e018e194f.cloudfront.net (CloudFront)\r\n    X-Amz-Cf-Id: R53ZU9rO1_ZWlueMU3Xo1ZOeDX5ibAv9TFDgp2uchC6rfg9fBCtk-A==", "url": "https://github.com/square/okhttp/issues/4539", "user": "drorsun", "labels": ["bug"], "created": "2019-01-07 09:21:19", "closed": "2019-02-19 02:33:18", "commits": {}, "ttf": 42.000277777777775, "commitsDetails": []}, {"title": "Attempt to invoke interface method 'java.net.SocketImpl java.net.SocketImplFactory.createSocketImpl()' on a null object reference", "body": "Good bug reports include a failing test! Writing a test helps you to isolate and describe the problem, and it helps us to fix it fast. Bug reports without a failing test or reproduction steps are likely to be closed.\r\n\r\nHere\u2019s an example test to get you started.\r\nhttps://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n\r\n\r\n\r\njava.lang.NullPointerException: Attempt to invoke interface method 'java.net.SocketImpl java.net.SocketImplFactory.createSocketImpl()' on a null object reference\r\nat java.net.Socket.setImpl(Socket.java:525)\r\nat java.net.Socket.<init>(Socket.java:86)\r\nat javax.net.DefaultSocketFactory.createSocket(SocketFactory.java:273)\r\nat okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:216)\r\nat okhttp3.internal.connection.RealConnection.connect(RealConnection.java:147)\r\nat okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:192)\r\nat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:121)\r\nat okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:100)\r\nat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)", "url": "https://github.com/square/okhttp/issues/4538", "user": "android-ext", "labels": ["bug"], "created": "2019-01-07 07:05:39", "closed": "2019-02-18 04:04:26", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "Connection leaks if WebSocket handshake fails", "body": "Test case:\r\n\r\n```\r\n  @Test public void missingConnectionHeader() throws IOException {\r\n    webServer.enqueue(new MockResponse()\r\n        .setResponseCode(101)\r\n        .setHeader(\"Upgrade\", \"websocket\")\r\n        .setHeader(\"Sec-WebSocket-Accept\", \"ujmZX4KXZqjwy6vi1aQFH5p4Ygk=\"));\r\n    newWebSocket();\r\n\r\n    clientListener.assertFailure(101, null, ProtocolException.class,\r\n        \"Expected 'Connection' header value 'Upgrade' but was 'null'\");\r\n\r\n    clientListener.assertExhausted();\r\n\r\n    client.connectionPool().evictAll();\r\n    assertEquals(0, client.connectionPool().connectionCount());\r\n  }\r\n```", "url": "https://github.com/square/okhttp/issues/4527", "user": "amirlivneh", "labels": ["bug"], "created": "2019-01-03 17:39:06", "closed": "2019-01-05 18:18:47", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Most tests in WebSocketHttpTest are leaking connections", "body": "This can be reproduced by adding these lines to `WebSocketHttpTest.tearDown()`:\r\n```\r\n// Ensure a fresh connection pool for the next test.\r\nclient.connectionPool().evictAll();\r\nassertEquals(0, client.connectionPool().connectionCount());\r\n```", "url": "https://github.com/square/okhttp/issues/4515", "user": "amirlivneh", "labels": ["bug"], "created": "2019-01-01 22:29:46", "closed": "2020-01-05 11:50:37", "commits": {}, "ttf": 368.0002777777778, "commitsDetails": []}, {"title": "FATAL EXCEPTION when using okhttpclient with conscrypt", "body": "I want tls 1.3 so I use conscrypt, according to TestTls13Request.java I use : \r\n`Security.insertProviderAt(Conscrypt.newProviderBuilder().provideTrustManager().build(), 1)`\r\nbut it crashed, here is log \r\n```\r\nAndroidRuntime: java.lang.NoClassDefFoundError: org.conscrypt.TrustManagerImpl\r\nAndroidRuntime: \tat org.conscrypt.TrustManagerFactoryImpl.engineGetTrustManagers(TrustManagerFactoryImpl.java:87)\r\nAndroidRuntime: \tat javax.net.ssl.TrustManagerFactory.getTrustManagers(TrustManagerFactory.java:219)\r\nAndroidRuntime: \tat okhttp3.internal.Util.platformTrustManager(Util.java:667)\r\nAndroidRuntime: \tat okhttp3.OkHttpClient.<init>(OkHttpClient.java:257)\r\nAndroidRuntime: \tat okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:1040)\r\n```\r\nThere is no excepiton if I use this instead: \r\n`Security.insertProviderAt(new org.conscrypt.OpenSSLProvider(), 1);`\r\nbut okhttpclient use tls 1.2 to handshake not 1.3\r\n\r\n\r\n  ", "url": "https://github.com/square/okhttp/issues/4510", "user": "updatede", "labels": ["bug"], "created": "2019-01-01 11:10:04", "closed": "2019-02-19 02:38:52", "commits": {}, "ttf": 48.000277777777775, "commitsDetails": []}, {"title": "Flaky test: HttpOverHttp2Test.recoverFromConnectionNoNewStreamsOnFollowUp", "body": "Example runs:\r\n* https://travis-ci.org/square/okhttp/builds/473626521\r\n* https://travis-ci.org/square/okhttp/builds/473587495\r\n* https://travis-ci.org/square/okhttp/jobs/497961975\r\n", "url": "https://github.com/square/okhttp/issues/4506", "user": "amirlivneh", "labels": ["bug", "tests"], "created": "2018-12-31 13:32:13", "closed": "2019-04-02 21:15:05", "commits": {}, "ttf": 92.00027777777778, "commitsDetails": []}, {"title": "Missing callEnd event when response has empty body and \"Connection: close\"", "body": "```\r\nokcurl -v https://nghttp2.org/httpbin/redirect-to?url=http://www.twitter.com/robots.txt \r\n\r\n[0 ms] callStart: Request{method=GET, url=https://nghttp2.org/httpbin/redirect-to?url=http://www.twitter.com/robots.txt, tags={}}\r\n[11 ms] dnsStart: nghttp2.org\r\n[15 ms] dnsEnd: [nghttp2.org/139.162.123.134, nghttp2.org/2400:8902:0:0:f03c:91ff:fe69:a454]\r\n[22 ms] connectStart: nghttp2.org/139.162.123.134:443 DIRECT\r\n[274 ms] secureConnectStart\r\n[1372 ms] secureConnectEnd: Handshake{tlsVersion=TLS_1_2 cipherSuite=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 peerCertificates=[CN=nghttp2.org, CN=Let's Encrypt Authority X3, O=Let's Encrypt, C=US] localCertificates=[]}\r\n[1372 ms] connectEnd: http/1.1\r\n[1374 ms] connectionAcquired: Connection{nghttp2.org:443, proxy=DIRECT hostAddress=nghttp2.org/139.162.123.134:443 cipherSuite=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 protocol=http/1.1}\r\n[1376 ms] requestHeadersStart\r\n[1378 ms] requestHeadersEnd\r\n[1380 ms] responseHeadersStart\r\n[1902 ms] responseHeadersEnd: Response{protocol=http/1.1, code=302, message=Found, url=https://nghttp2.org/httpbin/redirect-to?url=http://www.twitter.com/robots.txt}\r\n[1902 ms] responseBodyStart\r\n[1905 ms] responseBodyEnd: byteCount=0\r\n[1908 ms] connectionReleased\r\n```", "url": "https://github.com/square/okhttp/issues/4500", "user": "amirlivneh", "labels": ["bug"], "created": "2018-12-30 15:45:49", "closed": "2019-02-18 04:11:05", "commits": {}, "ttf": 49.000277777777775, "commitsDetails": []}, {"title": "stream was reset: PROTOCOL_ERROR", "body": "[XNIO-2 task-52][ERROR][ServiceFallbackProvider:38] fallbackResponse - ServiceFallbackProvider.fallbackResponse:route=websrv-auth,cause=com.netflix.client.ClientException\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:118)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\r\n\tat io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:48)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)\r\n\tat io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)\r\n\tat io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)\r\n\tat io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)\r\n\tat io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:65)\r\n\tat io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)\r\n\tat io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)\r\n\tat io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)\r\n\tat io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)\r\n\tat io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)\r\n\tat io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)\r\n\tat io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)\r\n\tat io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)\r\n\tat io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)\r\n\tat io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)\r\n\tat io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)\r\n\tat io.undertow.server.Connectors.executeRootHandler(Connectors.java:336)\r\n\tat io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:830)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.RuntimeException: okhttp3.internal.http2.StreamResetException: stream was reset: PROTOCOL_ERROR\r\n\tat rx.exceptions.Exceptions.propagate(Exceptions.java:58)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:464)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\t... 151 more\r\nCaused by: okhttp3.internal.http2.StreamResetException: stream was reset: PROTOCOL_ERROR\r\n\tat okhttp3.internal.http2.Http2Stream.takeResponseHeaders(Http2Stream.java:153)\r\n\tat okhttp3.internal.http2.Http2Codec.readResponseHeaders(Http2Codec.java:127)\r\n\tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n\tat okhttp3.RealCall.execute(RealCall.java:77)\r\n\tat org.springframework.cloud.netflix.ribbon.okhttp.RetryableOkHttpLoadBalancingClient$1.doWithRetry(RetryableOkHttpLoadBalancingClient.java:133)\r\n\tat org.springframework.cloud.netflix.ribbon.okhttp.RetryableOkHttpLoadBalancingClient$1.doWithRetry(RetryableOkHttpLoadBalancingClient.java:102)\r\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)\r\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)\r\n\tat org.springframework.cloud.netflix.ribbon.okhttp.RetryableOkHttpLoadBalancingClient.executeWithRetry(RetryableOkHttpLoadBalancingClient.java:95)\r\n\tat org.springframework.cloud.netflix.ribbon.okhttp.RetryableOkHttpLoadBalancingClient.execute(RetryableOkHttpLoadBalancingClient.java:146)\r\n\tat org.springframework.cloud.netflix.ribbon.okhttp.RetryableOkHttpLoadBalancingClient.execute(RetryableOkHttpLoadBalancingClient.java:58)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)\r\n\tat rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)\r\n\tat rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)\r\n\tat rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\t... 153 more", "url": "https://github.com/square/okhttp/issues/4485", "user": "lqjack", "labels": ["bug"], "created": "2018-12-29 01:28:33", "closed": "2019-01-22 01:38:29", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "HttpUrl host decode IPv6 address issue", "body": "@Test\r\n    public void test() {\r\n\r\n        String host_ipv4 = \"192.168.1.254\";\r\n        String host_ipv6 = \"::ffff:c0a8:1fe\";\r\n\r\n        HttpUrl.Builder builder = new HttpUrl.Builder();\r\n        builder.scheme(\"http\");\r\n        builder.host(host_ipv6);\r\n\r\n        System.out.println(builder.build().toString());\r\n    }\r\n\r\njava.lang.AssertionError: Invalid IPv6 address: '::ffff:c0a8:1fe'\r\n\r\n\tat okhttp3.internal.Util.canonicalizeHost(Util.java:408)\r\n\tat okhttp3.HttpUrl$Builder.canonicalizeHost(HttpUrl.java:1592)\r\n\tat okhttp3.HttpUrl$Builder.host(HttpUrl.java:1026)\r\n\tat us.nonda.zus.TimestampTest.test(TimestampTest.java:22)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:483)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:483)\r\n\tat com.intellij.rt.execution.application.AppMainV2.main(AppMainV2.java:131)\r\n\r\n\r\nThe network is right , I can request with IPv4 , but cant with IPv6,  please tell me how?", "url": "https://github.com/square/okhttp/issues/4451", "user": "Yphyllis", "labels": ["bug"], "created": "2018-12-18 10:05:18", "closed": "2018-12-30 18:52:49", "commits": {"8c2a4cfffacc9bb8272182d327b05488a1810c80": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "05a14e506da0cd8f73260afb8cae9fc43b6c993e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "8da92ebf9941715d88b58ff1e6011474bc8b400d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "8c2a4cfffacc9bb8272182d327b05488a1810c80", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["555e621efe462e842b77fd05394495a8c405e707"], "nameRev": "8c2a4cfffacc9bb8272182d327b05488a1810c80 tags/parent-3.13.0~50^2", "commitMessage": "Don't crash on IPv4-mapped IPv6 addresses\n\nhttps://github.com/square/okhttp/issues/4451\n", "commitDateTime": "2018-12-29 18:32:07", "authoredDateTime": "2018-12-29 18:32:07", "commitGitStats": [{"filePath": "mockwebserver/src/test/java/okhttp3/mockwebserver/RecordedRequestTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "okhttp/src/main/java/okhttp3/internal/Util.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RecordedRequestTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.RecordedRequestTest.testIPv6()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrlTest.hostIPv6Builder()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.hostIpv6CanonicalForm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.Util.canonicalizeHost(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "05a14e506da0cd8f73260afb8cae9fc43b6c993e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8da92ebf9941715d88b58ff1e6011474bc8b400d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["275d71b02458e5021a87f121b4057aaab1f4f506"], "nameRev": "8da92ebf9941715d88b58ff1e6011474bc8b400d tags/parent-3.13.0~43^2", "commitMessage": "Test malformed IPv6 addresses\n\nI was worried we weren't handling this case correctly. Fortunately we are.\n\nCloses: https://github.com/square/okhttp/issues/4451\n", "commitDateTime": "2018-12-30 11:12:34", "authoredDateTime": "2018-12-30 10:51:35", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrlTest.hostIpv6Malformed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8c2a4cfffacc9bb8272182d327b05488a1810c80", "8da92ebf9941715d88b58ff1e6011474bc8b400d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 0.0, "lines": 1.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal"], "changesInPackagesSPOON": ["okhttp3.internal.Util.canonicalizeHost(java.lang.String)"]}, {"title": "EventListener callStart should only fire if we go to network ", "body": "Per @swankjesse \r\n\r\n> we might need to move the callStart callback to only occur if you actually use the network", "url": "https://github.com/square/okhttp/issues/4441", "user": "ZacSweers", "labels": ["bug"], "created": "2018-12-11 23:18:07", "closed": "2019-02-19 02:40:16", "commits": {}, "ttf": 69.00027777777778, "commitsDetails": []}, {"title": "IndexOutOfBoundsException in RealConnection", "body": "#### Stacktrace\r\n```\r\njava.lang.IndexOutOfBoundsException: Index: 0\r\n\tat java.base/java.util.Collections$EmptyList.get(Collections.java:4481)\r\n\tat okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:326)\r\n\tat okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:283)\r\n\tat okhttp3.internal.connection.RealConnection.connect(RealConnection.java:168)\r\n\tat okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n\tat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n\tat okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:254)\r\n\tat okhttp3.RealCall.execute(RealCall.java:92)\r\n```\r\n\r\n#### Environment\r\n* OkHttp 3.12.0\r\n* Java 11.0.1 LTS\r\n* Windows 10 64-bit\r\n\r\nThis bug seems cannot be stably reproduce, so I'm not sure how to write a failing test for this. After I downgraded okhttp to 3.11.0 it works fine.", "url": "https://github.com/square/okhttp/issues/4427", "user": "andylizi", "labels": ["bug"], "created": "2018-12-02 16:48:44", "closed": "2018-12-30 15:37:43", "commits": {"71e3e027593b6e1f0b2f0e7e28b66d685dc645da": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "c6823178c13b4b431c0735b05e5fcb5860f05440": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "92cfc2656d25b7394083b8fa50a35757a71be0f8": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "71e3e027593b6e1f0b2f0e7e28b66d685dc645da", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c6823178c13b4b431c0735b05e5fcb5860f05440", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["427bfefd0e72de16ba680fbecfc7aeff310ea291"], "nameRev": "c6823178c13b4b431c0735b05e5fcb5860f05440 tags/parent-3.13.0~46^2", "commitMessage": "Exercise TLS with no server certificates\n\nCloses: https://github.com/square/okhttp/issues/4427\n", "commitDateTime": "2018-12-30 09:56:40", "authoredDateTime": "2018-12-29 12:07:10", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 101, "deletions": 0, "lines": 101}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java", "insertions": 13, "deletions": 5, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.tlsSuccessWithNoPeerCertificates()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.tlsHostnameVerificationFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.tlsHostnameVerificationFailureNoPeerCertificates()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RealConnection.connectTls(okhttp3.internal.connection.ConnectionSpecSelector)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "92cfc2656d25b7394083b8fa50a35757a71be0f8", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["e2c49c2cf84481bed710592ae91d604f08ab13f1"], "nameRev": "92cfc2656d25b7394083b8fa50a35757a71be0f8 tags/parent-3.12.2~1^2", "commitMessage": "Exercise TLS with no server certificates\n\nCloses: https://github.com/square/okhttp/issues/4427\n", "commitDateTime": "2019-03-14 11:27:22", "authoredDateTime": "2018-12-29 12:07:10", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java", "insertions": 13, "deletions": 5, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RealConnection.connectTls(okhttp3.internal.connection.ConnectionSpecSelector)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c6823178c13b4b431c0735b05e5fcb5860f05440"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13.0, "deletions": 5.0, "lines": 18.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 2.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection"], "changesInPackagesSPOON": ["okhttp3.internal.connection.RealConnection.connectTls(okhttp3.internal.connection.ConnectionSpecSelector)"]}, {"title": "MockWebServer + HTTP/2 + UNIX sockets", "body": "I don\u2019t think this works. We should add a test to confirm that it does.", "url": "https://github.com/square/okhttp/issues/4419", "user": "swankjesse", "labels": ["bug", "tests"], "created": "2018-11-27 18:27:12", "closed": "2018-12-24 13:02:42", "commits": {"4adcbdfebf245c5678838b6dc5704b9fbaa76cb9": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "4adcbdfebf245c5678838b6dc5704b9fbaa76cb9", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6f0c880f17e8c73a6438331379d814a6ee79ce5f"], "nameRev": "4adcbdfebf245c5678838b6dc5704b9fbaa76cb9 tags/parent-3.13.0~62^2", "commitMessage": "Fix the UNIX sockets sample to use HTTP/2\n\nIt turns out that the NIO dumpsterfire harms us again here. The Channels APIs\nsynchronize whenever reading or writing to a stream if the channel implements\nSelectableChannel. If both the input stream and the output stream are on the\nsame channel, then it is impossible to read and write concurrently.\n\nFixes: https://github.com/square/okhttp/issues/4419\n", "commitDateTime": "2018-12-23 22:46:30", "authoredDateTime": "2018-12-23 22:46:30", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 29, "deletions": 20, "lines": 49}, {"filePath": "samples/unixdomainsockets/src/main/java/okhttp3/unixdomainsockets/BlockingUnixSocket.java", "insertions": 119, "deletions": 0, "lines": 119}, {"filePath": "samples/unixdomainsockets/src/main/java/okhttp3/unixdomainsockets/ClientAndServer.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "samples/unixdomainsockets/src/main/java/okhttp3/unixdomainsockets/UnixDomainServerSocketFactory.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "samples/unixdomainsockets/src/main/java/okhttp3/unixdomainsockets/UnixDomainSocketFactory.java", "insertions": 1, "deletions": 25, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.Builder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.Builder.socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.PingRunnable", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushDataLater(int,okio.BufferedSource,int,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushResetLater(int,okhttp3.internal.http2.ErrorCode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writeWindowUpdateLater(int,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushRequestLater(int,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushHeadersLater(int,java.util.List,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.settings(boolean,okhttp3.internal.http2.Settings)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(okhttp3.internal.http2.Settings)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.headers(boolean,int,int,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.headers(boolean,int,int,java.util.List).1.execute()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.Builder.socket(java.net.Socket)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "BlockingUnixSocket.java", "spoonMethods": [{"spoonMethodName": "okhttp3.unixdomainsockets.BlockingUnixSocket", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientAndServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.unixdomainsockets.ClientAndServer.run()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "UnixDomainServerSocketFactory.java", "spoonMethods": [{"spoonMethodName": "okhttp3.unixdomainsockets.UnixDomainServerSocketFactory.UnixDomainServerSocket.accept()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.unixdomainsockets.UnixDomainServerSocketFactory.UnixDomainServerSocket.accept().1.getInetAddress()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "UnixDomainSocketFactory.java", "spoonMethods": [{"spoonMethodName": "okhttp3.unixdomainsockets.UnixDomainSocketFactory.createUnixDomainSocket().1.connect(java.net.SocketAddress,java.lang.Integer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.unixdomainsockets.UnixDomainSocketFactory.createUnixDomainSocket().1.getInetAddress()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.unixdomainsockets.UnixDomainSocketFactory.createUnixDomainSocket()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4adcbdfebf245c5678838b6dc5704b9fbaa76cb9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 155, "deletions": 53, "lines": 208, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 38, "UPD": 23, "INS": 7, "MOV": 4, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 23}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/unixdomainsockets/src/main/java/okhttp3/unixdomainsockets", "okhttp/src/main/java/okhttp3/internal/http2"], "changesInPackagesSPOON": ["okhttp3.unixdomainsockets.UnixDomainServerSocketFactory.UnixDomainServerSocket.accept().1.getInetAddress()", "okhttp3.internal.http2.Http2Connection.writeWindowUpdateLater(int,long)", "okhttp3.internal.http2.Http2Connection.Builder", "okhttp3.internal.http2.Http2Connection.ReaderRunnable.headers(boolean,int,int,java.util.List)", "okhttp3.unixdomainsockets.BlockingUnixSocket", "okhttp3.unixdomainsockets.UnixDomainSocketFactory.createUnixDomainSocket().1.getInetAddress()", "okhttp3.internal.http2.Http2Connection.pushResetLater(int,okhttp3.internal.http2.ErrorCode)", "okhttp3.internal.http2.Http2Connection", "okhttp3.internal.http2.Http2Connection.ReaderRunnable", "okhttp3.internal.http2.Http2Connection.Builder.socket(java.net.Socket)", "okhttp3.unixdomainsockets.UnixDomainServerSocketFactory.UnixDomainServerSocket.accept()", "okhttp3.internal.http2.Http2Connection.pushDataLater(int,okio.BufferedSource,int,boolean)", "okhttp3.internal.http2.Http2Connection.pushHeadersLater(int,java.util.List,boolean)", "okhttp3.internal.http2.Http2Connection.PingRunnable", "okhttp3.internal.http2.Http2Connection.pushRequestLater(int,java.util.List)", "okhttp3.unixdomainsockets.UnixDomainSocketFactory.createUnixDomainSocket().1.connect(java.net.SocketAddress,java.lang.Integer)", "okhttp3.internal.http2.Http2Connection.ReaderRunnable.headers(boolean,int,int,java.util.List).1.execute()", "okhttp3.internal.http2.Http2Connection.writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)", "okhttp3.unixdomainsockets.UnixDomainSocketFactory.createUnixDomainSocket()", "okhttp3.unixdomainsockets.ClientAndServer.run()", "okhttp3.internal.http2.Http2Connection.Builder.socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)", "okhttp3.internal.http2.Http2Connection.ReaderRunnable.applyAndAckSettings(okhttp3.internal.http2.Settings)", "okhttp3.internal.http2.Http2Connection.ReaderRunnable.settings(boolean,okhttp3.internal.http2.Settings)"]}, {"title": "Error: Program type already present: okhttp3.package-info", "body": "I used library version 3.11.0 and the project was going fine, but as soon as I updated the version to 3.12.0, I get the following error:\r\n```\r\n> Task :app:transformDexArchiveWithExternalLibsDexMergerForStaging FAILED\r\nAGPBI: {\"kind\":\"error\",\"text\":\"Program type already present: okhttp3.package-info\",\"sources\":[{}],\"tool\":\"D8\"}\r\n\r\nFAILURE: Build failed with an exception.\r\n```\r\n\r\nWhat could be the problem, nothing else changed, except for the version of Okhttp?", "url": "https://github.com/square/okhttp/issues/4395", "user": "SteinerOkay", "labels": ["bug", "build-ci"], "created": "2018-11-19 00:12:12", "closed": "2018-12-24 02:02:27", "commits": {}, "ttf": 35.000277777777775, "commitsDetails": []}, {"title": "callEnd called twice for redirect", "body": "```\r\n$ okurl --tracing CONSOLE 'https://nghttp2.org/httpbin/redirect-to?url=http://www.twitter.com/robots.txt'\r\n[0 ms] callStart: Request{method=GET, url=https://nghttp2.org/httpbin/redirect-to?url=http://www.twitter.com/robots.txt, tags={class java.lang.Object=TokenSet(name=default)}}\r\n[5 ms] dnsStart: nghttp2.org\r\n[139 ms] dnsEnd: [nghttp2.org/139.162.123.134, nghttp2.org/2400:8902:0:0:f03c:91ff:fe69:a454]\r\n[169 ms] connectStart: nghttp2.org/139.162.123.134:443 DIRECT\r\n[530 ms] secureConnectStart\r\n[894 ms] secureConnectEnd\r\n[908 ms] connectEnd: h2\r\n[908 ms] connectionAcquired: Connection{nghttp2.org:443, proxy=DIRECT hostAddress=nghttp2.org/139.162.123.134:443 cipherSuite=TLS_AES_256_GCM_SHA384 protocol=h2}\r\n[1094 ms] requestHeadersStart\r\n[1114 ms] requestHeadersEnd\r\n[1114 ms] responseHeadersStart\r\n[1409 ms] responseHeadersEnd: Response{protocol=h2, code=302, message=, url=https://nghttp2.org/httpbin/redirect-to?url=http://www.twitter.com/robots.txt}\r\n[1409 ms] responseBodyStart\r\n[1410 ms] responseBodyEnd: byteCount=0\r\n[1410 ms] connectionReleased\r\n[1410 ms] callEnd\r\n[1411 ms] dnsStart: www.twitter.com\r\n[1428 ms] dnsEnd: [www.twitter.com/104.244.42.193, www.twitter.com/104.244.42.65]\r\n[1428 ms] connectStart: www.twitter.com/104.244.42.193:80 DIRECT\r\n[1443 ms] connectEnd: http/1.1\r\n[1443 ms] connectionAcquired: Connection{www.twitter.com:80, proxy=DIRECT hostAddress=www.twitter.com/104.244.42.193:80 cipherSuite=none protocol=http/1.1}\r\n[1519 ms] requestHeadersStart\r\n[1519 ms] requestHeadersEnd\r\n[1519 ms] responseHeadersStart\r\n[1650 ms] responseHeadersEnd: Response{protocol=http/1.1, code=200, message=OK, url=http://www.twitter.com/robots.txt}\r\n[1651 ms] responseBodyStart\r\n[1813 ms] responseBodyEnd: byteCount=52\r\n[1813 ms] connectionReleased\r\n[1813 ms] callEnd\r\nUser-agent: *\r\nDisallow: /\r\n```", "url": "https://github.com/square/okhttp/issues/4386", "user": "yschimke", "labels": ["bug"], "created": "2018-11-14 20:46:33", "closed": "2018-12-30 16:17:56", "commits": {}, "ttf": 45.000277777777775, "commitsDetails": []}, {"title": "Conscrypt >= 1.3 failing with HandshakeCertificatesTest.clientAndServer", "body": "From https://github.com/square/okhttp/pull/4349\r\n\r\n```\r\njava.util.concurrent.ExecutionException: javax.net.ssl.SSLHandshakeException: Handshake failed\r\n\r\n\tat java.util.concurrent.FutureTask.report(FutureTask.java:122)\r\n\tat java.util.concurrent.FutureTask.get(FutureTask.java:192)\r\n\tat okhttp3.tls.HandshakeCertificatesTest.clientAndServer(HandshakeCertificatesTest.java:96)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: javax.net.ssl.SSLHandshakeException: Handshake failed\r\n\tat org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(ConscryptFileDescriptorSocket.java:287)\r\n\tat okhttp3.tls.HandshakeCertificatesTest$1.call(HandshakeCertificatesTest.java:165)\r\n\tat okhttp3.tls.HandshakeCertificatesTest$1.call(HandshakeCertificatesTest.java:154)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x7febda6739c8: Failure in SSL library, usually a protocol error\r\nerror:10000416:SSL routines:OPENSSL_internal:SSLV3_ALERT_CERTIFICATE_UNKNOWN (../ssl/tls_record.cc:587 0x7febda673f18:0x00000001)\r\n\tat org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\r\n\tat org.conscrypt.NativeSsl.doHandshake(NativeSsl.java:385)\r\n\tat org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(ConscryptFileDescriptorSocket.java:225)\r\n\t... 6 more\r\n```", "url": "https://github.com/square/okhttp/issues/4360", "user": "yschimke", "labels": ["bug"], "created": "2018-11-03 09:01:51", "closed": "2019-09-16 18:49:10", "commits": {}, "ttf": 317.0002777777778, "commitsDetails": []}, {"title": "Immutable Cache-Control Extension Causing the Cache to Always Return Indefinitely", "body": "I noticed that responses containing the cache control extension `immutable` were never refreshing despite them being stale. Diving a bit deeper I noticed that if the `immutable` extension was present, it would **ignore** the `cache-control` directive and return the cached response regardless.\r\n\r\nSee https://github.com/square/okhttp/pull/4312 (more specifically https://github.com/square/okhttp/pull/4312/commits/dfb13ab4efb01bc0246f276046730646299c218d) for the tests to check that the cached response isn't being returned irrespective of its freshness lifecycle.\r\n\r\nI believe OkHttp has always been respecting the immutable field and its actually conditional requests to the server whilst in a cached response's freshness lifecycle that can't be done. As soon as you force a network request, it removes any conditionals anyway. I could be wrong about this though.", "url": "https://github.com/square/okhttp/issues/4313", "user": "StuStirling", "labels": ["bug"], "created": "2018-10-11 21:02:32", "closed": "2018-11-13 04:05:41", "commits": {"764b31b3e2367dcadacc08b818739b065b1c4bef": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 32.000277777777775, "commitsDetails": [{"commitHash": "764b31b3e2367dcadacc08b818739b065b1c4bef", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["495b5f78a072b7812fe06f0b4c6565d5036f0587"], "nameRev": "764b31b3e2367dcadacc08b818739b065b1c4bef tags/parent-3.12.0~6^2", "commitMessage": "Relax handling of Cache-Control: immutable\n\nPreviously we were treating this header as if the response would never\nchange. This was incorrect. The correct behavior according to RFC 8246\nis that the 'immutable' directive only applies to conditional requests\nmade during the freshness lifetime. We don't make conditional requests\nduring the freshness lifetime, so the entire directive doesn't apply\nto us.\n\nhttps://github.com/square/okhttp/issues/4313\n", "commitDateTime": "2018-11-12 22:31:16", "authoredDateTime": "2018-11-12 22:30:49", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CacheTest.java", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheStrategy.java", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.immutableIsCached()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CacheTest.immutableIsCachedAfterMultipleCalls()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CacheTest.immutableIsNotCachedBeyondFreshnessLifetime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CacheStrategy.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.cache.CacheStrategy.Factory.getCandidate()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["764b31b3e2367dcadacc08b818739b065b1c4bef"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 3, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/cache"], "changesInPackagesSPOON": ["okhttp3.internal.cache.CacheStrategy.Factory.getCandidate()"]}, {"title": "HttpLoggingInterceptor with Level.BODY blocks SSE from reading response", "body": "The problem is that SSE doesn't work with **HttpLoggingInterceptor** that have **Level.BODY**. Interceptor with other levels are working as expected.\r\n\r\n**HttpLoggingInterceptor** with **Level.BODY** is not allowing **RealEventSource** to read response body byte by byte. It looks like interceptor is [trying to buffer the entire response body](https://github.com/square/okhttp/blob/95ae0cf421c0f9c5521578781952108d1a1e1bdd/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java#L241) which is not ready until request is done. Therefore **Callback.onResponse** in **RealEventSource** doesn't called, response events can't be parsed and passed to **EventSourceListener**.\r\n\r\nThe solution could be ignoring response body in **HttpLoggingInterceptor** for `Content-Type: text/event-stream`, reading response body line by line or just an explicit warning of not using **Level.BODY** with SEE in documentation.\r\n\r\nChanging log level from **Level.BODY** for SSE client wouldn't be the best solution because it will also disable logging a body for regular HTTP requests for this client instance.", "url": "https://github.com/square/okhttp/issues/4298", "user": "jackqack", "labels": ["bug"], "created": "2018-10-01 14:45:39", "closed": "2020-03-29 17:39:29", "commits": {}, "ttf": 545.0002777777778, "commitsDetails": []}, {"title": "Headers.of() doesn\u2019t enforce ASCII-only", "body": "Needs to call checkNameAndValue to confirm that invalid characters can\u2019t sneak through.", "url": "https://github.com/square/okhttp/issues/4283", "user": "swankjesse", "labels": ["bug"], "created": "2018-09-22 00:35:11", "closed": "2018-09-30 08:14:46", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Connection Leaks happening during WebSocket Operations", "body": "Hi All,\r\n\r\nWhere exactly we are supposed to do response.close() in case of WebSocket operations? I don't see any in the example i.e [WebSocketEcho](https://github.com/square/okhttp/blob/master/samples/guide/src/main/java/okhttp3/recipes/WebSocketEcho.java) provided in okhttp repo.\r\n\r\nWe're trying to get rid of these OkHttp connection leaks generated during WebSocket operations in [fabric8io/kubernetes-client](https://github.com/fabric8io/kubernetes-client). For example, There is one websocket operation happening in [PodOperationsImpl](https://github.com/fabric8io/kubernetes-client/blob/master/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/PodOperationsImpl.java#L267)\"\r\n```\r\n        try {\r\n            URL url = new URL(URLUtils.join(getResourceUrl().toString(), sb.toString()));\r\n            Request.Builder r = new Request.Builder().url(url).header(\"Sec-WebSocket-Protocol\", \"v4.channel.k8s.io\").get();\r\n            OkHttpClient clone = client.newBuilder().readTimeout(0, TimeUnit.MILLISECONDS).build();\r\n            final ExecWebSocketListener execWebSocketListener = new ExecWebSocketListener(getConfig(), in, out, err, errChannel, inPipe, outPipe, errPipe, errChannelPipe, execListener);\r\n            clone.newWebSocket(r.build(), execWebSocketListener);\r\n            execWebSocketListener.waitUntilReady();\r\n            return execWebSocketListener;\r\n        } catch (Throwable t) {\r\n            throw KubernetesClientException.launderThrowable(forOperationType(\"exec\"), t);\r\n        }\r\n```\r\nWhich gets handled on [ExecWebSocketListener](https://github.com/fabric8io/kubernetes-client/blob/7ea9ce885f9fad72949db6e3f5cc8dceb8ce8766/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/ExecWebSocketListener.java#L212) , We're closing socket in [close(..)](https://github.com/fabric8io/kubernetes-client/blob/7ea9ce885f9fad72949db6e3f5cc8dceb8ce8766/kubernetes-client/src/main/java/io/fabric8/kubernetes/client/dsl/internal/ExecWebSocketListener.java#L138) callback here:\r\n```\r\n    private void closeWebSocketOnce(int code, String reason) {\r\n      if (closed.get()) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        WebSocket ws = webSocketRef.get();\r\n        if (ws != null) {\r\n          ws.close(code, reason);\r\n        }\r\n      } catch (Throwable t) {\r\n        LOGGER.debug(\"Error closing WebSocket.\", t);\r\n      }\r\n    }\r\n```\r\nBut somehow we're still getting connection leaks, In logs I can see that stacktrace points to the WebSocket opening operation in PodOperationsImpl:\r\n```\r\n\r\nSep 09, 2018 12:08:43 PM okhttp3.internal.platform.Platform log\r\nWARNING: A connection to http://localhost:55231/ was leaked. Did you forget to close a response body?\r\njava.lang.Throwable: response.body().close()\r\n    at okhttp3.internal.platform.Platform.getStackTraceForCloseable(Platform.java:144)\r\n    at okhttp3.RealCall.captureCallStackTrace(RealCall.java:89)\r\n    at okhttp3.RealCall.enqueue(RealCall.java:98)\r\n    at okhttp3.internal.ws.RealWebSocket.connect(RealWebSocket.java:183)\r\n    at okhttp3.OkHttpClient.newWebSocket(OkHttpClient.java:436)\r\n    at io.fabric8.kubernetes.client.dsl.internal.PodOperationsImpl.exec(PodOperationsImpl.java:267)\r\n    at io.fabric8.kubernetes.client.dsl.internal.PodOperationsImpl.exec(PodOperationsImpl.java:61)\r\n    at io.fabric8.kubernetes.client.mock.ExecTest.doExec(ExecTest.java:99)\r\n    at io.fabric8.kubernetes.client.mock.ExecTest.doIteration(ExecTest.java:81)\r\n    at io.fabric8.kubernetes.client.mock.ExecTest.testConnectionLeaks(ExecTest.java:73)\r\n    at io.fabric8.kubernetes.client.mock.ExecTest.testMockServer(ExecTest.java:50)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke(Method.java:498)\r\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n    at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n    at org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n    at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:369)\r\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:275)\r\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:239)\r\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:160)\r\n    at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)\r\n    at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)\r\n    at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)\r\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)\r\n```\r\n\r\nThere is a PR already in progress which tries to close response body and reduce leaks(not working though): https://github.com/fabric8io/kubernetes-client/pull/1198 . Could anyone please check what we're doing wrong here? Any kind of help would be highly appreciated :-). \r\n\r\n* **Steps to reproduce:**\r\n\r\n1. Clone kubernetes-client repository:\r\n```\r\ngit clone -b reduceOkHttpLeaks https://github.com/rohanKanojia/kubernetes-client.git\r\n```\r\n\r\n2. Navigate to `kubernetes-tests` directory and run:\r\n```\r\n mvn -Dtest=\"io.fabric8.kubernetes.client.mock.ExecTest#testMockServer\" test\r\n```\r\n\r\n3. Wait ~10 minutes. For me after 5th iteration(after 5 minutes) logs appears.\r\n* OkHttp Version: 3.9.1\r\n", "url": "https://github.com/square/okhttp/issues/4258", "user": "rohanKanojia", "labels": ["bug"], "created": "2018-09-09 07:00:22", "closed": "2018-11-07 08:37:43", "commits": {"949439ae5b0c5fd70687d1f946cac80552a5a7f9": {"commitGHEventType": "referenced", "commitUser": "rohanKanojia"}, "fbc36f96c04f4110f31109e0ee728f63d2a28aee": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "62f2f823410661128d1d9549b9b727f824637f6c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 59.000277777777775, "commitsDetails": [{"commitHash": "949439ae5b0c5fd70687d1f946cac80552a5a7f9", "commitGHEventType": "referenced", "commitUser": "rohanKanojia", "commitParents": ["14521ebe5f85654f3955e1d14bc62a9c45f5a591"], "nameRev": "949439ae5b0c5fd70687d1f946cac80552a5a7f9 tags/parent-3.5.0~14^2", "commitMessage": "Rename NewWebSocket to WebSocket.\n\nThe synchronous WebSocket class is gone.\n", "commitDateTime": "2016-11-19 15:16:58", "authoredDateTime": "2016-11-19 15:16:58", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp-tests/src/main/java/okhttp3/AutobahnTester.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "okhttp-tests/src/test/java/okhttp3/RecordedResponse.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/okhttp3/WebSocketHttpTest.java", "insertions": 25, "deletions": 25, "lines": 50}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketReaderTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/{NewWebSocketRecorder.java => WebSocketRecorder.java}", "insertions": 21, "deletions": 20, "lines": 41}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "okhttp/src/main/java/okhttp3/{NewWebSocket.java => WebSocket.java}", "insertions": 3, "deletions": 39, "lines": 42}, {"filePath": "okhttp/src/main/java/okhttp3/WebSocketListener.java", "insertions": 54, "deletions": 0, "lines": 54}, {"filePath": "okhttp/src/main/java/okhttp3/internal/ws/{RealNewWebSocket.java => RealWebSocket.java}", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "samples/guide/src/main/java/okhttp3/recipes/WebSocketEcho.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "samples/slack/src/main/java/okhttp3/slack/RtmSession.java", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "samples/slack/src/main/java/okhttp3/slack/SlackApi.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockResponse.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockResponse", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockResponse.getWebSocketListener()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockResponse.withWebSocketUpgrade(okhttp3.NewWebSocket$Listener)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,okhttp3.mockwebserver.RecordedRequest,okhttp3.mockwebserver.MockResponse)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,okhttp3.mockwebserver.RecordedRequest,okhttp3.mockwebserver.MockResponse).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AutobahnTester.java", "spoonMethods": [{"spoonMethodName": "okhttp3.AutobahnTester.newWebSocket(java.lang.String,okhttp3.NewWebSocket$Listener)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.runTest(long,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.getTestCount()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.updateReports()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.runTest(long,long).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.getTestCount().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.updateReports().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.runTest(long,long).1.onOpen(okhttp3.NewWebSocket,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.runTest(long,long).1.onMessage(okhttp3.NewWebSocket,okio.ByteString)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.runTest(long,long).1.onMessage(okhttp3.NewWebSocket,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.runTest(long,long).1.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.runTest(long,long).1.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.getTestCount().2.onMessage(okhttp3.NewWebSocket,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.getTestCount().2.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.getTestCount().2.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.updateReports().3.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.AutobahnTester.updateReports().3.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RecordedResponse.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RecordedResponse", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.RecordedResponse.priorResponse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.RecordedResponse.networkResponse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.RecordedResponse.cacheResponse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketHttpTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.WebSocketHttpTest", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.enqueueClientWebSocket()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.enqueueClientWebSocket(okhttp3.Request)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.textMessage()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.binaryMessage()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.nullStringThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.nullByteStringThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.serverMessage()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnOpenFailsImmediately()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnFailLogs()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnMessageClosesImmediatelyAndFails()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnClosingClosesImmediatelyAndFails()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.clientTimeoutClosesBody()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.websocketScheme(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnOpenFailsImmediately().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnFailLogs().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnMessageClosesImmediatelyAndFails().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnClosingClosesImmediatelyAndFails().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnOpenFailsImmediately().2.onOpen(okhttp3.NewWebSocket,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnFailLogs().3.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnMessageClosesImmediatelyAndFails().4.onMessage(okhttp3.NewWebSocket,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnClosingClosesImmediatelyAndFails().5.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealWebSocketTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.RealWebSocketTest", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocketTest.setUp()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocketTest.setUp().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocketTest.setUp().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketReaderTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.WebSocketReaderTest", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketRecorder.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertOpen()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.setNextEventDelegate(okhttp3.NewWebSocket$Listener)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.onOpen(okhttp3.NewWebSocket,okhttp3.Response)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.onMessage(okhttp3.NewWebSocket,okio.ByteString)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.onMessage(okhttp3.NewWebSocket,java.lang.String)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.onClosed(okhttp3.NewWebSocket,int,java.lang.String)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertTextMessage(java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertBinaryMessage(byte[])", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertPing(okio.ByteString)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertPong(okio.ByteString)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertClosing(int,java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertClosed(int,java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertExhausted()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertFailure(java.lang.Throwable)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertFailure(java.lang.Class,java.lang.String)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.assertFailure(int,java.lang.String,java.lang.Class,java.lang.String)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Open", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.nextEvent()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Failure", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Failure.toString()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Message", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Ping", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Ping.hashCode()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Ping.equals(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Pong", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Pong.hashCode()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Pong.equals(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Closing", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Closed", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadMessage(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadMessage(okio.ByteString)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadPing(okio.ByteString)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadPong(okio.ByteString)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadClose(int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Open.toString()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Message.hashCode()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Message.equals(java.lang.Object)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Ping.toString()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Pong.toString()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Closing.toString()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Closing.hashCode()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Closing.equals(java.lang.Object)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Closed.toString()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Closed.hashCode()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Closed.equals(java.lang.Object)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.NewWebSocketRecorder.Message.toString()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient.newWebSocket(okhttp3.Request,okhttp3.NewWebSocket$Listener)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocket.java", "spoonMethods": [{"spoonMethodName": "okhttp3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.newWebSocket(okhttp3.Request,okhttp3.NewWebSocket$Listener)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketListener.java", "spoonMethods": [{"spoonMethodName": "okhttp3.WebSocketListener", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealWebSocket.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.initReaderAndWriter(okhttp3.internal.ws.RealNewWebSocket$Streams)", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.onReadPing(okio.ByteString)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.onReadClose(int,java.lang.String)", "TOT": 13, "UPD": 13, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.send(okio.ByteString,int)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.pong(okio.ByteString)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.close(int,java.lang.String)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.writeOneFrame()", "TOT": 21, "UPD": 21, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.failWebSocket(java.lang.Exception,okhttp3.Response)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.ClientStreams", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.request()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.queueSize()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.cancel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.connect(okhttp3.OkHttpClient)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.onReadMessage(java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.onReadMessage(okio.ByteString)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.send(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.send(okio.ByteString)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.loopReader()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.processNextFrame()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.runWriter()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.ClientStreams.close()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.Message", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.Close", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.Streams", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.connect(okhttp3.OkHttpClient).2.onResponse(okhttp3.Call,okhttp3.Response)", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.connect(okhttp3.OkHttpClient).2.onFailure(okhttp3.Call,java.io.IOException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.checkResponse(okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealNewWebSocket.1.execute()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketEcho.java", "spoonMethods": [{"spoonMethodName": "okhttp3.recipes.WebSocketEcho", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.recipes.WebSocketEcho.onOpen(okhttp3.NewWebSocket,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.recipes.WebSocketEcho.onMessage(okhttp3.NewWebSocket,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.recipes.WebSocketEcho.onMessage(okhttp3.NewWebSocket,okio.ByteString)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.recipes.WebSocketEcho.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.recipes.WebSocketEcho.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RtmSession.java", "spoonMethods": [{"spoonMethodName": "okhttp3.slack.RtmSession", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.slack.RtmSession.onOpen(okhttp3.NewWebSocket,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.slack.RtmSession.onMessage(okhttp3.NewWebSocket,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.slack.RtmSession.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.slack.RtmSession.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.slack.RtmSession.close()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SlackApi.java", "spoonMethods": [{"spoonMethodName": "okhttp3.slack.SlackApi.rtm(okhttp3.HttpUrl,okhttp3.NewWebSocket$Listener)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "fbc36f96c04f4110f31109e0ee728f63d2a28aee", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "62f2f823410661128d1d9549b9b727f824637f6c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["550afce3f855115bbb7de9b2080684dd8a6e1fe0"], "nameRev": "62f2f823410661128d1d9549b9b727f824637f6c tags/parent-3.12.0~8^2", "commitMessage": "Fix connection leaks on failed web socket upgrades.\n\nCloses: https://github.com/square/okhttp/issues/4258\n", "commitDateTime": "2018-11-07 19:21:47", "authoredDateTime": "2018-11-06 22:36:54", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/RetryAndFollowUpInterceptor.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WebSocketHttpTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.webSocketConnectionIsReleased()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RetryAndFollowUpInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(okhttp3.internal.http.Chain)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["949439ae5b0c5fd70687d1f946cac80552a5a7f9", "62f2f823410661128d1d9549b9b727f824637f6c"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 96.0, "deletions": 76.0, "lines": 172.0, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 320.0, "UPD": 315.0, "INS": 2.0, "MOV": 2.0, "DEL": 1.0, "spoonFilesChanged": 12, "spoonMethodsChanged": 105}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/slack/src/main/java/okhttp3/slack", "mockwebserver/src/main/java/okhttp3/mockwebserver", "okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/internal/http", "samples/guide/src/main/java/okhttp3/recipes", "okhttp/src/main/java/okhttp3/internal/ws"], "changesInPackagesSPOON": ["okhttp3.slack.RtmSession.onOpen(okhttp3.NewWebSocket,okhttp3.Response)", "okhttp3.internal.ws.NewWebSocketRecorder.Closing", "okhttp3.internal.ws.RealNewWebSocket.processNextFrame()", "okhttp3.internal.ws.NewWebSocketRecorder.assertTextMessage(java.lang.String)", "okhttp3.internal.ws.RealNewWebSocket.connect(okhttp3.OkHttpClient)", "okhttp3.internal.ws.NewWebSocketRecorder.Pong.hashCode()", "okhttp3.internal.ws.NewWebSocketRecorder.Pong", "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadMessage(okio.ByteString)", "okhttp3.slack.RtmSession", "okhttp3.internal.ws.NewWebSocketRecorder.Ping.toString()", "okhttp3.internal.ws.NewWebSocketRecorder.Failure", "okhttp3.internal.ws.RealNewWebSocket.onReadMessage(java.lang.String)", "okhttp3.internal.ws.RealNewWebSocket.Close", "okhttp3.recipes.WebSocketEcho.onOpen(okhttp3.NewWebSocket,okhttp3.Response)", "okhttp3.WebSocketListener", "okhttp3.internal.ws.NewWebSocketRecorder.Closing.equals(java.lang.Object)", "okhttp3.internal.ws.NewWebSocketRecorder.Closed.hashCode()", "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadClose(int,java.lang.String)", "okhttp3.slack.RtmSession.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "okhttp3.newWebSocket(okhttp3.Request,okhttp3.NewWebSocket$Listener)", "okhttp3.internal.ws.NewWebSocketRecorder.onMessage(okhttp3.NewWebSocket,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "okhttp3.RecordedResponse", "okhttp3.internal.ws.NewWebSocketRecorder.Message", "okhttp3.slack.RtmSession.onMessage(okhttp3.NewWebSocket,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.Closed.toString()", "okhttp3.RecordedResponse.priorResponse()", "okhttp3.internal.ws.RealNewWebSocket.1.execute()", "okhttp3.RecordedResponse.networkResponse()", "okhttp3.internal.ws.NewWebSocketRecorder.assertClosed(int,java.lang.String)", "okhttp3", "okhttp3.internal.ws.NewWebSocketRecorder.onMessage(okhttp3.NewWebSocket,okio.ByteString)", "okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(okhttp3.internal.http.Chain)", "okhttp3.mockwebserver.MockResponse", "okhttp3.slack.RtmSession.close()", "okhttp3.slack.SlackApi.rtm(okhttp3.HttpUrl,okhttp3.NewWebSocket$Listener)", "okhttp3.internal.ws.RealNewWebSocket.Streams", "okhttp3.internal.ws.NewWebSocketRecorder.Ping.equals(java.lang.Object)", "okhttp3.internal.ws.RealNewWebSocket.initReaderAndWriter(okhttp3.internal.ws.RealNewWebSocket$Streams)", "okhttp3.internal.ws.NewWebSocketRecorder.Closing.hashCode()", "okhttp3.internal.ws.RealNewWebSocket.ClientStreams.close()", "okhttp3.mockwebserver.MockResponse.withWebSocketUpgrade(okhttp3.NewWebSocket$Listener)", "okhttp3.recipes.WebSocketEcho.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "okhttp3.internal.ws.RealNewWebSocket.close(int,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.Pong.equals(java.lang.Object)", "okhttp3.internal.ws.NewWebSocketRecorder.assertPing(okio.ByteString)", "okhttp3.internal.ws.RealNewWebSocket.runWriter()", "okhttp3.internal.ws.NewWebSocketRecorder.nextEvent()", "okhttp3.internal.ws.NewWebSocketRecorder.Closed.equals(java.lang.Object)", "okhttp3.internal.ws.RealNewWebSocket.send(java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadMessage(java.lang.String)", "okhttp3.internal.ws.RealNewWebSocket.send(okio.ByteString,int)", "okhttp3.recipes.WebSocketEcho.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "okhttp3.internal.ws.NewWebSocketRecorder.Ping.hashCode()", "okhttp3.internal.ws.RealNewWebSocket.queueSize()", "okhttp3.internal.ws.NewWebSocketRecorder.assertClosing(int,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.assertExhausted()", "okhttp3.slack.RtmSession.onFailure(okhttp3.NewWebSocket,java.lang.Throwable,okhttp3.Response)", "okhttp3.internal.ws.NewWebSocketRecorder.Closing.toString()", "okhttp3.internal.ws.RealNewWebSocket.failWebSocket(java.lang.Exception,okhttp3.Response)", "okhttp3.internal.ws.NewWebSocketRecorder.Pong.toString()", "okhttp3.internal.ws.NewWebSocketRecorder.assertFailure(int,java.lang.String,java.lang.Class,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.Open", "okhttp3.internal.ws.NewWebSocketRecorder.onClosing(okhttp3.NewWebSocket,int,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.assertOpen()", "okhttp3.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,okhttp3.mockwebserver.RecordedRequest,okhttp3.mockwebserver.MockResponse).5", "okhttp3.recipes.WebSocketEcho", "okhttp3.internal.ws.RealNewWebSocket", "okhttp3.internal.ws.RealNewWebSocket.onReadMessage(okio.ByteString)", "okhttp3.internal.ws.RealNewWebSocket.connect(okhttp3.OkHttpClient).2.onFailure(okhttp3.Call,java.io.IOException)", "okhttp3.internal.ws.RealNewWebSocket.onReadClose(int,java.lang.String)", "okhttp3.internal.ws.RealNewWebSocket.ClientStreams", "okhttp3.internal.ws.NewWebSocketRecorder.Message.toString()", "okhttp3.internal.ws.RealNewWebSocket.checkResponse(okhttp3.Response)", "okhttp3.mockwebserver.MockResponse.getWebSocketListener()", "okhttp3.internal.ws.RealNewWebSocket.request()", "okhttp3.recipes.WebSocketEcho.onMessage(okhttp3.NewWebSocket,okio.ByteString)", "okhttp3.internal.ws.NewWebSocketRecorder.Message.hashCode()", "okhttp3.recipes.WebSocketEcho.onMessage(okhttp3.NewWebSocket,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.Failure.toString()", "okhttp3.internal.ws.NewWebSocketRecorder.assertPong(okio.ByteString)", "okhttp3.internal.ws.NewWebSocketRecorder.assertFailure(java.lang.Throwable)", "okhttp3.internal.ws.RealNewWebSocket.onReadPing(okio.ByteString)", "okhttp3.internal.ws.RealNewWebSocket.cancel()", "okhttp3.internal.ws.RealNewWebSocket.loopReader()", "okhttp3.OkHttpClient.newWebSocket(okhttp3.Request,okhttp3.NewWebSocket$Listener)", "okhttp3.internal.ws.NewWebSocketRecorder.assertFailure(java.lang.Class,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.onOpen(okhttp3.NewWebSocket,okhttp3.Response)", "okhttp3.internal.ws.NewWebSocketRecorder", "okhttp3.internal.ws.NewWebSocketRecorder.Ping", "okhttp3.internal.ws.RealNewWebSocket.Message", "okhttp3.internal.ws.NewWebSocketRecorder.onClosed(okhttp3.NewWebSocket,int,java.lang.String)", "okhttp3.internal.ws.NewWebSocketRecorder.Open.toString()", "okhttp3.internal.ws.RealNewWebSocket.pong(okio.ByteString)", "okhttp3.internal.ws.RealNewWebSocket.writeOneFrame()", "okhttp3.internal.ws.NewWebSocketRecorder.assertBinaryMessage(byte[])", "okhttp3.internal.ws.NewWebSocketRecorder.Closed", "okhttp3.internal.ws.NewWebSocketRecorder.Message.equals(java.lang.Object)", "okhttp3.internal.ws.RealNewWebSocket.send(okio.ByteString)", "okhttp3.internal.ws.RealNewWebSocket.connect(okhttp3.OkHttpClient).2.onResponse(okhttp3.Call,okhttp3.Response)", "okhttp3.internal.ws.NewWebSocketRecorder.setNextEventDelegate(okhttp3.NewWebSocket$Listener)", "okhttp3.RecordedResponse.cacheResponse()", "okhttp3.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,okhttp3.mockwebserver.RecordedRequest,okhttp3.mockwebserver.MockResponse)", "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadPong(okio.ByteString)", "okhttp3.internal.ws.NewWebSocketRecorder.asFrameCallback().1.onReadPing(okio.ByteString)"]}, {"title": "okhttp3.internal.http.HttpHeaders#parseChallenges does not handle authentication header with only scheme", "body": "~If you e. g. have `Proxy-Authenticate: Basic` which is a valid value, the method will not work properly, because of `int index = header.indexOf(' '); if (index == -1) continue;`, which means the method only works properly if there is a space in the header value.~ (For `Basic` auth `realm` indeed is required)\r\n\r\nThis also breaks `okhttp3.Response#challenges` and `okhttp3.JavaNetAuthenticator#authenticate`.", "url": "https://github.com/square/okhttp/issues/4249", "user": "Vampire", "labels": ["bug"], "created": "2018-09-03 09:21:01", "closed": "2018-09-11 19:39:52", "commits": {"474c23aa3035dc34eb6487ee7e2d4ba03bfb8c7a": {"commitGHEventType": "referenced", "commitUser": "yschimke"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "474c23aa3035dc34eb6487ee7e2d4ba03bfb8c7a", "commitGHEventType": "referenced", "commitUser": "yschimke", "commitParents": ["0b2486f7f32fbe21c8630f330d240546a15beb66"], "nameRev": "474c23aa3035dc34eb6487ee7e2d4ba03bfb8c7a tags/parent-3.12.0~43", "commitMessage": "Properly parse RFC 7235 authentication headers (#4249) (#4252)\n\n", "commitDateTime": "2018-09-11 20:39:51", "authoredDateTime": "2018-09-11 21:39:51", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/HeadersTest.java", "insertions": 314, "deletions": 48, "lines": 362}, {"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "okhttp/src/main/java/okhttp3/Challenge.java", "insertions": 48, "deletions": 22, "lines": 70}, {"filePath": "okhttp/src/main/java/okhttp3/Response.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpHeaders.java", "insertions": 124, "deletions": 40, "lines": 164}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Exhausting stream IDs causes an application-visible failure", "body": "Would be neater to just set RealConnection.noNewStreams when we approach the limit.", "url": "https://github.com/square/okhttp/issues/4245", "user": "swankjesse", "labels": ["bug"], "created": "2018-08-30 14:47:33", "closed": "2018-11-03 23:18:51", "commits": {}, "ttf": 65.00027777777778, "commitsDetails": []}, {"title": "route parameter of authenticate can be null but is not marked as @Nullable", "body": "Here is a test proving that `route` can be `null` (I'm using 3.11.0):\r\n\r\n```java\r\nimport org.junit.Test;\r\n\r\nimport okhttp3.Authenticator;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\nimport okhttp3.Route;\r\n\r\npublic class AuthenticatorTest {\r\n    @Test\r\n    public void routeCanBeNull() throws Exception {\r\n        Authenticator authenticator = new Authenticator() {\r\n            @Override\r\n            public Request authenticate(Route route, Response response) {\r\n                if (route == null) {\r\n                    throw new NullPointerException(\"route is null\");\r\n                }\r\n                return null;\r\n            }\r\n        };\r\n\r\n        OkHttpClient client = new OkHttpClient.Builder()\r\n                .authenticator(authenticator)\r\n                .build();\r\n\r\n        Request request = new Request.Builder()\r\n                .url(\"https://httpbin.org/status/401\")\r\n                .build();\r\n\r\n        client.newCall(request).execute(); // route is not null\r\n        client.newCall(request).execute(); // route is null\r\n    }\r\n}\r\n```\r\n\r\nI'm not sure if it is a correct behaviour. If it is actually correct I'll make a PR adding `@Nullable` to `route`.", "url": "https://github.com/square/okhttp/issues/4238", "user": "technoir42", "labels": ["bug"], "created": "2018-08-26 22:26:37", "closed": "2018-09-14 05:50:49", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "Closing responses with incomplete chunked bodies retrieved over a Unix socket takes a long time on Linux", "body": "# Description\r\nIf a response meets all of the following criteria...\r\n\r\n* it was retrieved over a Unix domain socket (using [the sample code](https://github.com/square/okhttp/tree/master/samples/unixdomainsockets))\r\n* the body is chunked (ie. has the header `Transfer-Encoding: chunked`)\r\n* the body is incomplete (ie. does not have a trailing `0\\r\\n\\r\\n` chunk), such as when streaming events from a Docker daemon with the [events API](https://docs.docker.com/engine/api/v1.37/#operation/SystemEvents)\r\n* the application is running on Linux\r\n\r\n...then calling `close()` on `Response` takes quite a long time. The amount of time seems to be related to whatever has been set with `readTimeout()` on `OkHttpClient` (ie. if the timeout is 3s, closing the response takes just over 3s, if the timeout is 20s, closing the response takes just over 20s).\r\n\r\nThis behaviour does not occur if any of the following is true:\r\n\r\n* the body is not chunked\r\n* the body is chunked but complete (ie. has a trailing `0\\r\\n\\r\\n` chunk)\r\n* the application is running on OS X\r\n\r\n# Steps to reproduce\r\nI've created [a sample application](https://github.com/charleskorn/okhttp-issue) that demonstrates this behaviour.\r\n\r\n# Expected behaviour\r\nCalling `Response.close()` takes a very short period of time (few milliseconds max).\r\n\r\n# Actual behaviour\r\nCalling `Response.close()` takes quite some time, and seems to be roughly equal to `readTimeout`.\r\n", "url": "https://github.com/square/okhttp/issues/4233", "user": "charleskorn", "labels": ["bug"], "created": "2018-08-26 04:09:33", "closed": "2020-03-29 17:37:55", "commits": {}, "ttf": 581.0002777777778, "commitsDetails": []}, {"title": "NullPointerException if default ProxySelector is null", "body": "Here the test:\r\n\r\n```java\r\nprivate final MockWebServer server = new MockWebServer();\r\n@Before public void setUp() throws Exception { server.start(); }\r\n@After public void tearDown() throws Exception { server.shutdown(); }\r\n@Test public void nullDefaultProxySelector() throws Exception {\r\n  server.enqueue(new MockResponse().setBody(\"abc\"));\r\n\r\n  ProxySelector.setDefault(null);\r\n\r\n  OkHttpClient client = defaultClient().newBuilder()\r\n      .build();\r\n\r\n  Request request = new Request.Builder().url(server.url(\"/\")).build();\r\n  Response response = client.newCall(request).execute();\r\n  assertEquals(\"abc\", response.body().string());\r\n}\r\n```\r\n\r\nAnd the result:\r\n\r\n```java\r\nAug 25, 2018 4:36:39 PM okhttp3.mockwebserver.MockWebServer$2 execute\r\nINFORMATION: MockWebServer[57774] starting to accept connections\r\nAug 25, 2018 4:36:39 PM okhttp3.mockwebserver.MockWebServer$2 acceptConnections\r\nINFORMATION: MockWebServer[57774] done accepting connections: socket closed\r\nAug 25, 2018 4:36:39 PM okhttp3.SocksProxy$1 execute\r\nINFORMATION: SocksProxy 57775 done accepting connections: socket closed\r\n\r\njava.lang.NullPointerException: proxySelector == null\r\n\r\n\tat okhttp3.Address.<init>(Address.java:79)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.createAddress(RetryAndFollowUpInterceptor.java:212)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:112)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n\tat okhttp3.RealCall.execute(RealCall.java:77)\r\n\tat okhttp3.SocksProxyTest.nullDefaultProxySelector(SocksProxyTest.java:101)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n```\r\n\r\nTo quote https://docs.oracle.com/javase/8/docs/api/java/net/ProxySelector.html#setDefault-java.net.ProxySelector-: `ps - The HTTP proxy selector, or null to unset the proxy selector.`, so `null` is an acceptable value that OkHttp should be able to cope with.", "url": "https://github.com/square/okhttp/issues/4232", "user": "Vampire", "labels": ["bug"], "created": "2018-08-25 14:40:35", "closed": "2018-08-31 05:55:10", "commits": {"e06de327e22d9302781611594037542e2fed5ea1": {"commitGHEventType": "referenced", "commitUser": "yschimke"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "e06de327e22d9302781611594037542e2fed5ea1", "commitGHEventType": "referenced", "commitUser": "yschimke", "commitParents": ["ac402ea304eec058e7894d4bb53068194c064834"], "nameRev": "e06de327e22d9302781611594037542e2fed5ea1 tags/parent-3.12.0~48", "commitMessage": "Properly handle null as system default proxy selector (#4232) (#4237)\n\n", "commitDateTime": "2018-08-31 06:55:09", "authoredDateTime": "2018-08-31 07:55:09", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/proxy/NullProxySelector.java", "insertions": 39, "deletions": 0, "lines": 39}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OkHttpClientTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClientTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClientTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClientTest.nullDefaultProxySelector()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClientTest.tearDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient.Builder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NullProxySelector.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.proxy.NullProxySelector", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "MockWebServer recordedRequest.getRequestUrl() is null on ipv6 host", "body": "1) On my linux build machine localhost is resolved to ipv6 address (`0:0:0:0:0:0:0:1`)\r\n2) `okhttp3.mockwebserver.RecordedRequest#RecordedRequest` does not handle ipv6 properly because it  uses `HttpUrl.parse(String.format(\"%s://%s:%s%s\", scheme, hostname, port, path));` - brackets are missing for ipv6. Easy fix is `HttpUrl.Builder` usage.\r\n3) Unfortunately I cannot create a reliable test class, but I use `server.start(Inet4Address.getLocalHost(), 0);` as a workaround.", "url": "https://github.com/square/okhttp/issues/4225", "user": "thevery", "labels": ["bug"], "created": "2018-08-22 10:52:02", "closed": "2018-09-03 05:56:45", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "IndexOutOfBoundsException in RealConnection", "body": "got following crash in google pixel xl device with android p using okhttp3.11\r\nFatal Exception: java.lang.IndexOutOfBoundsException: Index: 0\r\n       at java.util.Collections$EmptyList.get(Collections.java:4502)\r\n       at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:325)\r\n       at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:282)\r\n       at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:167)\r\n       at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n       at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n       at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:147)\r\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n       at java.lang.Thread.run(Thread.java:764)", "url": "https://github.com/square/okhttp/issues/4208", "user": "jaydenyuhy", "labels": ["bug"], "created": "2018-08-13 12:06:28", "closed": "2018-11-04 05:15:43", "commits": {}, "ttf": 82.00027777777778, "commitsDetails": []}, {"title": "[BUG] RuntimeException thrown in Interceptor doesn't call onFailure", "body": "What kind of issue is this?\r\n - [x] Bug report. If you\u2019ve found a bug, spend the time to write a failing test. Bugs with tests\r\n       get fixed. Here\u2019s an example: https://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n\r\nWhen RuntimeException is accidentally thrown inside `Interceptor.intercept(...)` method, the exception is not handled in `okhttp3.RealCall$AsyncCall.execute()` method. I think, the runtime exception should be encapsulated to `IOException` and `Callback.onFailure(...)` should be called.\r\n\r\nSample code in kotlin:\r\n```kotlin\r\nimport okhttp3.*\r\nimport org.junit.jupiter.api.Assertions.assertNotNull\r\nimport org.junit.jupiter.api.Assertions.fail\r\nimport org.junit.jupiter.api.Test\r\nimport java.io.IOException\r\nimport java.util.concurrent.CountDownLatch\r\nimport java.util.concurrent.TimeUnit\r\nimport java.util.concurrent.atomic.AtomicReference\r\n\r\nobject OkHttpInterceptorBugTest {\r\n    @Test\r\n    fun listenerOnFailureShouldReturnRuntimeException() {\r\n        val okHttp = OkHttpClient.Builder()\r\n                .addInterceptor {\r\n                    throw RuntimeException(\"test\")\r\n                }\r\n                .build()\r\n\r\n        val call = okHttp.newCall(Request.Builder().url(\"http://example.com/\").build())\r\n\r\n        val latch = CountDownLatch(1)\r\n        val reference = AtomicReference<Throwable>()\r\n        call.enqueue(object: Callback {\r\n            override fun onFailure(call: Call?, e: IOException?) {\r\n                reference.set(e)\r\n                latch.countDown()\r\n            }\r\n\r\n            override fun onResponse(call: Call?, response: Response?) {\r\n                latch.countDown()\r\n            }\r\n        })\r\n\r\n        val timeout = !latch.await(5, TimeUnit.SECONDS)\r\n\r\n        call.cancel()\r\n        if (timeout) fail<Unit>(\"Timeout occurs\")\r\n\r\n        assertNotNull(reference.get(), \"Throwable expected.\")\r\n    }\r\n}\r\n```\r\n\r\nStack trace:\r\n```\r\nException in thread \"OkHttp Dispatcher\" java.lang.RuntimeException: test\r\n\tat OkHttpInterceptorBugTest$listenerOnFailureShouldReturnRuntimeException$okHttp$1.intercept(OkHttpInterceptorBugTest.kt:33)\r\n\tat OkHttpInterceptorBugTest$listenerOnFailureShouldReturnRuntimeException$okHttp$1.intercept(OkHttpInterceptorBugTest.kt:11)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n\tat okhttp3.RealCall$AsyncCall.execute(RealCall.java:147)\r\n\tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\norg.opentest4j.AssertionFailedError: Timeout occurs\r\n\r\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)\r\n\tat org.junit.jupiter.api.Assertions.fail(Assertions.java:74)\r\n\tat OkHttpInterceptorBugTest.listenerOnFailureShouldReturnRuntimeException(OkHttpInterceptorBugTest.kt:55)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:515)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)\r\n\tat org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:134)\r\n\tat org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:128)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:109)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:128)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:109)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:128)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:109)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:49)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:47)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:184)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:152)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:166)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:145)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:92)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:74)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n```", "url": "https://github.com/square/okhttp/issues/4198", "user": "arcao", "labels": ["bug"], "created": "2018-08-08 17:53:21", "closed": "2018-11-04 01:49:25", "commits": {}, "ttf": 87.00027777777778, "commitsDetails": []}, {"title": "NoSuchAlgorithmException: no such algorithm: ECDSA for provider BC", "body": "Since `3.11.0` I get the following problems on Android emulators (tested in API 21 - API 28). Please note that it works on jvm on my machine perfectly fine but not on Android (emulators).\r\n\r\n```\r\n java.lang.AssertionError: java.security.NoSuchAlgorithmException: no such algorithm: ECDSA for provider BC\r\n        at okhttp3.tls.HeldCertificate$Builder.generateKeyPair(HeldCertificate.java:429)\r\n        at okhttp3.tls.HeldCertificate$Builder.build(HeldCertificate.java:353)\r\n        at com.hannesdorfmann.okhttpcertificate.MainActivity$onCreate$1.invoke(MainActivity.kt:22)\r\n```\r\n\r\nHere is a sample project showing the certificate tls problem:\r\n\r\nhttps://github.com/sockeqwe/OkHttpCertificate\r\n\r\nJust lunch the MainActivity and it produces the error stacktrace shown above.\r\n", "url": "https://github.com/square/okhttp/issues/4183", "user": "sockeqwe", "labels": ["bug"], "created": "2018-07-30 08:01:53", "closed": "2018-11-07 08:19:19", "commits": {"2c95b0437ba953459838a72133baabc386ac7721": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 100.00027777777778, "commitsDetails": [{"commitHash": "2c95b0437ba953459838a72133baabc386ac7721", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["af07e023f8d141d4a0cc165962b5f5cc997cff9c"], "nameRev": "2c95b0437ba953459838a72133baabc386ac7721 tags/parent-3.12.0~10^2", "commitMessage": "Don't specify a crypto provider in HeldCertificate.\n\nCloses: https://github.com/square/okhttp/issues/4183\n", "commitDateTime": "2018-11-06 21:48:46", "authoredDateTime": "2018-11-06 21:48:46", "commitGitStats": [{"filePath": "okhttp-tls/src/main/java/okhttp3/tls/HeldCertificate.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tls/src/test/java/okhttp3/tls/HeldCertificateTest.java", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HeldCertificate.java", "spoonMethods": [{"spoonMethodName": "okhttp3.tls.HeldCertificate.Builder.build()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.tls.HeldCertificate.Builder.generateKeyPair()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HeldCertificateTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.tls.HeldCertificateTest.defaultCertificate()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2c95b0437ba953459838a72133baabc386ac7721"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-tls/src/main/java/okhttp3/tls"], "changesInPackagesSPOON": ["okhttp3.tls.HeldCertificate.Builder.build()", "okhttp3.tls.HeldCertificate.Builder.generateKeyPair()"]}, {"title": "Exception using MockWebServer with Https on Android P", "body": "Got the following exception when running Android P with https:\r\n\r\njava.lang.VerifyError: Verifier rejected class okhttp3.internal.tls.HeldCertificate$Builder: okhttp3.internal.tls.HeldCertificate okhttp3.internal.tls.HeldCertificate$Builder.build() failed to verify: okhttp3.internal.tls.HeldCertificate okhttp3.internal.tls.HeldCertificate$Builder.build(): [0x9D] register v7 has type Reference: org.bouncycastle.asn1.ASN1ObjectIdentifier but expected Reference: org.bouncycastle.asn1.DERObjectIdentifier (declaration of 'okhttp3.internal.tls.HeldCertificate$Builder' a\r\n\r\nHere is the test code to start the MockWebServer:\r\n\r\n        MockWebServer mockWebServer = new MockWebServer();\r\n        mockWebServer.useHttps(SslClient.localhost().socketFactory, false);\r\n        mockWebServer.start();", "url": "https://github.com/square/okhttp/issues/4175", "user": "witrisna", "labels": ["bug"], "created": "2018-07-27 05:47:25", "closed": "2018-11-15 12:27:18", "commits": {"3ccc32d9a649c84584a7fa8b8b94b9fa1c619893": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "d062472253f4936c2e9aae2d858290e692295f05": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 111.00027777777778, "commitsDetails": [{"commitHash": "3ccc32d9a649c84584a7fa8b8b94b9fa1c619893", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d062472253f4936c2e9aae2d858290e692295f05", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ef34a41d09fbcc8e03c179cb9b121c918f671f88"], "nameRev": "d062472253f4936c2e9aae2d858290e692295f05 tags/parent-3.12.0~2^2", "commitMessage": "Specify \"EC\" to generate  eliptic curve keys, not ECDSA\n\nThey're the same algorithm, but on Android API 27 only \"EC\" works;\n\"ECDSA\" throws a NoSuchAlgorithmException.\n\nCloses https://github.com/square/okhttp/issues/4175\n", "commitDateTime": "2018-11-15 07:26:30", "authoredDateTime": "2018-11-14 23:20:27", "commitGitStats": [{"filePath": "okhttp-tls/src/main/java/okhttp3/tls/HeldCertificate.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HeldCertificate.java", "spoonMethods": [{"spoonMethodName": "okhttp3.tls.HeldCertificate.Builder.ecdsa256()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d062472253f4936c2e9aae2d858290e692295f05"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 1.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-tls/src/main/java/okhttp3/tls"], "changesInPackagesSPOON": ["okhttp3.tls.HeldCertificate.Builder.ecdsa256()"]}, {"title": "OOM on Android 8/9 when getting \"https://icloud.com\"", "body": "Hello,\r\n\r\nWhen trying to `GET` (or `PROPFIND`) https://icloud.com (without www) with code like that:\r\n\r\n```\r\n// compileSdkVersion 27\r\n// buildToolsVersion '28.0.1'\r\n// targetSdkVersion 27\r\n// Kotlin 1.2.51\r\n\r\nclass ClientTest {\r\n    @Test\r\n    fun testIcloud() {\r\n        val client = OkHttpClient()\r\n        client.newCall(Request.Builder()\r\n                .get()\r\n                .url(\"https://icloud.com\")\r\n                .build())\r\n                .execute()\r\n    }\r\n}\r\n```\r\n\r\nit takes a long time until the process is killed with OOM and the test fails:\r\n\r\n```\r\nAccessing hidden method Lcom/android/org/conscrypt/OpenSSLSocketImpl;->setAlpnProtocols([B)V (light greylist, reflection)\r\nBackground concurrent copying GC freed 12119(2MB) AllocSpace objects, 2(40KB) LOS objects, 53% free, 1347KB/2MB, paused 5.288ms total 13.790ms\r\nBackground concurrent copying GC freed 255556(7MB) AllocSpace objects, 0(0B) LOS objects, 3% free, 153MB/159MB, paused 160us total 1.134s\r\nWaiting for a blocking GC Alloc\r\nBackground concurrent copying GC freed 1659257(48MB) AllocSpace objects, 0(0B) LOS objects, 4% free, 143MB/149MB, paused 166us total 751.739ms\r\nWaitForGcToComplete blocked Alloc on ProfileSaver for 84.800ms\r\n    Starting a blocking GC Alloc\r\nWaiting for a blocking GC Alloc\r\nNativeAlloc concurrent copying GC freed 613455(17MB) AllocSpace objects, 0(0B) LOS objects, 3% free, 171MB/177MB, paused 715us total 800.326ms\r\nWaitForGcToComplete blocked Alloc on HeapTrim for 78.698ms\r\nStarting a blocking GC Alloc\r\nStarting a blocking GC Alloc\r\nStarting a blocking GC Alloc\r\nAlloc concurrent copying GC freed 1471248(40MB) AllocSpace objects, 11(26MB) LOS objects, 4% free, 120MB/126MB, paused 617us total 440.035ms\r\nWaiting for a blocking GC Alloc\r\nBackground concurrent copying GC freed 212754(4MB) AllocSpace objects, 1(4MB) LOS objects, 3% free, 179MB/185MB, paused 1.906ms total 414.292ms\r\nWaitForGcToComplete blocked Alloc on HeapTrim for 378.426ms\r\n    Starting a blocking GC Alloc\r\nWaiting for a blocking GC Alloc\r\nBackground concurrent copying GC freed 116(286KB) AllocSpace objects, 14(45MB) LOS objects, 3% free, 146MB/152MB, paused 759us total 705.920ms\r\nWaitForGcToComplete blocked Alloc on HeapTrim for 631.676ms\r\n    Starting a blocking GC Alloc\r\nWaiting for a blocking GC Alloc\r\n\u2026\r\n    Starting a blocking GC Alloc\r\nThrowing OutOfMemoryError \"Failed to allocate a 32 byte allocation with 16 free bytes and 16B until OOM, max allowed footprint 201326592, growth limit 201326592\" (recursive case)\r\n\"Instr: android.support.test.runner.AndroidJUnitRunner\" prio=5 tid=13 Runnable\r\n      | group=\"main\" sCount=0 dsCount=0 flags=2 obj=0x12c40a80 self=0x7377c9337400\r\n      | sysTid=9630 nice=-8 cgrp=default sched=0/0 handle=0x7377b11934f0\r\n      | state=R schedstat=( 17608058590 1326008400 7326 ) utm=1681 stm=79 core=1 HZ=100\r\n      | stack=0x7377b1090000-0x7377b1092000 stackSize=1041KB\r\n      | held mutexes= \"mutator lock\"(shared held)\r\n        at libcore.util.NativeAllocationRegistry.registerNativeAllocation(NativeAllocationRegistry.java:129)\r\n        at java.math.BigInt.makeValid(BigInt.java:48)\r\n        at java.math.BigInt.putBigEndianTwosComplement(BigInt.java:179)\r\n        at java.math.BigInteger.<init>(BigInteger.java:304)\r\n        at sun.security.util.DerInputBuffer.getBigInteger(DerInputBuffer.java:170)\r\n        at sun.security.util.DerValue.getBigInteger(DerValue.java:529)\r\n        at sun.security.x509.SerialNumber.construct(SerialNumber.java:44)\r\n        at sun.security.x509.SerialNumber.<init>(SerialNumber.java:86)\r\n        at sun.security.x509.X509CRLEntryImpl.parse(X509CRLEntryImpl.java:460)\r\n        at sun.security.x509.X509CRLEntryImpl.<init>(X509CRLEntryImpl.java:133)\r\n        at sun.security.x509.X509CRLImpl.parse(X509CRLImpl.java:1161)\r\n        at sun.security.x509.X509CRLImpl.<init>(X509CRLImpl.java:146)\r\n        at sun.security.provider.X509Factory.intern(X509Factory.java:206)\r\n        at sun.security.x509.X509CRLImpl.toImpl(X509CRLImpl.java:1235)\r\n        at sun.security.provider.certpath.AlgorithmChecker.check(AlgorithmChecker.java:396)\r\n        at sun.security.provider.certpath.DistributionPointFetcher.verifyCRL(DistributionPointFetcher.java:667)\r\n        at sun.security.provider.certpath.DistributionPointFetcher.getCRLs(DistributionPointFetcher.java:209)\r\n        at sun.security.provider.certpath.DistributionPointFetcher.getCRLs(DistributionPointFetcher.java:121)\r\n        at sun.security.provider.certpath.RevocationChecker.checkCRLs(RevocationChecker.java:552)\r\n        at sun.security.provider.certpath.RevocationChecker.checkCRLs(RevocationChecker.java:465)\r\n        at sun.security.provider.certpath.RevocationChecker.check(RevocationChecker.java:394)\r\n        at sun.security.provider.certpath.RevocationChecker.check(RevocationChecker.java:337)\r\n        at sun.security.provider.certpath.PKIXMasterCertPathValidator.validate(PKIXMasterCertPathValidator.java:125)\r\n        at sun.security.provider.certpath.PKIXCertPathValidator.validate(PKIXCertPathValidator.java:222)\r\n        at sun.security.provider.certpath.PKIXCertPathValidator.validate(PKIXCertPathValidator.java:140)\r\n        at sun.security.provider.certpath.PKIXCertPathValidator.engineValidate(PKIXCertPathValidator.java:79)\r\n        at java.security.cert.CertPathValidator.validate(CertPathValidator.java:301)\r\n        at com.android.org.conscrypt.TrustManagerImpl.verifyChain(TrustManagerImpl.java:703)\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkTrustedRecursive(TrustManagerImpl.java:539)\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkTrustedRecursive(TrustManagerImpl.java:560)\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkTrustedRecursive(TrustManagerImpl.java:605)\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:495)\r\n        at com.android.org.conscrypt.TrustManagerImpl.checkTrusted(TrustManagerImpl.java:418)\r\n        at com.android.org.conscrypt.TrustManagerImpl.getTrustedChainForServer(TrustManagerImpl.java:339)\r\n        at android.security.net.config.NetworkSecurityTrustManager.checkServerTrusted(NetworkSecurityTrustManager.java:94)\r\n        at android.security.net.config.RootTrustManager.checkServerTrusted(RootTrustManager.java:88)\r\n        at com.android.org.conscrypt.Platform.checkServerTrusted(Platform.java:208)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.verifyCertificateChain(ConscryptFileDescriptorSocket.java:404)\r\n        at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native method)\r\n        at com.android.org.conscrypt.NativeSsl.doHandshake(NativeSsl.java:375)\r\n        at com.android.org.conscrypt.ConscryptFileDescriptorSocket.startHandshake(ConscryptFileDescriptorSocket.java:224)\r\n        at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:318)\r\n        at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:282)\r\n        at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:167)\r\n        at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)\r\n        at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)\r\n        at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)\r\n        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n        at okhttp3.RealCall.execute(RealCall.java:77)\r\n        at at.bitfire.davdroid.ClientTest.testIcloud(ClientTest.kt:24)\r\n        at java.lang.reflect.Method.invoke(Native method)\r\n        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n        at org.junit.runners.Suite.runChild(Suite.java:128)\r\n        at org.junit.runners.Suite.runChild(Suite.java:27)\r\n        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n        at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n        at org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n        at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:56)\r\n        at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:384)\r\n        at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2145)\r\nWaiting for a blocking GC Alloc\r\nClamp target GC heap from 198MB to 192MB\r\n    Alloc concurrent copying GC freed 0(0B) AllocSpace objects, 0(0B) LOS objects, 0% free, 192MB/192MB, paused 179us total 576.416ms\r\n    Starting a blocking GC Alloc\r\nWaiting for a blocking GC Alloc\r\nAlloc concurrent copying GC freed 4321630(114MB) AllocSpace objects, 7(51MB) LOS objects, 19% free, 25MB/31MB, paused 147us total 245.441ms\r\nWaitForGcToComplete blocked Alloc on HeapTrim for 807.852ms\r\n    Starting a blocking GC Alloc\r\n07-16 14:23:09.335 9513-9630/at.bitfire.cloudsync I/TestRunner: failed: testIcloud(at.bitfire.davdroid.ClientTest)\r\n    ----- begin exception -----\r\n    java.lang.OutOfMemoryError: OutOfMemoryError thrown while trying to throw OutOfMemoryError; no stack trace available\r\n    ----- end exception -----\r\n07-16 14:23:09.336 9513-9630/at.bitfire.cloudsync I/TestRunner: finished: testIcloud(at.bitfire.davdroid.ClientTest)\r\n07-16 14:23:09.339 9513-9513/at.bitfire.cloudsync I/MonitoringInstr: Activities that are still in CREATED to STOPPED: 0\r\n07-16 14:23:09.340 9513-9630/at.bitfire.cloudsync I/TestRunner: run finished: 1 tests, 1 failed, 0 ignored\r\n07-16 14:23:09.494 9513-9630/at.bitfire.cloudsync I/MonitoringInstr: waitForActivitiesToComplete() took: 1ms\r\n07-16 14:23:09.494 9513-9513/at.bitfire.cloudsync I/MonitoringInstr: Activities that are still in CREATED to STOPPED: 0\r\n```\r\n\r\nThis happens with Android 8.0 and 9.0 (emulator from SDK), but not with Android 4.4 (haven't tested other versions yet).\r\n\r\nThe problem occurs with okhttp 3.10.0 and 3.11.0 (haven't tested other versions yet).\r\n\r\nEverything is working for some other URLs I have tested, including www.icloud.com. It seems to be related to parsing the certificate. When using a custom trust manager (from https://gitlab.com/bitfireAT/cert4android), it works.\r\n\r\nI don't know whether this is an okhttp problem (looks like an Android problem?), but I guess it's quite important to understand why a simple `GET` request causes the whole process to crash.", "url": "https://github.com/square/okhttp/issues/4155", "user": "rfc2822", "labels": ["bug"], "created": "2018-07-16 12:33:39", "closed": "2020-01-05 11:19:38", "commits": {}, "ttf": 537.0002777777778, "commitsDetails": []}, {"title": "RejectedExecutionException in client.dispatcher().enqueue", "body": "Hi,\r\n\r\nGetting the following exception after computer returns from sleep mode:\r\n\r\n`Exception in thread \"EventThread\" java.util.concurrent.RejectedExecutionException: Task okhttp3.RealCall$AsyncCall@17c8d3 rejected from java.util.concurrent.ThreadPoolExecutor@7822a9d2[Shutting down, pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 25]\r\n\tat java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2063)\r\n\tat java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:830)\r\n\tat java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1379)\r\n\tat okhttp3.Dispatcher.enqueue(Dispatcher.java:132)\r\n\tat okhttp3.RealCall.enqueue(RealCall.java:100)\r\n\tat okhttp3.internal.ws.RealWebSocket.connect(RealWebSocket.java:192)\r\n\tat okhttp3.OkHttpClient.newWebSocket(OkHttpClient.java:438)`\r\n\r\nAny ideas?\r\nMuch obliged.", "url": "https://github.com/square/okhttp/issues/4152", "user": "mstrelex", "labels": ["bug"], "created": "2018-07-14 11:04:10", "closed": "2018-11-04 05:12:44", "commits": {}, "ttf": 112.00027777777778, "commitsDetails": []}, {"title": "Infinite retry on FileNotFoundException in okhttp 3.6.0", "body": "I am getting infinte retries in okhttp on FileNotFoundException.\r\n\r\nTrace:\r\n1. In CallServerInterceptor's intercept(Chain chain), `request.body().writeTo(bufferedRequestBody);` is throwing FileNotFoundException.\r\n2. Proceeding with interceptors in the chain, the above FileNotFoundException gets caught in RetryAndFollowUpInterceptor.\r\n3. In RetryAndFollowUpInterceptor's intercept(Chain chain), `recover(e, requestSendStarted, request)` gives true. So the condition `if (!recover(e, requestSendStarted, request))` fails and the while loop continues forever.\r\n\r\nThis is causing infinite number of retries in case of FileNotFoundException.", "url": "https://github.com/square/okhttp/issues/4135", "user": "deepanshu-hike", "labels": ["bug"], "created": "2018-07-10 14:21:12", "closed": "2018-07-14 07:25:48", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Request cancellation requires consuming remaining bytes for HTTP/2 connections", "body": "To be filled in next week\r\n\r\n> We're not reading the full response body in the test app (i'm just using exoplayer and the OKHttp extension for it).\r\n> \r\n> I modified the test in question to stop discarding the bytes on cancel and it fails with the exact error we're seeing in our application:\r\n\r\nSplit off https://github.com/square/okhttp/issues/3915\r\n\r\ncc @natez0r @dave-r12 \r\n", "url": "https://github.com/square/okhttp/issues/4126", "user": "yschimke", "labels": ["bug"], "created": "2018-07-07 12:21:57", "closed": "2018-11-04 05:08:31", "commits": {}, "ttf": 119.00027777777778, "commitsDetails": []}, {"title": "UNIX domain sockets should close gracefully", "body": "Currently there's an exception.\r\n\r\n```\r\njava.io.IOException: accept failed: Software caused connection abort\r\n\tat jnr.unixsocket.UnixServerSocketChannel.accept(UnixServerSocketChannel.java:61)\r\n\tat okhttp3.unixdomainsockets.UnixDomainServerSocketFactory$UnixDomainServerSocket.accept(UnixDomainServerSocketFactory.java:85)\r\n\tat okhttp3.mockwebserver.MockWebServer$2.acceptConnections(MockWebServer.java:359)\r\n\tat okhttp3.mockwebserver.MockWebServer$2.execute(MockWebServer.java:336)\r\n\tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/4106", "user": "swankjesse", "labels": ["bug"], "created": "2018-06-30 13:22:52", "closed": "2019-02-19 03:14:57", "commits": {}, "ttf": 233.00027777777777, "commitsDetails": []}, {"title": "Event \"callEnd\" not called if an Interceptor is added", "body": "Given the \"Events\" isn't finalized on version 3.10.0, I hesitated to report that issue as a bug.\r\n\r\nIssue : Event \"callEnd\" isn't called if an Interceptor (Network or not) is added.\r\n\r\nSteps to reproduce\r\n- Instantiate an HttpClient with an EventListenerFactory (logging all events)\r\n- Perform a dummy but successful GET request\r\n- Check that all events are triggered, especially \"callEnd\"\r\n\r\n- Instantiate an HttpClient with an EventListenerFactory (logging all events) & an interceptor such as HttpLoggingInterceptor\r\n- Perform a dummy but successful GET request\r\n- Check that all events except \"callEnd\" are triggered (not verified for callFailed)\r\n", "url": "https://github.com/square/okhttp/issues/4094", "user": "dechanaud", "labels": ["bug"], "created": "2018-06-26 12:24:09", "closed": "2018-07-06 05:28:02", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Analytics events are not emited when a response payload has no payload", "body": "I have identified an issue in the code of the event listener, I described the faulty behavior in this\r\nhttps://github.com/square/okhttp/issues/270#issuecomment-371464079, since it is not related to the API introduced via #270, I'm creating a new issue as suggested by this comment https://github.com/square/okhttp/issues/270#issuecomment-397993363\r\n\r\n\r\nHere's a verbatim of the mentioned comment :\r\n\r\n> I was playing around this class to expose some metrics for prometheus, and I noticed that `callEnd` event was not sent for `DELETE` calls. In subsequent tests I found out this problem is occurring only when the response has no body e.g. for 204 statuses. I looked at the code and found out some commented tests, like this one \r\n> \r\n> https://github.com/square/okhttp/blob/d0418379a7c7a0c92781e4f5f75260d28a0b0145/okhttp-tests/src/test/java/okhttp3/EventListenerTest.java#L881-L899\r\n> \r\n> I'm sure this is gonna be fixed in the next release(s) of okhttp. As a workaround, I think my only option at this is to place the metrics reporting in the `connectionReleased` event at this time. I don't think there's anything else, isn't it ?\r\n> \r\n> _In my case I know there won't be multiple connections_\r\n\r\n", "url": "https://github.com/square/okhttp/issues/4085", "user": "bric3", "labels": ["bug"], "created": "2018-06-21 12:13:29", "closed": "2018-09-23 07:12:55", "commits": {}, "ttf": 93.00027777777778, "commitsDetails": []}, {"title": "Must-revalidate does not revalidate", "body": "I have an i ssue where OkHttp does not revalidate requests. (3.10.0)\r\nIf the cache-control says \"must-revalidate\", the request should be revalidated.\r\n\r\nIn that case, the `CacheStrategy` should return a not null network request:\r\n\r\n```kotlin\r\n@Test\r\nfun shouldRevalidate() {\r\n  val nowMillis = 1527845183942 // =Fri Jun 01 2018 09:26:23\r\n  val request = Request.Builder()\r\n      .method(\"GET\", null)\r\n      .url(\"https://my.url.com/v1/item/d002fbef-7061-4d92-9958-7b128cf85855\")\r\n      .build()\r\n\r\n  val handshake = Handshake.get(\r\n      TlsVersion.TLS_1_2,\r\n      CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, emptyList(), emptyList()\r\n  )\r\n  val cacheCandidate = Response.Builder()\r\n      .code(200)\r\n      .addHeader(\"date\", \"Fri, 01 Jun 2018 07:45:40 GMT\")\r\n      .addHeader(\"cache-control\", \"private, must-revalidate\")\r\n      .addHeader(\"last-modified\", \"Thu, 31 May 2018 08:04:53 GMT\")\r\n      .sentRequestAtMillis(1527839142145) //=Fri Jun 01 2018 07:45:42\r\n      .receivedResponseAtMillis(1527839142295)  //=Fri Jun 01 2018 07:45:42 \r\n      .request(request)\r\n      .protocol(Protocol.HTTP_1_1)\r\n      .handshake(handshake)\r\n      .message(\"\")\r\n      .build()\r\n\r\n  val cacheStrategy = CacheStrategy.Factory(nowMillis, request, cacheCandidate)\r\n      .get()\r\n  assertThat(cacheStrategy.networkRequest).isNotNull()\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/4043", "user": "PaulWoitaschek", "labels": ["bug", "tests"], "created": "2018-06-01 09:59:53", "closed": "2018-07-10 11:53:32", "commits": {}, "ttf": 39.000277777777775, "commitsDetails": []}, {"title": "Google security provider (ProviderInstaller) is flaky when calls are canceled", "body": "Used combination OkHttp (3.10.0), RxJava (2.1.4) and Retrofit (2.3.0) libs. \r\n\r\nThe issue reproducible on devices Samsung Galaxy A8(OS 7.1.1), Galaxy S8(OS 8.1), Galaxy S7(OS 7.0), Galaxy S5(OS 4.4.4).\r\n\r\nUse case:\r\n1) user opens screen with few tabs.  comment: here a bunch of requests sent\r\n2) quickly switches to any other tab. comment: all requests needed for previous tab disposed (cancelled in terms of OhHttp)\r\n3) screen contains few independent parts on UI (based on server's responses) and usually one of them loading too long\r\n\r\nIn logs I see that required requests are sent only after \"java.net.SocketTimeoutException: timeout\" printed and for our application it's 30 seconds.\r\n\r\nStacktrace below is for catch block okhttp3.RealCall.execute(okhttp3.RealCall:81)\r\n\r\n 0 = {StackTraceElement@8913} \"com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream.read(:com.google.android.gms@12685025@12.6.85 (040408-197041431):8)\"\r\n 1 = {StackTraceElement@8914} \"okio.Okio$2.read(Okio.java:140)\"\r\n 2 = {StackTraceElement@8915} \"okio.AsyncTimeout$2.read(AsyncTimeout.java:237)\"\r\n 3 = {StackTraceElement@8916} \"okio.RealBufferedSource.indexOf(RealBufferedSource.java:355)\"\r\n 4 = {StackTraceElement@8917} \"okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:227)\"\r\n 5 = {StackTraceElement@8918} \"okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:215)\"\r\n 6 = {StackTraceElement@8919} \"okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)\"\r\n 7 = {StackTraceElement@8920} \"okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88)\"\r\n 8 = {StackTraceElement@8921} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\"\r\n 9 = {StackTraceElement@8922} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\"\r\n 10 = {StackTraceElement@8923} \"ru.beeline.tve.android.utils.network.HttpClientBuilderFactory$BasicInterceptor.intercept(HttpClientBuilderFactory.java:64)\"\r\n 11 = {StackTraceElement@8924} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\"\r\n 12 = {StackTraceElement@8925} \"okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\"\r\n 13 = {StackTraceElement@8926} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\"\r\n 14 = {StackTraceElement@8927} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\"\r\n 15 = {StackTraceElement@8928} \"okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\"\r\n 16 = {StackTraceElement@8929} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\"\r\n 17 = {StackTraceElement@8930} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\"\r\n 18 = {StackTraceElement@8931} \"okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\"\r\n 19 = {StackTraceElement@8932} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\"\r\n 20 = {StackTraceElement@8933} \"okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)\"\r\n 21 = {StackTraceElement@8934} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\"\r\n 22 = {StackTraceElement@8935} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\"\r\n 23 = {StackTraceElement@8936} \"ru.beeline.tve.android.utils.network.HttpClientBuilderFactory$ConnectivityInterceptor.intercept(HttpClientBuilderFactory.java:83)\"\r\n 24 = {StackTraceElement@8937} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\"\r\n 25 = {StackTraceElement@8938} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\"\r\n 26 = {StackTraceElement@8939} \"okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:213)\"\r\n 27 = {StackTraceElement@8940} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\"\r\n 28 = {StackTraceElement@8941} \"okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\"\r\n 29 = {StackTraceElement@8942} \"okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\"\r\n 30 = {StackTraceElement@8943} \"okhttp3.RealCall.execute(RealCall.java:77)\"\r\n 31 = {StackTraceElement@8944} \"retrofit2.OkHttpCall.execute(OkHttpCall.java:180)\"\r\n 32 = {StackTraceElement@8945} \"retrofit2.adapter.rxjava2.CallExecuteObservable.subscribeActual(CallExecuteObservable.java:41)\"\r\n 33 = {StackTraceElement@8946} \"io.reactivex.Observable.subscribe(Observable.java:10903)\"\r\n 34 = {StackTraceElement@8947} \"retrofit2.adapter.rxjava2.BodyObservable.subscribeActual(BodyObservable.java:34)\"\r\n 35 = {StackTraceElement@8948} \"io.reactivex.Observable.subscribe(Observable.java:10903)\"\r\n 36 = {StackTraceElement@8949} \"io.reactivex.internal.operators.observable.ObservableSingleSingle.subscribeActual(ObservableSingleSingle.java:35)\"\r\n 37 = {StackTraceElement@8950} \"io.reactivex.Single.subscribe(Single.java:2707)\"\r\n 38 = {StackTraceElement@8951} \"io.reactivex.internal.operators.single.SingleFlatMap.subscribeActual(SingleFlatMap.java:36)\"\r\n 39 = {StackTraceElement@8952} \"io.reactivex.Single.subscribe(Single.java:2707)\"\r\n 40 = {StackTraceElement@8953} \"io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback.onSuccess(SingleFlatMap.java:84)\"\r\n 41 = {StackTraceElement@8954} \"io.reactivex.internal.operators.single.SingleCreate$Emitter.onSuccess(SingleCreate.java:68)\"\r\n 42 = {StackTraceElement@8955} \"ru.beeline.tve.android.domain.service.ApiService.lambda$getToken$16$ApiService(ApiService.java:596)\"\r\n 43 = {StackTraceElement@8956} \"ru.beeline.tve.android.domain.service.ApiService$$Lambda$15.subscribe(Unknown Source)\"\r\n 44 = {StackTraceElement@8957} \"io.reactivex.internal.operators.single.SingleCreate.subscribeActual(SingleCreate.java:39)\"\r\n 45 = {StackTraceElement@8958} \"io.reactivex.Single.subscribe(Single.java:2707)\"\r\n 46 = {StackTraceElement@8959} \"io.reactivex.internal.operators.single.SingleFlatMap.subscribeActual(SingleFlatMap.java:36)\"\r\n 47 = {StackTraceElement@8960} \"io.reactivex.Single.subscribe(Single.java:2707)\"\r\n 48 = {StackTraceElement@8961} \"io.reactivex.internal.operators.single.SingleToFlowable.subscribeActual(SingleToFlowable.java:37)\"\r\n 49 = {StackTraceElement@8962} \"io.reactivex.Flowable.subscribe(Flowable.java:12995)\"\r\n 50 = {StackTraceElement@8963} \"io.reactivex.Flowable.subscribe(Flowable.java:12941)\"\r\n 51 = {StackTraceElement@8964} \"io.reactivex.internal.operators.flowable.FlowableRepeatWhen$WhenReceiver.onNext(FlowableRepeatWhen.java:101)\"\r\n 52 = {StackTraceElement@8965} \"io.reactivex.internal.operators.flowable.FlowableRetryWhen.subscribeActual(FlowableRetryWhen.java:62)\"\r\n 53 = {StackTraceElement@8966} \"io.reactivex.Flowable.subscribe(Flowable.java:12995)\"\r\n 54 = {StackTraceElement@8967} \"io.reactivex.internal.operators.flowable.FlowableSingleSingle.subscribeActual(FlowableSingleSingle.java:39)\"\r\n 55 = {StackTraceElement@8968} \"io.reactivex.Single.subscribe(Single.java:2707)\"\r\n 56 = {StackTraceElement@8969} \"io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback.onSuccess(SingleFlatMap.java:84)\"\r\n 57 = {StackTraceElement@8970} \"io.reactivex.internal.operators.single.SingleCreate$Emitter.onSuccess(SingleCreate.java:68)\"\r\n 58 = {StackTraceElement@8971} \"ru.beeline.tve.android.domain.service.ApiService.lambda$getKalturaSevice$13$ApiService(ApiService.java:507)\"\r\n 59 = {StackTraceElement@8972} \"ru.beeline.tve.android.domain.service.ApiService$$Lambda$12.subscribe(Unknown Source)\"\r\n 60 = {StackTraceElement@8973} \"io.reactivex.internal.operators.single.SingleCreate.subscribeActual(SingleCreate.java:39)\"\r\n 61 = {StackTraceElement@8974} \"io.reactivex.Single.subscribe(Single.java:2707)\"\r\n 62 = {StackTraceElement@8975} \"io.reactivex.internal.operators.single.SingleFlatMap.subscribeActual(SingleFlatMap.java:36)\"\r\n 63 = {StackTraceElement@8976} \"io.reactivex.Single.subscribe(Single.java:2707)\"\r\n 64 = {StackTraceElement@8977} \"io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run(SingleSubscribeOn.java:89)\"\r\n 65 = {StackTraceElement@8978} \"io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:452)\"\r\n 66 = {StackTraceElement@8979} \"io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:61)\"\r\n 67 = {StackTraceElement@8980} \"io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:52)\"\r\n 68 = {StackTraceElement@8981} \"java.util.concurrent.FutureTask.run(FutureTask.java:237)\"\r\n 69 = {StackTraceElement@8982} \"java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:272)\"\r\n 70 = {StackTraceElement@8983} \"java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\"\r\n 71 = {StackTraceElement@8984} \"java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\"\r\n 72 = {StackTraceElement@8985} \"java.lang.Thread.run(Thread.java:762)\"\r\n \r\nNote: In our application we turn on ProviderInstaller.installIfNeeded to enable TLS1.2 on Android 4.4 (and following Google documentation improve connection security https://developer.android.com/training/articles/security-gms-provider) and after removing this action issue disappeared. First line in stack trace (\"com.google.android.gms.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream.read(:com.google.android.gms@12685025@12.6.85 (040408-197041431):8)\") is consequence of this usage.\r\n \r\n Here is a test project to reproduce it: https://github.com/aliaksandr-sheiko89/OkHttpIssue\r\n NOTE: sometimes it needs few attempt to reproduce.", "url": "https://github.com/square/okhttp/issues/4037", "user": "aliaksandr-sheiko89", "labels": ["bug"], "created": "2018-05-29 13:49:11", "closed": "2020-03-29 18:28:32", "commits": {}, "ttf": 670.0002777777778, "commitsDetails": []}, {"title": "When the request is cancelled frequently, it will cause SocketTimeoutException", "body": "version 3.10.0\r\n\r\ndemo: https://github.com/Caij/OkHttpDownDemo", "url": "https://github.com/square/okhttp/issues/4025", "user": "Caij", "labels": ["bug"], "created": "2018-05-25 01:57:50", "closed": "2018-07-05 00:43:20", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "Websocket closes connection with EOF exception on \"Switching Protocols\" code 101", "body": "OKHttp3 version 3.10. Android application\r\nAfter a successful connection and a short period of inactivity, the OKHttp3 websocket throws a EOFException in response to a code 101, \"Switching Protocols\" response. This then disconnects the socket and our application is forced to re-connect again.\r\nIs there anyway to control this so the socket does not close ? \r\nIs this expected behavior?\r\nOur iOS and server side tests against the same server did not show this behaivor and remained connected until the applications disconnected them explicitely.\r\n\r\nRealWebsocket class:\r\n\r\npublic void connect(OkHttpClient client) { ...\r\n\r\n               try {\r\n                    RealWebSocket.this.listener.onOpen(RealWebSocket.this, response);\r\n                    String name = \"OkHttp WebSocket \" + request.url().redact();\r\n                    RealWebSocket.this.initReaderAndWriter(name, streams);\r\n                    streamAllocation.connection().socket().setSoTimeout(0);\r\n                    RealWebSocket.this.loopReader();\r\n                } catch (Exception var6) {\r\n                    RealWebSocket.this.failWebSocket(var6, (Response)null);\r\n                }\r\n(Response return code 101)\r\n", "url": "https://github.com/square/okhttp/issues/4012", "user": "dinzdale", "labels": ["bug", "needs info"], "created": "2018-05-18 15:17:23", "closed": "2018-07-13 12:29:43", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "The header of response has Chinese , and crash by IllegalArgumentException", "body": "I'm download file , but the header of response has Chinese, and crash by IllegalArgumentException;\r\nThe detail like this:\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): FATAL EXCEPTION: OkHttp Dispatcher\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): Process: com.linkin.launchery, PID: 861\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): java.lang.IllegalArgumentException: Unexpected char 0x6c99 at 22 in header value: attachment; filename=\"\u6c99\u53d1\u7ba1\u5bb6_v4.8.5_xunma01.apk\"\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.Headers$Builder.checkNameAndValue(Headers.java:295)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.Headers$Builder.add(Headers.java:245)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.internal.http.Http2xStream.readHttp2HeadersList(Http2xStream.java:264)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.internal.http.Http2xStream.readResponseHeaders(Http2xStream.java:150)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:737)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.internal.http.HttpEngine.access$200(HttpEngine.java:87)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:722)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:576)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.Call.getResponse(Call.java:287)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:243)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:205)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.Call.access$100(Call.java:35)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.Call$AsyncCall.execute(Call.java:171)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n\r\n05-16 16:42:15.406 E/AndroidRuntime(  861): \tat java.lang.Thread.run(Thread.java:818)\r\n\r\nHow can I handle ?\r\n", "url": "https://github.com/square/okhttp/issues/4008", "user": "KingPeng", "labels": ["bug"], "created": "2018-05-17 02:23:42", "closed": "2018-09-29 14:50:44", "commits": {}, "ttf": 135.00027777777777, "commitsDetails": []}, {"title": "MockWebServer throttleBody delay does not work as expected", "body": "I'm having trouble figuring out how to use the `throttleBody` function of the MockWebServer, specifically the delay feature. I'm not sure if im using the function correctly, but everytime i try an run this test, the assertion fails:\r\n```\r\n    @Test fun validateMockServer() {\r\n        val client = OkHttpClient.Builder().build()\r\n        val server = MockWebServer()\r\n        server.start()\r\n        val baseUrl = server.url(\"\")\r\n\r\n        val delayMS = 200L\r\n        val byteSpeed = 1_000_000_000L\r\n\r\n        val originalString = \"a\".repeat(400_000)\r\n\r\n        server.enqueue(MockResponse()\r\n                .setHeadersDelay(delayMS, TimeUnit.MILLISECONDS)\r\n                .throttleBody(byteSpeed, delayMS, TimeUnit.MILLISECONDS)\r\n                .setBody(originalString))\r\n\r\n        val start = System.currentTimeMillis()\r\n        val call = client.newCall(Request.Builder().get().url(baseUrl).build())\r\n        val body = call.execute().body()!!\r\n        val string = body.string()\r\n        val time = System.currentTimeMillis() - start\r\n        server.shutdown()\r\n        assert(time > delayMS)\r\n    }\r\n```\r\nam i doing something wrong?\r\nThe delayMS should never be larger than the time it took to execute the request", "url": "https://github.com/square/okhttp/issues/4006", "user": "thebehera", "labels": ["bug", "tests"], "created": "2018-05-16 17:06:25", "closed": "2018-07-05 00:46:23", "commits": {}, "ttf": 49.000277777777775, "commitsDetails": []}, {"title": "NPE Crash At java.net.Proxy.type()", "body": "okhttp3 Version: 3.10.0\r\nDevice/Android Version: \r\nvivo 1719;Android 7.1.2,level 25\r\nRedmi Note 3;Android 8.1.0,level 27\r\nSM-G570Y;Android 7.0,level 24\r\n\r\nCrash Report:\r\n```\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'java.net.Proxy$Type java.net.Proxy.type()' on a null object reference \r\nokhttp3.internal.http.RetryAndFollowUpInterceptor.okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route)(SourceFile:282) \r\nokhttp3.internal.http.RetryAndFollowUpInterceptor.okhttp3.Response intercept(okhttp3.Interceptor$Chain)(SourceFile:158) \r\nokhttp3.internal.http.RealInterceptorChain.okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)(SourceFile:147) \r\nokhttp3.internal.http.RealInterceptorChain.okhttp3.Response proceed(okhttp3.Request)(SourceFile:121) \r\nokhttp3.RealCall.okhttp3.Response getResponseWithInterceptorChain()(SourceFile:200) \r\nokhttp3.RealCall$AsyncCall.void execute()(SourceFile:147) \r\nokhttp3.internal.NamedRunnable.void run()(SourceFile:32) \r\njava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) \r\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) \r\njava.lang.Thread.run(Thread.java:818) \r\n```\r\n\r\nthe case almost is same like #3809,but I wonder why it returns null Proxy(eg below code shown) and  how do solve it?\r\ncode fo resulting in crash.\r\n```\r\nprivate Request followUpRequest(Response userResponse, Route route) throws IOException {\r\n    .............\r\n    switch (responseCode) {\r\n      case HTTP_PROXY_AUTH:\r\n        Proxy selectedProxy = route != null\r\n            ? route.proxy()\r\n            : client.proxy();\r\n        if (selectedProxy.type() != Proxy.Type.HTTP) {\r\n          throw new ProtocolException(\"Received HTTP_PROXY_AUTH (407) code while not using proxy\");\r\n        }\r\n        return client.proxyAuthenticator().authenticate(route, userResponse);\r\n      ........\r\n}\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/3995", "user": "scau-beyondboy", "labels": ["bug"], "created": "2018-05-11 07:03:45", "closed": "2019-02-18 03:20:10", "commits": {}, "ttf": 282.0002777777778, "commitsDetails": []}, {"title": "Unexpected TLS version: NONE", "body": "These days so many crashes happened in our app. About 200+ Android devices has happened. And it's always happend on Andorid 8.1.0. The OkHttp's version I used is 3.10.0.\r\n\r\nThis is the crash's stack information\r\n```\r\n0 java.lang.IllegalArgumentException: Unexpected TLS version: NONE\r\n1\u00a0okhttp3.TlsVersion.forJavaName(TlsVersion.java:46)\r\n2\u00a0okhttp3.Handshake.get(Handshake.java:55)\r\n3\u00a0okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:242)\r\n4\u00a0okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:198)\r\n5\u00a0okhttp3.internal.connection.RealConnection.buildConnection(RealConnection.java:174)\r\n6\u00a0okhttp3.internal.connection.RealConnection.connect(RealConnection.java:114)\r\n7\u00a0okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:193)\r\n8\u00a0okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:129)\r\n9\u00a0okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:98)\r\n10\u00a0okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n11\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n12\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n13\u00a0okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:109)\r\n14\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n15\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n16\u00a0okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n17\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n18\u00a0okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:124)\r\n19\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n20\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n21\u00a0com.weidian.lib.imagehunter.glidehunter.okhttp3.OkHttpUrlLoader$Factory$1.intercept(OkHttpUrlLoader.java:63)\r\n22\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n23\u00a0okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n24\u00a0okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:170)\r\n25\u00a0okhttp3.RealCall.access$100(RealCall.java:33)\r\n26\u00a0okhttp3.RealCall$AsyncCall.execute(RealCall.java:120)\r\n27\u00a0okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n28\u00a0java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n29\u00a0java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n30\u00a0java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\nI found that OkHttp will not callback when java.lang.IllegalArgumentException happend.\r\nThis exception is thrown by **TlsVersion.forJavaName** method\r\n\r\n```\r\npublic static TlsVersion forJavaName(String javaName) {\r\n  switch (javaName) {\r\n    case \"TLSv1.3\":\r\n      return TLS_1_3;\r\n    case \"TLSv1.2\":\r\n      return TLS_1_2;\r\n    case \"TLSv1.1\":\r\n      return TLS_1_1;\r\n    case \"TLSv1\":\r\n      return TLS_1_0;\r\n    case \"SSLv3\":\r\n      return SSL_3_0;\r\n  }\r\n  throw new IllegalArgumentException(\"Unexpected TLS version: \" + javaName);\r\n}\r\n```\r\n\r\nWhen invoke call's enqueue method to get result async, if this exception happened, it will not callback onFailure method. And also I can't catch it.\r\n\r\n```\r\nclient.newCall(request).enqueue(new Callback() {\r\n    @Override\r\n    public void onFailure(Call call, IOException e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(Call call, Response response) throws IOException {\r\n\r\n    }\r\n});\r\n```\r\n\r\n```\r\nfinal class AsyncCall extends NamedRunnable {\r\n  private final Callback responseCallback;\r\n\r\n  @Override protected void execute() {\r\n    boolean signalledCallback = false;\r\n    try {\r\n      Response response = getResponseWithInterceptorChain();\r\n      if (retryAndFollowUpInterceptor.isCanceled()) {\r\n        signalledCallback = true;\r\n        responseCallback.onFailure(RealCall.this, new IOException(\"Canceled\"));\r\n      } else {\r\n        signalledCallback = true;\r\n        responseCallback.onResponse(RealCall.this, response);\r\n      }\r\n    } catch (IOException e) {\r\n      //only IOException will catch and callback onFailure method\r\n      if (signalledCallback) {\r\n        // Do not signal the callback twice!\r\n        Platform.get().log(INFO, \"Callback failure for \" + toLoggableString(), e);\r\n      } else {\r\n        responseCallback.onFailure(RealCall.this, e);\r\n      }\r\n    } finally {\r\n      client.dispatcher().finished(this);\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIs there any solution? Thank you.", "url": "https://github.com/square/okhttp/issues/3973", "user": "lizhangqu", "labels": ["bug"], "created": "2018-04-19 08:09:37", "closed": "2018-07-06 05:29:20", "commits": {}, "ttf": 77.00027777777778, "commitsDetails": []}, {"title": "body delay & headers delay do not work", "body": "Body delay works for http2 responses only. When used with plain http responses, `setBodyDelay` acts as one expect `setHeadersDelay` to act (and  `setHeadersDelay` appears to do nothing).\r\n\r\nThe following code hangs and times out:\r\n\r\n````java\r\n@Test(timeout = 5000)\r\npublic void bodyDelayDoesNotWork() throws Exception {\r\n  MockWebServer server = new MockWebServer();\r\n\r\n  server.enqueue(new MockResponse()\r\n    .setBodyDelay(1, TimeUnit.DAYS)\r\n    .setResponseCode(200)\r\n    .setBody(\"Nop\"));\r\n\r\n  HttpURLConnection conn = (HttpURLConnection) server.url(\"/\").url().openConnection();\r\n  conn.setDoInput(false);\r\n  conn.setDoOutput(false);\r\n  conn.setRequestMethod(\"HEAD\");\r\n  conn.connect();\r\n  Assert.assertEquals(200, conn.getResponseCode());\r\n}\r\n````\r\n\r\nBut if you replace `.setBodyDelay(1, TimeUnit.DAYS)` with `.throttleBody(1, 1, TimeUnit.MINUTES)`, the test passes.", "url": "https://github.com/square/okhttp/issues/3970", "user": "Alexander--", "labels": ["bug"], "created": "2018-04-15 17:40:53", "closed": "2018-07-06 05:29:32", "commits": {}, "ttf": 81.00027777777778, "commitsDetails": []}, {"title": "Okhttp clears the Thread interrupt status", "body": "We have a problem in our project due to Okhttp consuming the interrupted flag of the thread. #3107 describes the problem perfectly. The reply suggests that the thrown `InterruptedIOException` should be enough handle the case. It isn't because it is rethrown in two cases: when a timeout is reached and when the thread was actually interrupted. We have no way to actually find out whether my thread got interrupted while it was doing work in Okhttp or it is just a network problem. The only solution is to parse the error message, which is obviously very wonky. This applies to both `waitUntilNotified` and `throwIfReached` in `Timeout`.\r\n\r\n**There should be a way to tell thread interruption apart from network problems**. I suggest changing `InterruptedIOException` to `InterruptedException` when the thread is interrupted, as this will actually make the code conform to the **interruption handling conventions which are currently violated as `InterruptedIOException` is not an `InterruptedException`**, it is an `IOException`. In the case if this is considered a breaking change, I suggest creating a subclass of the `InterruptedIOException` and throwing that instead on thread interruption.", "url": "https://github.com/square/okhttp/issues/3945", "user": "DrMetallius", "labels": ["bug"], "created": "2018-03-28 15:04:48", "closed": "2018-07-06 02:58:30", "commits": {"61bf8dbb07d1c8e2d3fa4ac3dbf75ac84bb21ba2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "aac684aeae32ff18e443799a3ccff6de9d68a684": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 99.00027777777778, "commitsDetails": [{"commitHash": "61bf8dbb07d1c8e2d3fa4ac3dbf75ac84bb21ba2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "aac684aeae32ff18e443799a3ccff6de9d68a684", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["bdbe2dad8806a77bf018b87f4518df250fa67f89"], "nameRev": "aac684aeae32ff18e443799a3ccff6de9d68a684 tags/parent-3.11.0~19^2", "commitMessage": "Retain interrupted state when throwing InterruptedIOException\n\nThe drawbacks seem small; the callsite needs to handle interruption anyway\nbecause the thread is prone to interruption.\n\nAnd the upside is that a single interrupt should now be sufficient to break\nout an in-flight OkHttp call.\n\nNote that although we're fixing this, thread interruption is not well tested\nin OkHttp. Most users should prefer Call.cancel(), which is well tested and\ndoesn't rely on the caller to know which threads OkHttp is using to make\nthe actual HTTP request.\n\nCloses: https://github.com/square/okhttp/issues/3945\n", "commitDateTime": "2018-07-05 22:37:24", "authoredDateTime": "2018-07-05 22:22:19", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "mockwebserver/src/test/java/okhttp3/mockwebserver/CustomDispatcherTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/okhttp3/DispatcherTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "okhttp-tests/src/test/java/okhttp3/InterceptorTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/okhttp3/TestLogHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/okhttp3/TestUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 28, "deletions": 30, "lines": 58}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http/ThreadInterruptTest.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/MockHttp2Peer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java", "insertions": 25, "deletions": 25, "lines": 50}, {"filePath": "okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "okhttp/src/main/java/okhttp3/internal/publicsuffix/PublicSuffixDatabase.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "samples/slack/src/main/java/okhttp3/slack/OAuthSessionFactory.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,okhttp3.mockwebserver.RecordedRequest,okhttp3.mockwebserver.MockResponse)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.throttledTransfer(okhttp3.mockwebserver.MockResponse,java.net.Socket,okio.BufferedSource,okio.BufferedSink,long,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.Http2SocketHandler.onStream(okhttp3.internal.http2.Http2Stream)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CustomDispatcherTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.CustomDispatcherTest.simpleDispatch().1.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockWebServerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServerTest.disconnectRequestHalfway()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DispatcherTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.DispatcherTest.idleCallbackInvokedWhenIdle()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.DispatcherTest.RecordingExecutor.awaitTermination(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "InterceptorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.InterceptorTest.ExceptionCatchingExecutor.takeException()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestLogHandler.java", "spoonMethods": [{"spoonMethodName": "okhttp3.TestLogHandler.take()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestUtil.java", "spoonMethods": [{"spoonMethodName": "okhttp3.TestUtil.awaitGarbageCollection()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.requestHeaders()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.responseHeaders()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.connectViaHttpsToUntrustedServer()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.proxyConnectIncludesProxyHeadersOnly()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.gzipEncodingEnabledByDefault()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.setChunkedStreamingMode()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.redirectedOnHttps()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.notRedirectedFromHttpsToHttp()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.notRedirectedFromHttpToHttps()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.setChunkedEncodingAsRequestProperty()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.connectionCloseInRequest()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.connectionCloseInResponse()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.connectionCloseWithRedirect()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.responseCodeDisagreesWithHeaders()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.zeroLengthPost()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.zeroLengthPut()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.zeroLengthPayload(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.setUp()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.getRequestPropertyReturnsLastValue()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.serverSendsInvalidResponseHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.serverSendsInvalidCodeTooLarge()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.serverSendsInvalidCodeNotANumber()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.serverSendsUnnecessaryWhitespace()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.initResponseCache()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.http10SelectedProtocol()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.http11SelectedProtocol()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.setProtocolsWithoutHttp11()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.setProtocolsWithNull()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ThreadInterruptTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.ThreadInterruptTest.interruptLater(int).3.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.ThreadInterruptTest.interruptWritingRequestBody()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.ThreadInterruptTest.interruptReadingResponseBody()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.awaitWatchdogIdle()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.RecordingPushObserver.takeEvent()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.callAndCancel(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.recoverFromConnectionNoNewStreamsOnFollowUp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockHttp2Peer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.MockHttp2Peer.takeFrame()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketHttpTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.throwingOnFailLogs()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.textMessage()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.binaryMessage()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.nullStringThrows()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.nullByteStringThrows()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.serverMessage()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.throwingOnMessageClosesImmediatelyAndFails()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.throwingOnClosingClosesImmediatelyAndFails()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.webSocketAndApplicationInterceptors()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.webSocketAndNetworkInterceptors()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.webSocketAndNetworkInterceptors().8.intercept(okhttp3.internal.ws.Chain)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.overflowOutgoingQueue()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.closeReasonMaximumLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.closeReasonTooLong()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.wsScheme()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.wsUppercaseScheme()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.wssScheme()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.httpsScheme()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.readTimeoutAppliesToHttpRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.readTimeoutAppliesWithinFrames()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.readTimeoutAppliesWithinFrames().9.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.unacknowledgedPingFailsConnection()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.clientCancelsIfCloseIsNotAcknowledged()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.webSocketsDontTriggerEventListener()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.websocketScheme(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "OkHttpURLConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.huc.OkHttpURLConnection.connect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.OkHttpURLConnection.NetworkInterceptor.intercept(okhttp3.internal.huc.Chain)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.OkHttpURLConnection.getResponse(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writePingAndAwaitPong()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.awaitPong()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writeData(int,boolean,okio.Buffer,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Stream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Stream.waitForIo()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PublicSuffixDatabase.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.publicsuffix.PublicSuffixDatabase.findMatchingRule(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OAuthSessionFactory.java", "spoonMethods": [{"spoonMethodName": "okhttp3.slack.OAuthSessionFactory.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aac684aeae32ff18e443799a3ccff6de9d68a684"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14.0, "deletions": 8.0, "lines": 22.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 14.0, "UPD": 4.0, "INS": 7.0, "MOV": 0.0, "DEL": 3.0, "spoonFilesChanged": 7, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/publicsuffix", "samples/slack/src/main/java/okhttp3/slack", "mockwebserver/src/main/java/okhttp3/mockwebserver", "okhttp/src/main/java/okhttp3/internal/http2", "okhttp-urlconnection/src/main/java/okhttp3/internal/huc"], "changesInPackagesSPOON": ["okhttp3.slack.OAuthSessionFactory.dispatch(okhttp3.mockwebserver.RecordedRequest)", "okhttp3.internal.publicsuffix.PublicSuffixDatabase.findMatchingRule(java.lang.String[])", "okhttp3.internal.http2.Http2Connection.writePingAndAwaitPong()", "okhttp3.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,okhttp3.mockwebserver.RecordedRequest,okhttp3.mockwebserver.MockResponse)", "okhttp3.internal.http2.Http2Connection.awaitPong()", "okhttp3.internal.http2.MockHttp2Peer.takeFrame()", "okhttp3.internal.http2.Http2Connection.writeData(int,boolean,okio.Buffer,long)", "okhttp3.internal.huc.OkHttpURLConnection.getResponse(boolean)", "okhttp3.internal.huc.OkHttpURLConnection.connect()", "okhttp3.mockwebserver.MockWebServer.throttledTransfer(okhttp3.mockwebserver.MockResponse,java.net.Socket,okio.BufferedSource,okio.BufferedSink,long,boolean)", "okhttp3.internal.http2.Http2Stream.waitForIo()", "okhttp3.mockwebserver.MockWebServer.Http2SocketHandler.onStream(okhttp3.internal.http2.Http2Stream)", "okhttp3.internal.huc.OkHttpURLConnection.NetworkInterceptor.intercept(okhttp3.internal.huc.Chain)"]}, {"title": "Why are cancel events in HTTP2 causing the connection to be closed?", "body": "https://github.com/square/okhttp/blob/878bde8fd6939b508adeb21e2911e390cfe27326/okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java#L436\r\n\r\nOnly `REFUSED_STREAM` errors allow the reuse of a connection. I believe it should be acceptable for a cancelled stream to be able to reuse the connection. Am I misunderstanding what `ErrorCode.CANCEL` means?", "url": "https://github.com/square/okhttp/issues/3940", "user": "oliveroneill", "labels": ["bug"], "created": "2018-03-27 09:11:51", "closed": "2018-07-11 05:57:21", "commits": {}, "ttf": 105.00027777777778, "commitsDetails": []}, {"title": "Frequent cancelling the HTTP/2 requests will cause client never sends WINDOW_UPDATE frame", "body": "Description: When downloading a lot of medium-sized files from Nginx HTTP/2 server, if requests are frequently canceled (RST_STREAM), eventually the connection will timeout and not be able to send/receive any data from the server.\r\n\r\nOn the server side configure the Nginx server to support HTTP/2 with a self-signed certificate. And host about 100 files with size about 500k each. \r\nOn the client side, I built an Android test, using a single thread to download the file from file no.1 to file no.100 consequently. During each download, the request is canceled and then proceed to download next file. Eventually, the request will timeout. Depending on the setup the timeout may happen on different download. But once the testing environment is set, it always failed on the same file.\r\n\r\nServer info: nginx/1.13.10 \r\nClient info: Android 6.0 with OKHttp 3.10.0 \r\n\r\nThis issue is reproducible on multiple servers. For example, Go HTTP/2 server and AWS CloudFront.\r\n\r\nA filtered (sid:75) server log shows that the header frame has been sent on 14:39:32 and then timed out after 60 seconds. Note, it is not always the header frame though. Sometimes it is the data frame not being sent out.\r\n```\r\n2018/03/05 14:39:32 [debug] 92282#0: *4 http2 frame type:1 f:5 l:14 sid:75\r\n2018/03/05 14:39:32 [debug] 92282#0: *4 http2 HEADERS frame sid:75 depends on 0 excl:0 weight:16\r\n2018/03/05 14:39:32 [debug] 92282#0: *4 http2 frame out: 00007FD4B082ABA0 sid:75 bl:1 len:122\r\n2018/03/05 14:39:32 [debug] 92282#0: *4 http2 frame sent: 00007FD4B082ABA0 sid:75 bl:1 len:122\r\n2018/03/05 14:40:32 [debug] 92282#0: *4 http2 send RST_STREAM frame sid:75, status:1\r\n```\r\nIn the meantime, the client log shows the header is not received until 14:40:32\r\n```\r\n03-05 14:39:32.229 5979-5995/? V/VB_Network: Sending request https://10.0.0.186/files/37 on Connection{10.0.0.186:443, proxy=DIRECT hostAddress=/10.0.0.186:443 cipherSuite=TLS_RSA_WITH_AES_128_CBC_SHA protocol=h2}\r\n                                             User-Agent: \r\n                                             Host: 10.0.0.186\r\n                                             Connection: Keep-Alive\r\n                                             Accept-Encoding: gzip\r\n03-05 14:40:32.397 5979-5995/? V/VB_Network: Received response for https://10.0.0.186/files/37 (h2) in 60167.4ms\r\n                                             server: nginx/1.13.10\r\n                                             date: Mon, 05 Mar 2018 22:39:32 GMT\r\n                                             content-type: application/octet-stream\r\n                                             content-length: 562176\r\n                                             last-modified: Sun, 04 Mar 2018 00:23:13 GMT\r\n                                             etag: \"5a9b3c71-89400\"\r\n                                             accept-ranges: bytes\r\n03-05 14:40:32.400 5979-5995/? E/VB_Test: stream was reset: PROTOCOL_ERROR https://10.0.0.186/files/37\r\n```\r\n\r\nAt first, I thought it is a server issue, so I filed a [bug](https://trac.nginx.org/nginx/ticket/1499) to the Nginx team. They replied that this is because the client never sends the WINDOW_UPDATE frame except after the initial connection.\r\n\r\n[Server Full Log](https://gist.github.com/jifang/5a8a0e6dc4bf19273e815c56b7b9385f)\r\n[Client Full Log](https://gist.github.com/jifang/7e3109bd31f888349e1a98ebd84d2e38)\r\n\r\nThe test project is under git@github.com:jifang/nginx_bug_repo1.git", "url": "https://github.com/square/okhttp/issues/3915", "user": "jifang", "labels": ["bug"], "created": "2018-03-06 17:52:03", "closed": "2018-07-07 12:22:08", "commits": {"914bc5655b679fc1e6cbc5edd19d83ddc14d3052": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "691a82b58e8d6c47cd9bf33fcee8a2988f08226c": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "261c0882fa810bf26bc354c28d5caed9b42a50c2": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "f9cef65e353235a03a83dcd65a63a284ed461450": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "fb83491cc67ea2763c6e47af00d7f9f2fe4c2744": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 122.00027777777778, "commitsDetails": [{"commitHash": "914bc5655b679fc1e6cbc5edd19d83ddc14d3052", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "691a82b58e8d6c47cd9bf33fcee8a2988f08226c", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": ["878bde8fd6939b508adeb21e2911e390cfe27326"], "nameRev": "691a82b58e8d6c47cd9bf33fcee8a2988f08226c tags/parent-3.11.0~53^2", "commitMessage": "Defer StreamResetException until response body buffer is fully read.\n\nWe rely on the application layer to read the response body buffer\nbefore sending WINDOW_UPDATE's. Previously we'd immediately throw a\nStreamResetException. This prevented the application layer from reading\nthe buffer which in turn means we would not send WINDOW_UPDATE's. This\nhas potential to deplete the flow-control window.\n\nhttps://github.com/square/okhttp/issues/3915\n", "commitDateTime": "2018-04-08 15:27:05", "authoredDateTime": "2018-03-24 18:06:29", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java", "insertions": 35, "deletions": 26, "lines": 61}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionWindowUpdateAfterCanceling()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Http2Stream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Stream.FramingSource.read(okio.Buffer,long)", "TOT": 14, "UPD": 1, "INS": 6, "MOV": 6, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.FramingSource.checkNotClosed()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "261c0882fa810bf26bc354c28d5caed9b42a50c2", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f9cef65e353235a03a83dcd65a63a284ed461450", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["d66238d256c0fd08f9e5794d7581f29f7e202bd1"], "nameRev": "f9cef65e353235a03a83dcd65a63a284ed461450 tags/parent-3.11.0~45", "commitMessage": "Ensure discarded HTTP/2 data frames free flow-control space. (#4033)\n\nhttps://github.com/square/okhttp/issues/3915", "commitDateTime": "2018-05-29 22:34:43", "authoredDateTime": "2018-05-29 22:34:43", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java", "insertions": 11, "deletions": 9, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.discardedDataFramesAreCounted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionWindowUpdateOnClose()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection.updateConnectionFlowControl(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.data(boolean,int,okio.BufferedSource,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Stream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Stream.FramingSource.read(okio.Buffer,long)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.FramingSource.updateConnectionFlowControl(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.FramingSource.close()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "fb83491cc67ea2763c6e47af00d7f9f2fe4c2744", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["5c73e3e1b8ba7e7785293b7fb45f0b59849371de"], "nameRev": "fb83491cc67ea2763c6e47af00d7f9f2fe4c2744 tags/parent-3.11.0~44^2", "commitMessage": "Ensure discarded HTTP/2 data frames free flow-control space. (#4033)\n\nhttps://github.com/square/okhttp/issues/3915\n", "commitDateTime": "2018-05-29 22:39:09", "authoredDateTime": "2018-05-29 22:34:43", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java", "insertions": 11, "deletions": 9, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.discardedDataFramesAreCounted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionWindowUpdateOnClose()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UrlConnectionCacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.UrlConnectionCacheTest.retainServedDateFormat()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection.updateConnectionFlowControl(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.data(boolean,int,okio.BufferedSource,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Stream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Stream.FramingSource.read(okio.Buffer,long)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.FramingSource.updateConnectionFlowControl(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.FramingSource.close()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["691a82b58e8d6c47cd9bf33fcee8a2988f08226c", "f9cef65e353235a03a83dcd65a63a284ed461450"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 56.0, "deletions": 36.0, "lines": 92.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 26.0, "UPD": 1.0, "INS": 13.0, "MOV": 8.0, "DEL": 4.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2"], "changesInPackagesSPOON": ["okhttp3.internal.http2.Http2Stream.FramingSource.read(okio.Buffer,long)", "okhttp3.internal.http2.Http2Stream.FramingSource.close()", "okhttp3.internal.http2.Http2Stream.FramingSource.updateConnectionFlowControl(long)", "okhttp3.internal.http2.Http2Connection.ReaderRunnable.data(boolean,int,okio.BufferedSource,int)", "okhttp3.internal.http2.Http2Connection", "okhttp3.internal.http2.Http2Stream.FramingSource.checkNotClosed()", "okhttp3.internal.http2.Http2Connection.updateConnectionFlowControl(long)"]}, {"title": "MockWebServer tests got stuck after updating from 3.9.1 to 3.10.0", "body": "After updating from `3.9.1` to `3.10.0` `mockwebserver` tests got stuck.\r\n\r\nThis is how I configure the `HttpClient` (I'm setting up `HTTPS` and _Certificate Pinning_ ) \ud83d\udc40\r\n```java\r\nprivate OkHttpClient configureHttpClient() {\r\n    CertificatePinnerFactory factory = new CertificatePinnerFactory();\r\n    OkHttpClient.Builder builder = client.newBuilder()\r\n      .addInterceptor(new GzipRequestInterceptor())\r\n      .retryOnConnectionFailure(true)\r\n      .certificatePinner(factory.provideCertificatePinnerFor(environment))\r\n      .connectionSpecs(Arrays.asList(ConnectionSpec.MODERN_TLS, ConnectionSpec.COMPATIBLE_TLS));\r\n    if (isSocketFactoryUnset(sslSocketFactory, x509TrustManager)) {\r\n      builder.sslSocketFactory(sslSocketFactory, x509TrustManager);\r\n    }\r\n\r\n    return builder.build();\r\n  }\r\n```\r\n\r\n`3.9.1` \ud83d\udc47\r\n```\r\nFeb 27, 2018 9:15:56 PM okhttp3.mockwebserver.MockWebServer$2 execute\r\nINFO: MockWebServer[59072] starting to accept connections\r\nFeb 27, 2018 9:15:57 PM okhttp3.mockwebserver.MockWebServer$3 processOneRequest\r\nINFO: MockWebServer[59072] received request: POST /events/v2?access_token=anyAccessToken HTTP/1.1 and responded: HTTP/1.1 204 OK\r\n```\r\n\r\n`3.10.0` \ud83d\udc47\r\n```\r\nFeb 27, 2018 9:12:04 PM okhttp3.mockwebserver.MockWebServer$2 execute\r\nINFO: MockWebServer[59055] starting to accept connections\r\nFeb 27, 2018 9:12:06 PM okhttp3.mockwebserver.MockWebServer$3 processConnection\r\nWARNING: MockWebServer[59055] connection from /127.0.0.1 didn't make a request\r\n```\r\n\r\nFollowing you can find a failing test \ud83d\udc40\r\n```java\r\npackage com.mapbox.android.telemetry;\r\n\r\n\r\nimport android.content.Context;\r\n\r\nimport org.junit.Test;\r\n\r\nimport java.net.HttpURLConnection;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport okhttp3.Callback;\r\nimport okhttp3.HttpUrl;\r\nimport okhttp3.mockwebserver.MockResponse;\r\nimport okhttp3.mockwebserver.MockWebServer;\r\nimport okhttp3.mockwebserver.RecordedRequest;\r\nimport okhttp3.internal.tls.SslClient;\r\n\r\nimport static org.junit.Assert.assertEquals;\r\nimport static org.mockito.Mockito.RETURNS_DEEP_STUBS;\r\nimport static org.mockito.Mockito.mock;\r\n\r\npublic class Foo {\r\n\r\n  @Test\r\n  public void foo() throws Exception {\r\n    MockWebServer server = new MockWebServer();\r\n    server.useHttps(SslClient.localhost().socketFactory, false);\r\n    server.start();\r\n    Context mockedContext = mock(Context.class, RETURNS_DEEP_STUBS);\r\n    MapboxTelemetry.applicationContext = mockedContext;\r\n    TelemetryClient telemetryClient = obtainATelemetryClient(\"anyAccessToken\", \"anyUserAgent\", server);\r\n    List<Event> mockedEvent = obtainAnEvent();\r\n    MockResponse mockResponse = new MockResponse();\r\n    mockResponse.setResponseCode(HttpURLConnection.HTTP_NO_CONTENT);\r\n    mockResponse.setBody(\"\");\r\n    server.enqueue(mockResponse);\r\n    Callback mockedCallback = mock(Callback.class);\r\n\r\n    telemetryClient.sendEvents(mockedEvent, mockedCallback);\r\n\r\n    RecordedRequest request = server.takeRequest();\r\n    assertEquals(\"/events/v2?access_token=anyAccessToken\", request.getPath());\r\n  }\r\n\r\n  TelemetryClient obtainATelemetryClient(String accessToken, String userAgent, MockWebServer server) {\r\n    TelemetryClientSettings mockedTelemetryClientSettings = provideDefaultTelemetryClientSettings(server);\r\n    Logger mockedLogger = mock(Logger.class);\r\n    return new TelemetryClient(accessToken, userAgent, mockedTelemetryClientSettings, mockedLogger);\r\n  }\r\n\r\n  private TelemetryClientSettings provideDefaultTelemetryClientSettings(MockWebServer server) {\r\n    HttpUrl localUrl = obtainBaseEndpointUrl(server);\r\n    SslClient sslClient = SslClient.localhost();\r\n\r\n    return new TelemetryClientSettings.Builder()\r\n      .baseUrl(localUrl)\r\n      .sslSocketFactory(sslClient.socketFactory)\r\n      .x509TrustManager(sslClient.trustManager)\r\n      .build();\r\n  }\r\n\r\n  private List<Event> obtainAnEvent() {\r\n    Event theEvent = new AppUserTurnstile(\"anySdkIdentifier\", \"anySdkVersion\", false);\r\n\r\n    return obtainEvents(theEvent);\r\n  }\r\n\r\n  private List<Event> obtainEvents(Event... theEvents) {\r\n    return Arrays.asList(theEvents);\r\n  }\r\n\r\n  private HttpUrl obtainBaseEndpointUrl(MockWebServer server) {\r\n    return server.url(\"/\");\r\n  }\r\n}\r\n```\r\n\r\n\u261d\ufe0f is using https://github.com/mapbox/mapbox-events-android code.\r\n\r\nYou can check that we only bumped OkHttp version to `3.10.0` \ud83d\udc49 https://github.com/mapbox/mapbox-events-android/commit/c92a4acdf684cedc003c769f44a62c345ce596f9 and after that tests got stuck.\r\n\r\nTried many things without luck \ud83d\ude13\r\nAny hints? What did it change that could affect tests in that sense? \r\n\r\n", "url": "https://github.com/square/okhttp/issues/3898", "user": "Guardiola31337", "labels": ["bug", "tests"], "created": "2018-02-27 20:30:09", "closed": "2018-07-05 01:33:16", "commits": {}, "ttf": 127.00027777777778, "commitsDetails": []}, {"title": "When Content-Encoding: gzip is used, and the content-length header is removed, and the underlying socket connection is not broken, the client is blocked when the body data is read", "body": "When Content-Encoding: gzip is used, and the content-length header is removed, and the underlying socket connection is not broken, the client is blocked when the body data is read, until the connection is disconnected or the request timed out. The same scenario, using httpclient request is not blocked, through my debugging blocking problems found in okio class okio. GzipSource in the read method, my feel this time should be returned -1, since the gzip data has been finished, now is no longer able to call the read method\uff0cBecause there is no data to read in the current stream.", "url": "https://github.com/square/okhttp/issues/3892", "user": "twoeggs", "labels": ["bug"], "created": "2018-02-26 10:36:24", "closed": "2018-07-05 01:45:37", "commits": {}, "ttf": 128.00027777777777, "commitsDetails": []}, {"title": "When Authenticator.authenticate() throws an exception the StreamAllocator isn't released", "body": "First of all sorry for not providing a failing test here, but I struggled to do that for this case.\r\n\r\nI was just implementing an Authenticator when I found that when `Authenticator.authenticate()` throws an exception (it has a catched `IOException` in its signature, so that seems to be an expected case) the `RetryAndFollowUpInterceptor` will never release its `StreamAllocation` - as opposed to when returning `null` in `authenticate()`.\r\n\r\nHere are the according lines in the `RetryAndFollowUpInterceptor`:\r\n\r\n```java\r\nRequest followUp = followUpRequest(response, streamAllocation.route());\r\n\r\nif (followUp == null) {\r\n    if (!forWebSocket) {\r\n      streamAllocation.release();\r\n    }\r\n    return response;\r\n}\r\n```\r\n\r\nShouldn't there be a try catch around the call to `followUpRequest()` to handle that case and and then re-throw the exception?", "url": "https://github.com/square/okhttp/issues/3872", "user": "ubuntudroid", "labels": ["bug"], "created": "2018-02-20 17:36:27", "closed": "2018-04-16 19:34:34", "commits": {"4aacea52602c0e73ff16fd88771b3a4f9d807457": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "1ca5c113e4938a4af8092da66daae601aa5e1847": {"commitGHEventType": "referenced", "commitUser": "yschimke"}}, "ttf": 55.000277777777775, "commitsDetails": [{"commitHash": "4aacea52602c0e73ff16fd88771b3a4f9d807457", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1ca5c113e4938a4af8092da66daae601aa5e1847", "commitGHEventType": "referenced", "commitUser": "yschimke", "commitParents": ["12fd57b7c8931caef822f298cf22ca1ad8d44f67"], "nameRev": "1ca5c113e4938a4af8092da66daae601aa5e1847 tags/parent-3.11.0~51", "commitMessage": "Release the connection when an Authenticator throws an exception. (#3971)\n\nCloses: https://github.com/square/okhttp/issues/3872", "commitDateTime": "2018-04-16 21:34:34", "authoredDateTime": "2018-04-16 15:34:34", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/RetryAndFollowUpInterceptor.java", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall().18", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.cancelLater(okhttp3.Call,long).19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failedAuthenticatorReleasesConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.failedProxyAuthenticatorReleasesConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RetryAndFollowUpInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(okhttp3.internal.http.Chain)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ca5c113e4938a4af8092da66daae601aa5e1847"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7.0, "deletions": 1.0, "lines": 8.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 1.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http"], "changesInPackagesSPOON": ["okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(okhttp3.internal.http.Chain)"]}, {"title": "too many follow-up requests problem", "body": "hello,\r\nrecording to this [issue](https://github.com/square/retrofit/issues/2630) it looks like OkHttp has a problem with status code `408`.\r\njust want to put it here to be fixed.", "url": "https://github.com/square/okhttp/issues/3827", "user": "MetaiR", "labels": ["bug", "needs info"], "created": "2018-02-05 20:14:45", "closed": "2018-02-18 18:45:53", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "java.lang.IllegalArgumentException: sockaddrToInetAddress unsupported ss_family: 0", "body": "Okhttp version: 3.3.1\r\nReceived crash report from HUAWEI  TAG-AL100 on Android 5.1. \r\nStacktrace\r\n1Caused by: java.lang.IllegalArgumentException: sockaddrToInetAddress unsupported ss_family: 0\r\n2    at libcore.io.Posix.getsockname(Native Method)\r\n3    at libcore.io.ForwardingOs.getsockname(ForwardingOs.java:87)\r\n4    at libcore.io.IoBridge.getSocketLocalPort(IoBridge.java:681)\r\n5    at libcore.io.IoBridge.closeAndSignalBlockedThreads(IoBridge.java:220)\r\n6    at java.net.PlainSocketImpl.close(PlainSocketImpl.java:153)\r\n7    at java.net.Socket.close(Socket.java:328)\r\n8    at okhttp3.internal.Util.closeQuietly(Util.java:105)\r\n9    at okhttp3.ConnectionPool.cleanup(ConnectionPool.java:226)\r\n10    at okhttp3.ConnectionPool$1.run(ConnectionPool.java:59)\r\n11    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\r\n12    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\r\n13    at java.lang.Thread.run(Thread.java:818)", "url": "https://github.com/square/okhttp/issues/3794", "user": "lyf571321556", "labels": ["android", "bug"], "created": "2018-01-23 03:20:07", "closed": "2019-09-03 09:46:59", "commits": {}, "ttf": 588.0002777777778, "commitsDetails": []}, {"title": "Fatal Exception: ArrayIndexOutOfBoundsException in Hpack.java", "body": "- Okhttp version: 3.9.1\r\n- Retrofit version: 2.3.0\r\n\r\nReceived crash report from SM-G950F on Android 7.0.\r\nStacktrace\r\n```\r\nFatal Exception: java.lang.ArrayIndexOutOfBoundsException: length=8; index=8\r\n       at okhttp3.internal.http2.Hpack$Reader.getName(Hpack.java:265)\r\n       at okhttp3.internal.http2.Hpack$Reader.readLiteralHeaderWithIncrementalIndexingIndexedName(Hpack.java:250)\r\n       at okhttp3.internal.http2.Hpack$Reader.readHeaders(Hpack.java:195)\r\n       at okhttp3.internal.http2.Http2Reader.readHeaderBlock(Http2Reader.java:196)\r\n       at okhttp3.internal.http2.Http2Reader.readHeaders(Http2Reader.java:182)\r\n       at okhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.java:129)\r\n       at okhttp3.internal.http2.Http2Connection$ReaderRunnable.execute(Http2Connection.java:566)\r\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n       at java.lang.Thread.run(Thread.java:762)\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/3793", "user": "AndrazP", "labels": ["bug"], "created": "2018-01-22 08:04:48", "closed": "2018-02-18 20:37:19", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "High CPU usage when uploading file with OkHTTP", "body": "Hi,\r\nI am using okhttp to upload a file to a server (actually presigned URL of AWS S3).\r\nMy server (the one which uses okhttp and does the upload) is also hosted on AWS and is deployed within a docker.\r\nI noticed that it takes about 8 seconds to upload a 30MB file, where if I just use a cURL command that does the same thing (also inside the docker) it takes 1.5 seconds.\r\nAfter some digging I noticed that when okhttp is working the CPU is reaching 100%, where with cURL it is not really affected. I also tested using a much stronger ec2 instance (40vCPU), and still took 8 seconds and 100% CPU of the docker.\r\nWhen I run my JAR outside of the docker it actually worked in appropriate time (2~ seconds), but I still noticed a significant CPU spike during the upload.\r\nEventually I changed to a different http library ([apache HttpClient](https://hc.apache.org/httpcomponents-client-4.5.x/httpclient/apidocs/index.html)) and it is working just like the cURL command (1.5 seonds and not CPU spikes)\r\n\r\n### Code snippet of okhttp usage of uploading:\r\n```java\r\nRequestBody body = RequestBody.create(MediaType.parse(\"multipart/form-data\"), new File(filePath));\r\nRequest req = new Request.Builder()\r\n                        .url(signedUrl)\r\n                        .put(body)                        \r\n                        .build();\r\nclient.newCall(req).execute();\r\n```\r\n\r\n### Code snippet of different http lib which is working well:\r\n```java\r\nFile file = new File(filePath);\r\nMultipartEntityBuilder builder = MultipartEntityBuilder.create();\r\nbuilder.addBinaryBody(\"file\", file, ContentType.MULTIPART_FORM_DATA, file.getName())\r\n            .setMode(HttpMultipartMode.BROWSER_COMPATIBLE);\r\nHttpPut put = new HttpPut(signedUrl);\r\nput.setEntity(builder.build());\r\nHttpClient client = HttpClientBuilder.create().build();\r\nclient.execute(put);\r\n```\r\n\r\nIf you need more details I will gladly add whatever is needed", "url": "https://github.com/square/okhttp/issues/3786", "user": "TalKashi", "labels": ["bug"], "created": "2018-01-18 13:14:21", "closed": "2018-02-11 18:37:32", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "DiskLruCache line 683 okhttp3.internal.cache.DiskLruCache.trimToSize", "body": "DiskLruCache line 683\r\nokhttp3.internal.cache.DiskLruCache.trimToSize\r\n\r\nFatal Exception: java.util.NoSuchElementException\r\n       at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:349)\r\n       at java.util.LinkedHashMap$ValueIterator.next(LinkedHashMap.java:370)\r\n       at okhttp3.internal.cache.DiskLruCache.trimToSize(SourceFile:683)\r\n       at okhttp3.internal.cache.DiskLruCache$1.run(SourceFile:176)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n       at java.lang.Thread.run(Thread.java:818)\r\n\r\n", "url": "https://github.com/square/okhttp/issues/3778", "user": "zahidgirnar", "labels": ["bug", "needs info"], "created": "2018-01-15 08:51:29", "closed": "2018-06-17 14:20:31", "commits": {}, "ttf": 153.00027777777777, "commitsDetails": []}, {"title": "Silent \"error\" when a 302 redirect url is malformed", "body": "I'm seeing a case in handling redirects where it _appears_ that okhttp isn't following a redirect. After digging through okhttp with the failing url, okhttp is functioning \"correctly\" - the redirect url is invalid. Therefore, okhttp doesn't follow the redirect, and returns a response with response code 302.\r\n\r\nA test illustrating this:\r\n```\r\nRequest request = new Request.Builder().url(originalUrl).build();\r\nResponse response = okhttp.newCall(request).execute();\r\n\r\nlog(response.code());\r\nlog(response.isSuccessful());\r\n```\r\nresults in:\r\n```\r\n302\r\nfalse\r\n```\r\n\r\nExample for `originalUrl`:\r\n```\r\n<originalUrl>, <host>, and <paths> have been used as substitutes for real urls, hosts, and paths\r\n\r\n<-- 302 Found <originalUrl>\r\nDate: Sun, 07 Jan 2018 17:04:43 GMT\r\nServer: Apache/2.4.10 (Debian) PHP/5.6.24-0+deb8u1 OpenSSL/1.0.1t\r\nX-Powered-By: PHP/5.6.24-0+deb8u1\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0\r\nLocation: http://.<host>/<path>\r\nAccess-Control-Allow-Origin: *\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n<-- END HTTP\r\n```\r\n\r\nAnd yes, `followRedirects` and `followSslRedirects` are enabled\r\n\r\nWhat's going on here is that the 302 redirect location is an illegally formatted URL - in my case, something like `http://.<somehost>/<path>` (note the leading `.` to the hostname). OkHttp's `RetryAndFollowUpInterceptor` reads this Location, and tries to parse it with `HttpUrl`. That, correctly, fails. At this point, the retry interceptor just returns and allows the 302 to propagate up:\r\nhttps://github.com/square/okhttp/blob/cd84d79c3574de81f23802f832f2ead6ad38a735/okhttp/src/main/java/okhttp3/internal/http/RetryAndFollowUpInterceptor.java#L307-L312\r\n\r\nNow, any sane client should be able to detect that the end response is not successful and handle it gracefully. But through reading through app logs, there's no indication as to what the actual failure was. The failed url parsing on the redirect location is simply swallowed here deep in OkHttp, without any mechanism to inform the client that the error occurred.\r\n\r\nShould a failed HttpUrl parse be bubbled up as an exception?\r\n", "url": "https://github.com/square/okhttp/issues/3767", "user": "jpearl", "labels": ["bug", "enhancement"], "created": "2018-01-07 23:40:20", "closed": "2018-02-25 01:53:32", "commits": {}, "ttf": 48.000277777777775, "commitsDetails": []}, {"title": "Okhttp crashes app with SSLException: Unable to create application data", "body": "We were testing our app by changing the date on the device when this crash happened. I'm not sure  if the crash is related to the date change or not. \r\n\r\nHere is the crash log:\r\n```\r\njava.lang.RuntimeException: javax.net.ssl.SSLException: Unable to create application data\r\n\tat com.android.org.conscrypt.ConscryptFileDescriptorSocket.newSsl(ConscryptFileDescriptorSocket.java:161)\r\n\tat com.android.org.conscrypt.ConscryptFileDescriptorSocket.<init>(ConscryptFileDescriptorSocket.java:152)\r\n\tat com.android.org.conscrypt.OpenSSLSocketFactoryImpl.createSocket(OpenSSLSocketFactoryImpl.java:149)\r\n\tat okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:230)\r\n\tat okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:198)\r\n\tat okhttp3.internal.connection.RealConnection.buildConnection(RealConnection.java:174)\r\n\tat okhttp3.internal.connection.RealConnection.connect(RealConnection.java:114)\r\n\tat okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:193)\r\n\tat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:129)\r\n\tat okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:98)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:109)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:124)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:170)\r\n\tat okhttp3.RealCall.access$100(RealCall.java:33)\r\n\tat okhttp3.RealCall$AsyncCall.execute(RealCall.java:120)\r\n\tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n\tat java.lang.Thread.run(Thread.java:764)\r\nCaused by: javax.net.ssl.SSLException: Unable to create application data\r\n\tat com.android.org.conscrypt.NativeCrypto.SSL_new(Native Method)\r\n\tat com.android.org.conscrypt.SslWrapper.newInstance(SslWrapper.java:58)\r\n\tat com.android.org.conscrypt.ConscryptFileDescriptorSocket.newSsl(ConscryptFileDescriptorSocket.java:159)\r\n\t... 27 more\r\n```\r\n", "url": "https://github.com/square/okhttp/issues/3761", "user": "krishnasajja", "labels": ["bug"], "created": "2018-01-05 21:29:43", "closed": "2018-01-07 02:31:44", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "okhttp fails with IOException: gzip finished without exhausting source but GZIPInputStream works", "body": "What kind of issue is this?\r\n\r\n - [x] Bug report. If you\u2019ve found a bug, spend the time to write a failing test. Bugs with tests\r\n       get fixed. Here\u2019s an example: https://gist.github.com/swankjesse/981fcae102f513eb13ed\r\n\r\nThis issue can't be reproduced in a test. I'll do my best to explain.\r\n\r\n```\r\n>> GET http://myserver.mycompany.com/.../businesses.20180104.json.gz\r\n<< 200 OK\r\n<< connection -> [keep-alive]\r\n<< accept-ranges -> [bytes]\r\n<< content-disposition -> [attachment; filename=\"businesses.20180104.json.gz\"; filename*=UTF-8''businesses.20180104.json.gz] \r\n<< content-type -> [application/x-gzip]\r\n<< content-length -> [3384998203]\r\n<< date -> [Fri, 05 Jan 2018 00:43:32 GMT]\r\n<< etag -> [0e49d5fa7ba9f68058bfbb4a98bef032c3a73871]\r\n<< last-modified -> [Thu, 04 Jan 2018 23:54:26 GMT]\r\n<< x-artifactory-id -> [9732f56568ea1e3d:59294f65:160b8066066:-8000]\r\n<< x-checksum-md5 -> [451ca1b1414e7b511de874e61fd33eb2]\r\n<< x-artifactory-filename -> [businesses.20180104.json.gz]\r\n<< server -> [Artifactory/5.3.0]\r\n<< x-checksum-sha1 -> [0e49d5fa7ba9f68058bfbb4a98bef032c3a73871]\r\n```\r\nAs you can see, the server doesn't set a `Content-Encoding = gzip` header, so I do that in an interceptor.\r\n\r\nEach record is newline delimited JSON string that is inserted into Couchbase. There are around 12 million records in total. Using okhttp, processing fails after about 130000 with the following exception:\r\n```\r\nCaused by: java.io.IOException: gzip finished without exhausting source\r\n\tat okio.GzipSource.read(GzipSource.java:100)\r\n\tat okio.RealBufferedSource$1.read(RealBufferedSource.java:430)\r\n```\r\n\r\nHowever, if I don't set the `Content-Encoding` header (thus skipping `GzipSource`), and wrap the input stream with `GZIPInputStream`, everything works as expected. I've also tried setting `Transfer-Encoding = chunked` on the response and removing the `Content-Length` header, but to no avail.\r\n\r\nSo, question is, if `GZIPInputStream` doesn't have a problem, why does `GzipSource`? And since it does, why won't it report what it thinks is the issue? I've a test that runs on a smaller file, 100 records, and it works.\r\n\r\nI've seen https://github.com/square/okhttp/issues/3457, but unlike the reporter, it's not possible for me to capture the hex body of a 3.4 GB stream.\r\n  \r\n  \r\n  ", "url": "https://github.com/square/okhttp/issues/3759", "user": "asarkar", "labels": ["bug"], "created": "2018-01-05 01:45:16", "closed": "2019-10-24 13:26:33", "commits": {}, "ttf": 657.0002777777778, "commitsDetails": []}, {"title": "WebSocket  java.net.SocketException: Connection reset", "body": "[Status Code 1001](https://tools.ietf.org/html/rfc6455#section-7.4)  in okhttp was a SocketException \r\n\r\nResponse from server   `1001, Stream end encountered`\r\n\r\n ```java\r\n java.net.SocketException: Connection reset\r\n       at java.net.SocketInputStream.read(SocketInputStream.java:192)\r\n       at java.net.SocketInputStream.read(SocketInputStream.java:120)\r\n       at okio.Okio$2.read(Okio.java:139)\r\n       at okio.AsyncTimeout$2.read(AsyncTimeout.java:237)\r\n       at okio.RealBufferedSource.request(RealBufferedSource.java:67)\r\n       at okio.RealBufferedSource.require(RealBufferedSource.java:60)\r\n       at okio.RealBufferedSource.readByte(RealBufferedSource.java:73)\r\n       at okhttp3.internal.ws.WebSocketReader.readHeader(WebSocketReader.java:113)\r\n       at okhttp3.internal.ws.WebSocketReader.processNextFrame(WebSocketReader.java:97)\r\n       at okhttp3.internal.ws.RealWebSocket.loopReader(RealWebSocket.java:262)\r\n       at okhttp3.internal.ws.RealWebSocket$2.onResponse(RealWebSocket.java:201)\r\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:141)\r\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n       at java.lang.Thread.run(Thread.java:776)\r\n```\r\n\r\nokhttp version `3.8.0`", "url": "https://github.com/square/okhttp/issues/3722", "user": "Harlber", "labels": ["bug", "websockets"], "created": "2017-12-14 03:03:15", "closed": "2017-12-25 05:17:40", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Crash: Unexpected TLS version: NONE", "body": "Hi there!\r\n\r\nFirst at all thank you very much for your library!\r\n\r\nI've integrated okhttp3 since couple months ago; there were no problem until yesterday with an user (Huawei, model MHA-L29, on Android 7.0):\r\n\r\n```\r\nFatal Exception: java.lang.IllegalArgumentException: Unexpected TLS version: NONE\r\n       at okhttp3.TlsVersion.forJavaName(TlsVersion.java:53)\r\n       at okhttp3.Handshake.get(Handshake.java:56)\r\n       at okhttp3.internal.connection.RealConnection.connectTls(RealConnection.java:300)\r\n       at okhttp3.internal.connection.RealConnection.establishProtocol(RealConnection.java:268)\r\n       at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:160)\r\n       at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256)\r\n       at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134)\r\n       at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:147)\r\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n       at java.lang.Thread.run(Thread.java:776)\r\n```\r\nHave you got some ideas about this crash?\r\n\r\nThank you very much guys!", "url": "https://github.com/square/okhttp/issues/3719", "user": "anthony3444", "labels": ["bug"], "created": "2017-12-12 05:47:45", "closed": "2018-02-18 20:37:09", "commits": {}, "ttf": 68.00027777777778, "commitsDetails": []}, {"title": "Invalid http2 settings id may cause app crash.", "body": "There is a crash report, http2 settings value has some problem from server, but I think client must do some guard judgment agains this.\r\n```\r\njava.lang.ArrayIndexOutOfBoundsException\r\nlength=10; index=-27591\r\nokhttp3.internal.http2.Settings.set(Settings.java:65)\r\nokhttp3.internal.http2.Http2Reader.readSettings(Http2Reader.java:304)\r\nokhttp3.internal.http2.Http2Reader.nextFrame(Http2Reader.java:149)\r\nokhttp3.internal.http2.Http2Reader.readConnectionPreface(Http2Reader.java:83)\r\nokhttp3.internal.http2.Http2Connection$ReaderRunnable.execute(Http2Connection.java:571)\r\nokhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\njava.lang.Thread.run(Thread.java:818)\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/3675", "user": "MegatronKing", "labels": ["bug", "tests"], "created": "2017-11-06 13:00:55", "closed": "2017-12-30 08:14:44", "commits": {}, "ttf": 53.000277777777775, "commitsDetails": []}, {"title": "HeldCertificate.Builder fails with Robolectric 3.5.1", "body": "When mockwebserver is used together with Robolectric 3.5.1 HeldCertificate.Builder.build fails with the following error:\r\n\r\n```\r\njava.lang.VerifyError: Bad type on operand stack\r\nException Details:\r\n  Location:\r\n    okhttp3/internal/tls/HeldCertificate$Builder.build()Lokhttp3/internal/tls/HeldCertificate; @237: invokevirtual\r\n  Reason:\r\n    Type 'org/bouncycastle/asn1/ASN1ObjectIdentifier' (current frame, stack[1]) is not assignable to 'org/bouncycastle/asn1/DERObjectIdentifier'\r\n  Current Frame:\r\n    bci: @237\r\n    flags: { }\r\n    locals: { 'okhttp3/internal/tls/HeldCertificate$Builder', 'java/security/KeyPair', 'javax/security/auth/x500/X500Principal', 'java/security/KeyPair', 'javax/security/auth/x500/X500Principal', long, long_2nd, 'org/bouncycastle/x509/X509V3CertificateGenerator' }\r\n    stack: { 'org/bouncycastle/x509/X509V3CertificateGenerator', 'org/bouncycastle/asn1/ASN1ObjectIdentifier', integer, 'org/bouncycastle/asn1/x509/BasicConstraints' }\r\n  Bytecode:\r\n    0x0000000: 2ab4 000b c600 0a2a b400 0ba7 0007 2ab6\r\n    0x0000010: 000f 4c2a b400 0ac6 0023 bb00 1059 bb00\r\n    0x0000020: 1159 b700 1212 13b6 0014 2ab4 000a b600\r\n    0x0000030: 14b6 0015 b700 16a7 001f bb00 1059 bb00\r\n    0x0000040: 1159 b700 1212 13b6 0014 b800 17b6 0018\r\n    0x0000050: b600 15b7 0016 4d2a b400 0cc6 001a 2ab4\r\n    0x0000060: 000c b400 194e 2ab4 000c b400 1ab6 001b\r\n    0x0000070: 3a04 a700 082b 4e2c 3a04 b800 1c37 05bb\r\n    0x0000080: 001d 59b7 001e 3a07 1907 bb00 1f59 2ab4\r\n    0x0000090: 0009 b700 20b6 0021 1907 1904 b600 2219\r\n    0x00000a0: 07bb 0023 5916 05b7 0024 b600 2519 07bb\r\n    0x00000b0: 0023 5916 0514 0002 61b7 0024 b600 2719\r\n    0x00000c0: 072c b600 2819 072b b600 29b6 002a 1907\r\n    0x00000d0: 122b b600 2c2a b400 0d9e 0017 1907 b200\r\n    0x00000e0: 2d04 bb00 2e59 2ab4 000d b700 2fb6 0030\r\n    0x00000f0: 2ab4 0007 b900 3101 009a 006e 2ab4 0007\r\n    0x0000100: b900 3201 00bd 0033 3a08 0336 092a b400\r\n    0x0000110: 07b9 0032 0100 360a 1509 150a a200 392a\r\n    0x0000120: b400 0715 09b9 0034 0200 c000 353a 0b19\r\n    0x0000130: 0bb8 0036 9900 0810 07a7 0004 0536 0c19\r\n    0x0000140: 0815 09bb 0037 5915 0c19 0bb7 0038 5384\r\n    0x0000150: 0901 a7ff c619 07b2 0039 04bb 003a 5919\r\n    0x0000160: 08b7 003b b600 3019 072d b600 3c12 3db6\r\n    0x0000170: 003e 3a08 bb00 3f59 1908 2bb7 0040 b0  \r\n  Stackmap Table:\r\n    same_frame(@14)\r\n    same_locals_1_stack_item_frame(@18,Object[#127])\r\n    append_frame(@58,Object[#127])\r\n    same_locals_1_stack_item_frame(@86,Object[#16])\r\n    append_frame(@117,Object[#16])\r\n    append_frame(@122,Object[#127],Object[#16])\r\n    append_frame(@240,Long,Object[#29])\r\n    append_frame(@280,Object[#128],Integer,Integer)\r\n    append_frame(@316,Object[#53])\r\n    same_locals_1_stack_item_frame(@317,Integer)\r\n    chop_frame(@341,3)\r\n    chop_frame(@359,1)\r\n```\r\n\r\nRobolectric 3.5.1 uses bouncycastle 1.52 while mockwebserver uses 1.50 so 1.52 is automatically selected which mockwebserver is incompatible with. Forcing bouncycastle to 1.50 helps but it's not ideal.", "url": "https://github.com/square/okhttp/issues/3672", "user": "technoir42", "labels": ["bug"], "created": "2017-10-31 09:33:42", "closed": "2018-11-04 04:57:37", "commits": {}, "ttf": 368.0002777777778, "commitsDetails": []}, {"title": "Http2Connection does not handle integer overflow for stream id", "body": "We have a long-running service, and there was a period of about 1 minute where our okhttp client repeatedly threw this exception when attempting to make a remote call:\r\n\r\n```\r\njava.lang.IllegalArgumentException: reserved bit set: -2147483613\r\nat okhttp3.internal.http2.Http2.illegalArgument(Http2.java:109)\r\nat okhttp3.internal.http2.Http2Writer.frameHeader(Http2Writer.java:270)\r\nat okhttp3.internal.http2.Http2Writer.headers(Http2Writer.java:306)\r\nat okhttp3.internal.http2.Http2Writer.synStream(Http2Writer.java:127)\r\nat okhttp3.internal.http2.Http2Connection.newStream(Http2Connection.java:230)\r\nat okhttp3.internal.http2.Http2Connection.newStream(Http2Connection.java:205)\r\nat okhttp3.internal.http2.Http2Codec.writeRequestHeaders(Http2Codec.java:106)\r\nat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:46)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n```\r\n\r\nAfter a few failures over the course of 1 minute, the client started working again. \r\n\r\nMy guess is that we are overflowing an integer here, as the very first value that causes the error is `-2147483647` which is the minimum odd value for a signed integer.\r\n\r\nThe number (I believe it's the stream id) increased by 2 with each occurrence of the error - below are the stream ids from the last 5 failures before calls began succeeding again:\r\n```\r\n-2147483621\r\n-2147483619\r\n-2147483617\r\n-2147483615\r\n-2147483613\r\n```\r\n\r\n", "url": "https://github.com/square/okhttp/issues/3670", "user": "nziebart", "labels": ["bug"], "created": "2017-10-30 17:32:41", "closed": "2018-02-18 20:36:34", "commits": {}, "ttf": 111.00027777777778, "commitsDetails": []}, {"title": "OKHttp retry", "body": "When OKHTTP retries because of a 408, it does not respect the \"Retry-After\" header.  It looks like this is a standard header.  Could we add in this feature to respect the \"Retry-After\" header when retrying.\r\n\r\nThanks.", "url": "https://github.com/square/okhttp/issues/3665", "user": "jeffreyfan8", "labels": ["bug"], "created": "2017-10-25 00:42:01", "closed": "2018-01-01 05:43:38", "commits": {}, "ttf": 68.00027777777778, "commitsDetails": []}, {"title": "100 (Continue) HTTP response should be handled gracefully regardless of whether it was requested/expected", "body": "I'm using OkHttp 3.8.1 on Android to POST to a poorly-behaved server.\r\n\r\nEven though the request does not include an \"Expect: 100-continue\" header, the web server returns a 100 Continue response. Rather than continuing to send the request body (or just ignoring the 100 response since the body had already been sent), then getting the actual (200) response, OkHttp stops there and sends back the 100 Continue response in my okhttp.Callback.\r\n\r\nThe [w3c definition](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.1.1) of the 100 status code states:\r\n\r\n> The client SHOULD continue by sending the remainder of the request or, if the request has already been completed, ignore this response.\r\n\r\nand:\r\n\r\n> A client MUST be prepared to accept one or more 1xx status responses prior to a regular response, even if the client does not expect a 100 Continue status message.\r\n\r\nI have verified the correct behavior on three other HTTP clients (iOS, Windows, and curl(1)), who correctly ignore/continue when receiving an unexpected 100 Continue response.\r\n\r\nIn contrast, it looks like OkHttp only handles the 100 response iff it was explicitly requested via an \"Expect: 100-continue\" header.  From CallServerInterceptor.java:\r\n\r\n    // If there's a \"Expect: 100-continue\" header on the request, wait for a \"HTTP/1.1 100\r\n    // Continue\" response before transmitting the request body. If we don't get that, return\r\n    // what we did get (such as a 4xx response) without ever transmitting the request body.\r\n    if (\"100-continue\".equalsIgnoreCase(request.header(\"Expect\"))) {\r\n        httpCodec.flushRequest();\r\n        realChain.eventListener().responseHeadersStart(realChain.call());\r\n        responseBuilder = httpCodec.readResponseHeaders(true);\r\n    }\r\n\r\nIncidentally, the obvious workaround (including \"Expect: 100-continue\" in the request to trigger OkHttp's logic) didn't work for me because this particular server is further broken in that it complains about a mangled Expect: header. :expressionless:  It doesn't appear any other workaround is possible, though I'd love to be proven wrong.\r\n\r\nSee: https://stackoverflow.com/a/46382361/920849", "url": "https://github.com/square/okhttp/issues/3628", "user": "stephentalley", "labels": ["bug"], "created": "2017-09-25 15:56:45", "closed": "2018-02-17 16:50:00", "commits": {"e5fa0b989ec8e5f83f0e33c2046ab79094b39310": {"commitGHEventType": "referenced", "commitUser": "yschimke"}}, "ttf": 145.00027777777777, "commitsDetails": [{"commitHash": "e5fa0b989ec8e5f83f0e33c2046ab79094b39310", "commitGHEventType": "referenced", "commitUser": "yschimke", "commitParents": ["19726969aabbd0791d315994384a0cc46bf41648"], "nameRev": "e5fa0b989ec8e5f83f0e33c2046ab79094b39310 tags/parent-3.10.0~19", "commitMessage": "Handle 100 (Continue) HTTP response gracefully regardless of whether it was requested/expected (#3766)\n\n* Add a failing test for handling 100 response when it was not requested\r\n(#3628)\r\n* Implement reading the correct response after unrequested 100-continue", "commitDateTime": "2018-02-17 11:21:40", "authoredDateTime": "2018-02-17 12:21:40", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 29, "deletions": 5, "lines": 34}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/CallServerInterceptor.java", "insertions": 17, "deletions": 2, "lines": 19}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http1/Http1Codec.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.readRequest(java.net.Socket,okio.BufferedSource,okio.BufferedSink,int)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "SocketPolicy.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.SocketPolicy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.serverRespondsWithUnsolicited100Continue()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.serverRespondsWith100ContinueOnly_HTTP2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallServerInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.CallServerInterceptor.intercept(okhttp3.internal.http.Chain)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Http1Codec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http1.Http1Codec.readResponseHeaders(boolean)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NullPointerException in HttpUrl.class", "body": "IT IS NOT REALLY A BUG, BUT...\r\n\r\nThere is no check if a value is null whille buiding a body for a POST\r\n`            RequestBody formBody = new FormBody.Builder()\r\n                    .add(\"value\", value)\r\n                    .build();\r\n`\r\nif value is null, there is a :\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'int java.lang.String.length()' on a null object reference at okhttp3.HttpUrl.canonicalize(HttpUrl.java:1751)\r\n\r\nMy app doesn't stop after this crash and remains in a loop.\r\n\r\nWould it be possible to throw a NullPointerException ?", "url": "https://github.com/square/okhttp/issues/3597", "user": "MS893", "labels": ["bug"], "created": "2017-09-11 16:32:42", "closed": "2018-02-18 20:12:43", "commits": {}, "ttf": 160.00027777777777, "commitsDetails": []}, {"title": "java.lang.IllegalStateException: Unbalanced enter/exit", "body": "Version: 3.9.0\r\n\r\nI was investigating a resource leak in Glide which involves lots of parallel requests and adding an try/finally/close in ``okhttp3.Callback.onResponse``:\r\n\r\n```java\r\n@Override\r\npublic void onResponse(Call call, Response response) throws IOException {\r\n  try {\r\n    responseBody = response.body();\r\n    if (response.isSuccessful()) {\r\n      long contentLength = responseBody.contentLength();\r\n      stream = ContentLengthInputStream.obtain(responseBody.byteStream(), contentLength);\r\n      callback.onDataReady(stream);\r\n    } else {\r\n      callback.onLoadFailed(new HttpException(response.message(), response.code()));\r\n    }\r\n  } finally {\r\n    response.body().close();\r\n  }\r\n}\r\n```\r\n\r\nAfter a fair amount of scrolling back and forth in Glide's sample app (producing lots of requests and cancellations), I've see this exactly once: \r\n\r\n```\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): FATAL EXCEPTION: OkHttp Dispatcher\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): Process: com.bumptech.glide.samples.flickr, PID: 4423\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): java.lang.IllegalStateException: Unbalanced enter/exit\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okio.AsyncTimeout.enter(AsyncTimeout.java:73)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okio.AsyncTimeout$2.read(AsyncTimeout.java:235)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okio.RealBufferedSource.read(RealBufferedSource.java:46)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.internal.http1.Http1Codec$AbstractSource.read(Http1Codec.java:352)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.internal.http1.Http1Codec$FixedLengthSource.read(Http1Codec.java:396)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.internal.Util.skipAll(Util.java:175)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.internal.Util.discard(Util.java:157)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.internal.http1.Http1Codec$FixedLengthSource.close(Http1Codec.java:413)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okio.RealBufferedSource.close(RealBufferedSource.java:455)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.internal.Util.closeQuietly(Util.java:110)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.ResponseBody.close(ResponseBody.java:187)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat com.bumptech.glide.integration.okhttp3.OkHttpStreamFetcher.onResponse(OkHttpStreamFetcher.java:111)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.RealCall$AsyncCall.execute(RealCall.java:153)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n09-10 09:44:32.588 E/AndroidRuntime( 4423): \tat java.lang.Thread.run(Thread.java:761)\r\n09-10 09:44:32.594 W/ActivityManager( 1702):   Force finishing activity com.bumptech.glide.samples.flickr/.FlickrSearchActivity\r\n```\r\n\r\nThe close in ``onResponse`` above causes lots of additional exceptions on other threads because Glide tries to read the ``ResponseBody``'s ``InputStream`` after that point. The try/finally above is only there to help me debug the resource leak. However, it does produce lots of exceptions on background threads, if it's relevant:\r\n\r\n```\r\n09-10 09:50:35.082 I/Glide   ( 4511): java.io.IOException: closed\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat okio.RealBufferedSource$1.read(RealBufferedSource.java:426)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat java.io.FilterInputStream.read(FilterInputStream.java:133)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.util.ContentLengthInputStream.read(ContentLengthInputStream.java:66)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.fillbuf(RecyclableBufferedInputStream.java:176)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.read(RecyclableBufferedInputStream.java:309)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.util.ExceptionCatchingInputStream.read(ExceptionCatchingInputStream.java:85)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat java.io.FilterInputStream.read(FilterInputStream.java:133)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.util.MarkEnforcingInputStream.read(MarkEnforcingInputStream.java:45)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat android.graphics.BitmapFactory.nativeDecodeStream(Native Method)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat android.graphics.BitmapFactory.decodeStreamInternal(BitmapFactory.java:646)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat android.graphics.BitmapFactory.decodeStream(BitmapFactory.java:622)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.resource.bitmap.Downsampler.decodeStream(Downsampler.java:485)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.resource.bitmap.Downsampler.decodeFromWrappedStreams(Downsampler.java:276)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.resource.bitmap.Downsampler.decode(Downsampler.java:204)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.decode(StreamBitmapDecoder.java:60)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.decode(StreamBitmapDecoder.java:17)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder.decode(BitmapDrawableDecoder.java:45)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodePath.decodeResourceWithList(DecodePath.java:67)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodePath.decodeResource(DecodePath.java:52)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodePath.decode(DecodePath.java:43)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.LoadPath.loadWithExceptionList(LoadPath.java:56)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.LoadPath.load(LoadPath.java:42)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodeJob.runLoadPath(DecodeJob.java:538)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodeJob.decodeFromFetcher(DecodeJob.java:510)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodeJob.decodeFromData(DecodeJob.java:491)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodeJob.decodeFromRetrievedData(DecodeJob.java:445)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodeJob.runWrapped(DecodeJob.java:293)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.DecodeJob.run(DecodeJob.java:250)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat java.lang.Thread.run(Thread.java:761)\r\n09-10 09:50:35.082 I/Glide   ( 4511): \tat com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1.run(GlideExecutor.java:347)\r\n```", "url": "https://github.com/square/okhttp/issues/3592", "user": "sjudd", "labels": ["bug"], "created": "2017-09-10 16:53:56", "closed": "2017-12-30 19:00:11", "commits": {}, "ttf": 111.00027777777778, "commitsDetails": []}, {"title": "I have a lot of thread locked in my tomcat, and this may be related to okhttp", "body": "There are a lot of thread lock, the following is jstack information. I do not know why this will happen, which leads to my memory and cpu are rising\r\n\r\n\"http-nio-8891-exec-152\" #571 daemon prio=5 os_prio=0 tid=0x00007f79047a2000 nid=0x5a2c waiting for monitor entry [0x00007f78e4380000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat okio.AsyncTimeout.scheduleTimeout(AsyncTimeout.java:75)\r\n\t- waiting to lock <0x0000000087b012a0> (a java.lang.Class for okio.AsyncTimeout)\r\n\tat okio.AsyncTimeout.enter(AsyncTimeout.java:69)\r\n\tat okio.AsyncTimeout$2.read(AsyncTimeout.java:209)\r\n\tat okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\r\n\tat okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\r\n\tat okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\r\n\tat com.squareup.okhttp.internal.http.Http1xStream.readResponse(Http1xStream.java:186)\r\n\tat com.squareup.okhttp.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:127)\r\n\tat com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:737)\r\n\tat com.squareup.okhttp.internal.http.HttpEngine.access$200(HttpEngine.java:87)\r\n\tat com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:722)\r\n\tat com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:576)\r\n\tat com.squareup.okhttp.Call.getResponse(Call.java:287)\r\n\tat com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:243)\r\n\tat com.farmfriend.common.http.OkHttpRetryHandler.chainProceed(OkHttpRetryHandler.java:48)\r\n\tat com.farmfriend.common.http.OkHttpRetryHandler.retryHandler(OkHttpRetryHandler.java:31)\r\n\tat com.farmfriend.common.http.OkHttpRetryHandler.intercept(OkHttpRetryHandler.java:25)\r\n\tat com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:232)\r\n\tat com.farmfriend.common.http.OkHttpAddHeaderHandler.addHeadersHandler(OkHttpAddHeaderHandler.java:41)\r\n\tat com.farmfriend.common.http.OkHttpAddHeaderHandler.intercept(OkHttpAddHeaderHandler.java:27)\r\n\tat com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:232)\r\n\tat com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:205)\r\n\tat com.squareup.okhttp.Call.execute(Call.java:80)\r\n\tat com.farmfriend.common.http.OkHttpUtil.post(OkHttpUtil.java:90)\r\n\tat com.farmfriend.common.http.OkHttpUtil.ral(OkHttpUtil.java:110)\r\n\tat com.farmfriend.weather.util.MojiWeatherUtil.getWeatherInfoFromNet(MojiWeatherUtil.java:43)\r\n\tat com.farmfriend.weather.service.impl.GetMojiWeatherInfoServiceImpl.getMapToWeatherEntity(GetMojiWeatherInfoServiceImpl.java:459)\r\n\tat com.farmfriend.weather.service.impl.GetMojiWeatherInfoServiceImpl.getOrderInfoWeather(GetMojiWeatherInfoServiceImpl.java:171)\r\n\tat com.farmfriend.weather.controller.WeatherServerController.getOrderInfoWeather(WeatherServerController.java:75)\r\n\tat com.farmfriend.weather.controller.WeatherServerController$$FastClassBySpringCGLIB$$5b434648.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)\r\n\tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)\r\n\tat org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)\r\n\tat com.farmfriend.weather.controller.WeatherServerController$$EnhancerBySpringCGLIB$$1a7115a.getOrderInfoWeather(<generated>)\r\n\tat sun.reflect.GeneratedMethodAccessor524.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:648)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:729)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\t- locked <0x00000000f20a5f90> (a org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nmy okhttp version 2.7.5", "url": "https://github.com/square/okhttp/issues/3583", "user": "peterxiemin", "labels": ["bug", "needs info"], "created": "2017-09-05 06:23:12", "closed": "2018-02-18 20:36:08", "commits": {}, "ttf": 166.00027777777777, "commitsDetails": []}, {"title": "OkHttp 3.9.0 IllegalStateException with Cookies and ProGuard", "body": "Sample project: https://github.com/talklittle/TestOkHttp3.9.0\r\n\r\nCrashes with OkHttp 3.9.0; works with OkHttp 3.8.1\r\n\r\nCrashes with `minifyEnabled true`; works with `minifyEnabled false`\r\n\r\nI guess ProGuard is stripping away `src/main/resources/`.\r\n\r\n```\r\njava.lang.IllegalStateException: Unable to load publicsuffixes.gz resource from the classpath.\r\n       at okhttp3.internal.publicsuffix.PublicSuffixDatabase.findMatchingRule(PublicSuffixDatabase.java:120)\r\n       at okhttp3.internal.publicsuffix.PublicSuffixDatabase.getEffectiveTldPlusOne(PublicSuffixDatabase.java:83)\r\n       at okhttp3.Cookie.parse(Cookie.java:311)\r\n       at okhttp3.Cookie.parse(Cookie.java:219)\r\n       at okhttp3.Cookie.parseAll(Cookie.java:445)\r\n       at okhttp3.internal.http.HttpHeaders.receiveHeaders(HttpHeaders.java:201)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:95)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)\r\n       at okhttp3.RealCall.execute(RealCall.java:77)\r\n```", "url": "https://github.com/square/okhttp/issues/3582", "user": "talklittle", "labels": ["bug", "documentation"], "created": "2017-09-05 03:44:09", "closed": "2017-10-11 18:19:42", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "Test Failure in MockWebServerTest", "body": "I am experiencing a test failure in MockWebServerTest#requestUrlReconstructed. The test failure is because the `MockWebServer` is created with the host _localhost_ but the `HttpUrl` returned has the FQDN _localhost.localdomain_.\r\n\r\n`Failed tests: \r\n  MockWebServerTest.requestUrlReconstructed:436 expected:<localhost[]> but was:<localhost[.localdomain]>`", "url": "https://github.com/square/okhttp/issues/3546", "user": "sneivandt", "labels": ["bug"], "created": "2017-08-27 17:32:33", "closed": "2017-08-30 14:56:49", "commits": {"c77023cd0369c679bf217506ae21d429e6e81bdf": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "c77023cd0369c679bf217506ae21d429e6e81bdf", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["9b0d19f913465483d0942558eb21e37868040050"], "nameRev": "c77023cd0369c679bf217506ae21d429e6e81bdf tags/parent-3.9.0~26", "commitMessage": "Test Failure in MockWebServerTest (#3547)\n\n* Lookup the FQDN given the MockWebServer hostname to compare with the HttpUrl hostname. Issue #3546.\r\n\r\n* Update MockWebServer to use the FQDN for its host name. Issue #3546.\r\n", "commitDateTime": "2017-08-30 10:22:58", "authoredDateTime": "2017-08-30 09:22:58", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/internal/tls/SslClient.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "okhttp-tests/src/test/java/okhttp3/EventListenerTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/tls/ClientAuthTest.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SslClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.SslClient.localhost()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.getHostName()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.toProxyAddress()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MockWebServerTest.java", "spoonMethods": []}, {"spoonFilePath": "EventListenerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.EventListenerTest.successfulDnsLookup()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "ClientAuthTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.ClientAuthTest.clientAuthForWants()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.tls.ClientAuthTest.clientAuthForNeeds()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.tls.ClientAuthTest.clientAuthSkippedForNone()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.tls.ClientAuthTest.missingClientAuthSkippedForWantsOnly()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "java.lang.ArrayIndexOutOfBoundsException: size=8 offset=0 byteCount=579", "body": "Hello Square Team,\r\n      We've had a strange crash in spdy3.1 process\uff0cbut we can not  reproduce again, we don't know how to fix it, Could you help us please.\r\n\r\ncrash log\uff1a\r\njava.lang.ArrayIndexOutOfBoundsException: size=8 offset=0 byteCount=579\r\nat b.ae.d(SourceFile:30)\r\nat okio.Okio$1.write(SourceFile:75)\r\nat okio.AsyncTimeout$1.write(SourceFile:155)\r\nat okio.RealBufferedSink.emitCompleteSegments(SourceFile:176)\r\nat okio.RealBufferedSink.writeInt(SourceFile:140)\r\nat okhttp3.internal.framed.Spdy3$Writer.goAway(SourceFile:462)\r\nat okhttp3.internal.framed.FramedConnection.shutdown(SourceFile:435)\r\nat okhttp3.internal.framed.FramedConnection.close(SourceFile:451)\r\nat okhttp3.internal.framed.FramedConnection.access$900(SourceFile:55)\r\n                                             access$1100\r\n                                             access$1200\r\n                                             access$1300\r\n                                             access$1400\r\n                                             access$1500\r\n                                             access$2200\r\n                                             access$2302\r\n                                             access$2600\r\nat okhttp3.internal.framed.FramedConnection$Reader.execute(SourceFile:609)\r\nat okhttp3.internal.NamedRunnable.run(SourceFile:32)\r\nat java.lang.Thread.run(Thread.java:818)\r\n\r\nOKHttp version:3.2.0\r\nOKio Version:1.6.0\r\n", "url": "https://github.com/square/okhttp/issues/3530", "user": "MichaelChansn", "labels": ["bug"], "created": "2017-08-18 03:28:14", "closed": "2017-08-30 19:01:33", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "multithreaded http2 GET occasionally throws IllegalStateException", "body": "I get infrequent exceptions like below when downloading artifacts from nginx on multiple threads over http2. The problem is likely related to (or at least made more severe by) nginx sending GOAWAY frames to force the client acquire new connection. I am using okhttp 3.9.0-SNAPSHOT with swankjesse's fix for #3516. I can provide nginx config and a small java app that triggers the problem semi-reliably but don't have proper standalone test.\r\n\r\n\r\n```\r\njava.lang.IllegalStateException\r\n\tat okhttp3.internal.connection.StreamAllocation.acquire(StreamAllocation.java:419)\r\n\tat okhttp3.ConnectionPool.get(ConnectionPool.java:126)\r\n\tat okhttp3.OkHttpClient$1.get(OkHttpClient.java:152)\r\n\tat okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:175)\r\n\tat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:133)\r\n\tat okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:112)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:202)\r\n\tat okhttp3.RealCall.execute(RealCall.java:77)\r\n\tat test.okhttp.DownloadTest.download(DownloadTest.java:96)\r\n\tat test.okhttp.DownloadTest.lambda$0(DownloadTest.java:77)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nAll download threads share the same `OkHttpClient` instance and each download thread runs this (abbreviated) code:\r\n\r\n```java\r\nRequest request = new Request.Builder() //\r\n    .url(\"https://localhost:8443/...\") //\r\n    .build();\r\ntry (Response response = client.newCall(request).execute()) {\r\n    if (response.isSuccessful()) {\r\n        response.body().string();\r\n    }\r\n}    \r\n```\r\n\r\n\r\nI also see another exception that may or may not be related:\r\n\r\n```\r\njava.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:8443\r\n\tat okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:240)\r\n\tat okhttp3.internal.connection.RealConnection.connect(RealConnection.java:158)\r\n\tat okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:239)\r\n\tat okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:133)\r\n\tat okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:112)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:202)\r\n\tat okhttp3.RealCall.execute(RealCall.java:77)\r\n\tat test.okhttp.DownloadTest.download(DownloadTest.java:96)\r\n\tat test.okhttp.DownloadTest.lambda$0(DownloadTest.java:77)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat okhttp3.internal.platform.Platform.connectSocket(Platform.java:125)\r\n\tat okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:238)\r\n\t... 23 more\r\n```\r\n\r\n", "url": "https://github.com/square/okhttp/issues/3521", "user": "ifedorenko", "labels": ["bug"], "created": "2017-08-14 06:40:25", "closed": "2017-08-31 20:10:36", "commits": {"58928f537078b7fe5d4ef9582a9b3cf5b254adde": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "cfbe4eb742e859d56bdba577a58b45cb17a70590": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "3af9f9e4ffccac73ba4c7c883965fad49b963aaf": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "abe5d62bcf18781c4b32418932f60e62cfea1703": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "58928f537078b7fe5d4ef9582a9b3cf5b254adde", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "cfbe4eb742e859d56bdba577a58b45cb17a70590", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3af9f9e4ffccac73ba4c7c883965fad49b963aaf", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "abe5d62bcf18781c4b32418932f60e62cfea1703", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["314b40d9c5ae6e922f00fda3e867658c7edfc2db"], "nameRev": "abe5d62bcf18781c4b32418932f60e62cfea1703 tags/parent-3.9.0~16", "commitMessage": "Recover from an already-allocated connection that restricts new streams. (#3525)\n\nThis is an edge case that can occur with HTTP/2. Since multiple requests\r\nuse the same connection, it's possible for one request to restrict the\r\nconnection from creating new streams during a follow-up request.\r\n\r\nhttps://github.com/square/okhttp/issues/3521", "commitDateTime": "2017-08-31 16:09:14", "authoredDateTime": "2017-08-31 16:09:14", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 69, "deletions": 1, "lines": 70}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java", "insertions": 41, "deletions": 12, "lines": 53}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.responseHeadersAfterGoaway().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.concurrentHttp2ConnectionsDeduplicated().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionShutdownAfterHealthCheck().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.domainFronting().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.concurrentHttp2ConnectionsDeduplicated().6.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionShutdownAfterHealthCheck().4.intercept(okhttp3.internal.http2.Chain)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.recoverFromConnectionNoNewStreamsOnFollowUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamAllocation.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.findConnection(int,int,int,boolean)", "TOT": 20, "UPD": 0, "INS": 7, "MOV": 10, "DEL": 3}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.releaseIfNoNewStreams()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["abe5d62bcf18781c4b32418932f60e62cfea1703"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 41.0, "deletions": 12.0, "lines": 53.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 21.0, "UPD": 0.0, "INS": 8.0, "MOV": 10.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection"], "changesInPackagesSPOON": ["okhttp3.internal.connection.StreamAllocation.findConnection(int,int,int,boolean)", "okhttp3.internal.connection.StreamAllocation.releaseIfNoNewStreams()"]}, {"title": "Attempt to invoke interface method intercept on a null object reference", "body": "Hi,\r\n\r\nWe are having a large number of crashes reported by Crashlytics with the following error. \r\nWe have this issue with okhttp 3.5 and 3.8.\r\nMaybe there is something wrong in our code.\r\n\r\nCan anyone help us?\r\n\r\nThanks a lot\r\n\r\n```\r\nFatal Exception: java.lang.NullPointerException: Attempt to invoke interface method 'okhttp3.Response okhttp3.Interceptor.intercept(okhttp3.Interceptor$Chain)' on a null object reference\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:179)\r\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:129)\r\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n       at java.lang.Thread.run(Thread.java:762)\r\n```", "url": "https://github.com/square/okhttp/issues/3514", "user": "AntoinePurnelle", "labels": ["bug"], "created": "2017-08-09 11:54:48", "closed": "2017-08-30 19:00:07", "commits": {"a7042a35d0712b8c8d6791436dc5b66e673cd32f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "2638671be7d73a19d57b2608f6f6d58d0edd62c4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "57891fe021e9012adb0c2a4345a5b717c2c84ddb": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "a7042a35d0712b8c8d6791436dc5b66e673cd32f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2638671be7d73a19d57b2608f6f6d58d0edd62c4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "57891fe021e9012adb0c2a4345a5b717c2c84ddb", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["36bd68aa3e93affb12504cd40454e64c6812019c"], "nameRev": "57891fe021e9012adb0c2a4345a5b717c2c84ddb tags/parent-3.9.0~22", "commitMessage": "Crash early if any interceptor is null. (#3555)\n\nCloses: https://github.com/square/okhttp/issues/3514", "commitDateTime": "2017-08-30 15:00:06", "authoredDateTime": "2017-08-30 15:00:06", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "okhttp/src/main/java/okhttp3/CertificatePinner.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OkHttpClientTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClientTest.nullInterceptor()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClientTest.nullNetworkInterceptor()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClientTest.nullInterceptorInList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClientTest.nullNetworkInterceptorInList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificatePinner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificatePinner.withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClient.Builder.addInterceptor(okhttp3.Interceptor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClient.Builder.addNetworkInterceptor(okhttp3.Interceptor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["57891fe021e9012adb0c2a4345a5b717c2c84ddb"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11.0, "deletions": 1.0, "lines": 12.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 0.0, "INS": 5.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.CertificatePinner.withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)", "okhttp3.OkHttpClient.Builder.addInterceptor(okhttp3.Interceptor)", "okhttp3.OkHttpClient.Builder.addNetworkInterceptor(okhttp3.Interceptor)", "okhttp3.OkHttpClient"]}, {"title": "Flaky WebSocketHttpTest.throwingOnClosingClosesImmediatelyAndFails test", "body": "https://api.travis-ci.org/jobs/261536643/log.txt?deansi=true\r\n\r\n```\r\nINFO: [WS client] onFailure\r\njava.lang.RuntimeException\r\n\tat okhttp3.internal.ws.WebSocketHttpTest.throwingOnClosingClosesImmediatelyAndFails(WebSocketHttpTest.java:202)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:113)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:85)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:54)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:134)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)\r\n```", "url": "https://github.com/square/okhttp/issues/3507", "user": "yschimke", "labels": ["bug", "tests"], "created": "2017-08-06 14:25:12", "closed": "2017-08-30 19:02:20", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "MockWebServer discards request body if request contains \"Expect: 100-Continue\" header", "body": "[This line](https://github.com/square/okhttp/blob/e172706/mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java#L597) disables reading of request body to implement 100-Continue upload scheme. Unfortunately, the logic is backwards: this behaviour must triggered only if client sent \"Expect: 100-Continue\" *and* the SocketPolicy is `EXPECT_CONTINUE`, but is currently getting triggered for anyone, who sends \"Expect: 100-Continue\", causing their request body to be lost.\r\n\r\nHere is a testcase for reproduction:\r\n\r\n    @Test(timeout = 4000)\r\n    public void unexpectedDevelopment() throws Exception {\r\n        try (MockWebServer server = new MockWebServer()) {\r\n            final String theBody = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\r\n\r\n            server.start();\r\n\r\n            server.enqueue(new MockResponse().setBody(\"Nice\"));\r\n\r\n            URLConnection conn = server.url(\"/\").url().openConnection();\r\n            conn.setDoOutput(true);\r\n            conn.setRequestProperty(\"Expect\", \"100-Continue\");\r\n\r\n            try (OutputStream stream = conn.getOutputStream()) {\r\n                stream.write(theBody.getBytes(StandardCharsets.UTF_8));\r\n                stream.flush();\r\n            }\r\n\r\n            assertEquals(\"Nice\", convertStreamToString(conn.getInputStream()));\r\n\r\n            RecordedRequest request = server.takeRequest();\r\n\r\n            assertEquals(\"POST\", request.getMethod());\r\n            assertEquals(theBody, request.getBody().readUtf8());\r\n        }\r\n    }\r\n    \r\n    private static String convertStreamToString(InputStream is) throws IOException {\r\n        try (Scanner scanner = new Scanner(is, \"UTF-8\")) {\r\n            String result = null;\r\n\r\n            try {\r\n                result = scanner.useDelimiter(\"\\\\A\").next();\r\n            } catch (java.util.NoSuchElementException e) {\r\n                e.printStackTrace();\r\n            }\r\n            \r\n            final IOException trueError = scanner.ioException();\r\n            if (trueError != null) {\r\n                throw trueError;\r\n            }\r\n        \r\n            return result;\r\n        }\r\n    }\r\n\r\nRemoving \"Expect\" header works around the issue, but most real-world servers don't start to discard bodies in response to that header, they just ignore it. This bug makes it impossible to emulate those servers with MockWebServer.", "url": "https://github.com/square/okhttp/issues/3498", "user": "Alexander--", "labels": ["bug"], "created": "2017-08-04 05:52:52", "closed": "2017-08-31 02:03:09", "commits": {"1f7bf0f0b435425d754ae84bcf50bf980c1db29e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "e5f50b5bc65e71378d9a054891328815b52c1f40": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "1f7bf0f0b435425d754ae84bcf50bf980c1db29e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e5f50b5bc65e71378d9a054891328815b52c1f40", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["207f5579d3d907589bbe3641c5c25326e1571722"], "nameRev": "e5f50b5bc65e71378d9a054891328815b52c1f40 tags/parent-3.9.0~19", "commitMessage": "Fix MockWebServer handling of 'Expect: 100 Continue' (#3563)\n\nPreviously we'd skip the request body unless the socket policy was\r\nEXPECT_CONTINUE.\r\n\r\nCloses: https://github.com/square/okhttp/issues/3498", "commitDateTime": "2017-08-30 22:03:09", "authoredDateTime": "2017-08-30 22:03:09", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "mockwebserver/src/test/java/okhttp3/mockwebserver/MockWebServerTest.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http/RecordingProxySelector.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.readRequest(java.net.Socket,okio.BufferedSource,okio.BufferedSink,int)", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "MockWebServerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServerTest.http100Continue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RecordingProxySelector.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.RecordingProxySelector.connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e5f50b5bc65e71378d9a054891328815b52c1f40"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 7.0, "lines": 11.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11.0, "UPD": 4.0, "INS": 1.0, "MOV": 2.0, "DEL": 4.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/okhttp3/mockwebserver"], "changesInPackagesSPOON": ["okhttp3.internal.http.RecordingProxySelector.connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)", "okhttp3.mockwebserver.MockWebServer.readRequest(java.net.Socket,okio.BufferedSource,okio.BufferedSink,int)"]}, {"title": "MockWebServer sends invalid HTTP 2 \":status\" header with reason phrase", "body": "It seems, that there is a bug in MockWebServer (or at least some people believe so): when running a recent curl version against it, it outputs an error:\r\n\r\n    http2 error: Invalid HTTP header field was received: frame type: 1, stream: 1, name: [:status], value: [200 OK]\r\n\r\nQuick browsing of HTTP 2 spec, section \"Response Pseudo-Header Fields\" shows:\r\n\r\n    For HTTP/2 responses, a single :status pseudo-header field is defined that carries the HTTP status code field (see [RFC7231], Section 6). This pseudo-header field MUST be included in all responses; otherwise, the response is malformed (Section 8.1.2.6).\r\n    \r\n    HTTP/2 does not define a way to carry the version or reason phrase that is included in an HTTP/1.1 status line.\r\n\r\nSo it seems like curl/nghttp2 is using that part of spec to justify rejection of anything but integral response code within \":status\" header.\r\n\r\nClient: curl with nghttp2\r\nCurl version: 27e2a4733 (snapshot of master after curl-7_54_1)\r\nnghttp2 version:  92d686d35 (snapshot of master after v1.24.0)\r\n\r\nMockWebServer version: 3.9.0-SNAPSHOT", "url": "https://github.com/square/okhttp/issues/3484", "user": "Alexander--", "labels": ["bug"], "created": "2017-07-31 00:56:43", "closed": "2017-08-30 22:25:44", "commits": {"a26c5b575a78d93ea5dcd633c65e9afd80b86de8": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a356c04654ee9935a5f558d1bd72612b698ab3cb": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "8dccb26255077d2187a4edbeea2350e7c3585115": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a05f2f960e8764882091716b66a37e1ec4700e7c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "207f5579d3d907589bbe3641c5c25326e1571722": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "a26c5b575a78d93ea5dcd633c65e9afd80b86de8", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a356c04654ee9935a5f558d1bd72612b698ab3cb", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8dccb26255077d2187a4edbeea2350e7c3585115", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a05f2f960e8764882091716b66a37e1ec4700e7c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "207f5579d3d907589bbe3641c5c25326e1571722", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ee5cf502889ed896a67dac57662d19bc469bb876"], "nameRev": "207f5579d3d907589bbe3641c5c25326e1571722 tags/parent-3.9.0~20", "commitMessage": "Omit the message from MockWebServer's HTTP/2 :status header (#3556)\n\nThis was a bug carried over from SPDY.\r\n\r\nCloses: https://github.com/square/okhttp/issues/3484", "commitDateTime": "2017-08-30 18:25:44", "authoredDateTime": "2017-08-30 18:25:44", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.Http2SocketHandler.writeResponse(okhttp3.internal.http2.Http2Stream,okhttp3.mockwebserver.MockResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpLoggingInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptor.intercept(okhttp3.logging.Chain)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "HttpLoggingInterceptorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.http2()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.serverRespondsWithUnsolicited100Continue()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.get()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.serverSendsPushPromise_GET()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.serverSendsPushPromise_HEAD()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["207f5579d3d907589bbe3641c5c25326e1571722"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7.0, "deletions": 5.0, "lines": 12.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 2.0, "INS": 1.0, "MOV": 3.0, "DEL": 1.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/okhttp3/mockwebserver", "okhttp-logging-interceptor/src/main/java/okhttp3/logging"], "changesInPackagesSPOON": ["okhttp3.logging.HttpLoggingInterceptor.intercept(okhttp3.logging.Chain)", "okhttp3.mockwebserver.MockWebServer.Http2SocketHandler.writeResponse(okhttp3.internal.http2.Http2Stream,okhttp3.mockwebserver.MockResponse)"]}, {"title": "Timeout values not being respected", "body": "I am using okhttp (3.8.1) with retrofit (2.3.0) and the okhttp client does not seem to be respecting the timeout values I specified correctly.\r\n\r\nthis is my client\r\n\r\n```\r\nnew OkHttpClient.Builder()\r\n                .addNetworkInterceptor(new HttpLoggingInterceptor().setLevel(BuildConfig.DEBUG ? HttpLoggingInterceptor.Level.BODY : HttpLoggingInterceptor.Level.NONE))\r\n                .readTimeout(15, TimeUnit.SECONDS)\r\n                .connectTimeout(15, TimeUnit.SECONDS)\r\n                .retryOnConnectionFailure(false).build();\r\n```\r\n\r\nSo it should keep retrying for 15 seconds and then stop but it actually continues for about 2 minutes. Here are the logs (I removed the url for security reasons)\r\n\r\n\r\n```\r\n07-27 11:11:57.286 8095-8152/ D/OkHttp: --> POST \r\n07-27 11:11:57.286 8095-8152/ D/OkHttp: Content-Length: 0\r\n07-27 11:11:57.286 8095-8152/ D/OkHttp: Host: \r\n07-27 11:11:57.286 8095-8152/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:11:57.286 8095-8152/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:11:57.286 8095-8152/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:11:57.286 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:11:57.287 8095-8154/ D/OkHttp: Host: \r\n07-27 11:11:57.287 8095-8152/ D/OkHttp: --> END POST (0-byte body)\r\n07-27 11:11:57.287 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:11:57.287 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:11:57.287 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:11:57.287 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:11:57.820 8095-8152/ D/OkHttp: <-- 200 OK \r\n07-27 11:11:57.820 8095-8152/ D/OkHttp: Content-Length: 0\r\n07-27 11:11:57.820 8095-8152/ D/OkHttp: Server: Kestrel\r\n07-27 11:11:57.820 8095-8152/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:11:57.820 8095-8152/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:11:57.820 8095-8152/ D/OkHttp: Date: Thu, 27 Jul 2017 15:11:56 GMT\r\n07-27 11:11:57.820 8095-8152/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:03.346 8095-8154/ D/OkHttp: <-- 408 Request Timeout (6059ms)\r\n07-27 11:12:03.346 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:03.347 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:03.347 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:03.347 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:03.347 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:11:59 GMT\r\n07-27 11:12:03.347 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:03.351 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:03.351 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:03.351 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:03.351 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:03.352 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:03.352 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:09.437 8095-8154/ D/OkHttp: <-- 408 Request Timeout (6084ms)\r\n07-27 11:12:09.437 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:09.437 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:09.437 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:09.437 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:09.437 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:06 GMT\r\n07-27 11:12:09.437 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:09.440 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:09.441 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:09.441 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:09.441 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:09.441 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:09.441 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:14.720 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5278ms)\r\n07-27 11:12:14.721 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:14.721 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:14.721 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:14.721 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:14.721 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:12 GMT\r\n07-27 11:12:14.723 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:14.736 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:14.737 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:14.737 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:14.737 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:14.737 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:14.737 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:19.940 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5202ms)\r\n07-27 11:12:19.940 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:19.940 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:19.940 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:19.941 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:19.941 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:17 GMT\r\n07-27 11:12:19.942 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:19.947 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:19.948 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:19.948 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:19.948 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:19.948 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:19.948 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:25.024 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5075ms)\r\n07-27 11:12:25.024 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:25.024 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:25.025 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:25.025 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=crown-mobile-api-gateway-primary-staging.azurewebsites.net\r\n07-27 11:12:25.025 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:22 GMT\r\n07-27 11:12:25.025 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:25.031 8095-8154/ D/OkHttp: --> GET http/1.1\r\n07-27 11:12:25.031 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:25.031 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:25.032 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:25.032 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:25.032 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:30.380 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5347ms)\r\n07-27 11:12:30.380 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:30.380 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:30.381 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:30.381 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:30.381 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:27 GMT\r\n07-27 11:12:30.381 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:30.390 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:30.392 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:30.393 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:30.393 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:30.393 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:30.393 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:35.604 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5209ms)\r\n07-27 11:12:35.604 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:35.604 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:35.604 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:35.604 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:35.604 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:32 GMT\r\n07-27 11:12:35.605 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:35.612 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:35.612 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:35.613 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:35.613 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:35.613 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:35.613 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:40.848 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5234ms)\r\n07-27 11:12:40.848 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:40.848 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:40.848 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:40.848 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:40.849 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:37 GMT\r\n07-27 11:12:40.849 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:40.853 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:40.853 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:40.854 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:40.854 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:40.854 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:40.854 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:46.057 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5201ms)\r\n07-27 11:12:46.059 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:46.060 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:46.060 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:46.060 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:46.060 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:42 GMT\r\n07-27 11:12:46.061 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:46.068 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:46.068 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:46.068 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:46.068 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:46.069 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:46.069 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:51.575 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5505ms)\r\n07-27 11:12:51.575 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:51.575 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:51.575 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:51.575 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:51.575 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:48 GMT\r\n07-27 11:12:51.576 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:51.584 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:51.584 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:51.584 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:51.584 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:51.585 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:51.585 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:12:56.804 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5218ms)\r\n07-27 11:12:56.804 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:12:56.804 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:12:56.804 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:12:56.804 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:12:56.805 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:53 GMT\r\n07-27 11:12:56.805 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:12:56.809 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:12:56.809 8095-8154/ D/OkHttp: Host: \r\n07-27 11:12:56.809 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:12:56.809 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:12:56.809 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:12:56.810 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:01.905 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5094ms)\r\n07-27 11:13:01.905 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:01.906 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:01.906 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:01.906 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:01.906 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:12:58 GMT\r\n07-27 11:13:01.910 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:01.917 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:01.918 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:01.918 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:01.918 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:01.918 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:01.918 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:07.246 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5326ms)\r\n07-27 11:13:07.246 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:07.246 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:07.247 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:07.247 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:07.249 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:03 GMT\r\n07-27 11:13:07.250 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:07.255 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:07.255 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:07.255 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:07.255 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:07.255 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:07.256 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:12.323 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5066ms)\r\n07-27 11:13:12.323 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:12.323 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:12.324 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:12.324 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:12.325 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:09 GMT\r\n07-27 11:13:12.327 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:12.332 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:12.333 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:12.333 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:12.333 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:12.333 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:12.333 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:17.407 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5073ms)\r\n07-27 11:13:17.408 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:17.408 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:17.408 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:17.408 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:17.408 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:15 GMT\r\n07-27 11:13:17.410 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:17.415 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:17.415 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:17.416 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:17.416 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:17.416 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:17.416 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:22.604 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5186ms)\r\n07-27 11:13:22.604 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:22.604 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:22.604 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:22.605 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:22.605 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:20 GMT\r\n07-27 11:13:22.607 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:22.611 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:22.611 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:22.611 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:22.612 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:22.612 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:22.612 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:27.828 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5215ms)\r\n07-27 11:13:27.828 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:27.828 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:27.828 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:27.828 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:27.828 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:25 GMT\r\n07-27 11:13:27.831 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:27.834 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:27.834 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:27.834 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:27.834 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:27.835 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:27.840 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:33.052 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5211ms)\r\n07-27 11:13:33.053 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:33.053 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:33.053 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:33.054 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:33.054 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:30 GMT\r\n07-27 11:13:33.054 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:33.058 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:33.060 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:33.060 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:33.060 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:33.061 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:33.061 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:38.271 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5209ms)\r\n07-27 11:13:38.271 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:38.271 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:38.271 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:38.271 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:38.272 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:35 GMT\r\n07-27 11:13:38.273 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:38.282 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:38.282 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:38.283 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:38.283 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:38.283 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:38.283 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:44.119 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5835ms)\r\n07-27 11:13:44.119 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:44.119 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:44.119 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:44.120 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:44.120 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:40 GMT\r\n07-27 11:13:44.120 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:44.124 8095-8154/ D/OkHttp: --> GET \r\n07-27 11:13:44.124 8095-8154/ D/OkHttp: Host: \r\n07-27 11:13:44.124 8095-8154/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:44.124 8095-8154/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:44.124 8095-8154/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:44.124 8095-8154/ D/OkHttp: --> END GET\r\n07-27 11:13:49.341 8095-8154/ D/OkHttp: <-- 408 Request Timeout (5216ms)\r\n07-27 11:13:49.342 8095-8154/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:49.342 8095-8154/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:49.343 8095-8154/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:49.343 8095-8154/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:49.343 8095-8154/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:46 GMT\r\n07-27 11:13:49.344 8095-8154/ D/OkHttp: <-- END HTTP (0-byte body)\r\n07-27 11:13:49.551 8095-8344/ D/OkHttp: --> POST \r\n07-27 11:13:49.551 8095-8344/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:49.552 8095-8344/ D/OkHttp: Host: \r\n07-27 11:13:49.552 8095-8344/ D/OkHttp: Connection: Keep-Alive\r\n07-27 11:13:49.552 8095-8344/ D/OkHttp: Accept-Encoding: gzip\r\n07-27 11:13:49.552 8095-8344/ D/OkHttp: User-Agent: okhttp/3.8.1\r\n07-27 11:13:49.553 8095-8344/ D/OkHttp: --> END POST (0-byte body)\r\n07-27 11:13:49.693 8095-8344/ D/OkHttp: <-- 200 OK \r\n07-27 11:13:49.693 8095-8344/ D/OkHttp: Content-Length: 0\r\n07-27 11:13:49.693 8095-8344/ D/OkHttp: Server: Kestrel\r\n07-27 11:13:49.694 8095-8344/ D/OkHttp: X-Powered-By: ASP.NET\r\n07-27 11:13:49.694 8095-8344/ D/OkHttp: Set-Cookie: ARRAffinity=069607630244431a61a4470269e2d62e1af9ee99802f910251aeb39c18aa4c91;Path=/;HttpOnly;Domain=\r\n07-27 11:13:49.694 8095-8344/ D/OkHttp: Date: Thu, 27 Jul 2017 15:13:47 GMT\r\n07-27 11:13:49.694 8095-8344/ D/OkHttp: <-- END HTTP (0-byte body)\r\n```\r\n\r\nIf I change the timeout to 5 seconds it actually works correctly, retries for 5 seconds and then stops. It looks like either the timeout isn't working correct or the retryOnConnectionFailure isn't working", "url": "https://github.com/square/okhttp/issues/3483", "user": "tyczj", "labels": ["bug"], "created": "2017-07-27 15:35:22", "closed": "2017-08-05 21:26:59", "commits": {"21b1d8f7444145c1ab1fab8460cd1f893baff37a": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "0d1163dcded8f234576b478696001dbac7edf5fe": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "21b1d8f7444145c1ab1fab8460cd1f893baff37a", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0d1163dcded8f234576b478696001dbac7edf5fe", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["51ca7c55da6fac733eb08a613c1c614ad2e66b5f"], "nameRev": "0d1163dcded8f234576b478696001dbac7edf5fe tags/parent-3.9.0~48", "commitMessage": "Honor retryOnConnectionFailure on a client request timeout. (#3500)\n\n* Improve variable name in RouteSelector.\r\n\r\n* Honor retryOnConnectionFailure on a client request timeout.\r\n\r\nAlso limit the number of retry attempts. This functionality is\r\nconsistent with how Chrome handles 408's presently.\r\n\r\nCloses: https://github.com/square/okhttp/issues/3483\r\n", "commitDateTime": "2017-08-05 17:26:59", "authoredDateTime": "2017-08-05 17:26:59", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 58, "deletions": 11, "lines": 69}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RouteSelector.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/RetryAndFollowUpInterceptor.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.enqueueRequestTimeoutResponses()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "okhttp3.CallTest.requestBodyRetransmittedOnClientRequestTimeout()", "TOT": 14, "UPD": 5, "INS": 1, "MOV": 8, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.getClientRequestTimeout()", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.disableClientRequestTimeoutRetry()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteSelector.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RouteSelector.next()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RetryAndFollowUpInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(okhttp3.Response)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0d1163dcded8f234576b478696001dbac7edf5fe"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13.0, "deletions": 2.0, "lines": 15.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 2.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection", "okhttp/src/main/java/okhttp3/internal/http"], "changesInPackagesSPOON": ["okhttp3.internal.http.RetryAndFollowUpInterceptor.followUpRequest(okhttp3.Response)", "okhttp3.internal.connection.RouteSelector.next()"]}, {"title": "Android O CastException", "body": "For Android O i noticed such crash in crashlytic,\r\n<pre>Fatal Exception: java.lang.ClassCastException: android.system.UnixSocketAddress cannot be cast to java.net.InetSocketAddress\r\n       at libcore.io.IoBridge.getLocalInetSocketAddress(IoBridge.java:700)\r\n       at libcore.io.IoBridge.connectDetail(IoBridge.java:197)\r\n       at libcore.io.IoBridge.connect(IoBridge.java:138)\r\n       at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:129)\r\n       at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:356)\r\n       at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)\r\n       at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)\r\n       at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)\r\n       at java.net.Socket.connect(Socket.java:616)\r\n       at okhttp3.internal.platform.AndroidPlatform.connectSocket(AndroidPlatform.java:63)\r\n       at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:223)\r\n       at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:149)\r\n       at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:192)\r\n       at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:121)\r\n       at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:100)\r\n       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n       at com.pubnub.api.interceptors.SignatureInterceptor.intercept(SignatureInterceptor.java:32)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)\r\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:135)\r\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n       at java.lang.Thread.run(Thread.java:764)\r\n</pre>\r\nWill this be fixed in new version of library?", "url": "https://github.com/square/okhttp/issues/3438", "user": "TheLester", "labels": ["bug"], "created": "2017-06-29 07:59:20", "closed": "2017-09-25 08:05:26", "commits": {"aed222454743ebe5724d6ad438fafed37956521e": {"commitGHEventType": "referenced", "commitUser": "yschimke"}}, "ttf": 88.00027777777778, "commitsDetails": [{"commitHash": "aed222454743ebe5724d6ad438fafed37956521e", "commitGHEventType": "referenced", "commitUser": "yschimke", "commitParents": ["525db987a553634e3592b18064bbedc5a7ed76c4"], "nameRev": "aed222454743ebe5724d6ad438fafed37956521e tags/list~4", "commitMessage": "Add workaround for https://issuetracker.google.com/issues/63649622 (#3624)\n\n* Add workaround for https://issuetracker.google.com/issues/63649622\r\n\r\nThis fixes #3438\r\n\r\n* Rethrowing the Android O bug CCE as IOException\r\n", "commitDateTime": "2017-09-25 09:05:25", "authoredDateTime": "2017-09-25 10:05:25", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidPlatform.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.connectSocket(java.net.Socket,java.net.InetSocketAddress,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "multithreaded http2 GET occasionally hang", "body": "When running multithreaded HTTP2 GET requests against nginx server, okhttp 3.8.1 occasionally hangs with all client threads stuck with the stacktrace like the one below and no `Http2Connection$ReaderRunnable` thread running. This is on OSX using Oracle java 1.8.0_131 jdk, if this makes any difference.\r\n\r\nThe problem may be related to server [limiting the number of requests using the same connection to 1000](http://nginx.org/en/docs/http/ngx_http_v2_module.html#http2_max_requests), then sending `GOAWAY` frame. But I am not sure how to setup a standalone test for this hypothesis and generally out of ideas how to troubleshoot this further.\r\n\r\n\r\n```\r\n\"pool-1-thread-1\" #27 prio=5 os_prio=31 tid=0x00007fdc1f9bd800 nid=0x8603 in Object.wait() [0x0000700002c18000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(Native Method)\r\n\tat java.lang.Object.wait(Object.java:502)\r\n\tat okhttp3.internal.http2.Http2Stream.waitForIo(Http2Stream.java:577)\r\n\tat okhttp3.internal.http2.Http2Stream.takeResponseHeaders(Http2Stream.java:143)\r\n\t- locked <0x00000003c109ef90> (a okhttp3.internal.http2.Http2Stream)\r\n\tat okhttp3.internal.http2.Http2Codec.readResponseHeaders(Http2Codec.java:120)\r\n\tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:75)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:211)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)\r\n\tat okhttp3.RealCall.execute(RealCall.java:69)\r\n\tat io.takari.generation.aether.connector.OkhttpContentLoader.get(OkhttpContentLoader.java:105)\r\n...\r\n```", "url": "https://github.com/square/okhttp/issues/3422", "user": "ifedorenko", "labels": ["bug"], "created": "2017-06-22 20:45:11", "closed": "2017-08-14 17:45:03", "commits": {"cd22113332cdeeedac8d6bda3297194f983b4aaf": {"commitGHEventType": "closed", "commitUser": "swankjesse"}}, "ttf": 52.000277777777775, "commitsDetails": [{"commitHash": "cd22113332cdeeedac8d6bda3297194f983b4aaf", "commitGHEventType": "closed", "commitUser": "swankjesse", "commitParents": ["7489193d5953bfba8c892e5aa98624e4ec73dbde"], "nameRev": "cd22113332cdeeedac8d6bda3297194f983b4aaf tags/parent-3.9.0~36^2", "commitMessage": "Fix occasional hang with http2 goaway frames\n\nHttp2Connection was dropping headers of healthy streams\nafter GOAWAY frame.\n\nFixes #3422\n\nSigned-off-by: Igor Fedorenko <ifedorenko@salesforce.com>\n", "commitDateTime": "2017-08-14 10:43:14", "authoredDateTime": "2017-08-10 15:41:08", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockResponse.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockResponse", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockResponse.setHeadersDelay(long,java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockResponse.getHeadersDelay(java.util.concurrent.TimeUnit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.sleepIfDelayed(okhttp3.mockwebserver.MockResponse)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.writeHttpResponse(java.net.Socket,okio.BufferedSink,okhttp3.mockwebserver.MockResponse)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.Http2SocketHandler.writeResponse(okhttp3.internal.http2.Http2Stream,okhttp3.mockwebserver.MockResponse)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.concurrentHttp2ConnectionsDeduplicated().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.domainFronting().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.concurrentHttp2ConnectionsDeduplicated().5.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.responseHeadersAfterGoaway()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.headers(boolean,int,int,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cd22113332cdeeedac8d6bda3297194f983b4aaf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 7, "lines": 29, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 16, "UPD": 2, "INS": 8, "MOV": 5, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2", "mockwebserver/src/main/java/okhttp3/mockwebserver"], "changesInPackagesSPOON": ["okhttp3.mockwebserver.MockWebServer.writeHttpResponse(java.net.Socket,okio.BufferedSink,okhttp3.mockwebserver.MockResponse)", "okhttp3.mockwebserver.MockResponse", "okhttp3.mockwebserver.MockWebServer.sleepIfDelayed(okhttp3.mockwebserver.MockResponse)", "okhttp3.mockwebserver.MockResponse.getHeadersDelay(java.util.concurrent.TimeUnit)", "okhttp3.mockwebserver.MockWebServer.Http2SocketHandler.writeResponse(okhttp3.internal.http2.Http2Stream,okhttp3.mockwebserver.MockResponse)", "okhttp3.mockwebserver.MockResponse.setHeadersDelay(long,java.util.concurrent.TimeUnit)", "okhttp3.internal.http2.Http2Connection.ReaderRunnable.headers(boolean,int,int,java.util.List)"]}, {"title": "[Bug report] publicsuffix.gz read crash ", "body": "It seems to occur very rarely\r\nPerhaps glide has canceled it and it seems to be thread interrupted\r\n\r\nuse library\r\n- okhttp3 3.7.0\r\n- glide 3.7.0\r\n\r\nOkHttp Log\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : Failed to read public suffix list\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : java.io.InterruptedIOException: thread interrupted\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.Timeout.throwIfReached(Timeout.java:146)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.Okio$2.read(Okio.java:135)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.RealBufferedSource.request(RealBufferedSource.java:66)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.RealBufferedSource.require(RealBufferedSource.java:59)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.GzipSource.consumeHeader(GzipSource.java:114)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.GzipSource.read(GzipSource.java:73)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.RealBufferedSource.request(RealBufferedSource.java:66)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.RealBufferedSource.require(RealBufferedSource.java:59)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okio.RealBufferedSource.readInt(RealBufferedSource.java:255)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okhttp3.internal.publicsuffix.PublicSuffixDatabase.readTheList(PublicSuffixDatabase.java:288)\r\n06-12 14:29:36.716 17923 18274 W OkHttp  : \tat okhttp3.internal.publicsuffix.PublicSuffixDatabase.findMatchingRule(PublicSuffixDatabase.java:109)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.publicsuffix.PublicSuffixDatabase.getEffectiveTldPlusOne(PublicSuffixDatabase.java:82)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.Cookie.parse(Cookie.java:310)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.Cookie.parse(Cookie.java:218)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.Cookie.parseAll(Cookie.java:444)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.http.HttpHeaders.receiveHeaders(HttpHeaders.java:179)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:95)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:211)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:185)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat okhttp3.RealCall.execute(RealCall.java:69)\r\n06-12 14:29:36.717 17923 18274 W OkHttp  : \tat com.bumptech.glide.integration.okhttp3.OkHttpStreamFetcher.loadData(OkHttpStreamFetcher.java:43)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.integration.okhttp3.OkHttpStreamFetcher.loadData(OkHttpStreamFetcher.java:19)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher.loadData(ImageVideoModelLoader.java:70)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher.loadData(ImageVideoModelLoader.java:53)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.load.engine.DecodeJob.decodeSource(DecodeJob.java:170)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.load.engine.DecodeJob.decodeFromSource(DecodeJob.java:128)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.load.engine.EngineRunnable.decodeFromSource(EngineRunnable.java:122)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.load.engine.EngineRunnable.decode(EngineRunnable.java:101)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.load.engine.EngineRunnable.run(EngineRunnable.java:58)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:428)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat java.lang.Thread.run(Thread.java:761)\r\n06-12 14:29:36.718 17923 18274 W OkHttp  : \tat com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory$1.run(FifoPriorityThreadPoolExecutor.java:118)\r\n\r\n\r\nHttpLoggingInterceptor Log\r\n<-- HTTP FAILED: java.lang.IllegalStateException: Unable to load publicsuffixes.gz resource from the classpath.\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/3404", "user": "in7in7", "labels": ["bug"], "created": "2017-06-13 01:42:48", "closed": "2017-06-15 14:30:59", "commits": {"741811aa73fbcb8ed84e0939f2d87d18331c6fe0": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "741811aa73fbcb8ed84e0939f2d87d18331c6fe0", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": ["c5db5b1a3189f858d1dadccd8845112191cdf880"], "nameRev": "741811aa73fbcb8ed84e0939f2d87d18331c6fe0 tags/parent-3.9.0~71^2", "commitMessage": "Treat reading the public suffix list as uninterruptible.\n\nFixes: https://github.com/square/okhttp/issues/3404\n", "commitDateTime": "2017-06-15 09:05:07", "authoredDateTime": "2017-06-15 08:52:03", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/publicsuffix/PublicSuffixDatabaseTest.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "okhttp/src/main/java/okhttp3/internal/publicsuffix/PublicSuffixDatabase.java", "insertions": 45, "deletions": 23, "lines": 68}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PublicSuffixDatabaseTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.publicsuffix.PublicSuffixDatabaseTest.threadIsInterruptedOnFirstRead()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PublicSuffixDatabase.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.publicsuffix.PublicSuffixDatabase.readTheList()", "TOT": 17, "UPD": 4, "INS": 3, "MOV": 6, "DEL": 4}, {"spoonMethodName": "okhttp3.internal.publicsuffix.PublicSuffixDatabase.readTheListUninterruptibly()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.publicsuffix.PublicSuffixDatabase.findMatchingRule(java.lang.String[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["741811aa73fbcb8ed84e0939f2d87d18331c6fe0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 45, "deletions": 23, "lines": 68, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 20, "UPD": 4, "INS": 5, "MOV": 7, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/publicsuffix"], "changesInPackagesSPOON": ["okhttp3.internal.publicsuffix.PublicSuffixDatabase.readTheListUninterruptibly()", "okhttp3.internal.publicsuffix.PublicSuffixDatabase.readTheList()", "okhttp3.internal.publicsuffix.PublicSuffixDatabase.findMatchingRule(java.lang.String[])"]}, {"title": "Intercepter-logging: wrong protocol for real server using http2", "body": "What kind of issue is this?\r\n - [X] Bug report.\r\n\r\nSummary\r\n- when using OkHttp with an HTTP2 server, the logging generated by logging-interceptor is wrong with regards to the protocol. it prints \"http/1.1\" when in reality it is \"h2\" \r\n(since in line https://github.com/square/okhttp/blob/a94f952d4fd612b649f0e1afbbcd06b7b991765b/okhttp/src/main/java/okhttp3/RealCall.java#L184 the connection is null, the connection will be null in \r\nhttps://github.com/square/okhttp/blob/master/okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java#L154 , thus the result will be \"http/1.1\", which is extremely confusing and wrong.)\r\n\r\n- how to verify this is ? / reproduce this\r\n\r\nCreate a request to a http2 capable server, fire it off, and inspect the Response (there the protocol is set to \"h2\" as expected), and watch the interceptor log \"http/1.1\".\r\n\r\n- Write a failing test:\r\nits properly more a definition of using http1.1 as a default value, instead of saying \"we do not know\". \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/3395", "user": "Tvede-dk", "labels": ["bug"], "created": "2017-06-09 19:30:59", "closed": "2017-08-30 18:04:54", "commits": {"6e8b5f82fa8273385ac1177f38742bcdd52fdaa8": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "16f43b6439df920e04d338bcd5651067e840c1e2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "f13b24ef170625c88aac771e715ada637c44168b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 81.00027777777778, "commitsDetails": [{"commitHash": "6e8b5f82fa8273385ac1177f38742bcdd52fdaa8", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "16f43b6439df920e04d338bcd5651067e840c1e2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["1801d0cb2c7132a97c3e9c011a8546f883dfcf12"], "nameRev": "16f43b6439df920e04d338bcd5651067e840c1e2 tags/parent-3.9.0~24", "commitMessage": "Don't log a protocol when it is unknown. (#3558)\n\nCloses: https://github.com/square/okhttp/issues/3395", "commitDateTime": "2017-08-30 14:04:53", "authoredDateTime": "2017-08-30 14:04:53", "commitGitStats": [{"filePath": "okhttp-logging-interceptor/src/main/java/okhttp3/logging/HttpLoggingInterceptor.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java", "insertions": 47, "deletions": 18, "lines": 65}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpLoggingInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptor.intercept(okhttp3.logging.Chain)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "HttpLoggingInterceptorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.basicPost()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.connectFail()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.basicGet()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.basicResponseBody()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.basicChunkedResponseBody()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersGet()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersPost()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersPostNoContentType()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersPostNoLength()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersResponseBody()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyGet()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyGetNoBody(int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyPost()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyResponseBody()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyResponseBodyChunked()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyResponseNotIdentityEncoded()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyGetMalformedCharset()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.responseBodyIsBinary()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.http2()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.setUp()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f13b24ef170625c88aac771e715ada637c44168b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["16f43b6439df920e04d338bcd5651067e840c1e2"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 3.0, "lines": 7.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9.0, "UPD": 1.0, "INS": 1.0, "MOV": 4.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-logging-interceptor/src/main/java/okhttp3/logging"], "changesInPackagesSPOON": ["okhttp3.logging.HttpLoggingInterceptor.intercept(okhttp3.logging.Chain)"]}, {"title": "A SocketTimeoutException occured after restart the network.", "body": "I created a HTTP/2 connection, this connection remains open in a half-closed state (read time is 1 hour).  After connected, I disable the network and restart. And then, I send a normal request, which was occured a SocketTimeoutException : timeout\r\n\r\n`java.net.SocketTimeoutException: timeout\r\n                                                                     at okhttp3.internal.http2.Http2Stream$StreamTimeout.newTimeoutException(Http2Stream.java:593)\r\n                                                                     at okhttp3.internal.http2.Http2Stream$StreamTimeout.exitAndThrowIfTimedOut(Http2Stream.java:601)\r\n                                                                     at okhttp3.internal.http2.Http2Stream$FramingSink.emitFrame(Http2Stream.java:510)\r\n                                                                     at okhttp3.internal.http2.Http2Stream$FramingSink.write(Http2Stream.java:481)\r\n                                                                     at okio.RealBufferedSink.emitCompleteSegments(RealBufferedSink.java:171)\r\n                                                                     at okio.RealBufferedSink.write(RealBufferedSink.java:85)`", "url": "https://github.com/square/okhttp/issues/3378", "user": "MegatronKing", "labels": ["bug"], "created": "2017-05-27 08:27:50", "closed": "2018-02-18 20:48:22", "commits": {}, "ttf": 267.0002777777778, "commitsDetails": []}, {"title": "[BUG] okhttp3 will raise \"java.io.IOException: Content-Length (x) and stream length (0) disagree\" while parseFrom a HEAD response", "body": "with [rfc2616-sec9.4](https://tools.ietf.org/html/rfc2616#section-9.4):\r\n>The HEAD method is identical to GET except that the server MUST NOT\r\n   return a message-body in the response.\r\n\r\nso, while parsing a HEAD response, the body-stream length will always be 0;\r\n\r\nwith [rfc2616-sec14.13](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13):\r\n>The Content-Length entity-header field indicates the size of the entity-body, in decimal number of OCTETs, sent to the recipient or, in the case of the HEAD method, the size of the entity-body that would have been sent had the request been a GET.\r\n>\r\n >      Content-Length    = \"Content-Length\" \":\" 1*DIGIT\r\n>An example is\r\n>\r\n >     Content-Length: 3495\r\n\r\nso, while parsing a HEAD response,  the \"Content-Length\" header may NOT be 0;\r\n\r\nin okhttp3.ResponseBody#bytes(), line 140 nearby\r\n\r\n    public final byte[] bytes() throws IOException {\r\n        long contentLength = contentLength();\r\n        if (contentLength > Integer.MAX_VALUE) {\r\n            throw new IOException(\"Cannot buffer entire body for content length: \" + contentLength);\r\n        }\r\n\r\n        BufferedSource source = source();\r\n        byte[] bytes;\r\n        try {\r\n            bytes = source.readByteArray();\r\n        } finally {\r\n            Util.closeQuietly(source);\r\n        }\r\n        if (contentLength != -1 && contentLength != bytes.length) {\r\n            throw new IOException(\"Content-Length (\"\r\n            + contentLength\r\n            + \") and stream length (\"\r\n            + bytes.length\r\n            + \") disagree\");\r\n        }\r\n        return bytes;\r\n    }\r\n\r\nso, while okhttp3 receive a HEAD response, there will always raise a java.io.IOException", "url": "https://github.com/square/okhttp/issues/3365", "user": "gaort", "labels": ["bug"], "created": "2017-05-18 09:37:31", "closed": "2017-09-01 21:27:26", "commits": {"7594b02f39d9db39c4f9bb27caf051713a39b977": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "f3122bea1d2d9ae4401e02c8c118676f60d2c321": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "c7caad69cc89cd028251e39a954df18e54d313b0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "33d31d073ee451a3848192a4737cc06ab83cbfd6": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 106.00027777777778, "commitsDetails": [{"commitHash": "7594b02f39d9db39c4f9bb27caf051713a39b977", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f3122bea1d2d9ae4401e02c8c118676f60d2c321", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c7caad69cc89cd028251e39a954df18e54d313b0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "33d31d073ee451a3848192a4737cc06ab83cbfd6", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6663f063e6a7dfbc02985d3a86c36a675347d3ae"], "nameRev": "33d31d073ee451a3848192a4737cc06ab83cbfd6 tags/parent-3.9.0~10", "commitMessage": "Improve handling of HEAD requests with a Content-Length specified. (#3572)\n\nRather than getting the content length from a header on demand, this gets it\r\nat the time that the RealResponseBody is created. This means that HEAD requests\r\ncan have a non-zero Content-Length header while their bodies have no content.\r\n\r\nCloses: https://github.com/square/okhttp/issues/3365", "commitDateTime": "2017-09-01 17:27:26", "authoredDateTime": "2017-09-01 17:27:26", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/BridgeInterceptor.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/RealResponseBody.java", "insertions": 13, "deletions": 7, "lines": 20}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http1/Http1Codec.java", "insertions": 8, "deletions": 11, "lines": 19}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.headResponseContentLengthIsIgnored()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "CacheInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.cache.CacheInterceptor.cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BridgeInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.BridgeInterceptor.intercept(okhttp3.internal.http.Chain)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealResponseBody.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.RealResponseBody", "TOT": 9, "UPD": 6, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.RealResponseBody.contentType()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 3}, {"spoonMethodName": "okhttp3.internal.http.RealResponseBody.contentLength()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "Http1Codec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http1.Http1Codec.openResponseBody(okhttp3.Response)", "TOT": 19, "UPD": 3, "INS": 8, "MOV": 7, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http1.Http1Codec.getTransferStream(okhttp3.Response)", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 10, "DEL": 1}]}, {"spoonFilePath": "Http2Codec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Codec.openResponseBody(okhttp3.Response)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["33d31d073ee451a3848192a4737cc06ab83cbfd6"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 30.0, "deletions": 21.0, "lines": 51.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 62.0, "UPD": 10.0, "INS": 24.0, "MOV": 20.0, "DEL": 8.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2", "okhttp/src/main/java/okhttp3/internal/cache", "okhttp/src/main/java/okhttp3/internal/http1", "okhttp/src/main/java/okhttp3/internal/http"], "changesInPackagesSPOON": ["okhttp3.internal.http1.Http1Codec.getTransferStream(okhttp3.Response)", "okhttp3.internal.http.BridgeInterceptor.intercept(okhttp3.internal.http.Chain)", "okhttp3.internal.cache.CacheInterceptor.cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)", "okhttp3.internal.http.RealResponseBody.contentType()", "okhttp3.internal.http.RealResponseBody.contentLength()", "okhttp3.internal.http.RealResponseBody", "okhttp3.internal.http1.Http1Codec.openResponseBody(okhttp3.Response)", "okhttp3.internal.http2.Http2Codec.openResponseBody(okhttp3.Response)"]}, {"title": "can't use Cookie.Builder for ipv6 address", "body": "I've faced a exception when using ipv6 ip address with Cookie.\r\nI'm using okhttp3 3.6.0 with PresistentCookieJar (https://github.com/franmontiel/PersistentCookieJar).\r\nWhen try to connect directly using ivp6 address ex: 2001:b011:400a:156e:211:32ff:fe0f:c06b\r\nI get a IllegalArgumentException: unexpected domain.\r\n\r\nPresistentCookieJar using Cookie.Builder to create a cookie, set url domain into cookie.\r\nInside builder.domain(), it checks invalidHostname which can not contains \"**:**\"\r\n```\r\n  private static boolean containsInvalidHostnameAsciiCodes(String hostnameAscii) {\r\n    for (int i = 0; i < hostnameAscii.length(); i++) {\r\n      char c = hostnameAscii.charAt(i);\r\n      // The WHATWG Host parsing rules accepts some character codes which are invalid by\r\n      // definition for OkHttp's host header checks (and the WHATWG Host syntax definition). Here\r\n      // we rule out characters that would cause problems in host headers.\r\n      if (c <= '\\u001f' || c >= '\\u007f') {\r\n        return true;\r\n      }\r\n      // Check for the characters mentioned in the WHATWG Host parsing spec:\r\n      // U+0000, U+0009, U+000A, U+000D, U+0020, \"#\", \"%\", \"/\", \":\", \"?\", \"@\", \"[\", \"\\\", and \"]\"\r\n      // (excluding the characters covered above).\r\n      if (\" #%/:?@[\\\\]\".indexOf(c) != -1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n```\r\nref:\r\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/internal/Util.java#L386\r\n\r\nBut ipv6 address contains **colon** anyway.\r\nIs this a bug need to be fixed?\r\nThanks!\r\n", "url": "https://github.com/square/okhttp/issues/3361", "user": "henry74918", "labels": ["bug"], "created": "2017-05-17 09:29:55", "closed": "2017-08-31 02:03:35", "commits": {}, "ttf": 105.00027777777778, "commitsDetails": []}, {"title": "java.lang.InternalError: java.util.MissingResourceException", "body": "There is such a crash reported from our app:\r\n\r\n```\r\nCaused by java.lang.InternalError: java.util.MissingResourceException: Can't find bundle for base name sun.util.logging.resources.logging, locale en_AU\r\n       at java.util.logging.Logger$1.run(Logger.java:1385)\r\n       at java.util.logging.Logger$1.run(Logger.java:1379)\r\n       at java.security.AccessController.doPrivileged(AccessController.java:41)\r\n       at java.util.logging.Logger.findSystemResourceBundle(Logger.java:1378)\r\n       at java.util.logging.Logger.findResourceBundle(Logger.java:1425)\r\n       at java.util.logging.Logger.setupResourceInfo(Logger.java:1523)\r\n       at java.util.logging.Logger.(Logger.java)\r\n       at java.util.logging.Logger.(Logger.java)\r\n       at java.util.logging.LogManager$SystemLoggerContext.demandLogger(LogManager.java:734)\r\n       at java.util.logging.LogManager.demandSystemLogger(LogManager.java:399)\r\n       at java.util.logging.Logger.getPlatformLogger(Logger.java:474)\r\n       at java.util.logging.LoggingProxyImpl.getLogger(LoggingProxyImpl.java:41)\r\n       at sun.util.logging.LoggingSupport.getLogger(LoggingSupport.java:100)\r\n       at sun.util.logging.PlatformLogger$JavaLoggerProxy.(PlatformLogger.java)\r\n       at sun.util.logging.PlatformLogger$JavaLoggerProxy.(PlatformLogger.java)\r\n       at sun.util.logging.PlatformLogger.(PlatformLogger.java)\r\n       at sun.util.logging.PlatformLogger.getLogger(PlatformLogger.java:205)\r\n       at java.net.CookieManager.put(CookieManager.java:262)\r\n       at okhttp3.JavaNetCookieJar.saveFromResponse(SourceFile:47)\r\n       at okhttp3.internal.http.HttpEngine.receiveHeaders(SourceFile:866)\r\n       at okhttp3.internal.http.HttpEngine.readResponse(SourceFile:598)\r\n       at okhttp3.RealCall.getResponse(SourceFile:241)\r\n       at okhttp3.RealCall$ApplicationInterceptorChain.proceed(SourceFile:198)\r\n       at okhttp3.RealCall.getResponseWithInterceptorChain(SourceFile:160)\r\n       at okhttp3.RealCall.execute(SourceFile:57)\r\n```\r\nWe are using okhttp v3.2.0.\r\nAnd the configuration is looks like this:\r\n```java\r\nCookieHandler cookieHandler = new CookieManager(cookieStore, CookiePolicy.ACCEPT_ALL);\r\nOkHttpClient.Builder okHttpBuilder = okHttpClient.newBuilder()\r\n        .cache(cache)\r\n        .cookieJar(new JavaNetCookieJar(cookieHandler))\r\n        .connectTimeout(HTTP_TIMEOUT, TimeUnit.SECONDS)\r\n        .readTimeout(HTTP_TIMEOUT, TimeUnit.SECONDS);\r\nthis.okHttpClient = okHttpBuilder.build();\r\n```\r\n\r\nThis crash is not easy to reproduce.\r\nI'm not sure if it's an OS bug, because it only happens on Android 7 according to our collected data.\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/3334", "user": "mengdd", "labels": ["bug", "needs info"], "created": "2017-05-09 02:50:17", "closed": "2017-08-30 14:48:03", "commits": {}, "ttf": 113.00027777777778, "commitsDetails": []}, {"title": "NetworkOnMainThreadException when calling evictAll() method", "body": "This is what I've done for releasing resources of OKHttp\r\n\r\n `if (okHttpClient != null) {\r\n            if (okHttpClient.dispatcher() != null && okHttpClient.dispatcher().executorService() != null) {\r\n                okHttpClient.dispatcher().executorService().shutdown();  \r\n            }\r\n            if (okHttpClient.connectionPool() != null) {\r\n                okHttpClient.connectionPool().evictAll();               \r\n            }\r\n            try {\r\n                if (okHttpClient.cache() != null) {\r\n                    okHttpClient.cache().close(); \r\n                }\r\n            } catch (IOException e) {\r\n                LOG.info(\"Close okhttp error\" + e.toString());\r\n            }\r\n        }`\r\n\r\n\r\nand this is the log info:\r\n\r\n` android.os.NetworkOnMainThreadException:\r\n android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1148)\r\ncom.android.org.conscrypt.OpenSSLSocketImpl.close(OpenSSLSocketImpl.java:1010)\r\nokhttp3.internal.Util.void closeQuietly(java.net.Socket)(Now:103)\r\nokhttp3.ConnectionPool.void evictAll()(Now:170)\r\ncom.danikula.videocache.HttpUrlSource.void clearConnection()(Now:218) `\r\n\r\n\r\n\r\n", "url": "https://github.com/square/okhttp/issues/3322", "user": "jkangzhang", "labels": ["bug"], "created": "2017-05-05 03:10:43", "closed": "2018-11-03 23:51:05", "commits": {}, "ttf": 547.0002777777778, "commitsDetails": []}, {"title": "IOExceptions can cause infinite retries over HTTP/2", "body": "Stick the following test into `HttpOverHttp2Test` (which I did since it's hard to get tests to do HTTP2 otherwise):\r\n\r\n```java\r\n@Test\r\npublic void errorInterceptorDoesNotInfinitelyRetry() throws Exception {\r\n  OkHttpClient client = this.client.newBuilder()\r\n      .addNetworkInterceptor(new Interceptor() {\r\n        @Override\r\n        public Response intercept(Chain chain) throws IOException {\r\n          throw new IOException(\"Ouch\");\r\n        }\r\n      })\r\n      .build();\r\n\r\n  Call call = client.newCall(new Request.Builder()\r\n      .url(server.url(\"/foo\"))\r\n      .build());\r\n\r\n  call.execute();\r\n}\r\n```\r\n\r\nThe test will never finish execution due to infinite retries.\r\n\r\nThe infinite retry happens in `RetryAndFollowUpInterceptor`. It constantly thinks it's got a recoverable error so it never quits.\r\n\r\nAs far as I can tell, the issue lies in `StreamAllocation.streamFailed()`. Without HTTP2 it sets `route = null`, which means that when you retry the request, you eventually run out of routes to try. Once `StreamAllocation.hasMoreRoutes()` returns false, the request is done.\r\n\r\nHowever, with HTTP2 this never gets set to null, thus it always thinks it has more routes. As a result, an `IOException` can cause infinite retries.", "url": "https://github.com/square/okhttp/issues/3268", "user": "dlew", "labels": ["bug"], "created": "2017-04-04 20:34:48", "closed": "2018-02-18 20:48:11", "commits": {}, "ttf": 320.0002777777778, "commitsDetails": []}, {"title": "HttpUrl.Builder.addQueryParameter is not escaping curly braces which causes Tomcat 8 to reject request", "body": "OkHttp does not properly escape URL query parameters that contain curly braces.\r\n\r\nTomcat 7.0.73+, 8.0.39+, and 8.5.7+ will reject these requests with the following error:\r\n```\r\nMar 20, 2017 2:47:59 PM org.apache.coyote.http11.Http11Processor service\r\nINFO: Error parsing HTTP request header\r\n Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.\r\njava.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986\r\n        at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:471)\r\n        at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:667)\r\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)\r\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)\r\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\nThese are the characters that Tomcat will now reject as part of the URI request line (see org.apache.tomcat.util.http.parser.HttpParser):\r\n```\r\n            if (IS_CONTROL[i] || i > 127 ||\r\n                    i == ' ' || i == '\\\"' || i == '#' || i == '<' || i == '>' || i == '\\\\' ||\r\n                    i == '^' || i == '`'  || i == '{' || i == '|' || i == '}') {\r\n                IS_NOT_REQUEST_TARGET[i] = true;  // reject the character!\r\n```\r\n\r\nTo solve issue, the characters included in HttpUrl.QUERY_COMPONENT_ENCODE_SET may need to be changed.  Here is current definition:\r\n```\r\nstatic final String QUERY_COMPONENT_ENCODE_SET = \" \\\"'<>#&=\";\r\n```\r\n\r\nThese \r\n\r\n", "url": "https://github.com/square/okhttp/issues/3235", "user": "arakelian", "labels": ["bug"], "created": "2017-03-20 20:38:47", "closed": "2018-02-19 18:26:15", "commits": {"4e9119f1d306710b3a083dd666da633710a846a4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "439e7d421a2cc71590591083a171ecbcbaf0d7dd": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "9a7b6715d71ca5588133a659e46460b254d9d98b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 335.0002777777778, "commitsDetails": [{"commitHash": "4e9119f1d306710b3a083dd666da633710a846a4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "439e7d421a2cc71590591083a171ecbcbaf0d7dd", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9a7b6715d71ca5588133a659e46460b254d9d98b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["4c462ff834439f6c9baf8572c7b6395a8df2a0b3"], "nameRev": "9a7b6715d71ca5588133a659e46460b254d9d98b tags/parent-3.10.0~14", "commitMessage": "Encode more characters when using addQueryParameter(). (#3863)\n\nThough it's good for OkHttp to retain the user's provided encoding, we\r\nshould be encoding more characters than we are when the user provides\r\nus with unencoded data.\r\n\r\nCloses: https://github.com/square/okhttp/issues/3235", "commitDateTime": "2018-02-19 13:26:15", "authoredDateTime": "2018-02-19 13:26:15", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java", "insertions": 55, "deletions": 4, "lines": 59}, {"filePath": "okhttp-tests/src/test/java/okhttp3/UrlComponentEncodingTester.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "okhttp/src/main/java/okhttp3/HttpUrl.java", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrlTest.toUriQueryParameterNameSpecialCharacters()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.toUriQueryParameterValueSpecialCharacters()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.queryValueCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.queryCharactersEncodedWhenComposed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.queryCharactersNotReencodedWhenComposedWithAddEncoded()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.queryCharactersNotReencodedWhenParsed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UrlComponentEncodingTester.java", "spoonMethods": [{"spoonMethodName": "okhttp3.UrlComponentEncodingTester.Component", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.UrlComponentEncodingTester.Component.5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrl.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrl", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.addEncodedQueryParameter(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.removeAllEncodedQueryParameters(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a7b6715d71ca5588133a659e46460b254d9d98b"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 4.0, "lines": 9.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 4.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.HttpUrl.Builder.removeAllEncodedQueryParameters(java.lang.String)", "okhttp3.HttpUrl.Builder.addEncodedQueryParameter(java.lang.String,java.lang.String)", "okhttp3.HttpUrl"]}, {"title": "Connection coalescing unreliable due to DNS overlaps", "body": "I\u2019m attempting to confirm that HTTP/2 connection coalescing is working properly, but I\u2019m finding that depending on which DNS I don\u2019t see consistent coalescing.\r\n\r\nI wrote this program to print intersections:\r\n```\r\n    Map<String, List<String>> addressToHostnames = new TreeMap<>();\r\n    List<String> hostnames = immutableList(\r\n        \"graph.facebook.com\",\r\n        \"www.facebook.com\",\r\n        \"fb.com\",\r\n        \"messenger.com\",\r\n        \"m.facebook.com\",\r\n        \"www.google.com\",\r\n        \"google.com\",\r\n        \"google.ca\",\r\n        \"twitter.com\",\r\n        \"api.twitter.com\"\r\n    );\r\n    for (String hostname : hostnames) {\r\n      List<InetAddress> addresses = Dns.SYSTEM.lookup(hostname);\r\n      for (InetAddress address : addresses) {\r\n        List<String> addressHostnames = addressToHostnames.computeIfAbsent(\r\n            address.getHostAddress(), k -> new ArrayList<>());\r\n        addressHostnames.add(hostname);\r\n      }\r\n    }\r\n    for (Map.Entry<String, List<String>> entry : addressToHostnames.entrySet()) {\r\n      if (entry.getValue().size() > 1) {\r\n        System.out.println(entry.getValue().size() + \": \" + entry);\r\n      }\r\n    }\r\n```\r\n\r\nOn my residential internet results are mixed. Here\u2019s some runs:\r\n```\r\n2: 2a03:2880:f127:83:face:b00c:0:25de=[www.facebook.com, fb.com]\r\n```\r\n\r\n```\r\n2: 2a03:2880:f127:83:face:b00c:0:25de=[www.facebook.com, fb.com]\r\n2: 31.13.74.36=[www.facebook.com, fb.com]\r\n```\r\n\r\n```\r\n2: 157.240.2.20=[graph.facebook.com, messenger.com]\r\n2: 2a03:2880:f127:83:face:b00c:0:25de=[www.facebook.com, fb.com]\r\n2: 31.13.74.36=[www.facebook.com, fb.com]\r\n```\r\n\r\n```\r\n2: 2a03:2880:f027:13:face:b00c:0:2=[graph.facebook.com, messenger.com]\r\n2: 2a03:2880:f127:83:face:b00c:0:25de=[www.facebook.com, fb.com]\r\n2: 31.13.74.36=[www.facebook.com, fb.com]\r\n```\r\n\r\nVia Square\u2019s VPN I get this:\r\n\r\n```\r\n2: 31.13.76.102=[graph.facebook.com, messenger.com]\r\n```\r\n\r\nVia LTE I get this:\r\n\r\n```\r\n2: 2a03:2880:f00b:1:face:b00c:0:1=[graph.facebook.com, messenger.com]\r\n2: 2a03:2880:f10b:83:face:b00c:0:25de=[www.facebook.com, fb.com]\r\n2: 31.13.74.1=[graph.facebook.com, messenger.com]\r\n2: 31.13.74.36=[www.facebook.com, fb.com]\r\n```\r\n\r\nI\u2019m unsure what action to take here, if any.", "url": "https://github.com/square/okhttp/issues/3226", "user": "swankjesse", "labels": ["bug"], "created": "2017-03-18 15:47:09", "closed": "2020-03-29 18:16:58", "commits": {}, "ttf": 1107.0002777777777, "commitsDetails": []}, {"title": "Attempt to invoke virtual method 'void java.util.Calendar.setLenient(boolean)' on a null object reference", "body": "It happened in version 3.1.2.\r\n```\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'void java.util.Calendar.setLenient(boolean)' on a null object reference\r\n\tat java.text.DateFormat.setLenient(DateFormat.java:659)\r\n\tat okhttp3.internal.http.HttpDate$1.initialValue(HttpDate.java:42)\r\n\tat okhttp3.internal.http.HttpDate$1.initialValue(HttpDate.java:38)\r\n\tat java.lang.ThreadLocal$Values.getAfterMiss(ThreadLocal.java:430)\r\n\tat java.lang.ThreadLocal.get(ThreadLocal.java:65)\r\n\tat okhttp3.internal.http.HttpDate.format(HttpDate.java:114)\r\n\tat okhttp3.Cookie.toString(Cookie.java:542)\r\n```\r\n\r\nWhen i configured `cookieJar` overriding `loadForRequest` method  to print cookie using `item.toString()` , it happended.\r\n\r\nMy code:\r\n\r\n```\r\n        mOkHttpClient = new OkHttpClient.Builder()\r\n                .connectTimeout(CONNECT_TIMIE_OUT, TimeUnit.SECONDS)\r\n                .writeTimeout(WRITE_TIME_OUT, TimeUnit.SECONDS)\r\n                .readTimeout(READ_TIME_OUT, TimeUnit.SECONDS)\r\n                .cookieJar(new CookieJar() {\r\n                    private final PersistentCookieStore cookieStore = new PersistentCookieStore(AppContext.getInstance());\r\n\r\n                    @Override\r\n                    public void saveFromResponse(HttpUrl url, List<Cookie> cookies) {\r\n                        if (cookies != null && cookies.size() > 0) {\r\n                            LogUtil.d(TAG, \"saveCookie:\");\r\n                            for (Cookie item : cookies) {\r\n                                cookieStore.add(url, item);\r\n                                if (item != null) {\r\n                                    LogUtil.d(TAG, \"cookie:\" + item.toString());\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public List<Cookie> loadForRequest(HttpUrl url) {\r\n                        LogUtil.d(TAG, \"loadCookie:\");\r\n                        List<Cookie> cookies = cookieStore.get(url);\r\n                        for (Cookie item : cookies) {\r\n                            if (item != null) {\r\n                                LogUtil.d(TAG, \"cookie:\" + item.toString());\r\n                            }\r\n                        }\r\n                        return cookies;\r\n                    }\r\n                })\r\n                .build();\r\n```", "url": "https://github.com/square/okhttp/issues/3221", "user": "isanwenyu", "labels": ["bug", "needs info"], "created": "2017-03-14 07:57:57", "closed": "2017-03-20 10:42:29", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "PUT that results in 204 No Content doesn't invalidate the cache for subsequent GETs", "body": "It looks like the cache invalidation via `PUT` is not working if the server responds with `204 no content`. However if the response for the `PUT` is `200 OK` + body the cache for the affected resource is invalidated. This leads to a state were the client gets an old representation for a resource he just updated on the server.\r\n\r\nI think i found the relevant parts while debugging this behavior:\r\n- cache is only written for responses that have a body:\r\n  - https://github.com/square/okhttp/blob/89621df62dda5cf73726ce2d5410c82c6f760f00/okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.java#L128-L131\r\n- the `cache.put(Response)` also seems to be indirectly responsible to invalidate other cached responses\r\n  - https://github.com/square/okhttp/blob/89621df62dda5cf73726ce2d5410c82c6f760f00/okhttp/src/main/java/okhttp3/Cache.java#L220-L230 \r\n", "url": "https://github.com/square/okhttp/issues/3203", "user": "awenger", "labels": ["bug"], "created": "2017-03-02 21:30:20", "closed": "2017-04-15 20:34:21", "commits": {"a9ba891caa7cff2fcbb456536f259ed14af51c67": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "c9496d350c0c3bb4b9d9571c3ab97181726561e2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "a9ba891caa7cff2fcbb456536f259ed14af51c67", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c9496d350c0c3bb4b9d9571c3ab97181726561e2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6ae275803d8bee514d8850aa93d7deb9a8136cce"], "nameRev": "c9496d350c0c3bb4b9d9571c3ab97181726561e2 tags/parent-3.7.0~6^2", "commitMessage": "Invalidate the cache even if the response has no body.\n\nCloses: https://github.com/square/okhttp/issues/3203\n", "commitDateTime": "2017-04-15 13:25:03", "authoredDateTime": "2017-04-15 13:08:46", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CacheTest.java", "insertions": 37, "deletions": 10, "lines": 47}, {"filePath": "okhttp/src/main/java/okhttp3/CookieJar.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.java", "insertions": 14, "deletions": 23, "lines": 37}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Settings.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.putInvalidatesWithNoContentResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CookieJar.java", "spoonMethods": []}, {"spoonFilePath": "CacheInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.cache.CacheInterceptor.intercept(okhttp3.internal.cache.Chain)", "TOT": 11, "UPD": 2, "INS": 3, "MOV": 4, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.cache.CacheInterceptor.maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "Settings.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c9496d350c0c3bb4b9d9571c3ab97181726561e2"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15.0, "deletions": 25.0, "lines": 40.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 14.0, "UPD": 2.0, "INS": 3.0, "MOV": 6.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/internal/cache", "okhttp/src/main/java/okhttp3/internal/http2"], "changesInPackagesSPOON": ["okhttp3.internal.cache.CacheInterceptor.maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache)", "okhttp3.internal.cache.CacheInterceptor.intercept(okhttp3.internal.cache.Chain)"]}, {"title": "Attempt to invoke virtual method 'okio.Timeout okio.Timeout.clearDeadline()' on a null object reference", "body": "I use OKhttp 3.5.0, often crashes.\r\n\r\n![1](https://cloud.githubusercontent.com/assets/17741114/23495767/82bc5916-ff55-11e6-8816-3ae2e7351d73.jpeg)\r\n\r\n\r\nThe above is the error log\uff01", "url": "https://github.com/square/okhttp/issues/3200", "user": "lizhw123", "labels": ["bug", "needs info"], "created": "2017-03-02 06:36:02", "closed": "2017-03-20 01:23:55", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "A resource was acquired at attached stack trace but never released", "body": "A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\r\n```\r\njava.lang.Throwable: Explicit termination method 'close' not called\r\nat dalvik.system.CloseGuard.open(CloseGuard.java:180)\r\nat java.io.FileOutputStream.<init>(FileOutputStream.java:89)\r\nat okio.Okio.appendingSink(Okio.java:185)\r\nat okhttp3.internal.io.FileSystem$1.appendingSink(FileSystem.java:59)\r\nat okhttp3.internal.cache.DiskLruCache.newJournalWriter(DiskLruCache.java:310)\r\nat okhttp3.internal.cache.DiskLruCache.readJournal(DiskLruCache.java:302)\r\nat okhttp3.internal.cache.DiskLruCache.initialize(DiskLruCache.java:229)\r\nat okhttp3.internal.cache.DiskLruCache.get(DiskLruCache.java:431)\r\nat okhttp3.Cache.get(Cache.java:194)\r\nat okhttp3.Cache$1.get(Cache.java:144)\r\nat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:70)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:124)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat com.xiangkan.android.base.http.CommonInterceptor.intercept(CommonInterceptor.java:53)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat com.xiangkan.android.base.http.CacheInterceptor.intercept(CacheInterceptor.java:24)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:212)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\nat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\nat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:170)\r\nat okhttp3.RealCall.access$100(RealCall.java:33)\r\nat okhttp3.RealCall$AsyncCall.execute(RealCall.java:120)\r\nat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\nat java.lang.Thread.run(Thread.java:818)\r\n```", "url": "https://github.com/square/okhttp/issues/3174", "user": "ytrjp", "labels": ["bug"], "created": "2017-02-21 06:43:20", "closed": "2020-03-29 18:32:32", "commits": {}, "ttf": 1132.0002777777777, "commitsDetails": []}, {"title": "java.lang.IllegalArgumentException: Unexpected code point: d83d", "body": "The app crashes while calling  'execute' method of Call.\r\n\r\n```\r\njava.lang.IllegalArgumentException: Unexpected code point: d83d\r\n\tat okio.Buffer.a(SourceFile:925)\r\n\tat okhttp3.HttpUrl.a(SourceFile:1851)\r\n\tat okhttp3.HttpUrl.a(SourceFile:1820)\r\n\tat okhttp3.HttpUrl.a(SourceFile:1867)\r\n\tat okhttp3.HttpUrl$Builder.a(SourceFile:1133)\r\n\tat retrofit2.RequestBuilder.b(SourceFile:159)\r\n\tat retrofit2.ParameterHandler$Query.a(SourceFile:109)\r\n\tat retrofit2.ServiceMethod.a(SourceFile:109)\r\n\tat retrofit2.OkHttpCall.g(SourceFile:178)\r\n\tat retrofit2.OkHttpCall.a(SourceFile:162)\r\n\tat retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.a(SourceFile:89)\r\n\r\n```\r\nI'am using okhttp 3.5.0 and okio 1.11.0. It's a bug or incorrect use of api? Better to handle it by 'catch'?\r\n\r\nMost problem devices are HTC ONE, HTC Desire 626G, HTC Desire 820G, but there are another manufactures.", "url": "https://github.com/square/okhttp/issues/3171", "user": "iglaweb", "labels": ["bug"], "created": "2017-02-20 08:13:50", "closed": "2017-04-15 15:37:43", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "Disk caching doesn't work when using BitmapFactory.decodeStream() with GIFs", "body": "It looks like when using OkHttp to hit an url that will return a GIF file, and then consuming the returned stream with `BitmapFactory.decodeStream()` the file won't be cached into disk.\r\n\r\nIf I understand correctly the way `okhttp3.internal.cache.CacheInterceptor` works, it will use a `okio.ForwardingSink` to communicate the stream interactions to the `okhttp3.Cache` class, in order to signal its `DiskLruCache.Editor` to `commit()` to disk the stream that has just been exhausted and closed.\r\n\r\nThe problem seems to arise when consuming a GIF stream with `BitmapFactory.decodeStream()` which will load a single frame and very likely doesn't bother reading more than header+first frame from the stream, thus never triggering okhttp cache to write all the bytes to disk.\r\n\r\nIs there any way to work around this or signal OkHttp to forcefully write its stream to disk cache?\r\n\r\nI worked around this issue by writing this hacky Interceptor:\r\n\r\n```java\r\n/**\r\n * This interceptor is helpful if you want to force OkHttp to write the response to disk cache\r\n * immediately after receiving it (instead of waiting for the response body stream to be consumed).\r\n * Ideally it should only be used as a network interceptor (since application interceptors also\r\n * intercept when fetching from cache)\r\n */\r\npublic class DiskCacheEnforcerOkHttpInterceptor implements Interceptor {\r\n    @Override\r\n    public Response intercept(Chain chain) throws IOException {\r\n        Response response = chain.proceed(chain.request());\r\n        Logger.verbose(\"Flushing OkHttp Response bytes to force disk caching.\");\r\n        // by calling response.body().bytes() we force the stream to be consumed and thus cached to disk\r\n        ResponseBody newResponseBody = ResponseBody.create(response.body().contentType(), response.body().bytes());\r\n        return response.newBuilder().body(newResponseBody).build();\r\n    }\r\n}\r\n```", "url": "https://github.com/square/okhttp/issues/3152", "user": "murki", "labels": ["bug"], "created": "2017-02-03 19:16:56", "closed": "2017-04-30 17:48:48", "commits": {}, "ttf": 85.00027777777778, "commitsDetails": []}, {"title": "java.net.SocketTimeoutException from HTTP/2 connection leaves dead okhttp clients in pool", "body": "Tried writing a unit test w/ TestButler on Android w/ no luck, so I'll write up the steps to reproduce this and include some sample code.  This happens if you connect to an HTTP/2 server and your network goes down while the okhttp client is connected to it:\r\n1) create an okhttp client\r\n2) tell it to read from the HTTP/2 server\r\n3) bring the network down\r\n4) tell it to read from the HTTP/2 server (it'll get a SocketTimeoutException)\r\n5) bring the network back up\r\n6) tell it to read from the HTTP/2 server again (it'll be stuck w/ SocketTimeoutExceptions)\r\n7) if you create new http clients at this point, it'll work, but the dead http client will eventually come back in the pool and fail.\r\n\r\nokhttp client should attempt to reopen the HTTP/2 connection instead of being stuck in this state\r\n\r\nCode sample for Android (create a trivial view w/ a button and a textview):\r\n\r\n```\r\npublic class MainActivity extends AppCompatActivity {\r\n    OkHttpClient okhttpClient = new OkHttpClient();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Button loadButton = (Button) findViewById(R.id.loadButton);\r\n        TextView outputView = (TextView) findViewById(R.id.outputView);\r\n\r\n        loadButton.setOnClickListener(view -> Observable.fromCallable(() -> {\r\n                    Request request = new Request.Builder()\r\n                            .url(<INSERT URL TO YOUR HTTP/2 SERVER HERE>)\r\n                            .build();\r\n\r\n                    Response response = okhttpClient.newCall(request).execute();\r\n\r\n                    return response.body().string();\r\n                })\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(outputView::setText, t -> outputView.setText(t.toString()))\r\n        );\r\n    }\r\n}\r\n\r\n```", "url": "https://github.com/square/okhttp/issues/3146", "user": "kenyee", "labels": ["bug"], "created": "2017-01-31 16:46:25", "closed": "2020-01-08 12:50:40", "commits": {"f14ac62e0472edd44707f34ac65ce24f68e76d30": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "5d37671fd155948b0ed5b85585d5c0e15398c10e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "eeea691eb79caa357805c7cd92ebfffa5f1aa371": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "3882fdc9436cbfea4d2e57233f420f39eeab470f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "b5efb41a636154cb8bbc7c5ea3c8244090692d28": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "1b7102b9870d3622226878e320093b0f76ee0407": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "6a9a64c8f131b33bdd9b7077ce4e2456db0dcd19": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "2f77691ad5f0210b499a8ce08bd50ff1bea6fe96": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "1870c1bb1a7b46eb6c5ed0be78b02d1789aba7f3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 1071.0002777777777, "commitsDetails": [{"commitHash": "f14ac62e0472edd44707f34ac65ce24f68e76d30", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5d37671fd155948b0ed5b85585d5c0e15398c10e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "eeea691eb79caa357805c7cd92ebfffa5f1aa371", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ab7b5d44903c898fb30a01bd38ca9e876badb083"], "nameRev": "eeea691eb79caa357805c7cd92ebfffa5f1aa371 tags/parent-4.3.0~89^2", "commitMessage": "TaskRunner, an abstraction over ExecutorService\n\nI want to tighten up our executors for a few reasons\n - Fix daemon vs. non-daemon problems\n - Fix code unloading problems\n - Be able to wait for async work to complete in tearDown()\n - Fewer threads for pongs, acks, and window updates\n\nThis shouldn't be too much to layer on top of ExecutorService, but\nit is not easy to do with those APIs alone.\n\nThe underlying motivation is to make scheduling work easier in\nHttp2Connection, which will help with differentiating between\ndead streams and dead connections.\n\nhttps://github.com/square/okhttp/issues/3146\n", "commitDateTime": "2019-09-16 20:35:42", "authoredDateTime": "2019-09-15 12:48:42", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/concurrent/Task.kt", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "okhttp/src/main/java/okhttp3/internal/concurrent/TaskQueue.kt", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "okhttp/src/main/java/okhttp3/internal/concurrent/TaskRunner.kt", "insertions": 38, "deletions": 0, "lines": 38}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3882fdc9436cbfea4d2e57233f420f39eeab470f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b5efb41a636154cb8bbc7c5ea3c8244090692d28", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6d10746cd549e538069b15f11efe751615e75fde"], "nameRev": "b5efb41a636154cb8bbc7c5ea3c8244090692d28 tags/parent-4.3.0~19^2", "commitMessage": "Degrade connections after a timeout\n\nThis is based roughly on the 'Degraded Connections' proposal here\nhttps://github.com/square/okhttp/issues/3146#issuecomment-471196032\n\nI'm using 1000 ms instead of 500 ms. That's about the cost of a (slow)\nTLS handshake, which is what callers would need to do if we degrade\nunnecessarily.\n", "commitDateTime": "2019-12-08 15:55:28", "authoredDateTime": "2019-12-08 15:48:46", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.kt", "insertions": 94, "deletions": 23, "lines": 117}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.kt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 57, "deletions": 33, "lines": 90}, {"filePath": "okhttp/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 89, "deletions": 0, "lines": 89}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.unexpectedPingIsNotReturned()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientPingsServer()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readTimesOut()", "TOT": 19, "UPD": 3, "INS": 14, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.peerSetsZeroFlowControl()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.receiveGoAwayHttp2()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCreatesStreamAndServerReplies()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverFinishesStreamWithHeaders()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverWritesTrailersAndClientReadsTrailers()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCannotReadTrailersWithoutExhaustingStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCannotReadTrailersIfTheStreamFailed()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverCannotEnqueueTrailersAfterFinishingTheStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.noTrailersFrameYieldsEmptyTrailers()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverReadsHeadersDataHeaders()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCreatesStreamAndServerRepliesWithFin()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverClosesClientOutputStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverClosesClientInputStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.remoteDoubleSynReply()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.receiveGoAway()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.sendGoAway()", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 5}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.writeTimesOutAwaitingStreamWindow()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.writeTimesOutAwaitingConnectionWindow()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.headers()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readMultipleSetsOfResponseHeaders()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.streamTimeoutDegradesConnectionAfterNoPong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.oneStreamTimeoutDoesNotBreakConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1b7102b9870d3622226878e320093b0f76ee0407", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6a9a64c8f131b33bdd9b7077ce4e2456db0dcd19", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ddc44ec093ad47e6d4504276fbc284aef4bca68e"], "nameRev": "6a9a64c8f131b33bdd9b7077ce4e2456db0dcd19 tags/parent-3.14.5~1^2", "commitMessage": "Degrade connections after a timeout (3.14.x branch)\n\nThis is a manual cherry-pick of 09da07c2c8981f88346adb818ce42512d9f2f288\n\nSee also the degraded connections proposal.\nhttps://github.com/square/okhttp/issues/3146#issuecomment-471196032\n", "commitDateTime": "2020-01-01 23:09:45", "authoredDateTime": "2020-01-01 21:17:31", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 56, "deletions": 31, "lines": 87}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 91, "deletions": 20, "lines": 111}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.serveConnection(java.net.Socket).4.processConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientPingsServer()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.unexpectedPingIsNotReturned()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readTimesOut()", "TOT": 19, "UPD": 3, "INS": 14, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.peerSetsZeroFlowControl()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.receiveGoAwayHttp2()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCreatesStreamAndServerReplies()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverFinishesStreamWithHeaders()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverWritesTrailersAndClientReadsTrailers()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCannotReadTrailersWithoutExhaustingStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCannotReadTrailersIfTheStreamFailed()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverCannotEnqueueTrailersAfterFinishingTheStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.noTrailersFrameYieldsEmptyTrailers()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverReadsHeadersDataHeaders()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCreatesStreamAndServerRepliesWithFin()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverClosesClientOutputStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverClosesClientInputStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.remoteDoubleSynReply()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.receiveGoAway()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.sendGoAway()", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 5}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.writeTimesOutAwaitingStreamWindow()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.writeTimesOutAwaitingConnectionWindow()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.headers()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readMultipleSetsOfResponseHeaders()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.streamTimeoutDegradesConnectionAfterNoPong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.oneStreamTimeoutDoesNotBreakConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExchangeFinder.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(int,int,int,int,boolean,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RealConnection.isHealthy(boolean)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection", "TOT": 14, "UPD": 3, "INS": 10, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.isShutdown()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writePing(boolean,int,int)", "TOT": 19, "UPD": 5, "INS": 1, "MOV": 12, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushDataLater(int,okio.BufferedSource,int,boolean).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushResetLater(int,okhttp3.internal.http2.ErrorCode).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushRequestLater(int,java.util.List).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushHeadersLater(int,java.util.List,boolean).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writePingAndAwaitPong()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.awaitPong()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.ping(boolean,int,int)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushExecutorExecute(okhttp3.internal.NamedRunnable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.IntervalPingRunnable", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writePing()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.sendDegradedPingLater()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Stream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Stream.StreamTimeout.timedOut()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2f77691ad5f0210b499a8ce08bd50ff1bea6fe96", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1870c1bb1a7b46eb6c5ed0be78b02d1789aba7f3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["01bc2a84269bf2776f92b237d11339ee7256f1b4"], "nameRev": "1870c1bb1a7b46eb6c5ed0be78b02d1789aba7f3 tags/parent-3.12.7~1^2", "commitMessage": "Degrade connections after a timeout (3.12.x branch)\n\nThis is a cherry-pick of 6a9a64c8f131b33bdd9b7077ce4e2456db0dcd19\n\nSee also the degraded connections proposal.\nhttps://github.com/square/okhttp/issues/3146#issuecomment-471196032\n", "commitDateTime": "2020-01-02 22:07:04", "authoredDateTime": "2020-01-01 21:17:31", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 64, "deletions": 29, "lines": 93}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 91, "deletions": 20, "lines": 111}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.serveConnection(java.net.Socket).3.processConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readTimesOut()", "TOT": 22, "UPD": 4, "INS": 15, "MOV": 1, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientPingsServer()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.unexpectedPingIsNotReturned()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.peerSetsZeroFlowControl()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.receiveGoAwayHttp2()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCreatesStreamAndServerReplies()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientReadsHeadersDataHeadersData()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientReadsHeadersDataPingPongHeadersData()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientReadsHeadersDataHeadersClose()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverReadsHeadersDataHeaders()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCreatesStreamAndServerRepliesWithFin()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverClosesClientOutputStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.serverClosesClientInputStream()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.remoteDoubleSynReply()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.receiveGoAway()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.sendGoAway()", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 5}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.writeTimesOutAwaitingStreamWindow()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.writeTimesOutAwaitingConnectionWindow()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.headers()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readMultipleSetsOfResponseHeaders()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.streamTimeoutDegradesConnectionAfterNoPong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.oneStreamTimeoutDoesNotBreakConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RealConnection.isHealthy(boolean)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "StreamAllocation.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.findHealthyConnection(int,int,int,int,boolean,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Connection", "TOT": 14, "UPD": 3, "INS": 10, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.isShutdown()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writePing(boolean,int,int)", "TOT": 19, "UPD": 5, "INS": 1, "MOV": 12, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushDataLater(int,okio.BufferedSource,int,boolean).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushResetLater(int,okhttp3.internal.http2.ErrorCode).6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushRequestLater(int,java.util.List).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushHeadersLater(int,java.util.List,boolean).4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writePingAndAwaitPong()", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.awaitPong()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.ReaderRunnable.ping(boolean,int,int)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.pushExecutorExecute(okhttp3.internal.NamedRunnable)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.IntervalPingRunnable", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.writePing()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Connection.sendDegradedPingLater()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Stream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Stream.StreamTimeout.timedOut()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eeea691eb79caa357805c7cd92ebfffa5f1aa371", "b5efb41a636154cb8bbc7c5ea3c8244090692d28", "6a9a64c8f131b33bdd9b7077ce4e2456db0dcd19", "1870c1bb1a7b46eb6c5ed0be78b02d1789aba7f3"], "filteredCommitsReason": {"duplicated": 5, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 428.0, "deletions": 68.0, "lines": 496.0, "gitFilesChange": 13}, "spoonStatsSummary": {"TOT": 132.0, "UPD": 26.0, "INS": 46.0, "MOV": 46.0, "DEL": 14.0, "spoonFilesChanged": 6, "spoonMethodsChanged": 20}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/okhttp3/mockwebserver", "okhttp/src/main/java/okhttp3/internal/http2", "okhttp/src/main/java/okhttp3/internal/connection", "okhttp/src/main/java/okhttp3/internal/concurrent/Task.kt", "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.kt", "okhttp/src/main/java/okhttp3/internal/concurrent/TaskRunner.kt", "okhttp/src/main/java/okhttp3/internal/concurrent/TaskQueue.kt", "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.kt", "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.kt", "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.kt"], "changesInPackagesSPOON": ["okhttp3.internal.http2.Http2Connection.writePing()", "okhttp3.internal.http2.Http2Connection.writePing(boolean,int,int)", "okhttp3.internal.http2.Http2Stream.StreamTimeout.timedOut()", "okhttp3.internal.connection.RealConnection.isHealthy(boolean)", "okhttp3.internal.http2.Http2Connection.pushDataLater(int,okio.BufferedSource,int,boolean).5", "okhttp3.internal.http2.Http2Connection", "okhttp3.internal.http2.Http2Connection.pushRequestLater(int,java.util.List).3", "okhttp3.internal.http2.Http2Connection.sendDegradedPingLater()", "okhttp3.internal.http2.Http2Connection.pushExecutorExecute(okhttp3.internal.NamedRunnable)", "okhttp3.internal.http2.Http2Connection.writePingAndAwaitPong()", "okhttp3.internal.http2.Http2Connection.IntervalPingRunnable", "okhttp3.internal.http2.Http2Connection.awaitPong()", "okhttp3.internal.http2.Http2Connection.ReaderRunnable.ping(boolean,int,int)", "okhttp3.internal.http2.Http2Connection.pushResetLater(int,okhttp3.internal.http2.ErrorCode).6", "okhttp3.internal.http2.Http2Connection.pushHeadersLater(int,java.util.List,boolean).4", "okhttp3.internal.http2.Http2Connection.isShutdown()", "okhttp3.internal.connection.StreamAllocation.findHealthyConnection(int,int,int,int,boolean,boolean)", "okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(int,int,int,int,boolean,boolean)", "okhttp3.mockwebserver.MockWebServer.serveConnection(java.net.Socket).4.processConnection()", "okhttp3.mockwebserver.MockWebServer.serveConnection(java.net.Socket).3.processConnection()"]}, {"title": "Flaky test: Okio segment corruption in test suite", "body": "https://s3.amazonaws.com/archive.travis-ci.org/jobs/195959863/log.txt\r\n\r\nNot sure what caused this, but an NPE in Okio.write usually indicates that a segment was recycled in a bad racy way.\r\n\r\nUncaught exception in OkHttp thread \"OkHttp Dispatcher\"\r\njava.lang.NullPointerException\r\n\tat okio.Okio$1.write(Okio.java:77)\r\n\tat okio.AsyncTimeout$1.write(AsyncTimeout.java:179)\r\n\tat okio.RealBufferedSink.flush(RealBufferedSink.java:216)\r\n\tat okhttp3.internal.http1.Http1Codec.finishRequest(Http1Codec.java:166)\r\n\tat okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:64)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:120)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.internal.ws.WebSocketHttpTest$1.intercept(WebSocketHttpTest.java:67)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\r\n\tat okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\r\n\tat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:179)\r\n\tat okhttp3.RealCall$AsyncCall.execute(RealCall.java:129)\r\n\tat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nLast test to start was: serverMessage(okhttp3.internal.ws.WebSocketHttpTest)\r\n", "url": "https://github.com/square/okhttp/issues/3138", "user": "swankjesse", "labels": ["bug"], "created": "2017-01-27 19:24:59", "closed": "2017-09-01 16:40:00", "commits": {"ad125421c6e275a82b61bf9ecc8bdbd16830cf0d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ce958eae5d7627696617b2c272bc0434b2320dd8": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "6f029dd3de6903aedc680375106b459e406874c9": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 216.00027777777777, "commitsDetails": [{"commitHash": "ad125421c6e275a82b61bf9ecc8bdbd16830cf0d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ce958eae5d7627696617b2c272bc0434b2320dd8", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6f029dd3de6903aedc680375106b459e406874c9", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["9f8200d1e0f79649d0c5d55db669971f35322ea9"], "nameRev": "6f029dd3de6903aedc680375106b459e406874c9 tags/parent-3.9.0~14", "commitMessage": "Fix MockWebServer websockets to be thread safe. (#3567)\n\nClosing the sink while another thread is writing the sink is a\r\npotential source for races.\r\n\r\nCloses: https://github.com/square/okhttp/issues/3138", "commitDateTime": "2017-08-31 21:33:47", "authoredDateTime": "2017-08-31 21:33:47", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketHttpTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.serveConnection(java.net.Socket).3.processConnection()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,okhttp3.mockwebserver.RecordedRequest,okhttp3.mockwebserver.MockResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "WebSocketHttpTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.webSocketAndApplicationInterceptors().6.intercept(okhttp3.internal.ws.Chain)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6f029dd3de6903aedc680375106b459e406874c9"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0.0, "deletions": 3.0, "lines": 3.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/okhttp3/mockwebserver"], "changesInPackagesSPOON": ["okhttp3.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,okhttp3.mockwebserver.RecordedRequest,okhttp3.mockwebserver.MockResponse)", "okhttp3.mockwebserver.MockWebServer.serveConnection(java.net.Socket).3.processConnection()"]}, {"title": "SecurityException: Failed to read sufficient bytes from /dev/urandom", "body": "In our app we are using OkHttp WebSockets from ReactNative. And sometimes okhttp.ws. WebSocketCall.create method crash with \"SecurityException: Failed to read sufficient bytes from /dev/urandom. Expected: 1024, actual: 0\"\r\n\r\nThe crash happens only on Android 5.x.x. After some source codes research I found out that in Android 5.x.x other Security Provider - OpenSSL than is used in Android 4.x and Android 6+\r\n\r\nOpenSSL uses RAND_load_file function (https://github.com/openssl/openssl/blob/6974fca49d9d0b110c02c83a7bbe01907472ac5e/crypto/rand/randfile.c) to read entropy stored in file /dev/urandom in order to initialize pseudo-random number generator with a truly random seed. Apparently in some cases either file can't be opened for read or only 0 bytes are read. \r\n\r\nUnfortunately I can't understand the root cause why only 0 bytes are read or file fails to be opened.\r\n\r\nHowever, I think that in WebSocketCall you should use not a default SecureRandom constructor, but rather instantiate SecureRandom with a more reliable Security Provider like those used in Android 4 or Android 6 (need to derive from SecureRandom and override protected constructor).\r\n\r\n**The problem reproduces on a range of Android 5.x.x devices. Here's top:**\r\n8%  Redmi Note 3\t\r\n8%  SM-N9005\t\r\n6%  Lenovo A6020a40\t\r\n5%  LG-H955\t\r\n5%  m2\t\r\n69% 40 other machines\t\r\n\r\n**Here's the complete exception stacktrace:**\r\ncom.android.org.conscrypt.OpenSSLRandom.seedOpenSSLPRNGFromLinuxRNG in OpenSSLRandom.java::75\r\ncom.android.org.conscrypt.OpenSSLRandom.selfSeedIfNotSeeded in OpenSSLRandom.java::61\r\ncom.android.org.conscrypt.OpenSSLRandom.engineNextBytes in OpenSSLRandom.java::37\r\njava.security.SecureRandom.nextBytes in SecureRandom.java::271\r\nokhttp3.ws.WebSocketCall.<init> in WebSocketCall.java::64\r\nokhttp3.ws.WebSocketCall.<init> in WebSocketCall.java::54\r\nokhttp3.ws.WebSocketCall.create in WebSocketCall.java::46\r\ncom.facebook.react.modules.websocket.WebSocketModule.connect in WebSocketModule.java::115\r\njava.lang.reflect.Method.invoke in Method.java::-2\r\njava.lang.reflect.Method.invoke in Method.java::372\r\ncom.facebook.react.bridge.BaseJavaModule$JavaMethod.invoke in BaseJavaModule.java::319\r\ncom.facebook.react.cxxbridge.JavaModuleWrapper.invoke in JavaModuleWrapper.java::139\r\ncom.facebook.react.bridge.queue.NativeRunnable.run in NativeRunnable.java::-2\r\nandroid.os.Handler.handleCallback in Handler.java::815\r\nandroid.os.Handler.dispatchMessage in Handler.java::104\r\ncom.facebook.react.bridge.queue.MessageQueueThreadHandler.dispatchMessage in MessageQueueThreadHandler.java::31\r\nandroid.os.Looper.loop in Looper.java::194\r\ncom.facebook.react.bridge.queue.MessageQueueThreadImpl$3.run in MessageQueueThreadImpl.java::196\r\njava.lang.Thread.run in Thread.java::831", "url": "https://github.com/square/okhttp/issues/3135", "user": "tepamid", "labels": ["bug"], "created": "2017-01-24 15:37:18", "closed": "2017-04-15 17:09:36", "commits": {"7dba9cae329571b0a6442c6f2d485a58bbdff519": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 81.00027777777778, "commitsDetails": [{"commitHash": "7dba9cae329571b0a6442c6f2d485a58bbdff519", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6ae275803d8bee514d8850aa93d7deb9a8136cce"], "nameRev": "7dba9cae329571b0a6442c6f2d485a58bbdff519 tags/parent-3.7.0~7^2", "commitMessage": "Don't use a cryptographic RNG for web sockets.\n\nSome broken Android devices have problems with 'new SecureRandom()' and it's easier\nto not use SecureRandom than to work-around this.\n\nCloses: https://github.com/square/okhttp/issues/3135\n", "commitDateTime": "2017-04-15 11:53:07", "authoredDateTime": "2017-04-15 11:53:07", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient.newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7dba9cae329571b0a6442c6f2d485a58bbdff519"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.OkHttpClient.newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)"]}, {"title": "SSLHandshakeException after leaving the app and returning", "body": "Bug:\r\n- Nexus 6P on latest stock 7.1.1\r\n- okhttp 3.5.0\r\n- A single OkHttpClient is used for submit all network requests\r\n\r\n1. Launch the app and then leave it in the background for 20-40 minutes\r\n2. Return to the app and try to execute a request\r\n3. SSLHandshakeExceptions are now thrown for every request until a new OkHttpClient is created\r\n\r\nI've started seeing this issue in my app and it seems a few others have been seeing it to:\r\n\r\nhttp://stackoverflow.com/questions/37885391/okhttp-sslprotocolexception-ssl-handshake-terminated\r\n\r\nAt the moment my solution is to just create a new OkHttpClient when it encounters a SSLHandshakeException but is there a better way to go about this? Maybe emptying the connection pool and retrying the request?\r\n\r\nThanks", "url": "https://github.com/square/okhttp/issues/3118", "user": "laurencedawson", "labels": ["bug"], "created": "2017-01-17 23:46:28", "closed": "2017-04-15 15:53:59", "commits": {}, "ttf": 87.00027777777778, "commitsDetails": []}, {"title": "Okio will clear the Thread interrupt status", "body": "I do not know whether the following question is a bug or not.\r\n\r\nI am using Okhttp version 3.4.2.\r\n\r\nI have this thread handling code like this.\r\n```java\r\npublic abstract class CustomThread<T> extends Thread {\r\n\r\n  abstract T execute();\r\n    abstract void onResult(T data);\r\n\r\n    @Override\r\n    public void run() {\r\n        T object = null;\r\n        try {\r\n            if (!Thread.currentThread().isInterrupted()) {\r\n                object = execute();\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        try {\r\n            if (!Thread.currentThread().isInterrupted()) {\r\n                onResult(object);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI want to call okhttp in `abstract T execute ()` for network requests.\r\n\r\nWhen I invoke `CustomThread.interrupt ()` to interrupt the thread, Okhttp probability will call the following method.\r\n\r\n```java\r\n/**\r\n * Throws an {@link InterruptedIOException} if the deadline has been reached or if the current\r\n * thread has been interrupted. This method doesn't detect timeouts; that should be implemented to\r\n * asynchronously abort an in-progress operation.\r\n */\r\npublic void throwIfReached() throws IOException {\r\n    if (Thread.interrupted()) {\r\n        throw new InterruptedIOException(\"thread interrupted\");\r\n    }\r\n\r\n    if (hasDeadline && deadlineNanoTime - System.nanoTime() <= 0) {\r\n        throw new InterruptedIOException(\"deadline reached\");\r\n    }\r\n}\r\n```\r\n\r\n`Thread.interrupted()` will clear the Thread interrupt status. Resulting in `CustomThread` should not be invoked `onResult (object);` has been invoked\r\n\r\nI would like to know is that your subsequent version can be changed to call `Thread.currentThread (). IsInterrupted ()` to determine whether the thread interrupted?", "url": "https://github.com/square/okhttp/issues/3107", "user": "wanpg", "labels": ["bug"], "created": "2017-01-14 07:33:11", "closed": "2018-07-06 02:59:31", "commits": {}, "ttf": 537.0002777777778, "commitsDetails": []}, {"title": "HTTP/2 ignores user-specified Host header", "body": "\r\n - [X] Feature Request. Start by telling us what problem you\u2019re trying to solve. Often a solution\r\n       already exists! Don\u2019t send pull requests to implement new features without first getting our\r\n       support. Sometimes we leave features out on purpose to keep the project small.\r\n\r\nI think the code [here](https://github.com/square/okhttp/blob/90021dcaea583b518fa92cdac58aa757dd6be111/okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java#L133) ignores the 'Host' header in a `Request` and pulls it straight out of the URI instead:\r\n\r\n```\r\n  public static List<Header> http2HeadersList(Request request) {\r\n    Headers headers = request.headers();\r\n    List<Header> result = new ArrayList<>(headers.size() + 4);\r\n    result.add(new Header(TARGET_METHOD, request.method()));\r\n    result.add(new Header(TARGET_PATH, RequestLine.requestPath(request.url())));\r\n    result.add(new Header(TARGET_AUTHORITY, Util.hostHeader(request.url(), false))); // Optional.\r\n    result.add(new Header(TARGET_SCHEME, request.url().scheme()));\r\n\r\n    for (int i = 0, size = headers.size(); i < size; i++) {\r\n      // header names must be lowercase.\r\n      ByteString name = ByteString.encodeUtf8(headers.name(i).toLowerCase(Locale.US));\r\n      if (!HTTP_2_SKIPPED_REQUEST_HEADERS.contains(name)) {\r\n        result.add(new Header(name, headers.value(i)));\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n```\r\n\r\nI assume this `Request` has gone through `BridgeInterceptor`, in which case it's either guaranteed to have a user-specified 'Host' header, or to have already been populated from the Uri, in which case I think it should be safe to replace:\r\n\r\n```\r\n    result.add(new Header(TARGET_AUTHORITY, Util.hostHeader(request.url(), false))); // Optional.\r\n```\r\n\r\nwith:\r\n\r\n```\r\n    result.add(new Header(TARGET_AUTHORITY, request.header(\"Host\"))); // Optional.\r\n```\r\n\r\nThis might seem silly, but user-specified host headers are essential for those of us who depend on [domain fronting](https://www.bamsoftware.com/papers/fronting/) to circumvent censorship. Happy to submit a PR if this seems acceptable.", "url": "https://github.com/square/okhttp/issues/3103", "user": "moxie0", "labels": ["bug"], "created": "2017-01-11 22:49:46", "closed": "2017-01-17 20:05:59", "commits": {"565cfab8169a53b2e71a9c483da1e85d9f9e6d8e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "8864c5d687df432021a4409aad4e0448ed030c5a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "565cfab8169a53b2e71a9c483da1e85d9f9e6d8e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8864c5d687df432021a4409aad4e0448ed030c5a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["0d867ab9fcc1fb197fedf40d9409e08d669caaba"], "nameRev": "8864c5d687df432021a4409aad4e0448ed030c5a tags/parent-3.6.0~11^2", "commitMessage": "Permit network interceptors to rewrite the host header.\n\nThis makes it possible to do domain fronting.\n\nCloses https://github.com/square/okhttp/issues/3103\n", "commitDateTime": "2017-01-16 11:12:04", "authoredDateTime": "2017-01-15 20:42:17", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/HeadersTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HeadersTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HeadersTest.http2HeadersListDropsForbiddenHeadersHttp2()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.domainFronting()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Codec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Codec.http2HeadersList(okhttp3.Request)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8864c5d687df432021a4409aad4e0448ed030c5a"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 1.0, "lines": 5.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 0.0, "INS": 3.0, "MOV": 2.0, "DEL": 2.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2"], "changesInPackagesSPOON": ["okhttp3.internal.http2.Http2Codec.http2HeadersList(okhttp3.Request)"]}, {"title": "HEAD requests break if the response contains the Content-Length header", "body": "I was trying to execute a `HEAD` request agains http://httpbin.org/get, but I got this error:\r\n\r\n```\r\njava.io.IOException: Content-Length and stream length disagree\r\n\r\nat okhttp3.ResponseBody.bytes(ResponseBody.java:133)\r\nat okhttp3.ResponseBody.string(ResponseBody.java:154)\r\n```\r\n\r\n[RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13) states that:\r\n\r\n> The Content-Length entity-header field indicates the size of the entity-body, in decimal number of OCTETs, sent to the recipient or, __in the case of the HEAD method, the size of the entity-body that would have been sent had the request been a GET.__\r\n\r\nso I guess the check should be removed, at least for `HEAD` requests?", "url": "https://github.com/square/okhttp/issues/2998", "user": "gcapizzi", "labels": ["bug"], "created": "2016-11-21 20:39:44", "closed": "2016-12-10 18:52:49", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "URLConnectionTest.authenticateWithChunkedStreaming is flaky", "body": "```\r\nauthenticateWithChunkedStreaming(okhttp3.URLConnectionTest)  Time elapsed: 0.021 sec  <<< ERROR!\r\njava.io.FileNotFoundException: http://localhost:48167/\r\n\tat okhttp3.internal.huc.OkHttpURLConnection.getInputStream(OkHttpURLConnection.java:253)\r\n\tat okhttp3.URLConnectionTest.testAuthenticateWithStreamingPost(URLConnectionTest.java:1533)\r\n\tat okhttp3.URLConnectionTest.authenticateWithChunkedStreaming(URLConnectionTest.java:1508)\r\n```", "url": "https://github.com/square/okhttp/issues/2997", "user": "swankjesse", "labels": ["bug"], "created": "2016-11-21 17:35:01", "closed": "2016-11-22 05:41:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Bug Report: validateCloseCode() throws IllegalArgumentException for CLOSE_NO_STATUS_CODE", "body": "When the server closes by sending a Close control frame, and there is no body, I received the following exception:\n\n```\njava.lang.IllegalArgumentException: Code 1005 is reserved and may not be used.\nat okhttp3.internal.ws.WebSocketProtocol.validateCloseCode(WebSocketProtocol.java:114)\nat okhttp3.internal.ws.WebSocketWriter.writeClose(WebSocketWriter.java:101)\nat okhttp3.internal.ws.RealWebSocket$2.execute(RealWebSocket.java:190)\nat okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\nat java.lang.Thread.run(Thread.java:818)\n```\n\nI found this confusing because as stated in https://tools.ietf.org/html/rfc6455#section-5.5.1:\n\n```\nThe Close frame MAY contain a body (the \"Application data\" portion of\nthe frame) that indicates a reason for closing, such as an endpoint\nshutting down, an endpoint having received a frame too large, or an\nendpoint having received a frame that does not conform to the format\nexpected by the endpoint.  If there is a body, the first two bytes of\nthe body MUST be a 2-byte unsigned integer (in network byte order)\nrepresenting a status code with value /code/ defined in Section 7.4.\n```\n\nFurthermore, as stated in https://tools.ietf.org/html/rfc6455#section-7.1.6:\n\n```\nAs defined in Sections 5.5.1 and 7.4, a Close control frame may\ncontain a status code indicating a reason for closure\n```\n\nMy understanding is that what my server sent was valid. \n\nSearching 1005, https://tools.ietf.org/html/rfc6455#section-7.4.1 states the following:\n\n```\n1005 is a reserved value and MUST NOT be set as a status code in a\nClose control frame by an endpoint.  It is designated for use in\napplications expecting a status code to indicate that no status\ncode was actually present.\n```\n\nI understand OkHttp should validate my server did not send 1005, but I sent nothing. Searching the code https://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/internal/ws/WebSocketReader.java#L192-L205 assumes 1005 without checking first I sent nothing. I believe this is contrary to the behaviour outline in https://tools.ietf.org/html/rfc6455#section-7.1.5\n\n```\nIf this Close control frame contains no status code, _The WebSocket\nConnection Close Code_ is considered to be 1005.\n```\n\nThus, OkHttp is unfairly assuming my server sent 1005 and crashing with the following code when I didn't.\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/internal/ws/WebSocketProtocol.java#L105-L118.\n\nI can create a PR fixing this issue. Thank you.\n", "url": "https://github.com/square/okhttp/issues/2940", "user": "jparkie", "labels": ["bug", "websockets"], "created": "2016-10-27 00:40:03", "closed": "2016-11-22 00:47:07", "commits": {"d8226074eee111dea2030baafb7d0d5992e3d42c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "d8226074eee111dea2030baafb7d0d5992e3d42c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["a72ed5ee7a2c2110230da81342dc99c784a7a873"], "nameRev": "d8226074eee111dea2030baafb7d0d5992e3d42c tags/parent-3.5.0~10^2", "commitMessage": "Confirm that we correctly handle close frames without a code.\n\nCloses: https://github.com/square/okhttp/issues/2940\n", "commitDateTime": "2016-11-21 18:55:52", "authoredDateTime": "2016-11-21 18:55:52", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/RealWebSocketTest.java", "insertions": 17, "deletions": 4, "lines": 21}, {"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealWebSocketTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.RealWebSocketTest.serverCloseThenWritingCloseThrows()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocketTest.emptyCloseInitiatesShutdown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealWebSocket.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d8226074eee111dea2030baafb7d0d5992e3d42c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/ws"], "changesInPackagesSPOON": []}, {"title": "Do something reasonable about Cookies containing invalid characters", "body": "I'm trying to access a server on android via okhttp 3.4.1 and i get the following error:\n\n java.lang.IllegalArgumentException: Unexpected char 0x01 at 325 in Cookie value: incap_ses_151_949833=xNLaFk17+mQdQL4SDnYYAps+D1gAAAAA7IU4sgUQkCsv3rfOJVl9cw==; visid_incap_949833=0P2YodceQOChjdX2SNkD+5s+D1gAAAAAQUIPAAAAAAA3oNf9btXYpqwwNhIkUyPM; js_cookie2=id@879872eaX3683e90/; ___utmvmzFuPmMp=noSqLHjmLPc; ___utmvbzFuPmMp=fZO XwlOQalt: Lts; p_cookie2=cm%3D728443386%26cx%3D10414854; ___utmvazFuPmMp=Viy\u0001htVq\n\nThis works fine in any browser, i know there is a problem with value of the cookie ___utmvazFuPmMp, how can we get it working?\nAny idea?\n\nThank you\n", "url": "https://github.com/square/okhttp/issues/2939", "user": "paul321", "labels": ["bug"], "created": "2016-10-25 11:17:03", "closed": "2017-01-11 08:44:17", "commits": {"c74831d62087e59f889497e6e7c4e6bb19196a1f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 77.00027777777778, "commitsDetails": [{"commitHash": "c74831d62087e59f889497e6e7c4e6bb19196a1f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["87b86a53c4a5c591b8e1c5ec94b4d81edece00a8"], "nameRev": "c74831d62087e59f889497e6e7c4e6bb19196a1f tags/parent-3.6.0~12^2", "commitMessage": "Drop cookies that contain ASCII NULL and other bad characters.\n\nCloses https://github.com/square/okhttp/issues/2939\n", "commitDateTime": "2017-01-10 23:05:58", "authoredDateTime": "2017-01-10 23:05:58", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CookieTest.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "okhttp/src/main/java/okhttp3/Cookie.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/Headers.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/Util.java", "insertions": 15, "deletions": 7, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookieTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CookieTest.spaceInName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CookieTest.spaceInValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CookieTest.invalidCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Cookie.java", "spoonMethods": [{"spoonMethodName": "okhttp3.Cookie.parse(long,okhttp3.HttpUrl,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Headers.java", "spoonMethods": []}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.Util.throwIfFatal(java.lang.Throwable)", "TOT": 11, "UPD": 6, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.Util.indexOfControlOrNonAscii(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c74831d62087e59f889497e6e7c4e6bb19196a1f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 9, "lines": 28, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 15, "UPD": 6, "INS": 3, "MOV": 5, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/internal"], "changesInPackagesSPOON": ["okhttp3.internal.Util.indexOfControlOrNonAscii(java.lang.String)", "okhttp3.Cookie.parse(long,okhttp3.HttpUrl,java.lang.String)", "okhttp3.internal.Util.throwIfFatal(java.lang.Throwable)"]}, {"title": "Replace IllegalStateException by IOException, SecurityException etc. where possible", "body": "okhttp seems to throw IllegalStateException quite often, for instance when unexpected data is received (see\nhttps://github.com/square/okhttp/issues/2683).\n\nPlease consider replacing all IllegalStateExceptions by\n- IOException when unexpected network traffic occurs (for instance, HTTP2 frame errors etc)\n- SecurityException for TLS errors etc.\n\nThe IllegalStateExceptions cause apps using okhttp to crash unexpectedly and as far as I know, IllegalStateExceptions should only be thrown when an API is called incorrectly (for instance, sending a request before it was specified or something like that). \n", "url": "https://github.com/square/okhttp/issues/2934", "user": "rfc2822", "labels": ["bug"], "created": "2016-10-22 16:52:41", "closed": "2017-04-15 16:22:34", "commits": {}, "ttf": 174.00027777777777, "commitsDetails": []}, {"title": "A bug about io not close", "body": "Hello\uff0ci want ask a question about use the cache about the okhttp3.\nI use Retrofit 2.1.0 and okhttp 3.4.1\uff0cthere is my code\uff1a\n\n``` Java\n    private class HeaderInterceptor implements Interceptor {\n\n        private static final String KEY_AUTHORIZATION = \"Authorization\";\n        private static final String PREFIX_TOKEN = \"Bearer \";\n\n        @Override\n        public Response intercept(Interceptor.Chain chain) throws IOException {\n            Request request = chain.request();\n            CacheControl cacheControl = new CacheControl.Builder().maxAge(2, TimeUnit.MINUTES).build();\n            HttpUrl url = request.url().newBuilder()\n                    .addQueryParameter(\"age\", String.valueOf(getAge()))\n                    .addQueryParameter(\"firmwareversion\", Build.DISPLAY)\n                    .addQueryParameter(\"storeversion\", String.valueOf(BuildConfig.VERSION_CODE))\n                    .addQueryParameter(\"systemversion\", String.valueOf(Build.VERSION.SDK_INT))\n                    .addQueryParameter(\"device\", Build.DEVICE)\n                    .addQueryParameter(\"fingerprint\", Build.FINGERPRINT)\n                    .addQueryParameter(\"model\", Build.MODEL)\n                    .addQueryParameter(\"product\", Build.PRODUCT)\n                    .build();\n            String token = ReadboyAccountHelper.getToken(StoreApplication.getContext());\n            if (token == null) token = \"\";\n            request = request.newBuilder().cacheControl(cacheControl)\n                    .addHeader(\"Accept\", getHeaderAccept())\n                    .addHeader(\"Accept-Encoding\", \"gzip\")\n                    .addHeader(KEY_AUTHORIZATION, PREFIX_TOKEN + token)\n                    .url(url)\n                    .build();\n\n            Response response = chain.proceed(request);\n            int maxAge = 60; // read from cache for 1 minute\n            return response.newBuilder()\n                    .removeHeader(\"Cache-Control\")\n                    .removeHeader(\"Pragma\")\n                    .header(\"Cache-Control\", \"public, max-age=\" + maxAge)\n                    .build();\n        }\n    }\n\n    //Use the interceptor\n\n    File cacheDir = new File(StoreApplication.getContext().getCacheDir(), \"http-cache\");\n        Cache cache = new Cache(cacheDir, CACHE_SIZE);\n        OkHttpClient.Builder builder = new OkHttpClient.Builder()\n                .addNetworkInterceptor(new HeaderInterceptor())\n                .cache(cache)\n                .connectTimeout(30, TimeUnit.SECONDS);\n\n        if (BuildConfig.DEBUG) {\n            HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\n            interceptor.setLevel(HttpLoggingInterceptor.Level.NONE);\n            builder.addInterceptor(interceptor);\n        }\n\n        OkHttpClient client = builder.build();\n        client.dispatcher().cancelAll();\n        Retrofit retrofit = new Retrofit.Builder()\n                .baseUrl(END_POINT)\n                .client(client)\n                .addConverterFactory(GsonConverterFactory.create())\n                .build();\n        appCenter = retrofit.create(AppCenter.class);\n\n\n```\n\nAnd the logcat print\uff1a\n\n![](http://static.zybuluo.com/coder-pig/0e1upiglvjt8eqqxa55jqyxu/1.png)\n\nThen i open **Okio.java** line 185\uff1a\n\n``` Java\n  /** Returns a sink that appends to {@code file}. */\n  public static Sink appendingSink(File file) throws FileNotFoundException {\n    if (file == null) throw new IllegalArgumentException(\"file == null\");\n    return sink(new FileOutputStream(file, true));\n  }\n```\n\nAnd **DiskLruCache.java** line 310\uff1a\n\n``` Java\n  private BufferedSink newJournalWriter() throws FileNotFoundException {\n    Sink fileSink = fileSystem.appendingSink(journalFile);\n    Sink faultHidingSink = new FaultHidingSink(fileSink) {\n      @Override protected void onException(IOException e) {\n        assert (Thread.holdsLock(DiskLruCache.this));\n        hasJournalErrors = true;\n      }\n    };\n    return Okio.buffer(faultHidingSink);\n  }\n```\n\nIs the FileOutputStream close\uff1fI think the problem may be here or not.\nIf you know how to fix this bug,please tell me\uff01\nThank you for taking the time to look at this issue~ <(\uffe3\ufe36\uffe3)>\n", "url": "https://github.com/square/okhttp/issues/2923", "user": "coder-pig", "labels": ["bug"], "created": "2016-10-18 11:54:37", "closed": "2018-11-04 04:48:16", "commits": {}, "ttf": 746.0002777777778, "commitsDetails": []}, {"title": "Investigate response streams handling of GOAWAY frames", "body": "From [this PR](https://github.com/square/okhttp/pull/2889) it looks like a GOAWAY sent immediately after a response body might cause problems when reading that response. We saw this mostly in Travis, and not as much locally so it could be a cause of flakiness.\n", "url": "https://github.com/square/okhttp/issues/2918", "user": "swankjesse", "labels": ["bug"], "created": "2016-10-17 00:02:51", "closed": "2016-11-13 20:01:59", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "HTTP/2: empty data-frame without Content-Length generated for requests without request body", "body": "Let's assume this code for generating an `OPTIONS` request:\n\n```\nResponse response = httpClient.newCall(new Request.Builder()\n                .method(\"OPTIONS\", null)\n                .url(location)\n                .build()).execute();\n```\n\nWith HTTP/1.1, it just generates a request without body, which will be accepted and processed by the server.\n\nHowever, when HTTP/2 is active, okhttp 3.4.1 generates an empty DATA frame without `Content-Length`:\n\n```\ndavdroid.DavResourceFinder: [HttpClient$1] --> OPTIONS https://yourserver/katana/public/server.php/principals/bitfire/ http/1.1\ndavdroid.DavResourceFinder: [HttpClient$1] --> END OPTIONS\ndavdroid.dav4android: [dav4android.BasicDigestAuthHandler] Adding Basic authorization header for https://yourserver/katana/public/server.php/principals/bitfire/\nokhttp3.internal.framed.Http2$FrameLogger: [okhttp3.internal.framed.Http2$Writer] >> 0x0000001f   218 HEADERS       END_HEADERS\n[!!!] okhttp3.internal.framed.Http2$FrameLogger: [okhttp3.internal.framed.Http2$Writer] >> 0x0000001f     0 DATA          END_STREAM\nokhttp3.internal.framed.Http2$FrameLogger: [okhttp3.internal.framed.Http2$Reader] << 0x0000001f     7 HEADERS       END_HEADERS\n```\n\nServers like Apache 2.4 reject this request because the `OPTIONS` request should either have\n1. no body \u2013 and thus no data frame, or\n2. a body, and thus `Content-Length`.\n\nBecause `null` is specified as the request body, okhttp shouldn't send a data frame.\n\nFor further information, see https://forums.bitfire.at/topic/1124/411-length-error-davdroid-1-0-9-2-owncloud/10. If I can provide more information, please let me know.\n", "url": "https://github.com/square/okhttp/issues/2892", "user": "rfc2822", "labels": ["bug"], "created": "2016-10-04 20:06:22", "closed": "2016-11-21 17:35:19", "commits": {"578d8debd65202f574b544f876b45e6110afdb69": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "578d8debd65202f574b544f876b45e6110afdb69", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": ["07309c1c7d9e296014268ebd155ebf7ef8679f6c"], "nameRev": "578d8debd65202f574b544f876b45e6110afdb69 tags/parent-3.5.0~12^2", "commitMessage": "Avoid sending empty HTTP/2 data frames when there is no request body.\n\nCloses: https://github.com/square/okhttp/issues/2892\n", "commitDateTime": "2016-11-21 08:27:31", "authoredDateTime": "2016-11-21 07:58:54", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2Codec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Codec.writeRequestHeaders(okhttp3.Request)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["578d8debd65202f574b544f876b45e6110afdb69"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 3, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2"], "changesInPackagesSPOON": ["okhttp3.internal.http2.Http2Codec.writeRequestHeaders(okhttp3.Request)"]}, {"title": "Old cache validation code", "body": "According to https://tools.ietf.org/html/rfc7234#section-4.3.3:\no  A full response (i.e., one with a payload body) indicates that\n      none of the stored responses nominated in the conditional request\n      is suitable.  Instead, the cache MUST use the full response to\n      satisfy the request and MAY replace the stored response(s).\n\nThis statement contradicts to your code in https://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.java (or okhttp3/internal/http/HttpEngine.java for older versions of library).\n\n```\nprivate static boolean validate(Response cached, Response network) {\nif (network.code() == HTTP_NOT_MODIFIED) return true;\n\n// The HTTP spec says that if the network's response is older than our\n// cached response, we may return the cache's response. Like Chrome (but\n// unlike Firefox), this client prefers to return the newer response.\nDate lastModified = cached.headers().getDate(\"Last-Modified\");\nif (lastModified != null) {\n  Date networkLastModified = network.headers().getDate(\"Last-Modified\");\n  if (networkLastModified != null\n      && networkLastModified.getTime() < lastModified.getTime()) {\n    return true;\n  }\n}\n\nreturn false;\n  }\n```\n\nAccording to new http spec (https://tools.ietf.org/html/rfc7234 from June 2014) we always should use network response despite its \"Last-Modified\" header.\n", "url": "https://github.com/square/okhttp/issues/2886", "user": "SukharevPavel", "labels": ["bug"], "created": "2016-09-28 08:12:15", "closed": "2016-11-15 02:22:27", "commits": {"4675468387bce6878b7f82129f18edaee0f3f85e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "3e5af9abb0f7618ef20db24f4d8eaee74e031826": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "9c3f2dd551e5cfd2a402e89396b82603ca769e29": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a27afaf572102666ca85c2619370626e52425e7a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "4675468387bce6878b7f82129f18edaee0f3f85e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3e5af9abb0f7618ef20db24f4d8eaee74e031826", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9c3f2dd551e5cfd2a402e89396b82603ca769e29", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a27afaf572102666ca85c2619370626e52425e7a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6da4d59c2047c2d1d40625cebf87604e0d22b335"], "nameRev": "a27afaf572102666ca85c2619370626e52425e7a tags/parent-3.5.0~19^2", "commitMessage": "Always prefer the server's returned response body.\n\nPreviously we would prefer the cached response if it had a newer\nLast-Modified date.\n\nCloses: https://github.com/square/okhttp/issues/2886\n", "commitDateTime": "2016-11-14 20:52:43", "authoredDateTime": "2016-11-14 20:06:27", "commitGitStats": [{"filePath": "okhttp-android-support/src/test/java/okhttp3/internal/huc/ResponseCacheTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CacheTest.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "okhttp-urlconnection/src/test/java/okhttp3/UrlConnectionCacheTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheInterceptor.java", "insertions": 1, "deletions": 24, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResponseCacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.huc.ResponseCacheTest.serverReturnsDocumentOlderThanCache()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.serverReturnsDocumentOlderThanCache()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "UrlConnectionCacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.UrlConnectionCacheTest.serverReturnsDocumentOlderThanCache()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CacheInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.cache.CacheInterceptor.intercept(okhttp3.internal.cache.Chain)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.cache.CacheInterceptor.validate(okhttp3.Response,okhttp3.Response)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a27afaf572102666ca85c2619370626e52425e7a"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 24.0, "lines": 25.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 1.0, "MOV": 1.0, "DEL": 2.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/cache"], "changesInPackagesSPOON": ["okhttp3.internal.cache.CacheInterceptor.validate(okhttp3.Response,okhttp3.Response)", "okhttp3.internal.cache.CacheInterceptor.intercept(okhttp3.internal.cache.Chain)"]}, {"title": "Response body should be null in a HEAD response", "body": "Currently, if a server returns a `Content-Length` in the headers of a HEAD request matching the size of the GET entity (as it is supposed to), OkHttp will think that the response has a body to be read. When attempting to read this body, an exception is thrown because only 0 bytes are read instead of whatever the content length is: `Content-Length and stream length disagree`. OkHttp should just report a `null` body, since the `Content-Length` info is still available in the headers.\n\nHere's a test case for what I expect AND what actually happens: https://gist.github.com/kenzierocks/6f061563cbcaafc05fe469a494ab45d6\n", "url": "https://github.com/square/okhttp/issues/2879", "user": "octylFractal", "labels": ["bug"], "created": "2016-09-23 02:37:29", "closed": "2016-10-20 14:28:03", "commits": {"9851e20466555dcdf8ae520569f40d46dbeb1b87": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "9851e20466555dcdf8ae520569f40d46dbeb1b87", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["da27d0bfc28dc2df8f566acc1e395109004495d2"], "nameRev": "9851e20466555dcdf8ae520569f40d46dbeb1b87 tags/parent-3.5.0~32^2", "commitMessage": "Add tests to confirm HEAD response bodies are empty.\n\nOkHttp never returns null bodies for any request. But empty response\nbodies are fine.\n\nCloses: https://github.com/square/okhttp/issues/2879\n", "commitDateTime": "2016-10-18 23:50:18", "authoredDateTime": "2016-10-18 23:50:18", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 54, "deletions": 0, "lines": 54}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.headResponseContentLengthIsIgnored()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.headResponseContentEncodingIsIgnored()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9851e20466555dcdf8ae520569f40d46dbeb1b87"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Weird issue - DELETE calls fail with Akamai H2 (http/2) enabled ", "body": "I have 2 Android apps which use Retrofit 2, with the latest version of okhttp. Last week, we enabled http/2 on our API, at the Akamai control panel. That same day, we started getting complaints that users could no longer do certain things in the apps,  and it quickly became apparent that it was only Android apps, and only DELETE calls \n", "url": "https://github.com/square/okhttp/issues/2851", "user": "jkane001", "labels": ["bug"], "created": "2016-09-13 15:35:25", "closed": "2016-12-10 21:08:51", "commits": {}, "ttf": 88.00027777777778, "commitsDetails": []}, {"title": "Header whitespace rules don't match RFC 7230 section 3.2 ", "body": "This is a bug report.\n\nFailing test: https://gist.github.com/15characterlimi/9704ec432a6e95b57611208e5c3ddc11\n\nRFC 7230 3.2 allows ' ' and '\\t' in headers, but only inside values and only one consecutive whitespace character.\n\nOkHttp however currently allows any sequence of ' ' not only in values but also in keys. This is too lenient. I don't know if this leniency is deliberate.\n\nOkHttp doesn't currently accept '\\t' at all, which is too strict, but PR https://github.com/square/okhttp/pull/2841 proposes to allow '\\t' in values.\n", "url": "https://github.com/square/okhttp/issues/2842", "user": "15characterlimi", "labels": ["bug"], "created": "2016-09-07 18:23:51", "closed": "2016-12-11 17:08:50", "commits": {"e02a4637cb17976fc47c2c3da820ff9898e30343": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "731a2628bf4a7f925ac71950d3670a9e1e6fbfeb": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 94.00027777777778, "commitsDetails": [{"commitHash": "e02a4637cb17976fc47c2c3da820ff9898e30343", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "731a2628bf4a7f925ac71950d3670a9e1e6fbfeb", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["0ddb9f5eb6b715dd0f31213951e040d694cd0c34"], "nameRev": "731a2628bf4a7f925ac71950d3670a9e1e6fbfeb tags/parent-3.6.0~33^2", "commitMessage": "Forbid spaces in header names.\n\nhttps://github.com/square/okhttp/issues/2842\n", "commitDateTime": "2016-12-11 11:56:13", "authoredDateTime": "2016-12-10 16:01:53", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "okhttp-tests/src/test/java/okhttp3/RequestTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/Headers.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.requestHeaderNameWithSpaceForbidden()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.requestHeaderNameWithTabForbidden()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.responseHeaderNameWithSpacePermitted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.responseHeaderNameWithTabPermitted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RequestTest.headerAcceptsPermittedCharacters()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Headers.java", "spoonMethods": [{"spoonMethodName": "okhttp3.Headers.Builder.checkNameAndValue(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["731a2628bf4a7f925ac71950d3670a9e1e6fbfeb"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 1.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.Headers.Builder.checkNameAndValue(java.lang.String,java.lang.String)"]}, {"title": "AndroidPlatform.trustManager() not using ClassLoader from delegate object", "body": "I am seeing a very similar crash to #2323, reproducible on KitKat and Marshmellow, i.e.:\n\n```\njava.lang.IllegalStateException: Unable to extract the trust manager on okhttp3.internal.platform.AndroidPlatform@b1a3a6d8, sslSocketFactory is class com.paypal.android.sdk.cg\n                                                                                at okhttp3.OkHttpClient$Builder.sslSocketFactory(OkHttpClient.java:599)\n                                                                                at com.paypal.android.sdk.cc.a(Unknown Source)\n                                                                                at com.paypal.android.sdk.cm.<init>(Unknown Source)\n                                                                                at com.paypal.android.sdk.payments.PayPalService.a(Unknown Source)\n                                                                                at com.paypal.android.sdk.payments.PayPalService.onBind(Unknown Source)\n```\n\nFrom what I can tell, for me the fallback mechanism inside AndroidPlatform.trustManager() is trying to work, i.e.:\n\n```\n@Override public X509TrustManager trustManager(SSLSocketFactory sslSocketFactory) {\n    Object context = readFieldOrNull(sslSocketFactory, sslParametersClass, \"sslParameters\");\n    if (context == null) {\n      // If that didn't work, try the Google Play Services SSL provider before giving up. This\n      // must be loaded by the SSLSocketFactory's class loader.\n      try {\n        Class<?> gmsSslParametersClass = Class.forName(\n            \"com.google.android.gms.org.conscrypt.SSLParametersImpl\", false,\n            sslSocketFactory.getClass().getClassLoader());\n```\n\nHowever, it seems that the sslSocketFactory class loader can't load that class, however the **sslSocketFactory.delegate** class loader **can** load the class.\n\nA little background: my app allows both Google and PayPal login. PayPal login from start is OK. Attempting a Google login first somehow swaps the `com.android.org.conscrypt.SSLParametersImpl` for a `com.google.android.gms.org.conscrypt.SSLParametersImpl` under the hood, after which attempting a PayPal login fails to load `gmsSslParametersClass` and leads to the crash.\n\nThe `sslSocketFactory` is provided by the PayPal SDK and so loaded from my app's classloader. The delegate seems to be able to be loaded from `/system/priv-app/PrebuiltGmsCore.apk`\n\nCorrect me if I'm wrong, but doesn't that code need to cater for the class loader in the delegate case as well?\n", "url": "https://github.com/square/okhttp/issues/2827", "user": "stevelilly-tw", "labels": ["bug"], "created": "2016-08-31 16:40:33", "closed": "2017-04-15 16:25:18", "commits": {}, "ttf": 226.00027777777777, "commitsDetails": []}, {"title": "HttpLoggingInterceptor.java maybe occur a NullPointException on line 220;", "body": "`Exception in thread \"OkHttp Dispatcher\" java.lang.NullPointerException\n    at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:220)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\n    at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:170)\n    at okhttp3.RealCall.access$100(RealCall.java:33)\n    at okhttp3.RealCall$AsyncCall.execute(RealCall.java:120)\n    at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)`\n\n`HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor().setLevel(level);\nbuilder.addInterceptor(loggingInterceptor);    // log\nOkHttpClient okHttpClient = builder.build();\nWebSocketCall call = new WebSocketCall(okHttpClient, request);`\n", "url": "https://github.com/square/okhttp/issues/2811", "user": "android9527", "labels": ["bug", "websockets"], "created": "2016-08-25 16:44:35", "closed": "2016-09-02 04:09:26", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "CallTest.legalToExecuteTwiceCloning_Async is flaky", "body": "https://s3.amazonaws.com/archive.travis-ci.org/jobs/154435176/log.txt\n\n```\nTests run: 142, Failures: 1, Errors: 0, Skipped: 1, Time elapsed: 16.135 sec <<< FAILURE! - in okhttp3.CallTest\nlegalToExecuteTwiceCloning_Async(okhttp3.CallTest)  Time elapsed: 0.013 sec  <<< FAILURE!\norg.junit.ComparisonFailure: expected:<[abc]> but was:<[def]>\n    at org.junit.Assert.assertEquals(Assert.java:115)\n    at org.junit.Assert.assertEquals(Assert.java:144)\n    at okhttp3.RecordedResponse.assertBody(RecordedResponse.java:90)\n    at okhttp3.CallTest.legalToExecuteTwiceCloning_Async(CallTest.java:608)\n```\n", "url": "https://github.com/square/okhttp/issues/2808", "user": "swankjesse", "labels": ["bug", "tests"], "created": "2016-08-23 14:48:45", "closed": "2016-10-19 01:35:56", "commits": {}, "ttf": 56.000277777777775, "commitsDetails": []}, {"title": "java.net.BindException occasionally", "body": "Android device report log:\n\n```\nD/OkHttp: <-- HTTP FAILED: java.net.BindException: bind failed: EADDRINUSE (Address already in use)\n```\n\noccasionally. Don't know why.\n", "url": "https://github.com/square/okhttp/issues/2798", "user": "fengshenzhu", "labels": ["bug", "needs info"], "created": "2016-08-17 06:52:01", "closed": "2016-11-13 22:58:28", "commits": {}, "ttf": 88.00027777777778, "commitsDetails": []}, {"title": "Okhttp 3.4.1  Upload Image report code 6003 Exception (java.net.SocketException: sendto failed: EBADF (Bad file descriptor) )", "body": "**When my network speed of uplink 18kbps or less** ,  upload pictures must report:\n\n\n```\n  java.net.SocketException: sendto failed: EBADF (Bad file descriptor) \n```\n\nBut I use tool of catch packet \uff08Charles \uff09,  upload process is normal\uff0cbut project debug is report 6003 code , exception above\n\nPaste My code\uff1a\n\n`MultipartBody.Builder builder = new MultipartBody.Builder();\n\n```\n    builder.setType(MultipartBody.FORM)\n            .addFormDataPart(key, file.getName(), getProgressRequestBody(MultipartBody.FORM, file, callback))\n            .addPart(Headers.of(\"Content-Disposition\", \"form-data; filename=\\\"img.png\\\"\"), RequestBody.create(MediaType.parse(\"image/png\"), file))\n            .build();\n\n    RequestBody requestBody = builder.build();\n\n    Request request = new Request.Builder()\n            .url(uploadUrl) //\u5730\u5740\n            .post(requestBody)\n            .build();\n\n    createOkClient();\n\n    mClient.newCall(request).enqueue(new okhttp3.Callback() {\n        @Override\n        public void onFailure(Call call, IOException e) {\n            MainThreadCallback.onException(callback, ErrorCode.HTTP_CONNECTION_ERROR, e.toString());\n        }\n\n        @Override\n        public void onResponse(Call call, Response response) throws IOException {\n            if (!response.isSuccessful()) {\n                MainThreadCallback.onException(callback, ErrorCode.HTTP_CONNECTION_ERROR, \"respone is no success\");\n                return;\n            }\n\n            try {\n                String result = response.body().string();\n                JSONObject jsonObject = new JSONObject(result);\n                String url = jsonObject.optString(\"result\");\n\n                if(TextUtils.isEmpty(url)){\n                    MainThreadCallback.onException(callback, ErrorCode.DATA_ERROR, \"\u4e0a\u4f20\u6587\u4ef6\u751f\u6210\u7684URL\u4e3a\u7a7a\");\n                    return;\n                }\n\n                MainThreadCallback.onSuccess(callback, url);\n\n            } catch (Exception e) {\n                MainThreadCallback.onException(callback, ErrorCode.IO_ERROR, e.getMessage());\n            }\n        }\n    });`\n```\n", "url": "https://github.com/square/okhttp/issues/2794", "user": "HarrisonLin", "labels": ["bug", "needs info"], "created": "2016-08-16 08:28:57", "closed": "2016-09-06 09:12:42", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "removeHeader(\"Pragma\") not working", "body": "What kind of issue is this?\nBug Report\n\nhi, i've been trying to cache a response from a test rest api from http://jsonplaceholder.typicode.com\n\nD/OkHttp: --> GET http://jsonplaceholder.typicode.com/posts/ http/1.1\nD/OkHttp: --> END GET\nD/OkHttp: <-- 200 OK http://jsonplaceholder.typicode.com/posts/ (2597ms)\nD/OkHttp: Content-Type: application/json; charset=utf-8\nD/OkHttp: Transfer-Encoding: chunked\nD/OkHttp: Connection: keep-alive\nD/OkHttp: Pragma: no-cache\nD/OkHttp: Date: Mon, 15 Aug 2016 07:37:59 GMT\nD/OkHttp: Set-Cookie: __cfduid=d7a80d31f44b803e5756cb4712926db891471246679; expires=Tue, 15-Aug-17 07:37:59 GMT; path=/; domain=.typicode.com; HttpOnly\nD/OkHttp: X-Powered-By: Express\nD/OkHttp: Vary: Accept-Encoding\nD/OkHttp: Access-Control-Allow-Credentials: true\nD/OkHttp: Expires: Mon, 15 Aug 2016 11:37:59 GMT\nD/OkHttp: X-Content-Type-Options: nosniff\nD/OkHttp: Etag: W/\"6b80-uPwhAkDat3Fl5TugzmyYpQ\"\nD/OkHttp: Via: 1.1 vegur\nD/OkHttp: CF-Cache-Status: HIT\nD/OkHttp: Server: cloudflare-nginx\nD/OkHttp: CF-RAY: 2d2afc05360e22be-LAX\nD/OkHttp: Cache-Control: max-age=20\nD/OkHttp: <-- END HTTP\n\ni was successfully caching that response, along with also modifying the cache-control, however, all my efforts to remove `Pragma: no-cache` with `response.removeHeader(\"Pragma\")` on my interceptor seems to have failed and i'm not sure why. That pragma prevents me from accessing my saved cache for offline work.\n\ncan someone give light to this?\n", "url": "https://github.com/square/okhttp/issues/2792", "user": "jpaseneta", "labels": ["bug", "needs info"], "created": "2016-08-15 08:02:34", "closed": "2016-08-19 05:47:46", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Websocket isn't robust enough with servers that don't reply a close message", "body": "If a websocket server doesn't reply the close message, the client will never close the connection.\n", "url": "https://github.com/square/okhttp/issues/2788", "user": "jwendell", "labels": ["bug", "websockets"], "created": "2016-08-13 17:00:02", "closed": "2016-12-01 17:45:14", "commits": {"ac6fb2ac28eec1efd05351afae4c7fa9c5c0e8ec": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0d578971a55291cf04d9849ad8ede374e17b8f15": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "9d9ad0256f571e3bf8fddfc89828e03ce578368d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "bddf7201d6dbf0499411e90f02f738c693a62c0c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "4a50bcd30be1853aeeda48dd877d5048ab6fd96b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 110.00027777777778, "commitsDetails": [{"commitHash": "ac6fb2ac28eec1efd05351afae4c7fa9c5c0e8ec", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0d578971a55291cf04d9849ad8ede374e17b8f15", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9d9ad0256f571e3bf8fddfc89828e03ce578368d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bddf7201d6dbf0499411e90f02f738c693a62c0c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4a50bcd30be1853aeeda48dd877d5048ab6fd96b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6ec60b189520bd3dce7429cafb6408fe74feedc2"], "nameRev": "4a50bcd30be1853aeeda48dd877d5048ab6fd96b tags/parent-3.5.0~1^2", "commitMessage": "If a graceful close doesn't work, cancel the websocket.\n\nCloses: https://github.com/square/okhttp/issues/2788\n", "commitDateTime": "2016-12-01 12:09:56", "authoredDateTime": "2016-11-30 19:04:15", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/{ => internal/ws}/WebSocketHttpTest.java", "insertions": 32, "deletions": 4, "lines": 36}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/ws/WebSocketRecorder.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java", "insertions": 39, "deletions": 9, "lines": 48}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WebSocketHttpTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.WebSocketHttpTest.serverMessage()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnOpenFailsImmediately()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnFailLogs()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnMessageClosesImmediatelyAndFails()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.throwingOnClosingClosesImmediatelyAndFails()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.non101RetainsBody()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.notFound()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.missingConnectionHeader()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.wrongConnectionHeader()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.missingUpgradeHeader()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.wrongUpgradeHeader()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.missingMagicHeader()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.wrongMagicHeader()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.webSocketAndApplicationInterceptors()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.wsScheme()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.wsUppercaseScheme()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.wssScheme()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.httpsScheme()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.readTimeoutAppliesToHttpRequest()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.readTimeoutAppliesWithinFrames()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.readTimeoutDoesNotApplyAcrossFrames()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.clientPingsServerOnInterval()", "TOT": 12, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.clientDoesNotPingServerByDefault()", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.tearDown()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.textMessage()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.binaryMessage()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.nullStringThrows()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.nullByteStringThrows()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.clientTimeoutClosesBody()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.webSocketAndNetworkInterceptors()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.overflowOutgoingQueue()", "TOT": 12, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.closeReasonMaximumLength()", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.closeReasonTooLong()", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.websocketScheme(java.lang.String)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.newWebSocket()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.newWebSocket(okhttp3.Request)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.1.intercept(okhttp3.Chain)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.webSocketAndApplicationInterceptors().6.intercept(okhttp3.Chain)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.webSocketAndNetworkInterceptors().7.intercept(okhttp3.Chain)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.WebSocketHttpTest.readTimeoutAppliesWithinFrames().8.dispatch(okhttp3.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.WebSocketHttpTest.clientCancelsIfCloseIsNotAcknowledged()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketRecorder.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.WebSocketRecorder.assertFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealWebSocket.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.close(int,java.lang.String)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.pingCount()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.pongCount()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.pong(okio.ByteString)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.Message", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.Close", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.ClientStreams", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.CancelRunnable", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.close(int,java.lang.String,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.failWebSocket(java.lang.Exception,okhttp3.Response)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.onReadClose(int,java.lang.String)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.writeOneFrame()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4a50bcd30be1853aeeda48dd877d5048ab6fd96b"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 39.0, "deletions": 9.0, "lines": 48.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 26.0, "UPD": 1.0, "INS": 13.0, "MOV": 4.0, "DEL": 8.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/ws"], "changesInPackagesSPOON": ["okhttp3.internal.ws.RealWebSocket.failWebSocket(java.lang.Exception,okhttp3.Response)", "okhttp3.internal.ws.RealWebSocket.Close", "okhttp3.internal.ws.WebSocketRecorder.assertFailure()", "okhttp3.internal.ws.RealWebSocket.onReadClose(int,java.lang.String)", "okhttp3.internal.ws.RealWebSocket.close(int,java.lang.String,long)", "okhttp3.internal.ws.RealWebSocket.CancelRunnable", "okhttp3.internal.ws.RealWebSocket.ClientStreams", "okhttp3.internal.ws.RealWebSocket", "okhttp3.internal.ws.RealWebSocket.pongCount()", "okhttp3.internal.ws.RealWebSocket.pingCount()", "okhttp3.internal.ws.RealWebSocket.writeOneFrame()", "okhttp3.internal.ws.RealWebSocket.pong(okio.ByteString)", "okhttp3.internal.ws.RealWebSocket.Message", "okhttp3.internal.ws.RealWebSocket.close(int,java.lang.String)"]}, {"title": "SSLSocketFactory with Client Certificate works fine with okhttp2 but not with okhttp3", "body": "Here's how I created the SSLSocketFactory  that works fine with okhttp2.x but not with okhttp3:\n\n```\npublic SSLSocketFactory createSslSocketFactory() {\n    try {\n      String base64PKCS12 = \"****';\n      String certPassword = \"****\";\n\n      InputStream is = new ByteArrayInputStream(base64PKCS12.getBytes());\n      Base64InputStream b64is = new Base64InputStream(is, Base64.DEFAULT);\n\n      char[] tableauCertPassword = certPassword.toCharArray();\n\n      // Import PKCS12 in KeyStore\n      KeyStore appKeyStore = KeyStore.getInstance(\"PKCS12\");\n      appKeyStore.load(b64is, tableauCertPassword);\n\n      is.close();\n      b64is.close();\n\n      // Building SSL context for future use\n      KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(\"X509\");\n      keyManagerFactory.init(appKeyStore, tableauCertPassword);\n      KeyManager[] keyManagers = keyManagerFactory.getKeyManagers();\n\n      // Add Trustmanager\n      KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());\n      InputStream instream = app.getResources().openRawResource(R.raw.truststore);\n      trustStore.load(instream, \"*****\".toCharArray());\n      instream.close();\n\n      TrustManagerFactory tmf =\n          TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n      tmf.init(trustStore);\n      TrustManager[] managers = tmf.getTrustManagers();\n\n      SSLContext context = SSLContext.getInstance(\"TLS\");\n      context.init(keyManagers, managers, null);\n\n      return context.getSocketFactory();\n    } catch (Exception e) {\n      Timber.e(e, \"SSLSocket creation exception %s\", e.getMessage());\n      throw new AssertionError(e);\n    }\n  }\n```\n\n With okhttp3 i have tried this, as  @swankjesse did in : exemple CutomTust [https://github.com/square/okhttp/blob/master/samples/guide/src/main/java/okhttp3/recipes/CustomTrust.java],  but in my case I have to use **TrustStore**  : \n\n```\n\nprivate KeyManager[] keyManagers;\n\n  OkHttpClient provideOkHttpClient(Application app) {\n    X509TrustManager trustManager = trustManagerForCertificates(app);\n    SSLContext sslContext = null;\n    try {\n      sslContext = SSLContext.getInstance(\"TLS\");\n      sslContext.init(keyManagers, new TrustManager[] { trustManager }, null);\n    } catch (GeneralSecurityException e) {\n      throw new RuntimeException(e);\n    }\n\n    return new OkHttpClient.Builder()//\n        .sslSocketFactory(sslContext.getSocketFactory(),trustManager)//\n        .addInterceptor(new HostSelectionInterceptor()).build();\n  }\n\n  public  X509TrustManager trustManagerForCertificates(Application app) {\n\n    try {\n      String base64PKCS12 = \"**\";\n      String certPassword = \"**\";\n\n      InputStream is = new ByteArrayInputStream(base64PKCS12.getBytes());\n      Base64InputStream b64is = new Base64InputStream(is, Base64.DEFAULT);\n\n      char[] tableauCertPassword = certPassword.toCharArray();\n\n      // Import PKCS12 in KeyStore\n      KeyStore appKeyStore = KeyStore.getInstance(\"PKCS12\");\n      appKeyStore.load(b64is, tableauCertPassword);\n\n      is.close();\n      b64is.close();\n\n```\n\nHere is where I manage the **TRUSTSTORE** \n\n```\n  // Add Trustmanager\n      KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());\n      InputStream instream = app.getResources().openRawResource(R.raw.truststore);\n      trustStore.load(instream, \"****\".toCharArray());\n      instream.close();\n\n```\n\n```\n// Building SSL context for future use\n      KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(\"X509\");\n      keyManagerFactory.init(appKeyStore, tableauCertPassword);\n      keyManagers = keyManagerFactory.getKeyManagers();\n\n\n\n     TrustManagerFactory tmf =\n          TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n      tmf.init(trustStore );\n\n      TrustManager[] trustManagers = tmf.getTrustManagers();\n\n      if (trustManagers.length != 1 || !(trustManagers[0] instanceof X509TrustManager)) {\n        throw new IllegalStateException(\n            \"Unexpected default trust managers:\" + Arrays.toString(trustManagers));\n      }\n      return (X509TrustManager) trustManagers[0];\n    } catch (Exception e) {\n      Timber.e(e, \"SSLSocket creation exception %s\", e.getMessage());\n      throw new AssertionError(e);\n    }\n  }\n\n```\n\nThanks in advance\n", "url": "https://github.com/square/okhttp/issues/2786", "user": "mboukadir", "labels": ["bug", "needs info"], "created": "2016-08-11 15:40:53", "closed": "2016-11-13 22:59:05", "commits": {}, "ttf": 94.00027777777778, "commitsDetails": []}, {"title": "Getting crash issue in on Cache", "body": "Could you pls check and help me on this ?\n\n08-09 13:00:44.746: I/dalvikvm(15817): \"OkHttp http://yoapp-dev.herokuapp.com/...\" prio=5 tid=31 RUNNABLE\n08-09 13:00:44.746: I/dalvikvm(15817):   | group=\"main\" sCount=0 dsCount=0 obj=0x45ce3400 self=0x62c75130\n08-09 13:00:44.746: I/dalvikvm(15817):   | sysTid=19629 nice=0 sched=0/0 cgrp=apps handle=1690652936\n08-09 13:00:44.746: I/dalvikvm(15817):   | state=R schedstat=( 978869299 6219494 74 ) utm=97 stm=0 core=2\n08-09 13:00:44.746: I/dalvikvm(15817):   at okio.Segment.<init>(Segment.java:~61)\n08-09 13:00:44.746: I/dalvikvm(15817):   at okio.SegmentPool.take(SegmentPool.java:46)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okio.Buffer.writableSegment(Buffer.java:1151)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okio.Okio$2.read(Okio.java:138)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okio.RealBufferedSource.indexOf(RealBufferedSource.java:325)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okio.RealBufferedSource.indexOf(RealBufferedSource.java:314)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:210)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.Cache$Entry.<init>(Cache.java:535)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.Cache.get(Cache.java:203)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.Cache$1.get(Cache.java:143)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.internal.http.HttpEngine.sendRequest(HttpEngine.java:203)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.RealCall.getResponse(RealCall.java:243)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:201)\n08-09 13:00:44.751: I/dalvikvm(15817):   at com.yo.android.di.NetWorkModule$OfflineResponseInterceptor.intercept(NetWorkModule.java:177)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:190)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:212)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:190)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:163)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.RealCall.access$100(RealCall.java:30)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.RealCall$AsyncCall.execute(RealCall.java:127)\n08-09 13:00:44.751: I/dalvikvm(15817):   at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\n08-09 13:00:44.751: I/dalvikvm(15817):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n08-09 13:00:44.751: I/dalvikvm(15817):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n08-09 13:00:44.751: I/dalvikvm(15817):   at java.lang.Thread.run(Thread.java:841)\n08-09 13:00:44.756: W/dalvikvm(15817): threadid=31: thread exiting with uncaught exception (group=0x41d5bc08)\n08-09 13:00:44.811:\n************************The below code I am using for offline caching\n` public class OfflineResponseInterceptor implements Interceptor {\n        final ConnectivityHelper mConnectivityHelper;\n\n```\n    public OfflineResponseInterceptor(ConnectivityHelper connectivityHelper) {\n        mConnectivityHelper = connectivityHelper;\n    }\n\n    @Override\n    public Response intercept(Chain chain) throws IOException {\n        Request request = chain.request();\n\n        if (!mConnectivityHelper.isConnected()) {\n            // tolerate 4-weeks stale\n            int maxStale = 60 * 60 * 24 * 28;\n            request = request.newBuilder()\n                    .header(\"Cache-Control\", \"public, only-if-cached, max-stale=\" + maxStale)\n                    .build();\n        }\n\n        return chain.proceed(request);\n    }\n}\n```\n\n`\n", "url": "https://github.com/square/okhttp/issues/2781", "user": "rameshkec85", "labels": ["bug", "needs info"], "created": "2016-08-09 08:41:12", "closed": "2016-10-16 16:19:29", "commits": {}, "ttf": 68.00027777777778, "commitsDetails": []}, {"title": "HttpLoggingInterceptor didn't Log GET HEADER (e.q. cookies", "body": "- [ ] Feature Request.\n\nHi \nthe HttpLoggingInterceptor didn't support logging of the HTTP GET Header.\nIn my special case I like to debug the cookies which are send to the server on a HTTP GET Request.\nThe Responce header logged work fine.\n\nRegards\nStephan\n", "url": "https://github.com/square/okhttp/issues/2774", "user": "skauss", "labels": ["bug", "needs info"], "created": "2016-08-05 11:05:56", "closed": "2016-08-08 16:48:50", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Connections should be shared between OkHttpClients when using shared ConnectionPool", "body": "What kind of issue is this?\n- [X] Bug report.\n## tl;dr\n\nCertificateChainCleaner / CertificatePinner don't override equals() even though Platform.buildCertificateChainCleaner() constructs new (not interned) instances. This breaks connection pooling across separately constructed OkHttpClient instances with shared ConnectionPool.\n## Failing tests\n- [Gist with a single failing test (adopted from a part of URLConnectionTest)](https://github.com/15characterlimi/okhttp/commit/119873249d7414964a0ea24fac79081ad7c7b7d9)\n- [Draft commit that adds two failing tests](https://github.com/15characterlimi/okhttp/commit/119873249d7414964a0ea24fac79081ad7c7b7d9)\n## Detail\n- A few places (namely OkHttpClient(Builder), and both overloads of \n  OkHttpClient.Builder.sslSocketFactory()s), call\n  CertificateChainCleaner.get(X509TrustManager) to initialize a\n  OkHttpClient's CertificateChainCleaner, and\n- CertificateChainCleaner.get(X509TrustManager) always returns a new\n  CertificateChainCleaner instance, and\n- CertificateChainCleaner.equals() is based on Object identity, and\n- CertificatePinner.withCertificateChainCleaner() returns a new CertificatePinner\n  instance if the CertificateChainCleaner instances are different, and\n- Address.equals() depends on equal(this.certificatePinner, that.certificatePinner), and\n- ConnectionPool.get() only reuses a Connection if address.equals(connection.route().address)\n\nThe issue should be easy to work around once one finds the root cause, but in case I feel inspired to pull together a fix for you, what's your view on how this should be fixed?\n\nI suggest that CertificateChainCleaner and CertificatePinner should implement value equality (i.e. override Object.equals()). That CertificatePinner.withCertificateChainCleaner() uses != to compare object instances (namely CertificateChainCleaner instances) seems like a major antipattern to me.\n\nAlternatively, CertificateChainCleaner instances could be interned.\n\nBoth of those approaches would rely on X509TrustManager.equals() to work in order to figure out when a new CertificateChainCleaner instance is required; but from what see, X509TrustManager seems to be a singleton in practice so its equals() should not be a problem. \n\nI know the docs suggest using a OkHttpClient singleton instance as the base for all connections as well as additional OkHttpClient.Builders, however it seems like poor behavior from the library to rely on this in order for ConnectionPool instances to be shared.\n", "url": "https://github.com/square/okhttp/issues/2757", "user": "15characterlimi", "labels": ["bug"], "created": "2016-07-28 17:13:18", "closed": "2016-10-19 01:35:00", "commits": {"27ece261726695fc7d1b5fa95fabf1798fd0a409": {"commitGHEventType": "closed", "commitUser": "swankjesse"}}, "ttf": 82.00027777777778, "commitsDetails": [{"commitHash": "27ece261726695fc7d1b5fa95fabf1798fd0a409", "commitGHEventType": "closed", "commitUser": "swankjesse", "commitParents": ["a28fee5a2bc68fd9e5f00c6322870240739eeac4"], "nameRev": "27ece261726695fc7d1b5fa95fabf1798fd0a409 tags/parent-3.5.0~34^2", "commitMessage": "Fix Connection sharing across equivalent OkHttpClients\n\nFixes https://github.com/square/okhttp/issues/2757\n\nThe OkHttpClient(Builder) constructor and both overloads of\nOkHttpClient.Builder.sslSocketFactory() set a new CertificateChainCleaner\ninstance on the OkHttpClient.\n\nBefore this CL, CertificateChainCleaner, CertificatePinner and\nTrustRootIndex used object rather than value identity semantics. This\ncaused Address.equals() to not recognize when addresses were equivalent,\nwhich broke connection pooling across OkHttpClient instances.\n\nThis CL changes CertificateChainClaner, CertificatePinner and\nTrustRootIndex to use value equality by overriding equals() and hashCode().\n\nCertificatePinner.pins and BasicTrustRootIndex.subjectToCaCerts's values\nhave changed from List to Set because their order shouldn't matter.\nThis CL uses LinkedHashSet, although HashSet should also work.\n", "commitDateTime": "2016-10-18 21:34:25", "authoredDateTime": "2016-07-29 20:02:33", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CertificateChainCleanerTest.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "okhttp-tests/src/test/java/okhttp3/OkHttpClientTest.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 27, "deletions": 2, "lines": 29}, {"filePath": "okhttp/src/main/java/okhttp3/CertificatePinner.java", "insertions": 23, "deletions": 6, "lines": 29}, {"filePath": "okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/BasicCertificateChainCleaner.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/TrustRootIndex.java", "insertions": 34, "deletions": 6, "lines": 40}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CertificateChainCleanerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificateChainCleanerTest.equalsFromCertificate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.equalsFromTrustManager()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClientTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClientTest.certificatePinnerEquality()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.connectViaHttpsReusingConnections()", "TOT": 25, "UPD": 4, "INS": 1, "MOV": 19, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.connectViaHttpsReusingConnectionsAfterRebuildingClient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.URLConnectionTest.connectViaHttpsReusingConnections(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificatePinner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificatePinner", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinner.withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.CertificatePinner.Builder.build()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinner.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinner.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AndroidPlatform.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.AndroidCertificateChainCleaner.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.AndroidCertificateChainCleaner.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BasicCertificateChainCleaner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.BasicCertificateChainCleaner.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.BasicCertificateChainCleaner.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TrustRootIndex.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.TrustRootIndex.BasicTrustRootIndex.findByIssuerAndSignature(java.security.cert.X509Certificate)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.TrustRootIndex.BasicTrustRootIndex", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.TrustRootIndex.AndroidTrustRootIndex.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.TrustRootIndex.AndroidTrustRootIndex.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.TrustRootIndex.BasicTrustRootIndex.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.TrustRootIndex.BasicTrustRootIndex.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["27ece261726695fc7d1b5fa95fabf1798fd0a409"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 75, "deletions": 12, "lines": 87, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 22, "UPD": 7, "INS": 11, "MOV": 3, "DEL": 1, "spoonFilesChanged": 4, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/tls", "okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/internal/platform"], "changesInPackagesSPOON": ["okhttp3.internal.tls.TrustRootIndex.AndroidTrustRootIndex.hashCode()", "okhttp3.internal.tls.TrustRootIndex.BasicTrustRootIndex", "okhttp3.CertificatePinner.Builder.build()", "okhttp3.internal.tls.BasicCertificateChainCleaner.hashCode()", "okhttp3.CertificatePinner.withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)", "okhttp3.internal.tls.TrustRootIndex.BasicTrustRootIndex.hashCode()", "okhttp3.CertificatePinner", "okhttp3.internal.platform.AndroidPlatform.AndroidCertificateChainCleaner.hashCode()", "okhttp3.CertificatePinner.hashCode()", "okhttp3.internal.tls.TrustRootIndex.BasicTrustRootIndex.findByIssuerAndSignature(java.security.cert.X509Certificate)", "okhttp3.CertificatePinner.equals(java.lang.Object)", "okhttp3.internal.tls.TrustRootIndex.AndroidTrustRootIndex.equals(java.lang.Object)", "okhttp3.internal.platform.AndroidPlatform.AndroidCertificateChainCleaner.equals(java.lang.Object)", "okhttp3.internal.tls.BasicCertificateChainCleaner.equals(java.lang.Object)", "okhttp3.internal.tls.TrustRootIndex.BasicTrustRootIndex.equals(java.lang.Object)"]}, {"title": "okhttp 3.4.1will go endless loop,when there is a IOException(\"shutdown\")", "body": "here is how it go endless loop:\nin file RetryAndFollowUpInterceptor.java \n\n```\npublic Response intercept(Chain chain) throws IOException {\n\nRequest request = chain.request();\nstreamAllocation = new StreamAllocation(\n    client.connectionPool(), createAddress(request.url()));\nint followUpCount = 0;\nResponse priorResponse = null;\nwhile (true) {\n  if (canceled) {\n    streamAllocation.release();\n    throw new IOException(\"Canceled\");\n  }\n\n  Response response = null;\n  boolean releaseConnection = true;\n  try {\n    response = ((RealInterceptorChain) chain).proceed(request, streamAllocation, null, null);\n    releaseConnection = false;\n  } catch (RouteException e) {\n    // The attempt to connect via a route failed. The request will not have been sent.\n    if (!recover(e.getLastConnectException(), true, request)) throw e.getLastConnectException();\n    releaseConnection = false;\n    continue;\n  } catch (IOException e) {\n    // An attempt to communicate with a server failed. The request may have been sent.\n    if (!recover(e, false, request)) throw e;\n    releaseConnection = false;\n    continue;\n  } finally {\n    // We're throwing an unchecked exception. Release any resources.\n    if (releaseConnection) {\n      streamAllocation.streamFailed(null);\n      streamAllocation.release();\n    }\n  }\n```\n\nwhen there is a  IOException(\"shutdown\") when execute \n`response = ((RealInterceptorChain) chain).proceed(request, streamAllocation, null, null);`\nit will go into catch block,and judge if can recover,`recover(e, false, request)` unfortunately recover() return true,so it will continue and go endless loop\n", "url": "https://github.com/square/okhttp/issues/2756", "user": "leokelly", "labels": ["bug", "needs info"], "created": "2016-07-28 15:48:10", "closed": "2016-11-20 16:12:18", "commits": {"b3e70fc22288172297c7753990d5b64b6b4e048b": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "83491bad4fa3a04cb1ff8bc70b874b8fa3f764a9": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "d6b884fa02b6ac94aa527a6e46a49727b9f7a678": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "3214e859a5a752e95eca912091a6b90ff43ead0e": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "56c0f842ebd1b0453aa989f59a5125cb56144952": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "8efd3d7963df7d99b27da9e15ad907568d613bfd": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "ec48a0971d20ac3c6ac9e7230b9889eeffa89a74": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "81a4d08931e338a9665546da13ba5936e12fd324": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "fa88214201f36b345796148f516dd74ff2cb9335": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "64cf4da5dfee03fc4056c5385f4a45186c428289": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "246e3ed14488fcedf20dafe449c2a3968ed9e2b7": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "3ab6578dc94385a86702f6eb38a86e2193420f18": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "5148f056e2b6b2d1df1ca64a0ab90b559669a5fc": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0878d3b5afefd7bb9d2a1468df59d8514ffd952f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "29734b969b4f088bfaded001197cc66d8f028726": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "f2732a41877731e169ff1a0441f144e390464ddd": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "a51ceea2bdccf1dd7b07da4f2b6b95c7fd5a257b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "9c8e26e70118f543626d68e1a70238ebff6c8ecc": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "4d73a3a65dd549a2f1865b1dfb4ec0373ec175c0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 115.00027777777778, "commitsDetails": [{"commitHash": "b3e70fc22288172297c7753990d5b64b6b4e048b", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "83491bad4fa3a04cb1ff8bc70b874b8fa3f764a9", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d6b884fa02b6ac94aa527a6e46a49727b9f7a678", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3214e859a5a752e95eca912091a6b90ff43ead0e", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "56c0f842ebd1b0453aa989f59a5125cb56144952", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8efd3d7963df7d99b27da9e15ad907568d613bfd", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ec48a0971d20ac3c6ac9e7230b9889eeffa89a74", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "81a4d08931e338a9665546da13ba5936e12fd324", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fa88214201f36b345796148f516dd74ff2cb9335", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "64cf4da5dfee03fc4056c5385f4a45186c428289", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "246e3ed14488fcedf20dafe449c2a3968ed9e2b7", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3ab6578dc94385a86702f6eb38a86e2193420f18", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5148f056e2b6b2d1df1ca64a0ab90b559669a5fc", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0878d3b5afefd7bb9d2a1468df59d8514ffd952f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "29734b969b4f088bfaded001197cc66d8f028726", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f2732a41877731e169ff1a0441f144e390464ddd", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a51ceea2bdccf1dd7b07da4f2b6b95c7fd5a257b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9c8e26e70118f543626d68e1a70238ebff6c8ecc", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4d73a3a65dd549a2f1865b1dfb4ec0373ec175c0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["7411ad94acdaea546826562ccd96ab5b78c36da4"], "nameRev": "4d73a3a65dd549a2f1865b1dfb4ec0373ec175c0 tags/parent-3.5.0~25^2", "commitMessage": "Tests for management of HTTP/2 connections that are shutdown.\n\nSee: https://github.com/square/okhttp/issues/2756\n", "commitDateTime": "2016-11-03 15:25:46", "authoredDateTime": "2016-10-08 10:06:11", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 65, "deletions": 0, "lines": 65}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.streamedBodyIsRetriedOnHttp2Shutdown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionNotReusedAfterShutdown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionShutdownAfterHealthCheck()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.cancelWithStreamNotCompleted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4d73a3a65dd549a2f1865b1dfb4ec0373ec175c0"], "filteredCommitsReason": {"duplicated": 18, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "okhttp 3.2.0, android4.0.3  libcore.io.ErrnoException: getsockname failed: EBADF (Bad file number)", "body": "libcore.io.ErrnoException: getsockname failed: EBADF (Bad file number)\n    at libcore.io.Posix.getsockname(Posix.java)\n    at libcore.io.ForwardingOs.getsockname(ForwardingOs.java:65)\n    at libcore.io.IoBridge.getSocketLocalAddress(IoBridge.java:629)\n    at libcore.io.IoBridge.recvfrom(IoBridge.java:533)\n    at java.net.PlainSocketImpl.read(PlainSocketImpl.java:488)\n    at java.net.PlainSocketImpl.access$000(PlainSocketImpl.java:46)\n    at java.net.PlainSocketImpl$PlainSocketInputStream.read(PlainSocketImpl.java:240)\n    at okio.Okio$2.read(Okio.java:139)\n    at okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\n    at okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\n    at okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\n    at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\n    at okhttp3.internal.http.Http1xStream.readResponse(Http1xStream.java:184)\n    at okhttp3.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:125)\n    at okhttp3.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:723)\n    at okhttp3.internal.http.HttpEngine.access$200(HttpEngine.java:81)\n    at okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:708)\n    at okhttp3.internal.http.HttpEngine.readResponse(HttpEngine.java:563)\n    at okhttp3.RealCall.getResponse(RealCall.java:241)\n    at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\n    at okhttp3.RealCall.execute(RealCall.java:57)\n", "url": "https://github.com/square/okhttp/issues/2754", "user": "Little-of-Water", "labels": ["bug", "needs info"], "created": "2016-07-27 09:46:49", "closed": "2016-10-16 16:21:44", "commits": {}, "ttf": 81.00027777777778, "commitsDetails": []}, {"title": "Multiple Cookies are not sending to the subsequent request ", "body": "Multiple Cookies are not sending to the subsequent request where the previous response has multiple \"Set-Cookie\".\nAt the moment the current implementation of JavaNetCookieJar sends only the first cookie to the request and ignores other cookies \n\nAny robust solution is appreciated \n\nhttp://stackoverflow.com/questions/38582530/multiple-cookies-headers-okhttp-javanetcookiejar/38586512#38586512\n", "url": "https://github.com/square/okhttp/issues/2752", "user": "nksaroj", "labels": ["bug", "needs info"], "created": "2016-07-26 09:52:28", "closed": "2016-10-16 16:22:01", "commits": {}, "ttf": 82.00027777777778, "commitsDetails": []}, {"title": "okhttp 3.4.1, Android 4.2.2 HttpUrl.java canonicalize crash", "body": "On Android 4.2 okhttp 3.4.1, as soon as I hit a button to start with the post request to the server, I get this error:\n\n```\njava.lang.IllegalStateException: Could not execute method for android:onClick\n\n```\n\nand it leads to this line:\n\n```\nokhttp3.HttpUrl.canonicalize\n```\n\nThe logcat shows the following dump:\n\n```\n07-25 15:21:07.257 17202-17202/mobi.gaurav.telx E/AndroidRuntime: FATAL EXCEPTION: main\n                                                                  java.lang.IllegalStateException: Could not execute method for android:onClick\n                                                                      at android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:293)\n                                                                      at android.view.View.performClick(View.java:4212)\n                                                                      at android.view.View$PerformClick.run(View.java:17476)\n                                                                      at android.os.Handler.handleCallback(Handler.java:800)\n                                                                      at android.os.Handler.dispatchMessage(Handler.java:100)\n                                                                      at android.os.Looper.loop(Looper.java:194)\n                                                                      at android.app.ActivityThread.main(ActivityThread.java:5371)\n                                                                      at java.lang.reflect.Method.invokeNative(Native Method)\n                                                                      at java.lang.reflect.Method.invoke(Method.java:525)\n                                                                      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:833)\n                                                                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)\n                                                                      at dalvik.system.NativeStart.main(Native Method)\n                                                                   Caused by: java.lang.reflect.InvocationTargetException\n                                                                      at java.lang.reflect.Method.invokeNative(Native Method)\n                                                                      at java.lang.reflect.Method.invoke(Method.java:525)\n                                                                      at android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:288)\n                                                                      at android.view.View.performClick(View.java:4212)\u00a0\n                                                                      at android.view.View$PerformClick.run(View.java:17476)\u00a0\n                                                                      at android.os.Handler.handleCallback(Handler.java:800)\u00a0\n                                                                      at android.os.Handler.dispatchMessage(Handler.java:100)\u00a0\n                                                                      at android.os.Looper.loop(Looper.java:194)\u00a0\n                                                                      at android.app.ActivityThread.main(ActivityThread.java:5371)\u00a0\n                                                                      at java.lang.reflect.Method.invokeNative(Native Method)\u00a0\n                                                                      at java.lang.reflect.Method.invoke(Method.java:525)\u00a0\n                                                                      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:833)\u00a0\n                                                                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)\u00a0\n                                                                      at dalvik.system.NativeStart.main(Native Method)\u00a0\n                                                                   Caused by: java.lang.NullPointerException\n                                                                      at okhttp3.HttpUrl.canonicalize(HttpUrl.java:1612)\n                                                                      at okhttp3.FormBody$Builder.add(FormBody.java:110)\n                                                                      at mobi.gaurav.telx.HTTP.post(HTTP.java:82)\n                                                                      at mobi.gaurav.telx.MainActivity.startConnecting(MainActivity.java:358)\n                                                                      at java.lang.reflect.Method.invokeNative(Native Method)\u00a0\n                                                                      at java.lang.reflect.Method.invoke(Method.java:525)\u00a0\n                                                                      at android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener.onClick(AppCompatViewInflater.java:288)\u00a0\n                                                                      at android.view.View.performClick(View.java:4212)\u00a0\n                                                                      at android.view.View$PerformClick.run(View.java:17476)\u00a0\n                                                                      at android.os.Handler.handleCallback(Handler.java:800)\u00a0\n                                                                      at android.os.Handler.dispatchMessage(Handler.java:100)\u00a0\n                                                                      at android.os.Looper.loop(Looper.java:194)\u00a0\n                                                                      at android.app.ActivityThread.main(ActivityThread.java:5371)\u00a0\n                                                                      at java.lang.reflect.Method.invokeNative(Native Method)\u00a0\n                                                                      at java.lang.reflect.Method.invoke(Method.java:525)\u00a0\n                                                                      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:833)\u00a0\n                                                                      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:600)\u00a0\n                                                                      at dalvik.system.NativeStart.main(Native Method)\u00a0\n```\n\nThe strange thing is it works perfectly with Android 4.4+ but fails on Android 4.2. \n\nI am using the example from the website itself. Nothing fancy.\n", "url": "https://github.com/square/okhttp/issues/2749", "user": "gaurav-chandra", "labels": ["bug", "needs info"], "created": "2016-07-25 09:55:09", "closed": "2016-11-13 22:59:23", "commits": {}, "ttf": 111.00027777777778, "commitsDetails": []}, {"title": "okhttp 3.1.2 throws unknownhost exception when using socks proxy with azure sdk (beta1)", "body": "okhttp 3.1.2 throws unknownhost exception when using socks proxy with azure sdk (beta1)\nOther jars used : retrofit-2.0.0-beta4.jar\n\nNote : \nThe machine on which the code gets executed does not have internet. But hosts file has IP Address mapping\nThis issue is not seen for HTTP proxy\n\nCode snippet:\n\nOkHttpClient.Builder clientBuilder = new OkHttpClient.Builder();\n            clientBuilder.connectTimeout(CONNECT_TIMEOUT, TimeUnit.SECONDS);\n            clientBuilder.writeTimeout(WRITE_TIMEOUT, TimeUnit.SECONDS);\n            clientBuilder.readTimeout(READ_TIMEOUT, TimeUnit.SECONDS);\n            logger.debug(methodName, \"ProxyType :\" + proxy.getproxyType());\n            clientBuilder.proxy(new Proxy(proxy.getproxyType(), InetSocketAddress.createUnresolved(proxy.getproxyHost(),\n                    proxy.getproxyPort())));\n\n```\n        // Set Proxy Credentials\n        Authenticator proxyAuthenticator = new Authenticator() {\n            @Override\n            public okhttp3.Request authenticate(okhttp3.Route route, okhttp3.Response response) throws IOException {\n                String credential = Credentials.basic(proxy.getuserName(), proxy.getpassword());\n                return response.request().newBuilder().header(\"Proxy-Authorization\", credential).build();\n            }\n        };\n        clientBuilder.proxyAuthenticator(proxyAuthenticator);\n\n        Retrofit.Builder retroBuilder = new Retrofit.Builder();\n        retroBuilder.client(clientBuilder.build());\n\n        tmpArmClient = new ResourceManagementClientImpl(account.getbaseURL(), appTokenCreds, clientBuilder, retroBuilder);\n```\n\nexception\njava.net.UnknownHostException: management.azure.com:443\n    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:466)\n    at java.net.Socket.connect(Socket.java:589)\n    at okhttp3.internal.Platform.connectSocket(Platform.java:126)\n    at okhttp3.internal.io.RealConnection.connectSocket(RealConnection.java:140)\n    at okhttp3.internal.io.RealConnection.connect(RealConnection.java:111)\n    at okhttp3.internal.http.StreamAllocation.findConnection(StreamAllocation.java:188)\n    at okhttp3.internal.http.StreamAllocation.findHealthyConnection(StreamAllocation.java:127)\n    at okhttp3.internal.http.StreamAllocation.newStream(StreamAllocation.java:97)\n    at okhttp3.internal.http.HttpEngine.connect(HttpEngine.java:289)\n    at okhttp3.internal.http.HttpEngine.sendRequest(HttpEngine.java:241)\n    at okhttp3.RealCall.getResponse(RealCall.java:240)\n    at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)\n    at com.microsoft.rest.UserAgentInterceptor.intercept(UserAgentInterceptor.java:58)\n    at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:187)\n    at com.microsoft.rest.retry.RetryHandler.intercept(RetryHandler.java:69)\n    at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:187)\n    at com.microsoft.rest.credentials.TokenCredentialsInterceptor.sendRequestWithAuthorization(TokenCredentialsInterceptor.java:49)\n    at com.microsoft.rest.credentials.TokenCredentialsInterceptor.intercept(TokenCredentialsInterceptor.java:37)\n    at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:187)\n    at com.microsoft.azure.CustomHeaderInterceptor.intercept(CustomHeaderInterceptor.java:133)\n    at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:187)\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\n    at okhttp3.RealCall.execute(RealCall.java:57)\n    at retrofit2.OkHttpCall.execute(OkHttpCall.java:177)\n    at com.microsoft.azure.management.resources.ProvidersOperationsImpl.list(ProvidersOperationsImpl.java:240)\n", "url": "https://github.com/square/okhttp/issues/2748", "user": "nihalnaik25", "labels": ["bug", "needs info"], "created": "2016-07-25 09:44:21", "closed": "2016-10-16 16:22:07", "commits": {}, "ttf": 83.00027777777778, "commitsDetails": []}, {"title": "NullPointerException in 'c.f okhttp3.ResponseBody.source()'", "body": "Device is Nexus 6P\n\n```\nFatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'c.f okhttp3.ResponseBody.source()' on a null object reference\n       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:103)\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\n       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:124)\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:92)\n       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:67)\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:170)\n       at okhttp3.RealCall.access$100(RealCall.java:33)\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:120)\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)\n       at java.lang.Thread.run(Thread.java:761)\n```\n", "url": "https://github.com/square/okhttp/issues/2745", "user": "hamberluo", "labels": ["bug"], "created": "2016-07-24 09:46:46", "closed": "2017-04-30 17:20:33", "commits": {}, "ttf": 280.0002777777778, "commitsDetails": []}, {"title": "connection reset by peer", "body": "java.net.SocketException: sendto failed: ECONNRESET (Connection reset by peer)\ncause = {ErrnoException@22155} \"android.system.ErrnoException: sendto failed: ECONNRESET (Connection reset by peer)\"\ndetailMessage = \"sendto failed: ECONNRESET (Connection reset by peer)\"\nstackState = {Object[36]@22157} \nstackTrace = {StackTraceElement[0]@22158} \nsuppressedExceptions = {Collections$EmptyList@22159}  size = 0\nshadow$_klass_ = {Class@20115} \"class java.net.SocketException\"\nshadow$_monitor_ = -1092557150\n\n\u5f53\u6211\u4e0a\u4f205\u5f20\u6216\u80055\u5f20\u4ee5\u4e0a\u7684\u56fe\u7247\u65f6\uff0c\u5c31\u4f1a\u62a5\u8fd9\u4e2a\u9519\u8bef\u3002\nMultipartBody.Builder builder = new MultipartBody.Builder();\n        builder.setType(MultipartBody.FORM)\n                .addFormDataPart(\"uid\", MySharedPreferences.getUserInfo(TweetActivity.this).getUid())\n                .addFormDataPart(\"coustumeclass\", selectCategory.getCname())\n                .addFormDataPart(\"clothestype\", selectCategory.getClothestype())\n                .addFormDataPart(\"longitude\", myLocation.getLongitude() + \"\")\n                .addFormDataPart(\"latitude\", myLocation.getLatitude() + \"\")\n                .addFormDataPart(\"status\", status);\n\n```\n    if (selectBrand != null && selectBrand.getBid() != null)\n        builder.addFormDataPart(\"bid\", selectBrand.getBid());\n\n    if (selectStore != null && selectStore.getSaid() != null) {\n        builder.addFormDataPart(\"signstores\", selectStore.getStid());\n        builder.addFormDataPart(\"said\", selectStore.getSaid());\n        builder.addFormDataPart(\"storesname\", selectStore.getStname());\n        builder.addFormDataPart(\"stlongitude\", selectStore.getStlongitude());\n        builder.addFormDataPart(\"stlatitude\", selectStore.getStlatitude());\n    }\n\n    if (selectSize != null)\n        builder.addFormDataPart(\"size\", selectSize);\n\n    if (!modeTexts.isEmpty()) {\n        String s = \"\";\n        for (int i = 0; i < modeTexts.size(); i++) {\n            s += modeTexts.get(i) + Constant.TWEET_TEXT_DOT;\n        }\n        builder.addFormDataPart(\"introduce\", s.substring(0, s.length() - Constant.TWEET_TEXT_DOT.length()));\n    }\n\n    if (selectBrand.getSaid() == null && url != null) {\n        builder.addFormDataPart(\"link\", url);\n    }\n\n    for (int i = 0; i < pathList.size(); i++) {\n       /* String s;\n        if (i == 0) {\n            s = \"headImage\";\n        } else {\n            s = \"headImage\" + i;\n        }*/\n        builder.addFormDataPart(\"headImage\", System.currentTimeMillis() + \".png\",\n                RequestBody.create(Constant.MEDIA_TYPE_PNG, new File(pathList.get(i))));\n    }\n    RequestBody requestBody = builder.build();\n    okhttp3.Request request = new okhttp3.Request.Builder()\n            .url(ApiManager.getRequestUrl(ApiManager.PUT_TWEET))\n            .post(requestBody)\n            .build();\n\n    getClient().newCall(request).enqueue(new Callback() {\n        @Override\n        public void onFailure(Call call, IOException e) {\n            LogUtils.d(e.toString());\n            sendOnFailure();\n        }\n\n        @Override\n        public void onResponse(Call call, Response response) throws IOException {\n            if (response.isSuccessful()) {\n                Gson gson = new Gson();\n                String result = response.body().string();\n                PutTweetRoot putTweetRoot = gson.fromJson(result, PutTweetRoot.class);\n                if (putTweetRoot.getStatus() == ClientCode.SUCCEED) {\n                    sendOnResponse();\n                } else {\n                    sendOnError(putTweetRoot.getStatus());\n                }\n            } else {\n                sendOnFailure();\n            }\n        }\n    });\n```\n", "url": "https://github.com/square/okhttp/issues/2730", "user": "onionYJK", "labels": ["bug", "needs info"], "created": "2016-07-18 02:08:40", "closed": "2016-11-13 22:59:57", "commits": {}, "ttf": 118.00027777777778, "commitsDetails": []}, {"title": "OkHttp 3.3.4-RC1 strange headers behavior with HTTP2 enabled", "body": "I have updated from OkHttp 3.3.1 to 3.3.4-RC1 and then have faced strange issue:\nWhen I change request header value became merged with value from previous request (we have saw it on server side). It looks like this SESSION: <oldValue>, <newValue> instead of SESSION: <newValue>\n\nThis is exactly what we saw on server side - header has 2 different sessions in it 0ed91*\\* and dc35275*:\n`'api-session': '0ed91033efc8950f18c85afa4e6537a3; 7RCbXBqq#zK=Tmfk03hsR7vaRra7jka8S8bMZh0fd1VJkq7?Ydtp=Y&uNNguGvoI; active; 1467802743964; 900000, dc352754a1606f641acac300a9d81adb; 7kch9FjctfxHSQb29NGytrQe7XICtn9WyPtmT2yKJ@s4ou0#Gikg&bvYfY@XxHN6; not-active; 1467802755394; 900000',`\n\nThis happens only if Http2 enabled and client use OkHttp3 ver 3.3.4-RC1.\n\nServer: Nginx 1.11.1 (Http2 Enabled)\nClient: Nexus 5 (Android 6.0.1)\nConnection: HTTPS (TLS1.2)\n\nThis is my interceptor used to add session header to each request and get new session header from each response.\n\n``` JAVA\nInterceptor apiInterceptor = new Interceptor() {\n            @Override\n            public okhttp3.Response intercept(Chain chain) throws IOException {\n                Request original = chain.request();\n\n                Request.Builder builder = original.newBuilder()\n                        .method(original.method(), original.body());\n\n                if (model.getSession() != null) {\n                    builder.addHeader(SESSION_HEADER, model.getSession().getHeader());\n                }\n\n                Request request = builder.build();\n\n                okhttp3.Response response = chain.proceed(request);\n\n                if (response.isSuccessful()) {\n                    extractSession(response.headers());\n                }\n\n                return response;\n            }\n        };\n```\n", "url": "https://github.com/square/okhttp/issues/2699", "user": "DASAR", "labels": ["bug", "needs info"], "created": "2016-07-06 12:24:09", "closed": "2016-07-12 06:59:31", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "(ssl_parse_serverhello_tlsext+262) native crash on KitKat and lower", "body": "Hello,\n\nI'm using RxJava + Retrofit 2.1.0 (i.e OkHttp 3.3.0) to interact with Google Places Service API.\nSometimes I'm getting app crashes on SSL handshake layer on Android 4.4 and lower. Not able to reproduce on Android 5 and higher. Issue is easier to reproduce on devices with a smaller RAM ~1GB.\nThe issue is mostly happening when doing a lot of request at the same time and coming from one of threads used to communicate with places service.\n\nI checked all similar issues listed in okhttp repo, but most of them are very old and suggesting to update OkHttpClient version.\n\nCrash dumps:\n\nAndroid 4.4.2 Galaxy S4 mini:\n\n```\n06-29 12:42:55.071 20653-22035/com.androidapi.productname A/libc: heap corruption detected by dlmalloc\n06-29 12:42:55.081 20653-22035/com.androidapi.productname A/libc: Fatal signal 6 (SIGABRT) at 0x000050ad (code=-6), thread 22035 (RxIoScheduler-1)\n\n06-29 12:42:55.191 6808-6808/? I/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-29 12:42:55.191 6808-6808/? I/DEBUG: Build fingerprint: 'samsung/serranodsxx/serranods:4.4.2/KOT49H/I9192XXUCNJ3:user/release-keys'\n06-29 12:42:55.191 6808-6808/? I/DEBUG: Revision: '5'\n06-29 12:42:55.191 6808-6808/? I/DEBUG: pid: 20653, tid: 22035, name: RxIoScheduler-1  >>> com.androidapi.productname <<<\n06-29 12:42:55.191 6808-6808/? I/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\n06-29 12:42:55.191 6808-6808/? I/DEBUG: Abort message: 'heap corruption detected by dlmalloc'\n06-29 12:42:55.591 6808-6808/? I/DEBUG:     r0 00000000  r1 00005613  r2 00000006  r3 00000000\n06-29 12:42:55.591 6808-6808/? I/DEBUG:     r4 00000006  r5 00000000  r6 00005613  r7 0000010c\n06-29 12:42:55.591 6808-6808/? I/DEBUG:     r8 40b4de34  r9 6b3d505d  sl 00000001  fp 6b3d505f\n06-29 12:42:55.591 6808-6808/? I/DEBUG:     ip 40d95319  sp 69ea1908  lr 400f419d  pc 40103144  cpsr 000f0010\n06-29 12:42:55.591 6808-6808/? I/DEBUG:     d0  0000000000000000  d1  0000000000000000\n06-29 12:42:55.591 6808-6808/? I/DEBUG:     d2  0000000000000000  d3  0000000000000000\n06-29 12:42:55.591 6808-6808/? I/DEBUG:     d4  4000000000000000  d5  42d6bcc41e900000\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d6  405866094812be49  d7  0000040058f561b1\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d8  bf50624dd2f1a9fc  d9  c05796b342b80b74\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d10 4000000000000000  d11 3ddb7cdfd9d7bdbb\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d12 0000000000000000  d13 0000000000000000\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d14 0000000000000000  d15 0000000000000000\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d16 726f632070616568  d17 206e6f6974707572\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d18 ace6cec0ccbd56f0  d19 dc9416bb094e8d9a\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d20 292057f725a7e50b  d21 c8364d4857dbab3a\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d22 c40656106e4906cb  d23 70d21d910f3c8b6c\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d24 be82d4808d800000  d25 3ff0000000000000\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d26 bc7015d25246ff62  d27 3fd28677c2e00000\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d28 bfaac2fded606360  d29 3fbf981d28947509\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     d30 be82d4808d8c37be  d31 3f11497f54c4fdd3\n06-29 12:42:55.601 6808-6808/? I/DEBUG:     scr 60000013\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #00  pc 00022144  /system/lib/libc.so (tgkill+12)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #01  pc 00013199  /system/lib/libc.so (pthread_kill+48)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #02  pc 000133ad  /system/lib/libc.so (raise+10)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #03  pc 000120e3  /system/lib/libc.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #04  pc 000219f8  /system/lib/libc.so (abort+4)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #05  pc 00012bc9  /system/lib/libc.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #06  pc 0000f2d5  /system/lib/libc.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #07  pc 000101e1  /system/lib/libc.so (dlmalloc+604)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #08  pc 0000dd0f  /system/lib/libc.so (malloc+10)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #09  pc 00081e39  /system/lib/libcrypto.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #10  pc 000822d3  /system/lib/libcrypto.so (CRYPTO_malloc+66)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #11  pc 0002ab0b  /system/lib/libssl.so (ssl_parse_serverhello_tlsext+262)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #12  pc 00016bd9  /system/lib/libssl.so (ssl3_get_server_hello+924)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #13  pc 000196db  /system/lib/libssl.so (ssl3_connect+642)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #14  pc 00024fc9  /system/lib/libssl.so (SSL_do_handshake+72)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #15  pc 0000c6a9  /system/lib/libjavacrypto.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #16  pc 00020e0c  /system/lib/libdvm.so (dvmPlatformInvoke+112)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #17  pc 00051aaf  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+398)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #18  pc 0002a2a0  /system/lib/libdvm.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #19  pc 00031750  /system/lib/libdvm.so (dvmMterpStd(Thread*)+76)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #20  pc 0002ede8  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+184)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #21  pc 00063f15  /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, std::__va_list)+336)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #22  pc 00063f39  /system/lib/libdvm.so (dvmCallMethod(Thread*, Method const*, Object*, JValue*, ...)+20)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #23  pc 00058c0b  /system/lib/libdvm.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #24  pc 0000d288  /system/lib/libc.so (__thread_entry+72)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #25  pc 0000d420  /system/lib/libc.so (pthread_create+240)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18c8  64e16745  [stack:20747]\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18cc  329f83a0  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18d0  8832bef3  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18d4  5acf0826  /system/framework/services.odex\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18d8  68325c48  /dev/kgsl-3d0\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18dc  eaa70fae  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18e0  b9ac5ed6  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18e4  54eea8ea  /dev/ashmem/dalvik-mark-stack (deleted)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18e8  68574bcb  anon_inode:dmabuf\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18ec  e47e2839  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18f0  f6573824  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18f4  8891099f  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18f8  a95023bd  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea18fc  8dbb6e07  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea1900  a85647f1  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea1904  a95ea3c4  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #00  69ea1908  00000006  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea190c  00000000  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea1910  00005613  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea1914  40d95319  /system/lib/libssl.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea1918  40d95319  /system/lib/libssl.so\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea191c  400f419d  /system/lib/libc.so (pthread_kill+52)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #01  69ea1920  00000006  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea1924  00000000  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea1928  6697fad8  \n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea192c  400f43b1  /system/lib/libc.so (raise+14)\n06-29 12:42:55.611 6808-6808/? I/DEBUG:     #02  69ea1930  69ea193c  [stack:22035]\n06-29 12:42:55.611 6808-6808/? I/DEBUG:          69ea1934  400f30e7  /system/lib/libc.so\n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000055f0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005600 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005610 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005620 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005630 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005640 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005650 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005660 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005670 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005680 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005690 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056a0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056b0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056c0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056d0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056e0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000055f0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005600 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005610 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005620 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005630 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005640 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005650 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005660 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005670 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005680 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     00005690 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056a0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056b0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056c0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056d0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     000056e0 ffffffff ffffffff ffffffff ffffffff  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de14 40afc800 40afb740 40b57650 40b03c80  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de24 40b03cc0 40b03b74 40b03a30 40b3512c  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de34 00000000 00000000 00000000 400f5cc5  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de44 40100f10 401068c5 401072e5 400f6201  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de54 401066c9 40109b31 40109a3d 40103181  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de64 400f30ad 40102d24 40103330 40104319  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de74 40104617 4011b868 400f7079 4011b37d  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de84 4010c225 4010338c 4011b944 4010c55d  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4de94 4011b3f3 401044b9 40103179 40103304  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4dea4 4011cab4 40111b91 4010ca39 40118a09  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4deb4 400f5601 40102538 4010dec5 4010237c  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4dec4 4010250c 401023c0 401023e4 40101544  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4ded4 40102408 40102428 400f5be5 401024e8  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4dee4 40101470 40101490 4010244c 4010ec9d  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4def4 40101fcc 401024c0 40102494 40101564  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     40b4df04 400f596d 400f564d 40106f8d 400f57b9  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d503c c4065610 0f3c8b6c 70d21d91 c47dfd56  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d504c c08c76b1 0b000013 010001ff 000b0000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d505c 00000102 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d506c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d507c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d508c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d509c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d50ac 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d50bc 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d50cc 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d50dc 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d50ec 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d50fc 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d510c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d511c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d512c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d503c c4065610 0f3c8b6c 70d21d91 c47dfd56  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d504c c08c76b1 0b000013 010001ff 000b0000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d505c 00000102 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d506c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d507c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d508c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d509c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.631 6808-6808/? I/DEBUG:     6b3d50ac 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     6b3d50bc 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     6b3d50cc 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     6b3d50dc 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     6b3d50ec 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     6b3d50fc 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     6b3d510c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     6b3d511c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     6b3d512c 00000000 00000000 00000000 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d952f8 203d3e20 20740030 30203d3e 3e207400  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95308 6d003020 65747361 65732072 74657263  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95318 74786500 616e7265 706f2f6c 73736e65  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95328 73732f6c 31742f6c 62696c5f 6500632e  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95338 72657478 2f6c616e 6e65706f 2f6c7373  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95348 2f6c7373 725f3174 67656e65 2100632e  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95358 65707865 64657463 6e656c5f 207c7c20  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95368 733e2d73 703e2d33 69766572 5f73756f  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95378 65696c63 665f746e 73696e69 5f646568  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95388 006e656c 70786521 65746365 656c5f64  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d95398 7c7c206e 3e2d7320 3e2d3373 76657270  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d953a8 73756f69 7265735f 5f726576 696e6966  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d953b8 64656873 6e656c5f 74786500 616e7265  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d953c8 706f2f6c 73736e65 73732f6c 6c742f6c  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d953d8 72735f73 00632e70 070301ff 7f3f1f0f  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40d953e8 f8fcfeff 80c0e0f0 534c5444 70203176  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea18e8 68574bcb e47e2839 f6573824 8891099f  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea18f8 a95023bd 8dbb6e07 a85647f1 a95ea3c4  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1908 00000006 00000000 00005613 40d95319  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1918 40d95319 400f419d 00000006 00000000  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1928 6697fad8 400f43b1 69ea193c 400f30e7  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1938 7fcbc425 ffffffdf beb3cb25 d108cef3  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1948 b7e1749c 00000000 00000008 4012f1c8  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1958 00000000 401029fc 6989d169 400f3bcd  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1968 4012115f 69ea197c ffffff60 400f02d9  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1978 4012115f 40124d4c ffffff60 4012f388  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1988 00000000 400f11e5 00000001 fff867f4  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea1998 400f0f85 00000001 00000000 00000641  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea19a8 40d95319 40b4de34 6b3d505d 00000001  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea19b8 6b3d505f 400eed11 40b50f50 40aa7e3b  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea19c8 40aa7e31 40aa82d5 00000001 40d95319  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     69ea19d8 6b4969f0 69ea1a54 6b3d505e 66975a60  \n06-29 12:42:55.641 6808-6808/? I/DEBUG:     40103124 e8bd00f0 e3700a01 912fff1e e2600000  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103134 ea006e4f e92d50f0 e3a07f43 ef000000  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103144 e8bd50f0 e3700a01 912fff1e e2600000  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103154 ea006e47 e92d50f0 e3a070ee ef000000  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103164 e8bd50f0 e3700a01 912fff1e e2600000  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103174 ea006e3f f200429a bf0080b9 f040f891  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103184 4001e92d f2c02a04 2a1080a5 8093f2c0  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103194 f2c02a20 2a408088 ea4fdb7f f1bc1c92  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     401031a4 dd6c0f0a 0600e92d 0f40f1bc f500dd4a  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     401031b4 f5016e80 ebae7920 ea4f0e09 ea4f5e4e  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     401031c4 f50e5e5e ebbc7e20 dd3b1f9e f04fbfc4  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     401031d4 ebd9090a dd35199e 0a0eeb01 0a3ff02a  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     401031e4 1c9eebac bfd245e1 0c09ebac f04f46e1  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     401031f4 f8910c00 f891f240 f921f280 f921028d  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103204 f8da428d f1b93000 f9000901 f900028d  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     40103214 f10a428d d1ee0a40 0f00f1bc f5bcd02b  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f417c 447b4b13 42b3e010 6a1ed10e 44784811  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f418c ec84f7fb ea0cf00d 46224631 efcef00e  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f419c d00a3001 e00b2400 2b00681b 480ad1eb  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f41ac 44782403 ec72f7fb f001e002 6804fa23  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f41bc fa20f001 46206005 bf00bd70 0003b236  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f41cc 0003b22a 0003b222 0003b1fe bf7ef7ff  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f41dc 4a3e4b3d e92d447b b08b43f0 4606589c  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f41ec 6823460d 930946a1 fa04f001 8000f8d0  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f41fc d0482d00 f0104628 280ff889 d8444604  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f420c ffe4f7ff d1064286 4629200f e8d6f00d  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f421c d03c2800 482ee02e f7fb4478 482debb6  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f422c e0154478 d11342b0 482b6a06 f7fb4478  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f423c 4a2aec2e 46332120 a801447a f92af013  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f424c a8012101 fc48f01a 46061c42 e011d104  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f425c 28006800 e02cd1e6 46294630 f00d4622  \n06-29 12:42:55.651 6808-6808/? I/DEBUG:     400f426c 1c43e912 d11e4607 f9c4f001 29046801\n```\n\nSimilar crash on Android 4.1.2 Galaxy S3:\n\n```\n06-27 14:42:33.239 23962-24724/com.androidapi.productname A/libc: @@@ ABORTING: INVALID HEAP ADDRESS IN dlfree addr=0x60bfc220\n06-27 14:42:33.239 23962-24724/com.androidapi.productname A/libc: Fatal signal 11 (SIGSEGV) at 0xdeadbaad (code=1), thread 24724 (RxIoScheduler-1)\n06-27 14:42:33.289 1900-1900/? I/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-27 14:42:33.289 1900-1900/? I/DEBUG: Build fingerprint: 'samsung/m0xx/m0:4.1.2/JZO54K/I9300XXEMB5:user/release-keys'\n06-27 14:42:33.289 1900-1900/? I/DEBUG: pid: 23962, tid: 24724, name: RxIoScheduler-1  >>> com.androidapi.productname <<<\n06-27 14:42:33.289 1900-1900/? I/DEBUG: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     r0 00000043  r1 671109e0  r2 00000003  r3 deadbaad\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     r4 400dca6c  r5 60bfc220  r6 67110a08  r7 400c6333\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     r8 60bfc228  r9 0000000b  sl 67110bc4  fp 40b21278\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     ip 00000000  sp 67110a08  lr 400b4285  pc 4009fa08  cpsr 00000030\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d0  400e666640733333  d1  fff0000000000000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d2  4080341ae147ae14  d3  3f8000003f800000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d4  0000000000000000  d5  0000000000000000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d6  0000000000000000  d7  000004003f800000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d8  fff0000000000000  d9  400e666666666666\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d10 3ff8151824c07946  d11 3fd34413509f79fe\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d12 3ddb7cdfd9d7bdbb  d13 0000000000000000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d14 0000000000000000  d15 0000000000000000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d16 4040000000000000  d17 4040000000000000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d18 400e666666666666  d19 0000000000000000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d20 4000000000000000  d21 be82d4808d800000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d22 bfd71d19f39ec352  d23 bf66b145b9da6a2e\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d24 3fc54abbc7ddeba2  d25 3ff4000000000000\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d26 3fd57a85a5222f8b  d27 0000000000000006\n06-27 14:42:33.419 1900-1900/? I/DEBUG:     d28 0000000000000012  d29 bfd0000000000000\n06-27 14:42:33.424 1900-1900/? I/DEBUG:     d30 4006000000000000  d31 3fe2b80340000000\n06-27 14:42:33.424 1900-1900/? I/DEBUG:     scr 60000013\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #00  pc 00013a08  /system/lib/libc.so\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #01  pc 00015de5  /system/lib/libc.so (dlfree+1628)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #02  pc 00016f93  /system/lib/libc.so (free+10)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #03  pc 00037fa9  /system/lib/libcrypto.so (CRYPTO_free+24)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #04  pc 00028f21  /system/lib/libssl.so (ssl_parse_serverhello_tlsext+216)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #05  pc 0001590b  /system/lib/libssl.so (ssl3_get_server_hello+894)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #06  pc 00018147  /system/lib/libssl.so (ssl3_connect+618)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #07  pc 000234c3  /system/lib/libssl.so (SSL_do_handshake+66)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #08  pc 000209c7  /system/lib/libjavacore.so\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #09  pc 0001deb0  /system/lib/libdvm.so (dvmPlatformInvoke+112)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #10  pc 0004d103  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+394)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #11  pc 000272e0  /system/lib/libdvm.so\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #12  pc 0002bbe8  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+180)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #13  pc 0005f871  /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, std::__va_list)+272)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #14  pc 0005f89b  /system/lib/libdvm.so (dvmCallMethod(Thread*, Method const*, Object*, JValue*, ...)+20)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #15  pc 00054453  /system/lib/libdvm.so\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #16  pc 00012e00  /system/lib/libc.so (__thread_entry+48)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #17  pc 00012558  /system/lib/libc.so (pthread_create+172)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109c8  00000001  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109cc  400c6333  /system/lib/libc.so\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109d0  60bfc228  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109d4  400b42ef  /system/lib/libc.so\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109d8  00000001  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109dc  00000007  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109e0  671109dc  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109e4  00000001  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109e8  400c6317  /system/lib/libc.so\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109ec  00000005  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109f0  67110a14  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109f4  0000003d  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109f8  400dca6c  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          671109fc  60bfc220  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a00  df0027ad  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a04  00000000  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #00  67110a08  66623036  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a0c  30323263  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a10  8d836d00  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a14  20404040  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a18  524f4241  /dev/ashmem/dalvik-mark-stack (deleted)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a1c  474e4954  /dev/ashmem/dalvik-heap (deleted)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a20  4e49203a  /dev/ashmem/dalvik-heap (deleted)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a24  494c4156  /dev/ashmem/dalvik-heap (deleted)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a28  45482044  /dev/ashmem/dalvik-heap (deleted)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a2c  41205041  /dev/ashmem/dalvik-bitmap-2 (deleted)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a30  45524444  /dev/ashmem/dalvik-heap (deleted)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a34  49205353  /dev/ashmem/dalvik-heap (deleted)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a38  6c64204e  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a3c  65657266  /dev/mali\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a40  64646120  /data/data/com.google.android.gms/app_chimera/m/00000003/DynamiteModulesA_GmsCore_prod_xhdpi_release.odex\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110a44  78303d72  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          ........  ........\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #01  67110b30  400a1789  /system/lib/libc.so (dlfree)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110b34  60bfc228  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110b38  00000001  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110b3c  67d22801  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110b40  6211a080  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110b44  67d22805  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110b48  0000000b  \n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110b4c  400a2f95  /system/lib/libc.so (free+12)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:     #02  67110b50  400a2f89  /system/lib/libc.so (free)\n06-27 14:42:33.429 1900-1900/? I/DEBUG:          67110b54  40a4efab  /system/lib/libcrypto.so (CRYPTO_free+26)\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     671109c0 400c6317 67110a14 00000001 400c6333  .c.@...g....3c.@\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     671109d0 60bfc228 400b42ef 00000001 00000007  (..`.B.@........\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     671109e0 671109dc 00000001 400c6317 00000005  ...g.....c.@....\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     671109f0 67110a14 0000003d 400dca6c 60bfc220  ...g=...l..@ ..`\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     67110a00 df0027ad 00000000 66623036 30323263  .'......60bfc220\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     400dca4c 00000000 00000000 00000000 00000000  ................\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     400dca5c 00000000 00000000 00000000 00000000  ................\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     400dca6c 52feba25 00000000 00000000 00000000  %..R............\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     400dca7c 00000000 00000000 00000000 00000000  ................\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     400dca8c 00000000 00000000 00000000 00000000  ................\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     60bfc200 0922081e 0b260924 0f2b0f28 0e2f0a2d  ..\".$.&.(.+.-./.\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     60bfc210 0e360e33 0b390937 0b400b3d 00000000  3.6.7.9.=.@.....\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     60bfc220 00000048 00000011 6213f248 400d5534  H.......H..b4U.@\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     60bfc230 00000010 0000001a 42a67038 400d553c  ........8p.B<U.@\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     60bfc240 00796765 74636146 00000018 0000001b  egy.Fact........\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     671109e8 400c6317 00000005 67110a14 0000003d  .c.@.......g=...\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     671109f8 400dca6c 60bfc220 df0027ad 00000000  l..@ ..`.'......\n06-27 14:42:33.434 1900-1900/? I/DEBUG:     67110a08 66623036 30323263 8d836d00 20404040  60bfc220.m..@@@ \n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110a18 524f4241 474e4954 4e49203a 494c4156  ABORTING: INVALI\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110a28 45482044 41205041 45524444 49205353  D HEAP ADDRESS I\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400c6310 3d726464 6c007830 00636269 50414548  ddr=0x.libc.HEAP\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400c6320 4d454d20 2059524f 52524f43 49545055   MEMORY CORRUPTI\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400c6330 49004e4f 4c41564e 48204449 20504145  ON.INVALID HEAP \n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400c6340 52444441 00535345 2078616d 74737973  ADDRESS.max syst\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400c6350 62206d65 73657479 25203d20 756c3031  em bytes = %10lu\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     60bfc208 0f2b0f28 0e2f0a2d 0e360e33 0b390937  (.+.-./.3.6.7.9.\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     60bfc218 0b400b3d 00000000 00000048 00000011  =.@.....H.......\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     60bfc228 6213f248 400d5534 00000010 0000001a  H..b4U.@........\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     60bfc238 42a67038 400d553c 00796765 74636146  8p.B<U.@egy.Fact\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     60bfc248 00000018 0000001b 57381178 00000010  ........x.8W....\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110ba4 67d227b4 00001170 00001173 000011d0  .'.gp...s.......\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110bb4 40b0590f 67110bc4 67110bc8 67d227fa  .Y.@...g...g.'.g\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110bc4 62a52af8 00000001 62d4dae0 62d4dae0  .*.b.......b...b\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110bd4 00000000 00001120 598e3289 000011d0  .... ....2.Y....\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110be4 40b0814b ffffffff 598e11e7 ffffffff  K..@.......Y....\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     40b21258 6e6f6973 3e206e00 0030203d 203e2074  sion.n >= 0.t > \n06-27 14:42:33.439 1900-1900/? I/DEBUG:     40b21268 616d0030 72657473 63657320 00746572  0.master secret.\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     40b21278 65747865 6c616e72 65706f2f 6c73736e  external/openssl\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     40b21288 6c73732f 5f31742f 2e62696c 78650063  /ssl/t1_lib.c.ex\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     40b21298 6e726574 6f2f6c61 736e6570 732f6c73  ternal/openssl/s\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     671109e8 400c6317 00000005 67110a14 0000003d  .c.@.......g=...\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     671109f8 400dca6c 60bfc220 df0027ad 00000000  l..@ ..`.'......\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110a08 66623036 30323263 8d836d00 20404040  60bfc220.m..@@@ \n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110a18 524f4241 474e4954 4e49203a 494c4156  ABORTING: INVALI\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     67110a28 45482044 41205041 45524444 49205353  D HEAP ADDRESS I\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     4009f9e8 f00f4479 a803f8f5 f44f4669 f00f7280  yD......iFO..r..\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     4009f9f8 490df8ef aa032007 f0144479 4b05fc4b  ...I. ..yD..K..K\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     4009fa08 9a43601d 428a6821 f016d001 b045ff3f  .`C.!h.B....?.E.\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     4009fa18 bf00bdf0 deadbaad 00030b2c 00026974  ........,...ti..\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     4009fa28 0002695d 00026922 00026913 4c19b538  ]i..\"i...i..8..L\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400b4264 0001c5ca 00028830 b5704b0a 240c447b  ....0....Kp.{D.$\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400b4274 fb04460d 22033400 46296860 ec9ef7e4  .F...4.\"`h)F....\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400b4284 46061c43 f7ebd104 6800fb6d d0f22804  C..F....m..h.(..\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400b4294 bd704630 0001c588 b088b570 4615460c  0Fp.....p....F.F\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     400b42a4 b9099001 447c4c12 46204912 f7e64479  .....L|D.I FyD..\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     bef8a000-befab000 [stack]\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     (no map for address)\n06-27 14:42:33.439 1900-1900/? I/DEBUG:     ffff0000-ffff1000 [vectors]\n```\n\nI'm using default Retrofit OkHTTPClient with no interceptors and also do not pass custom ssl context:\n\n```\n        Retrofit retrofit = new Retrofit.Builder()\n                .baseUrl(API_URL)\n                .addConverterFactory(GsonConverterFactory.create())\n                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                .build();\n        mGooglePlacesService = retrofit.create(GooglePlacesService.class);\n```\n\nAccessing the following https server: \"https://maps.googleapis.com/maps/api/place/\"\n\nPlease advise.\n", "url": "https://github.com/square/okhttp/issues/2679", "user": "aaprokofyev", "labels": ["bug", "needs info"], "created": "2016-06-29 10:42:56", "closed": "2016-07-10 20:57:20", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "New HttpURLConnection shouldn\u2019t block on the Dispatcher", "body": "At the moment we exercise the Dispatcher from within HttpURLConnection. This has some pretty low limits that could cause unexpected low amounts of concurrency in some apps.\n\nAlternatives are to just bump the dispatcher limit for HttpURLConnection calls, somehow.\n", "url": "https://github.com/square/okhttp/issues/2667", "user": "swankjesse", "labels": ["bug"], "created": "2016-06-27 04:01:36", "closed": "2016-07-04 13:10:29", "commits": {"764c35e7842c8828e6686e318facfca0a11d49ba": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "764c35e7842c8828e6686e318facfca0a11d49ba", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["88e245e6de90393d21c28a037fb61d02d5653c19"], "nameRev": "764c35e7842c8828e6686e318facfca0a11d49ba tags/parent-3.4.0~7^2", "commitMessage": "Don't share the OkHttpClient's Dispatcher in HttpURLConnection.\n\nAny limits enforced here would be awkward because there's an application\nthread blocked on the work anyway.\n\nCloses: https://github.com/square/okhttp/issues/2667\n", "commitDateTime": "2016-07-03 23:22:51", "authoredDateTime": "2016-07-03 23:22:51", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.callsNotManagedByDispatcher()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpURLConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.huc.OkHttpURLConnection.buildCall()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["764c35e7842c8828e6686e318facfca0a11d49ba"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-urlconnection/src/main/java/okhttp3/internal/huc"], "changesInPackagesSPOON": ["okhttp3.internal.huc.OkHttpURLConnection.buildCall()"]}, {"title": "isCleartextTrafficPermitted is broken", "body": "If the app is configured to require TLS for a single host, we do the wrong thing and require TLS for all hosts.\n", "url": "https://github.com/square/okhttp/issues/2640", "user": "swankjesse", "labels": ["bug"], "created": "2016-06-20 00:02:03", "closed": "2016-07-03 02:58:44", "commits": {"a35363c8a221f25ce3b5ce5c6551b451b17d918a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "db3666421ae58c2fd6268b037ed6a1d4be7e1aaf": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "aa1bc03fa7891caf3c906781ebec13ded4cb28bd": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "1f58b14bd18565b3dc4aaf15c072033e68b69660": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "a35363c8a221f25ce3b5ce5c6551b451b17d918a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "db3666421ae58c2fd6268b037ed6a1d4be7e1aaf", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "aa1bc03fa7891caf3c906781ebec13ded4cb28bd", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1f58b14bd18565b3dc4aaf15c072033e68b69660", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["35e29d9edb15fd9a405294a0d7c8e759b1931a70"], "nameRev": "1f58b14bd18565b3dc4aaf15c072033e68b69660 tags/parent-3.4.0-RC1~1^2", "commitMessage": "Always pass a host to NetworkSecurityPolicy.isCleartextTrafficPermitted().\n\nPreviously we were misinterpretting which hosts this method applied to.\nSuppose an Android app was configured to require TLS for bank.com and\nnot for any other address. The NetworkSecurityPolicy.isCleartextTrafficPermitted()\nmethod would return false because cleartext traffic wasn't universally\npermitted. And OkHttp would incorrectly forbid cleartext communication\nto other hosts like puppies.com.\n\nCloses: https://github.com/square/okhttp/issues/2640\n", "commitDateTime": "2016-07-02 13:39:16", "authoredDateTime": "2016-07-02 10:43:02", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "okhttp/src/main/java/okhttp3/internal/platform/AndroidPlatform.java", "insertions": 6, "deletions": 9, "lines": 15}, {"filePath": "okhttp/src/main/java/okhttp3/internal/platform/Platform.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.cleartextCallsFailWhenCleartextIsDisabled()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RealConnection.connect(int,int,int,java.util.List,boolean)", "TOT": 11, "UPD": 2, "INS": 2, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "AndroidPlatform.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.isCleartextTrafficPermitted()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.platform.AndroidPlatform.isCleartextTrafficPermitted(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Platform.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.platform.Platform.isCleartextTrafficPermitted(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1f58b14bd18565b3dc4aaf15c072033e68b69660"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19.0, "deletions": 22.0, "lines": 41.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 25.0, "UPD": 3.0, "INS": 8.0, "MOV": 7.0, "DEL": 7.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection", "okhttp/src/main/java/okhttp3/internal/platform", "okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.internal.platform.AndroidPlatform.isCleartextTrafficPermitted(java.lang.String)", "okhttp3.internal.platform.Platform.isCleartextTrafficPermitted(java.lang.String)", "okhttp3.OkHttpClient", "okhttp3.internal.platform.AndroidPlatform.isCleartextTrafficPermitted()", "okhttp3.internal.connection.RealConnection.connect(int,int,int,java.util.List,boolean)"]}, {"title": "Handshake's localPrincipal causes NPE.", "body": "Hello! I got a strange crash report from Crashlytics today.\n\n```\nFatal Exception: java.lang.NullPointerException: Attempt to invoke interface method 'boolean java.util.List.isEmpty()' on a null object reference\n       at okhttp3.Handshake.localPrincipal(Handshake.java:114)\n       at android.support.v4.view.ViewPager.populate(ViewPager.java)\n       at android.support.v4.view.ViewPager.populate(ViewPager.java:1025)\n       at android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1545)\n       at android.view.View.measure(View.java:18646)\n       at android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:728)\n       at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:464)\n       at android.view.View.measure(View.java:18646)\n       at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5832)\n       at android.widget.FrameLayout.onMeasure(FrameLayout.java:430)\n       at <my-package>.onMeasure(<my-view>.java:937)\n       at android.view.View.measure(View.java:18646)\n       at android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:728)\n       at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:464)\n       at android.view.View.measure(View.java:18646)\n       at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5832)\n       at android.widget.FrameLayout.onMeasure(FrameLayout.java:430)\n       at android.support.v7.widget.ContentFrameLayout.onMeasure(ContentFrameLayout.java:135)\n       at android.view.View.measure(View.java:18646)\n       at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5832)\n       at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1435)\n       at android.widget.LinearLayout.measureVertical(LinearLayout.java:721)\n       at android.widget.LinearLayout.onMeasure(LinearLayout.java:612)\n       at android.view.View.measure(View.java:18646)\n       at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5832)\n       at android.widget.FrameLayout.onMeasure(FrameLayout.java:430)\n       at android.view.View.measure(View.java:18646)\n       at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5832)\n       at android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1435)\n       at android.widget.LinearLayout.measureVertical(LinearLayout.java:721)\n       at android.widget.LinearLayout.onMeasure(LinearLayout.java:612)\n       at android.view.View.measure(View.java:18646)\n       at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5832)\n       at android.widget.FrameLayout.onMeasure(FrameLayout.java:430)\n       at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:3011)\n       at android.view.View.measure(View.java:18646)\n       at android.view.ViewRootImpl.performMeasure(ViewRootImpl.java:2310)\n       at android.view.ViewRootImpl.measureHierarchy(ViewRootImpl.java:1354)\n       at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1597)\n       at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1239)\n       at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6752)\n       at android.view.Choreographer$CallbackRecord.run(Choreographer.java:777)\n       at android.view.Choreographer.doCallbacks(Choreographer.java:590)\n       at android.view.Choreographer.doFrame(Choreographer.java:560)\n       at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:763)\n       at android.os.Handler.handleCallback(Handler.java:739)\n       at android.os.Handler.dispatchMessage(Handler.java:95)\n       at android.os.Looper.loop(Looper.java:145)\n       at android.app.ActivityThread.main(ActivityThread.java:6145)\n       at java.lang.reflect.Method.invoke(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:372)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)\n```\n\n```\nOkHttp https://***.com/***.apsx\n       at com.android.org.conscrypt.NativeCrypto.SSL_read(NativeCrypto.java)\n       at com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:728)\n       at okio.Okio$2.read(Okio.java:139)\n       at okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\n       at okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\n       at okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\n       at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\n       at okhttp3.internal.http.Http1xStream.readResponse(Http1xStream.java:184)\n       at okhttp3.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:125)\n       at okhttp3.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:723)\n       at okhttp3.internal.http.HttpEngine.access$200(HttpEngine.java:81)\n       at okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:708)\n       at okhttp3.internal.http.HttpEngine.readResponse(HttpEngine.java:563)\n       at okhttp3.RealCall.getResponse(RealCall.java:241)\n       at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)\n       at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:142)\n       at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:187)\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\n       at okhttp3.RealCall.access$100(RealCall.java:30)\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:127)\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:818)\n```\n\nI'm wondering what causes this problem. \nI'm using Retrofit2(v2.0.2) with okhttp(v3.2.0) and the device is sm_a700l and OS version is 5.0.2.\n", "url": "https://github.com/square/okhttp/issues/2634", "user": "brannpark", "labels": ["bug"], "created": "2016-06-17 10:17:21", "closed": "2016-06-25 19:02:48", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Reading cache headers crashes when header contains utf-8 chars", "body": "When a `Cache` is set on a okhttp3 instance and a connection to a server is created that uses utf-8 chars in its header response the library crashes with the following exception:\n\n``` java\n  java.lang.IllegalArgumentException: Unexpected char 0xfffd at 67 in If-None-Match value: \"562949954286466-404-Fri Jun 03 2016 17:43:42 GMT+0200 (Mitteleurop\ufffdische Sommerzeit)\"\n   at okhttp3.Headers$Builder.checkNameAndValue(Headers.java:320)\n   at okhttp3.Headers$Builder.set(Headers.java:300)\n   at okhttp3.Request$Builder.header(Request.java:163)\n   at okhttp3.internal.http.CacheStrategy$Factory.getCandidate(CacheStrategy.java:235)\n   at okhttp3.internal.http.CacheStrategy$Factory.get(CacheStrategy.java:168)\n   at okhttp3.internal.http.HttpEngine.sendRequest(HttpEngine.java:207)\n   at okhttp3.RealCall.getResponse(RealCall.java:235)\n   at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:193)\n   at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:155)\n   at okhttp3.RealCall.execute(RealCall.java:57)\n```\n\nThe problem can be experienced on `3.3.1` as well as an `3.4.0-SNAPSHOT`.\n\nI think an attempt to fix similar issues has been made in the pull request https://github.com/square/okhttp/pull/2587 by @swankjesse.\n", "url": "https://github.com/square/okhttp/issues/2628", "user": "mpost", "labels": ["bug"], "created": "2016-06-15 10:50:50", "closed": "2016-07-01 17:52:42", "commits": {"8bd6094bb917d42974c86295a20fa8703a2189db": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "50ff1e140f349e5a29e6462f834a713053bd4831": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "8bd6094bb917d42974c86295a20fa8703a2189db", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "50ff1e140f349e5a29e6462f834a713053bd4831", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["f5099ce11f9b9df4eaf2000b80343868f1799176"], "nameRev": "50ff1e140f349e5a29e6462f834a713053bd4831 tags/parent-3.4.0-RC1~6^2", "commitMessage": "Permit non-ASCII ETag headers.\n\nThese are currently being encoded in UTF-8, and the charset is not\notherwise specified, so the result is not necessarily going to\nsucceed at caching.\n\nBut this avoids crashing when the server returns an unexpected ETag.\n\nCloses: https://github.com/square/okhttp/issues/2628\n", "commitDateTime": "2016-07-01 13:42:33", "authoredDateTime": "2016-07-01 13:05:19", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CacheTest.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "okhttp/src/main/java/okhttp3/internal/cache/CacheStrategy.java", "insertions": 20, "deletions": 9, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.readRequest(java.net.Socket,okio.BufferedSource,okio.BufferedSink,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.etagConditionCanBeNonAscii()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CacheStrategy.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.cache.CacheStrategy.Factory.getCandidate()", "TOT": 25, "UPD": 3, "INS": 11, "MOV": 6, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["50ff1e140f349e5a29e6462f834a713053bd4831"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 26.0, "deletions": 10.0, "lines": 36.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27.0, "UPD": 4.0, "INS": 12.0, "MOV": 6.0, "DEL": 5.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/okhttp3/mockwebserver", "okhttp/src/main/java/okhttp3/internal/cache"], "changesInPackagesSPOON": ["okhttp3.internal.cache.CacheStrategy.Factory.getCandidate()", "okhttp3.mockwebserver.MockWebServer", "okhttp3.mockwebserver.MockWebServer.readRequest(java.net.Socket,okio.BufferedSource,okio.BufferedSink,int)"]}, {"title": "Certificate pinner doesn't work if host name has capital letters", "body": "If certificate pinner is set for host \"www.HOST.com\" if doesn't apply to the calls that has endpoint \"www.host.com\".\n\nThe CertificatePinner.findMatchingPins() should ignore the case because http doesn't care if the name is in uppercase or not.\n\nTested with OkHttp 2.7.5.\n", "url": "https://github.com/square/okhttp/issues/2609", "user": "jkauppin", "labels": ["bug"], "created": "2016-06-07 09:54:23", "closed": "2016-06-15 02:14:27", "commits": {"0bbb290fe71b36ed73f47fba4b7dbb1d0bb9d7ea": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "8bdc8218113bc50af4b7ae0359b84d140d456b53": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}, "3e24b4ba0538c309a716df3fbdee4cb6e035a74e": {"commitGHEventType": "referenced", "commitUser": "dave-r12"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "0bbb290fe71b36ed73f47fba4b7dbb1d0bb9d7ea", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8bdc8218113bc50af4b7ae0359b84d140d456b53", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3e24b4ba0538c309a716df3fbdee4cb6e035a74e", "commitGHEventType": "referenced", "commitUser": "dave-r12", "commitParents": ["a464a63aca1e591ceffffff1808c9461035532ca"], "nameRev": "3e24b4ba0538c309a716df3fbdee4cb6e035a74e tags/parent-3.4.0-RC1~26^2", "commitMessage": "Changed CertificatePinner to match against canonicalized hostnames.\n\nWe leverage HttpUrl to canonicalize the hostname. This has a few\nadvantages:\n - When matching pins against a hostname, case is ignored.\n - Punycode works for free.\n\nCloses: https://github.com/square/okhttp/issues/2609\n", "commitDateTime": "2016-06-14 21:46:53", "authoredDateTime": "2016-06-14 09:18:01", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "okhttp/src/main/java/okhttp3/CertificatePinner.java", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CertificatePinnerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulFindMatchingPinsIgnoresCase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulFindMatchingPinPunycode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificatePinner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificatePinner.Pin.matches(java.lang.String)", "TOT": 12, "UPD": 2, "INS": 2, "MOV": 5, "DEL": 3}, {"spoonMethodName": "okhttp3.CertificatePinner.Pin", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3e24b4ba0538c309a716df3fbdee4cb6e035a74e"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12.0, "deletions": 4.0, "lines": 16.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 15.0, "UPD": 2.0, "INS": 5.0, "MOV": 5.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.CertificatePinner.Pin", "okhttp3.CertificatePinner.Pin.matches(java.lang.String)"]}, {"title": "[Bug][WebSocket] Crash when use 'ws' for websocket", "body": "I use okhttp-ws:2.6 for websocket support. When I use 'wss' to create websocket, there's nothing bad happend, but when I change to use 'ws' to create websocket, there are quite a lot of crashes. \nThe stack info is below:\n\nFatal Exception: java.lang.IllegalStateException: state: 4\n       at com.squareup.okhttp.internal.http.HttpConnection.writeRequest(SourceFile:171)\n       at com.squareup.okhttp.internal.http.HttpTransport.writeRequestHeaders(SourceFile:75)\n       at com.squareup.okhttp.internal.http.HttpEngine.readResponse(SourceFile:744)\n       at com.squareup.okhttp.Call.getResponse(SourceFile:277)\n       at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(SourceFile:234)\n       at com.squareup.okhttp.Call.getResponseWithInterceptorChain(SourceFile:196)\n       at com.squareup.okhttp.Call.access$100(SourceFile:34)\n       at com.squareup.okhttp.Call$AsyncCall.execute(SourceFile:162)\n       at com.squareup.okhttp.internal.NamedRunnable.run(SourceFile:33)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:841)\n\nI cannot figure out why HttpConnection state change to STATE_OPEN_RESPONSE_BODY(value 4) and how the crash is happened. \n\nHere is the crash device infos:\n\n![ttttt](https://cloud.githubusercontent.com/assets/7324175/15823492/7a77ab12-2c2d-11e6-833d-985a038a3025.jpg)\n", "url": "https://github.com/square/okhttp/issues/2606", "user": "EricRGC", "labels": ["bug", "needs info"], "created": "2016-06-06 13:27:44", "closed": "2016-11-13 23:14:09", "commits": {}, "ttf": 160.00027777777777, "commitsDetails": []}, {"title": "[Bug Report] Interceptor may throw a IllegalStateException: cache is closed", "body": "I am using the following code to add a custom header:\n\n```\n    OkHttpClient.Builder builder = getBuilder()\n            .addInterceptor(new Interceptor() {\n                @Override\n                public Response intercept(Chain chain) throws IOException {\n                    Request request = chain.request()\n                            .newBuilder()\n                            .addHeader(\"Session-Token\", accessToken)\n                            .build();\n                    return chain.proceed(request);\n                }\n            });\n```\n\nBut sometimes I get an error:\n\n```\nFatal Exception: java.lang.IllegalStateException: cache is closed\n   at okhttp3.internal.DiskLruCache.checkNotClosed(DiskLruCache.java:635)\n   at okhttp3.internal.DiskLruCache.edit(DiskLruCache.java:453)\n   at okhttp3.internal.DiskLruCache.edit(DiskLruCache.java:447)\n   at okhttp3.Cache.put(Cache.java:244)\n   at okhttp3.Cache.access$000(Cache.java:135)\n   at okhttp3.Cache$1.put(Cache.java:147)\n   at okhttp3.internal.http.HttpEngine.maybeCache(HttpEngine.java:389)\n   at okhttp3.internal.http.HttpEngine.readResponse(HttpEngine.java:633)\n   at okhttp3.RealCall.getResponse(RealCall.java:241)\n   at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)\n   at co.voggle.core.ApiProvider$3.intercept(ApiProvider.java:149)\n   at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:187)\n   at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\n   at okhttp3.RealCall.access$100(RealCall.java:30)\n   at okhttp3.RealCall$AsyncCall.execute(RealCall.java:127)\n   at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n   at java.lang.Thread.run(Thread.java:818)\n```\n\nThe error makes sense but I don't understand how to work around it, as I do not have the required objects in the `intercept(Chain chain)` method to check if the cache is closed or not.\n\nIt would be okay to drop the call if the cache is closed.\n\n_I am using OkHttp via Retorofit for my android application_\n", "url": "https://github.com/square/okhttp/issues/2605", "user": "vedant1811", "labels": ["bug", "needs info"], "created": "2016-06-06 08:57:15", "closed": "2016-11-13 23:15:11", "commits": {}, "ttf": 160.00027777777777, "commitsDetails": []}, {"title": "Inconsistent timeout behaviour when attaching an interceptor that accesses the ResponseBody", "body": "Originally we had some tests against Retrofit (2.0.0-beta3) that tested timeouts simply by exercising `MockWebServer` and everything worked fine we were able to simulate a socket timeout situation. After Retrofit (2.0.0) upgraded its OkHttp dependency to 3.2.0 things started to behave weirdly.\n\nSee the following test:\n\n```\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.logging.HttpLoggingInterceptor;\nimport okhttp3.logging.HttpLoggingInterceptor.Level;\nimport okhttp3.mockwebserver.MockResponse;\nimport okhttp3.mockwebserver.MockWebServer;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.rules.ExpectedException;\n\nimport java.io.IOException;\nimport java.net.SocketTimeoutException;\nimport java.util.concurrent.TimeUnit;\n\npublic class TimeoutTest {\n    private MockWebServer mockWebServer;\n    private OkHttpClient okHttpClient;\n\n    @Rule\n    public ExpectedException expectedException = ExpectedException.none();\n\n    @Before\n    public void setup() throws IOException {\n        mockWebServer = new MockWebServer();\n        mockWebServer.start();\n\n        okHttpClient = new OkHttpClient.Builder()\n                .readTimeout(100, TimeUnit.MILLISECONDS)\n                // Remove this or change the level to make the test pass\n                .addNetworkInterceptor(new HttpLoggingInterceptor().setLevel(Level.BODY))\n                .build();\n    }\n\n    @After\n    public void teardown() throws IOException {\n        if (mockWebServer != null) {\n            mockWebServer.shutdown();\n        }\n    }\n\n    @Test\n    public void test() throws IOException {\n        mockWebServer.enqueue(new MockResponse()\n                .setBody(\"12\")\n                .clearHeaders()\n                .setHeader(\"Content-Length\", \"10\"));\n\n        Request request = new Request.Builder()\n                .url(mockWebServer.url(\"/\"))\n                .build();\n\n        expectedException.expect(SocketTimeoutException.class);\n\n        okHttpClient.newCall(request).execute().body().string();\n    }\n}  \n```\n\nThis test tries to simulate a timeout just using OkHttp. I did copy the `MockResponse` semantics from one of your test cases. \n\nThe issue here is that when you have the `HttpLoggingInterceptor` attached, you get a `ConnectException` when the interceptor accesses the response body. \n\nHowever, if you remove the logging interceptor or set it to log only the request URL or headers, everything works just fine. \n\nThe behaviour seem to have changed between OkHttp 2.7 and 3.2 as timeout tests worked fine in our case when using OkHttp 2.7. Of course OkHttp has gone through a major change between 2.x and 3.x thus it is understandable that behaviour changes. However, I'm not so sure if the contract from the client's point of view is stable as adding an interceptor affects the output exception.\n\nIn general it would also nice to have some examples how to test read, write and connection timeouts since we have a special behaviour in our code that is affected by timeouts and we want to test that code.\n", "url": "https://github.com/square/okhttp/issues/2582", "user": "troinine", "labels": ["bug"], "created": "2016-05-27 08:52:47", "closed": "2020-04-11 14:26:16", "commits": {}, "ttf": 1415.0002777777777, "commitsDetails": []}, {"title": "okhttp Cookie strips off leading . from domain", "body": "`private static String parseDomain(String s) {\n    if (s.endsWith(\".\")) {\n      throw new IllegalArgumentException();\n    }\n    if (s.startsWith(\".\")) {\n      s = s.substring(1);\n    }\n    String canonicalDomain = domainToAscii(s);\n    if (canonicalDomain == null) {\n      throw new IllegalArgumentException();\n    }\n    return canonicalDomain;\n  }`\n\nCookie seems to strip off the leading . from the domain; this in turn causes Android's CookiePolicy#ACCEPT_ORIGINAL_SERVER to drop the cookie when used in conjunction with JavaNetCookieStore and a CookieManager. Currently I am getting around this by using a custom interceptor to manually parse the header and directly persist cookies into CookieManager.\n\nWhy don't we preserve the domain as is from the header?\n", "url": "https://github.com/square/okhttp/issues/2549", "user": "karthikrg", "labels": ["bug"], "created": "2016-05-11 04:50:32", "closed": "2016-07-13 03:37:27", "commits": {"fd509b937c4a5438fe02ddf06ade5ad56736af5d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 62.000277777777775, "commitsDetails": [{"commitHash": "fd509b937c4a5438fe02ddf06ade5ad56736af5d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["8510d646bdb97321dcc7206d8e42b8179810396d"], "nameRev": "fd509b937c4a5438fe02ddf06ade5ad56736af5d tags/parent-3.5.0~79^2", "commitMessage": "Inject a leading . for better matching under JavaNetCookieJar\n\nCloses: https://github.com/square/okhttp/issues/2549\n", "commitDateTime": "2016-07-12 23:22:49", "authoredDateTime": "2016-07-12 23:22:49", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CookiesTest.java", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "okhttp-urlconnection/src/main/java/okhttp3/JavaNetCookieJar.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/Cookie.java", "insertions": 14, "deletions": 1, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookiesTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CookiesTest.acceptOriginalServerMatchesSubdomain()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CookiesTest.acceptOriginalServerMatchesRfc2965Dot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CookiesTest.acceptOriginalServerMatchesExactly()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CookiesTest.acceptOriginalServerDoesNotMatchDifferentServer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JavaNetCookieJar.java", "spoonMethods": [{"spoonMethodName": "okhttp3.JavaNetCookieJar.saveFromResponse(okhttp3.HttpUrl,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Cookie.java", "spoonMethods": [{"spoonMethodName": "okhttp3.Cookie.toString()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 2}, {"spoonMethodName": "okhttp3.Cookie.toString(boolean)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fd509b937c4a5438fe02ddf06ade5ad56736af5d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 2, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 0, "INS": 6, "MOV": 5, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-urlconnection/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.Cookie.toString(boolean)", "okhttp3.JavaNetCookieJar.saveFromResponse(okhttp3.HttpUrl,java.util.List)", "okhttp3.Cookie.toString()"]}, {"title": "Recover from REFUSED_STREAM in HTTP/2", "body": "OkHttp promises to persevere when there\u2019s trouble, but it doesn\u2019t recover from `REFUSED_STREAM` in HTTP/2. We should transparently retry when an HTTP/2 server returns a `REFUSED_STREAM` error.\n\nWe should set `noNewStreams = true` on the connection that refused the stream. That is a good enough policy that\u2019s in spirit of the HTTP/2 spec: it\u2019ll prevent the connection from being used for any future streams. Then when we retry we\u2019ll get a different connection and with any luck that one will accept the stream.\n\nWe need a special case if the refused stream\u2019s streamId is 1. That will let us recover when [Nginx refuses request bodies sent before the settings ack](https://trac.nginx.org/nginx/ticket/959). In that case we should retry on the same physical connection, which we can assume has since ACK\u2019d the settings. It\u2019s still a little bit racy, but unlikely to be a problem in practice. More discussion on this workaround on [issue 2506](https://github.com/square/okhttp/issues/2506) and on the [http-wg list](https://lists.w3.org/Archives/Public/ietf-http-wg/2016AprJun/0240.html).\n", "url": "https://github.com/square/okhttp/issues/2543", "user": "swankjesse", "labels": ["bug"], "created": "2016-05-08 15:12:17", "closed": "2016-05-25 01:40:23", "commits": {"71c7a9d821c9db6a353df3c1ef1e2459ecb66710": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "51326d29518afe7eac9c1dda06bca3138fee8228": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "bf0c639fc70b11f0c98474ecae7e85db4dff9188": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "c9290b76961c46f476761ccadce0cb006d474b92": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "71c7a9d821c9db6a353df3c1ef1e2459ecb66710", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "51326d29518afe7eac9c1dda06bca3138fee8228", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bf0c639fc70b11f0c98474ecae7e85db4dff9188", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c9290b76961c46f476761ccadce0cb006d474b92", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["0693302fca5bc23654bec3a12ef3878992f9c7cb"], "nameRev": "c9290b76961c46f476761ccadce0cb006d474b92 tags/parent-3.3.0~2^2", "commitMessage": "Recover from REFUSED_STREAM errors in HTTP/2.\n\nThis implements the following policy:\n\n - If a REFUSED_STREAM error is received, OkHttp will retry the same stream\n   on the same socket 1x.\n - If any other error is received, or an additional REFUSED_STREAM error is\n   received, OkHttp will retry on a different route if one exists.\n\nWe may want to follow up by going through HTTP/2 error codes and deciding\na per-code retry policy, but this should be good enough for now.\n\nCloses: https://github.com/square/okhttp/issues/2543\n", "commitDateTime": "2016-05-24 21:40:09", "authoredDateTime": "2016-05-21 14:24:02", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockResponse.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/framed/HttpOverSpdyTest.java", "insertions": 97, "deletions": 1, "lines": 98}, {"filePath": "okhttp/src/main/java/okhttp3/internal/framed/FramedStream.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/framed/StreamResetException.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpEngine.java", "insertions": 52, "deletions": 5, "lines": 57}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/StreamAllocation.java", "insertions": 38, "deletions": 64, "lines": 102}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockResponse.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockResponse", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockResponse.getHttp2ErrorCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockResponse.setHttp2ErrorCode(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.dispatchBookkeepingRequest(int,java.net.Socket)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.FramedSocketHandler.onStream(okhttp3.internal.framed.FramedStream)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SocketPolicy.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.SocketPolicy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.connectViaHttpsWithSSLFallback()", "TOT": 5, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.framed.HttpOverSpdyTest.recoverFromOneRefusedStreamReusesConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.framed.HttpOverSpdyTest.recoverFromOneInternalErrorRequiresNewConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.framed.HttpOverSpdyTest.recoverFromMultipleRefusedStreamsRequiresNewConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.framed.HttpOverSpdyTest.noRecoveryFromRefusedStreamWithRetryDisabled()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.framed.HttpOverSpdyTest.noRecoveryFromInternalErrorWithRetryDisabled()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.framed.HttpOverSpdyTest.noRecoveryFromErrorWithRetryDisabled(okhttp3.internal.framed.ErrorCode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.framed.HttpOverSpdyTest.setUp()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FramedStream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.framed.FramedStream.getResponseHeaders()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.framed.FramedStream.FramedDataSource.checkNotClosed()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.framed.FramedStream.checkOutNotClosed()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StreamResetException.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.framed.StreamResetException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpEngine.recover(java.io.IOException,boolean,okio.Sink)", "TOT": 8, "UPD": 1, "INS": 4, "MOV": 3, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.HttpEngine.close()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.HttpEngine.isRecoverable(java.io.IOException,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamAllocation.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.StreamAllocation.recover(java.io.IOException,boolean,okio.Sink)", "TOT": 15, "UPD": 5, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.isRecoverable(java.io.IOException,boolean)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.findHealthyConnection(int,int,int,boolean,boolean)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.connectionFailed(java.io.IOException)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.streamFailed(java.io.IOException)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.hasMoreRoutes()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.findConnection(int,int,int,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c9290b76961c46f476761ccadce0cb006d474b92"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 161.0, "deletions": 74.0, "lines": 235.0, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 74.0, "UPD": 11.0, "INS": 30.0, "MOV": 23.0, "DEL": 10.0, "spoonFilesChanged": 7, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http", "okhttp/src/main/java/okhttp3/internal/framed", "mockwebserver/src/main/java/okhttp3/mockwebserver"], "changesInPackagesSPOON": ["okhttp3.internal.http.StreamAllocation.connectionFailed(java.io.IOException)", "okhttp3.mockwebserver.MockWebServer.dispatchBookkeepingRequest(int,java.net.Socket)", "okhttp3.internal.http.StreamAllocation.findHealthyConnection(int,int,int,boolean,boolean)", "okhttp3.internal.http.StreamAllocation.isRecoverable(java.io.IOException,boolean)", "okhttp3.internal.framed.FramedStream.getResponseHeaders()", "okhttp3.mockwebserver.MockResponse.setHttp2ErrorCode(int)", "okhttp3.internal.framed.FramedStream.FramedDataSource.checkNotClosed()", "okhttp3.mockwebserver.MockWebServer.FramedSocketHandler.onStream(okhttp3.internal.framed.FramedStream)", "okhttp3.mockwebserver.MockResponse", "okhttp3.internal.framed.FramedStream.checkOutNotClosed()", "okhttp3.internal.http.StreamAllocation.streamFailed(java.io.IOException)", "okhttp3.mockwebserver.SocketPolicy", "okhttp3.internal.framed.StreamResetException", "okhttp3.internal.http.StreamAllocation.recover(java.io.IOException,boolean,okio.Sink)", "okhttp3.internal.http.StreamAllocation.hasMoreRoutes()", "okhttp3.internal.http.HttpEngine.close()", "okhttp3.internal.http.HttpEngine.isRecoverable(java.io.IOException,boolean)", "okhttp3.internal.http.StreamAllocation.findConnection(int,int,int,boolean)", "okhttp3.internal.http.StreamAllocation", "okhttp3.internal.http.HttpEngine.recover(java.io.IOException,boolean,okio.Sink)", "okhttp3.mockwebserver.MockResponse.getHttp2ErrorCode()"]}, {"title": "Strange test flake in URLConnectionTest.testRequestBodySurvivesRetries", "body": "Somehow the response parser is seeing a request status line. What\u2019s up with that?\n\n```\nclosed\nTests run: 229, Failures: 0, Errors: 1, Skipped: 8, Time elapsed: 18.912 sec <<< FAILURE! - in okhttp3.URLConnectionTest\nrequestBodySurvivesRetriesWithBufferedBody(okhttp3.URLConnectionTest)  Time elapsed: 0.011 sec  <<< ERROR!\njava.net.ProtocolException: Unexpected status line: POST http://localhost:48879/def HTTP/1.1\n    at okhttp3.internal.http.StatusLine.parse(StatusLine.java:69)\n    at okhttp3.internal.http.Http1xStream.readResponse(Http1xStream.java:184)\n    at okhttp3.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:125)\n    at okhttp3.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:726)\n    at okhttp3.internal.http.HttpEngine.readResponse(HttpEngine.java:596)\n    at okhttp3.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:481)\n    at okhttp3.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:417)\n    at okhttp3.internal.huc.HttpURLConnectionImpl.getInputStream(HttpURLConnectionImpl.java:247)\n    at okhttp3.URLConnectionTest.assertContent(URLConnectionTest.java:3476)\n    at okhttp3.URLConnectionTest.assertContent(URLConnectionTest.java:3480)\n    at okhttp3.URLConnectionTest.testRequestBodySurvivesRetries(URLConnectionTest.java:319)\n    at okhttp3.URLConnectionTest.requestBodySurvivesRetriesWithBufferedBody(URLConnectionTest.java:302)\n```\n\nThis happened on Travis on Java 7.\nhttps://s3.amazonaws.com/archive.travis-ci.org/jobs/128577751/log.txt\n", "url": "https://github.com/square/okhttp/issues/2541", "user": "swankjesse", "labels": ["bug", "tests"], "created": "2016-05-08 01:07:01", "closed": "2016-05-21 15:06:03", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "`isCleartextTrafficPermitted()` fails on OpenJDK 8 + Robolectric", "body": "How to reproduce:\n- Install OpenJDK 8\n- Use current 3.3.0-SNAPSHOT version\n- `new OkHttpClient()`: The code fails in the static initializer, when trying to figure out the platform.\n\nThe code that breaks was introduced here: https://github.com/square/okhttp/issues/2513\n\nEither the detection of the runtime is broken, or the code is wrong there. I'll try to figure out an automatic test for this.\n", "url": "https://github.com/square/okhttp/issues/2533", "user": "kungfoo", "labels": ["bug", "needs info"], "created": "2016-05-04 08:33:11", "closed": "2017-12-30 07:49:53", "commits": {}, "ttf": 604.0002777777778, "commitsDetails": []}, {"title": "HttpURLConnectionImpl loops forever trying to recover from a RouteException after disconnect() is called", "body": "[Test case that demonstrates the problem.](https://gist.github.com/jdcormie/dc1982436ace9750139777e9fcc6ed46)\n\nI noticed the bug in branch okhttp_27 but it may affect other versions.\n\nIn words: the problem is that HttpEngine.recover(RouteException) returns true, indicating that the request can be recovered, even when the HttpEngine itself is cancelled. Yet a call to HttpEngine.connect() on a cancel()ed instance always throws IOException. This results in an infinite loop of recover()/connect() rooted at HttpURLConnectionImpl.execute(). From the caller's perspective, calls into HttpURLConnection that require the response simply never return.\n\nA possible fix could be to modify StreamAllocation.recover(RouteException) to check for cancellation and decline recovery. Something like:\n\n```\npublic boolean recover(RouteException e) {\n+  if (canceled) {\n+   return false;\n+  }\n\n  if (connection != null) {\n    connectionFailed(e.getLastConnectException());\n  }\n  ...\n```\n\nA possible work around could be to set OkHttpClient.setRetryOnConnectionFailure(false)\n", "url": "https://github.com/square/okhttp/issues/2532", "user": "jdcormie", "labels": ["bug"], "created": "2016-05-04 04:31:00", "closed": "2016-06-25 19:13:46", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "User-Agent Header not used for TLS tunnel", "body": "In case where HTTP tunnel is needed, the \"User-Agent\" header is reset and the default agent \"okhttp/3.x.x\" is used. This is causing the request being ignored as its considered to be originating from an unknown client.\n\nReference code from RealConnection.\n\n```\n /**\n   * Returns a request that creates a TLS tunnel via an HTTP proxy, or null if no tunnel is\n   * necessary. Everything in the tunnel request is sent unencrypted to the proxy server, so tunnels\n   * include only the minimum set of headers. This avoids sending potentially sensitive data like\n   * HTTP cookies to the proxy unencrypted.\n   */\n  private Request createTunnelRequest() throws IOException {\n    return new Request.Builder()\n        .url(route.address().url())\n        .header(\"Host\", Util.hostHeader(route.address().url(), true))\n        .header(\"Proxy-Connection\", \"Keep-Alive\")\n        .header(\"User-Agent\", Version.userAgent()) // For HTTP/1.0 proxies like Squid.\n        .build();\n  }\n```\n", "url": "https://github.com/square/okhttp/issues/2514", "user": "psniranjan", "labels": ["bug"], "created": "2016-04-26 21:40:57", "closed": "2020-03-29 18:07:05", "commits": {}, "ttf": 1432.0002777777777, "commitsDetails": []}, {"title": "setHeaders() has surprising, bad side effects for MockResponse", "body": "Using MockWebServer to test api requests.\n\n`mockServer.enqueue(new MockResponse().setBody(\"Anything\").setResponseCode(HttpURLConnection.HTTP_OK));`\nreturns successfully the response\n\n`mockServer.enqueue(new MockResponse().setBody(\"Anything\").setResponseCode(HttpURLConnection.HTTP_BAD_REQUEST));`\nthrows read time out exception\n", "url": "https://github.com/square/okhttp/issues/2512", "user": "MoshDev", "labels": ["bug"], "created": "2016-04-25 22:02:29", "closed": "2020-03-29 18:49:22", "commits": {}, "ttf": 1433.0002777777777, "commitsDetails": []}, {"title": "Strict Mode Error: Explicit termination method 'close' not called", "body": "Wounder if anyone else has seen this strict mode violation, it could be my own code but if it is I can't see how.\n\n```\nE/StrictMode: A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\n                                                                      java.lang.Throwable: Explicit termination method 'close' not called\n                                                                          at dalvik.system.CloseGuard.open(CloseGuard.java:180)\n                                                                          at java.io.FileInputStream.<init>(FileInputStream.java:78)\n                                                                          at okio.Okio.source(Okio.java:163)\n                                                                          at okhttp3.internal.io.FileSystem$1.source(FileSystem.java:44)\n                                                                          at okhttp3.internal.DiskLruCache$Entry.snapshot(DiskLruCache.java:1004)\n                                                                          at okhttp3.internal.DiskLruCache.get(DiskLruCache.java:431)\n                                                                          at okhttp3.Cache.get(Cache.java:193)\n                                                                          at okhttp3.Cache$1.get(Cache.java:143)\n                                                                          at okhttp3.internal.http.HttpEngine.sendRequest(HttpEngine.java:198)\n                                                                          at okhttp3.RealCall.getResponse(RealCall.java:240)\n                                                                          at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)\n                                                                          at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\n                                                                          at okhttp3.RealCall.access$100(RealCall.java:30)\n                                                                          at okhttp3.RealCall$AsyncCall.execute(RealCall.java:127)\n                                                                          at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\n                                                                          at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\n                                                                          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n                                                                          at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/square/okhttp/issues/2487", "user": "Wavesonics", "labels": ["bug", "needs info"], "created": "2016-04-15 23:41:07", "closed": "2016-08-31 12:25:36", "commits": {}, "ttf": 137.00027777777777, "commitsDetails": []}, {"title": "AsyncCall in RealCall sets the thread name to the url, exposing sensitive data", "body": "The AsyncCall runnable inside the RealCall class extends NamedRunnable, and sets the current thread name to the full url of the call.\nThis can expose sensitive information, for example when API's require a token in the url. I'm having the problem that I log the thread name with log4j2 and it now logs the full url.\nI suggest changing it to `toLoggableString()`.\n\nThanks\n", "url": "https://github.com/square/okhttp/issues/2481", "user": "Floens", "labels": ["bug"], "created": "2016-04-13 13:53:19", "closed": "2016-04-21 18:39:34", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Require connection preface on HTTP/2 connections", "body": "Currently we aren\u2019t strict on this.\n\nhttps://github.com/square/okhttp/pull/2473/files/8996934748a48fe04f7dde56069042dfecb64c91#r59138454\n", "url": "https://github.com/square/okhttp/issues/2474", "user": "swankjesse", "labels": ["bug"], "created": "2016-04-10 19:00:34", "closed": "2016-12-12 01:44:46", "commits": {"55e3ea0422e36c64c70a8381b4c8fcc007a6eaaf": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 245.00027777777777, "commitsDetails": [{"commitHash": "55e3ea0422e36c64c70a8381b4c8fcc007a6eaaf", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["f74dc52cb18554ff8d8a8621b1e8a89c5ad22b60"], "nameRev": "55e3ea0422e36c64c70a8381b4c8fcc007a6eaaf tags/parent-3.6.0~32^2", "commitMessage": "Fail the HTTP/2 connection if first frame isn't SETTINGS.\n\nCloses: https://github.com/square/okhttp/issues/2474\n", "commitDateTime": "2016-12-11 13:49:24", "authoredDateTime": "2016-12-11 13:49:24", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 184, "deletions": 99, "lines": 283}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2Test.java", "insertions": 25, "deletions": 25, "lines": 50}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/MockHttp2Peer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Reader.java", "insertions": 28, "deletions": 19, "lines": 47}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["55e3ea0422e36c64c70a8381b4c8fcc007a6eaaf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 30, "deletions": 23, "lines": 53, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2"]}, {"title": "[bug] 407 proxy error is not reported when credentials are wrong, instead \"Too many follow-up requests\"", "body": "Hello,\n\nWhen connecting through a proxy with authentication, the first request is done without authentication. \n(I have implemented a preemptive authentication here https://github.com/square/okhttp/pull/2458 in order to send the first request with authentication). 407 response is received, the authenticate method from authenticator is called. If the **user/password credentials are wrong**, we get 407 again, and we make the call again with wrong credentials, and again, and again.\n\n`Exception in thread \"main\" java.net.ProtocolException: Too many follow-up requests: 21\n    at okhttp3.RealCall.getResponse(RealCall.java:289)\n    at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\n    at okhttp3.RealCall.execute(RealCall.java:57)\n    at testok.run(testok.java:72)\n    at testok.main(testok.java:79)\n`\n\nIf 407 is received and we did send \"authentication\" header in the request, the request should return 407 without so many useless redirects. \n\nFor the first call (without header) 407 means \"try to authenticate\". For the second call (with header) 407 should mean \"failed to authenticate\". **And exit.**\n\nBest Regards,\nStefan Matei\n", "url": "https://github.com/square/okhttp/issues/2464", "user": "smatei", "labels": ["bug", "documentation"], "created": "2016-04-06 07:38:51", "closed": "2017-01-08 02:33:10", "commits": {"cbe7baa4746954a06a8fbc8c622b4f7d66c09964": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 276.0002777777778, "commitsDetails": [{"commitHash": "cbe7baa4746954a06a8fbc8c622b4f7d66c09964", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["de8699b62d24e3b31205229a259be5b26b040957"], "nameRev": "cbe7baa4746954a06a8fbc8c622b4f7d66c09964 tags/parent-3.6.0~18^2", "commitMessage": "Fix examples to give up if authentication fails.\n\nCloses: https://github.com/square/okhttp/issues/2464\n", "commitDateTime": "2017-01-07 18:45:32", "authoredDateTime": "2017-01-07 18:45:32", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/Authenticator.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "samples/guide/src/main/java/okhttp3/recipes/Authenticate.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Authenticator.java", "spoonMethods": []}, {"spoonFilePath": "Authenticate.java", "spoonMethods": [{"spoonMethodName": "okhttp3.recipes.Authenticate.1.authenticate(okhttp3.Route,okhttp3.Response)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cbe7baa4746954a06a8fbc8c622b4f7d66c09964"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 0, "lines": 16, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3", "samples/guide/src/main/java/okhttp3/recipes"], "changesInPackagesSPOON": ["okhttp3.recipes.Authenticate.1.authenticate(okhttp3.Route,okhttp3.Response)"]}, {"title": "RejectedExecutionException in RealWebSocket.onClose()", "body": " I'm getting a lot of RejectedExecutionException from line okhttp3.internal.ws.RealWebSocket$1.onClose (RealWebSocket.java:82) while using the engine.io/socket.io library. \n\nI assume that ping response runnable that is writing the pong by locking the thread, is staying in the pool long enough to create a problem when server requests socket close in the meantime? Since only one runnable can be in the pool at the time and so RejectedExecutionException is thrown.\n\nhttps://github.com/square/okhttp/commit/8a1e6ceec92963423b4cc9f5edded6363fc2c43f#diff-84851fc7b3d535627088311c7ca1951dR70\n\nLibrary version 3.0.1\n\nSorry for not writing the test case, I spent the whole day so far trying to find the issue...\n", "url": "https://github.com/square/okhttp/issues/2455", "user": "dusanvita", "labels": ["bug", "websockets"], "created": "2016-03-31 21:57:53", "closed": "2016-09-20 04:03:34", "commits": {"8a1e6ceec92963423b4cc9f5edded6363fc2c43f": {"commitGHEventType": "referenced", "commitUser": "dusanvita"}}, "ttf": 172.00027777777777, "commitsDetails": [{"commitHash": "8a1e6ceec92963423b4cc9f5edded6363fc2c43f", "commitGHEventType": "referenced", "commitUser": "dusanvita", "commitParents": ["c724fa4fc908f01490ab5deed87b42193f308205"], "nameRev": "8a1e6ceec92963423b4cc9f5edded6363fc2c43f tags/parent-2.3.0~20^2", "commitMessage": "Use the now-generalized reply executor for peer close.\n", "commitDateTime": "2015-03-09 20:33:47", "authoredDateTime": "2015-03-09 18:37:09", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/ws/RealWebSocketTest.java", "insertions": 14, "deletions": 6, "lines": 20}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/ws/RealWebSocket.java", "insertions": 10, "deletions": 16, "lines": 26}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocketCall.java", "insertions": 21, "deletions": 4, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,com.squareup.okhttp.mockwebserver.RecordedRequest,com.squareup.okhttp.mockwebserver.MockResponse)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealWebSocketTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.ws.RealWebSocketTest.setUp()", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.ws.RealWebSocketTest.setUp().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.ws.RealWebSocketTest.setUp().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.ws.RealWebSocketTest.streamingMessageCanInterleavePing()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.ws.RealWebSocketTest.pingWritesPong()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RealWebSocket.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.ws.RealWebSocket.1.onPing(okio.Buffer)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.ws.RealWebSocket.1.onClose(int,java.lang.String)", "TOT": 5, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.ws.RealWebSocket", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "WebSocketCall.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.ws.WebSocketCall.ConnectionWebSocket", "TOT": 7, "UPD": 1, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.ws.WebSocketCall.createWebSocket(com.squareup.okhttp.Response,com.squareup.okhttp.internal.ws.WebSocketListener)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.ws.WebSocketCall.ConnectionWebSocket.create(com.squareup.okhttp.Response,com.squareup.okhttp.Connection,okio.BufferedSource,okio.BufferedSink,java.util.Random,com.squareup.okhttp.internal.ws.WebSocketListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8a1e6ceec92963423b4cc9f5edded6363fc2c43f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 42, "deletions": 22, "lines": 64, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 24, "UPD": 5, "INS": 12, "MOV": 4, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/ws", "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.ws.WebSocketCall.createWebSocket(com.squareup.okhttp.Response,com.squareup.okhttp.internal.ws.WebSocketListener)", "com.squareup.okhttp.mockwebserver.MockWebServer.handleWebSocketUpgrade(java.net.Socket,okio.BufferedSource,okio.BufferedSink,com.squareup.okhttp.mockwebserver.RecordedRequest,com.squareup.okhttp.mockwebserver.MockResponse)", "com.squareup.okhttp.internal.ws.RealWebSocket", "com.squareup.okhttp.internal.ws.RealWebSocket.1.onClose(int,java.lang.String)", "com.squareup.okhttp.internal.ws.RealWebSocket.1.onPing(okio.Buffer)", "com.squareup.okhttp.internal.ws.WebSocketCall.ConnectionWebSocket.create(com.squareup.okhttp.Response,com.squareup.okhttp.Connection,okio.BufferedSource,okio.BufferedSink,java.util.Random,com.squareup.okhttp.internal.ws.WebSocketListener)", "com.squareup.okhttp.internal.ws.WebSocketCall.ConnectionWebSocket"]}, {"title": "Fatal Exception: java.lang.IllegalStateException: Unable to take ownership of connection.", "body": "This happen on version 3.2.0 with 300+ crashes in 30 days. Details:\n`Fatal Exception: java.lang.IllegalStateException: Unable to take ownership of connection.\n       at com.squareup.okhttp.ws.WebSocketCall.createWebSocket(SourceFile:157)\n       at com.squareup.okhttp.ws.WebSocketCall.access$000(SourceFile:42)\n       at com.squareup.okhttp.ws.WebSocketCall$1.onResponse(SourceFile:102)\n       at com.squareup.okhttp.Call$AsyncCall.execute(SourceFile:168)\n       at com.squareup.okhttp.internal.NamedRunnable.run(SourceFile:33)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:818)`\n\n![image](https://cloud.githubusercontent.com/assets/5756363/14058933/69742c40-f362-11e5-8fa4-b55aeb71035d.png)\n\nPlease help me fix it.\n", "url": "https://github.com/square/okhttp/issues/2440", "user": "iceteahh", "labels": ["bug", "websockets"], "created": "2016-03-26 07:53:22", "closed": "2016-09-18 20:20:35", "commits": {}, "ttf": 176.00027777777777, "commitsDetails": []}, {"title": "Unable to extract trust manager on IBM JDK", "body": "What kind of issue is this?\n- [ ] Question. This issue tracker is not the place for questions. If you want to ask how to do\n     something, or to understand why something isn't working the way you expect it to, use Stack\n     Overflow. https://stackoverflow.com/questions/tagged/okhttp\n- [x] Bug report. If you\u2019ve found a bug, spend the time to write a failing test. Bugs with tests\n     get fixed. Here\u2019s an example: https://gist.github.com/swankjesse/981fcae102f513eb13ed\n  \n  **Note**:  This particular issue is really tricky to write a unit test since it's very coupled to the     platform, which is retrieved via internal implementation details in OkHttp's `Platform` class (which isn't injectable into the OkHttpClient).\n- [ ] Feature Request. Start by telling us what problem you\u2019re trying to solve. Often a solution\n     already exists! Don\u2019t send pull requests to implement new features without first getting our\n     support. Sometimes we leave features out on purpose to keep the project small.\n\n**_Issue:**_\n\n```\njava.lang.IllegalStateException: Unable to extract the trust manager on okhttp3.internal.Platform@e85a0ce8, sslSocketFactory is class com.ibm.jsse2.SSLSocketFactoryImpl\n    at okhttp3.OkHttpClient.<init>(OkHttpClient.java:187)\n    at okhttp3.OkHttpClient.<init>(OkHttpClient.java:151)\n    at retrofit2.Retrofit$Builder.build(Retrofit.java:551)\n```\n\nThis seems closely related to #2323, except that I am running this on an IBM JDK (don't have a choice).  In looking into the source, I noticed that the `Platform` is using reflection to pull the `X509TrustManager` from the `SSLSocketFactory` using known (via open source) implementation details from various open JDK implementations.  However, I'm assuming there is a good reason why OkHttp can't just get a `X509TrustManager` using the JDK's API via something like the following?\n\n``` java\n  private X509TrustManager resolveDefaultTrustManager() {\n    X509TrustManager x509TrustManager = null;\n    try {\n      TrustManagerFactory trustManagerFactory =\n        TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n      trustManagerFactory.init((KeyStore)null);\n\n      for (TrustManager trustManager: trustManagerFactory.getTrustManagers()) {\n        if (trustManager instanceof X509TrustManager) {\n          x509TrustManager = (X509TrustManager)trustManager;\n          break;\n        }\n      }\n    } catch (NoSuchAlgorithmException | KeyStoreException e) {\n      // move along...\n    }\n\n    return x509TrustManager;\n  }\n```\n\nIf there are good reasons why this approach simply isn't preferred, could it still be used as a fallback?\n", "url": "https://github.com/square/okhttp/issues/2427", "user": "sparty02", "labels": ["bug"], "created": "2016-03-22 23:16:55", "closed": "2016-03-29 02:26:22", "commits": {"85f74e2004eaf0d4ff339e8644df3d8e716361e5": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "85f74e2004eaf0d4ff339e8644df3d8e716361e5", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["e5b7409664a8ead09b5b5e4f861ff4f1a99cc0de"], "nameRev": "85f74e2004eaf0d4ff339e8644df3d8e716361e5 tags/parent-3.3.0~29^2", "commitMessage": "Accept user-provided trust managers in OkHttpClient.Builder\n\nCloses: https://github.com/square/okhttp/issues/2427\n", "commitDateTime": "2016-03-28 19:02:25", "authoredDateTime": "2016-03-28 19:02:25", "commitGitStats": [{"filePath": "okhttp-urlconnection/src/test/java/okhttp3/OkUrlFactoryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/CertificatePinner.java", "insertions": 9, "deletions": 20, "lines": 29}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 87, "deletions": 23, "lines": 110}, {"filePath": "samples/guide/src/main/java/okhttp3/recipes/CustomTrust.java", "insertions": 44, "deletions": 32, "lines": 76}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OkUrlFactoryTest.java", "spoonMethods": []}, {"spoonFilePath": "CertificatePinner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificatePinner", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.CertificatePinner.newBuilder()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.CertificatePinner.Builder", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "okhttp3.CertificatePinner.Builder.build()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.CertificatePinner.Builder.certificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinner.withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinner.Builder.add(java.lang.String,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient", "TOT": 22, "UPD": 2, "INS": 2, "MOV": 13, "DEL": 5}, {"spoonMethodName": "okhttp3.OkHttpClient.Builder.sslSocketFactory(javax.net.ssl.SSLSocketFactory)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.OkHttpClient.systemDefaultTrustManager()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClient.systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClient.Builder.sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CustomTrust.java", "spoonMethods": [{"spoonMethodName": "okhttp3.recipes.CustomTrust.sslContextForTrustedCertificates(java.io.InputStream)", "TOT": 17, "UPD": 3, "INS": 0, "MOV": 14, "DEL": 0}, {"spoonMethodName": "okhttp3.recipes.CustomTrust", "TOT": 11, "UPD": 1, "INS": 5, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["85f74e2004eaf0d4ff339e8644df3d8e716361e5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 140, "deletions": 75, "lines": 215, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 81, "UPD": 12, "INS": 17, "MOV": 40, "DEL": 12, "spoonFilesChanged": 3, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3", "samples/guide/src/main/java/okhttp3/recipes"], "changesInPackagesSPOON": ["okhttp3.OkHttpClient.systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)", "okhttp3.CertificatePinner.newBuilder()", "okhttp3.CertificatePinner.Builder.build()", "okhttp3.CertificatePinner.Builder", "okhttp3.CertificatePinner.withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)", "okhttp3.CertificatePinner", "okhttp3.OkHttpClient.systemDefaultTrustManager()", "okhttp3.OkHttpClient", "okhttp3.OkHttpClient.Builder.sslSocketFactory(javax.net.ssl.SSLSocketFactory)", "okhttp3.OkHttpClient.Builder.sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)", "okhttp3.recipes.CustomTrust", "okhttp3.CertificatePinner.Builder.add(java.lang.String,java.lang.String[])", "okhttp3.recipes.CustomTrust.sslContextForTrustedCertificates(java.io.InputStream)", "okhttp3.CertificatePinner.Builder.certificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner)"]}, {"title": "Support of \"Connection close\" headers for HTTPS through proxy", "body": "Hi, \n\nThis issue could be linked to #1517, but is here specific to https through proxy (So I allow myself to open a new one).\n\n**Synthesis** : The client seems not respect `Connection: close` header come from a proxy when no preemptive authentication on a HTTPS connection.\n\nConsider this snippet code (simple HTTP GET through a proxy) :\n\n```\n        Authenticator.setDefault(new Authenticator() {\n            protected PasswordAuthentication getPasswordAuthentication() {\n                return new PasswordAuthentication(USER, PASSWORD.toCharArray());\n            }\n        });\n\n        Proxy PROXY = new Proxy(Type.HTTP, new InetSocketAddress(PROXY_URL, 80));\n        OkHttpClient okHttpClient = new OkHttpClient();\n        okHttpClient.setProxy(PROXY);\n        Request request = new Request.Builder().url(\"http://www.google.org/\").build();\n        Response response = okHttpClient.newCall(request).execute();\n        System.out.println(response.code());\n        response.body().close();\n```\n\nThe call works fine and the network trace (wireshark) is : \n\n```\nGET http://www.google.org/ HTTP/1.1\nHost: www.google.org\nConnection: Keep-Alive\nAccept-Encoding: gzip\nUser-Agent: okhttp/2.6.0\n\nHTTP/1.1 407 Proxy Authentication Required\nMime-Version: 1.0\nDate: Tue, 22 Mar 2016 19:26:29 CET\nContent-Type: text/html\nProxy-Authenticate: Basic realm=\"[deleted]\"\nConnection: close\nProxy-Connection: close\nContent-Length: 1723\n\n[HTML content]\n```\n\nAnd **in a second TCP stream** : \n\n```\nGET http://www.google.org/ HTTP/1.1\nProxy-Authorization: Basic [deleted]=\nHost: www.google.org\nConnection: Keep-Alive\nAccept-Encoding: gzip\nUser-Agent: okhttp/2.6.0\n\nHTTP/1.1 200 OK\n[correct headers]\n```\n\nNow consider the same snippet code on HTTPS => **https://www.google.org/**, the call fails with Java stackstrace : \n\n```\njava.io.IOException: unexpected end of stream on Connection{www.google.org:443, proxy=HTTP @ [deleted] hostAddress=[deleted] cipherSuite=none protocol=null} (recycle count=0)\n    at com.squareup.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:211)\n [...]\nCaused by: java.io.EOFException: \\n not found: size=0 content=...\n    at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:201)\n    at com.squareup.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\n    ... 37 more\n```\n\nThe corresponding network trace is : \n\n```\nCONNECT www.google.org:443 HTTP/1.1\nHost: www.google.org\nProxy-Connection: Keep-Alive\nUser-Agent: okhttp/2.6.0\n\nHTTP/1.1 407 Proxy Authentication Required\nMime-Version: 1.0\nDate: Tue, 22 Mar 2016 19:31:25 CET\nContent-Type: text/html\nProxy-Authenticate: Basic realm=\"[deleted]\"\nConnection: close\nProxy-Connection: close\nContent-Length: 1723\n\n[HTML content]\n\nCONNECT www.google.org:443 HTTP/1.1\nHost: www.google.org\nProxy-Connection: Keep-Alive\nUser-Agent: okhttp/2.6.0\nProxy-Authorization: Basic [deleted]=\n```\n\nThe second `CONNECT` is in the **same TCP session**, but the proxy ask a new TCP session with headers `Connection: close` / `Proxy-Connection: close` and has close the connection.\n=> No answer to the second `CONNECT`, and no content got.\n\nThe below unit test _reproduces_ the problem (Java exception), but with some limitations ... I didn't found how to simulate different TCP sessions with `MockResponse` => proxy server is stop violently.\n[ProxyHttpsTest.java.txt](https://github.com/square/okhttp/files/184739/ProxyHttpsTest.java.txt)\n\nReproduced with v2.6.0 / 2.7.5 / 3.2.0.\nBest regards.\n", "url": "https://github.com/square/okhttp/issues/2426", "user": "axel3rd", "labels": ["bug"], "created": "2016-03-22 18:47:42", "closed": "2016-04-13 11:55:04", "commits": {"62c8226faa9bf6958d16a8ad8b11bea84c2f1051": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "62c8226faa9bf6958d16a8ad8b11bea84c2f1051", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["d62f33666fa4b74be9672c849450e6698f3c8780"], "nameRev": "62c8226faa9bf6958d16a8ad8b11bea84c2f1051 tags/parent-3.3.0~33^2", "commitMessage": "Failing test for 'Connection: close' with HTTPS proxy auth challenges.\n\nLooks like we don't support this, and supporting this is a bit awkward.\nhttps://github.com/square/okhttp/issues/2426\n", "commitDateTime": "2016-03-22 23:11:07", "authoredDateTime": "2016-03-22 23:11:07", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 41, "deletions": 0, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.proxyAuthenticateOnConnectWithConnectionClose()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["62c8226faa9bf6958d16a8ad8b11bea84c2f1051"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NullPointerException in AndroidTrustRootIndex (Okhttp 2.7.5) #2378", "body": "Issue is not resolved in 2.7.5\n\nJust doubled checked it again:\n1. Device: Nexus 9/ Android 5.1.1\n2. Output of System.out.println(okHttpClient.getSslSocketFactory().getClass());\n`class android.net.SSLCertificateSocketFactory`\n3. making sure I am using the correct version by calling this\n`./gradlew -q dependencies AppName:dependencies  | grep com.squareup.okhttp:okhttp`\n\nand this is the result:\n\n+--- com.squareup.okhttp:okhttp:2.7.5\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0 -> 2.7.5 (_)\n     |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n          +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0 -> 2.7.5 (_)\n|    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5\n|    |    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    |    +--- com.squareup.okhttp:okhttp-ws:2.5.0\n|    |    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5 (_)\n--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n     --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5\n|    |    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    |    +--- com.squareup.okhttp:okhttp-ws:2.5.0\n|    |    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5 (_)\n--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n     --- com.squareup.okhttp:okhttp:2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    --- com.squareup.okhttp:okhttp:2.2.0 -> 2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0 -> 2.7.5 (_)\n     |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n          +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    --- com.squareup.okhttp:okhttp:2.2.0 -> 2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0 -> 2.7.5 (_)\n|    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5\n|    |    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    |    +--- com.squareup.okhttp:okhttp-ws:2.5.0\n|    |    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5 (_)\n--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n     --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5\n|    |    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    |    +--- com.squareup.okhttp:okhttp-ws:2.5.0\n|    |    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5 (_)\n--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n     --- com.squareup.okhttp:okhttp:2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0 -> 2.7.5 (_)\n     |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n          +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0 -> 2.7.5 (_)\n     |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n          +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5\n|    |    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    |    +--- com.squareup.okhttp:okhttp-ws:2.5.0\n|    |    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5 (_)\n--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n     --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5\n|    |    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    |    +--- com.squareup.okhttp:okhttp-ws:2.5.0\n|    |    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5 (_)\n--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n     --- com.squareup.okhttp:okhttp:2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.5.0\n     +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0\n     |    --- com.squareup.okhttp:okhttp:2.4.0 -> 2.5.0 (_)\n     |    --- com.squareup.okhttp:okhttp:2.5.0 (_)\n          +--- com.squareup.okhttp:okhttp:2.5.0 (_)\n|    --- com.squareup.okhttp:okhttp:2.2.0 -> 2.7.5\n+--- com.squareup.okhttp:okhttp:2.7.5 (_)\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0 -> 2.7.5 (_)\n     |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n          +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5\n+--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n|    --- com.squareup.okhttp:okhttp:2.7.5 (_)\n|    +--- com.squareup.okhttp:okhttp:2.7.5 (_)\n     +--- com.squareup.okhttp:okhttp:2.4.0 -> 2.5.0\n     +--- com.squareup.okhttp:okhttp-urlconnection:2.4.0\n     |    --- com.squareup.okhttp:okhttp:2.4.0 -> 2.5.0 (_)\n     |    --- com.squareup.okhttp:okhttp:2.5.0 (_)\n          +--- com.squareup.okhttp:okhttp:2.5.0 (_)\n|    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5\n|    |    +--- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|    |    +--- com.squareup.okhttp:okhttp-ws:2.5.0\n|    |    |    --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n|         --- com.squareup.okhttp:okhttp:2.5.0 -> 2.7.5 (_)\n+--- com.squareup.okhttp:okhttp:2.7.5 (_)\n--- com.squareup.okhttp:okhttp-urlconnection:2.7.5\n     --- com.squareup.okhttp:okhttp:2.7.5 (*)\n", "url": "https://github.com/square/okhttp/issues/2425", "user": "mahdihijazi", "labels": ["bug"], "created": "2016-03-22 14:09:15", "closed": "2016-10-16 16:26:38", "commits": {}, "ttf": 208.00027777777777, "commitsDetails": []}, {"title": "[Bug report] Proxy authenticate over http.", "body": "I have successfully tested https requests with the code\n\n```\n   String run(String url) throws IOException {\n    String proxy = \"xxxxxxxxxxx\";\n    String user = \"xxxxxxx\";\n    String password = \"xxxxxxxxx\";\n\n    Authenticator proxyAuthenticator = new Authenticator() {\n      public Request authenticate(Route route, Response response) throws IOException {\n           String credential = Credentials.basic(user, password);\n           return response.request().newBuilder()\n               .header(\"Proxy-Authorization\", credential)\n               .build();\n      }\n    };\n\n    OkHttpClient client = new OkHttpClient.Builder()\n        .protocols(Arrays.asList(Protocol.HTTP_2, Protocol.HTTP_1_1, Protocol.SPDY_3))\n        .connectTimeout(60, TimeUnit.SECONDS)\n        .writeTimeout(60, TimeUnit.SECONDS)\n        .readTimeout(60, TimeUnit.SECONDS)\n        .proxy(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxy, 80)))\n        .proxyAuthenticator(proxyAuthenticator)\n        .build();\n\n    Request request = new Request.Builder()\n        .url(url)\n        .header(\"User-Agent\", \"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0\")\n        .build();\n\n    Response response = client.newCall(request).execute();\n    System.out.println(\"response \" + response.code());\n    return response.body().string();\n  }\n\n  public static void main(String[] args) throws IOException {\n    testok example = new testok();\n    String response = example.run(\"https://www.google.com\");\n    System.out.println(response);\n  }\n```\n\nThe authentication works just fine, I get 200 response code. Now I want to get \n\n`String response = example.run(\"http://www.bing.com\");`\n\ninstead of \n\n`String response = example.run(\"https://www.google.com\");`\n\nI get response 407. In the HttpEngine class, followUpRequest method, \n\n```\n     switch (responseCode) {\n      case HTTP_PROXY_AUTH:\n        Proxy selectedProxy = route != null\n            ? route.proxy()\n            : client.proxy();\n        if (selectedProxy.type() != Proxy.Type.HTTP) {\n          throw new ProtocolException(\"Received HTTP_PROXY_AUTH (407) code while not using proxy\");\n        }\n        // fall-through\n      case HTTP_UNAUTHORIZED:\n        return client.authenticator().authenticate(route, userResponse);`\n```\n\nthe code falls through to client.authenticator().authenticate(route, userResponse), but the authentication is missing, because I set only .proxyAuthenticator(proxyAuthenticator) in the client builder. \n\nBut if I set the proxyAuthenticator to authenticator (.authenticator(proxyAuthenticator)), it works (response 200):\n\n```\n    OkHttpClient client = new OkHttpClient.Builder()\n\n        .protocols(Arrays.asList(Protocol.HTTP_2, Protocol.HTTP_1_1, Protocol.SPDY_3))\n\n        .connectTimeout(60, TimeUnit.SECONDS)\n\n        .writeTimeout(60, TimeUnit.SECONDS)\n\n        .readTimeout(60, TimeUnit.SECONDS)\n\n        .proxy(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxy, 80)))\n\n        .proxyAuthenticator(proxyAuthenticator)\n\n        .authenticator(proxyAuthenticator)\n\n        .build();\n```\n\nI assume this is not normal, as the authenticator is for other purposes. It should use proxyAuthenticator.\n", "url": "https://github.com/square/okhttp/issues/2414", "user": "smatei", "labels": ["bug"], "created": "2016-03-18 12:47:39", "closed": "2016-03-20 18:43:22", "commits": {"7333596e7e219d130eb2a93bf5701e128bcfb5b7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "8e6aeb4ebefad469cb266ce264dcd5d2b6fca7d4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "7333596e7e219d130eb2a93bf5701e128bcfb5b7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8e6aeb4ebefad469cb266ce264dcd5d2b6fca7d4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b6cfe4cd10d7743f4817faffefef7e8ce79e84d2"], "nameRev": "8e6aeb4ebefad469cb266ce264dcd5d2b6fca7d4 tags/parent-3.3.0~35^2", "commitMessage": "Fix a regression in authenticating HTTP proxies.\n\nWe were using the regular authenticator, not the proxy authenticator.\n\nCloses: https://github.com/square/okhttp/issues/2414\n", "commitDateTime": "2016-03-20 13:30:40", "authoredDateTime": "2016-03-19 16:50:22", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpEngine.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.httpProxyAuthenticate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.authCallsForHeader(java.lang.String)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpEngine.followUpRequest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8e6aeb4ebefad469cb266ce264dcd5d2b6fca7d4"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2.0, "deletions": 1.0, "lines": 3.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http"], "changesInPackagesSPOON": ["okhttp3.internal.http.HttpEngine.followUpRequest()"]}, {"title": "IllegalStateException: stream != null", "body": "```\nFatal Exception: java.lang.IllegalStateException: stream != null\n       at okhttp3.internal.http.StreamAllocation.findConnection(StreamAllocation.java:155)\n       at okhttp3.internal.http.StreamAllocation.findHealthyConnection(StreamAllocation.java:127)\n       at okhttp3.internal.http.StreamAllocation.newStream(StreamAllocation.java:97)\n       at okhttp3.internal.http.HttpEngine.connect(HttpEngine.java:289)\n       at okhttp3.internal.http.HttpEngine.sendRequest(HttpEngine.java:241)\n       at okhttp3.RealCall.getResponse(RealCall.java:240)\n       at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)\n       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\n       at okhttp3.RealCall.access$100(RealCall.java:30)\n       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:127)\n       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:841)\n```\n", "url": "https://github.com/square/okhttp/issues/2409", "user": "hamberluo", "labels": ["bug"], "created": "2016-03-15 09:17:57", "closed": "2016-05-13 22:14:36", "commits": {"62d5764757a7eca47ea0c3dee62da5fee7220ea5": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a54adcef12753ffb131ab8c3fedcbe600fe10b2a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 59.000277777777775, "commitsDetails": [{"commitHash": "62d5764757a7eca47ea0c3dee62da5fee7220ea5", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a54adcef12753ffb131ab8c3fedcbe600fe10b2a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["276ef646cde0eb8a60d2746f2d5fabdd2a9a8f08"], "nameRev": "a54adcef12753ffb131ab8c3fedcbe600fe10b2a tags/parent-3.3.0~7^2", "commitMessage": "Don't crash when a stream hasn't been closed.\n\nCloses: https://github.com/square/okhttp/issues/2409\n", "commitDateTime": "2016-05-12 21:04:10", "authoredDateTime": "2016-05-12 21:03:47", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/ConnectionReuseTest.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "okhttp/src/main/java/okhttp3/RealCall.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionReuseTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.ConnectionReuseTest.connectionsAreNotReusedIfNetworkInterceptorInterferes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealCall.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RealCall.getResponse(okhttp3.Request,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a54adcef12753ffb131ab8c3fedcbe600fe10b2a"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 1.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.RealCall.getResponse(okhttp3.Request,boolean)"]}, {"title": "Use X509TrustManagerExtensions on Android 17+", "body": "We should use this instead of CertificateChainCleaner on Android 17+. It\u2019s more likely to work reliably as Android grows.\n\nIt\u2019s possible that our current approach will break on Android N, which [changes the way](https://android-review.googlesource.com/#/c/207611/) that certificate chains are constructed.\n\nWe\u2019ll need to keep the current implementation for Android API versions less than 17, and for desktop Java.\n", "url": "https://github.com/square/okhttp/issues/2407", "user": "swankjesse", "labels": ["bug"], "created": "2016-03-15 04:27:01", "closed": "2016-03-28 19:22:58", "commits": {"cbd3309c2f3d31b7f61fd733dedeaa1ff9507131": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "cbd3309c2f3d31b7f61fd733dedeaa1ff9507131", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["338ad7f826f3cd85e7bda50a1effa44392212e2e"], "nameRev": "cbd3309c2f3d31b7f61fd733dedeaa1ff9507131 tags/parent-3.3.0~30^2", "commitMessage": "Use X509TrustManagerExtensions on Android 17+.\n\nCloses: https://github.com/square/okhttp/issues/2407\n", "commitDateTime": "2016-03-28 14:56:42", "authoredDateTime": "2016-03-28 14:56:42", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CertificateChainCleanerTest.java", "insertions": 18, "deletions": 15, "lines": 33}, {"filePath": "okhttp/src/main/java/okhttp3/CertificatePinner.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/CertificateChainCleaner.java", "insertions": 48, "deletions": 4, "lines": 52}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/TrustRootIndex.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CertificateChainCleanerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificateChainCleanerTest.normalizeSingleSelfSignedCertificate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.normalizeUnknownSelfSignedCertificate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.orderedChainOfCertificatesWithRoot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.orderedChainOfCertificatesWithoutRoot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.unorderedChainOfCertificatesWithRoot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.unorderedChainOfCertificatesWithoutRoot()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.unrelatedCertificatesAreOmitted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.chainGoesAllTheWayToSelfSignedRoot()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.trustedRootNotSelfSigned()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.chainMaxLength()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificateChainCleanerTest.chainTooLong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificatePinner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificatePinner.check(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificateChainCleaner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.CertificateChainCleaner.AndroidCertificateChainCleaner", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.CertificateChainCleaner.clean(java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.CertificateChainCleaner.get(javax.net.ssl.X509TrustManager)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.tls.CertificateChainCleaner.BasicCertificateChainCleaner.clean(java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TrustRootIndex.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cbd3309c2f3d31b7f61fd733dedeaa1ff9507131"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 53, "deletions": 5, "lines": 58, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/internal/tls"], "changesInPackagesSPOON": ["okhttp3.internal.tls.CertificateChainCleaner.AndroidCertificateChainCleaner", "okhttp3.CertificatePinner.check(java.lang.String,java.util.List)", "okhttp3.internal.tls.CertificateChainCleaner.get(javax.net.ssl.X509TrustManager)", "okhttp3.internal.tls.CertificateChainCleaner.clean(java.util.List,java.lang.String)", "okhttp3.internal.tls.CertificateChainCleaner.BasicCertificateChainCleaner.clean(java.util.List,java.lang.String)"]}, {"title": "Default behaviour of retryOnConnectionFailure is dangerous for POST requests", "body": "Default behaviour of OkHttpClient.Builder to set `retryOnConnectionFailure` may result in POST requests being silently resent on network timeouts.\n\nWhile this may be typically alright for GET requests, POST/PATCH/DELETE requests modify data, and re-submitting them without knowing whether they have been received at the other end.\n", "url": "https://github.com/square/okhttp/issues/2394", "user": "ktchernov", "labels": ["bug"], "created": "2016-03-09 05:08:50", "closed": "2016-04-13 03:20:47", "commits": {"51e4e39842596ece3d0d2c327911a7702607cb3e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "51e4e39842596ece3d0d2c327911a7702607cb3e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["c9ad163e92fe252f23b743d694f68967a29eae7c"], "nameRev": "51e4e39842596ece3d0d2c327911a7702607cb3e tags/parent-3.3.0~24^2", "commitMessage": "Further constrain when we recover from failed routes.\n\nDon't recover if we encounter a read timeout after sending the request, but\ndo recover if we encounter a timeout building a connection.\n\nSee https://github.com/square/okhttp/issues/2394\n", "commitDateTime": "2016-04-12 22:37:04", "authoredDateTime": "2016-04-12 22:37:04", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 31, "deletions": 2, "lines": 33}, {"filePath": "okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/RealCall.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpEngine.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/StreamAllocation.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.connectTimeoutsAttemptsAlternateRoute()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.huc.HttpURLConnectionImpl.execute(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealCall.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RealCall.getResponse(okhttp3.Request,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpEngine.recover(java.io.IOException,boolean,okio.Sink)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.HttpEngine.recover(java.io.IOException,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamAllocation.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.StreamAllocation.recover(java.io.IOException,boolean,okio.Sink)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.isRecoverable(java.io.IOException,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.isRecoverable(java.io.IOException)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["51e4e39842596ece3d0d2c327911a7702607cb3e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 14, "lines": 28, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 13, "UPD": 0, "INS": 12, "MOV": 1, "DEL": 0, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http", "okhttp-urlconnection/src/main/java/okhttp3/internal/huc", "okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.internal.http.HttpEngine.recover(java.io.IOException,boolean)", "okhttp3.internal.http.HttpEngine.recover(java.io.IOException,boolean,okio.Sink)", "okhttp3.RealCall.getResponse(okhttp3.Request,boolean)", "okhttp3.internal.http.StreamAllocation.isRecoverable(java.io.IOException,boolean)", "okhttp3.internal.huc.HttpURLConnectionImpl.execute(boolean)", "okhttp3.internal.http.StreamAllocation.recover(java.io.IOException,boolean,okio.Sink)", "okhttp3.internal.http.StreamAllocation.isRecoverable(java.io.IOException)"]}, {"title": "ResponseBody is null when a WebSocket call fails (e.g. http 500)", "body": "We are using okhttp in https://github.com/fabric8io/kubernetes-client. \n\nIn some cases the websocket calls we create fail with http 500 + json message that contains a detailed description to the problem.\n\nUnfortunately, the response cannot be read from the Response body or message and we are left in the dark.\n\nTest Case to reproduce the problem: https://gist.github.com/iocanel/b3a9cb6d62e5aabe5426\n\nThanks\n", "url": "https://github.com/square/okhttp/issues/2368", "user": "iocanel", "labels": ["bug", "websockets"], "created": "2016-02-24 12:11:08", "closed": "2016-06-03 13:02:33", "commits": {}, "ttf": 100.00027777777778, "commitsDetails": []}, {"title": "Omit unreadable bodies from logging interceptor", "body": "It would be nice to only log the bodies of human readable content-types. With image heavy applications also using OkHttp as Picasso's downloader using Level.BODY produces lots of noise. \n\nContent-Type: image/jpeg\nContent-Length: 57634\nAccept-Ranges: bytes\nAccess-Control-Allow-Origin: *\nDate: Wed, 17 Feb 2016 15:14:45 GMT\nEtag: \"5c21b2b-e122-52b7fec4f1540\"\nLast-Modified: Thu, 11 Feb 2016 15:08:29 GMT\nServer: ECS (ord/269B)\nX-Cache: HIT\nOkHttp-Sent-Millis: 1455722085753\nOkHttp-Received-Millis: 1455722085767\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0010JFIF\ufffd\ufffd\u0001\u0001\u0001\ufffd\ufffdH\ufffd\ufffdH\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\u0002\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0001\u0001\u0002\u0002\u0002\u0002\u0002\u0004\u0003\u0002\u0002\u0002\u0002\u0005\u0004\u0004\u0003\u0004\u0006\u0005\u0006\u0006\u0006\u0005\u0006\u0006\u0006\u0007   \b\u0006\u0007 \u0007\u0006\u0006\b\u000b\b  \n\ufffd\ufffd\ufffd\ufffdC\u0001\u0002\u0002\u0002\u0002\u0002\u0002\u0005\u0003\u0003\u0005\n... etc x 1000\n\nIf this is something you all would be open to fixing I'd love to help :)\n", "url": "https://github.com/square/okhttp/issues/2351", "user": "alexrwegener", "labels": ["bug"], "created": "2016-02-18 19:46:46", "closed": "2016-03-04 02:56:55", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "IPv6 + HTTP proxy is missing `[` on HTTPS URLs", "body": "Both curl and Firefox include `[` and `]` in the request line and host header when using IPv6 with an HTTP proxy. OkHttp doesn\u2019t and this is broken.\n\n```\nCONNECT [::1]:443 HTTP/1.1\nHost: [::1]:443\nUser-Agent: curl/7.43.0\nProxy-Connection: Keep-Alive\n```\n\n```\nGET http://[::1]/foo HTTP/1.1\nHost: [::1]\nUser-Agent: curl/7.43.0\nAccept: */*\nProxy-Connection: Keep-Alive\n```\n\n```\nCONNECT [::1]:443 HTTP/1.1\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:43.0) Gecko/20100101 Firefox/43.0\nProxy-Connection: keep-alive\nConnection: keep-alive\nHost: [::1]:443\n```\n\n```\nGET http://[::1]/foo HTTP/1.1\nHost: [::1]\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:43.0) Gecko/20100101 Firefox/43.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\n```\n", "url": "https://github.com/square/okhttp/issues/2344", "user": "swankjesse", "labels": ["bug"], "created": "2016-02-15 15:26:26", "closed": "2016-02-22 05:19:44", "commits": {"4ce7d76c423fdc74db9c06a6da224c18b10dffab": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "7ceaa2387f0be853222f5a1496f1f743fa6f8c6d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "4ce7d76c423fdc74db9c06a6da224c18b10dffab", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7ceaa2387f0be853222f5a1496f1f743fa6f8c6d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["472329ecbb6ab2a16c1bd5fd4a7305bb1891da7f"], "nameRev": "7ceaa2387f0be853222f5a1496f1f743fa6f8c6d tags/parent-3.2.0~5^2", "commitMessage": "Make IPv6 request lines consistent with Firefox and Chrome.\n\nPreviously we omitted the square braces and explicit port on CONNECT requests\nand the square braces in the Host header.\n\nCloses https://github.com/square/okhttp/issues/2344\n", "commitDateTime": "2016-02-22 00:13:05", "authoredDateTime": "2016-02-21 22:48:54", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 34, "deletions": 1, "lines": 35}, {"filePath": "okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/HttpUrl.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "okhttp/src/main/java/okhttp3/internal/Util.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/Http2xStream.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/io/RealConnection.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.proxyConnectOmitsApplicationHeaders()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.ipv6HostHasSquareBraces()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrlTest.hostIPv6Builder()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.testConnectViaHttpProxyToHttps(okhttp3.URLConnectionTest$ProxyConfig)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.URLConnectionTest.connectViaHttpProxyToHttpsUsingBadProxyAndHttpResponseCache()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.URLConnectionTest.proxyConnectIncludesProxyHeadersOnly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrl.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrl.Builder.canonicalizeHost(java.lang.String,int,int)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.Util.hostHeader(okhttp3.HttpUrl,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.Util.hostHeader(okhttp3.HttpUrl)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "Http2xStream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.Http2xStream.spdy3HeadersList(okhttp3.Request)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http2xStream.http2HeadersList(okhttp3.Request)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpEngine.networkRequest(okhttp3.Request)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.io.RealConnection.createTunnel(int,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.io.RealConnection.createTunnelRequest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7ceaa2387f0be853222f5a1496f1f743fa6f8c6d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17.0, "deletions": 12.0, "lines": 29.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 19.0, "UPD": 1.0, "INS": 11.0, "MOV": 6.0, "DEL": 1.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http", "okhttp/src/main/java/okhttp3/internal", "okhttp/src/main/java/okhttp3/internal/io", "okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.internal.Util.hostHeader(okhttp3.HttpUrl)", "okhttp3.internal.Util.hostHeader(okhttp3.HttpUrl,boolean)", "okhttp3.HttpUrl.Builder.canonicalizeHost(java.lang.String,int,int)", "okhttp3.internal.http.HttpEngine.networkRequest(okhttp3.Request)", "okhttp3.internal.io.RealConnection.createTunnel(int,int)", "okhttp3.internal.http.Http2xStream.http2HeadersList(okhttp3.Request)", "okhttp3.internal.http.Http2xStream.spdy3HeadersList(okhttp3.Request)", "okhttp3.internal.io.RealConnection.createTunnelRequest()"]}, {"title": "Unable to extract the trust manager", "body": "Hi,\nafter upgrading from OkHttp 3.0.1 to 3.1.0 I get the following stack trace and crash after calling build() to create a OkHttpClient.\n\n```\njava.lang.IllegalStateException: Unable to extract the trust manager on okhttp3.internal.Platform$Android@1d8cf999, sslSocketFactory is class com.google.android.gms.org.conscrypt.KitKatPlatformOpenSSLSocketAdapterFactory\n                                                                        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:187)\n                                                                        at okhttp3.OkHttpClient.<init>(OkHttpClient.java:60)\n                                                                        at okhttp3.OkHttpClient$Builder.build(OkHttpClient.java:719)\n```\n\nThis issue was not present in 3.0.1.\n\nHere's where the crash happens:\n\n```\nOkHttpClient.Builder builder = new OkHttpClient.Builder()\n                    .connectTimeout(10, TimeUnit.SECONDS)\n                    .writeTimeout(10, TimeUnit.SECONDS)\n                    .readTimeout(30, TimeUnit.SECONDS);\n\n            OkHttpClient client = builder.build();\n```\n", "url": "https://github.com/square/okhttp/issues/2323", "user": "AlexLardschneider", "labels": ["bug"], "created": "2016-02-07 14:23:56", "closed": "2016-02-08 00:53:47", "commits": {"44a95fc32f11203e2e316a3685f92ac8ec3098cb": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "1094d74922d292d3d461c983946a5650dcb53c29": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "44a95fc32f11203e2e316a3685f92ac8ec3098cb", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["61b05581188ac5cc531af2f6b0cb628b011b3588"], "nameRev": "44a95fc32f11203e2e316a3685f92ac8ec3098cb tags/parent-3.1.1~1^2", "commitMessage": "Support the GMS security provider when searching for the trust manager.\n\nCloses https://github.com/square/okhttp/issues/2323\n", "commitDateTime": "2016-02-07 19:05:28", "authoredDateTime": "2016-02-07 19:05:25", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/internal/Platform.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Platform.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.Platform.Android.trustManager(javax.net.ssl.SSLSocketFactory)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1094d74922d292d3d461c983946a5650dcb53c29", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["cb7951aca766d6ddc59e06944c00ec091536d7e4"], "nameRev": "1094d74922d292d3d461c983946a5650dcb53c29 tags/parent-2.7.4~1^2", "commitMessage": "Support the GMS security provider when searching for the trust manager.\n\nCloses https://github.com/square/okhttp/issues/2323\n", "commitDateTime": "2016-02-07 21:51:45", "authoredDateTime": "2016-02-07 19:05:25", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Platform.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Platform.Android.trustManager(javax.net.ssl.SSLSocketFactory)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["44a95fc32f11203e2e316a3685f92ac8ec3098cb"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal"], "changesInPackagesSPOON": ["okhttp3.internal.Platform.Android.trustManager(javax.net.ssl.SSLSocketFactory)"]}, {"title": "Cache crashed, failed to delete file", "body": "I'm starting to see a lot of this exception in my app released with OkHttp 3.01 via Picasso 2.5.2 (using Jake's adapter from 3.01 to 2.5.2)\n\nFatal Exception: java.lang.RuntimeException: java.io.IOException: failed to delete /storage/emulated/0/Android/data/com.trixiesoft.clapp/cache/images/51d313bf28724ba47541b0ca45ac084f.0\n       at okhttp3.internal.DiskLruCache$1.run(DiskLruCache.java:178)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:841)\n\nCaused by java.io.IOException: failed to delete /storage/emulated/0/Android/data/com.trixiesoft.clapp/cache/images/51d313bf28724ba47541b0ca45ac084f.0\n       at okhttp3.internal.io.FileSystem$1.delete(FileSystem.java:70)\n       at okhttp3.internal.DiskLruCache.removeEntry(DiskLruCache.java:599)\n       at okhttp3.internal.DiskLruCache.trimToSize(DiskLruCache.java:656)\n       at okhttp3.internal.DiskLruCache.access$200(DiskLruCache.java:85)\n       at okhttp3.internal.DiskLruCache$1.run(DiskLruCache.java:172)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:841)\n", "url": "https://github.com/square/okhttp/issues/2318", "user": "KennyGoers", "labels": ["bug"], "created": "2016-02-06 14:57:58", "closed": "2016-03-05 15:25:31", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "SOCKS proxy not working on Android platform", "body": "SOCKS proxy is **completely** broken on Android. When I set up SOCKS proxy in my app, all requests failed, when I wrote an instrumentation test, I found even create a default okhttp instance with a SOCKS proxy, it fails.\n\nHere's the stack trace:\n\n```\njava.net.UnknownHostException: Host is unresolved: www.google.com\nat java.net.Socket.connect(Socket.java:867)\nat okhttp3.internal.Platform$Android.connectSocket(Platform.java:200)\nat okhttp3.internal.io.RealConnection.connectSocket(RealConnection.java:137)\nat okhttp3.internal.io.RealConnection.connect(RealConnection.java:108)\nat okhttp3.internal.http.StreamAllocation.findConnection(StreamAllocation.java:188)\nat okhttp3.internal.http.StreamAllocation.findHealthyConnection(StreamAllocation.java:127)\nat okhttp3.internal.http.StreamAllocation.newStream(StreamAllocation.java:97)\nat okhttp3.internal.http.HttpEngine.connect(HttpEngine.java:289)\nat okhttp3.internal.http.HttpEngine.sendRequest(HttpEngine.java:241)\nat okhttp3.RealCall.getResponse(RealCall.java:240)\nat okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)\nat okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\nat okhttp3.RealCall.execute(RealCall.java:57)\nat org.mariotaku.twidere.test.okhttp3.OkHttpClientTest.testSocksFunctionality(OkHttpClientTest.java:27)\nat java.lang.reflect.Method.invoke(Native Method)\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\nat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runners.Suite.runChild(Suite.java:128)\nat org.junit.runners.Suite.runChild(Suite.java:27)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\nat android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)\nat android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)\nat android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1879)\n```\n\nSample code:\n\n``` java\nimport org.junit.Test;\n\nimport java.net.InetSocketAddress;\nimport java.net.Proxy;\n\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\n\nimport static org.junit.Assert.assertTrue;\n\n/**\n * Created by mariotaku on 16/2/5.\n */\npublic class OkHttpClientTest {\n\n    @Test\n    public void testSocksFunctionality() throws Exception {\n        final Proxy proxy = new Proxy(Proxy.Type.SOCKS, InetSocketAddress.createUnresolved(\"127.0.0.1\", 1080));\n        final OkHttpClient client = new OkHttpClient.Builder()\n                .proxy(proxy)\n                .build();\n        final Request request = new Request.Builder()\n                .url(\"https://www.google.com/\")\n                .build();\n        assertTrue(client.newCall(request).execute().isSuccessful());\n    }\n\n}\n\n```\n", "url": "https://github.com/square/okhttp/issues/2315", "user": "mariotaku", "labels": ["bug"], "created": "2016-02-04 16:22:59", "closed": "2016-02-21 17:17:33", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "MockWebserver fails for empty body requests with \"Transfer-Encoding: chunked\" header", "body": "I'm using an HTTP client that sends a `\"Transfer-Encoding: chunked\"` HTTP request header for all requests, including with empty bodies. When testing that client with `MockWebServer`, I'm getting the following:\n\n```\nMockWebServer[54824] connection from /127.0.0.1 crashed\njava.lang.IllegalArgumentException: Request must not have a body: GET /pojos HTTP/1.1\n    at okhttp3.mockwebserver.MockWebServer.readRequest(MockWebServer.java:631)\n    at okhttp3.mockwebserver.MockWebServer.access$1500(MockWebServer.java:99)\n    at okhttp3.mockwebserver.MockWebServer$4.processOneRequest(MockWebServer.java:498)\n    at okhttp3.mockwebserver.MockWebServer$4.processConnection(MockWebServer.java:460)\n    at okhttp3.mockwebserver.MockWebServer$4.execute(MockWebServer.java:401)\n    at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:33)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nWhy is this enforced?\nIs there a strong reason or something in the HTTP spec that qualifies those requests as invalid?\nCould we relax that check if not necessary?\n", "url": "https://github.com/square/okhttp/issues/2309", "user": "bclozel", "labels": ["bug"], "created": "2016-02-03 15:37:52", "closed": "2020-03-29 17:28:15", "commits": {}, "ttf": 1516.0002777777777, "commitsDetails": []}, {"title": "Spdy3ConnectionTest.serverSendsSettingsToClient is flaky", "body": "From [Travis](https://api.travis-ci.org/jobs/106069151/log.txt?deansi=true):\n\n```\nTests run: 43, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.366 sec <<< FAILURE! - in okhttp3.internal.framed.Spdy3ConnectionTest\nserverSendsSettingsToClient(okhttp3.internal.framed.Spdy3ConnectionTest)  Time elapsed: 0.006 sec  <<< FAILURE!\njava.lang.AssertionError: expected:<10> but was:<0>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:743)\n    at org.junit.Assert.assertEquals(Assert.java:118)\n    at org.junit.Assert.assertEquals(Assert.java:555)\n    at org.junit.Assert.assertEquals(Assert.java:542)\n    at okhttp3.internal.framed.Spdy3ConnectionTest.serverSendsSettingsToClient(Spdy3ConnectionTest.java:290)\n```\n", "url": "https://github.com/square/okhttp/issues/2305", "user": "swankjesse", "labels": ["bug", "tests"], "created": "2016-01-31 19:21:38", "closed": "2016-07-09 21:27:48", "commits": {}, "ttf": 160.00027777777777, "commitsDetails": []}, {"title": "Listener failed to call close on message payload. okhttp-ws:3.0.1", "body": "This may be occurred when receive an message.\nTwo WebSocket is connected to server and they received same message.\n\nStacktrace is below.\n\n---\n\njava.lang.IllegalStateException: Listener failed to call close on message payload.\n        at okhttp3.internal.ws.WebSocketReader.readMessageFrame(WebSocketReader.java:244)\n        at okhttp3.internal.ws.WebSocketReader.processNextFrame(WebSocketReader.java:108)\n        at okhttp3.internal.ws.RealWebSocket.readMessage(RealWebSocket.java:97)\n        at okhttp3.ws.WebSocketCall.createWebSocket(WebSocketCall.java:152)\n        at okhttp3.ws.WebSocketCall.access$000(WebSocketCall.java:41)\n        at okhttp3.ws.WebSocketCall$1.onResponse(WebSocketCall.java:97)\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:133)\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:33)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n        at java.lang.Thread.run(Thread.java:818)\n", "url": "https://github.com/square/okhttp/issues/2303", "user": "whylee259", "labels": ["bug", "websockets"], "created": "2016-01-31 10:34:54", "closed": "2016-02-23 13:58:26", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "StackOverflowError when add a networkInterceptors", "body": "java.lang.StackOverflowError\n    at java.lang.ThreadLocal.get(ThreadLocal.java:53)\n    at dalvik.system.BlockGuard.getThreadPolicy(BlockGuard.java:140)\n    at libcore.io.BlockGuardOs.recvfrom(BlockGuardOs.java:163)\n    at libcore.io.IoBridge.recvfrom(IoBridge.java:513)\n    at java.net.PlainSocketImpl.read(PlainSocketImpl.java:488)\n    at java.net.PlainSocketImpl.access$000(PlainSocketImpl.java:46)\n    at java.net.PlainSocketImpl$PlainSocketInputStream.read(PlainSocketImpl.java:240)\n    at okio.Okio$2.read(Okio.java:139)\n    at okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\n    at okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\n    at okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\n    at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\n    at com.squareup.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\n    at com.squareup.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:79)\n    at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:909)\n    at com.squareup.okhttp.internal.http.HttpEngine.access$300(HttpEngine.java:93)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:894)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.library_http.RequestInterceptor.intercept(RequestInterceptor.java:27)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:867)\n    at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:748)\n    at com.squareup.okhttp.Call.getResponse(Call.java:277)\n    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:234)\n    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:196)\n    at com.squareup.okhttp.Call.access$100(Call.java:34)\n    at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:162)\n    at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n    at java.lang.Thread.run(Thread.java:856)\n\nthe method in the HttpEngine  and the RequestInterceptor  chain.proceed() call each other\n\ni add interceptor below this \n\n`mOkHttpClient.networkInterceptors().add(new RequestInterceptor(ctx));`\n\nthis is the code of interceptor\n`public class RequestInterceptor implements Interceptor {\n    private Context mCtx;\n\n```\npublic RequestInterceptor(Context ctx) {\n    mCtx = ctx;\n}\n\n@Override\npublic Response intercept(Chain chain) throws IOException {\n    Request originalRequest = chain.request();\n    if (originalRequest.body() == null) {\n        return chain.proceed(originalRequest);\n    }\n    String url = originalRequest.urlString();\n    if (!url.contains(\"distinctRequestId=\")) {\n        String requestId = OkHttpClientManager.getDistinctRequestId();\n        if (url.contains(\"?\")) {\n            url = originalRequest.urlString() + \"&distinctRequestId=\" + requestId;\n        } else {\n            url = originalRequest.urlString() + \"?distinctRequestId=\" + requestId;\n        }\n        url = url + \"&p=\" + PreferenceUtils.getRequestId(mCtx) + \"&span=\" + PreferenceUtils.getConnectTime(mCtx);\n        PreferenceUtils.setRequestId(mCtx, requestId);\n        Request compressedRequest = originalRequest.newBuilder()\n                .url(url)\n                .build();\n        return chain.proceed(compressedRequest);\n    }\n    return chain.proceed(originalRequest);\n}\n```\n\n}\n`\n", "url": "https://github.com/square/okhttp/issues/2300", "user": "guobao90", "labels": ["bug", "needs info"], "created": "2016-01-30 06:37:10", "closed": "2016-04-13 03:23:03", "commits": {}, "ttf": 73.00027777777778, "commitsDetails": []}, {"title": "Network interceptor connection() might be null", "body": "For example, if looking up the connection after a request is completed, and it has both `Connection: close` and an empty response body.\n\nSee https://github.com/facebook/stetho/issues/346\n", "url": "https://github.com/square/okhttp/issues/2288", "user": "swankjesse", "labels": ["bug"], "created": "2016-01-27 23:29:56", "closed": "2016-04-17 00:59:32", "commits": {}, "ttf": 80.00027777777778, "commitsDetails": []}, {"title": "Untraceable fatal Exception caused by java.lang.IllegalArgumentException: byteString == null", "body": "Originally in Retrofit issues, Jake told me to post this here:\n\nFrom time to time I am experiencing this fatal error when performing a request. It only happens to one request at a time and I cannot get it to go away until I uninstall and reinstall the application. I am using:\ncom.squareup.retrofit2:retrofit:2.0.0-beta3\n\nand here is the error:\n\n```\nE/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher \n    Process: package_name, PID: 4804 \n    java.lang.IllegalArgumentException: byteString == null \n    at okio.Buffer.write(Buffer.java:787)\n    at com.squareup.okhttp.Cache$Entry.readCertificateList(Cache.java:628)\n    at com.squareup.okhttp.Cache$Entry.<init>(Cache.java:555)\n    at com.squareup.okhttp.Cache.get(Cache.java:194)\n    at com.squareup.okhttp.Cache$1.get(Cache.java:139)\n    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:226) \n    at com.squareup.okhttp.Call.getResponse(Call.java:267) \n    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:224) \n    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:195) \n    at com.squareup.okhttp.Call.access$100(Call.java:34) \n    at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:162) \n    at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33) \n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n    at java.lang.Thread.run(Thread.java:818)\n```\n\nLet me know if you need more information\n\nEDIT: I was able to get the error to stop if I went to system setting and cleared the app cache manually\n", "url": "https://github.com/square/okhttp/issues/2281", "user": "marcusmotill", "labels": ["bug", "needs info"], "created": "2016-01-26 00:45:44", "closed": "2016-02-22 02:43:47", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "[Websocket] Configure frame size to avoid payload splitting.", "body": "Before version 2.5 of okhttp-ws, client was passing a **Buffer** and it was sent as specified by the client.\n\nOn version 2.6, the implementation migrated to use **RequestBody** and **ResponseBody**. By doing this all payload sent to server are truncated at 2048 (size of the **Segment**). If the payload is bigger than 2048, then the implementation sends the remaining data as a continuation frame.\n\nAccording to [RFC](https://tools.ietf.org/html/rfc6455#page-27), there is nothing wrong by splitting the payload into multiple frames.\n\nBut in my opinion this splitting is unnecessary and it should have an option to define the max desired frame size to avoid splitting.\n", "url": "https://github.com/square/okhttp/issues/2270", "user": "rdtorres", "labels": ["bug", "websockets"], "created": "2016-01-21 20:51:24", "closed": "2016-02-05 22:33:27", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "NPE when logging-interceptor:3.0.1with okhttp-ws:3.0.1 ", "body": "I'm using okhttp-ws and logging-interceptor is added to okhttp client.\n\nI think NPE is caused because `response.body()` returns alway null.\n\n```\n01-20 14:28:45.033 12757-12904/? E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher\n  java.lang.NullPointerException\n    at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:207)\n    at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:187)\n    at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)\n    at okhttp3.RealCall.access$100(RealCall.java:30)\n    at okhttp3.RealCall$AsyncCall.execute(RealCall.java:127)\n    at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:33)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n    at java.lang.Thread.run(Thread.java:841)\n```\n", "url": "https://github.com/square/okhttp/issues/2264", "user": "whylee259", "labels": ["bug", "websockets"], "created": "2016-01-20 05:34:46", "closed": "2016-09-18 00:56:21", "commits": {}, "ttf": 241.00027777777777, "commitsDetails": []}, {"title": "TLS v1.2 is not working on KitKat.", "body": "If one is trying to use a slightly stricter ConnectionSpec than `MODERN_TLS` by limiting TLS to only v1.2 then OkHttp doesn't work on Android KitKat. Even though this version of Android does support TLS v1.2 (https://developer.android.com/reference/javax/net/ssl/SSLSocket.html).\n\nExample: \n\nOkHttpClient will fail to establish connection on KitKat using this spec:\n\n```\n new ConnectionSpec.Builder(ConnectionSpec.MODERN_TLS)\n      .tlsVersions(TlsVersion.TLS_1_2)\n      .build();\n```\n\nThe underlying problem is that `ConnectionSpec` is checking if `SSLSocket.getEnabledProtocols()` contains TLS v1.2 before actually calling `setEnabledProtocols()` with TLS v1.2. Instead it should check if `SSLSocket` supports TLS v1.2 and then enable this protocol if so. \n\nIt looks like replacing `getEnabledProtocols()` with `getSupportedProtocols()` in `ConnectionSpec.isCompatible()` and `ConnectionSpec.supportedSpec()` can fix it. \n", "url": "https://github.com/square/okhttp/issues/2259", "user": "inazaruk", "labels": ["bug"], "created": "2016-01-18 08:47:53", "closed": "2016-02-22 02:41:08", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Response protocol is not returning HTTP 2 for http 2 endpoint", "body": "``` java\npublic class Http2Test {\n\n    @Test\n    public void isHttp2Transport() throws IOException {\n        HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\n        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\n\n        OkHttpClient okHttpClient = new OkHttpClient.Builder()\n                .addInterceptor(loggingInterceptor)\n                .build();\n\n        Request request = new Request.Builder()\n                .url(\"http://twitter.com\")\n                .build();\n\n        Response response = okHttpClient.newCall(request).execute();\n\n        Protocol protocol = response.protocol();\n\n        assertEquals(Protocol.HTTP_2, protocol);\n    }\n}\n```\n\njunit.framework.AssertionFailedError: \nExpected :h2\nActual   :http/1.1\n", "url": "https://github.com/square/okhttp/issues/2236", "user": "lexer", "labels": ["bug", "needs info"], "created": "2016-01-14 00:15:46", "closed": "2016-01-15 01:29:13", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "I am getting repeated requests in my network interceptor and there is a stackoverflow due to it", "body": "There is a scenario which is occuring. Suppose there are 4 requests A,B,C,D in ascending order of time of request. I have implemented a network interceptor which adds cache header to the request. Now suppose requests A,B have been executed. Now when request C is executed and control comes in the network interceptor, then I can see requests A and B as well along with C. Why is such a thing happening?\n\nFatal Exception: java.lang.StackOverflowError\n       at java.lang.Thread.currentThread(Thread.java:470)\n       at java.lang.ThreadLocal.get(ThreadLocal.java:53)\n       at dalvik.system.BlockGuard.getThreadPolicy(BlockGuard.java:139)\n       at libcore.io.BlockGuardOs.recvfrom(BlockGuardOs.java:163)\n       at libcore.io.IoBridge.recvfrom(IoBridge.java:506)\n       at java.net.PlainSocketImpl.read(PlainSocketImpl.java:489)\n       at java.net.PlainSocketImpl.access$000(PlainSocketImpl.java:46)\n       at java.net.PlainSocketImpl$PlainSocketInputStream.read(PlainSocketImpl.java:241)\n       at okio.Okio$2.read(Okio.java:139)\n       at okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\n       at okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\n       at okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\n       at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\n       at com.squareup.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\n       at com.squareup.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:80)\n       at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:906)\n       at com.squareup.okhttp.internal.http.HttpEngine.access$300(HttpEngine.java:92)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:891)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at app.viaindia.ViaOkHttpClient$1.intercept(ViaOkHttpClient.java:81)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:868)\n       at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:749)\n       at com.squareup.okhttp.Call.getResponse(Call.java:268)\n       at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:224)\n       at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:195)\n       at com.squareup.okhttp.Call.access$100(Call.java:34)\n       at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:162)\n       at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:841)\n", "url": "https://github.com/square/okhttp/issues/2233", "user": "mohan-mishra", "labels": ["bug", "needs info"], "created": "2016-01-13 10:59:52", "closed": "2016-04-07 04:08:14", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "java.io.IOException: stream was reset: CANCEL and PROTOCOL_ERROR", "body": "I am using okhttp to connect to google OAuth server (https://accounts.google.com/o/oauth2/token). I am occasionally getting \"stream was reset\" error. I was using org.apache library earlier and never faced this issue before. First I am getting \"stream was reset: CANCEL\" and on retry \"stream was reset: PROTOCOL_ERROR\". On retrying after some time the connection works fine.\n\njava.io.IOException: stream was reset: CANCEL\n    at com.squareup.okhttp.internal.framed.FramedStream.getResponseHeaders(FramedStream.java:146)\n    at com.squareup.okhttp.internal.http.FramedTransport.readResponseHeaders(FramedTransport.java:141)\n    at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:909)\n    at com.squareup.okhttp.internal.http.HttpEngine.access$300(HttpEngine.java:93)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:894)\n    at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:748)\n    at com.squareup.okhttp.Call.getResponse(Call.java:277)\n    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:234)\n    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:196)\n    at com.squareup.okhttp.Call.execute(Call.java:79)\n\nand later-on on retry\n\njava.io.IOException: stream was reset: PROTOCOL_ERROR\n    at com.squareup.okhttp.internal.framed.FramedStream.getResponseHeaders(FramedStream.java:146)\n    at com.squareup.okhttp.internal.http.FramedTransport.readResponseHeaders(FramedTransport.java:141)\n    at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:909)\n    at com.squareup.okhttp.internal.http.HttpEngine.access$300(HttpEngine.java:93)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:894)\n    at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:748)\n    at com.squareup.okhttp.Call.getResponse(Call.java:277)\n    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:234)\n    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:196)\n    at com.squareup.okhttp.Call.execute(Call.java:79)\n", "url": "https://github.com/square/okhttp/issues/2204", "user": "sreekumarr84", "labels": ["bug"], "created": "2016-01-06 10:15:59", "closed": "2016-05-08 15:38:37", "commits": {}, "ttf": 123.00027777777778, "commitsDetails": []}, {"title": "`JavaNetCookieJar` parses cookies incorrectly", "body": "After debugged several times I found:\nhttps://github.com/square/okhttp/blob/7f4ce6fdd75d142819d612196dd45aff0795d682/okhttp-urlconnection/src/main/java/okhttp3/JavaNetCookieJar.java#L87\n\n```\n/**\n * Convert a request header to OkHttp's cookies via {@link HttpCookie}. That extra step handles\n * multiple cookies in a single request header, which {@link Cookie#parse} doesn't support.\n */\nprivate List<Cookie> decodeHeaderAsJavaNetCookies(HttpUrl url, String header) {\n   List<HttpCookie> javaNetCookies;\n  try {\n    javaNetCookies = HttpCookie.parse(header);\n...\n```\n\nmisuses [`HttpCookie.parse(String)`](http://developer.android.com/reference/java/net/HttpCookie.html#parse%28java.lang.String%29).\n\n```\npublic static List<HttpCookie> parse (String header)\n\nConstructs a cookie from a string. The string should comply with set-cookie\nor set-cookie2 header format as specified in RFC 2965. Since set-cookies2\nsyntax allows more than one cookie definitions in one header, the returned\nobject is a list.\n```\n\nCurrent the header string was composed of several cookies which can't be parse with `HttpCookie.parse(String)`.\n`decodeHeaderAsJavaNetCookies(HttpUrl, String)`'s doc comment details the same thing.\n\nEdit: details more about this issue.\n", "url": "https://github.com/square/okhttp/issues/2202", "user": "floating-cat", "labels": ["bug"], "created": "2016-01-06 08:15:49", "closed": "2016-01-13 22:02:08", "commits": {"1df1330b69f685d9287dfd857e6109738e911fb9": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "58c7f73704b4e8ccb3aeb98466a07e2aa2313d44": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "fb29c8840c5844818ea862e4b9ba93b5f9d65873": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "b0ad667faf7f61b55840461f94eab03bdf0af7ef": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ed43e07ffb3bb95708fe9840cf9fc2f523b2f1e5": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "87e905170f6b293edfbf40b010ee11fdf7e7b32a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "1df1330b69f685d9287dfd857e6109738e911fb9", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "58c7f73704b4e8ccb3aeb98466a07e2aa2313d44", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fb29c8840c5844818ea862e4b9ba93b5f9d65873", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b0ad667faf7f61b55840461f94eab03bdf0af7ef", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ed43e07ffb3bb95708fe9840cf9fc2f523b2f1e5", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["bc7d110990a91efd27a33b9fe52db33f55d44eca"], "nameRev": "ed43e07ffb3bb95708fe9840cf9fc2f523b2f1e5 tags/parent-3.0.0~2^2", "commitMessage": "Parse the CookieHandler request cookies in JavaNetCookieJar.\n\nThis brings the tests to all pass on Android.\n\nCloses: https://github.com/square/okhttp/issues/2202\n", "commitDateTime": "2016-01-13 13:48:38", "authoredDateTime": "2016-01-13 13:47:43", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http/CookiesTest.java", "insertions": 42, "deletions": 10, "lines": 52}, {"filePath": "okhttp-urlconnection/src/main/java/okhttp3/JavaNetCookieJar.java", "insertions": 20, "deletions": 11, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookiesTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.CookiesTest.testSendingCookiesFromStore()", "TOT": 14, "UPD": 7, "INS": 1, "MOV": 3, "DEL": 3}, {"spoonMethodName": "okhttp3.internal.http.CookiesTest.testRedirectsDoNotIncludeTooManyCookies()", "TOT": 12, "UPD": 4, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "okhttp3.internal.http.CookiesTest.testCookiesSentIgnoresCase()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.CookiesTest.testCookiesSentIgnoresCase().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.CookiesTest.cookieHandlerLikeAndroid()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JavaNetCookieJar.java", "spoonMethods": [{"spoonMethodName": "okhttp3.JavaNetCookieJar.decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String)", "TOT": 28, "UPD": 8, "INS": 3, "MOV": 10, "DEL": 7}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "87e905170f6b293edfbf40b010ee11fdf7e7b32a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["bc7d110990a91efd27a33b9fe52db33f55d44eca"], "nameRev": "87e905170f6b293edfbf40b010ee11fdf7e7b32a tags/parent-3.0.0~1^2", "commitMessage": "Test that JavaNetCookieJar can handle multiple cookies.\n\nSee https://github.com/square/okhttp/issues/2202\n", "commitDateTime": "2016-01-13 14:04:00", "authoredDateTime": "2016-01-06 21:31:50", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http/CookiesTest.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookiesTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.CookiesTest.receiveAndSendMultipleCookies()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ed43e07ffb3bb95708fe9840cf9fc2f523b2f1e5", "87e905170f6b293edfbf40b010ee11fdf7e7b32a"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20.0, "deletions": 11.0, "lines": 31.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 28.0, "UPD": 8.0, "INS": 3.0, "MOV": 10.0, "DEL": 7.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-urlconnection/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.JavaNetCookieJar.decodeHeaderAsJavaNetCookies(okhttp3.HttpUrl,java.lang.String)"]}, {"title": "Leak in Gson-streaming recipe example", "body": "It looks like the `Reader` is not closed in the [Gson streaming example](https://github.com/square/okhttp/wiki/Recipes#parse-a-json-response-with-gson).\n\n``` java\nGist gist = gson.fromJson(response.body().charStream(), Gist.class);\n```\n\nSuggested fix:\n\n``` java\ntry (final Reader json = response.body().charStream()) {\n    Gist gist = gson.fromJson(json, Gist.class);\n}\n```\n", "url": "https://github.com/square/okhttp/issues/2199", "user": "GrahamBorland", "labels": ["bug"], "created": "2016-01-05 10:25:31", "closed": "2016-01-16 23:54:56", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "IllegalStateException: released", "body": "java.lang.IllegalStateException: released\n\nI'm getting this sporadically during long monkey test runs, we do lots of connection cancellation during these runs, so could be related to that maybe? Any insight into what might lead to this? The stack is entirely inside OkHttp code so not much to go on here.\n\n`\n// java.lang.IllegalStateException: released\n//  at com.squareup.okhttp.internal.http.StreamAllocation.findConnection(StreamAllocation.java:142)\n//  at com.squareup.okhttp.internal.http.StreamAllocation.findHealthyConnection(StreamAllocation.java:126)\n//  at com.squareup.okhttp.internal.http.StreamAllocation.newStream(StreamAllocation.java:95)\n//  at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:283)\n//  at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:224)\n//  at com.squareup.okhttp.Call.getResponse(Call.java:286)\n//  at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:243)\n//  at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:205)\n//  at com.squareup.okhttp.Call.access$100(Call.java:35)\n//  at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:171)\n//  at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n//  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\n//  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\n//  at java.lang.Thread.run(Thread.java:856)\n`\n", "url": "https://github.com/square/okhttp/issues/2198", "user": "Wavesonics", "labels": ["bug"], "created": "2016-01-04 23:46:12", "closed": "2016-01-07 02:59:17", "commits": {"3759531b035ac46c8048c2fee273e0f9b5cfd751": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "61dac0fb5aeb4447972e9c324d4ffdbdf0068a09": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "3759531b035ac46c8048c2fee273e0f9b5cfd751", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["909544ba3d19792ca8d408e3ab40de9264b78c1c"], "nameRev": "3759531b035ac46c8048c2fee273e0f9b5cfd751 tags/parent-3.0.0~11^2", "commitMessage": "Don't eagerly release pools on cache hits.\n\nWe might still need them to handle a redirect.\n\nCloses: https://github.com/square/okhttp/issues/2198\n", "commitDateTime": "2016-01-06 21:52:05", "authoredDateTime": "2016-01-06 21:52:05", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CacheTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpEngine.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.cachedRedirect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpEngine.sendRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "61dac0fb5aeb4447972e9c324d4ffdbdf0068a09", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["a62836f2dae09cff3b1ecd75ede6aeb376fb5b99"], "nameRev": "61dac0fb5aeb4447972e9c324d4ffdbdf0068a09 tags/parent-2.7.2~2", "commitMessage": "Don't eagerly release pools on cache hits.\n\nWe might still need them to handle a redirect.\n\nCloses: https://github.com/square/okhttp/issues/2198\n", "commitDateTime": "2016-01-08 00:22:02", "authoredDateTime": "2016-01-06 21:52:05", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CacheTest.cachedRedirect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.sendRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3759531b035ac46c8048c2fee273e0f9b5cfd751"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 2, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http"], "changesInPackagesSPOON": ["okhttp3.internal.http.HttpEngine.sendRequest()"]}, {"title": "URLConnectionTest.sameConnectionRedirectAndReuse() shouldn't require IP fallback", "body": "Seems like the second request should be made on a reused connection, and therefore when it fails the same IP address is tried immediately. Might be an issue with RouteSelector.\n", "url": "https://github.com/square/okhttp/issues/2178", "user": "swankjesse", "labels": ["bug"], "created": "2015-12-31 08:40:03", "closed": "2016-07-12 02:44:11", "commits": {"bf40d52edbb88d5afaa35af24837e3b72ac84eab": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 193.00027777777777, "commitsDetails": [{"commitHash": "bf40d52edbb88d5afaa35af24837e3b72ac84eab", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["8510d646bdb97321dcc7206d8e42b8179810396d"], "nameRev": "bf40d52edbb88d5afaa35af24837e3b72ac84eab tags/parent-3.5.0~80^2", "commitMessage": "Fix a test to not require a fallback IP address.\n\nThis might be an unexpected upside of the migration to the Call API.\n\nCloses: https://github.com/square/okhttp/issues/2178\n", "commitDateTime": "2016-07-11 22:32:51", "authoredDateTime": "2016-07-11 22:32:51", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.sameConnectionRedirectAndReuse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bf40d52edbb88d5afaa35af24837e3b72ac84eab"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Multipart should not add \"Content-Length\"", "body": "I found following request will cause server error\n**The body of your POST request is not well-formed multipart/form-data**\n\n```\n--be1563be-4245-4ac5-8a95-498ba5b57ba8\ncontent-disposition: form-data; name=\"name\"\nContent-Length: 22\n\nic_menu_white_24dp.png\n...\n--d4653e4a-9a5d-42e5-8a49-fcafbe9c673c\ncontent-disposition: form-data; name=\"file\"; filename=\"ic_menu_white_24dp.png\"\nContent-Type: image/png\nContent-Length: 92\n```\n\nIn [okhttp code](https://github.com/square/okhttp/blob/master/okhttp/src/main/java/okhttp3/MultipartBody.java#L160),\n\n``` java\n     long contentLength = body.contentLength();\n      if (contentLength != -1) {\n        sink.writeUtf8(\"Content-Length: \")\n            .writeDecimalLong(contentLength)\n            .write(CRLF);\n      } else if (countBytes) {\n        // We can't measure the body's size without the sizes of its components.\n        byteCountBuffer.clear();\n        return -1L;\n      }\n```\n\nAnd I google the [rfc1867](https://www.ietf.org/rfc/rfc1867.txt), in the document, there is not description for adding \"Content-Length\", so maybe it is a bug for okhttp.\n", "url": "https://github.com/square/okhttp/issues/2138", "user": "TanTan-TT", "labels": ["bug"], "created": "2015-12-21 02:06:07", "closed": "2016-02-22 02:44:50", "commits": {}, "ttf": 63.000277777777775, "commitsDetails": []}, {"title": "Unexpected read timeout while request is still being sent", "body": "Have been running into this a lot lately with Retrofit 1.9.0 and OkHttp 2.5.0.\nWhile doing a PUT/POST request with a large request body, a \"SocketException: socket is closed\" is thrown from the native socket implementation. This seems to happen after a time determined by the configured OkHttp read timeout setting.\n\nI would have expected the read timeout setting to mean the maximum time that is allowed to pass between the client having sent the entire request and the server sending the first response byte, or between response bytes sent by the server.\nInstead it appears that the read timeout starts immediately and can be triggered while the client is still actively sending the request, at which point the server should not really have been expected to send a single byte yet.\n\nSetting a huge read timeout (globally or for each request) is an ugly hack that does avoid the problem, but obviously that results in unexpectedly long timeouts in cases where the request was small and the server actually takes a long time to respond.\n", "url": "https://github.com/square/okhttp/issues/2122", "user": "MarkusMattinen", "labels": ["bug"], "created": "2015-12-16 14:43:29", "closed": "2016-05-08 15:41:30", "commits": {}, "ttf": 144.00027777777777, "commitsDetails": []}, {"title": "Crash during journal file rename", "body": "Get this crash from one of the users\n\nDevice: Samsung Galaxy Note 4\nRetrofit: v1.9\nokhttp: v2.6.0\n\n```\nFatal Exception: java.lang.RuntimeException: java.io.IOException: failed to rename /data/data/com.bandlab.bandlab/cache/journal.tmp to /data/data/com.bandlab.bandlab/cache/journal\n       at com.squareup.okhttp.internal.DiskLruCache$1.run(DiskLruCache.java:181)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:818)\nCaused by java.io.IOException: failed to rename /data/data/com.bandlab.bandlab/cache/journal.tmp to /data/data/com.bandlab.bandlab/cache/journal\n       at com.squareup.okhttp.internal.io.FileSystem$1.rename(FileSystem.java:85)\n       at com.squareup.okhttp.internal.DiskLruCache.rebuildJournal(DiskLruCache.java:409)\n       at com.squareup.okhttp.internal.DiskLruCache.access$400(DiskLruCache.java:88)\n       at com.squareup.okhttp.internal.DiskLruCache$1.run(DiskLruCache.java:177)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/square/okhttp/issues/2119", "user": "stepango", "labels": ["bug"], "created": "2015-12-16 08:45:33", "closed": "2016-05-08 15:42:20", "commits": {}, "ttf": 144.00027777777777, "commitsDetails": []}, {"title": "Better behavior converting malformed percent escapes", "body": "Rather than throwing an exception when converting `http://host/%xx` to a java.net.URI, OkHttp should just convert it to `http://host/%25xx` which is a reasonable alternative.\n", "url": "https://github.com/square/okhttp/issues/2116", "user": "swankjesse", "labels": ["bug"], "created": "2015-12-16 02:32:30", "closed": "2015-12-23 03:15:58", "commits": {"d77edcc8905148f18a691be180c4f8f366a5ee1b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "d77edcc8905148f18a691be180c4f8f366a5ee1b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["89f5a43b33fa049955969fbf5e04695fd43765e1"], "nameRev": "d77edcc8905148f18a691be180c4f8f366a5ee1b tags/parent-3.0.0-RC1~26^2", "commitMessage": "Never throw converting an HttpUrl to a java.net.URI.\n\nJust do arbitrary amounts of transformation. Sigh.\n\nCloses https://github.com/square/okhttp/issues/2116\n", "commitDateTime": "2015-12-22 21:19:11", "authoredDateTime": "2015-12-22 21:19:11", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/HttpUrlTest.java", "insertions": 41, "deletions": 19, "lines": 60}, {"filePath": "okhttp/src/main/java/okhttp3/FormBody.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "okhttp/src/main/java/okhttp3/HttpUrl.java", "insertions": 68, "deletions": 45, "lines": 113}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrlTest.toUriWithMalformedPercentEscape()", "TOT": 17, "UPD": 7, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "okhttp3.HttpUrlTest.fragmentNonAsciiThatOffendsJavaNetUri()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.HttpUrlTest.toUriWithControlCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.toUriWithNonHexPercentEscape()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.toUriWithTruncatedPercentEscape()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrlTest.toUriWithSpaceCharacters()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FormBody.java", "spoonMethods": [{"spoonMethodName": "okhttp3.FormBody.Builder.add(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.FormBody.Builder.addEncoded(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrl.java", "spoonMethods": [{"spoonMethodName": "okhttp3.HttpUrl.uri()", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "okhttp3.HttpUrl.percentEncoded(java.lang.String,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.username(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.encodedUsername(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.password(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.encodedPassword(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.setPathSegment(int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.setEncodedPathSegment(int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.addQueryParameter(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.addEncodedQueryParameter(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.removeAllQueryParameters(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.removeAllEncodedQueryParameters(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.push(java.lang.String,int,int,boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.fragment(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.encodedFragment(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.reencodeForUri()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.parsePort(java.lang.String,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.query(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.encodedQuery(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.Builder.parse(okhttp3.HttpUrl,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "okhttp3.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d77edcc8905148f18a691be180c4f8f366a5ee1b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 72, "deletions": 49, "lines": 121, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 60, "UPD": 1, "INS": 44, "MOV": 14, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 27}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3"], "changesInPackagesSPOON": ["okhttp3.HttpUrl.percentEncoded(java.lang.String,int,int)", "okhttp3.HttpUrl.Builder.removeAllEncodedQueryParameters(java.lang.String)", "okhttp3.HttpUrl.canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)", "okhttp3.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)", "okhttp3.HttpUrl.Builder.query(java.lang.String)", "okhttp3.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean)", "okhttp3.FormBody.Builder.addEncoded(java.lang.String,java.lang.String)", "okhttp3.HttpUrl.Builder.encodedUsername(java.lang.String)", "okhttp3.HttpUrl.Builder.parse(okhttp3.HttpUrl,java.lang.String)", "okhttp3.HttpUrl.Builder.encodedPassword(java.lang.String)", "okhttp3.HttpUrl.Builder.parsePort(java.lang.String,int,int)", "okhttp3.HttpUrl.Builder.username(java.lang.String)", "okhttp3.HttpUrl.Builder.reencodeForUri()", "okhttp3.HttpUrl.Builder.setEncodedPathSegment(int,java.lang.String)", "okhttp3.HttpUrl.uri()", "okhttp3.HttpUrl.Builder.password(java.lang.String)", "okhttp3.HttpUrl.Builder.encodedFragment(java.lang.String)", "okhttp3.HttpUrl.Builder.addEncodedQueryParameter(java.lang.String,java.lang.String)", "okhttp3.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "okhttp3.HttpUrl.Builder.setPathSegment(int,java.lang.String)", "okhttp3.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "okhttp3.HttpUrl.Builder.removeAllQueryParameters(java.lang.String)", "okhttp3.HttpUrl.Builder.encodedQuery(java.lang.String)", "okhttp3.HttpUrl.Builder.fragment(java.lang.String)", "okhttp3.HttpUrl.Builder.addQueryParameter(java.lang.String,java.lang.String)", "okhttp3.HttpUrl.Builder.push(java.lang.String,int,int,boolean,boolean)", "okhttp3.FormBody.Builder.add(java.lang.String,java.lang.String)"]}, {"title": "connectSocket() timeout is extremely unreliable and can leave dials in zombie state", "body": "OkHttp v2.6 + Android 4/5/6 + Http 2/TLS + Port 443\n\nWe are observing zombie like states on all android versions, but more repeatable with Samsung devices for:\n\n``` java\n Platform.get().connectSocket(socket, route.getSocketAddress(), connectTimeout);\n```\n\nWhere the connectTimeout is absolutely ignored and the execution is just stuck there for eternity. This maybe due to China's GFW as we are doing testing behind this.\n\nWe know that GFW plays havoc with tls/ssl connections and randomly drops or leave tcp/tls/ssl conns in zombie states so this may play a part. \n\nBut regardless, android/java side is not also respecting the timeouts as well to detect this broken/zombie dials.\n\nWe are currently bypassing this issue with a thread for timer, a thread for actual dialing, and lock for blocking the main execution path until first thread exists. \n", "url": "https://github.com/square/okhttp/issues/2079", "user": "diegomontoya", "labels": ["bug"], "created": "2015-12-09 14:01:35", "closed": "2016-07-04 03:50:13", "commits": {}, "ttf": 207.00027777777777, "commitsDetails": []}, {"title": "ConnectionPool should complain about leaked connections", "body": "We need to do some reference magic to make it work, but it's worth doing.\n", "url": "https://github.com/square/okhttp/issues/2073", "user": "swankjesse", "labels": ["bug"], "created": "2015-12-08 04:27:31", "closed": "2015-12-10 00:49:09", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Redirect 302 IllegalArgumentException without workaround java.lang.IllegalArgumentException: Unexpected char 0xf6 at 53 in header value", "body": "So say I'm looking for a random reddit post via something like:\nhttps://www.reddit.com/r/EarthPorn/random/.json\n\nAnd I get a 302 redirect to something like:\n https://www.reddit.com/r/EarthPorn/comments/3viwq1/mj\u00f6lkeviken_sweden_3246x2448_oc/.json which gets stored in the \"Location\" header.\n\nNotice the umlaut. It causes the IllegalArgumentException.\n\nSo I see that this was announced as part of the 2.5 release: \"OkHttp now rejects request headers that contain invalid characters\". And I think that is good as default behavior but it would be nice to be able to sanitize the headers before the request chain is errored out completely.\n\nI can't use a network interceptor to solve this problem:\n\n``` kotlin\n    client.networkInterceptors().add(object : Interceptor {\n            override fun intercept(chain: Interceptor.Chain?): Response? {\n                var req = chain?.request()\n               //The request headers are all valid\n                return chain?.proceed(req)?.let { //BOOM!!! The crash happens in proceed\n                    //This is where we would fix the headers if we could\n                    it\n                }\n            }\n        })\n```\n\nMy stack trace looks like:\n\n```\n fail\n java.lang.IllegalArgumentException: Unexpected char 0xf6 at 53 in header value: https://www.reddit.com/r/EarthPorn/comments/3viwq1/mj\u00f6lkeviken_sweden_3246x2448_oc/.json\n    at com.squareup.okhttp.Headers$Builder.checkNameAndValue(Headers.java:295)\n    at com.squareup.okhttp.Headers$Builder.add(Headers.java:245)\n    at com.squareup.okhttp.internal.http.FramedTransport.readSpdy3HeadersList(FramedTransport.java:229)\n    at com.squareup.okhttp.internal.http.FramedTransport.readResponseHeaders(FramedTransport.java:142)\n    at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:909)\n    at com.squareup.okhttp.internal.http.HttpEngine.access$300(HttpEngine.java:93)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:894)\n    at com.hotpodata.baconforkotlin.RedditSessionService$genService$1.intercept(RedditSessionService.kt:73)\n```\n", "url": "https://github.com/square/okhttp/issues/2068", "user": "jdrotos", "labels": ["bug"], "created": "2015-12-06 16:59:22", "closed": "2016-07-04 03:38:07", "commits": {}, "ttf": 210.00027777777777, "commitsDetails": []}, {"title": "StrictMode CloseGuard tripped when no network.", "body": "I believe the cause of this is when no network is available (insta-`UnknownHostException`) and an expired cached response exists.\n\n```\n             StrictMode  E  A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\n                         E  java.lang.Throwable: Explicit termination method 'close' not called\n                         E      at dalvik.system.CloseGuard.open(CloseGuard.java:184)\n                         E      at java.io.FileInputStream.<init>(FileInputStream.java:78)\n                         E      at okio.Okio.source(Okio.java:163)\n                         E      at com.squareup.okhttp.internal.io.FileSystem$1.source(FileSystem.java:44)\n                         E      at com.squareup.okhttp.internal.DiskLruCache$Entry.snapshot(DiskLruCache.java:1001)\n                         E      at com.squareup.okhttp.internal.DiskLruCache.get(DiskLruCache.java:429)\n                         E      at com.squareup.okhttp.Cache.get(Cache.java:184)\n                         E      at com.squareup.okhttp.Cache$1.get(Cache.java:139)\n                         E      at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:227)\n                         E      at com.squareup.okhttp.Call.getResponse(Call.java:276)\n                         E      at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:234)\n                         E      at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:196)\n                         E      at com.squareup.okhttp.Call.execute(Call.java:79)\n```\n", "url": "https://github.com/square/okhttp/issues/2054", "user": "JakeWharton", "labels": ["bug"], "created": "2015-12-01 16:31:28", "closed": "2016-01-11 18:12:48", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "Connection Pool isn't pruning", "body": "This regression was introduced with the new allocations model. It needs to be fixed before shipping the 2.7 final.\n", "url": "https://github.com/square/okhttp/issues/2053", "user": "swankjesse", "labels": ["bug"], "created": "2015-12-01 04:14:25", "closed": "2015-12-08 04:27:03", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Suppressed: javax.net.ssl.SSLHandshakeException: Handshake failed", "body": "I use your library in my application and with okhttp:2.5.0 everything works fine. But after upgrade to 2.6.0 I get the following errors:\n\n```\n11-28 16:49:09.714 2237-2237/com.mateusz.myapp W/System.err: retrofit.RetrofitError: Handshake failed\n11-28 16:49:09.714 2237-2237/com.mateusz.myapp W/System.err:     at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:395)\n11-28 16:49:09.714 2237-2237/com.mateusz.myapp W/System.err:     at retrofit.RestAdapter$RestHandler.access$100(RestAdapter.java:220)\n11-28 16:49:09.714 2237-2237/com.mateusz.myapp W/System.err:     at retrofit.RestAdapter$RestHandler$2.obtainResponse(RestAdapter.java:278)\n11-28 16:49:09.714 2237-2237/com.mateusz.myapp W/System.err:     at retrofit.CallbackRunnable.run(CallbackRunnable.java:42)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at retrofit.Platform$Android$2$1.run(Platform.java:142)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at java.lang.Thread.run(Thread.java:818)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err: Caused by: javax.net.ssl.SSLHandshakeException: Handshake failed\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:390)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.Connection.connectTls(Connection.java:239)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.Connection.connectSocket(Connection.java:201)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.Connection.connect(Connection.java:172)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.Connection.connectAndSetOwner(Connection.java:358)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:117)\n11-28 16:49:09.715 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:329)\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:246)\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.Call.getResponse(Call.java:276)\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:234)\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:196)\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:     at com.squareup.okhttp.Call.execute(Call.java:79)\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:     at retrofit.client.OkClient.execute(OkClient.java:53)\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:     at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:326)\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:    ... 7 more\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:    Suppressed: javax.net.ssl.SSLHandshakeException: Handshake failed\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:        ... 21 more\n11-28 16:49:09.716 2237-2237/com.mateusz.myapp W/System.err:    Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb86f66d8: Failure in SSL library, usually a protocol error\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:770 0xac52af89:0x00000000)\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err:     at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err:     at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:318)\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err:        ... 20 more\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err: Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb86f66d8: Failure in SSL library, usually a protocol error\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:770 0xac52af89:0x00000000)\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err:     at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err:     at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:318)\n11-28 16:49:09.717 2237-2237/com.mateusz.myapp W/System.err:    ... 20 more\n```\n\nBasic info:\n    `Androis Studio 1.5`\n    `Grandle 1.5.0`\n    `compileSdkVersion 23`\n    `buildToolsVersion 23.0.2`\n\nWhat's wrong? If you need more information about the issue let me know.\n", "url": "https://github.com/square/okhttp/issues/2047", "user": "matskr90dev", "labels": ["bug"], "created": "2015-11-28 16:06:55", "closed": "2016-01-14 08:46:10", "commits": {}, "ttf": 46.000277777777775, "commitsDetails": []}, {"title": "Strip OkHttp-Sent-Millis, OkHttp-Sent-Millis", "body": "These are leaked implementation details. They\u2019re useful for the response cache but they shouldn't exist elsewhere in the API.\n", "url": "https://github.com/square/okhttp/issues/2035", "user": "swankjesse", "labels": ["bug"], "created": "2015-11-25 01:16:50", "closed": "2016-05-09 04:03:38", "commits": {"c2b8cf32b6b9aff3812e1199c8a170764418fa49": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a3d6635a88da94144990dcfebd8d9ad297a4d4d1": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "9c3d4e3fb6a9b059d0648cbfe5283b0f40ccc5c5": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "bab8943f2b5c8bc44a64067ada556aa62fcec3a7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 166.00027777777777, "commitsDetails": [{"commitHash": "c2b8cf32b6b9aff3812e1199c8a170764418fa49", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a3d6635a88da94144990dcfebd8d9ad297a4d4d1", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9c3d4e3fb6a9b059d0648cbfe5283b0f40ccc5c5", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bab8943f2b5c8bc44a64067ada556aa62fcec3a7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["80ab4a3761cecd9da0a623d62585195f32ed05ff"], "nameRev": "bab8943f2b5c8bc44a64067ada556aa62fcec3a7 tags/parent-3.3.0~8^2", "commitMessage": "Promote sent and received timestamps to fields on Response.\n\nI'm currently keeping these as longs. That's easy an unambiguous, but it also\nfeels rather primitive.\n\nThis was more work than I expected, but it doesn't seem particularly risky.\nIt's also potentially more efficient, since there's fewer places where we're\nconverting from string to long and vice versa.\n\nCloses: https://github.com/square/okhttp/issues/2035\n", "commitDateTime": "2016-05-08 15:25:56", "authoredDateTime": "2016-05-08 15:20:58", "commitGitStats": [{"filePath": "okhttp-android-support/src/main/java/okhttp3/internal/huc/JavaApiConverter.java", "insertions": 35, "deletions": 10, "lines": 45}, {"filePath": "okhttp-android-support/src/test/java/okhttp3/internal/huc/JavaApiConverterTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-logging-interceptor/src/test/java/okhttp3/logging/HttpLoggingInterceptorTest.java", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 70, "deletions": 19, "lines": 89}, {"filePath": "okhttp-tests/src/test/java/okhttp3/RecordedResponse.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http/HeadersTest.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "okhttp-urlconnection/src/test/java/okhttp3/internal/huc/URLEncodingTest.java", "insertions": 6, "deletions": 16, "lines": 22}, {"filePath": "okhttp/src/main/java/okhttp3/Cache.java", "insertions": 50, "deletions": 26, "lines": 76}, {"filePath": "okhttp/src/main/java/okhttp3/Headers.java", "insertions": 39, "deletions": 2, "lines": 41}, {"filePath": "okhttp/src/main/java/okhttp3/Response.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/CacheStrategy.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpEngine.java", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JavaApiConverter.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.createJavaCacheResponse(okhttp3.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.withSyntheticHeaders(okhttp3.Response)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.createJavaUrlConnectionForCachePut(okhttp3.Response)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.extractOkHeaders(java.net.CacheResponse,okhttp3.Response$Builder)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.extractOkResponseHeaders(java.net.HttpURLConnection,okhttp3.Response$Builder)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.extractOkHeaders(java.util.Map,okhttp3.Response$Builder)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.createOkResponseForCachePut(java.net.URI,java.net.URLConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.createOkResponseForCacheGet(okhttp3.Request,java.net.CacheResponse)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.huc.JavaApiConverter.createOkRequest(java.net.URI,java.lang.String,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JavaApiConverterTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.huc.JavaApiConverterTest.extractOkHeaders()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpLoggingInterceptorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersGet()", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersPost()", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersPostNoContentType()", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersPostNoLength()", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.headersResponseBody()", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyGet()", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyGetNoBody(int)", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyPost()", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyResponseBody()", "TOT": 16, "UPD": 12, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyResponseBodyChunked()", "TOT": 16, "UPD": 12, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyResponseNotIdentityEncoded()", "TOT": 13, "UPD": 9, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.bodyGetMalformedCharset()", "TOT": 16, "UPD": 12, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.logging.HttpLoggingInterceptorTest.responseBodyIsBinary()", "TOT": 14, "UPD": 10, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.conditionalCacheMiss()", "TOT": 21, "UPD": 4, "INS": 8, "MOV": 6, "DEL": 3}, {"spoonMethodName": "okhttp3.CallTest.get()", "TOT": 16, "UPD": 3, "INS": 6, "MOV": 6, "DEL": 1}, {"spoonMethodName": "okhttp3.CallTest.cacheHit()", "TOT": 19, "UPD": 2, "INS": 5, "MOV": 10, "DEL": 2}, {"spoonMethodName": "okhttp3.CallTest.conditionalCacheHit()", "TOT": 11, "UPD": 0, "INS": 8, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "RecordedResponse.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RecordedResponse.assertHeaders(okhttp3.Headers)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.RecordedResponse.assertSentRequestAtMillis(long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.RecordedResponse.assertReceivedResponseAtMillis(long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.RecordedResponse.assertDateInRange(long,long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.RecordedResponse.format(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HeadersTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HeadersTest.toMultimapUsesCanonicalCase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.HeadersTest.headersEquals()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.HeadersTest.headersNotEquals()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLEncodingTest.java", "spoonMethods": []}, {"spoonFilePath": "Cache.java", "spoonMethods": [{"spoonMethodName": "okhttp3.Cache.Entry.response(okhttp3.internal.DiskLruCache$Snapshot)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.Cache.Entry.writeTo(okhttp3.internal.DiskLruCache$Editor)", "TOT": 37, "UPD": 0, "INS": 6, "MOV": 19, "DEL": 12}, {"spoonMethodName": "okhttp3.Cache.Entry.writeCertList(okio.BufferedSink,java.util.List)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "okhttp3.Cache.Entry", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Headers.java", "spoonMethods": [{"spoonMethodName": "okhttp3.Headers.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.Headers.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.Headers.toMultimap()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Response.java", "spoonMethods": [{"spoonMethodName": "okhttp3.Response", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.Response.sentRequestAtMillis()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.Response.receivedResponseAtMillis()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.Response.Builder", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.Response.Builder.sentRequestAtMillis(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.Response.Builder.receivedResponseAtMillis(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CacheStrategy.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.CacheStrategy.Factory", "TOT": 19, "UPD": 0, "INS": 3, "MOV": 11, "DEL": 5}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpEngine.maybeCache()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.HttpEngine.readNetworkResponse()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.HttpEngine.sendRequest()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.HttpEngine.readResponse()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bab8943f2b5c8bc44a64067ada556aa62fcec3a7"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 168.0, "deletions": 46.0, "lines": 214.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 118.0, "UPD": 6.0, "INS": 52.0, "MOV": 39.0, "DEL": 21.0, "spoonFilesChanged": 7, "spoonMethodsChanged": 32}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/internal/http", "okhttp-android-support/src/main/java/okhttp3/internal/huc"], "changesInPackagesSPOON": ["okhttp3.internal.http.HttpEngine.maybeCache()", "okhttp3.Response.Builder.receivedResponseAtMillis(long)", "okhttp3.Response.receivedResponseAtMillis()", "okhttp3.internal.huc.JavaApiConverter.extractOkResponseHeaders(java.net.HttpURLConnection,okhttp3.Response$Builder)", "okhttp3.RecordedResponse.assertHeaders(okhttp3.Headers)", "okhttp3.internal.huc.JavaApiConverter.createOkResponseForCacheGet(okhttp3.Request,java.net.CacheResponse)", "okhttp3.Headers.hashCode()", "okhttp3.internal.huc.JavaApiConverter.createOkRequest(java.net.URI,java.lang.String,java.util.Map)", "okhttp3.Headers.toMultimap()", "okhttp3.internal.huc.JavaApiConverter.withSyntheticHeaders(okhttp3.Response)", "okhttp3.internal.huc.JavaApiConverter.createJavaUrlConnectionForCachePut(okhttp3.Response)", "okhttp3.internal.huc.JavaApiConverter.extractOkHeaders(java.net.CacheResponse,okhttp3.Response$Builder)", "okhttp3.RecordedResponse.assertSentRequestAtMillis(long,long)", "okhttp3.internal.huc.JavaApiConverter.extractOkHeaders(java.util.Map,okhttp3.Response$Builder)", "okhttp3.Headers.equals(java.lang.Object)", "okhttp3.internal.huc.JavaApiConverter.createOkResponseForCachePut(java.net.URI,java.net.URLConnection)", "okhttp3.Cache.Entry.writeTo(okhttp3.internal.DiskLruCache$Editor)", "okhttp3.RecordedResponse.assertDateInRange(long,long,long)", "okhttp3.internal.huc.JavaApiConverter.createJavaCacheResponse(okhttp3.Response)", "okhttp3.RecordedResponse.format(long)", "okhttp3.Response.Builder.sentRequestAtMillis(long)", "okhttp3.internal.http.HttpEngine.readResponse()", "okhttp3.internal.http.HttpEngine.sendRequest()", "okhttp3.Cache.Entry.response(okhttp3.internal.DiskLruCache$Snapshot)", "okhttp3.Response.sentRequestAtMillis()", "okhttp3.Cache.Entry.writeCertList(okio.BufferedSink,java.util.List)", "okhttp3.Cache.Entry", "okhttp3.RecordedResponse.assertReceivedResponseAtMillis(long,long)", "okhttp3.Response", "okhttp3.Response.Builder", "okhttp3.internal.http.CacheStrategy.Factory", "okhttp3.internal.http.HttpEngine.readNetworkResponse()"]}, {"title": "IllegalArgumentException: Unexpected char ... in header value: ... at com.squareup.okhttp.Headers$Builder.checkNameAndValue (Headers.java:295)", "body": "I get crash reports like that:\n\n```\njava.lang.IllegalArgumentException: Unexpected char 0x43a at 101 in header value: Mozilla/5.0 (Linux; U; Android 4.1.2; ru-ru; PMP7170B3G_DUO Build/JZO54K) AppleWebKit/534.30 (KHTML, \u043a\u0430\u043a Gecko) Version/4.0 \u041c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0439Safari/534.30\n    at com.squareup.okhttp.Headers$Builder.checkNameAndValue (Headers.java:295)\n    at com.squareup.okhttp.Headers$Builder.set (Headers.java:275)\n    at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.setRequestProperty (HttpURLConnectionImpl.java:526)\n    <some 3rd library code I don't have access to>\n```\n\nSeems to happen due to non-ASCII chars in header value.\nSimilar to #1998. But #1998 is about response header and my smacktrace is about request header.\n\nThank you!\n", "url": "https://github.com/square/okhttp/issues/2016", "user": "thest1", "labels": ["bug", "stackoverflow"], "created": "2015-11-20 02:43:52", "closed": "2015-12-01 04:13:34", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "IllegalArgumentException in Headers$Builder.checkNameAndValue() for content-disposition filename response header", "body": "The fix for https://github.com/square/okhttp/issues/891 is causing IllegalArgumentException to be thrown for non ASCII _response_ headers. Most notably, content-disposition, and the filename part. This is basically causing filenames with all the best letters from all the best countries (\u00fc,\u00e4,\u00ee,\u00e2 etc) to crash our app.\n\nThe failure mode for us is semi-rare for a variety of reasons, but I imagine this would be far worse for others.\n\nThe RFC on the \"filename\" parameter allows any ISO-8859-1 character: http://tools.ietf.org/html/rfc6266#page-5 so the current behaviour definitely seems to be incorrect.\n\nIt makes sense to check request headers. I'm not convinced that it's reasonable for response headers, given that there are plenty of occasions where you just don't control the full stack. Actually, even the unit test that was added in the commit https://github.com/square/okhttp/commit/a57aa43c57819e06fede3f89a653eb6f059449a8 (responseHeaderParsingIsLenient) seems to imply that this is what was intended - must just be a bug.\n\nIt would be great if OkHttp could be a little less strict in production situations, but that's sort of unrelated.\n\nPossible fix would be addLenient at https://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/internal/http/FramedTransport.java#L192 but I don't know the ins and outs of this code with enough confidence to make those changes.\n\njava.lang.IllegalArgumentException: Unexpected char 0xf6 at 21 in header value: inline;filename=\"Andy\ufffd\ufffdIsSad.png\"\nat com.squareup.okhttp.Headers$Builder.checkNameAndValue(Headers.java:295)\n    at com.squareup.okhttp.Headers$Builder.add(Headers.java:245)\n    at com.squareup.okhttp.internal.http.FramedTransport.readNameValueBlock(FramedTransport.java:192)\n    at com.squareup.okhttp.internal.http.FramedTransport.readResponseHeaders(FramedTransport.java:104)\n    at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:906)\n    at com.squareup.okhttp.internal.http.HttpEngine.access$300(HttpEngine.java:92)\n    at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:891)\n    at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:749)\n    at com.squareup.okhttp.Call.getResponse(Call.java:268)\n    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:224)\n    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:195)\n    at com.squareup.okhttp.Call.execute(Call.java:79)\n", "url": "https://github.com/square/okhttp/issues/1998", "user": "would-code-again", "labels": ["bug"], "created": "2015-11-14 20:42:24", "closed": "2016-05-28 17:34:25", "commits": {"3ec5227d2693262db5467abcc36641a405808166": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 195.00027777777777, "commitsDetails": [{"commitHash": "3ec5227d2693262db5467abcc36641a405808166", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["16aed96a358f7cf8639a305fcce1d890002e2bbc"], "nameRev": "3ec5227d2693262db5467abcc36641a405808166 tags/parent-3.3.1~2^2", "commitMessage": "Don't crash reading non-ASCII characters from the server or the cache.\n\nThis doesn't completely support ISO-8859-1 headers; instead they will most likely\nbe mangled when they are decoded as UTF-8. If we decide we absolutely must support\nISO-8859-1 here we can do that in another change. (I'm not currently enthusiastic\nabout this idea.)\n\nBut this does prevent OkHttp from crashing when it encounters non-ASCII characters\nin headers for HTTP/2, SPDY, and cached responses.\n\nCloses: https://github.com/square/okhttp/issues/1998\n", "commitDateTime": "2016-05-28 12:08:42", "authoredDateTime": "2016-05-28 12:08:42", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CacheTest.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/framed/HttpOverSpdyTest.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/Http2xStream.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpEngine.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.combinedCacheHeadersCanBeNonAscii()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.framed.HttpOverSpdyTest.nonAsciiResponseHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2xStream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.Http2xStream.readHttp2HeadersList(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http2xStream.readSpdy3HeadersList(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpEngine.combine(okhttp3.Headers,okhttp3.Headers)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3ec5227d2693262db5467abcc36641a405808166"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 4, "lines": 9, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http"], "changesInPackagesSPOON": ["okhttp3.internal.http.Http2xStream.readHttp2HeadersList(java.util.List)", "okhttp3.internal.http.Http2xStream.readSpdy3HeadersList(java.util.List)", "okhttp3.internal.http.HttpEngine.combine(okhttp3.Headers,okhttp3.Headers)"]}, {"title": "HttpLoggingInterceptor crashes on invalid charsets", "body": "I have encountered a server that returns responses like this:\n\n```\nHTTP/1.1 200 OK\nDate: Sat, 07 Nov 2015 11:34:54 GMT\nServer: Apache\nStrict-Transport-Security: max-age=63072000; includeSubdomains; preload\nX-Powered-By: PHP/5.4.41\nMS-Author-Via: DAV\nX-Sabre-Version: 1.8.7\n\u2026\nContent-Type: text/html; charset=0\n```\n\nThe charset value causes `HttpLoggingInterceptor` to fail, because it calls `Charset.forName` which throws an `UnsupportedCharsetException` for the value \"0\". Neither `MediaType.charset()` nor `HttpLoggingInterceptor` handle this exception, so the logging interceptor crashes.\n\nI see two possible methods of handling that:\n- `MediaType.charset()` could handle the exception \u2013 but which charset should be assumed?\n- Maybe that's not so wise. Instead, it should be pointed out that `MediaType.charset()` throws `UnsupportedMediaException`. `HttpLoggingInterceptor` (and maybe other occurrences in the code) should handle this `UnsupportedMediaException` (see PR #1977).\n", "url": "https://github.com/square/okhttp/issues/1978", "user": "rfc2822", "labels": ["bug"], "created": "2015-11-07 11:40:13", "closed": "2016-01-30 16:14:41", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "MockWebServer throttling is possibly broken for slow rates", "body": "This is potentially subjective depending on developer expectations. Creating for discussion.\n\nWhen the MockWebServer opens a socket it wraps the source/sink in BufferedSource / BufferedSink.\n\n```\n    BufferedSource source = Okio.buffer(Okio.source(socket));\n    BufferedSink sink = Okio.buffer(Okio.sink(socket));\n```\n\nThe first request body read will read an entire okio segment in one go (e.g. currently 8192 bytes).\nIf there is a throttling policy the policy is then applied to the reads from the buffer. This has the effect of delaying the body transfer but it's not acting on the network rate as tests _may_ be assuming.\n\nMockResponse docs are slightly at odds with behavior. The documentation suggests it acts on the response body write, but it also acts on the request body read:\n\n```\n  /**\n   * Throttles the response body writer to sleep for the given period after each\n   * series of {@code bytesPerPeriod} bytes are written. Use this to simulate\n   * network behavior.\n   */\n  public MockResponse throttleBody(long bytesPerPeriod, long period, TimeUnit unit) {\n```\n\nResponse body writes probably have a similar situation: the response body is trickled into a buffer but will be sent en masse to the client in a segment-sized lump when there is enough. I haven't actually checked this, though.\n\nRemoving the request buffering and acting directly on the Socket Source is non-trivial due to the reliance on string-based methods (and exhausted()) that exist on BufferedSource (preventing an easy switch to Source) and the inability to set the segment size (preventing the use of a smaller buffer). Switching throttledTransfer() to using Sink looks like it would be easy, though I've not tried removing any buffering.\n", "url": "https://github.com/square/okhttp/issues/1975", "user": "nfuller", "labels": ["bug", "needs info", "tests"], "created": "2015-11-06 14:17:47", "closed": "2016-11-13 23:16:17", "commits": {}, "ttf": 373.0002777777778, "commitsDetails": []}, {"title": "Method setAlpnProtocols not supported", "body": "Hi I'm using the latest okHttp lib 2.5.0, \n\nWhen sometimes I'm trying to connect to an https url the following exception appears:\n\njava.lang.AssertionError: Method setAlpnProtocols not supported for object SSL socket over Socket[address=THE_CONNECTED_URL,port=443,localPort=46845]  at \n com.squareup.okhttp.internal.OptionalMethod.invoke(Unknown Source)  at \n com.squareup.okhttp.internal.OptionalMethod.invokeWithoutCheckedException(Unknown Source) at \n com.squareup.okhttp.internal.Platform$Android.configureTlsExtensions(Unknown Source)  at \n com.squareup.okhttp.Connection.connectTls(Unknown Source) at \n com.squareup.okhttp.Connection.connectSocket(Unknown Source)  at \n com.squareup.okhttp.Connection.connect(Unknown Source)  at \n com.squareup.okhttp.Connection.connectAndSetOwner(Unknown Source) at \n com.squareup.okhttp.OkHttpClient$1.connectAndSetOwner(Unknown Source) at \n com.squareup.okhttp.internal.http.HttpEngine.connect(Unknown Source)  at \n com.squareup.okhttp.internal.http.HttpEngine.sendRequest(Unknown Source)  at \n com.squareup.okhttp.Call.getResponse(Unknown Source)  at \n com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Unknown Source)  at \n com.squareup.okhttp.Call.getResponseWithInterceptorChain(Unknown Source)  at \n com.squareup.okhttp.Call.execute(Unknown Source)  ...\n\nI'm simply making the okhttp call like this:\n`client= new OkHttpClient();\n//setting timeouts and readtimeouts\n//setting headers and method post for the request variable\nclient.newCall(request).execute();`\n\nAm I doing something wrong here?\nI just want to understand why is an AssertionError being triggered here after an invokeWithoutCheckedException :(\n", "url": "https://github.com/square/okhttp/issues/1946", "user": "luispereira", "labels": ["bug"], "created": "2015-10-28 12:40:17", "closed": "2016-01-01 22:51:55", "commits": {}, "ttf": 65.00027777777778, "commitsDetails": []}, {"title": "http code = 408,fiddler do not catch the request url", "body": "Response.body().string()=The client failed to send a complete request on this REUSED connection before the timeout period elapsed; 0 bytes were read from client.\n\nbut i can not find this string in okhttp's source .\n\ni used mHttpClient.setReadTimeout(12, TimeUnit.SECONDS);\n        mHttpClient.setWriteTimeout(12 , TimeUnit.SECONDS);\n", "url": "https://github.com/square/okhttp/issues/1937", "user": "andczy", "labels": ["bug"], "created": "2015-10-20 06:05:31", "closed": "2015-12-08 07:45:35", "commits": {}, "ttf": 49.000277777777775, "commitsDetails": []}, {"title": "IOException when writing to Websocket sink causes writing to fail forever", "body": "This change: [https://github.com/square/okhttp/commit/40a6dc7dd5ff6843b82f904516181182d512d0ca] contains these lines in `public void sendMessage(RequestBody message)`:\n\n``` java\n    BufferedSink sink = Okio.buffer(writer.newMessageSink(formatOpcode));\n    message.writeTo(sink);\n    sink.close();\n```\n\nPerhaps rephrase as:\n\n``` java\n    BufferedSink sink = Okio.buffer(writer.newMessageSink(formatOpcode));\n    try {\n      message.writeTo(sink);\n    } finally {\n      sink.close();\n    }\n```\n\nIf an `IOException` is thrown here the sink will never close yet the websocket will remain in a valid state. This causes subsequent executions of `writer.NewMessageSink(formatOpcode)` to fail because the writer is still active.\n", "url": "https://github.com/square/okhttp/issues/1931", "user": "pwerry", "labels": ["bug", "websockets"], "created": "2015-10-16 14:23:01", "closed": "2015-11-14 19:09:14", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "OkHttpClient default timeouts not reasonable for websockets", "body": "A change [https://github.com/square/okhttp/commit/0de14e992c228fd9de9fe78417788131bee00902] was made to set the default timeouts for read/write to 10 seconds. Having a read timeout doesn't really make sense for a websocket connection. \n\nWorkaround - `okHttpClient.setReadTimeout(0, TimeUnit.NANOSECONDS);`\n", "url": "https://github.com/square/okhttp/issues/1930", "user": "pwerry", "labels": ["bug", "websockets"], "created": "2015-10-16 14:10:32", "closed": "2016-09-18 01:04:02", "commits": {}, "ttf": 337.0002777777778, "commitsDetails": []}, {"title": "OkHTTP does not unzip Gzipped content when using Authenticator", "body": "Using OkHttp 2.5\n\nI'm using an Authenticator to catch 401's and refresh my OAuth token. Upon retrying the requests, GSON fails at parsing a compressed String. Since OkHTTP silently adds the \"Accept-encoding: gzip\" header after the first try, upon retrying with the Authenticator it sees the existing header for \"Accept-encoding\" and does not do the unzipping.\n\n```\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: <--- HTTP 200 (775ms)\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: Content-Encoding: gzip\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: Content-Type: application/json; charset=utf-8\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: Date: Thu, 15 Oct 2015 20:03:42 GMT\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: Server: nginx\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: Status: 200 OK\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: X-Runtime: 0.079625\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: X-UA-Compatible: IE=Edge,chrome=1\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: Content-Length: 146\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: Connection: keep-alive\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: OkHttp-Selected-Protocol: http/1.1\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: OkHttp-Sent-Millis: 1444939422732\n10-15 16:03:42.900 18864-18889/com.example.dev D/Retrofit: OkHttp-Received-Millis: 1444939422900\n10-15 16:03:42.901 18864-18889/com.example.dev D/Retrofit: \u001f\ufffd\b\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0003]\ufffdA\n10-15 16:03:42.901 18864-18889/com.example.dev D/Retrofit: \ufffd \u0014D\ufffd\ufffd\u05f6\ufffdF+z\ufffd\u0010D\ufffd\u0017\ufffd\ufffd\u00045\ufffd\"x\ufffdj7-\ufffd\ufffd\u031bY\ufffd \u0019S\ufffd\fj\ufffdn\ufffd19JF)\u0011\ufffdL \u0017\ufffd\n10-15 16:03:42.901 18864-18889/com.example.dev D/Retrofit: \ufffd\u001f\f\u000ec1m|\ufffd\u000b\ufffd'&\ufffd]'\ufffdN\ufffdd\ufffd\u0012\ufffd\u0015\ufffde\ufffd\ufffd?\ufffdJ\ufffd\ufffd\u000e\u000e\u0014p\ueb17\ufffd \ufffd\ufffdr\ufffd\u0016?4\ufffdw `\ufffd\u0010\ufffd\ufffd\ufffd\ufffd\u0012\ufffd\ufffd\u007f_\ufffd7\ufffd3\ufffd'\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n10-15 16:03:42.901 18864-18889/com.example.dev D/Retrofit: <--- END HTTP (146-byte body)\n```\n\n``` java\n    private Request refreshAndSign(Response response, AccessToken token) {\n        AccessToken freshToken = service.refreshAccessToken(token.refreshToken);\n        accessTokenState.setAccessToken(freshToken);\n\n        Request.Builder builder = response.networkResponse().request().newBuilder();\n        setAuthHeader(builder, freshToken);\n        return builder.build();\n    }\n```\n\nThis is worked around by explicitly removing the header when resigning.\n\n``` java\nbuilder.removeHeader(\"Accept-Encoding\");\n```\n", "url": "https://github.com/square/okhttp/issues/1927", "user": "tyvsmith", "labels": ["bug"], "created": "2015-10-15 20:10:03", "closed": "2015-11-26 22:15:14", "commits": {}, "ttf": 42.000277777777775, "commitsDetails": []}, {"title": "Socket SO_SNDBUF size too big for some networks", "body": "We've discovered a puzzling issue with `WebSockets` (and perhaps `Sockets` in general) on Android. Under certain circumstances that are not fully understood, writing a large buffer to a `Socket` with a `SO_SNDBUF` size greater than the MTU of the node directly upstream of the device _may_ result in that upstream node dropping packets. If you write chunks to the `Socket` in sizes less than the upstream MTU it's not a problem. Our working theory is that the OS is unable to resolve the MTU using PMTUD, even though the router is correctly returning \"fragmentation required\" responses when the DF bit is set (we tested a few ICMP packets to the router). Flushing the underlying `OutputStream` associated with the `Socket` after writing each `Segment` doesn't seem to accomplish much if the total bytes written across all segments is larger than the MTU. The only solution we've been able to find so far is to call `Socket#setSendBufferSize(int)` with a value less than the MTU (1024 seemed reasonable given that the upstream MTU in our case was 1492). \n\nA few caveats and interesting data points:\n- Not all upstream nodes behave this way. In fact we have only been able to reliably replicate the issue using a certain router on a certain network\n- A router involved in replicating the issue actually did send back packet fragmentation errors when hit with ICMP DF packets\n- The standard MTU on Android is 1500, the standard `SO_SNDBUF` size is 512KB\n- Android always seems to report an MTU of 1500 even when the upstream MTU is smaller\n- The frequency of this issue in the wild is statistically significant, at approximately 10% of all users. It is especially prevalent in emerging markets like Nigeria, Ghana, and India. \n- We can confirm this affects devices running Lollipop, and we estimate it affects devices running KitKat as well. Marshmallow hasn't been tested yet\n- It affects a wide range of devices across many manufacturers, implying the issue is probably not manufacturer specific\n- This seems to be a problem with the OS rather than with okhttp, but there might be something okhttp can do to reduce the impact of the issue\n\nJust to test the waters, what appetite would there be for adding an API to `OkHttpClient` to expose a configurable `SO_SNDBUF` size?\n", "url": "https://github.com/square/okhttp/issues/1925", "user": "pwerry", "labels": ["bug"], "created": "2015-10-14 15:31:01", "closed": "2016-01-01 22:53:04", "commits": {}, "ttf": 79.00027777777778, "commitsDetails": []}, {"title": "NPE When Reading Header", "body": "We use OkHTTP as a dependency for our Android SDK at Optimizely.  We have been seeing this crash in the wild.  It only happens for one customer.  Any ideas?\n\n```\nPackage: com.snowball.app \nVersion Code: 66 \nVersion Name: 2.1.1 \nAndroid: 5.0.1 \nManufacturer: LGE \nModel: Nexus 5 \nCrashReporter Key: 718B9F67-EEC4-AAC0-AA77-E2BC2E9868E18BD68E1B \nDate: Mon Oct 05 13:23:03 PDT 2015\n\njava.lang.RuntimeException: An error occured while executing doInBackground() \nat android.os.AsyncTask$3.done(AsyncTask.java:300) \nat java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:355) \nat java.util.concurrent.FutureTask.setException(FutureTask.java:222) \nat java.util.concurrent.FutureTask.run(FutureTask.java:242) \nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112) \nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587) \nat java.lang.Thread.run(Thread.java:818) \nCaused by: java.lang.NullPointerException: Attempt to invoke virtual method 'com.squareup.okhttp.Headers com.squareup.okhttp.Response.headers()' on a null object reference \nat com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:796) \nat com.squareup.okhttp.Call.getResponse(Call.java:274) \nat com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:230) \nat com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:201) \nat com.squareup.okhttp.Call.execute(Call.java:81) \nat com.optimizely.LogAndEvent.OptimizelyTimeSeriesEventsManager$TimeSeriesEventTask.doInBackground(OptimizelyTimeSeriesEventsManager.java:280) \nat com.optimizely.LogAndEvent.OptimizelyTimeSeriesEventsManager$TimeSeriesEventTask.doInBackground(OptimizelyTimeSeriesEventsManager.java:242) \nat android.os.AsyncTask$2.call(AsyncTask.java:288) \nat java.util.concurrent.FutureTask.run(FutureTask.java:237) \n```\n\nPlease let me know how I can help debug and fix.\n", "url": "https://github.com/square/okhttp/issues/1921", "user": "jophde", "labels": ["bug"], "created": "2015-10-12 19:33:37", "closed": "2015-11-01 02:26:58", "commits": {"8aee8bf16909d1addd9b83716849158fe4970da9": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a84e9c83c427f0004d1ca5a8860f8c9d2379a636": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "8aee8bf16909d1addd9b83716849158fe4970da9", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a84e9c83c427f0004d1ca5a8860f8c9d2379a636", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["403e127cf29ae1d489c2d9ed230c841086a09d4b"], "nameRev": "a84e9c83c427f0004d1ca5a8860f8c9d2379a636 tags/parent-2.6.0~22^2", "commitMessage": "Throw the right exception if an interceptor returns null.\n\nPreviously we were treating null as a sentinel 'canceled' value\nfor application interceptors, and crashing on network interceptors.\n\nCloses https://github.com/square/okhttp/issues/1921\n", "commitDateTime": "2015-10-31 15:02:33", "authoredDateTime": "2015-10-31 09:20:58", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java", "insertions": 59, "deletions": 8, "lines": 67}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Call.java", "insertions": 13, "deletions": 5, "lines": 18}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InterceptorTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.InterceptorTest.uppercase(com.squareup.okhttp.RequestBody).19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.uppercase(okio.BufferedSink).20", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.uppercase(okio.Source).21", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.uppercase(com.squareup.okhttp.RequestBody).19.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.applicationInterceptorReturnsNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.networkInterceptorReturnsNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.networkInterceptorModifiedRequestIsReturned()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Call.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Call.ApplicationInterceptorChain.proceed(com.squareup.okhttp.Request)", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.NetworkInterceptorChain.proceed(com.squareup.okhttp.Request)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a84e9c83c427f0004d1ca5a8860f8c9d2379a636"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17.0, "deletions": 5.0, "lines": 22.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10.0, "UPD": 0.0, "INS": 5.0, "MOV": 3.0, "DEL": 2.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http", "okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.Call.ApplicationInterceptorChain.proceed(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.HttpEngine.NetworkInterceptorChain.proceed(com.squareup.okhttp.Request)"]}, {"title": "Url '+' sign always encoded to %20 or %2B ", "body": "I am doing some calls on an API that specific requires the '+' sign in the query parameter value. It seems kind of odd that there is no way to specify the request to leave the url as it is, at least for the query parameters value.\n\nFor example http://example.org/path?query_param=foo+bar \n", "url": "https://github.com/square/okhttp/issues/1920", "user": "aencica", "labels": ["bug"], "created": "2015-10-12 15:32:52", "closed": "2015-11-14 07:18:42", "commits": {"0376f75ee28738f57259d0706ec8ee26212637c5": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "fe6702aaea38b9ea94011231e0c24a8b2f4c0e93": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0b1d20c47cc608aa0a68dabd4f105adb6b690afe": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 32.000277777777775, "commitsDetails": [{"commitHash": "0376f75ee28738f57259d0706ec8ee26212637c5", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fe6702aaea38b9ea94011231e0c24a8b2f4c0e93", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0b1d20c47cc608aa0a68dabd4f105adb6b690afe", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["cc821ff3166c709978a546961bbe5f1025a1d792"], "nameRev": "0b1d20c47cc608aa0a68dabd4f105adb6b690afe tags/parent-2.6.0~9^2", "commitMessage": "Permit space to be encoded as + or %20.\n\nPreviously we forced %20, which offended some broken web servers.\n\nCloses https://github.com/square/okhttp/issues/1920\n", "commitDateTime": "2015-11-13 23:07:53", "authoredDateTime": "2015-11-13 22:21:13", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/FormEncodingBuilderTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java", "insertions": 29, "deletions": 25, "lines": 54}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FormEncodingBuilderTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.FormEncodingBuilderTest.urlEncoding()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.FormEncodingBuilderTest.addEncoded()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.composeQueryWithEncodedComponents()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.composeQuerySetEncodedQueryParameter()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.percentDecode(java.lang.String,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.percentDecode(java.util.List,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.percentDecode(java.lang.String,int,int,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.percentDecode(okio.Buffer,java.lang.String,int,int,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.canonicalizeHost(java.lang.String,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.percentDecode(java.lang.String,int,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0b1d20c47cc608aa0a68dabd4f105adb6b690afe"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29.0, "deletions": 25.0, "lines": 54.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 26.0, "UPD": 8.0, "INS": 15.0, "MOV": 3.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.HttpUrl.percentDecode(java.util.List,boolean)", "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "com.squareup.okhttp.HttpUrl", "com.squareup.okhttp.HttpUrl.percentDecode(java.lang.String,boolean)", "com.squareup.okhttp.HttpUrl.percentDecode(okio.Buffer,java.lang.String,int,int,boolean)", "com.squareup.okhttp.HttpUrl.percentDecode(java.lang.String,int,int)", "com.squareup.okhttp.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "com.squareup.okhttp.HttpUrl.percentDecode(java.lang.String,int,int,boolean)", "com.squareup.okhttp.HttpUrl.Builder.canonicalizeHost(java.lang.String,int,int)", "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean)"]}, {"title": "redirect for PROFIND request issues GET request", "body": "see code in `com.squareup.okhttp.internal.http.HttpEngine#followUpRequest`\n\n``` java\n      case HTTP_MULT_CHOICE:\n      case HTTP_MOVED_PERM:\n      case HTTP_MOVED_TEMP:\n      case HTTP_SEE_OTHER:\n        // Does the client allow redirects?\n        if (!client.getFollowRedirects()) return null;\n\n        String location = userResponse.header(\"Location\");\n        if (location == null) return null;\n        HttpUrl url = userRequest.httpUrl().resolve(location);\n\n        // Don't follow redirects to unsupported protocols.\n        if (url == null) return null;\n\n        // If configured, don't follow redirects between SSL and non-SSL.\n        boolean sameScheme = url.scheme().equals(userRequest.httpUrl().scheme());\n        if (!sameScheme && !client.getFollowSslRedirects()) return null;\n\n        // Redirects don't include a request body.\n        Request.Builder requestBuilder = userRequest.newBuilder();\n        if (HttpMethod.permitsRequestBody(userRequest.method())) {\n          requestBuilder.method(\"GET\", null);\n          requestBuilder.removeHeader(\"Transfer-Encoding\");\n          requestBuilder.removeHeader(\"Content-Length\");\n          requestBuilder.removeHeader(\"Content-Type\");\n        }\n```\n\nThus, any http body is lost and out of a PROFIND request I get a GET request instead.\n\nIMHO we need a more flexible solution for coming up with a redirected request. For PROPFIND, the redirected request should again be PROPFIND and the HTTP body should be maintained.\n", "url": "https://github.com/square/okhttp/issues/1919", "user": "rburgst", "labels": ["bug"], "created": "2015-10-11 18:13:24", "closed": "2015-12-12 02:09:23", "commits": {"2d73da131dfa77de81ff8a54831c7385a0ce2d72": {"commitGHEventType": "closed", "commitUser": "swankjesse"}, "948031850751ac13463389fcef297bf1a63899f6": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 61.000277777777775, "commitsDetails": [{"commitHash": "2d73da131dfa77de81ff8a54831c7385a0ce2d72", "commitGHEventType": "closed", "commitUser": "swankjesse", "commitParents": ["e7b55fd6fe503017ef026b2f457f3629795995a9"], "nameRev": "2d73da131dfa77de81ff8a54831c7385a0ce2d72 tags/parent-2.7.0~5^2", "commitMessage": "fix #1919: PROPFIND request should not redirect to GET request\n", "commitDateTime": "2015-12-11 21:08:49", "authoredDateTime": "2015-12-09 09:22:18", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpMethod.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.propfindRedirectsToPropfind()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()", "TOT": 12, "UPD": 0, "INS": 5, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "HttpMethod.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.redirectsToGet(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "948031850751ac13463389fcef297bf1a63899f6", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["e7b55fd6fe503017ef026b2f457f3629795995a9", "2d73da131dfa77de81ff8a54831c7385a0ce2d72"], "nameRev": "948031850751ac13463389fcef297bf1a63899f6 tags/parent-2.7.0~5", "commitMessage": "Merge branch 'rburgst-master'\n\n* rburgst-master:\n  fix #1919: PROPFIND request should not redirect to GET request\n", "commitDateTime": "2015-12-11 21:09:10", "authoredDateTime": "2015-12-11 21:09:10", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpMethod.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.propfindRedirectsToPropfind()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()", "TOT": 12, "UPD": 0, "INS": 5, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "HttpMethod.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.redirectsToGet(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2d73da131dfa77de81ff8a54831c7385a0ce2d72"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 3, "lines": 16, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 0, "INS": 6, "MOV": 5, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.HttpMethod.redirectsToGet(java.lang.String)", "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()"]}, {"title": "URL wih # returns Error ", "body": "For some reason OkHttp returns an error for this url http://stackoverflow.com/questions/33056658/okhttp-page-source# even when its correct.\n\nIf i remove the # at the end everything works fine.\n", "url": "https://github.com/square/okhttp/issues/1918", "user": "hoshomoh", "labels": ["bug"], "created": "2015-10-11 08:01:26", "closed": "2015-12-16 03:35:20", "commits": {}, "ttf": 65.00027777777778, "commitsDetails": []}, {"title": "HttpUrl && \"|\"", "body": "I'm using a search request in the form of http://sample.com/search?this | that using the builder and an HttpUrl. The request fus built also using the HttpUrl and encoded properly with the builder. The resulting url is http://sample.com/search?this%20|%20that but fails within the the Request handling with a URI error as the URI class can't handle the unencoded pipe (|).\n\nI some some buzz about this, but is there a work around? \n\nThe really weird part about this is that it worked just fine, but started failing suddenly in the field more than a month after deployment, which is confusing me.\n", "url": "https://github.com/square/okhttp/issues/1917", "user": "KennyGoers", "labels": ["bug"], "created": "2015-10-10 22:39:05", "closed": "2015-10-31 00:18:29", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "null byte in User-Agent header after updating to okhttp 2.5.0", "body": "This is a very intermittent issue that I've only been able to see on the Moto G.\n\nIn my client I set a header with `User-Agent: fake` but `MockWebServer` reads it strangely.\n\n``` text\njava.lang.IllegalArgumentException: Unexpected char 0x00 at 5 in header value: fake\ufffdfake\n    at com.squareup.okhttp.Headers$Builder.checkNameAndValue(Headers.java:295)\n    at com.squareup.okhttp.Headers$Builder.add(Headers.java:245)\n    at com.squareup.okhttp.mockwebserver.MockWebServer$FramedSocketHandler.readRequest(MockWebServer.java:890)\n    at com.squareup.okhttp.mockwebserver.MockWebServer$FramedSocketHandler.receive(MockWebServer.java:859)\n    at com.squareup.okhttp.internal.framed.FramedConnection$Reader$1.execute(FramedConnection.java:648)\n    at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n    at java.lang.Thread.run(Thread.java:818)\n\n```\n", "url": "https://github.com/square/okhttp/issues/1906", "user": "brennantaylor", "labels": ["bug"], "created": "2015-10-08 00:15:38", "closed": "2015-11-22 15:25:59", "commits": {"d1bd642d1af49add4d7a4dcbba2fa89a78681ce7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "bf560c1b253c1a6d157ee4839f4bb1b31a790f48": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 45.000277777777775, "commitsDetails": [{"commitHash": "d1bd642d1af49add4d7a4dcbba2fa89a78681ce7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bf560c1b253c1a6d157ee4839f4bb1b31a790f48", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["85310b1f88e082a244043be36aac49772677f052"], "nameRev": "bf560c1b253c1a6d157ee4839f4bb1b31a790f48 tags/parent-2.6.0~2^2", "commitMessage": "Fix HTTP/2 bug where we were using SPDY/3 style header concatenation.\n\nWhen multiple headers have the same value in SPDY/3, they are concantenated\nand separated by \\u0000.\n\nWhen multiple headers have the same value in HTTP/2, they are each written\nindependently.\n\nThis fixes the problem and rearranges the code to share less behavior than\npreviously. It gets us closer to being able to drop SPDY/3.\n\nCloses https://github.com/square/okhttp/issues/1906\n", "commitDateTime": "2015-11-22 10:25:50", "authoredDateTime": "2015-11-21 18:41:48", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HeadersTest.java", "insertions": 12, "deletions": 14, "lines": 26}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/FramedTransport.java", "insertions": 114, "deletions": 60, "lines": 174}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler.readRequest(com.squareup.okhttp.internal.framed.FramedStream)", "TOT": 15, "UPD": 0, "INS": 6, "MOV": 8, "DEL": 1}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.repeatedHeaderNames()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.repeatedHeaderNames_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.repeatedHeaderNames_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HeadersTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HeadersTest.toNameValueBlock()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HeadersTest.toNameValueBlockDropsForbiddenHeadersSpdy3()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HeadersTest.toNameValueBlockDropsForbiddenHeadersHttp2()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HeadersTest.readNameValueBlockDropsForbiddenHeadersHttp2()", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HeadersTest.parseNameValueBlock()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HeadersTest.readNameValueBlockDropsForbiddenHeadersSpdy3()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FramedTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport", "TOT": 57, "UPD": 7, "INS": 30, "MOV": 15, "DEL": 5}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.writeNameValueBlock(com.squareup.okhttp.Request,com.squareup.okhttp.Protocol)", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.readNameValueBlock(java.util.List,com.squareup.okhttp.Protocol)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.isProhibitedHeader(com.squareup.okhttp.Protocol,okio.ByteString)", "TOT": 21, "UPD": 7, "INS": 0, "MOV": 10, "DEL": 4}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.writeRequestHeaders(com.squareup.okhttp.Request)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.readResponseHeaders()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.http2HeadersList(com.squareup.okhttp.Request)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.readHttp2HeadersList(java.util.List)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.spdy3HeadersList(com.squareup.okhttp.Request)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.FramedTransport.readSpdy3HeadersList(java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bf560c1b253c1a6d157ee4839f4bb1b31a790f48"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 121.0, "deletions": 61.0, "lines": 182.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 124.0, "UPD": 19.0, "INS": 45.0, "MOV": 43.0, "DEL": 17.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http", "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.FramedTransport.writeRequestHeaders(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.FramedTransport.http2HeadersList(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.FramedTransport.readHttp2HeadersList(java.util.List)", "com.squareup.okhttp.internal.http.FramedTransport.writeNameValueBlock(com.squareup.okhttp.Request,com.squareup.okhttp.Protocol)", "com.squareup.okhttp.internal.http.FramedTransport.readNameValueBlock(java.util.List,com.squareup.okhttp.Protocol)", "com.squareup.okhttp.internal.http.FramedTransport.isProhibitedHeader(com.squareup.okhttp.Protocol,okio.ByteString)", "com.squareup.okhttp.internal.http.FramedTransport", "com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler.readRequest(com.squareup.okhttp.internal.framed.FramedStream)", "com.squareup.okhttp.internal.http.FramedTransport.readSpdy3HeadersList(java.util.List)", "com.squareup.okhttp.internal.http.FramedTransport.spdy3HeadersList(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.FramedTransport.readResponseHeaders()"]}, {"title": "HttpUrl.Builder.fragment() should accept null", "body": "The query() method accepts null gracefully but the fragment() method does not and throws an IllegalArgumentException.   Seems like both should be treated the same.  The same should apply to encodedFragment() as well.\n\nIt makes something like this hard to do:\n\n``` java\nHttpUrl url = HttpUrl.parse(urlStr);\nString fragment = url.fragment();\nfragment = cleanup(fragment)\nreturn url.newBuilder()\n                .fragment(fragment)\n                .toString();\n```\n\nMore than willing to make the PR if necessary.\n", "url": "https://github.com/square/okhttp/issues/1905", "user": "srwilson", "labels": ["bug"], "created": "2015-10-07 22:45:15", "closed": "2015-11-01 02:39:00", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "Cache stops being written to when java.io.InterruptedIOException: thread interrupted", "body": "When requesting tens of files in separate threads, cancelling some results in an _java.io.InterruptedIOException: thread interrupted_ exception that causes [<code>hasJournalErrors = true;</code>](https://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java#L305).\n\nConsequently, within <code>private synchronized Editor edit(String key, long expectedSequenceNumber)</code> the cache is no longer updated because of [<code>hasJournalErrors</code>](https://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java#L467).\n\nOnce in this state I do not believe that <code>rebuildJournal();</code> is called until the cache is reinitialized.  I looked in [<code>journalRebuildRequired()</code>](https://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java#L434) but that does not consider the hasJournalErrors flag.\n\nPerhaps I should guard against threads being cancelled that are writing to the cache?  RFC.\n\n<img width=\"430\" alt=\"okhttp\" src=\"https://cloud.githubusercontent.com/assets/576719/10345116/3d54eb50-6d1f-11e5-9a3d-3b6d20472011.png\">\n", "url": "https://github.com/square/okhttp/issues/1903", "user": "snodnipper", "labels": ["bug"], "created": "2015-10-07 17:22:39", "closed": "2020-03-29 18:48:11", "commits": {}, "ttf": 1635.0002777777777, "commitsDetails": []}, {"title": "Recover gracefully from Thread.interrupt()", "body": "Using 2.5.0 and excessive / unnecessary close() calls I still get a StrictMode error.  I notice the glide folk had an [issue](https://github.com/bumptech/glide/issues/474) logged that looked similar.  Both are using an ExecutorService.  Perhaps this just boils down to just 'Android / StrictMode' and can be simply ignored -  rfc.\n\n```\n    {\n        mCacheControl = new CacheControl.Builder()\n                .maxStale(90, TimeUnit.DAYS)\n                .maxAge(3, TimeUnit.DAYS)\n                .build();\n    }\n\n    public byte[] getData(String url) throws IOException {\n        Request request = new Request.Builder()\n                .cacheControl(mCacheControl)\n                .url(url)\n                .build();\n\n        byte[] result = null;\n        Response resp = null;\n\n        try {\n            resp = mClient.newCall(request).execute();\n            if (resp.body().contentType() != null) {\n                result = resp.body().bytes();\n                resp.body().close();\n            }\n        } catch (Exception e) {\n            if (resp != null && resp.body() != null) {\n                try {\n                    resp.body().close();\n                } catch (IOException e2) {\n                    Timber.e(e2, \"Potential leak - cannot close body\");\n                }\n            }\n        } finally {\n            if (resp != null && resp.body() != null) {\n                try {\n                    resp.body().close();\n                } catch (IOException e) {\n                    Timber.e(e, \"Potential leak - cannot close body\");\n                }\n            }\n        }\n        return result;\n    }\n```\n\n```\nE/StrictMode(32187): A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\nE/StrictMode(32187): java.lang.Throwable: Explicit termination method 'close' not called\nE/StrictMode(32187):    at dalvik.system.CloseGuard.open(CloseGuard.java:184)\nE/StrictMode(32187):    at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:287)\nE/StrictMode(32187):    at com.squareup.okhttp.Connection.connectTls(Connection.java:235)\nE/StrictMode(32187):    at com.squareup.okhttp.Connection.connectSocket(Connection.java:199)\nE/StrictMode(32187):    at com.squareup.okhttp.Connection.connect(Connection.java:172)\nE/StrictMode(32187):    at com.squareup.okhttp.Connection.connectAndSetOwner(Connection.java:367)\nE/StrictMode(32187):    at com.squareup.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:128)\nE/StrictMode(32187):    at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:328)\nE/StrictMode(32187):    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:245)\nE/StrictMode(32187):    at com.squareup.okhttp.Call.getResponse(Call.java:267)\nE/StrictMode(32187):    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:224)\nE/StrictMode(32187):    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:195)\nE/StrictMode(32187):    at com.squareup.okhttp.Call.execute(Call.java:79)\nE/StrictMode(32187):    at uk.organisation.samples.gis.http.DownloaderImpl.getData(DownloaderImpl.java:88)\nE/StrictMode(32187):    at uk.organisation.samples.gis.layers.MapLayer.getTile(MapLayer.java:156)\nE/StrictMode(32187):    at com.gis.android.map.TiledServiceLayer$1.run(SourceFile:412)\nE/StrictMode(32187):    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\nE/StrictMode(32187):    at java.util.concurrent.FutureTask.run(FutureTask.java:237)\nE/StrictMode(32187):    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\nE/StrictMode(32187):    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\nE/StrictMode(32187):    at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/square/okhttp/issues/1902", "user": "snodnipper", "labels": ["bug", "enhancement"], "created": "2015-10-07 13:28:38", "closed": "2020-04-11 14:18:32", "commits": {}, "ttf": 1648.0002777777777, "commitsDetails": []}, {"title": "Http2 is not always negotiated for Android 5.+ phones connecting to H2/SPDY enabled server", "body": "Our server supports both H2 and SPDY, but based on the com.squareup.okhttp.Response.protocol fields, on 20% to 30% of the requests from our test lollipop phones to our servers are using H2, the rest are still using Http/1.1.\n\nIs this a bug or okhttp choose the protocol between h2 and http/1.1 based on some heuristics? Thanks for your clarification.\n", "url": "https://github.com/square/okhttp/issues/1895", "user": "zhihuawensc", "labels": ["bug"], "created": "2015-10-03 21:21:49", "closed": "2015-11-02 19:38:23", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "Issues with SPDY and CloudFlare", "body": "Hi guys, sorry of this is a dupe, having a hard time finding an exact match with all the existing issues.\n\nSimilar to [this SO post](http://stackoverflow.com/questions/24190507/what-causes-java-io-ioexception-stream-was-reset-cancel-with-okhttp-and-spdy), I am seeing intermittent request failures (IOException: Canceled) when making requests to a server which has Cloudflare in front of it.\n\nIt's not really reproducible reliably, and it doesn't seem to happen when I breakpoint around the failures. Forcing a downgrade to 1.1 works fine, but is obviously not preferable. Any suggestions? I'm using the latest version, I believe -- 2.5.0.\n", "url": "https://github.com/square/okhttp/issues/1882", "user": "shortstuffsushi", "labels": ["bug"], "created": "2015-09-28 18:50:26", "closed": "2015-11-21 22:51:16", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "HttpUrl.uri() not encoding enough to create valid URI instances.", "body": "``` java\nHttpUrl url = new Builder() //\n    .scheme(\"http\")\n    .host(\"example.com\")\n    .addPathSegment(\"data=[out:json];node[\\\"name\\\"~\\\"Karlsruhe\\\"][\\\"place\\\"~\\\"city|village|town\\\"];out body;\")\n    .build();\nSystem.out.println(url);\nSystem.out.println(url.uri());\n```\n\n```\nhttp://example.com/data=[out:json];node[%22name%22~%22Karlsruhe%22][%22place%22~%22city%7Cvillage%7Ctown%22];out%20body;\nException in thread \"main\" java.lang.IllegalStateException: not valid as a java.net.URI: http://example.com/data=[out:json];node[%22name%22~%22Karlsruhe%22][%22place%22~%22city%7Cvillage%7Ctown%22];out%20body;\n```\n", "url": "https://github.com/square/okhttp/issues/1872", "user": "JakeWharton", "labels": ["bug"], "created": "2015-09-25 19:17:14", "closed": "2015-11-01 17:45:49", "commits": {"8040b7a7e9eee80cbeeb9635119c7355141cf54e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "26f9e40543f166ab956a15cf841352bf0e58395b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "9a57be639e445c3098a89afe39f8f0666680c3ce": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "080e7536ab8c2d07db58628f75a4140012e2a581": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "8040b7a7e9eee80cbeeb9635119c7355141cf54e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "26f9e40543f166ab956a15cf841352bf0e58395b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9a57be639e445c3098a89afe39f8f0666680c3ce", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "080e7536ab8c2d07db58628f75a4140012e2a581", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["071efc645182aee73454bbe7f5bc37a8eb8623fa"], "nameRev": "080e7536ab8c2d07db58628f75a4140012e2a581 tags/parent-2.6.0~20^2", "commitMessage": "Encode enough to make URI happy.\n\nPlus a bunch of test cases around this unfortunate case.\n\nCloses https://github.com/square/okhttp/issues/1872\n", "commitDateTime": "2015-11-01 12:32:27", "authoredDateTime": "2015-11-01 12:16:09", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java", "insertions": 105, "deletions": 12, "lines": 117}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/UrlComponentEncodingTester.java", "insertions": 32, "deletions": 21, "lines": 53}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java", "insertions": 38, "deletions": 18, "lines": 56}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriSpecialPathCharacters()", "TOT": 18, "UPD": 5, "INS": 0, "MOV": 10, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.authorityWithMultipleColons()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriWithUsernameNoPassword()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriUsernameSpecialCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriPasswordSpecialCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriPathSpecialCharacters()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriQueryParameterNameSpecialCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriQueryParameterValueSpecialCharacters()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriQueryValueSpecialCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriFragmentSpecialCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.toUriWithMalformedPercentEscape()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.authorityWithMultipleAtSigns()", "TOT": 10, "UPD": 0, "INS": 6, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.URLConnectionTest.invalidHost()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.URLConnectionTest.malformedUrlThrowsUnknownHostException()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UrlComponentEncodingTester.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.testToUri(int,com.squareup.okhttp.UrlComponentEncodingTester$Encoding,com.squareup.okhttp.UrlComponentEncodingTester$Component)", "TOT": 18, "UPD": 6, "INS": 0, "MOV": 10, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.skipForUri(int[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.test(com.squareup.okhttp.UrlComponentEncodingTester$Component)", "TOT": 9, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.testFromUri(int,com.squareup.okhttp.UrlComponentEncodingTester$Encoding,com.squareup.okhttp.UrlComponentEncodingTester$Component)", "TOT": 13, "UPD": 3, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.Component.4.set(com.squareup.okhttp.HttpUrl$Builder,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.Component.5.set(com.squareup.okhttp.HttpUrl$Builder,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.testUri(int,com.squareup.okhttp.UrlComponentEncodingTester$Encoding,com.squareup.okhttp.UrlComponentEncodingTester$Component,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.Component.4.get(com.squareup.okhttp.HttpUrl)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.Component.5.get(com.squareup.okhttp.HttpUrl)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpUrl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrl.uri()", "TOT": 9, "UPD": 3, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.newBuilder()", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.domainToAscii(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.reencodeForUri()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["080e7536ab8c2d07db58628f75a4140012e2a581"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 38.0, "deletions": 18.0, "lines": 56.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 21.0, "UPD": 4.0, "INS": 6.0, "MOV": 8.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.HttpUrl.Builder.domainToAscii(java.lang.String)", "com.squareup.okhttp.HttpUrl", "com.squareup.okhttp.HttpUrl.newBuilder()", "com.squareup.okhttp.HttpUrl.Builder.reencodeForUri()", "com.squareup.okhttp.HttpUrl.uri()"]}, {"title": "Websocket creates threads with url as name, which captures tokens in urls in crashlytics", "body": "We use okhttp-ws to communicate with our server, and as an optimization step, we pass an `oauth2` token in the websocket url to the server (to avoid making an extra auth request every time we connect), and since we use crashlytics as a reporting tool for our exceptions, we noticed that oauth2 tokens are captured in the url as the name of thread that the websocket creates.\n", "url": "https://github.com/square/okhttp/issues/1838", "user": "osama-lionheart", "labels": ["bug", "websockets"], "created": "2015-09-04 21:55:52", "closed": "2016-09-18 00:56:59", "commits": {}, "ttf": 379.0002777777778, "commitsDetails": []}, {"title": "Url not valid for OkHttp Request, but valid for HttpUrlConnection", "body": "Could you describe why http request to http://ad.dc2.adtech.de/adserv/ADTECH;grp=[group] with using HttpUrlConnection are working fine:\n\n``` java\nString url =\"http://ad.dc2.adtech.de/adserv/ADTECH;grp=[group]\";\nURL u = null;\ntry {\n    u = new URL(url);\n} catch (MalformedURLException e) {\n    e.printStackTrace();\n    return;\n}\ntry {\n    HttpURLConnection connection = (HttpURLConnection) u.openConnection();\n    L.d(\"response code \"+ connection.getResponseCode());\n    connection.disconnect();\n} catch (IOException e) {\n    e.printStackTrace();\n}\n```\n\nwhereas request with using OkHttp return error:\n\n``` java\nString urlString =\"http://ad.dc2.adtech.de/adserv/ADTECH;grp=[group]\";\nURL url = null;\ntry {\n    url = new URL(urlString);\n} catch (MalformedURLException e) {\n    e.printStackTrace();\n    return;\n}\nRequest request = new Request.Builder()\n        .url(url)\n        .build();\n\nokHttpClient.newCall(request).enqueue(new Callback() {\n    @Override\n    public void onFailure(Request request, IOException e) {\n        e.printStackTrace();\n    }\n\n    @Override\n    public void onResponse(Response response) throws IOException {\n    }\n});\n```\n\nError:\n\n```\njava.io.IOException: not valid as a java.net.URI: http://ad.dc2.ad\n       tech.de/adserv/ADTECH;grp=[group]\n    W      at com.squareup.okhttp.Request.uri(Request.java:61)\n    W      at com.squareup.okhttp.internal.http.HttpEngine.networkRequest(HttpEn\n       gine.java:714)\n    W      at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngin\n       e.java:222)\n    W      at com.squareup.okhttp.Call.getResponse(Call.java:267)\n    W      at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.\n       java:224)\n    W      at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java\n       :195)\n    W      at com.squareup.okhttp.Call.access$100(Call.java:34)\n    W      at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:162)\n    W      at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:\n       33)\n    W      at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecut\n       or.java:1112)\n    W      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecu\n       tor.java:587)\n    W      at java.lang.Thread.run(Thread.java:818)\n    W  com.squareup.okhttp.Call$AsyncCall.execute(Call.java:162)\n    W      at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:\n       33)\n    W      at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecut\n       or.java:1112)\n    W      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecu\n       tor.java:587)\n    W      at java.lang.Thread.run(Thread.java:818)\n```\n\nTested on OkHttp v2.5 \nHow to make it works with using OkHttp?\n", "url": "https://github.com/square/okhttp/issues/1836", "user": "mr-procrastinator", "labels": ["bug"], "created": "2015-09-03 11:43:59", "closed": "2015-11-01 17:45:58", "commits": {}, "ttf": 59.000277777777775, "commitsDetails": []}, {"title": "HttpURLConnection: Behavior change around non-LDH ASCII characters in host names", "body": "Creating to have a discussion. If I create a URL containing ASCII codes besides letters, digits and hyphens in the authority/host I get a failure. e.g.\n\n```\nString host = \"host\\u0001\";\nHttpUrl expected = HttpUrl.parse(\"http://\" + host + \"/\");\nassertEquals(host, expected.host());\n```\n\nThe ASCII code 0x01 in the host is not transformed (underneath, because IDN.toAscii(host) is used). \n\nAfter the switch to HttpUrl internally, this can leads to problems with the host header with HttpURLConnectionImpl. The host header checking is currently more strict than the host parsing.\n\nIn HttpEngine this code fails with an IllegalArgumentException here:\n\n```\nif (request.header(\"Host\") == null) {\n  result.header(\"Host\", Util.hostHeader(request.httpUrl()));\n}\n```\n\nPrevious behavior was to encode the host: e.g. \"host\\u0001\" -> \"host%01\"\n\nIdeally from a \"least likely to break apps\" PoV we would keep the old behavior.\nThe new behavior seems likely to have an impact because it involves throwing a runtime exception.\nI could see us throwing an UnknownHostException instead but I'd need to check the implications. (For automatic following of redirects I can see us refusing to follow the redirect if the Location is found to be incorrect).\n\nhttps://url.spec.whatwg.org/#host-parsing suggests the OkHttp implementation is correct, but https://url.spec.whatwg.org/#host-syntax suggests codes like 0x01 are not valid.\n\nThe whatwg spec also suggests that an encoded value (like %01) would break the host-parsing rules, but probably not the host-syntax.\n\nAny suggestions?\n", "url": "https://github.com/square/okhttp/issues/1833", "user": "nfuller", "labels": ["bug"], "created": "2015-09-02 13:46:33", "closed": "2015-11-02 09:29:02", "commits": {}, "ttf": 60.000277777777775, "commitsDetails": []}, {"title": "NPE in ConnectionSpec.tlsVersions()", "body": "At line 110 in ConnectionSpec.tlsVersions() a NPE will occur, when\ntlsVersions is null (e.g. for HTTP connections).\nTherefore above the line\n\n```\n    TlsVersion[] result = new TlsVersion[tlsVersions.length];\n```\n\nthese lines should be inserted\n\n```\n    if (tlsVersions == null || tlsVersions.length == 0) {\n        return Collections.emptyList();\n    }\n```\n", "url": "https://github.com/square/okhttp/issues/1831", "user": "juergenzimmermann", "labels": ["bug"], "created": "2015-08-31 07:28:27", "closed": "2015-11-03 03:19:42", "commits": {"6257d23aa336f2cfcbef8db7a08c3dccfe52da7f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0852b7715840f6ad2ba7fa862a88bb181ea94474": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "84a6785aacdddea74fdeb5f3acc775bf432a2cad": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "247330f0222bd4c193d53953d2d32cd9c7e355c1": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "784fc03fd41c6350943e0dcfa644d64be173dfa3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 63.000277777777775, "commitsDetails": [{"commitHash": "6257d23aa336f2cfcbef8db7a08c3dccfe52da7f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0852b7715840f6ad2ba7fa862a88bb181ea94474", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "84a6785aacdddea74fdeb5f3acc775bf432a2cad", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "247330f0222bd4c193d53953d2d32cd9c7e355c1", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "784fc03fd41c6350943e0dcfa644d64be173dfa3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["f20329132f9cdaeed8dabcdef05c9a3df5bdf161"], "nameRev": "784fc03fd41c6350943e0dcfa644d64be173dfa3 tags/parent-2.6.0~18^2", "commitMessage": "Make ConnectionSpec more uniform.\n\nCloses https://github.com/square/okhttp/issues/1831\n", "commitDateTime": "2015-11-02 22:19:32", "authoredDateTime": "2015-11-02 20:18:28", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionSpecTest.java", "insertions": 118, "deletions": 27, "lines": 145}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/ConnectionSpec.java", "insertions": 80, "deletions": 99, "lines": 179}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/TlsVersion.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Util.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionSpecTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.createSet(java.lang.String[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.tls_defaultCiphers_noFallbackIndicator()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.tls_defaultCiphers_withFallbackIndicator()", "TOT": 12, "UPD": 3, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.tls_explicitCiphers()", "TOT": 13, "UPD": 3, "INS": 1, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.noTlsVersions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.noCipherSuites()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.allEnabledCipherSuites()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.allEnabledTlsVersions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.equalsAndHashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.allEnabledToString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.simpleToString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpecTest.tls_missingRequiredCipher()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionSpec.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.contains(java.lang.Object[],java.lang.Object)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.toString()", "TOT": 22, "UPD": 3, "INS": 7, "MOV": 9, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.isCompatible(javax.net.ssl.SSLSocket)", "TOT": 18, "UPD": 3, "INS": 0, "MOV": 11, "DEL": 4}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.supportedSpec(javax.net.ssl.SSLSocket,boolean)", "TOT": 29, "UPD": 3, "INS": 4, "MOV": 20, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.Builder.cipherSuites(java.lang.String[])", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.apply(javax.net.ssl.SSLSocket,boolean)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.Builder.cipherSuites(com.squareup.okhttp.CipherSuite[])", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.Builder.tlsVersions(com.squareup.okhttp.TlsVersion[])", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.Builder.tlsVersions(java.lang.String[])", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.tlsVersions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.Builder.allEnabledCipherSuites()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.Builder.allEnabledTlsVersions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionSpec.nonEmptyIntersection(java.lang.String[],java.lang.String[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TlsVersion.java", "spoonMethods": []}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Util.contains(java.lang.String[],java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.Util.concat(java.lang.String[],java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["784fc03fd41c6350943e0dcfa644d64be173dfa3"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 92.0, "deletions": 100.0, "lines": 192.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 110.0, "UPD": 13.0, "INS": 26.0, "MOV": 52.0, "DEL": 19.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp", "okhttp/src/main/java/com/squareup/okhttp/internal"], "changesInPackagesSPOON": ["com.squareup.okhttp.ConnectionSpec.Builder.cipherSuites(com.squareup.okhttp.CipherSuite[])", "com.squareup.okhttp.ConnectionSpec.toString()", "com.squareup.okhttp.ConnectionSpec.nonEmptyIntersection(java.lang.String[],java.lang.String[])", "com.squareup.okhttp.ConnectionSpec.isCompatible(javax.net.ssl.SSLSocket)", "com.squareup.okhttp.ConnectionSpec.Builder.allEnabledCipherSuites()", "com.squareup.okhttp.internal.Util.contains(java.lang.String[],java.lang.String)", "com.squareup.okhttp.internal.Util.concat(java.lang.String[],java.lang.String)", "com.squareup.okhttp.ConnectionSpec.Builder.cipherSuites(java.lang.String[])", "com.squareup.okhttp.ConnectionSpec", "com.squareup.okhttp.ConnectionSpec.Builder.tlsVersions(java.lang.String[])", "com.squareup.okhttp.ConnectionSpec.apply(javax.net.ssl.SSLSocket,boolean)", "com.squareup.okhttp.ConnectionSpec.Builder.tlsVersions(com.squareup.okhttp.TlsVersion[])", "com.squareup.okhttp.ConnectionSpec.contains(java.lang.Object[],java.lang.Object)", "com.squareup.okhttp.ConnectionSpec.supportedSpec(javax.net.ssl.SSLSocket,boolean)", "com.squareup.okhttp.ConnectionSpec.tlsVersions()", "com.squareup.okhttp.ConnectionSpec.Builder.allEnabledTlsVersions()"]}, {"title": "Websocket enqueue with cache produces a crash when server refuses connection", "body": "Setup\n\n```\nFile cacheDirectory = new File(app.getCacheDir(), \"network_cache\");\n        if (!cacheDirectory.exists()) {\n            cacheDirectory.mkdir();\n        }\n        Cache cache = new Cache(cacheDirectory, CACHE_MAX_SIZE);\n        OkHttpClient okHttpClient = new OkHttpClient();\n        okHttpClient.networkInterceptors().add(new StethoInterceptor());\n        okHttpClient.setCache(cache);\n```\n\nCauses this exception with no possibility to be caught:\n\n```\nProcess: xx.xx.xx.debug, PID: 8227\n    java.lang.NullPointerException: Attempt to invoke virtual method 'okio.BufferedSource com.squareup.okhttp.ResponseBody.source()' on a null object reference\n            at com.squareup.okhttp.internal.http.HttpEngine.cacheWritingResponse(HttpEngine.java:935)\n            at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:821)\n            at com.squareup.okhttp.Call.getResponse(Call.java:268)\n            at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:224)\n            at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:195)\n            at com.squareup.okhttp.Call.access$100(Call.java:34)\n            at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:162)\n            at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n            at java.lang.Thread.run(Thread.java:818)\n```\n\nRemoving the cache fixes the issue\n\n```\n        OkHttpClient okHttpClient = new OkHttpClient();\n        okHttpClient.networkInterceptors().add(new StethoInterceptor());\n```\n\nI know this is an edge case but it would be nice to be able to catch this exception somewhere.\n\nThis happens with okhttp 2.5 and okhttp-ws 2.5. With  okhttp 2.4 and okhttp-ws 2.4 we got a crash with no stacktrace\n", "url": "https://github.com/square/okhttp/issues/1826", "user": "andresesfm", "labels": ["bug", "websockets"], "created": "2015-08-27 17:44:48", "closed": "2016-09-18 01:44:21", "commits": {}, "ttf": 387.0002777777778, "commitsDetails": []}, {"title": "OkHttp.Builder#setQueryParameter uses too optimistic encoding", "body": "The following code throws an exception when HttpUrl tries to build a java.net.URI, which is overly strict\u2026\n\n``` java\n      String jsonObject = \"{}\";\n      OkHttpClient client = new OkHttpClient();\n      Request request = new Request.Builder()\n          .url(HttpUrl.parse(\"http://www.example.com\")\n              .newBuilder()\n              // HttpUrl.Builder doesn't properly encode curly braces (at least from java.net.URI's point of view)\n              .setQueryParameter(\"config\", jsonObject)\n              // this works, but URLEncoder!\n              //.setEncodedQueryParameter(\"config\", URLEncoder.encode(jsonObject))\n              .build())\n          .get()\n          .build();\n      Response response = client.newCall(request).execute();\n```\n\nRegrettably, OkHttp should use a more extended set of characters to encode, similar to the 2.5.0 change with URL encoding.\n", "url": "https://github.com/square/okhttp/issues/1825", "user": "paour", "labels": ["bug"], "created": "2015-08-27 17:01:43", "closed": "2015-11-01 17:52:56", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "MockWebServer#disconnectHalfway() test fails when URLConnection used in tests is OkHttp", "body": "On Android the disconnectHalfway() test fails due to a ProtocolException.\n\n```\njava.net.ProtocolException: unexpected end of stream\n    at com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:421)\n    at com.android.okhttp.okio.RealBufferedSource$1.read(RealBufferedSource.java:338)\n    at com.squareup.okhttp.mockwebserver.MockWebServerTest.disconnectHalfway(MockWebServerTest.java:267)\n```\n\nWhen run against OpenJDK 7 it passes.\nThe difference is because Android uses OkHttp to supply the URLConnection implementation, and OkHttp treats this as a ProtocolException rather than a simple \"end of stream\". I believe the ProtocolException has been the behavior for a while and seems reasonable if the server has promised more bytes than were received.\n\nIf the goal of the test is to confirm the DISCONNECT_DURING_RESPONSE_BODY policy is operating correctly I suspect the answer here is to accept both behaviors.\n\nI can produce the change but want to check you agree before I do.\n", "url": "https://github.com/square/okhttp/issues/1824", "user": "nfuller", "labels": ["bug", "tests"], "created": "2015-08-27 15:55:36", "closed": "2015-12-19 18:41:30", "commits": {}, "ttf": 114.00027777777778, "commitsDetails": []}, {"title": "WebSocketCall IllegalStateException", "body": "Despite the \"experimental\" note on okhttp-ws page, I'm currently using it for an App with ~4.5k daily active users and I'm seeing some crash reports of:\n\n```\nFatal Exception: java.lang.IllegalStateException\nUnable to take ownership of connection.\n```\n\nat\n\n```\ncom.squareup.okhttp.ws.WebSocketCall.createWebSocket (WebSocketCall.java:157)\n```\n\nI can see that there is a TODO in the source for this case (https://github.com/square/okhttp/blob/master/okhttp-ws/src/main/java/com/squareup/okhttp/ws/WebSocketCall.java#L155). Is the ws library still in development (as in: should I expect to see a fix soon)?\n", "url": "https://github.com/square/okhttp/issues/1807", "user": "tinsukE", "labels": ["bug", "websockets"], "created": "2015-08-17 10:25:38", "closed": "2015-12-01 04:19:18", "commits": {}, "ttf": 105.00027777777778, "commitsDetails": []}, {"title": "IllegalStateException in Connection.closeIfOwnedBy()", "body": "Been seeing a few of these, mostly on Lollipop 5.0.x\nOffending line is `if (isFramed()) throw new IllegalStateException();`\n\n```\nat com.squareup.okhttp.Connection.closeIfOwnedBy(Connection.java:137)\nat com.squareup.okhttp.OkHttpClient$1.closeIfOwnedBy(OkHttpClient.java:75)\nat com.squareup.okhttp.internal.http.HttpEngine.disconnect(HttpEngine.java:577)\nat com.squareup.okhttp.Call.cancel(Call.java:122)\nat retrofit.OkHttpCall.cancel(OkHttpCall.java:158)\nat retrofit.ObservableCallAdapterFactory$CallOnSubscribe$1.call(ObservableCallAdapterFactory.java:92)\nat rx.subscriptions.BooleanSubscription.unsubscribe(BooleanSubscription.java:72)\nat rx.internal.util.SubscriptionList.unsubscribeFromAll(SubscriptionList.java:124)\nat rx.internal.util.SubscriptionList.unsubscribe(SubscriptionList.java:113)\nat rx.Subscriber.unsubscribe(Subscriber.java:81)\nat rx.internal.operators.OperatorUnsubscribeOn$2$1.call(OperatorUnsubscribeOn.java:66)\nat rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\nat java.util.concurrent.FutureTask.run(FutureTask.java:237)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:152)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:265)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\nat java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/square/okhttp/issues/1805", "user": "felipecsl", "labels": ["bug"], "created": "2015-08-13 20:40:18", "closed": "2015-12-01 04:18:44", "commits": {}, "ttf": 109.00027777777778, "commitsDetails": []}, {"title": "java.Util.NoSuchElementException in DiskLruCache", "body": "I am unable to reproduce this exception, but I've seen it randomly occur several times while using my app.\n\n```\njava.util.NoSuchElementException\n        at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:349)\n        at java.util.LinkedHashMap$ValueIterator.next(LinkedHashMap.java:370)\n        at com.squareup.okhttp.internal.DiskLruCache.trimToSize(DiskLruCache.java:664)\n        at com.squareup.okhttp.internal.DiskLruCache.access$200(DiskLruCache.java:88)\n        at com.squareup.okhttp.internal.DiskLruCache$1.run(DiskLruCache.java:175)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n        at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/square/okhttp/issues/1804", "user": "nwalters512", "labels": ["bug"], "created": "2015-08-11 23:16:59", "closed": "2016-03-31 11:57:50", "commits": {}, "ttf": 232.00027777777777, "commitsDetails": []}, {"title": "AsyncCall NPE's if an interceptor throws before the call is attempted.", "body": "AsyncCall throws an uncaught NullPointerException [here](https://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/Call.java#L175) because engine is null, having never been initialized, if the call was never attempted.  For example, this can happen if an (\"application-level\") interceptor aborted the call by throwing an IOException before the call was ever attempted.\n\nI suggest that it could simply pass a null request to the callback in this case instead.\n", "url": "https://github.com/square/okhttp/issues/1801", "user": "GrahamFirst", "labels": ["bug"], "created": "2015-08-10 21:00:43", "closed": "2015-10-21 12:20:03", "commits": {}, "ttf": 71.00027777777778, "commitsDetails": []}, {"title": "Cannot cancel async post/get requests.", "body": "Cannot cancel async POST/GET requests. To reproduse it i use simple\nnode.js server, that accepts all incomming requests and just log\nit to console.\nSteps to reproduce:\n1. Make sure that a machine with the Node.js server is available\n   for a device with OkHttp client. (Server is not started!).\n2. Create POST request from OkHttp client.\n3. Wait a little (3-5 ceconds).\n4. Cancel request.\n5. Start Node.js server and track its output.\n6. Node.js accept POST request and process it.\n7. Wait for connection timeout period and got onFailure call on\n   OkHttp client.\n\nI.e. cancelled and not finished request comes to server and server\nhandle it.\n\nThe problem is in okhttp/internal/http/HttpEngine.java file\nLines 247-251:\n.....\nif (connection == null) {\n  connect();\n}\n\ntransport = Internal.instance.newTransport(connection, this);\n....\n\nWhile server is not started we are inside connect method until\nconnection timeout. If we try to cancel request at this time,\nthe disconnect method is called:\n\npublic void disconnect() {\n  if (transport != null) {\n    try {\n      transport.disconnect(this);\n    } catch (IOException ignored) {\n    }\n  }\n}\n\nIt does nothing as transport is not created yet (we are inside\nconnect method). After starting server the connect method\nreturns and next code correctly send request to server.\n\nFor post requests there is workaround: wrap RequestBody with\ncancellable body that throws IOException(\"Cancelled\") inside\nits methods in cancelled state. But it is not convinient. For\nget GET requests there is no any workaround.\n", "url": "https://github.com/square/okhttp/issues/1779", "user": "kdpdev", "labels": ["bug"], "created": "2015-08-01 08:00:22", "closed": "2015-08-03 05:32:48", "commits": {"b42e73f497eafe147667117202267ec756adff26": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "b42e73f497eafe147667117202267ec756adff26", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["1e5f3a967977db513585ed8f350a65ab3175e9ce"], "nameRev": "b42e73f497eafe147667117202267ec756adff26 tags/parent-2.5.0~10^2", "commitMessage": "Make call canceling more reliable.\n\nWe had a bug where the socket-being-connected wasn't being closed when the\napplication used Call.cancel(). The problem is that the SocketConnector model\nassumes the Connection doesn't want a Socket instance until it's fully\nconnected.\n\nThis moves the SocketConnector code back into Connection, removes a lot of\nnested try/catch blocks, and assigns a Socket instance as soon as its created.\n\nThis also likely fixes some bugs where sockets weren't being closed when\nan IOException or RouteException was thrown during connection. Now we always\nclose at the top level of connect() unless the connection is successful.\n\nhttps://github.com/square/okhttp/issues/1779\n", "commitDateTime": "2015-08-01 16:54:13", "authoredDateTime": "2015-08-01 16:54:13", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 60, "deletions": 6, "lines": 66}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Connection.java", "insertions": 207, "deletions": 29, "lines": 236}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 17, "deletions": 19, "lines": 36}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/SocketConnector.java", "insertions": 0, "deletions": 280, "lines": 280}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["b42e73f497eafe147667117202267ec756adff26"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 224, "deletions": 328, "lines": 552, "gitFilesChange": 3}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http", "okhttp/src/main/java/com/squareup/okhttp"]}, {"title": "PATCH Request cannot be empty in 2.4.0 but can be 2.3.0", "body": "I updated to 2.4.0 and it wasn't mentioned in the changelog that PATCH requests can no longer be empty. Is it possible to add this to the changelog or perhaps even allow it again?\n#1581 Might be relative as PATCH might've been missed?\n", "url": "https://github.com/square/okhttp/issues/1778", "user": "AndreasBackx", "labels": ["bug"], "created": "2015-07-31 13:43:02", "closed": "2015-08-02 01:50:56", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Cannot post cyrillic symbols with OkHttp.", "body": "I'm trying to post cyrillic login and password with OkHttp:\n\n```\nRequestBody formBody = new FormEncodingBuilder()\n    .add(\"login\", user)\n    .add(\"pass\", password)\n    .build();\n\nRequest request = new Request.Builder()\n    .addHeader(\"User-Agent\", USER_AGENT)\n    .addHeader(\"Connection\", \"keep-alive\")\n    .url(URL)\n    .post(formBody)\n    .build();\n\nOkHttpClient client = new OkHttpClient();\nResponse response = client.newCall(request).execute();\nif (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\nString responseBody = response.body().string();\n```\n\nWith latin symbols it works just fine.\n", "url": "https://github.com/square/okhttp/issues/1764", "user": "whyte624", "labels": ["bug"], "created": "2015-07-24 14:08:14", "closed": "2015-08-01 17:44:26", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "No retry/failover on Android with setConnectTimeout() set", "body": "When using OkHttpClient with setConnectTimeout() set to 10 seconds on Android, I get a SocketTimeoutException after 10 seconds if it picks an unreachable IP (another IP is reachable). \n\nWhen I do not call setConnectTimeout(), the request runs for a few minutes (seems to be different on different Android versions) while waiting for the unreachable IP and then correctly fails over to the reachable IP and returns response.\n\nOn desktop the behaviour is correct, the request always returns response from the one available IP and in a very short time.\n\nMy setup:\nDNS name with 2 IPv4 A addresses, 1 is unreachable.\nOkHttp 2.4.0\nAndroid 4.1.1 and 5.0\n\n```\njava.net.SocketTimeoutException: failed to connect to host/unreachable-ip (port 443) after 10000ms\nat libcore.io.IoBridge.connectErrno(IoBridge.java:159)\nat libcore.io.IoBridge.connect(IoBridge.java:112)\nat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:192)\nat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:459)\nat java.net.Socket.connect(Socket.java:842)\nat com.squareup.okhttp.internal.Platform$Android.connectSocket(Platform.java:190)\nat com.squareup.okhttp.internal.http.SocketConnector.connectRawSocket(SocketConnector.java:160)\nat com.squareup.okhttp.internal.http.SocketConnector.connectTls(SocketConnector.java:79)\nat com.squareup.okhttp.Connection.connect(Connection.java:143)\nat com.squareup.okhttp.Connection.connectAndSetOwner(Connection.java:185)\nat com.squareup.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:128)\nat com.squareup.okhttp.internal.http.HttpEngine.nextConnection(HttpEngine.java:341)\nat com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\nat com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:248)\nat com.squareup.okhttp.Call.getResponse(Call.java:273)\nat com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:230)\nat com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:201)\nat com.squareup.okhttp.Call.execute(Call.java:81)\n```\n", "url": "https://github.com/square/okhttp/issues/1736", "user": "matejsnoha", "labels": ["bug"], "created": "2015-06-29 14:42:25", "closed": "2015-12-21 22:53:43", "commits": {"8d9007baf93950c933fb0fcd06c347be3ac49e74": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "3b44fa37675c1d68298283ae4b8b45cd5771888d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 175.00027777777777, "commitsDetails": [{"commitHash": "8d9007baf93950c933fb0fcd06c347be3ac49e74", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3b44fa37675c1d68298283ae4b8b45cd5771888d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["00c9db7859ed4edac380b25c3be61afd9ece0e5d"], "nameRev": "3b44fa37675c1d68298283ae4b8b45cd5771888d tags/parent-3.0.0-RC1~30^2", "commitMessage": "Attempt an alternate route when a connect times out.\n\nThis changes the new allocations model to keep the same route unless it\nhas been specifically found to have connectivity problems. Previously we\nattempted to null out the route selector when a route succeeded; with\nthis we do the opposite by nulling out a route when it fails.\n\nCloses: https://github.com/square/okhttp/issues/1736\n", "commitDateTime": "2015-12-21 13:52:14", "authoredDateTime": "2015-12-20 11:32:49", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 30, "deletions": 3, "lines": 33}, {"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http/RecordingProxySelector.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http/RouteSelectorTest.java", "insertions": 17, "deletions": 4, "lines": 21}, {"filePath": "okhttp-urlconnection/src/main/java/okhttp3/internal/huc/HttpURLConnectionImpl.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-ws/src/main/java/okhttp3/ws/WebSocketCall.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/Call.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/Http1xStream.java", "insertions": 16, "deletions": 26, "lines": 42}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/Http2xStream.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpEngine.java", "insertions": 3, "deletions": 25, "lines": 28}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/StreamAllocation.java", "insertions": 35, "deletions": 79, "lines": 114}, {"filePath": "okhttp/src/main/java/okhttp3/internal/io/RealConnection.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.timeoutsNotRetried()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.connectTimeoutsAttemptsAlternateRoute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.makeFailingCall()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": []}, {"spoonFilePath": "RecordingProxySelector.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.RecordingProxySelector", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteSelectorTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.RouteSelectorTest.proxySelectorReturnsNull()", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.huc.HttpURLConnectionImpl.execute(boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "WebSocketCall.java", "spoonMethods": [{"spoonMethodName": "okhttp3.ws.WebSocketCall.StreamWebSocket.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Call.java", "spoonMethods": [{"spoonMethodName": "okhttp3.Call.getResponse(okhttp3.Request,boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Http1xStream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.Http1xStream.FixedLengthSource.read(okio.Buffer,long)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.FixedLengthSource.close()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.ChunkedSource.read(okio.Buffer,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.ChunkedSource.close()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.UnknownLengthSource.close()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.AbstractSource.unexpectedEndOfInput()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.AbstractSource.endOfInput(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.FixedLengthSource", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.ChunkedSource.readChunkSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.Http1xStream.UnknownLengthSource.read(okio.Buffer,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2xStream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.Http2xStream.StreamFinishingSource.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.HttpEngine.recover(okhttp3.internal.http.RouteException)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.HttpEngine.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamAllocation.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.StreamAllocation.findConnection(int,int,int,boolean)", "TOT": 9, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.isRecoverable(okhttp3.internal.http.RouteException)", "TOT": 12, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 8}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.connectionFailed(java.io.IOException)", "TOT": 21, "UPD": 4, "INS": 4, "MOV": 7, "DEL": 6}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.newStream(int,int,int,boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.streamFinished(okhttp3.internal.http.HttpStream)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.deallocate(boolean,boolean,boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.connectionFailed()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.recover(okhttp3.internal.http.RouteException)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.recover(java.io.IOException,okio.Sink)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.isRecoverable(java.io.IOException)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.streamFinished(boolean,okhttp3.internal.http.HttpStream)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.StreamAllocation.findHealthyConnection(int,int,int,boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.io.RealConnection", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3b44fa37675c1d68298283ae4b8b45cd5771888d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 59.0, "deletions": 135.0, "lines": 194.0, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 94.0, "UPD": 18.0, "INS": 26.0, "MOV": 25.0, "DEL": 25.0, "spoonFilesChanged": 9, "spoonMethodsChanged": 31}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-urlconnection/src/main/java/okhttp3/internal/huc", "okhttp/src/main/java/okhttp3", "okhttp-ws/src/main/java/okhttp3/ws", "okhttp/src/main/java/okhttp3/internal/http", "okhttp/src/main/java/okhttp3/internal/io"], "changesInPackagesSPOON": ["okhttp3.internal.http.Http1xStream.AbstractSource.unexpectedEndOfInput()", "okhttp3.internal.http.StreamAllocation.streamFinished(okhttp3.internal.http.HttpStream)", "okhttp3.ws.WebSocketCall.StreamWebSocket.close()", "okhttp3.Call.getResponse(okhttp3.Request,boolean)", "okhttp3.internal.http.StreamAllocation.connectionFailed(java.io.IOException)", "okhttp3.internal.http.Http1xStream.FixedLengthSource.read(okio.Buffer,long)", "okhttp3.internal.http.Http2xStream.StreamFinishingSource.close()", "okhttp3.internal.http.StreamAllocation.isRecoverable(java.io.IOException)", "okhttp3.internal.http.HttpEngine.recover(okhttp3.internal.http.RouteException)", "okhttp3.internal.http.StreamAllocation.streamFinished(boolean,okhttp3.internal.http.HttpStream)", "okhttp3.internal.http.HttpEngine.close()", "okhttp3.internal.http.RecordingProxySelector", "okhttp3.internal.http.Http1xStream.ChunkedSource.close()", "okhttp3.internal.io.RealConnection", "okhttp3.internal.huc.HttpURLConnectionImpl.execute(boolean)", "okhttp3.internal.http.Http1xStream.ChunkedSource.read(okio.Buffer,long)", "okhttp3.internal.http.StreamAllocation.findConnection(int,int,int,boolean)", "okhttp3.internal.http.Http1xStream.FixedLengthSource.close()", "okhttp3.internal.http.Http1xStream.ChunkedSource.readChunkSize()", "okhttp3.internal.http.StreamAllocation.isRecoverable(okhttp3.internal.http.RouteException)", "okhttp3.internal.http.StreamAllocation.newStream(int,int,int,boolean,boolean)", "okhttp3.internal.http.Http1xStream.AbstractSource.endOfInput(boolean)", "okhttp3.internal.http.StreamAllocation.recover(java.io.IOException,okio.Sink)", "okhttp3.internal.http.StreamAllocation.findHealthyConnection(int,int,int,boolean,boolean)", "okhttp3.internal.http.StreamAllocation.recover(okhttp3.internal.http.RouteException)", "okhttp3.internal.http.Http1xStream.FixedLengthSource", "okhttp3.internal.http.StreamAllocation.deallocate(boolean,boolean,boolean)", "okhttp3.internal.http.StreamAllocation.connectionFailed()", "okhttp3.internal.http.StreamAllocation", "okhttp3.internal.http.Http1xStream.UnknownLengthSource.read(okio.Buffer,long)", "okhttp3.internal.http.Http1xStream.UnknownLengthSource.close()"]}, {"title": "Sane default timeouts", "body": "Like this:\n\n```\n    OkHttpClient client = new OkHttpClient();\n    client.setConnectTimeout(15, TimeUnit.SECONDS);\n    client.setReadTimeout(15, TimeUnit.SECONDS);\n    client.setWriteTimeout(15, TimeUnit.SECONDS);\n```\n", "url": "https://github.com/square/okhttp/issues/1719", "user": "swankjesse", "labels": ["bug"], "created": "2015-06-21 19:43:19", "closed": "2015-06-22 00:55:40", "commits": {"0de14e992c228fd9de9fe78417788131bee00902": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0de14e992c228fd9de9fe78417788131bee00902", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["832038bdc25e38c7e9cfebff1bc81488fd819056"], "nameRev": "0de14e992c228fd9de9fe78417788131bee00902 tags/parent-2.5.0~20^2", "commitMessage": "Set default timeouts to ten seconds.\n\nCloses https://github.com/square/okhttp/issues/1719\n", "commitDateTime": "2015-06-21 18:00:33", "authoredDateTime": "2015-06-21 18:00:20", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/OkHttpClientTest.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OkHttpClientTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.OkHttpClientTest.copyWithDefaultsWhenDefaultIsAConstant()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClientTest.timeoutDefaults()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.OkHttpClient", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0de14e992c228fd9de9fe78417788131bee00902"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.OkHttpClient"]}, {"title": "FormEncodingBuilder throws exception when empty", "body": "I am trying to build a POST request, and in some cases there are no parameters that I need to provide. However, when I go to build the request without adding parameters, this line throws:\n\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/FormEncodingBuilder.java#L58\n\nIs this intended behavior? Is this a limitation imposed by HTTP?\n", "url": "https://github.com/square/okhttp/issues/1704", "user": "Wopple", "labels": ["bug"], "created": "2015-06-16 13:37:53", "closed": "2015-06-21 00:10:40", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "When server send message with Mask bit on, it goes to onFailure callback, not close the websocket", "body": "According to [rfc6455, chapter 5.1](http://tools.ietf.org/html/rfc6455#section-5.1), \"A server MUST NOT mask any frames that it sends to the client.  A client MUST close a connection if it detects a masked frame\".\n\nBut when my app server respond to my client close message, it send a masked frame, and the WebSocketClient didn't close the connection, in fact, it call the onFailure callback, but still with the connection on!\n\nI'm using the version 2.4.0\n", "url": "https://github.com/square/okhttp/issues/1701", "user": "Piasy", "labels": ["bug", "websockets"], "created": "2015-06-15 12:53:05", "closed": "2016-09-20 04:03:34", "commits": {}, "ttf": 462.0002777777778, "commitsDetails": []}, {"title": "Intermittent Network is unreachable exception ", "body": "We run jobs on AWS EC2 that periodically query multiple external APIs via Retrofit v1.9.0 and OkHttp v2.4.0. For some time this works fine, but after hours or even days of running, network requests to `https://www.googleapis.com` start to fail with \"Network is unreachable exception\" exception (full stack trace below). We have isolated the problem to OkHttp code by replacing OkHttpClient with UrlConnectionClient which fixes the issue. Interestingly we do not experience this problem with other APIs running in the same process, and the failures affect all or fraction of requests at different times.\n\nFew things we've observed while debugging (may or may not be related):\n- www.googleapis.com uses some kind of DNS load balancing and does rotation of several IPs.\n- `InetAddress.getByName(\"www.googleapis.com\")` returns IPv4 address.\n\nretrofit.RetrofitError: Network is unreachable\n    at retrofit.RetrofitError.networkError(RetrofitError.java:27)\n    at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:395)\n    at retrofit.RestAdapter$RestHandler.access$100(RestAdapter.java:220)\n    at retrofit.RestAdapter$RestHandler$1.invoke(RestAdapter.java:265)\n    at retrofit.RxSupport$2.run(RxSupport.java:55)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at com.bento.util.BentoExecutorUtils$1.run(BentoExecutorUtils.java:24)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.net.SocketException: Network is unreachable\n    at java.net.PlainSocketImpl.socketConnect(Native Method)\n    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)\n    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)\n    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)\n    at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\n    at java.net.Socket.connect(Socket.java:579)\n    at com.squareup.okhttp.internal.Platform.connectSocket(Platform.java:100)\n    at com.squareup.okhttp.internal.http.SocketConnector.connectRawSocket(SocketConnector.java:160)\n    at com.squareup.okhttp.internal.http.SocketConnector.connectTls(SocketConnector.java:79)\n    at com.squareup.okhttp.Connection.connect(Connection.java:143)\n    at com.squareup.okhttp.Connection.connectAndSetOwner(Connection.java:185)\n    at com.squareup.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:128)\n    at com.squareup.okhttp.internal.http.HttpEngine.nextConnection(HttpEngine.java:341)\n    at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:330)\n    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:248)\n    at com.squareup.okhttp.Call.getResponse(Call.java:273)\n    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:230)\n    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:201)\n    at com.squareup.okhttp.Call.execute(Call.java:81)\n    at retrofit.client.OkClient.execute(OkClient.java:53)\n    at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:326)\n    ... 9 more\n", "url": "https://github.com/square/okhttp/issues/1700", "user": "maxim432", "labels": ["bug"], "created": "2015-06-12 01:16:09", "closed": "2015-06-21 18:54:48", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "CertificatePinner pinning against public key of root cert", "body": "Servers often send a certificate chain without the self-signed root cert at the end of the chain, because clients usually contain that cert in their trust store.\nFor instance, running CertificatePinner with a bogus pin on www.google.com returns the following chain:\n\n> sha1/QO5igIZiHh7a+KVqv8Yc5acwgzM=: CN=www.google.com,O=Google Inc,L=Mountain View,ST=California,C=US\n> sha1/Q9rWMO5T+KmAym79hfRqo3mQ4Oo=: CN=Google Internet Authority G2,O=Google Inc,C=US\n> sha1/wHqYaI2J+6sFZAwRfap9ZbjKzE4=: CN=GeoTrust Global CA,O=GeoTrust Inc.,C=US\n\nIf we look at the certificate chain sent by www.google.com through OpenSSL, it shows that that last cert is not self signed, and is in fact signed by Equifax Secure CA which is the root in this case. But because the Equifax Secure CA cert is not a part of the chain, CertificatePinner doesn't check its public key.\n\nSo in scenarios like these, where the certificate chain does not contain the root cert, is there any way to pin against the public key of the root cert?\n\nThanks!\n", "url": "https://github.com/square/okhttp/issues/1699", "user": "anirudhgargsc", "labels": ["bug"], "created": "2015-06-11 20:05:58", "closed": "2016-02-02 02:48:14", "commits": {"a7d3396047a75183398f339310774ee415c1c4e8": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "4856aac8b0eb08c4859f8f81308caff32d8d4039": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "18b2660873ed8f028ee72981c882ed676aa08030": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "e121ed1ad291cbe04de989683d23f549d8e305db": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a2bf207c980e4d2a0ecf457eadae9048e63d09aa": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ddbabf77803112fe804d1f44e5071244b00b9cfb": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "62b42bf27589fd8128f6d1a202455c5731c890c2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 235.00027777777777, "commitsDetails": [{"commitHash": "a7d3396047a75183398f339310774ee415c1c4e8", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["8cefc2707cceef7a339351e6e37fa552ed397de2"], "nameRev": "a7d3396047a75183398f339310774ee415c1c4e8 tags/parent-3.1.0~12^2", "commitMessage": "Teach OkHttp to lookup the X509TrustManagerFactory.\n\nRight now there's problems with our ability to confirm certificate pins with\nroot certificates because we don't actually know which certificate authority\nwas used.\n\nThis unblocks that work.\n\nThis code is particularly fragile and gross. There's no API to get the\nTrustManager from an SSLSocketFactory. We can potentially change the way\nthat we compute the initial SSLSocketFactory, but this approach is most\ngeneral.\n\nThis is motivated by https://github.com/square/okhttp/issues/1699\n", "commitDateTime": "2016-01-27 00:31:15", "authoredDateTime": "2016-01-27 00:31:15", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/DelegatingSSLSocketFactory.java", "insertions": 11, "deletions": 19, "lines": 30}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "okhttp/src/main/java/okhttp3/internal/Platform.java", "insertions": 98, "deletions": 22, "lines": 120}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DelegatingSSLSocketFactory.java", "spoonMethods": [{"spoonMethodName": "okhttp3.DelegatingSSLSocketFactory.createSocket(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.DelegatingSSLSocketFactory.createSocket(java.lang.String,int,java.net.InetAddress,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Platform.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.Platform.findPlatform()", "TOT": 15, "UPD": 4, "INS": 4, "MOV": 5, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.Platform.trustManager(javax.net.ssl.SSLSocketFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.Platform.JdkPlatform", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.Platform.readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.Platform.Android", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.Platform.Android.trustManager(javax.net.ssl.SSLSocketFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.Platform.JdkWithJettyBootPlatform", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4856aac8b0eb08c4859f8f81308caff32d8d4039", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "18b2660873ed8f028ee72981c882ed676aa08030", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["9df2224a037807d2289378625d0c12d72b0d7210"], "nameRev": "18b2660873ed8f028ee72981c882ed676aa08030 tags/parent-3.1.0~7^2", "commitMessage": "New CertificateAuthorityCouncil class to normalize certificate chains.\n\nThe goal of this is to get the root CA certificate into the certificate\nchain, so that it can be considered by the certificate pinner. The work\nto integrate CertificateAuthorityCouncil with CertificatePinner will\ncome in a follow-up PR.\n\nSee: https://github.com/square/okhttp/issues/1699\n", "commitDateTime": "2016-01-31 14:10:15", "authoredDateTime": "2016-01-31 14:10:15", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/internal/HeldCertificate.java", "insertions": 125, "deletions": 0, "lines": 125}, {"filePath": "mockwebserver/src/main/java/okhttp3/internal/SslContextBuilder.java", "insertions": 11, "deletions": 53, "lines": 64}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CertificateAuthorityCouncilTest.java", "insertions": 182, "deletions": 0, "lines": 182}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CertificatePinnerTest.java", "insertions": 76, "deletions": 78, "lines": 154}, {"filePath": "okhttp-tests/src/test/java/okhttp3/URLConnectionTest.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "okhttp/src/main/java/okhttp3/internal/tls/CertificateAuthorityCouncil.java", "insertions": 120, "deletions": 0, "lines": 120}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HeldCertificate.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.HeldCertificate", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SslContextBuilder.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.SslContextBuilder.build()", "TOT": 11, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 4}, {"spoonMethodName": "okhttp3.internal.SslContextBuilder", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "okhttp3.internal.SslContextBuilder.generateKeyPair()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.SslContextBuilder.selfSignedCertificate(java.security.KeyPair,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CertificateAuthorityCouncilTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificateAuthorityCouncilTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificatePinnerTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificatePinnerTest", "TOT": 51, "UPD": 27, "INS": 3, "MOV": 10, "DEL": 11}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.sameKeypairSamePin()", "TOT": 20, "UPD": 12, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulCheck()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulMatchAcceptsAnyMatchingCertificate()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.multipleCertificatesForOneHostname()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.multipleHostnamesForOneCertificate()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.absentHostnameMatches()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulCheckForWildcardHostname()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulMatchAcceptsAnyMatchingCertificateForWildcardHostname()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.multipleCertificatesForOneWildcardHostname()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulCheckForOneHostnameWithWildcardAndDirectCertificate()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.unsuccessfulCheck()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.unsuccessfulCheckForWildcardHostname()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.unsuccessfulCheckForOneHostnameWithWildcardAndDirectCertificate()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulFindMatchingPins()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.successfulFindMatchingPinsForWildcardAndDirectCertificates()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinnerTest.wildcardHostnameShouldNotMatchThroughDot()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.URLConnectionTest.httpsWithCustomTrustManager()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.URLConnectionTest.RecordingTrustManager.getAcceptedIssuers()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.URLConnectionTest.RecordingTrustManager", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificateAuthorityCouncil.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.tls.CertificateAuthorityCouncil", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e121ed1ad291cbe04de989683d23f549d8e305db", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["bf99c5e51ad3d3fa140f349d810eeb45abf5f43a"], "nameRev": "e121ed1ad291cbe04de989683d23f549d8e305db tags/parent-3.1.0~6^2", "commitMessage": "Start using CertificateAuthorityCouncil in CertificatePinner.\n\nThe wiring is definitely a bit more awkward than I would like. The\nCertificateAuthorityCountil is a non-public class, and this change\nsneaks an instance into the CertificatePinner that couples it to\nthe OkHttp client's SSLSocketFactory.\n\nA nicer solution is to expose CertificateAuthorityCouncil as a public\nAPI type, and add it to Address.java. Unfortunately that's currently\npretty awkward, especially because I'm not ready to commit to the\nname CertificateAuthorityCouncil or its API.\n\nCloses: https://github.com/square/okhttp/issues/1699\n", "commitDateTime": "2016-02-01 20:02:07", "authoredDateTime": "2016-02-01 20:02:07", "commitGitStats": [{"filePath": "okhttp/src/main/java/okhttp3/CertificatePinner.java", "insertions": 25, "deletions": 1, "lines": 26}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 14, "deletions": 6, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CertificatePinner.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CertificatePinner", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.CertificatePinner.newBuilder()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinner.check(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinner.Builder", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CertificatePinner.Builder.certificateAuthorityCouncil(okhttp3.internal.tls.CertificateAuthorityCouncil)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient", "TOT": 22, "UPD": 4, "INS": 8, "MOV": 7, "DEL": 3}, {"spoonMethodName": "okhttp3.OkHttpClient.Builder", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.OkHttpClient.Builder.sslSocketFactory(javax.net.ssl.SSLSocketFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a2bf207c980e4d2a0ecf457eadae9048e63d09aa", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6b98d856e6419bc161dc80b7363d1baf3b9405a5"], "nameRev": "a2bf207c980e4d2a0ecf457eadae9048e63d09aa tags/parent-2.7.3~2^2~3", "commitMessage": "Teach OkHttp to lookup the X509TrustManagerFactory.\n\nRight now there's problems with our ability to confirm certificate pins with\nroot certificates because we don't actually know which certificate authority\nwas used.\n\nThis unblocks that work.\n\nThis code is particularly fragile and gross. There's no API to get the\nTrustManager from an SSLSocketFactory. We can potentially change the way\nthat we compute the initial SSLSocketFactory, but this approach is most\ngeneral.\n\nThis is motivated by https://github.com/square/okhttp/issues/1699\n\nConflicts:\n\tokhttp/src/main/java/com/squareup/okhttp/internal/Platform.java\n\tokhttp/src/main/java/okhttp3/OkHttpClient.java\n", "commitDateTime": "2016-02-06 13:21:08", "authoredDateTime": "2016-01-27 00:31:15", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/DelegatingSSLSocketFactory.java", "insertions": 11, "deletions": 19, "lines": 30}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java", "insertions": 98, "deletions": 22, "lines": 120}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DelegatingSSLSocketFactory.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.DelegatingSSLSocketFactory.createSocket(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.DelegatingSSLSocketFactory.createSocket(java.lang.String,int,java.net.InetAddress,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.OkHttpClient", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.getDefaultTrustManager()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.setSslSocketFactory(javax.net.ssl.SSLSocketFactory)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.copyWithDefaults()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Platform.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Platform.findPlatform()", "TOT": 15, "UPD": 4, "INS": 4, "MOV": 5, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.internal.Platform.trustManager(javax.net.ssl.SSLSocketFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.Platform.JdkPlatform", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.Platform.readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.Platform.Android", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.Platform.Android.trustManager(javax.net.ssl.SSLSocketFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.Platform.JdkWithJettyBootPlatform", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ddbabf77803112fe804d1f44e5071244b00b9cfb", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["a2bf207c980e4d2a0ecf457eadae9048e63d09aa"], "nameRev": "ddbabf77803112fe804d1f44e5071244b00b9cfb tags/parent-2.7.3~2^2~2", "commitMessage": "New CertificateAuthorityCouncil class to normalize certificate chains.\n\nThe goal of this is to get the root CA certificate into the certificate\nchain, so that it can be considered by the certificate pinner. The work\nto integrate CertificateAuthorityCouncil with CertificatePinner will\ncome in a follow-up PR.\n\nSee: https://github.com/square/okhttp/issues/1699\n\nConflicts:\n\tmockwebserver/src/main/java/com/squareup/okhttp/internal/SslContextBuilder.java\n\tokhttp-tests/src/test/java/com/squareup/okhttp/CertificatePinnerTest.java\n\tokhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java\n", "commitDateTime": "2016-02-06 13:29:57", "authoredDateTime": "2016-01-31 14:10:15", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/com/squareup/okhttp/internal/SslContextBuilder.java", "insertions": 12, "deletions": 52, "lines": 64}, {"filePath": "mockwebserver/src/main/java/okhttp3/internal/HeldCertificate.java", "insertions": 125, "deletions": 0, "lines": 125}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CertificatePinnerTest.java", "insertions": 78, "deletions": 78, "lines": 156}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/tls/CertificateAuthorityCouncilTest.java", "insertions": 181, "deletions": 0, "lines": 181}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/tls/CertificateAuthorityCouncil.java", "insertions": 132, "deletions": 0, "lines": 132}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SslContextBuilder.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.SslContextBuilder.build()", "TOT": 11, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 4}, {"spoonMethodName": "com.squareup.okhttp.internal.SslContextBuilder", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.squareup.okhttp.internal.SslContextBuilder.generateKeyPair()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.SslContextBuilder.selfSignedCertificate(java.security.KeyPair,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "HeldCertificate.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.HeldCertificate", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificatePinnerTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest", "TOT": 52, "UPD": 27, "INS": 3, "MOV": 11, "DEL": 11}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.sameKeypairSamePin()", "TOT": 20, "UPD": 12, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.successfulCheck()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.successfulMatchAcceptsAnyMatchingCertificate()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.multipleCertificatesForOneHostname()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.multipleHostnamesForOneCertificate()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.absentHostnameMatches()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.successfulCheckForWildcardHostname()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.successfulMatchAcceptsAnyMatchingCertificateForWildcardHostname()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.multipleCertificatesForOneWildcardHostname()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.successfulCheckForOneHostnameWithWildcardAndDirectCertificate()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.unsuccessfulCheck()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.unsuccessfulCheckForWildcardHostname()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.unsuccessfulCheckForOneHostnameWithWildcardAndDirectCertificate()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.successfulFindMatchingPins()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.successfulFindMatchingPinsForWildcardAndDirectCertificates()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CertificatePinnerTest.wildcardHostnameShouldNotMatchThroughDot()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.URLConnectionTest.httpsWithCustomTrustManager()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.URLConnectionTest.RecordingTrustManager.getAcceptedIssuers()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.URLConnectionTest.RecordingTrustManager", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificateAuthorityCouncilTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.tls.CertificateAuthorityCouncilTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CertificateAuthorityCouncil.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.tls.CertificateAuthorityCouncil", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "62b42bf27589fd8128f6d1a202455c5731c890c2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ddbabf77803112fe804d1f44e5071244b00b9cfb"], "nameRev": "62b42bf27589fd8128f6d1a202455c5731c890c2 tags/parent-2.7.3~2^2~1", "commitMessage": "Start using CertificateAuthorityCouncil in CertificatePinner.\n\nThe wiring is definitely a bit more awkward than I would like. The\nCertificateAuthorityCountil is a non-public class, and this change\nsneaks an instance into the CertificatePinner that couples it to\nthe OkHttp client's SSLSocketFactory.\n\nA nicer solution is to expose CertificateAuthorityCouncil as a public\nAPI type, and add it to Address.java. Unfortunately that's currently\npretty awkward, especially because I'm not ready to commit to the\nname CertificateAuthorityCouncil or its API.\n\nCloses: https://github.com/square/okhttp/issues/1699\n\nConflicts:\n\tokhttp/src/main/java/com/squareup/okhttp/CertificatePinner.java\n\tokhttp/src/main/java/okhttp3/OkHttpClient.java\n", "commitDateTime": "2016-02-06 13:51:18", "authoredDateTime": "2016-02-01 20:02:07", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/io/RealConnection.java", "insertions": 27, "deletions": 2, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.OkHttpClient", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.setSslSocketFactory(javax.net.ssl.SSLSocketFactory)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.copyWithDefaults()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.getDefaultTrustManager()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.connectTls(int,int,com.squareup.okhttp.internal.ConnectionSpecSelector)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.certificateAuthorityCouncil(javax.net.ssl.SSLSocketFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a7d3396047a75183398f339310774ee415c1c4e8", "18b2660873ed8f028ee72981c882ed676aa08030", "e121ed1ad291cbe04de989683d23f549d8e305db"], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 407.0, "deletions": 83.0, "lines": 490.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 86.0, "UPD": 11.0, "INS": 41.0, "MOV": 16.0, "DEL": 18.0, "spoonFilesChanged": 7, "spoonMethodsChanged": 23}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/internal/tls", "mockwebserver/src/main/java/okhttp3/internal", "okhttp/src/main/java/okhttp3/internal"], "changesInPackagesSPOON": ["okhttp3.OkHttpClient", "okhttp3.internal.Platform.Android", "okhttp3.internal.Platform.trustManager(javax.net.ssl.SSLSocketFactory)", "okhttp3.CertificatePinner", "okhttp3.internal.SslContextBuilder.selfSignedCertificate(java.security.KeyPair,java.lang.String)", "okhttp3.DelegatingSSLSocketFactory.createSocket(java.lang.String,int)", "okhttp3.OkHttpClient.Builder.sslSocketFactory(javax.net.ssl.SSLSocketFactory)", "okhttp3.internal.Platform.JdkWithJettyBootPlatform", "okhttp3.internal.SslContextBuilder", "okhttp3.CertificatePinner.Builder.certificateAuthorityCouncil(okhttp3.internal.tls.CertificateAuthorityCouncil)", "okhttp3.internal.Platform.findPlatform()", "okhttp3.OkHttpClient.Builder", "okhttp3.internal.Platform.JdkPlatform", "okhttp3.internal.Platform.Android.trustManager(javax.net.ssl.SSLSocketFactory)", "okhttp3.internal.HeldCertificate", "okhttp3.internal.tls.CertificateAuthorityCouncil", "okhttp3.internal.SslContextBuilder.build()", "okhttp3.internal.SslContextBuilder.generateKeyPair()", "okhttp3.CertificatePinner.newBuilder()", "okhttp3.DelegatingSSLSocketFactory.createSocket(java.lang.String,int,java.net.InetAddress,int)", "okhttp3.CertificatePinner.check(java.lang.String,java.util.List)", "okhttp3.internal.Platform.readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)", "okhttp3.CertificatePinner.Builder"]}, {"title": "HttpUrl#canonicalize() is not escape `;`(semicolon) character ", "body": "I'm using OkHttp for sending html tags (contains style attributes).\nIn 2.2.0, okhttp is running perfectly.\nBut I upgrade it to 2.4.0, server received corrupted html.\nThis server treats '&' and ';' as separator.\n(hoge=fuga&foo=bar -> {hoge: fuga, foo: bar} , hoge=fuga;foo=bar -> {hoge: fuga, foo: bar} )\nhttp://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2.2\n\nResult of investigation, I found that incompatible changes from 2.2.0 to 2.4.0.\n\nAs 2.2.0, value of `FormEncodingBuilder.add(key,value)` is escaped `URLEncoder.encode(value, \"UTF-8\")`.\n(hoge=fu;ga&foo=bar -> {hoge: fu%3Bga, foo: bar})\n\nBut 2.4.0, value is escaped `HttpUrl#canonicalize()`.\nThis method (or, `HttpUrl.QUERY_COMPONENT_ENCODE_SET`) is not treated ';'. So value data is still alive semicolon!\n(hoge=fu;ga&foo=bar -> {hoge: fu, ga:null , foo: bar})\n(sorry, ga:null is no confidences... In any way, hoge's value is corrupted.)\n\nI think, Add semicolon to `HttpUrl.QUERY_COMPONENT_ENCODE_SET`.\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java#L262\nBut I don't try yet and there are no confidences for me :(\n", "url": "https://github.com/square/okhttp/issues/1694", "user": "keima", "labels": ["bug"], "created": "2015-06-10 12:08:45", "closed": "2015-06-21 03:16:05", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "HttpUrl encodes `+` to `%20` which makes OkHttp unusable with base64 URLs such as Cloudfront signed URLs", "body": "We are using Cloudfront to store our images. These images are displayed on our Android app via Picasso which uses OkHTTP.\n\nThe problem is that OkHTTP re-encode the URLs, changing `+` to `%20`.\n\n```\nHttpUrl.parse(\"http://test.org/res?signature=a+b=\").toString() == \"http://test.org/res?signature=a%20b=\"\n```\n\nAs cloudfront URLs contains base64 encoded signatures and because `+` is one of the 64 characters used by Base64, the fact that OkHttpUrl replaces those `+` by `%20` breaks the signature. Cloudfront therefore shows a \"Could not unencode Signature\" error.\n", "url": "https://github.com/square/okhttp/issues/1682", "user": "SalomonBrys", "labels": ["bug"], "created": "2015-06-02 15:00:05", "closed": "2015-08-25 02:53:19", "commits": {}, "ttf": 83.00027777777778, "commitsDetails": []}, {"title": "URLConnection.getInputStream().read() does not always timeout with SocketTimeoutException", "body": "The docs for URLConnection.setReadTimeout() suggest a SocketTimeoutException should be thrown. \n\nInstead, in some cases, an InterruptedIOException is thrown.\n\ne.g.\n\njava.io.InterruptedIOException: timeout\nat com.android.okhttp.okio.AsyncTimeout.exit(AsyncTimeout.java:258)\nat com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:215)\nat com.android.okhttp.okio.RealBufferedSource.read(RealBufferedSource.java:50)\nat com.android.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:398)\nat com.android.okhttp.okio.RealBufferedSource$1.read(RealBufferedSource.java:338)\nat libcore.java.net.URLConnectionTest.testReadTimeouts(URLConnectionTest.java:1796)\n\nThe behavior was changed in OkHttp commit 411a33810512340fd68fc5c33423badd52d290e9\n\nOn Android we should continue with the documented behavior.\n", "url": "https://github.com/square/okhttp/issues/1676", "user": "nfuller", "labels": ["bug"], "created": "2015-05-26 16:04:14", "closed": "2015-06-21 21:52:55", "commits": {"5af1d7f449509597f16bebbf0ef6c68d7c924398": {"commitGHEventType": "referenced", "commitUser": "nfuller"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "5af1d7f449509597f16bebbf0ef6c68d7c924398", "commitGHEventType": "referenced", "commitUser": "nfuller", "commitParents": ["97262e523d16ea2ee9060c25d720cab593bf5641"], "nameRev": "5af1d7f449509597f16bebbf0ef6c68d7c924398 tags/parent-2.5.0~28^2", "commitMessage": "Modify timeout exception / update test expectations\n\nRelated to issue #1676.\nDepends on https://github.com/square/okio/pull/154\n\nURLConnection should throw SocketTimeoutException for timeouts\nnot InterruptedIOException.\n", "commitDateTime": "2015-06-12 10:40:14", "authoredDateTime": "2015-05-27 10:50:24", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readTimeoutOnSlowConnection()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.readTimeouts()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.writeTimeouts()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyTimeout.exitAndThrowIfTimedOut()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyTimeout.newTimeoutException(java.io.IOException)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5af1d7f449509597f16bebbf0ef6c68d7c924398"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 2, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyStream.SpdyTimeout.exitAndThrowIfTimedOut()", "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyTimeout.newTimeoutException(java.io.IOException)"]}, {"title": "Change to HttpUrl breaks API expectations for okhttp-ws", "body": "This commit: https://github.com/square/okhttp/commit/2b236fd66abbfffeb1c07a22dde5dcb8d3a2032c\n\nForces the url to begin with `http://` or `https://` or it will return null. The `WebSocketCall` class will handle the conversion from ws to http, but the `Request` must accept url's that begin with `ws://` or `wss://`\n\nWorkaround is to pre-parse ws urls to http before firing them to the `Request`\n", "url": "https://github.com/square/okhttp/issues/1652", "user": "pwerry", "labels": ["bug"], "created": "2015-05-15 16:55:30", "closed": "2015-05-19 00:51:37", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "IllegalStateException - Http2$Writer.headers", "body": "I found this crash in crashlytics Android 5.0 - XT1097\n\n``` java\njava.lang.IllegalStateException\n       at com.squareup.okhttp.internal.spdy.Http2$Writer.headers(Http2.java:444)\n       at com.squareup.okhttp.internal.spdy.Http2$Writer.synStream(Http2.java:410)\n       at com.squareup.okhttp.internal.spdy.SpdyConnection.newStream(SpdyConnection.java:266)\n       at com.squareup.okhttp.internal.spdy.SpdyConnection.newStream(SpdyConnection.java:242)\n       at com.squareup.okhttp.internal.http.SpdyTransport.writeRequestHeaders(SpdyTransport.java:89)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:814)\n       at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:684)\n       at com.squareup.okhttp.Call.getResponse(Call.java:272)\n       at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:228)\n       at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:199)\n       at com.squareup.okhttp.Call.access$100(Call.java:34)\n       at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:162)\n       at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/square/okhttp/issues/1651", "user": "juliocotta", "labels": ["bug"], "created": "2015-05-15 03:27:01", "closed": "2015-08-10 04:25:25", "commits": {}, "ttf": 87.00027777777778, "commitsDetails": []}, {"title": "Implement & enforce hostname label limits", "body": "The spec is particular about 253 characters for the domain (without dot) and 1..63 characters for each label. See http://www.unicode.org/reports/tr46/#ToASCII\n\n(Follow up to https://github.com/square/okhttp/issues/1486)\n", "url": "https://github.com/square/okhttp/issues/1637", "user": "swankjesse", "labels": ["bug"], "created": "2015-05-13 03:54:35", "closed": "2020-03-29 17:25:29", "commits": {}, "ttf": 1782.0002777777777, "commitsDetails": []}, {"title": "ToString should use canonical form for IPv6", "body": "Right now it's `[0:0:0:0:0:0:0:1]`, we want `[::1]`.\n\n(Follow up to https://github.com/square/okhttp/issues/1486)\n", "url": "https://github.com/square/okhttp/issues/1636", "user": "swankjesse", "labels": ["bug"], "created": "2015-05-13 03:52:38", "closed": "2015-08-02 04:13:58", "commits": {"a8949b129df558bc90672606bcbcd3cf6d9d4912": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 81.00027777777778, "commitsDetails": [{"commitHash": "a8949b129df558bc90672606bcbcd3cf6d9d4912", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["1e5f3a967977db513585ed8f350a65ab3175e9ce"], "nameRev": "a8949b129df558bc90672606bcbcd3cf6d9d4912 tags/parent-2.5.0~11^2", "commitMessage": "IPv6 canonical string.\n\nCloses https://github.com/square/okhttp/issues/1636\n", "commitDateTime": "2015-08-01 21:04:59", "authoredDateTime": "2015-08-01 21:04:54", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java", "insertions": 39, "deletions": 19, "lines": 58}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/WebPlatformUrlTest.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java", "insertions": 37, "deletions": 1, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6()", "TOT": 10, "UPD": 1, "INS": 4, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressDifferentFormats()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6WithIpv4Suffix()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressLeadingCompression()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressTrailingCompression()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6CanonicalForm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv4CanonicalForm()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebPlatformUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.WebPlatformUrlTest", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "HttpUrl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.canonicalizeHost(java.lang.String,int,int)", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.inet6AddressToAscii(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a8949b129df558bc90672606bcbcd3cf6d9d4912"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 37, "deletions": 1, "lines": 38, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 0, "INS": 5, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.HttpUrl.Builder.inet6AddressToAscii(byte[])", "com.squareup.okhttp.HttpUrl.Builder.canonicalizeHost(java.lang.String,int,int)"]}, {"title": "Don't percent-encode non-ASCII characters in fragments", "body": "Sequences like `#\u03b2` shouldn't be percent-encoded.\n\n(Follow up to https://github.com/square/okhttp/issues/1486)\n", "url": "https://github.com/square/okhttp/issues/1635", "user": "swankjesse", "labels": ["bug"], "created": "2015-05-13 03:52:21", "closed": "2015-11-06 05:03:07", "commits": {"a84fff63620f9cd6e9d8ba180e9920214a0dbda4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "f4feb0adfcd8e209f90d4fffb6facf5c07f57110": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 177.00027777777777, "commitsDetails": [{"commitHash": "a84fff63620f9cd6e9d8ba180e9920214a0dbda4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f4feb0adfcd8e209f90d4fffb6facf5c07f57110", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["65b43ff3a6e933c0fad73f30ce5562646b8c5228"], "nameRev": "f4feb0adfcd8e209f90d4fffb6facf5c07f57110 tags/parent-2.6.0~15^2", "commitMessage": "Don't percent-encode non-ASCII characters in fragments\n\nFixes https://github.com/square/okhttp/issues/1635\n", "commitDateTime": "2015-11-05 23:56:37", "authoredDateTime": "2015-11-04 23:27:53", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java", "insertions": 38, "deletions": 1, "lines": 39}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/UrlComponentEncodingTester.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/WebPlatformUrlTest.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/FormEncodingBuilder.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java", "insertions": 39, "deletions": 33, "lines": 72}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.fragmentCharacters()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.fragmentNonAscii()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.fragmentNonAsciiThatOffendsJavaNetUri()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.fragmentPercentEncodedNonAscii()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.fragmentPercentEncodedPartialCodePoint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UrlComponentEncodingTester.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.UrlComponentEncodingTester.identityForNonAscii()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebPlatformUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.WebPlatformUrlTest", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "FormEncodingBuilder.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.FormEncodingBuilder.add(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.FormEncodingBuilder.addEncoded(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.username(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.encodedUsername(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.password(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.encodedPassword(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.setPathSegment(int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.setEncodedPathSegment(int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.addQueryParameter(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.addEncodedQueryParameter(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.removeAllQueryParameters(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.removeAllEncodedQueryParameters(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.push(java.lang.String,int,int,boolean,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.fragment(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.encodedFragment(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.reencodeForUri()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.parsePort(java.lang.String,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.query(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.encodedQuery(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.parse(com.squareup.okhttp.HttpUrl,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f4feb0adfcd8e209f90d4fffb6facf5c07f57110"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 43.0, "deletions": 37.0, "lines": 80.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 47.0, "UPD": 2.0, "INS": 39.0, "MOV": 6.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 25}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.HttpUrl.Builder.push(java.lang.String,int,int,boolean,boolean)", "com.squareup.okhttp.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean)", "com.squareup.okhttp.HttpUrl.Builder.reencodeForUri()", "com.squareup.okhttp.HttpUrl.Builder.encodedUsername(java.lang.String)", "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean)", "com.squareup.okhttp.HttpUrl.Builder.parsePort(java.lang.String,int,int)", "com.squareup.okhttp.FormEncodingBuilder.add(java.lang.String,java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.setPathSegment(int,java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.encodedQuery(java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.encodedFragment(java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.query(java.lang.String)", "com.squareup.okhttp.FormEncodingBuilder.addEncoded(java.lang.String,java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.fragment(java.lang.String)", "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "com.squareup.okhttp.HttpUrl.Builder.addEncodedQueryParameter(java.lang.String,java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.parse(com.squareup.okhttp.HttpUrl,java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.setEncodedPathSegment(int,java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.removeAllQueryParameters(java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.password(java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.username(java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.removeAllEncodedQueryParameters(java.lang.String)", "com.squareup.okhttp.HttpUrl.canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean)", "com.squareup.okhttp.HttpUrl.Builder.addQueryParameter(java.lang.String,java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.encodedPassword(java.lang.String)", "com.squareup.okhttp.HttpUrl.canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean)"]}, {"title": "Fatal Exception: java.lang.IllegalStateException No deadline", "body": "Hi,\n\ni found a failure in the okhttp 2.3.0\nsee: http://crashes.to/s/0feb94a574c\n\nStacktrace\n\njava.lang.IllegalStateException: No deadline\n       at okio.Timeout.deadlineNanoTime(SourceFile:104)\n       at okio.AsyncTimeout.scheduleTimeout(SourceFile:84)\n       at okio.AsyncTimeout.enter(SourceFile:69)\n       at okio.AsyncTimeout$2.read(SourceFile:209)\n       at okio.RealBufferedSource.indexOf(SourceFile:295)\n       at okio.RealBufferedSource.indexOf(SourceFile:289)\n       at okio.RealBufferedSource.readUtf8LineStrict(SourceFile:196)\n       at com.squareup.okhttp.internal.http.HttpConnection.readResponse(SourceFile:190)\n       at com.squareup.okhttp.internal.http.HttpTransport.readResponseHeaders(SourceFile:80)\n       at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(SourceFile:830)\n       at com.squareup.okhttp.internal.http.HttpEngine.access$200(SourceFile:95)\n       at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(SourceFile:823)\n       at com.squareup.okhttp.internal.http.HttpEngine.readResponse(SourceFile:684)\n       at com.squareup.okhttp.Call.getResponse(SourceFile:272)\n       at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(SourceFile:228)\n       at com.squareup.okhttp.Call.getResponseWithInterceptorChain(SourceFile:199)\n       at com.squareup.okhttp.Call.execute(SourceFile:79)\n       at de.komoot.android.net.task.HttpTask.execute(SourceFile:449)\n       at de.komoot.android.net.task.HttpTask.executeOnThread(SourceFile:263)\n       at de.komoot.android.net.task.HttpTask.executeOnThread(SourceFile:219)\n       at de.komoot.android.net.task.BaseHttpTask.asyncNetworkExecution(SourceFile:208)\n       at de.komoot.android.net.task.BaseHttpTask.run(SourceFile:179)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:848)\n\nI can not reproduce it with any of my test devices. In the wild it doesn't happen not very often.\n1 failure in 10000 sessions.\n", "url": "https://github.com/square/okhttp/issues/1620", "user": "ArneKoeckeritz", "labels": ["bug"], "created": "2015-05-10 12:04:50", "closed": "2015-05-17 01:43:27", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "IPv6 addresses are resolved too eagerly", "body": "We don't want to do DNS resolution as a part of URL parsing.\n\n```\n\"main\" prio=5 tid=0x00007f90d3803000 nid=0x1903 runnable [0x0000000110171000]\n   java.lang.Thread.State: RUNNABLE\n    at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n    at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)\n    at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)\n    at java.net.InetAddress.getAllByName0(InetAddress.java:1246)\n    at java.net.InetAddress.getAllByName(InetAddress.java:1162)\n    at java.net.InetAddress.getAllByName(InetAddress.java:1098)\n    at java.net.InetAddress.getByName(InetAddress.java:1048)\n    at com.squareup.okhttp.HttpUrl$Builder.decodeIpv6(HttpUrl.java:741)\n```\n", "url": "https://github.com/square/okhttp/issues/1616", "user": "swankjesse", "labels": ["bug"], "created": "2015-05-09 03:58:49", "closed": "2015-05-12 00:59:54", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Consider upgrading HttpUrl to IDNA 2008", "body": "We're currently using `java.net.IDN` which implements IDNA 2003 on the systems I tried.\nhttp://www.unicode.org/reports/tr46/\n\nI actually wrote & discarded a nearly-complete implementation here:\nhttps://github.com/square/okhttp/pull/1612\n\nThe PR does mapping, but not punycode or deviants.\n", "url": "https://github.com/square/okhttp/issues/1615", "user": "swankjesse", "labels": ["bug"], "created": "2015-05-09 01:33:28", "closed": "2020-03-29 17:24:57", "commits": {}, "ttf": 1786.0002777777777, "commitsDetails": []}, {"title": "HttpUrl IPv6 parsing doesn't fail on too many leading 0s", "body": "This URL is malformed but parses successfully: `http://[::00001]`.\n\nFor reference, here's a (more) correct implementation that I wrote. I'm not committing it to save code.\n\n```\n    private static InetAddress decodeIpv6(String input, int pos, int limit) {\n      byte[] address = new byte[16];\n      int b = 0;\n      int compress = -1;\n\n      for (int i = pos; i < limit; ) {\n        if (b == address.length) return null; // Too many groups.\n\n        // Read a delimiter.\n        if (i + 2 <= limit && input.regionMatches(i, \"::\", 0, 2)) {\n          // Compression \"::\" delimiter, which is anywhere in the input, including its prefix.\n          if (compress != -1) return null; // Multiple \"::\" delimiters.\n          i += 2;\n          b += 2;\n          compress = b;\n          if (i == limit) break;\n        } else if (b != 0) {\n          // Group separator \":\" delimiter.\n          if (input.regionMatches(i, \":\", 0, 1)) {\n            i++;\n          } else if (input.regionMatches(i, \".\", 0, 1)) {\n            return decodeIpv4(input, pos, limit); // Not the delimiter we expected, but not fatal.\n          } else {\n            return null; // Wrong delimiter.\n          }\n        }\n\n        // Read a group, one to four hex digits.\n        int value = 0;\n        int groupOffset = i;\n        for (; i < limit; i++) {\n          char c = input.charAt(i);\n          int hexDigit = decodeHexDigit(c);\n          if (hexDigit == -1) break;\n          value = (value << 4) + hexDigit;\n        }\n        int groupLength = i - groupOffset;\n        if (groupLength == 0 || groupLength > 4) return null; // Group is the wrong size.\n\n        // Success. Assign the group's value to our byte array.\n        address[b++] = (byte) ((value >>> 8) & 0xff);\n        address[b++] = (byte) (value & 0xff);\n      }\n\n      // All done. If compression happened, we need to move bytes to the right place in the\n      // address. Here's a sample:\n      //\n      //      input: \"1111:2222:3333::7777:8888\"\n      //     before: { 11, 11, 22, 22, 33, 33, 00, 00, 77, 77, 88, 88, 00, 00, 00, 00  }\n      //   compress: 6\n      //          b: 10\n      //      after: { 11, 11, 22, 22, 33, 33, 00, 00, 00, 00, 00, 00, 77, 77, 88, 88 }\n      //\n      if (b != address.length) {\n        if (compress == -1) return null; // Address didn't have compression or enough groups.\n        System.arraycopy(address, compress, address, address.length - (b - compress), b - compress);\n        Arrays.fill(address, compress, compress + (address.length - b), (byte) 0);\n      }\n\n      try {\n        return InetAddress.getByAddress(address);\n      } catch (UnknownHostException e) {\n        throw new AssertionError();\n      }\n    }\n```\n", "url": "https://github.com/square/okhttp/issues/1613", "user": "swankjesse", "labels": ["bug"], "created": "2015-05-09 01:25:20", "closed": "2015-05-11 19:45:44", "commits": {"16d7926ad4261e755b33cd2fb244933789d5d82d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "16d7926ad4261e755b33cd2fb244933789d5d82d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ddcfbd78c7525e72b3b9889424ef8fcb2ec15b17"], "nameRev": "16d7926ad4261e755b33cd2fb244933789d5d82d tags/parent-2.4.0-RC1~22^2", "commitMessage": "Parse IPv6 addresses.\n\nThis leans on InetAddress to do the work. It's not perfect, but it's\nalso not a lot of code. https://github.com/square/okhttp/issues/1613\n", "commitDateTime": "2015-05-08 21:26:16", "authoredDateTime": "2015-05-08 21:19:29", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java", "insertions": 66, "deletions": 5, "lines": 71}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/WebPlatformUrlTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/HttpUrl.java", "insertions": 17, "deletions": 4, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6()", "TOT": 20, "UPD": 6, "INS": 1, "MOV": 13, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressDifferentFormats()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressLeadingCompression()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressTrailingCompression()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressTooManyDigitsInGroup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressTooManyGroups()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressTooMuchCompression()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.hostIpv6AddressMisplacedColons()", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebPlatformUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.WebPlatformUrlTest.testHttpUrl()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpUrl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.decodeIpv6(java.lang.String,int,int)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.domainToAscii(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.HttpUrl.Builder.host(java.lang.String,int,int)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["16d7926ad4261e755b33cd2fb244933789d5d82d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 4, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 1, "INS": 6, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.HttpUrl.Builder.domainToAscii(java.lang.String)", "com.squareup.okhttp.HttpUrl.Builder.decodeIpv6(java.lang.String,int,int)", "com.squareup.okhttp.HttpUrl.Builder.host(java.lang.String,int,int)"]}, {"title": "Okio is 'DDOS' my server", "body": "Hi.\nI'm using the last version of the OkHttp. My team have warned me that was being made \u200b\u200bmore than 1,500 requests per seconds from Okio. I've revised the code but I can't find anything wrong. I've one request when the app starts. I handle the all exceptions.\nI think it's a problem of the Okio. I've added the Crashlytics to warn errors, well, I've found this:\n\n```\njava.lang.RuntimeException: An error occured while executing doInBackground()\n   at android.os.AsyncTask$3.done(AsyncTask.java:299)\n   at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:352)\n   at java.util.concurrent.FutureTask.setException(FutureTask.java:219)\n   at java.util.concurrent.FutureTask.run(FutureTask.java:239)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n   at java.lang.Thread.run(Thread.java:841)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: size=0 offset=0 byteCount=1\n   at okio.Util.checkOffsetAndCount(Util.java:29)\n   at okio.Buffer.getByte(Buffer.java:294)\n   at okio.RealBufferedSource.readHexadecimalUnsignedLong(RealBufferedSource.java:269)\n   at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.readChunkSize(HttpConnection.java:451)\n   at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.read(HttpConnection.java:432)\n   at okio.RealBufferedSource.read(RealBufferedSource.java:50)\n   at okio.RealBufferedSource.exhausted(RealBufferedSource.java:60)\n   at okio.InflaterSource.refill(InflaterSource.java:101)\n   at okio.InflaterSource.read(InflaterSource.java:62)\n   at okio.GzipSource.read(GzipSource.java:80)\n   at okio.Buffer.writeAll(Buffer.java:819)\n   at okio.RealBufferedSource.readByteArray(RealBufferedSource.java:92)\n   at com.squareup.okhttp.ResponseBody.bytes(ResponseBody.java:57)\n   at com.squareup.okhttp.ResponseBody.string(ResponseBody.java:83)\n   at ...\n   at android.os.AsyncTask$2.call(AsyncTask.java:287)\n   at java.util.concurrent.FutureTask.run(FutureTask.java:234)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n   at java.lang.Thread.run(Thread.java:841)\n```\n", "url": "https://github.com/square/okhttp/issues/1611", "user": "ppamorim", "labels": ["bug"], "created": "2015-05-07 19:22:07", "closed": "2015-05-10 15:07:23", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Call.cancel shouldn't offend strict mode", "body": "We should document that it doesn't block, and get our friends at AOSP to fix strict mode to not issue a false positive warning.\n", "url": "https://github.com/square/okhttp/issues/1592", "user": "swankjesse", "labels": ["bug"], "created": "2015-04-29 04:33:58", "closed": "2015-11-30 04:15:02", "commits": {"ee87f8036f99fdfd63f8ef145f4478907682db29": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 214.00027777777777, "commitsDetails": [{"commitHash": "ee87f8036f99fdfd63f8ef145f4478907682db29", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["d00778c8cf5182fb8670bb4b939f17195103cc55"], "nameRev": "ee87f8036f99fdfd63f8ef145f4478907682db29 tags/parent-2.7.0~15^2", "commitMessage": "Change async cancel to cancel the raw socket only.\n\nPreviously we could close an SSL socket which does synchronous I/O. This\nmade it unreasonable to cancel a call on a UI thread.\n\nCloses: https://github.com/square/okhttp/issues/1592\n", "commitDateTime": "2015-11-29 22:58:45", "authoredDateTime": "2015-11-29 22:58:45", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 99, "deletions": 43, "lines": 142}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/Http2xStream.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/io/RealConnection.java", "insertions": 19, "deletions": 7, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.enableProtocol(com.squareup.okhttp.Protocol)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.tls()", "TOT": 10, "UPD": 1, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.CallTest.tls_Async()", "TOT": 14, "UPD": 2, "INS": 1, "MOV": 10, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.CallTest.setFollowSslRedirectsFalse()", "TOT": 13, "UPD": 1, "INS": 1, "MOV": 10, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.CallTest.matchingPinnedCertificate()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.CallTest.unmatchingPinnedCertificate()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.CallTest.get_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.head_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.post_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postZerolength_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.delete_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.put_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.patch_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.canceledBeforeIOSignalsOnFailure_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.canceledBeforeResponseReadSignalsOnFailure_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce_HTTPS()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.enableTls()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.get_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.head_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.post_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postZeroLength_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.delete_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.put_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.patch_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Http2xStream.java", "spoonMethods": []}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.connectSocket(int,int,int,com.squareup.okhttp.internal.ConnectionSpecSelector)", "TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.cancel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.connectTls(int,int,com.squareup.okhttp.internal.ConnectionSpecSelector)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.connect(int,int,int,java.util.List,boolean)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ee87f8036f99fdfd63f8ef145f4478907682db29"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 8, "lines": 28, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 12, "UPD": 6, "INS": 5, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http", "okhttp/src/main/java/com/squareup/okhttp/internal/io"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.io.RealConnection", "com.squareup.okhttp.internal.io.RealConnection.connectTls(int,int,com.squareup.okhttp.internal.ConnectionSpecSelector)", "com.squareup.okhttp.internal.io.RealConnection.cancel()", "com.squareup.okhttp.internal.io.RealConnection.connect(int,int,int,java.util.List,boolean)", "com.squareup.okhttp.internal.io.RealConnection.connectSocket(int,int,int,com.squareup.okhttp.internal.ConnectionSpecSelector)"]}, {"title": "Vary headers not working on Android", "body": "This exception showed up during Android testing with ToT:\n\n04-25 09:19:23.659  5471  5495 E AndroidRuntime: java.lang.NullPointerException: Attempt to invoke virtual method 'com.android.okhttp.Request com.android.okhttp.Response.request()' on a null object reference\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.android.okhttp.internal.http.OkHeaders.varyHeaders(OkHeaders.java:180)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.android.okhttp.Cache$Entry.<init>(Cache.java:547)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.android.okhttp.Cache.put(Cache.java:228)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.android.okhttp.Cache.-wrap0(Cache.java)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.android.okhttp.Cache$1.put(Cache.java:142)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.android.okhttp.AndroidShimResponseCache.put(AndroidShimResponseCache.java:71)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at android.net.http.HttpResponseCache.put(HttpResponseCache.java:209)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.squareup.okhttp.internal.http.ResponseCacheAdapter.put(ResponseCacheAdapter.java:109)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:633)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:381)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:328)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getHeaderFields(HttpURLConnectionImpl.java:175)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.squareup.okhttp.internal.http.DelegatingHttpsURLConnection.getHeaderFields(DelegatingHttpsURLConnection.java:178)\n04-25 09:19:23.659  5471  5495 E AndroidRuntime:         at com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.getHeaderFields(HttpsURLConnectionImpl.java:25)\n\nIt's a valid failure - the app in question is bundling a version of OkHttp and so the shim layer (converting between java.net and OkHttp classes) is being used. It's not handling Vary headers properly. I'm going to upload a fix.\n", "url": "https://github.com/square/okhttp/issues/1589", "user": "nfuller", "labels": ["bug"], "created": "2015-04-28 15:44:34", "closed": "2015-05-11 08:15:35", "commits": {"e2b324d631197832c104ea111c9a08cd59f1c63e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "e2b324d631197832c104ea111c9a08cd59f1c63e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b43f442c3dde4c2525b1627876d92ef937b62d9a", "b7baf23d86305762ea4e42adc4054c0840eca5ca"], "nameRev": "e2b324d631197832c104ea111c9a08cd59f1c63e tags/parent-2.4.0-RC1~34", "commitMessage": "Merge pull request #1590 from nfuller/AndroidResponseCacheIssues\n\nFix for issue #1589: Vary caching on Android", "commitDateTime": "2015-04-30 12:19:58", "authoredDateTime": "2015-04-30 12:19:58", "commitGitStats": [{"filePath": "okhttp-android-support/src/main/java/com/squareup/okhttp/AndroidShimResponseCache.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/CacheAdapter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java", "insertions": 115, "deletions": 13, "lines": 128}, {"filePath": "okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java", "insertions": 31, "deletions": 156, "lines": 187}, {"filePath": "okhttp-android-support/src/test/java/com/squareup/okhttp/internal/huc/ResponseCacheTest.java", "insertions": 1095, "deletions": 647, "lines": 1742}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Headers.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Internal.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/OkHeaders.java", "insertions": 31, "deletions": 8, "lines": 39}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "ResponseBody#string ArrayIndexOutOfBoundsException", "body": "We're seeing lots of crashes out in the wild when attempting to read response body's as strings (for JSON parsing). This is occurring in the v2.3.0 release of OkHttp. Not sure if this is related to #1540 or not.\n\n```\njava.lang.ArrayIndexOutOfBoundsException: size=0 offset=0 byteCount=1\n    at okio.Util.checkOffsetAndCount(SourceFile:29)\n    at okio.Buffer.getByte(SourceFile:294)\n    at okio.RealBufferedSource.readHexadecimalUnsignedLong(SourceFile:269)\n    at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.readChunkSize(SourceFile:451)\n    at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.read(SourceFile:432)\n    at okio.Buffer.writeAll(SourceFile:819)\n    at okio.RealBufferedSource.readByteArray(SourceFile:92)\n    at com.squareup.okhttp.ResponseBody.bytes(SourceFile:57)\n    at com.squareup.okhttp.ResponseBody.string(SourceFile:83)\n    at com.redacted.JSONRequestCallback.onResponse(SourceFile:21)\n    at com.squareup.okhttp.Call$AsyncCall.execute(SourceFile:168)\n    at com.squareup.okhttp.internal.NamedRunnable.run(SourceFile:33)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n    at java.lang.Thread.run(Thread.java:818)\n```\n\nHere's the `JSONRequestCallback` code in case it's helpful.\n\n```\npublic abstract class JSONRequestCallback implements Callback {\n    @Override\n    public final void onResponse(Response response) throws IOException {\n        ResponseBody body = response.body();\n        try {\n            if (response.isSuccessful()) {\n                String bodyString = body.string().trim();\n                if (!TextUtils.isEmpty(bodyString)) {\n                    onSuccess(response, new JSONObject(bodyString));\n                }\n                else {\n                    onSuccess(response, null);\n                }\n            }\n            else {\n                onFailure(response.request(), new InvalidResponseException(response.code()));\n            }\n        }\n        catch (IOException e) {\n            onFailure(response.request(), e);\n        }\n        catch (JSONException | ArrayIndexOutOfBoundsException e) {\n            onFailure(response.request(), new InvalidResponseException(e));\n        }\n        finally {\n            body.close();\n        }\n    }\n\n    public void onSuccess(Response response, JSONObject json) {\n\n    }\n\n    @Override\n    public void onFailure(Request request, IOException exception) {\n\n    }\n}\n```\n", "url": "https://github.com/square/okhttp/issues/1585", "user": "cocoahero", "labels": ["bug"], "created": "2015-04-27 18:01:22", "closed": "2015-05-10 15:03:57", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "SPDY Request stuck", "body": "I have an Android bugreport in which a user has all communications with a server halted due to what appears to be a hanging SSL handshake. Full report isn't provided due to confidentiality, but I can provide some more information as needed.\n\nRelevant stacks appear to be:\n\n```\n\"OkHttp <REMOVED>\" prio=5 tid=22 Native\n  | group=\"main\" sCount=1 dsCount=0 obj=0x12c07940 self=0xaec4b000\n  | sysTid=23547 nice=0 cgrp=bg_non_interactive sched=0/0 handle=0xaef1c800\n  | state=S schedstat=( 5023230 434323 20 ) utm=0 stm=0 core=1 HZ=100\n  | stack=0xa232a000-0xa232c000 stackSize=1036KB\n  | held mutexes=\n  kernel: (couldn't read /proc/self/task/23547/stack)\n  native: #00 pc 0003b070  /system/lib/libc.so (__pselect6+20)\n  native: #01 pc 00016347  /system/lib/libc.so (select+60)\n  native: #02 pc 000152fb  /data/app/com.google.android.gms-1/lib/arm/libgmscore.so (???)\n  native: #03 pc 000196ff  /data/app/com.google.android.gms-1/lib/arm/libgmscore.so (???)\n  native: #04 pc 0207e411  /data/dalvik-cache/arm/data@app@com.google.android.gms-1@base.apk@classes.dex (Java_com_google_android_gms_org_conscrypt_NativeCrypto_SSL_1read__JLjava_io_FileDescriptor_2Lcom_google_android_gms_org_conscrypt_NativeCrypto_00024SSLHandshakeCallbacks_2_3BIII+196)\n  at com.google.android.gms.org.conscrypt.NativeCrypto.SSL_read(Native method)\n  at com.google.android.gms.org.conscrypt.r.read(SourceFile:698)\n  - locked <@addr=0x12c001d0> (a java.lang.Object)\n  at okio.Okio$2.read(Okio.java:137)\n  at okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\n  at okio.RealBufferedSource.request(RealBufferedSource.java:71)\n  at okio.RealBufferedSource.require(RealBufferedSource.java:64)\n  at okio.RealBufferedSource.readInt(RealBufferedSource.java:217)\n  at com.squareup.okhttp.internal.spdy.Spdy3$Reader.nextFrame(Spdy3.java:129)\n  at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader.execute(SpdyConnection.java:574)\n  at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n  at java.lang.Thread.run(Thread.java:818)\n```\n\n```\n\"OkHttp ConnectionPool\" daemon prio=5 tid=25 TimedWaiting\n  | group=\"main\" sCount=1 dsCount=0 obj=0x12c078e0 self=0xaec4ac00\n  | sysTid=19849 nice=0 cgrp=bg_non_interactive sched=0/0 handle=0xaec5e980\n  | state=S schedstat=( 985625 835312 7 ) utm=0 stm=0 core=0 HZ=100\n  | stack=0xa242e000-0xa2430000 stackSize=1036KB\n  | held mutexes=\n  at java.lang.Object.wait!(Native method)\n  - waiting on <0x3311b349> (a com.squareup.okhttp.ConnectionPool)\n  at com.squareup.okhttp.ConnectionPool.performCleanup(ConnectionPool.java:304)\n  - locked <0x3311b349> (a com.squareup.okhttp.ConnectionPool)\n  at com.squareup.okhttp.ConnectionPool.runCleanupUntilPoolIsEmpty(ConnectionPool.java:241)\n  at com.squareup.okhttp.ConnectionPool.access$000(ConnectionPool.java:54)\n  at com.squareup.okhttp.ConnectionPool$1.run(ConnectionPool.java:97)\n  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n  at java.lang.Thread.run(Thread.java:818)\n```\n\n```\n\"Okio Watchdog\" daemon prio=5 tid=27 Waiting\n  | group=\"main\" sCount=1 dsCount=0 obj=0x12c076a0 self=0x9cd39c00\n  | sysTid=12193 nice=0 cgrp=bg_non_interactive sched=0/0 handle=0x9b02f280\n  | state=S schedstat=( 183982797 342420840 5954 ) utm=4 stm=14 core=1 HZ=100\n  | stack=0x99859000-0x9985b000 stackSize=1036KB\n  | held mutexes=\n  at java.lang.Object.wait!(Native method)\n  - waiting on <0x03943ee4> (a java.lang.Class<okio.AsyncTimeout>)\n  at okio.AsyncTimeout.awaitTimeout(AsyncTimeout.java:297)\n  - locked <0x03943ee4> (a java.lang.Class<okio.AsyncTimeout>)\n  at okio.AsyncTimeout.access$000(AsyncTimeout.java:40)\n  at okio.AsyncTimeout$Watchdog.run(AsyncTimeout.java:272)\n```\n\n```\n\"Thread-27808\" prio=5 tid=23 Waiting\n  | group=\"main\" sCount=1 dsCount=0 obj=0x12c09120 self=0x9cd38800\n  | sysTid=8876 nice=0 cgrp=bg_non_interactive sched=0/0 handle=0xb491f100\n  | state=S schedstat=( 3802479844 5281316024 11998 ) utm=249 stm=131 core=0 HZ=100\n  | stack=0x9b55d000-0x9b55f000 stackSize=1036KB\n  | held mutexes=\n  at java.lang.Object.wait!(Native method)\n  - waiting on <0x2673c277> (a com.squareup.okhttp.internal.spdy.SpdyConnection)\n  at com.squareup.okhttp.internal.spdy.SpdyConnection.writeData(SpdyConnection.java:314)\n  - locked <0x2673c277> (a com.squareup.okhttp.internal.spdy.SpdyConnection)\n  at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink.write(SpdyStream.java:499)\n  at okio.RealBufferedSink.emitCompleteSegments(RealBufferedSink.java:156)\n  at okio.RealBufferedSink.write(RealBufferedSink.java:70)\n  at com.squareup.okhttp.RequestBody$1.writeTo(RequestBody.java:72)\n  at com.squareup.okhttp.internal.http.HttpEngine$NetworkInterceptorChain.proceed(HttpEngine.java:787)\n  at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:652)\n  at com.squareup.okhttp.Call.getResponse(Call.java:263)\n  at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:219)\n  at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:192)\n  at com.squareup.okhttp.Call.execute(Call.java:79)\n  at <APPCODE>\n  at <APPCODE>\n  at <APPCODE>\n  at <APPCODE>\n  at <APPCODE>\n  at <APPCODE>\n  at <APPCODE>\n  at android.os.Handler.dispatchMessage(Handler.java:102)\n  at android.os.Looper.loop(Looper.java:135)\n  at <APPCODE>\n```\n\nI should have observed timeouts/errors as I have:\n\n```\nclient.setConnectTimeout(2, TimeUnit.SECONDS);\nclient.setReadTimeout(4, TimeUnit.SECONDS);\nclient.setWriteTimeout(2, TimeUnit.SECONDS);\n```\n\nLooking at the rest of my logs here, the request was initiated before the logs started at around 11am, with the last log at around 1pm. The service making this request was created and initiated it therefore over 2 hours before. I also have in the logs many wifi and data connection losses and connects, so we would have expected an error or timeout by now.\n", "url": "https://github.com/square/okhttp/issues/1560", "user": "raggi", "labels": ["bug"], "created": "2015-04-15 21:12:47", "closed": "2015-04-19 14:47:42", "commits": {"1cd10441d85a35678b95811a41e0b3f9e9fab2d7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a075e848c9f633ca673e47d4230b2220a9ed8dea": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "1cd10441d85a35678b95811a41e0b3f9e9fab2d7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a075e848c9f633ca673e47d4230b2220a9ed8dea", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["80f225f01eaa5a77e252573435b294895580d06a"], "nameRev": "a075e848c9f633ca673e47d4230b2220a9ed8dea tags/parent-2.4.0-RC1~40^2", "commitMessage": "Don't get stuck waiting on the connection window.\n\nWe weren't applying the stream's timeout to writes to the underlying\nconnection. This was just a dumb bug.\n\nWhen the stream does time out waiting on a write that's blocked inside\nthe connection awaiting write window, we need to break out.\n\nCloses https://github.com/square/okhttp/issues/1560\n", "commitDateTime": "2015-04-19 10:40:32", "authoredDateTime": "2015-04-18 22:29:24", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3ConnectionTest.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 16, "deletions": 13, "lines": 29}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java", "insertions": 8, "deletions": 3, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Spdy3ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.Spdy3ConnectionTest.writeTimesOutAwaitingConnectionWindow()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.removeStream(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.writeData(int,boolean,okio.Buffer,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSink.emitDataFrame(boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSink.flush()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a075e848c9f633ca673e47d4230b2220a9ed8dea"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 24.0, "deletions": 16.0, "lines": 40.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 0.0, "INS": 4.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyConnection.removeStream(int)", "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSink.flush()", "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSink.emitDataFrame(boolean)", "com.squareup.okhttp.internal.spdy.SpdyConnection.writeData(int,boolean,okio.Buffer,long)"]}, {"title": "New breakages in OkHttp tests on Android AOSP/master", "body": "Just putting together a pull of recent changes to OkHttp for Android. These changes failed 2 out of 2 runs on Android. The test may actually be flaky, not sure yet. All in SpdyConnection. Death of the worker thread takes down the test process, as they would (by default) an Android app.\n\nIn the past these kind of problems have not always been from the test that fails, but something happening in the tear down from a prior tests.\n\nThis is a heads up. I'll look closer and there may be fixes coming. Any insights from OkHttp about recent changes from maintainers would be appreciated. Because the problems are related to SPDY they won't necessarily stop me from committing.\n\nWIP Android commit is here: https://android-review.googlesource.com/146428\n\nNot looked if there are related changes in the commits I have pulled, which are:\n\n```\nOkHttp:\nFrom b609edd07864d7191dcda8ba1f6c833c9fe170ad\nto b40f99a950cb407eff52537a97420bd253a64f63\n\nOkio:\nFrom 654ddf5e8f6311fda77e429c22d5e0e15f713b8d\nto b5811711b141b230e4e58f577c79cfbf4c2d4028\n```\n\nStack traces below:\n\n04-13 08:07:25.218  8560  8576 I TestRunner: started: cancelInFlightBeforeResponseReadThrowsIOE_SPDY_3(com.squareup.okhttp.CallTest)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime: FATAL EXCEPTION: OkHttp SpdyConnection\n04-13 08:07:25.218  8560  9199 E AndroidRuntime: Process: android.core.tests.runner, PID: 8560\n04-13 08:07:25.218  8560  9199 E AndroidRuntime: java.lang.RuntimeException: java.io.IOException: stream was reset: CANCEL\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1.execute(SpdyConnection.java:644)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at java.lang.Thread.run(Thread.java:818)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime: Caused by: java.io.IOException: stream was reset: CANCEL\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyStream.checkOutNotClosed(SpdyStream.java:572)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyStream.access$1200(SpdyStream.java:34)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink.flush(SpdyStream.java:521)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at okio.RealBufferedSink.flush(RealBufferedSink.java:217)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.mockwebserver.MockWebServer.throttledTransfer(MockWebServer.java:748)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.mockwebserver.MockWebServer.access$2300(MockWebServer.java:88)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.mockwebserver.MockWebServer$SpdySocketHandler.writeResponse(MockWebServer.java:902)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.mockwebserver.MockWebServer$SpdySocketHandler.receive(MockWebServer.java:839)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1.execute(SpdyConnection.java:642)\n04-13 08:07:25.218  8560  9199 E AndroidRuntime:        ... 4 more\n\n04-13 08:09:23.208  9256  9272 I TestRunner: started: responsesAreCached(com.squareup.okhttp.internal.http.HttpOverHttp2Test)\n04-13 08:09:23.241  9256 11131 I MockWebServer: MockWebServer[38617] starting to accept connections\n04-13 08:09:23.302  9256 10764 E AndroidRuntime: FATAL EXCEPTION: OkHttp SpdyConnection\n04-13 08:09:23.302  9256 10764 E AndroidRuntime: Process: android.core.tests.runner, PID: 9256\n04-13 08:09:23.302  9256 10764 E AndroidRuntime: java.lang.RuntimeException: java.io.IOException: closed\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1.execute(SpdyConnection.java:644)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at java.lang.Thread.run(Thread.java:818)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime: Caused by: java.io.IOException: closed\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.Http2$Writer.data(Http2.java:486)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyConnection.writeData(SpdyConnection.java:305)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink.close(SpdyStream.java:546)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at okio.RealBufferedSink.close(RealBufferedSink.java:235)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at com.squareup.okhttp.mockwebserver.MockWebServer$SpdySocketHandler.writeResponse(MockWebServer.java:903)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at com.squareup.okhttp.mockwebserver.MockWebServer$SpdySocketHandler.receive(MockWebServer.java:839)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1.execute(SpdyConnection.java:642)\n04-13 08:09:23.302  9256 10764 E AndroidRuntime:        ... 4 more\n\n04-13 08:01:47.430  6129  6145 I TestRunner: started: setFixedLengthStreamingModeSetsContentLength(com.squareup.okhttp.internal.http.HttpOverSpdy3Test)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime: FATAL EXCEPTION: OkHttp SpdyConnection\n04-13 08:01:47.434  6129  6188 E AndroidRuntime: Process: android.core.tests.runner, PID: 6129\n04-13 08:01:47.434  6129  6188 E AndroidRuntime: java.lang.RuntimeException: java.io.IOException: closed\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1.execute(SpdyConnection.java:644)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at java.lang.Thread.run(Thread.java:818)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime: Caused by: java.io.IOException: closed\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.Spdy3$Writer.sendDataFrame(Spdy3.java:397)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.Spdy3$Writer.data(Spdy3.java:392)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyConnection.writeData(SpdyConnection.java:305)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink.close(SpdyStream.java:546)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at okio.RealBufferedSink.close(RealBufferedSink.java:235)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.mockwebserver.MockWebServer$SpdySocketHandler.writeResponse(MockWebServer.java:903)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.mockwebserver.MockWebServer$SpdySocketHandler.receive(MockWebServer.java:839)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1.execute(SpdyConnection.java:642)\n04-13 08:01:47.434  6129  6188 E AndroidRuntime:        ... 4 more\n", "url": "https://github.com/square/okhttp/issues/1552", "user": "nfuller", "labels": ["bug"], "created": "2015-04-13 15:23:02", "closed": "2015-05-17 22:21:42", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "ArrayIndexOutOfBoundsException reading from stream", "body": "Our crash logger is logging a lot of these ArrayIndexOutOfBoundsExceptions when trying to read GZIP data from the response body's byte stream:\n\n```\njava.lang.ArrayIndexOutOfBoundsException: size=0 offset=0 byteCount=1\n    at okio.Util.checkOffsetAndCount(Util.java:29)\n    at okio.Buffer.getByte(Buffer.java:294)\n    at okio.RealBufferedSource.readHexadecimalUnsignedLong(RealBufferedSource.java:269)\n    at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.readChunkSize(HttpConnection.java:451)\n    at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.read(HttpConnection.java:432)\n    at okio.RealBufferedSource$1.read(RealBufferedSource.java:338)\n    at java.io.InputStream.read(InputStream.java:162)\n    at java.util.zip.InflaterInputStream.fill(InflaterInputStream.java:194)\n    at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:153)\n    at java.util.zip.GZIPInputStream.read(GZIPInputStream.java:163)\n    at java.io.FilterInputStream.read(FilterInputStream.java:118)\n```\n\nAny suggestions?\n", "url": "https://github.com/square/okhttp/issues/1540", "user": "petershu", "labels": ["bug"], "created": "2015-03-31 03:52:09", "closed": "2015-04-19 03:25:12", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "SPDY connections continuously timeout", "body": "I sometimes get into a state where all connections fail due to a SocketTimeoutException and no requests will succeed until I switch my network connectivity from wifi to cellular data. I did some googling and it seems that OkHttp returns the longest living connection. Since our application usually only keeps 1-2 SPDY connections alive, I'm guessing it would continuously reuse these potentially bad connections? This sounds similar to #202/#797, but are there any possible work arounds for this issue?\n", "url": "https://github.com/square/okhttp/issues/1525", "user": "yihuanzhou", "labels": ["bug"], "created": "2015-03-21 01:46:18", "closed": "2015-12-01 04:15:44", "commits": {}, "ttf": 255.00027777777777, "commitsDetails": []}, {"title": "EOFException in RealBufferedSource.readUtf8LineStrict(): corrupt stream", "body": "We're getting an EOF exception because the response data isn't as expected. The stream is not empty, but it also doesn't contain the data we expect.\n\n```\n java.io.EOFException: \\n not found: size=45 content=32320d0a7b225374616e6a6541706c696b6163696a65223a7b22536966726122...\n       at okio.RealBufferedSource.readUtf8LineStrict(SourceFile:200)\n       at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.readChunkSize(SourceFile:468)\n       at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.read(SourceFile:450)\n       at okio.RealBufferedSource$1.read(SourceFile:298)\n```\n\n(Forked from [issue 1114](https://github.com/square/okhttp/issues/1114).)\n", "url": "https://github.com/square/okhttp/issues/1518", "user": "swankjesse", "labels": ["bug"], "created": "2015-03-19 21:10:00", "closed": "2015-08-01 18:22:12", "commits": {}, "ttf": 134.00027777777777, "commitsDetails": []}, {"title": "EOFException in RealBufferedSource.readUtf8LineStrict(): 0-bytes in stream", "body": "We're getting an EOF exception with size=0 in the stream.\n\n```\njava.io.EOFException: \\n not found: size=0 content=...\n            at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:200)\n            at com.squareup.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:187)\n            at com.squareup.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:80)\n            at com.squareup.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:791)\n            at com.squareup.okhttp.internal.http.HttpEngine.access$200(HttpEngine.java:90)\n```\n\n(Forked from [issue 1114](https://github.com/square/okhttp/issues/1114).)\n", "url": "https://github.com/square/okhttp/issues/1517", "user": "swankjesse", "labels": ["bug"], "created": "2015-03-19 21:08:32", "closed": "2017-04-30 17:42:11", "commits": {}, "ttf": 772.0002777777778, "commitsDetails": []}, {"title": "LoggingInterceptor Recipe Can Crash", "body": "I've experience code based on the LoggingInterceptor recipe crashing with a null pointer exception because chain.proceed() returned null (probably because the call was cancelled).\n", "url": "https://github.com/square/okhttp/issues/1512", "user": "GrahamFirst", "labels": ["bug"], "created": "2015-03-17 19:48:56", "closed": "2015-04-19 02:03:28", "commits": {"b814bc61eaddf6e9a4872ed385649540ef2083d9": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 32.000277777777775, "commitsDetails": [{"commitHash": "b814bc61eaddf6e9a4872ed385649540ef2083d9", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["80f225f01eaa5a77e252573435b294895580d06a"], "nameRev": "b814bc61eaddf6e9a4872ed385649540ef2083d9 tags/parent-2.4.0-RC1~41^2", "commitMessage": "Don't return null on call.proceed().\n\nCloses https://github.com/square/okhttp/issues/1512\n", "commitDateTime": "2015-04-18 21:34:16", "authoredDateTime": "2015-04-18 21:34:16", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Call.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.asyncResponseCanBeConsumedLater().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.cancelWithInterceptor()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Call.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Call.getResponse(com.squareup.okhttp.Request,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b814bc61eaddf6e9a4872ed385649540ef2083d9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.Call.getResponse(com.squareup.okhttp.Request,boolean)"]}, {"title": "IOException in DiskLruCache.renameTo while rebuilding the journal.", "body": "```\nW/System.err( 2848): java.lang.RuntimeException: java.io.IOException\nW/System.err( 2848):    at com.squareup.okhttp.internal.DiskLruCache$1.run(DiskLruCache.java:175)\nW/System.err( 2848):    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\nW/System.err( 2848):    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\nW/System.err( 2848):    at java.lang.Thread.run(Thread.java:818)\nW/System.err( 2848): Caused by: java.io.IOException\nW/System.err( 2848):    at com.squareup.okhttp.internal.DiskLruCache.renameTo(DiskLruCache.java:403)\nW/System.err( 2848):    at com.squareup.okhttp.internal.DiskLruCache.rebuildJournal(DiskLruCache.java:385)\nW/System.err( 2848):    at com.squareup.okhttp.internal.DiskLruCache.access$300(DiskLruCache.java:88)\nW/System.err( 2848):    at com.squareup.okhttp.internal.DiskLruCache$1.run(DiskLruCache.java:171)\nW/System.err( 2848):    ... 3 more\n\n```\n", "url": "https://github.com/square/okhttp/issues/1511", "user": "crossle", "labels": ["bug"], "created": "2015-03-17 02:04:38", "closed": "2016-05-08 15:50:33", "commits": {}, "ttf": 418.0002777777778, "commitsDetails": []}, {"title": "NullPointerException in JavaApiConverter.createOkResponse", "body": "Via grebulon on stackoverflow\nhttp://stackoverflow.com/questions/29072951/httpurlconnection-failes-with-nullpointerexception-on-lollipop\n\n```\nE/ImageLoader(27386): Attempt to invoke virtual method 'boolean java.lang.String.startsWith(java.lang.String)' on a null object reference\nE/ImageLoader(27386): java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.startsWith(java.lang.String)' on a null object reference\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.StatusLine.<init>(StatusLine.java:24)\nE/ImageLoader(27386):   at com.android.okhttp.Response$Builder.statusLine(Response.java:419)\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.JavaApiConverter.createOkResponse(JavaApiConverter.java:116)\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.ResponseCacheAdapter.get(ResponseCacheAdapter.java:53)\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:269)\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:373)\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:323)\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:491)\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\nE/ImageLoader(27386):   at com.android.okhttp.internal.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\nE/ImageLoader(27386):   at com.nostra13.universalimageloader.core.download.BaseImageDownloader.getStreamFromNetwork(BaseImageDownloader.java:113)\nE/ImageLoader(27386):   at com.nostra13.universalimageloader.core.download.BaseImageDownloader.getStream(BaseImageDownloader.java:84)\nE/ImageLoader(27386):   at com.nostra13.universalimageloader.core.LoadAndDisplayImageTask.downloadImage(LoadAndDisplayImageTask.java:290)\nE/ImageLoader(27386):   at com.nostra13.universalimageloader.core.LoadAndDisplayImageTask.tryCacheImageOnDisk(LoadAndDisplayImageTask.java:273)\nE/ImageLoader(27386):   at com.nostra13.universalimageloader.core.LoadAndDisplayImageTask.tryLoadBitmap(LoadAndDisplayImageTask.java:229)\nE/ImageLoader(27386):   at com.nostra13.universalimageloader.core.LoadAndDisplayImageTask.run(LoadAndDisplayImageTask.java:135)\nE/ImageLoader(27386):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\nE/ImageLoader(27386):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\nE/ImageLoader(27386):   at java.lang.Thread.run(Thread.java:818)\n```\n", "url": "https://github.com/square/okhttp/issues/1509", "user": "swankjesse", "labels": ["bug"], "created": "2015-03-16 11:58:18", "closed": "2015-04-19 02:34:49", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "OkHttp shouldn't leak connections when interceptors throw unchecked exceptions", "body": "If an interceptor throws a `NullPointerException` or `RuntimeException`, we should make sure sockets aren't leaked. Right now it looks like they are; we should write tests and confirm that they aren't.\n\nSee https://github.com/square/okhttp/pull/1501/files\n", "url": "https://github.com/square/okhttp/issues/1502", "user": "swankjesse", "labels": ["bug"], "created": "2015-03-15 17:47:10", "closed": "2015-12-15 02:00:21", "commits": {"ae2267bc1f51609850842ebfe29ab12fe9c4852f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "01567705282a4edba960d2a71be64762a59398f3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 274.0002777777778, "commitsDetails": [{"commitHash": "ae2267bc1f51609850842ebfe29ab12fe9c4852f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "01567705282a4edba960d2a71be64762a59398f3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["193c8151136d1080cbc90be38d10490eb0e5e627"], "nameRev": "01567705282a4edba960d2a71be64762a59398f3 tags/parent-3.0.0-RC1~49^2", "commitMessage": "We don't have resource leaks in interceptor crashes anymore.\n\nYay stream allocations.\n\nCloses: https://github.com/square/okhttp/issues/1502\n", "commitDateTime": "2015-12-14 20:56:06", "authoredDateTime": "2015-12-14 20:54:49", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java", "insertions": 0, "deletions": 4, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InterceptorTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["01567705282a4edba960d2a71be64762a59398f3"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Max concurrent streams for HTTP/2", "body": "Not implemented yet. We need policy, both for synchronous and asynchronous calls into a socket that's hit its limit.\n", "url": "https://github.com/square/okhttp/issues/1484", "user": "swankjesse", "labels": ["bug"], "created": "2015-03-11 00:30:07", "closed": "2015-12-02 18:28:17", "commits": {"181f24dd9d70acce208fa69e3d1bd72be284a1d7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0694f505df8ade00b8e4ab530162143f21337181": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "c5f58e45454d1ffc621c65e377cb91345018e087": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 266.0002777777778, "commitsDetails": [{"commitHash": "181f24dd9d70acce208fa69e3d1bd72be284a1d7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0694f505df8ade00b8e4ab530162143f21337181", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c5f58e45454d1ffc621c65e377cb91345018e087", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b59a7527cabc35bb2346773a9fdcd0f9a8f862b1"], "nameRev": "c5f58e45454d1ffc621c65e377cb91345018e087 tags/parent-2.7.0~13^2", "commitMessage": "Honor the max concurrent streams setting.\n\nCloses https://github.com/square/okhttp/issues/1484\n", "commitDateTime": "2015-12-02 12:44:41", "authoredDateTime": "2015-12-01 20:29:43", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockResponse.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/{http => framed}/HttpOverHttp2Test.java", "insertions": 34, "deletions": 1, "lines": 35}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/{http => framed}/HttpOverSpdy3Test.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/{http => framed}/HttpOverSpdyTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/framed/FramedConnection.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/StreamAllocation.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/io/RealConnection.java", "insertions": 15, "deletions": 5, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockResponse.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockResponse", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockResponse.withSettings(com.squareup.okhttp.internal.framed.Settings)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockResponse.getSettings()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler.writeResponse(com.squareup.okhttp.internal.framed.FramedStream,com.squareup.okhttp.mockwebserver.MockResponse)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverHttp2Test", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverHttp2Test.serverSendsPushPromise_GET()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverHttp2Test.serverSendsPushPromise_HEAD()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.framed.HttpOverHttp2Test.settingsLimitsMaxConcurrentStreams()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdy3Test.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdy3Test", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.noDefaultContentLengthOnStreamingPost()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.authenticate()", "TOT": 11, "UPD": 3, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readAfterLastByte()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.acceptAndTransmitCookies()", "TOT": 13, "UPD": 2, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.redirect()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readTimeoutMoreGranularThanBodySize()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readTimeoutOnSlowConnection()", "TOT": 8, "UPD": 1, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest", "TOT": 14, "UPD": 0, "INS": 0, "MOV": 13, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.framed.HttpOverSpdyTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.tearDown()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readAscii(java.io.InputStream,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.gzip(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.setUp()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.get()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.emptyResponse()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.userSuppliedContentLengthHeader()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.closeAfterFlush()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.setFixedLengthStreamingModeSetsContentLength()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.spdyConnectionReuse()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.synchronousSpdyRequest()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.gzippedResponseBody()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readResponseHeaderTimeout()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.spdyConnectionTimeout()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.responsesAreCached()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.conditionalCache()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.responseCachedWithoutConsumingFullBody()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.disconnectWithStreamNotEstablished()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.assertContent(java.lang.String,java.net.HttpURLConnection,int)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.SpdyRequest", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.SpdyRequest.run()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.ConnectionPool.get(com.squareup.okhttp.Address)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FramedConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.framed.FramedConnection", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.framed.FramedConnection.maxConcurrentStreams()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.framed.FramedConnection.setSettings(com.squareup.okhttp.internal.framed.Settings)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamAllocation.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.StreamAllocation.findConnection(int,int,int,boolean)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.connect(int,int,int,java.util.List,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.connectSocket(int,int,int,com.squareup.okhttp.internal.ConnectionSpecSelector)", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.internal.io.RealConnection.allocationLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c5f58e45454d1ffc621c65e377cb91345018e087"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 61.0, "deletions": 15.0, "lines": 76.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 24.0, "UPD": 0.0, "INS": 15.0, "MOV": 2.0, "DEL": 7.0, "spoonFilesChanged": 6, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp", "okhttp/src/main/java/com/squareup/okhttp/internal/io", "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver", "okhttp/src/main/java/com/squareup/okhttp/internal/framed", "okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.mockwebserver.MockResponse.withSettings(com.squareup.okhttp.internal.framed.Settings)", "com.squareup.okhttp.internal.http.StreamAllocation.findConnection(int,int,int,boolean)", "com.squareup.okhttp.internal.io.RealConnection.connectSocket(int,int,int,com.squareup.okhttp.internal.ConnectionSpecSelector)", "com.squareup.okhttp.internal.framed.FramedConnection.setSettings(com.squareup.okhttp.internal.framed.Settings)", "com.squareup.okhttp.internal.framed.FramedConnection.maxConcurrentStreams()", "com.squareup.okhttp.mockwebserver.MockResponse", "com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler.writeResponse(com.squareup.okhttp.internal.framed.FramedStream,com.squareup.okhttp.mockwebserver.MockResponse)", "com.squareup.okhttp.ConnectionPool.get(com.squareup.okhttp.Address)", "com.squareup.okhttp.internal.io.RealConnection", "com.squareup.okhttp.internal.io.RealConnection.connect(int,int,int,java.util.List,boolean)", "com.squareup.okhttp.mockwebserver.MockResponse.getSettings()", "com.squareup.okhttp.internal.io.RealConnection.allocationLimit()", "com.squareup.okhttp.internal.framed.FramedConnection"]}, {"title": "[OkHttp] Difference in error reporting bw interceptors+sync and interceptors+async", "body": "This test https://github.com/circlespainter/okhttp/commit/7d0a1ef6ff9c16064ddcbc9b159ab149fe3176cf fails, showing a difference in behaviour between the sync and async APIs when reporting errors related to interceptors.\nIf this is known and meant to be like this, how is it best to perform interceptors error handling in the async case? TIA\n", "url": "https://github.com/square/okhttp/issues/1482", "user": "circlespainter", "labels": ["bug"], "created": "2015-03-10 09:24:02", "closed": "2015-03-15 18:20:04", "commits": {"1ab086360755fcb13356617fe6d738171889d810": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "1ab086360755fcb13356617fe6d738171889d810", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["d312d8c501e36a7d0805e8044196e37391d86e74"], "nameRev": "1ab086360755fcb13356617fe6d738171889d810 tags/parent-2.3.0~8^2", "commitMessage": "Add a test for interceptors throwing unchecked exceptions.\n\nOur behavior here is not good. Right now it looks like we're leaking\nresources; nothing is releasing the socket in a 'finally' clause when\ninterceptors crash. We're also not notifying the callback that the\ncall has failed; that's left hanging.\n\nThat said, we don't expect applications to recover from these\nexceptions.\n\nCloses https://github.com/square/okhttp/issues/1482\n", "commitDateTime": "2015-03-15 13:45:22", "authoredDateTime": "2015-03-15 13:45:22", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/InterceptorTest.java", "insertions": 97, "deletions": 0, "lines": 97}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InterceptorTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.InterceptorTest.uppercase(com.squareup.okhttp.RequestBody).15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.uppercase(okio.BufferedSink).16", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.uppercase(okio.Source).17", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.uppercase(com.squareup.okhttp.RequestBody).15.writeTo(okio.BufferedSink)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.applicationkInterceptorThrowsRuntimeExceptionSynchronous()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.networkInterceptorThrowsRuntimeExceptionSynchronous()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.interceptorThrowsRuntimeExceptionSynchronous(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.applicationInterceptorThrowsRuntimeExceptionAsynchronous()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.networkInterceptorThrowsRuntimeExceptionAsynchronous()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.interceptorThrowsRuntimeExceptionAsynchronous(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.InterceptorTest.ExceptionCatchingExecutor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ab086360755fcb13356617fe6d738171889d810"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Hostname cannot be verified in case SSL certificate is issued for IP address", "body": "OkHttp v2.2.0.\n\nFollowing exception happens when OkHttp tries to connect to a server using IP address:\n\n```\nCaused by: java.io.IOException: Hostname 192.168.1.1 not verified:\n    certificate: sha1/5iMPVYXxMn4eoyIuLZCZPWL6myM=\n    DN: CN=192.168.1.1\n    subjectAltNames: []\n    at com.squareup.okhttp.Connection.upgradeToTls(Connection.java:260)\n    at com.squareup.okhttp.Connection.connect(Connection.java:158)\n    at com.squareup.okhttp.Connection.connectAndSetOwner(Connection.java:174)\n    at com.squareup.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:120)\n    at com.squareup.okhttp.internal.http.RouteSelector.next(RouteSelector.java:131)\n    at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:312)\n    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:235)\n    at com.squareup.okhttp.Call.getResponse(Call.java:262)\n    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:219)\n    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:192)\n    at com.squareup.okhttp.Call.execute(Call.java:79)\n    at retrofit.client.OkClient.execute(OkClient.java:53)\n    at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:326)\n    ... 67 common frames omitted\n```\n\nA server has a self-signed SSL certificate which was generated for server's IP addresses using following commands:\n\n```\n$ openssl req -x509 -newkey rsa:2048 -keyout server.key.pem -out server.cert.pem -days 365 -subj /CN=192.168.1.1\n$ openssl rsa -in server.key.pem -out server.key.pem\n```\n\nAs I see in current source codes, OkHostnameVerifier class tries to verify a hostname using only IP addresses in \"alternate names\" section of SSL certificate. I think it must try to verify a hostname using CN records before.\n", "url": "https://github.com/square/okhttp/issues/1467", "user": "mnasyrov", "labels": ["bug"], "created": "2015-03-04 11:21:04", "closed": "2016-01-08 19:02:26", "commits": {}, "ttf": 310.0002777777778, "commitsDetails": []}, {"title": "Release user agent string contains \"SNAPSHOT\"", "body": "I just upgraded from version 2.1 to 2.2 (`com.squareup.okhttp:okhttp:2.2.0` in my Gradle build file), rebuilt my app, and then noticed that HTTP requests are being made with the user agent `okhttp/2.3.0-SNAPSHOT`.\n\nNot really a big deal, but perhaps it points to something that may be broken in the release process.\n", "url": "https://github.com/square/okhttp/issues/1451", "user": "orrc", "labels": ["bug"], "created": "2015-02-24 00:11:35", "closed": "2015-03-17 02:49:04", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Handilng authentication exception", "body": "I faced the problem, now realization of Client use this scenario:\n1. make request, if error (401 - Unauthenticate, interesting for issue context)\n2. if 401 code of previous response, invoke Authenticator for specifying credentials and follow up request.\n\nConsider credentials is wrong (for example user specified wrong credentials).\nthan next request will return 401 again, and this repeats MAX_FOLLOW_UPS times. After all it throws ProtocolException(\"Too many follow-up requests: \").\n\nAnd question is: \"How I can detect wrong credentials?\"\n\nThere is urge way for client uses this HTTPClient is to detect count of equal requests or something the same now. It seems as spike.\n\nIs there any different way to handle bad credentials?\n", "url": "https://github.com/square/okhttp/issues/1395", "user": "busylee999", "labels": ["bug"], "created": "2015-02-12 12:10:47", "closed": "2015-04-19 15:10:24", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "MockWebServer#shutdown fails when called before any enqueue", "body": "This seems to be trivially easy to reproduce using v2.2.0:\n\n``` java\nMockWebServer server = new MockWebServer();\nserver.play();\n// Times out and throws an exception\nserver.shutdown();\n```\n\nCalling `enqueue()` with any MockResponse between `play()` and `shutdown()` avoids the issue.\n\nHere's the exception stack trace:\n\n```\nGave up waiting for executor to shut down\njava.io.IOException: Gave up waiting for executor to shut down\n    at com.squareup.okhttp.mockwebserver.MockWebServer.shutdown(MockWebServer.java:329)\n    at com.bumptech.glide.load.data.HttpUrlFetcherServerTest.tearDown(HttpUrlFetcherServerTest.java:53)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)\n    at org.robolectric.RobolectricTestRunner$2.evaluate(RobolectricTestRunner.java:236)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.robolectric.RobolectricTestRunner$1.evaluate(RobolectricTestRunner.java:158)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:69)\n    at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:48)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n    at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n    at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n    at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n    at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:105)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n    at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)\n    at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n```\n", "url": "https://github.com/square/okhttp/issues/1372", "user": "sjudd", "labels": ["bug"], "created": "2015-02-06 17:43:24", "closed": "2015-03-07 20:26:59", "commits": {"c32411444715c89e9df6d398c4b32cf17ab58789": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "c32411444715c89e9df6d398c4b32cf17ab58789", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["efcc2df35884c44f6bd96ccdfa5b8750401aa598"], "nameRev": "c32411444715c89e9df6d398c4b32cf17ab58789 tags/parent-2.3.0~30^2", "commitMessage": "Don't crash on shutdown() before start().\n\nCloses https://github.com/square/okhttp/issues/1372\n", "commitDateTime": "2015-03-07 15:16:48", "authoredDateTime": "2015-03-07 15:16:48", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "mockwebserver/src/test/java/com/squareup/okhttp/mockwebserver/MockWebServerTest.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockWebServer.shutdown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockWebServerTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockWebServerTest.shutdownWithoutStart()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockWebServerTest.shutdownWithoutEnqueue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c32411444715c89e9df6d398c4b32cf17ab58789"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver"], "changesInPackagesSPOON": ["com.squareup.okhttp.mockwebserver.MockWebServer.shutdown()"]}, {"title": "Throw SSLException when host verification fails, not IOException", "body": "In https://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/Connection.java#L257, should throw some form of `javax.net.ssl.SSLException`, maybe `SSLPeerUnverifiedException`.\n", "url": "https://github.com/square/okhttp/issues/1360", "user": "dain", "labels": ["bug"], "created": "2015-02-01 03:04:19", "closed": "2015-02-10 05:09:03", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Socks 4 Proxy broken", "body": "OkHttp relies on the JVM implementation of SOCKS, which seems to be broken for SOCKS4.  When the JVM establishes the connection in `java.net.SocksSocketImpl#connect`, it first sends a SOCKS5 setup message:\n\n``` java\n        // This is SOCKS V5\n        out.write(PROTO_VERS);\n        out.write(2);\n        out.write(NO_AUTH);\n        out.write(USER_PASSW);\n        out.flush();\n```\n\nand then reads a 2 byte response.  Then it checks if the first byte of the response is not `5`, and if so it tries a socks 4 message _using the same socket_.\n\nThe problem is since this above message is not a wellformed SOCKS4 message, the SOCKS4 server doesn't know how much data to read.  Also a SOCKS4 response is 8 bytes, and the code only drains 2 bytes.  This means that when it gets to the SOCKS4 connect, the socket is in an unknown state and always fails.\n\nI'm not sure anything can be done other than hacking the JVM with reflection, or to write a new implementation of SOCKS 4 and 5.  \n\nRegardless of the solution the broken SOCKS 4 support should be documented, so no one else has to dig into the terrible SOCKS code in the JVM.\n", "url": "https://github.com/square/okhttp/issues/1359", "user": "dain", "labels": ["bug", "enhancement"], "created": "2015-02-01 01:59:33", "closed": "2020-03-29 18:43:11", "commits": {}, "ttf": 1883.0002777777777, "commitsDetails": []}, {"title": "Async request to invalid port hangs", "body": "An async request to an invalid port like, `http://localhost:70000` causes an exception to be logged, but does not result in a call to `com.squareup.okhttp.Callback#onFailure`.  Here is the exception I see printed to stderr.\n\n```\nException in thread \"OkHttp Dispatcher\" \njava.lang.IllegalArgumentException: port out of range:70000\n    at java.net.InetSocketAddress.checkPort(InetSocketAddress.java:143)\n    at java.net.InetSocketAddress.<init>(InetSocketAddress.java:188)\n    at com.squareup.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(RouteSelector.java:267)\n    at com.squareup.okhttp.internal.http.RouteSelector.nextProxy(RouteSelector.java:240)\n    at com.squareup.okhttp.internal.http.RouteSelector.nextUnconnected(RouteSelector.java:156)\n    at com.squareup.okhttp.internal.http.RouteSelector.next(RouteSelector.java:130)\n    at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:312)\n    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:235)\n    at com.squareup.okhttp.Call.getResponse(Call.java:262)\n    at com.squareup.okhttp.Call$ApplicationInterceptorChain.proceed(Call.java:219)\n    at com.squareup.okhttp.Call.getResponseWithInterceptorChain(Call.java:192)\n    at com.squareup.okhttp.Call.access$100(Call.java:34)\n    at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:156)\n    at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n", "url": "https://github.com/square/okhttp/issues/1358", "user": "dain", "labels": ["bug"], "created": "2015-02-01 00:28:39", "closed": "2015-02-23 04:26:54", "commits": {"c90f24948b3b79d494c599b53ea09d4e12076043": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "c90f24948b3b79d494c599b53ea09d4e12076043", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["57efb6dff00b1d0014796d2af7cc062371774c62"], "nameRev": "c90f24948b3b79d494c599b53ea09d4e12076043 tags/parent-2.3.0~34^2", "commitMessage": "Fail properly when a port is out of range.\n\nCloses https://github.com/square/okhttp/issues/1358\n", "commitDateTime": "2015-02-22 23:18:15", "authoredDateTime": "2015-02-22 23:18:15", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.invalidPort()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteSelector.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(java.net.Proxy)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c90f24948b3b79d494c599b53ea09d4e12076043"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.RouteSelector.resetNextInetSocketAddress(java.net.Proxy)"]}, {"title": "alternatives to content-length -1 MultipartBuilder", "body": "I am doing the following test:\n\n```\n @Test\n  public void testMultipartBuilder() throws Exception {\n    MockWebServer mockWebServer = new MockWebServer();\n    mockWebServer.play();\n    OkHttpClient client = new OkHttpClient();\n    mockWebServer.setDispatcher(new Dispatcher() {\n      @Override\n      public MockResponse dispatch(RecordedRequest request) throws InterruptedException {\n        if (request.getHeader(\"Content-Length\") == null) {\n          return new MockResponse()\n                  .setStatus(\"HTTP/1.1 411\")\n                  .setResponseCode(411)\n                  .addHeader(\"content-type: text/plain; charset=utf-8\")\n                  .setBody(\"Length Required\");\n        } else\n          return new MockResponse()\n                  .setStatus(\"HTTP/1.1 200\")\n                  .setResponseCode(Constants.HTTP_OK)\n                  .addHeader(\"content-type: text/plain; charset=utf-8\")\n                  .setBody(\"server: nginx\");\n      }\n    });\n\n    RequestBody requestBody = new MultipartBuilder()\n            .type(MultipartBuilder.FORM)\n            .addFormDataPart(\"title\", \"Square Logo\")\n            .addFormDataPart(\"image\", null,\n                    RequestBody.create(MediaType.parse(\"image/png\"),\n                            new File(\"website/static/logo-square.png\")))\n            .build();\n    com.squareup.okhttp.Request request = new com.squareup.okhttp.Request.Builder()\n            .url(mockWebServer.getUrl(\"/images/\"))\n            .post(requestBody)\n            .build();\n    com.squareup.okhttp.Response response = client.newCall(request).execute();\n    assertTrue(response.isSuccessful());\n  }\n```\n\n the  `contentLength()` from `MultipartBuilder` returns the number of bytes that will be written to out in a call to `writeTo`, or -1 if that count is unknown.\n\nAs this happens it does not send the header  `Content-Length`, and my need this header to process the request.\n\nwhat options exist to obtain the content-length?\n", "url": "https://github.com/square/okhttp/issues/1349", "user": "felipeska", "labels": ["bug"], "created": "2015-01-27 16:39:37", "closed": "2015-02-23 03:07:25", "commits": {"dde9196a49fd1dc50be65e4381518eb4cd9a953f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "dde9196a49fd1dc50be65e4381518eb4cd9a953f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b4a9de148766daf970ec38564156f95b3830e16c"], "nameRev": "dde9196a49fd1dc50be65e4381518eb4cd9a953f tags/parent-2.3.0~35^2", "commitMessage": "Compute the content length of multipart bodies.\n\nCloses https://github.com/square/okhttp/issues/1349\n", "commitDateTime": "2015-02-22 21:49:51", "authoredDateTime": "2015-02-22 21:49:51", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/MultipartBuilderTest.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/MultipartBuilder.java", "insertions": 41, "deletions": 3, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MultipartBuilderTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.MultipartBuilderTest.fieldAndTwoFiles()", "TOT": 23, "UPD": 18, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.MultipartBuilderTest.singlePart()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.MultipartBuilderTest.threeParts()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MultipartBuilder.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.MultipartBuilder.MultipartRequestBody.writeTo(okio.BufferedSink)", "TOT": 10, "UPD": 2, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.MultipartBuilder.MultipartRequestBody", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.MultipartBuilder.MultipartRequestBody.contentLength()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.MultipartBuilder.MultipartRequestBody.writeOrCountBytes(okio.BufferedSink,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dde9196a49fd1dc50be65e4381518eb4cd9a953f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 41, "deletions": 3, "lines": 44, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 18, "UPD": 2, "INS": 7, "MOV": 8, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.MultipartBuilder.MultipartRequestBody.contentLength()", "com.squareup.okhttp.MultipartBuilder.MultipartRequestBody.writeOrCountBytes(okio.BufferedSink,boolean)", "com.squareup.okhttp.MultipartBuilder.MultipartRequestBody", "com.squareup.okhttp.MultipartBuilder.MultipartRequestBody.writeTo(okio.BufferedSink)"]}, {"title": "TLS fallback negotiation could be smarter", "body": "Demonstrated by tests in this commit:\n\nhttps://github.com/nfuller/okhttp/commit/a590ddb385d699ecf1d8968bf5e75f5d97120299\n\nThis is a compact demonstration of the behavior that is being fixed/modified by square#1339.\n\n2 of the tests actually pass before and after but are useful demonstrations of behavior and act as regression tests for square#1339.\n\nThe tests (with minor changes) are included in square#1339.\n\n3 new tests in CallTest:\n\nfirstConnectionSpecAvoidedWhenPrimaryTlsVersionNotSupported\n- Fails because the connection is being attempted twice with the same\n  enabled protocols (TLSv1). OkHttp should only make one attempt to\n  connect  to the server with any given configuration.\n\nsecondConnectionSpecAvoidedWhenPrimaryTlsVersionNotSupported\n- Succeeds, but only because the second connection attempt is being\n  made with zero enabled TLS versions. It finds this out too late:\n  it should not have made the raw socket connection in the first place.\n\nrequestExceptionDoesNotCauseTlsDowngrade\n- Succeeds. OkHttp correctly recognizes that the DISCONNECT_AFTER_REQUEST\n  causes an Exception that should not cause a re-negotiation. This\n  is achieved in the RouteSelector in the existing code and because negotiation is handled by\n  Connection / SocketConnector in square#1339\n", "url": "https://github.com/square/okhttp/issues/1343", "user": "nfuller", "labels": ["bug"], "created": "2015-01-22 13:50:12", "closed": "2015-05-10 15:09:09", "commits": {}, "ttf": 108.00027777777778, "commitsDetails": []}, {"title": " New issue Native crash in SSL_CTX_set_alpn_protos", "body": "Using OkHTTP 2.2.0 and CyanogenMod v11 M1.\n\n```\n01-19 13:18:46.390: A/libc(29229): invalid address or address of corrupt block 0x4ca9a688 passed to dlfree\n01-19 13:18:46.390: A/libc(29229): Fatal signal 11 (SIGSEGV) at 0xdeadbaad (code=1), thread 29341 (Thread-510)\n01-19 13:18:46.490: I/DEBUG(138): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n01-19 13:18:46.490: I/DEBUG(138): Build fingerprint: 'K-Touch/CM_KT_S5/KT_S5:4.4.4/FTZ/14B0709112658:userdebug/test-keys'\n01-19 13:18:46.490: I/DEBUG(138): Revision: '0'\n01-19 13:18:46.490: I/DEBUG(138): pid: 29229, tid: 29341, name: Thread-510  >>> me.siegenthaler.utone.spotify <<<\n01-19 13:18:46.490: I/DEBUG(138): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\n01-19 13:18:46.490: I/DEBUG(138): Abort message: 'invalid address or address of corrupt block 0x4ca9a688 passed to dlfree'\n01-19 13:18:46.720: I/DEBUG(138):     r0 00000000  r1 4034fe6b  r2 deadbaad  r3 403539ef\n01-19 13:18:46.720: I/DEBUG(138):     r4 4ca9a688  r5 4035e180  r6 4000f000  r7 4ca9a690\n01-19 13:18:46.720: I/DEBUG(138):     r8 517c8b0c  r9 4cb22b24  sl 4c87e9e8  fp 517c8b24\n01-19 13:18:46.720: I/DEBUG(138):     ip 00000001  sp 517c8aa8  lr 403215e7  pc 403215e8  cpsr 600d0030\n01-19 13:18:46.720: I/DEBUG(138):     d0  2064657372666c64  d1  2073736572646461\n01-19 13:18:46.720: I/DEBUG(138):     d2  657264646120726f  d3  6f6320666f207373\n01-19 13:18:46.720: I/DEBUG(138):     d4  0032006100640065  d5  0064006200630033\n01-19 13:18:46.720: I/DEBUG(138):     d6  0037006200300066  d7  0037003800350035\n01-19 13:18:46.720: I/DEBUG(138):     d8  0000000000000000  d9  0000000000000000\n01-19 13:18:46.720: I/DEBUG(138):     d10 0000000000000000  d11 0000000000000000\n01-19 13:18:46.720: I/DEBUG(138):     d12 0000000000000000  d13 0000000000000000\n01-19 13:18:46.720: I/DEBUG(138):     d14 0000000000000000  d15 0000000000000000\n01-19 13:18:46.720: I/DEBUG(138):     d16 0000000000000000  d17 0000000000000000\n01-19 13:18:46.720: I/DEBUG(138):     d18 0000000000000000  d19 0000000000000000\n01-19 13:18:46.720: I/DEBUG(138):     d20 ff004f8c4e8c508c  d21 000000000000001f\n01-19 13:18:46.720: I/DEBUG(138):     d22 0010001000100010  d23 0000000000000020\n01-19 13:18:46.720: I/DEBUG(138):     d24 0000000000000020  d25 0000000000000009\n01-19 13:18:46.720: I/DEBUG(138):     d26 0000000000000000  d27 0000000000000001\n01-19 13:18:46.720: I/DEBUG(138):     d28 ff00280028002e00  d29 0000000000000004\n01-19 13:18:46.720: I/DEBUG(138):     d30 0000000000000000  d31 0000000000000000\n01-19 13:18:46.720: I/DEBUG(138):     scr 68000010\n01-19 13:18:46.790: I/DEBUG(138): backtrace:\n01-19 13:18:46.790: I/DEBUG(138):     #00  pc 000115e8  /system/lib/libc.so (dlfree+1191)\n01-19 13:18:46.790: I/DEBUG(138):     #01  pc 0000db67  /system/lib/libc.so (free+10)\n01-19 13:18:46.790: I/DEBUG(138):     #02  pc 000836c3  /system/lib/libcrypto.so (CRYPTO_free+34)\n01-19 13:18:46.790: I/DEBUG(138):     #03  pc 00027049  /system/lib/libssl.so (SSL_CTX_set_alpn_protos+16)\n01-19 13:18:46.790: I/DEBUG(138):     #04  pc 00008b83  /system/lib/libjavacrypto.so\n01-19 13:18:46.790: I/DEBUG(138):     #05  pc 0001ea10  /system/lib/libdvm.so (dvmPlatformInvoke+116)\n01-19 13:18:46.790: I/DEBUG(138):     #06  pc 0004c3c7  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+398)\n01-19 13:18:46.790: I/DEBUG(138):     #07  pc 00027ea0  /system/lib/libdvm.so\n01-19 13:18:46.790: I/DEBUG(138):     #08  pc 0002cdf0  /system/lib/libdvm.so (dvmMterpStd(Thread*)+144)\n01-19 13:18:46.790: I/DEBUG(138):     #09  pc 0002bf0c  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+252)\n01-19 13:18:46.800: I/DEBUG(138):     #10  pc 0005e707  /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, std::__va_list)+338)\n01-19 13:18:46.800: I/DEBUG(138):     #11  pc 0005e72b  /system/lib/libdvm.so (dvmCallMethod(Thread*, Method const*, Object*, JValue*, ...)+20)\n01-19 13:18:46.800: I/DEBUG(138):     #12  pc 00053453  /system/lib/libdvm.so\n01-19 13:18:46.800: I/DEBUG(138):     #13  pc 0000d248  /system/lib/libc.so (__thread_entry+72)\n01-19 13:18:46.800: I/DEBUG(138):     #14  pc 0000d4e0  /system/lib/libc.so (pthread_create+508)\n01-19 13:18:46.800: I/DEBUG(138): stack:\n01-19 13:18:46.800: I/DEBUG(138):          517c8a68  484f1fed  /system/lib/libjavacrypto.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8a6c  40ad4bec  /system/lib/libcrypto.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8a70  00000006  \n01-19 13:18:46.800: I/DEBUG(138):          517c8a74  7439850c  \n01-19 13:18:46.800: I/DEBUG(138):          517c8a78  4ca9a688  \n01-19 13:18:46.800: I/DEBUG(138):          517c8a7c  4035e180  \n01-19 13:18:46.800: I/DEBUG(138):          517c8a80  4000f000  \n01-19 13:18:46.800: I/DEBUG(138):          517c8a84  4032294d  /system/lib/libc.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8a88  4034fe6b  /system/lib/libc.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8a8c  517c8a9c  [stack:29341]\n01-19 13:18:46.800: I/DEBUG(138):          517c8a90  403539ef  /system/lib/libc.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8a94  403215e7  /system/lib/libc.so (dlfree+1190)\n01-19 13:18:46.800: I/DEBUG(138):          517c8a98  4034fe6b  /system/lib/libc.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8a9c  4ca9a688  \n01-19 13:18:46.800: I/DEBUG(138):          517c8aa0  403539ef  /system/lib/libc.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8aa4  c0000000  \n01-19 13:18:46.800: I/DEBUG(138):     #00  517c8aa8  4035a000  /system/lib/libc.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8aac  4ca9a690  \n01-19 13:18:46.800: I/DEBUG(138):          517c8ab0  0000711c  \n01-19 13:18:46.800: I/DEBUG(138):          517c8ab4  40af9e64  /system/lib/libcrypto.so\n01-19 13:18:46.800: I/DEBUG(138):          517c8ab8  4cb22b30  \n01-19 13:18:46.800: I/DEBUG(138):          517c8abc  4031db69  /system/lib/libc.so (free+12)\n01-19 13:18:46.800: I/DEBUG(138):     #01  517c8ac0  23600005  \n01-19 13:18:46.800: I/DEBUG(138):          517c8ac4  40a996c5  /system/lib/libcrypto.so (CRYPTO_free+36)\n01-19 13:18:46.800: I/DEBUG(138):     #02  517c8ac8  00000018  \n01-19 13:18:46.800: I/DEBUG(138):          517c8acc  502094f0  \n01-19 13:18:46.800: I/DEBUG(138):          517c8ad0  41a3e600  /dev/ashmem/dalvik-heap (deleted)\n01-19 13:18:46.800: I/DEBUG(138):          517c8ad4  40b2904d  /system/lib/libssl.so (SSL_CTX_set_alpn_protos+20)\n01-19 13:18:46.810: I/DEBUG(138): memory near r1:\n01-19 13:18:46.810: I/DEBUG(138):     4034fe48 74707572 206e6f69 65746564 64657463  \n01-19 13:18:46.810: I/DEBUG(138):     4034fe58 20796220 6c007325 5f636269 6c6c616d  \n01-19 13:18:46.810: I/DEBUG(138):     4034fe68 6900636f 6c61766e 61206469 65726464  \n01-19 13:18:46.810: I/DEBUG(138):     4034fe78 6f207373 64612072 73657264 666f2073  \n01-19 13:18:46.810: I/DEBUG(138):     4034fe88 726f6320 74707572 6f6c6220 25206b63  \n01-19 13:18:46.810: I/DEBUG(138):     4034fe98 61702070 64657373 206f7420 6d007325  \n01-19 13:18:46.810: I/DEBUG(138):     4034fea8 73207861 65747379 7962206d 20736574  \n01-19 13:18:46.810: I/DEBUG(138):     4034feb8 3125203d 0a756c30 73797300 206d6574  \n01-19 13:18:46.810: I/DEBUG(138):     4034fec8 65747962 20202073 203d2020 6c303125  \n01-19 13:18:46.810: I/DEBUG(138):     4034fed8 69000a75 7375206e 79622065 20736574  \n01-19 13:18:46.810: I/DEBUG(138):     4034fee8 20202020 3125203d 0a756c30 61747300  \n01-19 13:18:46.810: I/DEBUG(138):     4034fef8 63206b63 7572726f 6f697470 6564206e  \n01-19 13:18:46.810: I/DEBUG(138):     4034ff08 74636574 25006465 64253a73 7361203a  \n01-19 13:18:46.810: I/DEBUG(138):     4034ff18 74726573 206e6f69 22732522 69616620  \n01-19 13:18:46.810: I/DEBUG(138):     4034ff28 0064656c 253a7325 25203a64 61203a73  \n01-19 13:18:46.810: I/DEBUG(138):     4034ff38 72657373 6e6f6974 73252220 61662022  \n01-19 13:18:46.810: I/DEBUG(138): memory near r3:\n01-19 13:18:46.810: I/DEBUG(138):     403539cc 72616873 6c206465 61726269 000a7972  \n01-19 13:18:46.810: I/DEBUG(138):     403539dc 65746e69 6c616e72 6c75625f 72665f6b  \n01-19 13:18:46.810: I/DEBUG(138):     403539ec 64006565 6572666c 6d740065 6f6c6c61  \n01-19 13:18:46.810: I/DEBUG(138):     403539fc 6d735f63 006c6c61 6c616d74 5f636f6c  \n01-19 13:18:46.810: I/DEBUG(138):     40353a0c 6772616c 6c640065 6c6c616d 7400636f  \n01-19 13:18:46.810: I/DEBUG(138):     40353a1c 725f7972 6c6c6165 635f636f 6b6e7568  \n01-19 13:18:46.820: I/DEBUG(138):     40353a2c 73696400 65736f70 7568635f 61006b6e  \n01-19 13:18:46.820: I/DEBUG(138):     40353a3c 735f6464 656d6765 7000746e 65706572  \n01-19 13:18:46.820: I/DEBUG(138):     40353a4c 615f646e 636f6c6c 6c657200 65736165  \n01-19 13:18:46.820: I/DEBUG(138):     40353a5c 756e755f 5f646573 6d676573 73746e65  \n01-19 13:18:46.820: I/DEBUG(138):     40353a6c 746e6d00 2a746e65 74656720 65746e6d  \n01-19 13:18:46.820: I/DEBUG(138):     40353a7c 4628746e 2a454c49 6e690029 74742074  \n01-19 13:18:46.820: I/DEBUG(138):     40353a8c 6d616e79 28725f65 2c746e69 61686320  \n01-19 13:18:46.820: I/DEBUG(138):     40353a9c 202c2a72 657a6973 0029745f 64696f76  \n01-19 13:18:46.820: I/DEBUG(138):     40353aac 646e6520 6e657770 00292874 72616863  \n01-19 13:18:46.820: I/DEBUG(138):     40353abc 6567202a 65737574 65687372 29286c6c  \n01-19 13:18:46.820: I/DEBUG(138): memory near r4:\n01-19 13:18:46.820: I/DEBUG(138):     4ca9a668 00000400 00000000 00000000 0000001b  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a678 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a688 4035e1d0 00000021 4035e1c8 4035e1c8  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a698 2f796470 08312e33 70747468 312e312f  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6a8 00000020 000003c2 00000001 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6b8 00000000 00000004 00000001 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6c8 00030000 000000f7 000000ac 00000001  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6d8 00000100 00000100 00000100 00030000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6e8 00030000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6f8 00030000 00010000 0000007b 00000056  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a708 00000001 00000080 00000080 00000080  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a718 00010000 00010000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a728 00000000 00040000 00004000 0000003d  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a738 0000002b 00000001 00000040 00000040  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a748 00000040 00004000 00004000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a758 00000000 00000000 00044000 00001000  \n01-19 13:18:46.820: I/DEBUG(138): memory near r5:\n01-19 13:18:46.820: I/DEBUG(138):     4035e160 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4035e170 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4035e180 83363fdc 0000dfcb 00000088 00003fd8  \n01-19 13:18:46.820: I/DEBUG(138):     4035e190 4000f000 4e07c268 502d5000 00200000  \n01-19 13:18:46.820: I/DEBUG(138):     4035e1a0 00000766 01e9e5c8 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4035e1b0 4035e1a8 4035e1a8 4035e1b0 4035e1b0  \n01-19 13:18:46.820: I/DEBUG(138):     4035e1c0 4ca9ea20 4de83ad0 4df88688 4df88688  \n01-19 13:18:46.820: I/DEBUG(138):     4035e1d0 4ca9a688 4ca9a688 4e090f08 4e090f08  \n01-19 13:18:46.820: I/DEBUG(138):     4035e1e0 473b3ae8 473b3ae8 4e2f0fa0 4cb3ad98  \n01-19 13:18:46.820: I/DEBUG(138):     4035e1f0 4ca0dc10 4de340e0 4c9def80 4c9def80  \n01-19 13:18:46.820: I/DEBUG(138):     4035e200 4ded7930 4cb3a690 4df88408 4dfaa260  \n01-19 13:18:46.820: I/DEBUG(138):     4035e210 4df836e0 4df836e0 4df22ed8 4df22ed8  \n01-19 13:18:46.820: I/DEBUG(138):     4035e220 4c8e1210 4c8e1210 4850bb58 4850bb58  \n01-19 13:18:46.820: I/DEBUG(138):     4035e230 4c8e10f0 4c8e10f0 4df83860 4ca21540  \n01-19 13:18:46.820: I/DEBUG(138):     4035e240 4dfaa188 4dfaa188 4c5917b0 4c5917b0  \n01-19 13:18:46.820: I/DEBUG(138):     4035e250 4ca21470 4ca21470 4ca0dd78 4ca0dd78  \n01-19 13:18:46.820: I/DEBUG(138): memory near r6:\n01-19 13:18:46.820: I/DEBUG(138):     4000efe0 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000eff0 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f000 00000000 0000200b 4850f248 0000003a  \n01-19 13:18:46.820: I/DEBUG(138):     4000f010 48513695 00000034 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f020 00000000 00000000 4850cfac 0000002d  \n01-19 13:18:46.820: I/DEBUG(138):     4000f030 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f040 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f050 48510a52 0000003c 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f060 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f070 00000000 00000000 48515e69 0000003a  \n01-19 13:18:46.820: I/DEBUG(138):     4000f080 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f090 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f0a0 00000000 00000000 485151cc 0000002a  \n01-19 13:18:46.820: I/DEBUG(138):     4000f0b0 4851111e 00000027 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4000f0c0 00000000 00000000 485105af 00000034  \n01-19 13:18:46.820: I/DEBUG(138):     4000f0d0 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138): memory near r7:\n01-19 13:18:46.820: I/DEBUG(138):     4ca9a670 00000000 0000001b 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a680 00000000 00000000 4035e1d0 00000021  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a690 4035e1c8 4035e1c8 2f796470 08312e33  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6a0 70747468 312e312f 00000020 000003c2  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6b0 00000001 00000000 00000000 00000004  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6c0 00000001 00000000 00030000 000000f7  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6d0 000000ac 00000001 00000100 00000100  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6e0 00000100 00030000 00030000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a6f0 00000000 00000000 00030000 00010000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a700 0000007b 00000056 00000001 00000080  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a710 00000080 00000080 00010000 00010000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a720 00000000 00000000 00000000 00040000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a730 00004000 0000003d 0000002b 00000001  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a740 00000040 00000040 00000040 00004000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a750 00004000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     4ca9a760 00044000 00001000 0000001e 00000015  \n01-19 13:18:46.820: I/DEBUG(138): memory near r8:\n01-19 13:18:46.820: I/DEBUG(138):     517c8aec 4c87ee30 23600005 41a3e600 4c87e9d8  \n01-19 13:18:46.820: I/DEBUG(138):     517c8afc 476bafa8 4c87e9d8 416b0a14 23600005  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b0c 416d93ad 4cb22b24 00000001 415a9257  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b1c 418fc980 00000008 416de3cb 4cb22b24  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b2c 415a9254 484f3b55 4c87e9e8 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b3c 00000000 2c300001 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b4c 4035e384 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b5c 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b6c 00000000 4c87e9d8 475298f8 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b7c 00000000 417442a8 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b8c 416f0a19 00000000 00000000 4cb22a6c  \n01-19 13:18:46.820: I/DEBUG(138):     517c8b9c 4035e384 41935d50 417dfd58 41a3e678  \n01-19 13:18:46.820: I/DEBUG(138):     517c8bac 7439850c 417dfd58 4035e384 41a3e6d8  \n01-19 13:18:46.820: I/DEBUG(138):     517c8bbc 416f50cb 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     517c8bcc 00000000 00000000 00000000 00000000  \n01-19 13:18:46.820: I/DEBUG(138):     517c8bdc 7439850c 4173cc6c 7439850c 00000018  \n01-19 13:18:46.820: I/DEBUG(138): memory near r9:\n01-19 13:18:46.820: I/DEBUG(138):     4cb22b04 00000000 4cb22b44 41596ed0 4cb22b44  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b14 41596f04 476bafa8 00000000 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b24 502094f0 00000000 23600005 4cb22bfc  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b34 4ecd6754 47529c78 41596f04 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b44 502094f0 00000000 41a3e5f0 417caa48  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b54 00000000 41a3dc38 41a3e4f8 00000001  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b64 4ecd7ce2 477c3028 4edd722a 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b74 00000001 41a3e4f8 41c64f98 41a3e218  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b84 417ef278 00000001 00000000 41c65020  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22b94 41a3dc38 41a39ef0 00000001 4cb22bfc  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22ba4 4ecd674e 4772f5e8 4ecd7ce2 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22bb4 41c79290 00000000 41a3dc38 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22bc4 00000400 000001bb 41c79300 502094f0  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22bd4 00000000 00000000 41a324c0 41a3dc38  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22be4 41a3dc38 4cb22c48 4ecd6a94 477c8e68  \n01-19 13:18:46.830: I/DEBUG(138):     4cb22bf4 4ecd6754 00000000 41a3d1b8 00003a98  \n01-19 13:18:46.830: I/DEBUG(138): memory near sl:\n01-19 13:18:46.830: I/DEBUG(138):     4c87e9c8 4c76b7b8 00000000 00000018 0000045b  \n01-19 13:18:46.830: I/DEBUG(138):     4c87e9d8 485964c0 4cb22b24 47529c78 40051000  \n01-19 13:18:46.830: I/DEBUG(138):     4c87e9e8 4c5915c8 00000000 517c8c40 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     4c87e9f8 517c8c94 0000001b 00000000 416b0b80  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea08 00000000 00000000 468d6870 4cb1f300  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea18 00000000 00000000 00000001 00004000  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea28 00000000 4c87ee50 416b0b80 416b5ac0  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea38 00000000 416b9bbc 416b9c30 416b9ae0  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea48 416b9b00 416b9b5c 00000000 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea58 4c689070 00000028 00000000 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea68 00000000 00000006 00002000 417419fc  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea78 00000000 473e2c58 00000002 4c87f098  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea88 00000001 00000040 00000200 00000004  \n01-19 13:18:46.830: I/DEBUG(138):     4c87ea98 00000003 4859f13e 4859f13e 00000006  \n01-19 13:18:46.830: I/DEBUG(138):     4c87eaa8 4859f14a 47413800 d4b8ed6a 89444642  \n01-19 13:18:46.830: I/DEBUG(138):     4c87eab8 a2c0fede eff657ad 5d9c9469 4a34cc78  \n01-19 13:18:46.830: I/DEBUG(138): memory near fp:\n01-19 13:18:46.830: I/DEBUG(138):     517c8b04 416b0a14 23600005 416d93ad 4cb22b24  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b14 00000001 415a9257 418fc980 00000008  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b24 416de3cb 4cb22b24 415a9254 484f3b55  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b34 4c87e9e8 00000000 00000000 2c300001  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b44 00000000 00000000 4035e384 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b54 00000000 00000000 00000000 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b64 00000000 00000000 00000000 4c87e9d8  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b74 475298f8 00000000 00000000 417442a8  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b84 00000000 00000000 416f0a19 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b94 00000000 4cb22a6c 4035e384 41935d50  \n01-19 13:18:46.830: I/DEBUG(138):     517c8ba4 417dfd58 41a3e678 7439850c 417dfd58  \n01-19 13:18:46.830: I/DEBUG(138):     517c8bb4 4035e384 41a3e6d8 416f50cb 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8bc4 00000000 00000000 00000000 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8bd4 00000000 00000000 7439850c 4173cc6c  \n01-19 13:18:46.830: I/DEBUG(138):     517c8be4 7439850c 00000018 417dfd58 475298f8  \n01-19 13:18:46.830: I/DEBUG(138):     517c8bf4 41a3dc38 41a3e4f8 41a3e6d8 417442a8  \n01-19 13:18:46.830: I/DEBUG(138): memory near sp:\n01-19 13:18:46.830: I/DEBUG(138):     517c8a88 4034fe6b 517c8a9c 403539ef 403215e7  \n01-19 13:18:46.830: I/DEBUG(138):     517c8a98 4034fe6b 4ca9a688 403539ef c0000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8aa8 4035a000 4ca9a690 0000711c 40af9e64  \n01-19 13:18:46.830: I/DEBUG(138):     517c8ab8 4cb22b30 4031db69 23600005 40a996c5  \n01-19 13:18:46.830: I/DEBUG(138):     517c8ac8 00000018 502094f0 41a3e600 40b2904d  \n01-19 13:18:46.830: I/DEBUG(138):     517c8ad8 502094f0 41a3e600 00000004 484f3b87  \n01-19 13:18:46.830: I/DEBUG(138):     517c8ae8 00000003 4c87ee30 23600005 41a3e600  \n01-19 13:18:46.830: I/DEBUG(138):     517c8af8 4c87e9d8 476bafa8 4c87e9d8 416b0a14  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b08 23600005 416d93ad 4cb22b24 00000001  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b18 415a9257 418fc980 00000008 416de3cb  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b28 4cb22b24 415a9254 484f3b55 4c87e9e8  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b38 00000000 00000000 2c300001 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b48 00000000 4035e384 00000000 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b58 00000000 00000000 00000000 00000000  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b68 00000000 00000000 4c87e9d8 475298f8  \n01-19 13:18:46.830: I/DEBUG(138):     517c8b78 00000000 00000000 417442a8 00000000  \n01-19 13:18:46.830: I/DEBUG(138): code around pc:\n01-19 13:18:46.830: I/DEBUG(138):     403215c8 6a014478 62021e4a f7fdb95a e008fd39  \n01-19 13:18:46.830: I/DEBUG(138):     403215d8 4a2b482a 447a4478 f0014621 4a13f9ab  \n01-19 13:18:46.830: I/DEBUG(138):     403215e8 49286014 f8d14479 079a31bc f501d51c  \n01-19 13:18:46.830: I/DEBUG(138):     403215f8 e8bd70e0 f02c40f8 4823b859 f7fd4478  \n01-19 13:18:46.830: I/DEBUG(138):     40321608 4822fd0d e7fa4478 42b7688f ae10f43f  \n01-19 13:18:46.830: I/DEBUG(138):     40321618 481fe611 e7f24478 4478481e 6888e7ef  \n01-19 13:18:46.840: I/DEBUG(138):     40321628 f43f4298 e606aed4 bf00bdf8 deadbaad  \n01-19 13:18:46.840: I/DEBUG(138):     40321638 0003d02a 0003d01c 0003cf84 000327a9  \n01-19 13:18:46.840: I/DEBUG(138):     40321648 0003cef8 0003cee6 0003ce6e 0003ce4c  \n01-19 13:18:46.840: I/DEBUG(138):     40321658 0003cdf0 0003cdda 0003cd74 0003cd5c  \n01-19 13:18:46.840: I/DEBUG(138):     40321668 0003cd4a 0003ccf4 0003cccc 0003cc46  \n01-19 13:18:46.840: I/DEBUG(138):     40321678 0003cbec 0003cbd2 0003cbb4 0002e88b  \n01-19 13:18:46.840: I/DEBUG(138):     40321688 0003240d 0003cb90 000323e7 000323df  \n01-19 13:18:46.840: I/DEBUG(138):     40321698 000323cf 000323c9 460db538 b1704601  \n01-19 13:18:46.840: I/DEBUG(138):     403216a8 0200ea45 f405fb00 04030c10 4620b143  \n01-19 13:18:46.840: I/DEBUG(138):     403216b8 eecaf028 bf1842a8 34fff04f 4604e000  \n01-19 13:18:46.840: I/DEBUG(138): code around lr:\n01-19 13:18:46.840: I/DEBUG(138):     403215c4 482e61a3 6a014478 62021e4a f7fdb95a  \n01-19 13:18:46.840: I/DEBUG(138):     403215d4 e008fd39 4a2b482a 447a4478 f0014621  \n01-19 13:18:46.840: I/DEBUG(138):     403215e4 4a13f9ab 49286014 f8d14479 079a31bc  \n01-19 13:18:46.840: I/DEBUG(138):     403215f4 f501d51c e8bd70e0 f02c40f8 4823b859  \n01-19 13:18:46.840: I/DEBUG(138):     40321604 f7fd4478 4822fd0d e7fa4478 42b7688f  \n01-19 13:18:46.840: I/DEBUG(138):     40321614 ae10f43f 481fe611 e7f24478 4478481e  \n01-19 13:18:46.840: I/DEBUG(138):     40321624 6888e7ef f43f4298 e606aed4 bf00bdf8  \n01-19 13:18:46.840: I/DEBUG(138):     40321634 deadbaad 0003d02a 0003d01c 0003cf84  \n01-19 13:18:46.840: I/DEBUG(138):     40321644 000327a9 0003cef8 0003cee6 0003ce6e  \n01-19 13:18:46.840: I/DEBUG(138):     40321654 0003ce4c 0003cdf0 0003cdda 0003cd74  \n01-19 13:18:46.840: I/DEBUG(138):     40321664 0003cd5c 0003cd4a 0003ccf4 0003cccc  \n01-19 13:18:46.840: I/DEBUG(138):     40321674 0003cc46 0003cbec 0003cbd2 0003cbb4  \n01-19 13:18:46.840: I/DEBUG(138):     40321684 0002e88b 0003240d 0003cb90 000323e7  \n01-19 13:18:46.840: I/DEBUG(138):     40321694 000323df 000323cf 000323c9 460db538  \n01-19 13:18:46.840: I/DEBUG(138):     403216a4 b1704601 0200ea45 f405fb00 04030c10  \n01-19 13:18:46.840: I/DEBUG(138):     403216b4 4620b143 eecaf028 bf1842a8 34fff04f  \n01-19 13:18:46.840: I/DEBUG(138): memory map around fault addr deadbaad:\n01-19 13:18:46.840: I/DEBUG(138):     beb86000-beba7000 rw- [stack]\n01-19 13:18:46.840: I/DEBUG(138):     (no map for address)\n01-19 13:18:46.840: I/DEBUG(138):     ffff0000-ffff1000 r-x [vectors]\n```\n", "url": "https://github.com/square/okhttp/issues/1338", "user": "Wolftein", "labels": ["bug"], "created": "2015-01-19 16:30:42", "closed": "2015-03-09 13:19:30", "commits": {}, "ttf": 48.000277777777775, "commitsDetails": []}, {"title": "1XX response codes should work properly", "body": "Making this work for uploads is worth doing. We should do it, being mindful of the consequences for http/2.0.\n", "url": "https://github.com/square/okhttp/issues/1337", "user": "swankjesse", "labels": ["bug"], "created": "2015-01-18 02:05:52", "closed": "2016-07-10 22:08:48", "commits": {}, "ttf": 539.0002777777778, "commitsDetails": []}, {"title": "NullPointerException in WebSockets PongWriter", "body": "Sometimes when closing websocket connection I get a `NullPointerException`.\nSeems like the writer gets closed prior writing pong.\n\n```\njava.lang.NullPointerException\n    at com.squareup.okhttp.internal.ws.WebSocket$1$1.execute(WebSocket.java:205)\n    at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n    at java.lang.Thread.run(Thread.java:841)\n```\n", "url": "https://github.com/square/okhttp/issues/1319", "user": "mmarc", "labels": ["bug"], "created": "2015-01-13 13:29:27", "closed": "2015-03-09 05:39:47", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "SpdyConnection IncomingStreamHandler exceptions are swallowed", "body": "``` java\nexecutor.submit(new NamedRunnable(\"OkHttp %s stream %d\", hostName, streamId) {\n  @Override public void execute() {\n    try {\n      handler.receive(newStream);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n});\n```\n\nA `RuntimeException` was being thrown in MockWebServer's handler which caused the test to hang indefinitely with no explanation.\n", "url": "https://github.com/square/okhttp/issues/1294", "user": "JakeWharton", "labels": ["bug"], "created": "2015-01-05 07:41:29", "closed": "2015-03-11 02:13:42", "commits": {"f78f74f5a2cf1f73f974487816f998a6e37a9cf1": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 64.00027777777778, "commitsDetails": [{"commitHash": "f78f74f5a2cf1f73f974487816f998a6e37a9cf1", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["f6baae0bcbd712ac642db6d84dab026470d36f1c"], "nameRev": "f78f74f5a2cf1f73f974487816f998a6e37a9cf1 tags/parent-2.3.0~21^2", "commitMessage": "Use ExecutorService.execute, not ExecutorService.submit.\n\nThe latter returns a Future that we never call get() on, and\nnever get the exception from.\n\nFixes: https://github.com/square/okhttp/issues/1294\n", "commitDateTime": "2015-03-10 22:01:23", "authoredDateTime": "2015-03-10 22:01:10", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 8, "deletions": 8, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.writeWindowUpdateLater(int,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.writePingLater(boolean,int,int,com.squareup.okhttp.internal.spdy.Ping)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.pushRequestLater(int,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.pushHeadersLater(int,java.util.List,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.pushDataLater(int,okio.BufferedSource,int,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.pushResetLater(int,com.squareup.okhttp.internal.spdy.ErrorCode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.ackSettingsLater(com.squareup.okhttp.internal.spdy.Settings)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.headers(boolean,boolean,int,int,java.util.List,com.squareup.okhttp.internal.spdy.HeadersMode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f78f74f5a2cf1f73f974487816f998a6e37a9cf1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 8, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.ackSettingsLater(com.squareup.okhttp.internal.spdy.Settings)", "com.squareup.okhttp.internal.spdy.SpdyConnection.pushHeadersLater(int,java.util.List,boolean)", "com.squareup.okhttp.internal.spdy.SpdyConnection.writePingLater(boolean,int,int,com.squareup.okhttp.internal.spdy.Ping)", "com.squareup.okhttp.internal.spdy.SpdyConnection.writeWindowUpdateLater(int,long)", "com.squareup.okhttp.internal.spdy.SpdyConnection.pushRequestLater(int,java.util.List)", "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.headers(boolean,boolean,int,int,java.util.List,com.squareup.okhttp.internal.spdy.HeadersMode)", "com.squareup.okhttp.internal.spdy.SpdyConnection.pushDataLater(int,okio.BufferedSource,int,boolean)", "com.squareup.okhttp.internal.spdy.SpdyConnection.pushResetLater(int,com.squareup.okhttp.internal.spdy.ErrorCode)"]}, {"title": "CacheControl should remember its toString form", "body": "Yo dog.\n", "url": "https://github.com/square/okhttp/issues/1255", "user": "swankjesse", "labels": ["bug"], "created": "2014-12-30 13:14:20", "closed": "2015-01-05 01:13:03", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "OkHttp cache-by-default status codes out of date", "body": "The spec wants these:\n200, 203, 204, 206, 300, 301, 404, 405, 410, 414, and 501\n\nhttp://tools.ietf.org/html/rfc7231#section-6.1\n", "url": "https://github.com/square/okhttp/issues/1253", "user": "swankjesse", "labels": ["bug"], "created": "2014-12-29 22:53:15", "closed": "2015-01-17 03:53:23", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "ConnectionPool is broken with MAX_CONNECTIONS_TO_CLEANUP", "body": "After merging @nfuller's recent leak fix, I noticed we have a new problem. Previously we were pretty eager to trim the idle connections down to the promised limits. An application that quickly created 100 connections would just as quickly see 95 of those connections evicted!\n\nWith the new fix, it looks like we won't evict more than once every 5 minutes, and we won't evict more than 2 connections per round. That means that we can exceed our promised limits.\n\nWe can fix this by replacing `Thread.sleep()` with `wait()` and invoke `notify()` where we're currently calling `scheduleCleanupAsRequired`. That'll cause the cleanup thread to take immediate action.\n", "url": "https://github.com/square/okhttp/issues/1239", "user": "swankjesse", "labels": ["bug"], "created": "2014-12-26 06:26:53", "closed": "2014-12-29 17:56:09", "commits": {"fa0abb880ce6c98bab9f06f3ed30350ab31fedcd": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "fb525e14f4e5868ff59fd659d82951d9259d54ac": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "98c74ace40b089f2769afb3e56c59a64eef327cb": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "fa0abb880ce6c98bab9f06f3ed30350ab31fedcd", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fb525e14f4e5868ff59fd659d82951d9259d54ac", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "98c74ace40b089f2769afb3e56c59a64eef327cb", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["f1a27df8f9a895f6ef7c1e718e09c65726161a26"], "nameRev": "98c74ace40b089f2769afb3e56c59a64eef327cb tags/parent-2.2.0~10^2", "commitMessage": "Respect the max idle connections limit.\n\nThe structure here is a bit ugly. But it permits a single 'synchronized'\nblock, which makes the method easier to reason about.\n\nCloses https://github.com/square/okhttp/issues/1239\n", "commitDateTime": "2014-12-29 10:10:00", "authoredDateTime": "2014-12-28 21:33:03", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Connection.java", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/ConnectionPool.java", "insertions": 73, "deletions": 60, "lines": 133}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionPoolTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.ConnectionPoolTest.maxIdleConnectionsLimitEnforced()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPoolTest.connectionCleanup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Connection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Connection.isExpired(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.ConnectionPool.scheduleCleanupAsRequired()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool.evictAll()", "TOT": 9, "UPD": 4, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool.performCleanup()", "TOT": 24, "UPD": 4, "INS": 11, "MOV": 6, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool.recycle(com.squareup.okhttp.Connection)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool.1.run()", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool.share(com.squareup.okhttp.Connection)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool.get(com.squareup.okhttp.Address)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool.addConnection(com.squareup.okhttp.Connection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.ConnectionPool.runCleanupUntilPoolIsEmpty()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["98c74ace40b089f2769afb3e56c59a64eef327cb"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 73.0, "deletions": 68.0, "lines": 141.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 63.0, "UPD": 12.0, "INS": 19.0, "MOV": 20.0, "DEL": 12.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.ConnectionPool.share(com.squareup.okhttp.Connection)", "com.squareup.okhttp.ConnectionPool.evictAll()", "com.squareup.okhttp.ConnectionPool.recycle(com.squareup.okhttp.Connection)", "com.squareup.okhttp.ConnectionPool.1.run()", "com.squareup.okhttp.Connection.isExpired(long)", "com.squareup.okhttp.ConnectionPool.scheduleCleanupAsRequired()", "com.squareup.okhttp.ConnectionPool.addConnection(com.squareup.okhttp.Connection)", "com.squareup.okhttp.ConnectionPool.performCleanup()", "com.squareup.okhttp.ConnectionPool", "com.squareup.okhttp.ConnectionPool.runCleanupUntilPoolIsEmpty()", "com.squareup.okhttp.ConnectionPool.get(com.squareup.okhttp.Address)"]}, {"title": "Cache explodes on abortQuietly", "body": "https://code.google.com/p/android/issues/detail?id=82889\n\nThe stacktrace suggests that `journalWriter.flush()` throwing an `IOException` can cause a later `IllegalStateException` crash.\n\n```\njava.lang.IllegalStateException\n       at com.android.okhttp.internal.DiskLruCache.completeEdit(DiskLruCache.java:506)\n       at com.android.okhttp.internal.DiskLruCache.access$2200(DiskLruCache.java:86)\n       at com.android.okhttp.internal.DiskLruCache$Editor.abort(DiskLruCache.java:816)\n       at com.android.okhttp.HttpResponseCache.abortQuietly(HttpResponseCache.java:259)\n       at com.android.okhttp.HttpResponseCache.update(HttpResponseCache.java:251)\n       at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:642)\n       at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:379)\n       at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:323)\n       at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:491)\n```\n", "url": "https://github.com/square/okhttp/issues/1211", "user": "swankjesse", "labels": ["bug"], "created": "2014-12-18 16:20:41", "closed": "2015-03-14 23:02:50", "commits": {"be0ac8b4de28cca34b5979c35e6a792d0f2b305b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "49e85a1fd2ac13945be30a161286a50c0fa7485b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "be2ed31c147dcd1c833d4db5bf4b6016d98e2cd3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "e8ad80356e55fc3d5fbfc1d0da3a08b957dcbfa4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "6a683da022ae6f7507b6a96b5d2790881e8c7549": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 86.00027777777778, "commitsDetails": [{"commitHash": "be0ac8b4de28cca34b5979c35e6a792d0f2b305b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "49e85a1fd2ac13945be30a161286a50c0fa7485b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["e73a4fa5a68eced2b044486a71be9759ed8710e6"], "nameRev": "49e85a1fd2ac13945be30a161286a50c0fa7485b tags/parent-2.3.0~14^2", "commitMessage": "New file system abstraction.\n\nWorking towards https://github.com/square/okhttp/issues/1211\n", "commitDateTime": "2015-03-14 15:16:01", "authoredDateTime": "2015-03-14 15:14:04", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/DiskLruCacheTest.java", "insertions": 76, "deletions": 86, "lines": 162}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/io/InMemoryFileSystem.java", "insertions": 75, "deletions": 0, "lines": 75}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Cache.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java", "insertions": 35, "deletions": 55, "lines": 90}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Util.java", "insertions": 0, "deletions": 20, "lines": 20}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/io/FileSystem.java", "insertions": 137, "deletions": 0, "lines": 137}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DiskLruCacheTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.openWithTruncatedLineDiscardsThatLine()", "TOT": 8, "UPD": 5, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.restoreBackupFile()", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.createJournalWithHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])", "TOT": 19, "UPD": 18, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.readJournalLines()", "TOT": 12, "UPD": 5, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.readFile(java.io.File)", "TOT": 15, "UPD": 5, "INS": 2, "MOV": 2, "DEL": 6}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.writeFile(java.io.File,java.lang.String)", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.assertGarbageFilesAllDeleted()", "TOT": 16, "UPD": 5, "INS": 6, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.createNewCacheWithSize(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.aggressiveClearingHandlesPartialEdit()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.aggressiveClearingHandlesRead()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.aggressiveClearingHandlesEdit()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.aggressiveClearingHandlesWrite()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.isClosed_uninitializedCache()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.generateSomeGarbageFiles()", "TOT": 15, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 7}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.copyFile(java.io.File,java.io.File)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.openWithDirtyKeyDeletesAllFilesForThatKey()", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.fileDeletedExternally()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.explicitRemoveAppliedToDiskImmediately()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.createNewEntryWithTooFewValuesFails()", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.revertWithTooFewValues()", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.constructorDoesNotAllowZeroCacheSize()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.constructorDoesNotAllowZeroValuesPerEntry()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.journalFileIsPreferredOverBackupFile()", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.openCreatesDirectoryIfNecessary()", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.assertAbsent(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.assertValue(java.lang.String,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "InMemoryFileSystem.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.io.InMemoryFileSystem", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Cache.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Cache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DiskLruCache.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.processJournal()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.rebuildJournal()", "TOT": 14, "UPD": 2, "INS": 4, "MOV": 6, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.create(java.io.File,int,int,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.removeEntry(com.squareup.okhttp.internal.DiskLruCache$Entry)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.completeEdit(com.squareup.okhttp.internal.DiskLruCache$Editor,boolean)", "TOT": 5, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.initialize()", "TOT": 11, "UPD": 1, "INS": 4, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.readJournal()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.deleteIfExists(java.io.File)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.renameTo(java.io.File,java.io.File,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.delete()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.Editor.newSource(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.Editor.newSink(int)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.Entry.snapshot()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.create(com.squareup.okhttp.internal.io.FileSystem,java.io.File,int,int,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Util.deleteContents(java.io.File)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FileSystem.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.io", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "be2ed31c147dcd1c833d4db5bf4b6016d98e2cd3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e8ad80356e55fc3d5fbfc1d0da3a08b957dcbfa4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6a683da022ae6f7507b6a96b5d2790881e8c7549", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["0c2387c55ea4e4f5dd1f6c8890ace7cc422ad6af"], "nameRev": "6a683da022ae6f7507b6a96b5d2790881e8c7549 tags/parent-2.3.0~13^2", "commitMessage": "Don't get corrupted when journal writing fails.\n\nCloses https://github.com/square/okhttp/issues/1211\n\nWorking towards https://github.com/square/okhttp/issues/746\n", "commitDateTime": "2015-03-14 19:02:35", "authoredDateTime": "2015-03-14 18:21:13", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/DiskLruCacheTest.java", "insertions": 90, "deletions": 2, "lines": 92}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/FaultyFileSystem.java", "insertions": 90, "deletions": 0, "lines": 90}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/DiskLruCache.java", "insertions": 34, "deletions": 47, "lines": 81}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/FaultHidingSink.java", "insertions": 51, "deletions": 0, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DiskLruCacheTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.journalWriteFailsDuringEdit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.journalWriteFailsDuringEditorCommit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.journalWriteFailsDuringEditorAbort()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCacheTest.journalWriteFailsDuringRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FaultyFileSystem.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.FaultyFileSystem", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DiskLruCache.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.rebuildJournal()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.snapshots()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.snapshots().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.readJournal()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.snapshots().3.next()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.snapshots().3.hasNext()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.snapshots().3.remove()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.edit(java.lang.String,long)", "TOT": 11, "UPD": 0, "INS": 4, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.Editor.newSink(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.Editor.FaultHidingSink", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.newJournalWriter()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.DiskLruCache.Editor.FaultHidingSink.write(okio.Buffer,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FaultHidingSink.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.FaultHidingSink", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["49e85a1fd2ac13945be30a161286a50c0fa7485b", "6a683da022ae6f7507b6a96b5d2790881e8c7549"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 259.0, "deletions": 123.0, "lines": 382.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 101.0, "UPD": 27.0, "INS": 34.0, "MOV": 22.0, "DEL": 18.0, "spoonFilesChanged": 7, "spoonMethodsChanged": 30}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal", "okhttp/src/main/java/com/squareup/okhttp", "okhttp/src/main/java/com/squareup/okhttp/internal/io"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.DiskLruCache.readJournal()", "com.squareup.okhttp.internal.DiskLruCache.rebuildJournal()", "com.squareup.okhttp.internal.DiskLruCache", "com.squareup.okhttp.internal.DiskLruCache.Editor.newSink(int)", "com.squareup.okhttp.internal.DiskLruCache.snapshots().3.hasNext()", "com.squareup.okhttp.internal.FaultHidingSink", "com.squareup.okhttp.internal.DiskLruCache.snapshots()", "com.squareup.okhttp.internal.DiskLruCache.newJournalWriter()", "com.squareup.okhttp.internal.DiskLruCache.Editor.FaultHidingSink", "com.squareup.okhttp.internal.io.InMemoryFileSystem", "com.squareup.okhttp.internal.DiskLruCache.completeEdit(com.squareup.okhttp.internal.DiskLruCache$Editor,boolean)", "com.squareup.okhttp.Cache", "com.squareup.okhttp.internal.DiskLruCache.processJournal()", "com.squareup.okhttp.internal.io", "com.squareup.okhttp.internal.FaultyFileSystem", "com.squareup.okhttp.internal.DiskLruCache.edit(java.lang.String,long)", "com.squareup.okhttp.internal.DiskLruCache.create(java.io.File,int,int,long)", "com.squareup.okhttp.internal.DiskLruCache.Editor.newSource(int)", "com.squareup.okhttp.internal.DiskLruCache.delete()", "com.squareup.okhttp.internal.DiskLruCache.deleteIfExists(java.io.File)", "com.squareup.okhttp.internal.DiskLruCache.renameTo(java.io.File,java.io.File,boolean)", "com.squareup.okhttp.internal.Util.deleteContents(java.io.File)", "com.squareup.okhttp.internal.DiskLruCache.Entry.snapshot()", "com.squareup.okhttp.internal.DiskLruCache.snapshots().3.next()", "com.squareup.okhttp.internal.DiskLruCache.snapshots().3", "com.squareup.okhttp.internal.DiskLruCache.create(com.squareup.okhttp.internal.io.FileSystem,java.io.File,int,int,long)", "com.squareup.okhttp.internal.DiskLruCache.initialize()", "com.squareup.okhttp.internal.DiskLruCache.Editor.FaultHidingSink.write(okio.Buffer,long)", "com.squareup.okhttp.internal.DiskLruCache.removeEntry(com.squareup.okhttp.internal.DiskLruCache$Entry)", "com.squareup.okhttp.internal.DiskLruCache.snapshots().3.remove()"]}, {"title": " SSL handshake aborted on 2.3.X & 3.X devices", "body": "OkHttp 2.1.0\nOnly on Android 2.3.X and 3.x\n\nA very low number of our users are having this issue:\nhttp://crashes.to/s/026a4a77865\n\nReporting as reference. I don't mind if this will ever be fixed.\n\n```\ncom.couchsurfing.mobile.data.api.CsRetrofitError: retrofit.RetrofitError: SSL handshake aborted: ssl=0x1fcc30: Failure in SSL library, usually a protocol error\nerror:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:658 0xad1276bf:0x00000000)\n       at com.couchsurfing.mobile.data.api.CouchsurfingErrorHandler.handleError(CouchsurfingErrorHandler.java:38)\n       at retrofit.RestAdapter$RestHandler.invoke(RestAdapter.java:242)\n       at $Proxy0.a()\n       at com.couchsurfing.mobile.manager.SyncManager.syncConversations(SyncManager.java:471)\n       at com.couchsurfing.mobile.manager.SyncManager.performSyncInternal(SyncManager.java:369)\n       at com.couchsurfing.mobile.manager.SyncManager.access$100(SyncManager.java:60)\n       at com.couchsurfing.mobile.manager.SyncManager$1$1.call(SyncManager.java:272)\n       at com.couchsurfing.mobile.manager.SyncManager$1$1.call(SyncManager.java:259)\n       at rx.Observable.unsafeSubscribe(Observable.java:7239)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.handleNewSource(OperatorMerge.java:188)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:158)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:93)\n       at rx.internal.operators.OperatorMap$1.onNext(OperatorMap.java:54)\n       at rx.internal.operators.NotificationLite.accept(NotificationLite.java:150)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.pollQueue(OperatorObserveOn.java:189)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.access$000(OperatorObserveOn.java:65)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$2.call(OperatorObserveOn.java:153)\n       at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:47)\n       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:444)\n       at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:153)\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:267)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)\n       at java.lang.Thread.run(Thread.java:1019)\nCaused by: retrofit.RetrofitError: SSL handshake aborted: ssl=0x1fcc30: Failure in SSL library, usually a protocol error\nerror:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:658 0xad1276bf:0x00000000)\n       at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:390)\n       at retrofit.RestAdapter$RestHandler.invoke(RestAdapter.java:240)\n       at $Proxy0.a()\n       at com.couchsurfing.mobile.manager.SyncManager.syncConversations(SyncManager.java:471)\n       at com.couchsurfing.mobile.manager.SyncManager.performSyncInternal(SyncManager.java:369)\n       at com.couchsurfing.mobile.manager.SyncManager.access$100(SyncManager.java:60)\n       at com.couchsurfing.mobile.manager.SyncManager$1$1.call(SyncManager.java:272)\n       at com.couchsurfing.mobile.manager.SyncManager$1$1.call(SyncManager.java:259)\n       at rx.Observable.unsafeSubscribe(Observable.java:7239)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.handleNewSource(OperatorMerge.java:188)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:158)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:93)\n       at rx.internal.operators.OperatorMap$1.onNext(OperatorMap.java:54)\n       at rx.internal.operators.NotificationLite.accept(NotificationLite.java:150)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.pollQueue(OperatorObserveOn.java:189)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.access$000(OperatorObserveOn.java:65)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$2.call(OperatorObserveOn.java:153)\n       at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:47)\n       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:444)\n       at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:153)\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:267)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)\n       at java.lang.Thread.run(Thread.java:1019)\nCaused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x1fcc30: Failure in SSL library, usually a protocol error\nerror:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure (external/openssl/ssl/s23_clnt.c:658 0xad1276bf:0x00000000)\n       at org.apache.harmony.xnet.provider.jsse.NativeCrypto.SSL_do_handshake(NativeCrypto.java)\n       at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:474)\n       at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:328)\n       at com.squareup.okhttp.Connection.upgradeToTls(Connection.java:235)\n       at com.squareup.okhttp.Connection.connect(Connection.java:153)\n       at com.squareup.okhttp.Connection.connectAndSetOwner(Connection.java:169)\n       at com.squareup.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:119)\n       at com.squareup.okhttp.internal.http.RouteSelector.next(RouteSelector.java:134)\n       at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:314)\n       at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:237)\n       at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:423)\n       at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:105)\n       at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:239)\n       at com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218)\n       at com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:25)\n       at retrofit.client.UrlConnectionClient.prepareRequest(UrlConnectionClient.java:68)\n       at retrofit.client.UrlConnectionClient.execute(UrlConnectionClient.java:37)\n       at com.couchsurfing.mobile.data.client.RetrofitHttpClient.execute(RetrofitHttpClient.java:40)\n       at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:321)\n       at retrofit.RestAdapter$RestHandler.invoke(RestAdapter.java:240)\n       at $Proxy0.a()\n       at com.couchsurfing.mobile.manager.SyncManager.syncConversations(SyncManager.java:471)\n       at com.couchsurfing.mobile.manager.SyncManager.performSyncInternal(SyncManager.java:369)\n       at com.couchsurfing.mobile.manager.SyncManager.access$100(SyncManager.java:60)\n       at com.couchsurfing.mobile.manager.SyncManager$1$1.call(SyncManager.java:272)\n       at com.couchsurfing.mobile.manager.SyncManager$1$1.call(SyncManager.java:259)\n       at rx.Observable.unsafeSubscribe(Observable.java:7239)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.handleNewSource(OperatorMerge.java:188)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:158)\n       at rx.internal.operators.OperatorMerge$MergeSubscriber.onNext(OperatorMerge.java:93)\n       at rx.internal.operators.OperatorMap$1.onNext(OperatorMap.java:54)\n       at rx.internal.operators.NotificationLite.accept(NotificationLite.java:150)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.pollQueue(OperatorObserveOn.java:189)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.access$000(OperatorObserveOn.java:65)\n       at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$2.call(OperatorObserveOn.java:153)\n       at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:47)\n       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:444)\n       at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:153)\n       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:267)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)\n       at java.lang.Thread.run(Thread.java:1019)\n```\n", "url": "https://github.com/square/okhttp/issues/1209", "user": "niqo01", "labels": ["bug"], "created": "2014-12-17 03:21:50", "closed": "2015-03-10 04:57:24", "commits": {}, "ttf": 83.00027777777778, "commitsDetails": []}, {"title": "Stream was reset: PROTOCOL_ERROR, while using Retrofit in 3G network", "body": "I am using Retrofit for networking calls in my application. The app is really working fine with great speed. Thanks for the wonderful library. But, It is working only in wi-fi. If i run the app in 3G network, throwing the error. stream was reset: PROTOCOL_ERROR,  while using Retrofit in 3G network\n\nRefer to:\nhttp://stackoverflow.com/questions/26971008/stream-was-reset-protocol-error-while-using-retrofit-in-3g-network\n", "url": "https://github.com/square/okhttp/issues/1195", "user": "WOSHICAIXIANFENG", "labels": ["bug"], "created": "2014-12-09 01:36:27", "closed": "2015-01-03 19:28:21", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "Crash with Facebook SDK", "body": "When I set `URL.setURLStreamHandlerFactory(new OkUrlFactory(client));` accordingly to https://github.com/square/picasso/issues/749, my app crashes because of the Facebook SDK : \n\n```\n  Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'void com.squareup.okhttp.internal.spdy.SpdyStream.close(com.squareup.okhttp.internal.spdy.ErrorCode)' on a null object reference\n            at com.squareup.okhttp.internal.http.SpdyTransport.disconnect(SpdyTransport.java:221)\n            at com.squareup.okhttp.internal.http.HttpEngine.disconnect(HttpEngine.java:465)\n            at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.disconnect(HttpURLConnectionImpl.java:113)\n            at com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection.disconnect(DelegatingHttpsURLConnection.java:93)\n            at com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl.disconnect(HttpsURLConnectionImpl.java:25)\n            at com.facebook.internal.Utility.disconnectQuietly(Utility.java:464)\n            at com.facebook.Request.executeConnectionAndWait(Request.java:1563)\n            at com.facebook.Request.executeBatchAndWait(Request.java:1460)\n            at com.facebook.Request.executeBatchAndWait(Request.java:1429)\n            at com.facebook.Request.executeBatchAndWait(Request.java:1411)\n            at com.facebook.Request.executeAndWait(Request.java:1383)\n            at com.facebook.Request.executeAndWait(Request.java:1269)\n            at com.facebook.internal.Utility.getAppSettingsQueryResponse(Utility.java:708)\n            at com.facebook.internal.Utility.access$000(Utility.java:57)\n            at com.facebook.internal.Utility$1.doInBackground(Utility.java:630)\n            at com.facebook.internal.Utility$1.doInBackground(Utility.java:627)\n            at android.os.AsyncTask$2.call(AsyncTask.java:288)\n            at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.Thread.run(Thread.java:818)\n```\n\nDoesn't happen 100% of the time. Reproduced on Nexus 5 with Android 5.0 (LRX21O)\n", "url": "https://github.com/square/okhttp/issues/1191", "user": "GuillaumeLachaud", "labels": ["bug"], "created": "2014-12-05 23:39:37", "closed": "2014-12-26 02:21:37", "commits": {"0e199f608909793892b7883614c0d20a94c27916": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "0e199f608909793892b7883614c0d20a94c27916", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["aa84d51fb255d2cc672dc36ea297287746dec4d8"], "nameRev": "0e199f608909793892b7883614c0d20a94c27916 tags/parent-2.2.0~20^2", "commitMessage": "Don't NPE if disconnecting before connecting.\n\nCloses https://github.com/square/okhttp/issues/1191\n", "commitDateTime": "2014-12-25 21:05:36", "authoredDateTime": "2014-12-25 21:05:33", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.disconnectWithStreamNotEstablished()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.disconnect(com.squareup.okhttp.internal.http.HttpEngine)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0e199f608909793892b7883614c0d20a94c27916"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.SpdyTransport.disconnect(com.squareup.okhttp.internal.http.HttpEngine)"]}, {"title": "Should okhttp be caching HTTP 307 (or 302) responses according to the w3 document?", "body": "I am using retrofit and okhttp in my Android app to download documents, images and music files. The files are hosted on Amazon through a CDN so the URLs change often. My backend server will try to use redirects to decrease the need to have to constantly update my content on my mobile app every time the CDN url changes. The devices should also cache responses in the case that the device is offline. For this reason, I am using 301 redirects, which I don't know is the best idea.\n\nI was reading the description for 307 redirect at http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n\n---\n\n10.3.8 307 Temporary Redirect\n\nThe requested resource resides temporarily under a different URI. \nSince the redirection MAY be altered on occasion, the client SHOULD \ncontinue to use the Request-URI for future requests. \nThis response is only cacheable if indicated by a Cache-Control or Expires header field.\n\n---\n\nAt http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html,\n\n---\n\n13.4 - Response Cacheability\n\nA response received with a status code of 200, 203, 206, 300, 301 or 410 \nMAY be stored by a cache and used in reply to a subsequent request, \nsubject to the expiration mechanism, unless a cache-control directive \nprohibits caching. However, a cache that does not support the Range and \nContent-Range headers MUST NOT cache 206 (Partial Content) responses.\n\nA response received with any other status code \n(e.g. status codes 302 and 307) MUST NOT be returned in a reply to \na subsequent request unless there are cache-control directives or another \nheader(s) that explicitly allow it. For example, these include the \nfollowing: an Expires header (section 14.21); a \"max-age\", \"s-maxage\", \n\"must- revalidate\", \"proxy-revalidate\", \"public\" or \"private\" \ncache-control directive (section 14.9).\n\n---\n\nIt seems that the description states that caching is possible. I haven't tried this yet, but I did notice that in okhttp's CacheStrategy.java class, it has the following code:\n\n---\n\npublic static boolean isCacheable(Response response, Request request) {\n    // Always go to network for uncacheable response codes (RFC 2616, 13.4),\n    // This implementation doesn't support caching partial content.\n    int responseCode = response.code();\n    if (responseCode != HttpURLConnection.HTTP_OK // 200\n        && responseCode != HttpURLConnection.HTTP_NOT_AUTHORITATIVE // 203\n        && responseCode != HttpURLConnection.HTTP_MULT_CHOICE // 300\n        && responseCode != HttpURLConnection.HTTP_MOVED_PERM / 301\n        && responseCode != HttpURLConnection.HTTP_GONE) { // 410\n    return false;\n}\n\n---\n\nAnd to verify that caching isn't enabled for from 302-308, the unit tests from CacheTest.java states the following\n\n---\n\nfor (int i = 302; i <= 308; ++i) {\n  assertCached(false, i);\n}\n\n---\n\nSo the okhttp code explicitly ignores caching for 307, and also 302. I just wanted clarification for this. Is the spec for 307 wrong? Or is something wrong with caching 307 that it was deliberately excluded? If I were to set my own cache headers for 307, it would seem to still be skipped.\n\nJust another background information. I know Amazon will support caching with proper cache headers. But since I have to redirect through my own backend, if I don't have caching ability, my offline access to my redirect URL will not respond that I have a cached version from CDN locally. Of course, if I didn't redirect from my backend and go straight to Amazon, then caching wouldn't be a problem through Amazon. Could you provide some advice in this scenario?\n", "url": "https://github.com/square/okhttp/issues/1158", "user": "simtse", "labels": ["bug"], "created": "2014-11-18 18:05:32", "closed": "2014-12-30 00:29:29", "commits": {"6da71a5da8c2b276e4018137c59edb6802bf5014": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "1d6f0e75d599e2cb02f0fe182f7dbf966cd5cb2b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "6da71a5da8c2b276e4018137c59edb6802bf5014", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1d6f0e75d599e2cb02f0fe182f7dbf966cd5cb2b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["36be8ff2ea3ac010ac95195e26955f1c1228a2d1"], "nameRev": "1d6f0e75d599e2cb02f0fe182f7dbf966cd5cb2b tags/parent-2.2.0~6^2", "commitMessage": "Cache 302s and 308s with the right response headers.\n\nCloses https://github.com/square/okhttp/issues/1158\n", "commitDateTime": "2014-12-29 18:47:36", "authoredDateTime": "2014-12-29 17:54:27", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java", "insertions": 63, "deletions": 3, "lines": 66}, {"filePath": "okhttp-urlconnection/src/test/java/com/squareup/okhttp/UrlConnectionCacheTest.java", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java", "insertions": 28, "deletions": 16, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CacheTest.responseCachingByResponseCode()", "TOT": 9, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.CacheTest.foundCachedWithExpiresHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CacheTest.foundCachedWithCacheControlHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CacheTest.temporaryRedirectCachedWithExpiresHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CacheTest.temporaryRedirectCachedWithCacheControlHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CacheTest.foundNotCachedWithoutCacheHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CacheTest.temporaryRedirectNotCachedWithoutCacheHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CacheTest.temporaryRedirectCachedWithCachingHeader(int,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CacheTest.temporaryRedirectNotCachedWithoutCachingHeader(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UrlConnectionCacheTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.UrlConnectionCacheTest.responseCachingByResponseCode()", "TOT": 9, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "CacheStrategy.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.CacheStrategy.isCacheable(com.squareup.okhttp.Response,com.squareup.okhttp.Request)", "TOT": 32, "UPD": 3, "INS": 9, "MOV": 7, "DEL": 13}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1d6f0e75d599e2cb02f0fe182f7dbf966cd5cb2b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28.0, "deletions": 16.0, "lines": 44.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 32.0, "UPD": 3.0, "INS": 9.0, "MOV": 7.0, "DEL": 13.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.CacheStrategy.isCacheable(com.squareup.okhttp.Response,com.squareup.okhttp.Request)"]}, {"title": "Handle NPN with peer advertising zero supported protocols", "body": "I am using Retrofit for networking calls in my application. The app is really working fine with great speed. Thanks for the wonderful library. But, It is working only in wi-fi. If i run the app in 3G network, throwing the error. stream was reset: PROTOCOL_ERROR,  while using Retrofit in 3G network\n\n![hovqi](https://cloud.githubusercontent.com/assets/5887750/5082787/64397e30-6f0e-11e4-89e5-800577bb8811.png)\n\nAnd here is the stack trace :\n\n```\n11-17 16:01:54.017: D/Retrofit(3595): java.io.IOException: stream was reset: PROTOCOL_ERROR\n11-17 16:01:54.017: D/Retrofit(3595):   at      com.squareup.okhttp.internal.spdy.SpdyStream.getResponseHeaders(SpdyStream.java:146)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.squareup.okhttp.internal.http.SpdyTransport.readResponseHeaders(SpdyTransport.java:109)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:676)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:426)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:371)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:466)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\n11-17 16:01:54.017: D/Retrofit(3595):   at retrofit.client.UrlConnectionClient.readResponse(UrlConnectionClient.java:73)\n11-17 16:01:54.017: D/Retrofit(3595):   at retrofit.client.UrlConnectionClient.execute(UrlConnectionClient.java:38)\n11-17 16:01:54.017: D/Retrofit(3595):   at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:321)\n11-17 16:01:54.017: D/Retrofit(3595):   at retrofit.RestAdapter$RestHandler.invoke(RestAdapter.java:240)\n11-17 16:01:54.017: D/Retrofit(3595):   at $Proxy0.getLoginCredentials(Native Method)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.connected.merchant.SignIn$SignMeIn.doInBackground(SignIn.java:197)\n11-17 16:01:54.017: D/Retrofit(3595):   at com.connected.merchant.SignIn$SignMeIn.doInBackground(SignIn.java:1)\n11-17 16:01:54.017: D/Retrofit(3595):   at android.os.AsyncTask$2.call(AsyncTask.java:288)\n11-17 16:01:54.017: D/Retrofit(3595):   at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n11-17 16:01:54.017: D/Retrofit(3595):   at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:231)\n11-17 16:01:54.017: D/Retrofit(3595):   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n11-17 16:01:54.017: D/Retrofit(3595):   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n11-17 16:01:54.017: D/Retrofit(3595):   at java.lang.Thread.run(Thread.java:841)\n11-17 16:01:54.017: D/Retrofit(3595): ---- END ERROR}\n```\n", "url": "https://github.com/square/okhttp/issues/1156", "user": "RethinavelPillai", "labels": ["bug"], "created": "2014-11-18 05:08:17", "closed": "2014-12-27 21:08:45", "commits": {}, "ttf": 39.000277777777775, "commitsDetails": []}, {"title": "Connections shared when ProxySelectors don't match", "body": "RouteSelector.next() seems to return Connections from the ConnectionPool that don't have matching ProxySelectors.  I see the Address matching logic checks the Proxies match but Address doesn't check the ProxySelectors match.  I understand ProxySelectors are abstract class implementations so okhttp can't exactly check that they match, but perhaps okhttp could check their results match for the URL the ConnectionPool is queried for.  In my particular case, the ProxySelectors were actually the same, it's just that at the time the first connection was initiated the ProxySelector was returning one list of proxies but when the second connection was initiated the same ProxySelector was returning a different set of proxies; to solve this case would require saving the list of proxies returned by the ProxySelector and comparing it when matching Connections in the ConnectionPool.\n", "url": "https://github.com/square/okhttp/issues/1149", "user": "JensenPaul", "labels": ["bug"], "created": "2014-11-13 02:12:30", "closed": "2014-12-28 01:06:15", "commits": {"942d6e35ec168ea519499d91dac22c2ac9505ea3": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "6123928eeec4aed5f70e3932807fb7c5cb3104c2": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0de100dc1ebef241a1d2afc6a544c8e65090217b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 44.000277777777775, "commitsDetails": [{"commitHash": "942d6e35ec168ea519499d91dac22c2ac9505ea3", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6123928eeec4aed5f70e3932807fb7c5cb3104c2", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0de100dc1ebef241a1d2afc6a544c8e65090217b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["88aad09806168b010e2a58aa272a8bd5363f249b"], "nameRev": "0de100dc1ebef241a1d2afc6a544c8e65090217b tags/parent-2.2.0~12^2", "commitMessage": "Fix pooling with proxy selectors.\n\nPreviously two OkHttpClients that shared a connection pool but\nused different proxy selectors could incorrectly share the\npooled addresses.\n\nCloses https://github.com/square/okhttp/issues/1149\n", "commitDateTime": "2014-12-27 20:05:59", "authoredDateTime": "2014-12-27 18:40:11", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/AddressTest.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/ConnectionPoolTest.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Address.java", "insertions": 20, "deletions": 4, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java", "insertions": 5, "deletions": 8, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AddressTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.AddressTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPoolTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.ConnectionPoolTest.setUp(int)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteSelectorTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelectorTest.explicitProxyTriesThatProxysAddressesOnly()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelectorTest.explicitDirectProxy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelectorTest.multipleProxiesMultipleInetAddressesMultipleConfigurations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelectorTest.httpAddress()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Address.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Address", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.Address.getProxySelector()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.Address.hashCode()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.Address.equals(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RouteSelector.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelector.connectFailed(com.squareup.okhttp.Connection,java.io.IOException)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelector.resetNextProxy(java.net.URI,java.net.Proxy)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelector", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0de100dc1ebef241a1d2afc6a544c8e65090217b"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25.0, "deletions": 12.0, "lines": 37.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 22.0, "UPD": 2.0, "INS": 11.0, "MOV": 6.0, "DEL": 3.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp", "okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.Address.getProxySelector()", "com.squareup.okhttp.internal.http.RouteSelector", "com.squareup.okhttp.internal.http.RouteSelector.resetNextProxy(java.net.URI,java.net.Proxy)", "com.squareup.okhttp.internal.http.RouteSelector.connectFailed(com.squareup.okhttp.Connection,java.io.IOException)", "com.squareup.okhttp.Address.equals(java.lang.Object)", "com.squareup.okhttp.Address", "com.squareup.okhttp.Address.hashCode()"]}, {"title": "Request retrying on InterruptedIOException", "body": "OkHttp 1.5.3 added basic support for Thread.interrupt() in commit https://github.com/square/okhttp/commit/664b65d18e164a571a2c8498fe372d3f934499c3. This throws an InterruptedIOException but this is then handled by OkHttp's http retry engine in the catch block of HttpURLConnectionImpl.execute() method **and the request is retried** - which I think should not happen, because I deliberately interrupted the Thread and IO should stop (based on the commit from @swankjesse). I put logging inside OkHttp to verify that the same request is retried under some circumstances after calling Thread.interrupt() and the execute() catch block is indeed handling the InterruptedIOException.\n", "url": "https://github.com/square/okhttp/issues/1146", "user": "DanielNovak", "labels": ["bug"], "created": "2014-11-11 09:04:03", "closed": "2014-12-30 17:07:59", "commits": {"dcbb199247b58cc620afedcf834689b933390fe4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 49.000277777777775, "commitsDetails": [{"commitHash": "dcbb199247b58cc620afedcf834689b933390fe4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b6a8da414b7a584d824258e64b38cb487c315fb2"], "nameRev": "dcbb199247b58cc620afedcf834689b933390fe4 tags/parent-2.2.0~5^2", "commitMessage": "Don't recover from timeouts.\n\nCloses https://github.com/square/okhttp/issues/1146\n", "commitDateTime": "2014-12-30 10:37:09", "authoredDateTime": "2014-12-30 10:35:57", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver/MockWebServer.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/DoubleInetAddressNetwork.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 17, "deletions": 4, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection(java.net.Socket).3.execute()", "TOT": 5, "UPD": 2, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection(java.net.Socket).3.processOneRequest(java.net.Socket,java.io.InputStream,java.io.OutputStream)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.timeoutsNotRetried()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DoubleInetAddressNetwork.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.DoubleInetAddressNetwork", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.isRecoverable(java.io.IOException)", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dcbb199247b58cc620afedcf834689b933390fe4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 6, "lines": 34, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 16, "UPD": 2, "INS": 8, "MOV": 3, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/com/squareup/okhttp/mockwebserver", "okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.DoubleInetAddressNetwork", "com.squareup.okhttp.internal.http.HttpEngine.isRecoverable(java.io.IOException)", "com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection(java.net.Socket).3.execute()", "com.squareup.okhttp.mockwebserver.MockWebServer.serveConnection(java.net.Socket).3.processOneRequest(java.net.Socket,java.io.InputStream,java.io.OutputStream)"]}, {"title": "MockWebServer's MockResponse.setBodyDelayTimeMs(300000) does not work properly ", "body": "Hello \n\nApparently the setBodyDelayTimeMs is only used when the incoming connection is a SPDY HTTP request. If the request is a normal HTTP request, then this is not taken into account.\n\nIs it like so by design or not?\n", "url": "https://github.com/square/okhttp/issues/1138", "user": "vekexasia", "labels": ["bug"], "created": "2014-11-08 17:03:52", "closed": "2014-12-29 03:07:16", "commits": {}, "ttf": 50.000277777777775, "commitsDetails": []}, {"title": "Track AOSP: Add further handling for when a CONNECT incorrectly returns a body.", "body": "https://android-review.googlesource.com/#/c/113164/1\n", "url": "https://github.com/square/okhttp/issues/1133", "user": "swankjesse", "labels": ["bug"], "created": "2014-11-05 20:00:19", "closed": "2014-12-27 21:02:18", "commits": {}, "ttf": 52.000277777777775, "commitsDetails": []}, {"title": "When required, buffer full request bodies for SPDY and HTTP/2", "body": "```\n10-28 03:09:43.699  7144 30876 E AndroidRuntime: java.lang.UnsupportedOperationException\n10-28 03:09:43.699  7144 30876 E AndroidRuntime:         at com.squareup.okhttp.internal.http.SpdyTransport.writeRequestBody(SpdyTransport.java:101)\n10-28 03:09:43.699  7144 30876 E AndroidRuntime:         at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:670)\n10-28 03:09:43.699  7144 30876 E AndroidRuntime:         at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:426)\n10-28 03:09:43.699  7144 30876 E AndroidRuntime:         at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:371)\n10-28 03:09:43.699  7144 30876 E AndroidRuntime:         at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:466)\n10-28 03:09:43.699  7144 30876 E AndroidRuntime:         at com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\n10-28 03:09:43.699  7144 30876 E AndroidRuntime:         at com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\n[...]\n```\n\nThis happens in OkHttp v2.0.0 when firing multiple SPDY and non SPDY requests at the same time to the same domain. The way this is done is by having 2 OkHttpClients:\n\n```\n    mSpdyClient = new OkHttpClient()\n            .setSslSocketFactory(new CustomSslSocketFactory(config, context, true /* useSpdy */));\n    mNonSpdyClient = new OkHttpClient()\n            .setSslSocketFactory(new CustomSslSocketFactory(config, context, false /* useSpdy */));\n```\n\nWhich is used depends on whether we want SPDY enabled or not. (The CustomSslSocketFactory advertises SPDY/3.1 npn protocol depending on the useSpdy flag).\n\nAt a glance there don't seem to be any changes up to 2.1.0 RC1 that would fix this issue: https://github.com/square/okhttp/commits/master/okhttp/src/main/java/com/squareup/okhttp/internal/http\nthough if you remember any relevant cls this please point me to them :).\n", "url": "https://github.com/square/okhttp/issues/1132", "user": "mihai-dumitresq", "labels": ["bug"], "created": "2014-11-05 18:03:39", "closed": "2014-11-11 02:29:13", "commits": {"87bd29e1c6fc16a668038afb61e5de3000561e11": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "c87b311b1a05d17f75490167ee789e24c44463a7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ec9c5dfec1df12e265044b3f0333bdd5f2d775d0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "9d5ffa5a2edbcce954b692a7fd2e8e5569031919": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "64b607fc113cec3c18d04574ee1c024192d8cc43": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "5ef7d977adbef3f91563eb97d1fdb844bc18e6d4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "87bd29e1c6fc16a668038afb61e5de3000561e11", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c87b311b1a05d17f75490167ee789e24c44463a7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ec9c5dfec1df12e265044b3f0333bdd5f2d775d0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9d5ffa5a2edbcce954b692a7fd2e8e5569031919", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "64b607fc113cec3c18d04574ee1c024192d8cc43", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ec1b266f1d75f6063b1b84ad06d5c8a689742150"], "nameRev": "64b607fc113cec3c18d04574ee1c024192d8cc43 tags/parent-2.2.0~68^2", "commitMessage": "Request body buffering is not transport-specific.\n\nPreviously we were only buffering the request body when the transport\nwas HTTP. But we should buffer it for both SPDY and HTTP transports.\n\nCloses https://github.com/square/okhttp/issues/1132\n\nAlso recover gracefully when retrying an empty POST body. This\nis a related bug.\n\nCloses https://github.com/square/okhttp/issues/1131\n", "commitDateTime": "2014-11-10 21:20:51", "authoredDateTime": "2014-11-10 18:46:28", "commitGitStats": [{"filePath": "okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java", "insertions": 56, "deletions": 1, "lines": 57}, {"filePath": "okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "okhttp-urlconnection/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Call.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Request.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Util.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 26, "deletions": 8, "lines": 34}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpMethod.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java", "insertions": 1, "deletions": 23, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/RetryableSink.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java", "insertions": 2, "deletions": 17, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.curl.MainTest.put()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.RequestTest.crudVerbs()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.noDefaultContentLengthOnPost()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.initHttpEngine()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "JavaApiConverterTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nullRequestHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nonNullRequestHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nullRequestHeaderKey()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Call.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Call.getResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Request.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Request.Builder.method(java.lang.String,com.squareup.okhttp.RequestBody)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Util.emptySink()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.Util", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.hasRequestBody()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.sendRequest()", "TOT": 9, "UPD": 1, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.readResponse()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "HttpMethod.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.hasRequestBody(java.lang.String)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.permitsRequestBody(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RetryableSink.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.BufferedSink)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.Sink)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestHeaders(com.squareup.okhttp.Request)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Transport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5ef7d977adbef3f91563eb97d1fdb844bc18e6d4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["c782f00a433e9d5d39cd0573426dc97d6eb9dfc6"], "nameRev": "5ef7d977adbef3f91563eb97d1fdb844bc18e6d4 tags/parent-2.1.0~2^2~2", "commitMessage": "Request body buffering is not transport-specific.\n\nPreviously we were only buffering the request body when the transport\nwas HTTP. But we should buffer it for both SPDY and HTTP transports.\n\nCloses https://github.com/square/okhttp/issues/1132\n\nAlso recover gracefully when retrying an empty POST body. This\nis a related bug.\n\nCloses https://github.com/square/okhttp/issues/1131\n", "commitDateTime": "2014-11-12 00:13:28", "authoredDateTime": "2014-11-10 18:46:28", "commitGitStats": [{"filePath": "okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java", "insertions": 56, "deletions": 1, "lines": 57}, {"filePath": "okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "okhttp-urlconnection/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Call.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Request.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Util.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 26, "deletions": 8, "lines": 34}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpMethod.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java", "insertions": 1, "deletions": 23, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/RetryableSink.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java", "insertions": 2, "deletions": 17, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.curl.MainTest.put()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.RequestTest.crudVerbs()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.noDefaultContentLengthOnPost()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.initHttpEngine()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "JavaApiConverterTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nullRequestHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nonNullRequestHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nullRequestHeaderKey()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Call.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Call.getResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Request.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Request.Builder.method(java.lang.String,com.squareup.okhttp.RequestBody)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Util.emptySink()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.Util", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.hasRequestBody()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.sendRequest()", "TOT": 9, "UPD": 1, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.readResponse()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "HttpMethod.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.hasRequestBody(java.lang.String)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.permitsRequestBody(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RetryableSink.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.BufferedSink)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.Sink)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestHeaders(com.squareup.okhttp.Request)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Transport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["64b607fc113cec3c18d04574ee1c024192d8cc43"], "filteredCommitsReason": {"duplicated": 5, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 50.0, "deletions": 76.0, "lines": 126.0, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 48.0, "UPD": 13.0, "INS": 12.0, "MOV": 8.0, "DEL": 15.0, "spoonFilesChanged": 10, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc", "okhttp/src/main/java/com/squareup/okhttp/internal/http", "okhttp/src/main/java/com/squareup/okhttp/internal", "okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.HttpMethod.permitsRequestBody(java.lang.String)", "com.squareup.okhttp.internal.Util", "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request,long)", "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestHeaders(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.HttpEngine.hasRequestBody()", "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()", "com.squareup.okhttp.internal.Util.emptySink()", "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.BufferedSink)", "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.initHttpEngine()", "com.squareup.okhttp.internal.http.createRequestBody(com.squareup.okhttp.Request,long)", "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)", "com.squareup.okhttp.internal.http.HttpMethod.hasRequestBody(java.lang.String)", "com.squareup.okhttp.Request.Builder.method(java.lang.String,com.squareup.okhttp.RequestBody)", "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request,long)", "com.squareup.okhttp.internal.http.HttpEngine.readResponse()", "com.squareup.okhttp.Call.getResponse()", "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.Sink)", "com.squareup.okhttp.internal.http.HttpEngine.sendRequest()", "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)"]}, {"title": "Fail appropriately when POST body is null", "body": "When a POST request with an empty body is sent using the OkHttpClient.newCall() API and the request fails the Call class with throw the following exception when the original request fails and it retries the request:\n\n```\njava.lang.IllegalStateException: Cannot stream a request body without chunked encoding or a known content length!\n    at com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(HttpTransport.java:67)\n    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:246)\n    at com.squareup.okhttp.Call.getResponse(Call.java:237)\n    at com.squareup.okhttp.Call.execute(Call.java:86)\n    at com.squareup.okhttp.CallTest.retryEmptyPostRequest(CallTest.java:808)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\n```\n\nHere is a simple unit test to reproduce this behaviour: https://github.com/hpoul/okhttp/commit/7e9bac1d79224a95912cdb71fbe8e30951b4fa15 (retryEmptyPostRequest)\n", "url": "https://github.com/square/okhttp/issues/1131", "user": "hpoul", "labels": ["bug"], "created": "2014-11-05 15:01:56", "closed": "2014-11-11 02:29:13", "commits": {"87bd29e1c6fc16a668038afb61e5de3000561e11": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "c87b311b1a05d17f75490167ee789e24c44463a7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "ec9c5dfec1df12e265044b3f0333bdd5f2d775d0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "9d5ffa5a2edbcce954b692a7fd2e8e5569031919": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "64b607fc113cec3c18d04574ee1c024192d8cc43": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "5ef7d977adbef3f91563eb97d1fdb844bc18e6d4": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "87bd29e1c6fc16a668038afb61e5de3000561e11", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c87b311b1a05d17f75490167ee789e24c44463a7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ec9c5dfec1df12e265044b3f0333bdd5f2d775d0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9d5ffa5a2edbcce954b692a7fd2e8e5569031919", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "64b607fc113cec3c18d04574ee1c024192d8cc43", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ec1b266f1d75f6063b1b84ad06d5c8a689742150"], "nameRev": "64b607fc113cec3c18d04574ee1c024192d8cc43 tags/parent-2.2.0~68^2", "commitMessage": "Request body buffering is not transport-specific.\n\nPreviously we were only buffering the request body when the transport\nwas HTTP. But we should buffer it for both SPDY and HTTP transports.\n\nCloses https://github.com/square/okhttp/issues/1132\n\nAlso recover gracefully when retrying an empty POST body. This\nis a related bug.\n\nCloses https://github.com/square/okhttp/issues/1131\n", "commitDateTime": "2014-11-10 21:20:51", "authoredDateTime": "2014-11-10 18:46:28", "commitGitStats": [{"filePath": "okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java", "insertions": 56, "deletions": 1, "lines": 57}, {"filePath": "okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "okhttp-urlconnection/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Call.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Request.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Util.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 26, "deletions": 8, "lines": 34}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpMethod.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java", "insertions": 1, "deletions": 23, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/RetryableSink.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java", "insertions": 2, "deletions": 17, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.curl.MainTest.put()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.RequestTest.crudVerbs()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.noDefaultContentLengthOnPost()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.initHttpEngine()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "JavaApiConverterTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nullRequestHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nonNullRequestHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nullRequestHeaderKey()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Call.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Call.getResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Request.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Request.Builder.method(java.lang.String,com.squareup.okhttp.RequestBody)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Util.emptySink()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.Util", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.hasRequestBody()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.sendRequest()", "TOT": 9, "UPD": 1, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.readResponse()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "HttpMethod.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.hasRequestBody(java.lang.String)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.permitsRequestBody(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RetryableSink.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.BufferedSink)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.Sink)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestHeaders(com.squareup.okhttp.Request)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Transport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5ef7d977adbef3f91563eb97d1fdb844bc18e6d4", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["c782f00a433e9d5d39cd0573426dc97d6eb9dfc6"], "nameRev": "5ef7d977adbef3f91563eb97d1fdb844bc18e6d4 tags/parent-2.1.0~2^2~2", "commitMessage": "Request body buffering is not transport-specific.\n\nPreviously we were only buffering the request body when the transport\nwas HTTP. But we should buffer it for both SPDY and HTTP transports.\n\nCloses https://github.com/square/okhttp/issues/1132\n\nAlso recover gracefully when retrying an empty POST body. This\nis a related bug.\n\nCloses https://github.com/square/okhttp/issues/1131\n", "commitDateTime": "2014-11-12 00:13:28", "authoredDateTime": "2014-11-10 18:46:28", "commitGitStats": [{"filePath": "okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java", "insertions": 56, "deletions": 1, "lines": 57}, {"filePath": "okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "okhttp-urlconnection/src/test/java/com/squareup/okhttp/internal/huc/JavaApiConverterTest.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Call.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Request.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Util.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 26, "deletions": 8, "lines": 34}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpMethod.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java", "insertions": 1, "deletions": 23, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/RetryableSink.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java", "insertions": 2, "deletions": 17, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.curl.MainTest.put()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.RequestTest.crudVerbs()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.noDefaultContentLengthOnPost()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.initHttpEngine()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "JavaApiConverterTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nullRequestHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nonNullRequestHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverterTest.createOkRequest_nullRequestHeaderKey()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Call.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Call.getResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Request.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Request.Builder.method(java.lang.String,com.squareup.okhttp.RequestBody)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Util.emptySink()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.Util", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.hasRequestBody()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.sendRequest()", "TOT": 9, "UPD": 1, "INS": 4, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.readResponse()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "HttpMethod.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.hasRequestBody(java.lang.String)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpMethod.permitsRequestBody(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RetryableSink.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.BufferedSink)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.Sink)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestHeaders(com.squareup.okhttp.Request)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Transport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.createRequestBody(com.squareup.okhttp.Request,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["64b607fc113cec3c18d04574ee1c024192d8cc43"], "filteredCommitsReason": {"duplicated": 5, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 50.0, "deletions": 76.0, "lines": 126.0, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 48.0, "UPD": 13.0, "INS": 12.0, "MOV": 8.0, "DEL": 15.0, "spoonFilesChanged": 10, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc", "okhttp/src/main/java/com/squareup/okhttp/internal/http", "okhttp/src/main/java/com/squareup/okhttp/internal", "okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.HttpMethod.permitsRequestBody(java.lang.String)", "com.squareup.okhttp.internal.Util", "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.HttpTransport.createRequestBody(com.squareup.okhttp.Request,long)", "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestHeaders(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.HttpEngine.hasRequestBody()", "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request)", "com.squareup.okhttp.internal.http.HttpEngine.followUpRequest()", "com.squareup.okhttp.internal.Util.emptySink()", "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.BufferedSink)", "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.initHttpEngine()", "com.squareup.okhttp.internal.http.createRequestBody(com.squareup.okhttp.Request,long)", "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)", "com.squareup.okhttp.internal.http.HttpMethod.hasRequestBody(java.lang.String)", "com.squareup.okhttp.Request.Builder.method(java.lang.String,com.squareup.okhttp.RequestBody)", "com.squareup.okhttp.internal.http.SpdyTransport.createRequestBody(com.squareup.okhttp.Request,long)", "com.squareup.okhttp.internal.http.HttpEngine.readResponse()", "com.squareup.okhttp.Call.getResponse()", "com.squareup.okhttp.internal.http.RetryableSink.writeToSocket(okio.Sink)", "com.squareup.okhttp.internal.http.HttpEngine.sendRequest()", "com.squareup.okhttp.internal.http.SpdyTransport.writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)"]}, {"title": "ConcurrentModificationException", "body": "I wouldn't deem this high priority but it did crash a device.\n\nAndroid 4.4.2\nOkHttp 2.0.0\n\n``` bash\njava.util.ConcurrentModificationException\n       at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\n       at java.util.HashMap$ValueIterator.next(HashMap.java:838)\n       at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader.settings(SourceFile:698)\n       at com.squareup.okhttp.internal.spdy.Spdy3$Reader.readSettings$5f833cfd(SourceFile:278)\n       at com.squareup.okhttp.internal.spdy.Spdy3$Reader.nextFrame$64dcaf67(SourceFile:165)\n       at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader.execute(SourceFile:574)\n       at com.squareup.okhttp.internal.NamedRunnable.run(SourceFile:33)\n       at java.lang.Thread.run(Thread.java:841)\n```\n\n[Crashlytics Link](http://crashes.to/s/fef087d43fb)\n", "url": "https://github.com/square/okhttp/issues/1119", "user": "chrisjenx", "labels": ["bug"], "created": "2014-11-03 17:51:24", "closed": "2014-11-04 02:57:04", "commits": {"3820b5c3355a0d5e48691c43481c6201a033a62c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3820b5c3355a0d5e48691c43481c6201a033a62c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["912d09e7da8830b831ee8f3461e0c66161fc82c8"], "nameRev": "3820b5c3355a0d5e48691c43481c6201a033a62c tags/parent-2.1.0-RC1~10^2", "commitMessage": "Fix a concurrency bug in SPDY settings.\n\nWe were making a copy of the streams HashMap so that we could\niterate it safely after releasing our lock. But we weren't\nactually using that copy when iterating. Whoops!\n\nFixes https://github.com/square/okhttp/issues/1119\n", "commitDateTime": "2014-11-03 21:30:47", "authoredDateTime": "2014-11-03 21:30:47", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.settings(boolean,com.squareup.okhttp.internal.spdy.Settings)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3820b5c3355a0d5e48691c43481c6201a033a62c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.settings(boolean,com.squareup.okhttp.internal.spdy.Settings)"]}, {"title": "EOFException in RealBufferedSource.readUtf8LineStrict", "body": "A few people have reported this. Needs investigation & fix.\n\n```\njava.io.EOFException: null\n    at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:154) ~[na:0.0]\n    at com.squareup.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:189) ~[na:0.0]\n    at com.squareup.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:101) ~[na:0.0]\n    at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:676) ~[na:0.0]\n    at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:426) ~[na:0.0]\n    at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:371) ~[na:0.0]\n    at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:466) ~[na:0.0]\n    at com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105) ~[na:0.0]\n```\n", "url": "https://github.com/square/okhttp/issues/1114", "user": "swankjesse", "labels": ["bug"], "created": "2014-11-01 15:57:06", "closed": "2015-03-19 21:11:28", "commits": {"8b4c67b26e3f4f7e415383d293b2568865ac7e88": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "dab882acc09b6a2c04c823375632b395cac961c0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 138.00027777777777, "commitsDetails": [{"commitHash": "8b4c67b26e3f4f7e415383d293b2568865ac7e88", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "dab882acc09b6a2c04c823375632b395cac961c0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["ab3f9f832be69fa1cb716b218b89a81ee334c78f"], "nameRev": "dab882acc09b6a2c04c823375632b395cac961c0 tags/parent-2.3.0~16^2", "commitMessage": "Provide context on unexpected EOFs.\n\nhttps://github.com/square/okhttp/issues/1114\n", "commitDateTime": "2015-03-12 21:22:20", "authoredDateTime": "2015-03-10 23:27:38", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java", "insertions": 25, "deletions": 16, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpConnection.readResponse()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dab882acc09b6a2c04c823375632b395cac961c0"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25.0, "deletions": 16.0, "lines": 41.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 1.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.HttpConnection.readResponse()"]}, {"title": "StatusLine with leading space = ProtocolException", "body": "I'm building a wrapper around www.bea.gov 's API and am using retrofit along with okhttp. When okhttp parses the response header into a StatusLine it turns out that there is a leading space in the string that's being parsed into a StatusLine. \n\n\" HTTP/1.1 200 OK\" \n\nThis leads to a ProtocolException here: https://github.com/square/okhttp/blob/804e88921aa4bd680b408ac6a0e654737eec88a3/okhttp/src/main/java/com/squareup/okhttp/internal/http/StatusLine.java#L36\n\nAccording to \"rfc2616\" (https://www.ietf.org/rfc/rfc2616.txt) it doesn't sound like spaces are acceptable.\n\n6.1 Status-Line\nThe first line of a Response message is the Status-Line, consisting of the protocol version followed by a numeric status code and its associated textual phrase, with each element separated by SP characters. No CR or LF is allowed except in the final CRLF sequence.\nStatus-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF\n\nCould that be a parsing issue? I'm not seeing spaces when I curl the url.\n\nthanks!\n", "url": "https://github.com/square/okhttp/issues/1094", "user": "bjoernw", "labels": ["bug"], "created": "2014-10-15 21:08:09", "closed": "2014-11-04 02:02:33", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "BufferedSource error with WebSockets", "body": "In `WebSocketListener#onMessage(BufferedSource bufferedSource, WebSocket.PayloadType payloadType)`, calling `bufferedSource.readUtf8()` after verifying that `payloadType == WebSocket.PayloadType.TEXT` throws the following exception:\n\n```\nSystem.err  W  java.lang.IllegalArgumentException: byteCount < 0: -26991\n    W      at okio.RealBufferedSource.read(RealBufferedSource.java:46)\n    W      at com.squareup.okhttp.internal.ws.WebSocketReader$FramedMessageSource.read(WebSocketReader.java:250)\n    W      at okio.RealBufferedSource.exhausted(RealBufferedSource.java:60)\n    W      at com.operator.expert.service.ChatSocketConnection.onMessage(ChatSocketConnection.java:76)\n    W      at com.squareup.okhttp.internal.ws.WebSocketReader.readMessage(WebSocketReader.java:112)\n    W      at com.squareup.okhttp.WebSocket$ReaderRunnable.execute(WebSocket.java:283)\n    W      at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n    W      at java.lang.Thread.run(Thread.java:841)\n```\n\nAny ideas how to prevent/fix this? It doesn't appear to happen to all socket messages.\n", "url": "https://github.com/square/okhttp/issues/1071", "user": "arriolac", "labels": ["bug"], "created": "2014-10-02 18:54:06", "closed": "2015-04-21 02:26:13", "commits": {}, "ttf": 200.00027777777777, "commitsDetails": []}, {"title": "StrictMode violation for gzip'd responses", "body": "I'm receiving these strict mode violations in OkHttp 2.0.0:\n\n```\njava.lang.Throwable: Explicit termination method 'end' not called\n        at dalvik.system.CloseGuard.open(CloseGuard.java:184)\n        at java.util.zip.Inflater.<init>(Inflater.java:82)\n        at com.squareup.okio.GzipSource.<init>(GzipSource.java:62)\n        at com.squareup.okhttp.internal.http.HttpEngine.initContentStream(HttpEngine.java:551)\n        at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:728)\n        at com.squareup.okhttp.Call.getResponse(Call.java:205)\n        at com.squareup.okhttp.Call.execute(Call.java:80)\n```\n\nIn other areas, where I use OkHttp's API indirectly through `okhttp-httpurlconnection`, I receive these:\n\n```\njava.lang.Throwable: Explicit termination method 'close' not called\n        at dalvik.system.CloseGuard.open(CloseGuard.java:184)\n        at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:298)\n        at com.squareup.okhttp.Connection.upgradeToTls(Connection.java:183)\n        at com.squareup.okhttp.Connection.connect(Connection.java:151)\n        at com.squareup.okhttp.OkHttpClient$1.connect(OkHttpClient.java:84)\n        at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:321)\n        at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:241)\n        at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:420)\n        at com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:105)\n        at com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection.connect(DelegatingHttpsURLConnection.java:89)\n        at com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:25)\n```\n\nWeird enough both do not popup on Nexus devices (4, 7), but only on a Samsung device. Does this point me to a faulty network stack on this one?\n", "url": "https://github.com/square/okhttp/issues/1053", "user": "realdadfish", "labels": ["bug"], "created": "2014-09-16 12:44:46", "closed": "2014-10-25 21:15:08", "commits": {}, "ttf": 39.000277777777775, "commitsDetails": []}, {"title": "cancel a async call will cause FATAL EXCEPTION", "body": "the code below will case a FATAL EXCEPTION:\n\n```\n    Call theCall = null;\n    byte[] okHttpBuf = new byte[4096];\n    OkHttpClient client = new OkHttpClient();\n\n    Callback callback = new Callback() {\n\n        @Override\n        public void onFailure(Request request, IOException e) {\n            // TODO Auto-generated method stub\n            Log.d(TAG, \"onFailure\");\n        }\n\n        @Override\n        public void onResponse(Response response) throws IOException {\n            // TODO Auto-generated method stub\n            Log.d(TAG, \"onResponse\");\n\n            Log.d(TAG, \"response.isSuccessful()=\" + response.isSuccessful());\n            ResponseBody respBody = response.body();\n            BufferedInputStream bis = new BufferedInputStream(respBody.byteStream());\n\n            int len = 0;\n            while ((len = bis.read(okHttpBuf)) > 0) {\n                Log.d(TAG, \"read len: \" + len);\n            }\n        }\n\n    };\n\n    private void __testOkHttp() {\n        if (theCall != null) {\n            theCall.cancel();\n            theCall = null;\n            return;\n        } else {\n            String strUrl = \"http://cdn1.evernote.com/win5/public/Evernote_5.6.4.4632.exe\";\n            theCall = client.newCall(new Request.Builder().tag(System.nanoTime()).url(strUrl).build());\n            theCall.enqueue(callback);\n            return;\n        }\n    }\n```\n\nexception info:\n\n```\nFATAL EXCEPTION: OkHttp Dispatcher\nProcess: com.ishareok.isharekitdemo, PID: 14453\njava.lang.RuntimeException: java.net.SocketException: Socket closed\n    at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:153)\n    at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n    at java.lang.Thread.run(Thread.java:811)\nCaused by: java.net.SocketException: Socket closed\n    at libcore.io.Posix.recvfromBytes(Native Method)\n    at libcore.io.Posix.recvfrom(Posix.java:141)\n    at libcore.io.BlockGuardOs.recvfrom(BlockGuardOs.java:164)\n    at libcore.io.IoBridge.recvfrom(IoBridge.java:506)\n    at java.net.PlainSocketImpl.read(PlainSocketImpl.java:488)\n    at java.net.PlainSocketImpl.access$000(PlainSocketImpl.java:46)\n    at java.net.PlainSocketImpl$PlainSocketInputStream.read(PlainSocketImpl.java:240)\n    at okio.Okio$2.read(Okio.java:136)\n    at okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\n    at okio.RealBufferedSource.read(RealBufferedSource.java:50)\n    at com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:456)\n    at okio.RealBufferedSource$1.read(RealBufferedSource.java:265)\n    at java.io.InputStream.read(InputStream.java:162)\n    at java.io.BufferedInputStream.fillbuf(BufferedInputStream.java:142)\n    at java.io.BufferedInputStream.read(BufferedInputStream.java:288)\n    at java.io.InputStream.read(InputStream.java:162)\n    at com.ishareok.isharekitdemo.MiscActivity$1.onResponse(MiscActivity.java:361)\n    at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:150)\n    ... 4 more\n```\n", "url": "https://github.com/square/okhttp/issues/1049", "user": "qqonline", "labels": ["bug"], "created": "2014-09-11 14:57:54", "closed": "2014-10-25 23:02:41", "commits": {"606527e8e85c31e448cb168d2bcfaacbf612e55e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "36cff8b86438a3b0f3bd3e701b374a1404a9168d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 44.000277777777775, "commitsDetails": [{"commitHash": "606527e8e85c31e448cb168d2bcfaacbf612e55e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "36cff8b86438a3b0f3bd3e701b374a1404a9168d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["c9cc8365694e3efbf8eca82f6e08cde0ab7a466f"], "nameRev": "36cff8b86438a3b0f3bd3e701b374a1404a9168d tags/parent-2.1.0-RC1~21^2", "commitMessage": "Log uncaught IOExceptions instead of rethrowing them.\n\nThe application layer can handle these with a try/catch block in their\nonResponse method if desired.\n\nThis prevents a crash for applications that haven't deliberately configured\ntheir uncaught exception handlers.\n\nCloses https://github.com/square/okhttp/issues/1049\n", "commitDateTime": "2014-10-25 18:34:49", "authoredDateTime": "2014-10-25 18:34:24", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 8, "deletions": 17, "lines": 25}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/TestLogHandler.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Call.java", "insertions": 25, "deletions": 2, "lines": 27}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Platform.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.onResponseThrowsIsHandledByUncaughtExceptionHandler()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.squareup.okhttp.CallTest.onResponseThrowsIsHandledByUncaughtExceptionHandler().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.connectionReuseWhenResponseBodyConsumed_Async().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.cancelBeforeBodyIsRead()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.cancelInFlightBeforeResponseReadThrowsIOE().5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.canceledBeforeIOSignalsOnFailure().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.canceledBeforeResponseReadSignalsOnFailure().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.asyncResponseCanBeConsumedLater().9", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.cancelBeforeBodyIsRead().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.onResponseThrowsIsHandledByUncaughtExceptionHandler().2.onFailure(com.squareup.okhttp.Request,java.io.IOException)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.connectionReuseWhenResponseBodyConsumed_Async().3.onResponse(com.squareup.okhttp.Response)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.canceledBeforeIOSignalsOnFailure().6.dispatch(com.squareup.okhttp.mockwebserver.RecordedRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.tearDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.exceptionThrownByOnResponseIsRedactedAndLogged()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestLogHandler.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.TestLogHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Call.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Call.AsyncCall.execute()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.Call.toLoggableString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Platform.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Platform.JdkWithJettyBootPlatform.getSelectedProtocol(javax.net.ssl.SSLSocket)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["36cff8b86438a3b0f3bd3e701b374a1404a9168d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28.0, "deletions": 4.0, "lines": 32.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 11.0, "UPD": 0.0, "INS": 4.0, "MOV": 4.0, "DEL": 3.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal", "okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.Platform.JdkWithJettyBootPlatform.getSelectedProtocol(javax.net.ssl.SSLSocket)", "com.squareup.okhttp.Call.toLoggableString()", "com.squareup.okhttp.Call.AsyncCall.execute()"]}, {"title": "MockWebServer not handling MockResponse.setBodyDelayTimeMs in non SPDY mode", "body": "Hello there,\n\nI thought this was a robolectric issue not puttin the thread on sleep state but I believe that the current implementation of MockWebServer does not take care about the MockResposne.getBodyDelayTimeMs() if the originating request was not a SPDY request.\n", "url": "https://github.com/square/okhttp/issues/1047", "user": "vekexasia", "labels": ["bug"], "created": "2014-09-09 23:38:14", "closed": "2014-12-28 23:14:30", "commits": {}, "ttf": 109.00027777777778, "commitsDetails": []}, {"title": "Don't recover if a non-GET request fails", "body": "Currently it can silently retry requests, but now it's forbidden:\n\nhttp://tools.ietf.org/html/rfc7230\n\nA user agent MUST NOT automatically retry a request with a non-\n   idempotent method unless it has some means to know that the request\n   semantics are actually idempotent, regardless of the method, or some\n   means to detect that the original request was never applied.\n\nrelated to https://github.com/square/okhttp/issues/258\n", "url": "https://github.com/square/okhttp/issues/1043", "user": "ValleZ", "labels": ["bug"], "created": "2014-09-04 00:58:41", "closed": "2014-12-31 01:42:28", "commits": {"76deb8a4f13c6135f44ecef9bceccd792f61874d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "162fbfb4410546a812ed914df24d2ec91466c164": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "786e3b3048b84721c73a046b02a9edcbb6927686": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 118.00027777777778, "commitsDetails": [{"commitHash": "76deb8a4f13c6135f44ecef9bceccd792f61874d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "162fbfb4410546a812ed914df24d2ec91466c164", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "786e3b3048b84721c73a046b02a9edcbb6927686", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["24750b59c4a06e77635cec6ce6999c3db86ff7e4"], "nameRev": "786e3b3048b84721c73a046b02a9edcbb6927686 tags/parent-2.2.0~3^2", "commitMessage": "New API to disable retry for an OkHttpClient.\n\nMost applications won't want to disable retry globally. Instead, use\nclone() to get an OkHttpClient for a specific, non-idempotent request,\nthen configure that client with the setting.\n\nCloses https://github.com/square/okhttp/issues/1043\n", "commitDateTime": "2014-12-30 20:31:32", "authoredDateTime": "2014-12-30 15:00:38", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.recoverWhenRetryOnConnectionFailureIsTrue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.noRecoverWhenRetryOnConnectionFailureIsFalse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.OkHttpClient", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.setRetryOnConnectionFailure(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.getRetryOnConnectionFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.isRecoverable(java.io.IOException)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["786e3b3048b84721c73a046b02a9edcbb6927686"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 33.0, "deletions": 0.0, "lines": 33.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 0.0, "INS": 5.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http", "okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.OkHttpClient.setRetryOnConnectionFailure(boolean)", "com.squareup.okhttp.internal.http.HttpEngine.isRecoverable(java.io.IOException)", "com.squareup.okhttp.OkHttpClient.getRetryOnConnectionFailure()", "com.squareup.okhttp.OkHttpClient"]}, {"title": "SocketTimeoutException with OkHttp 2.0.0 + Retrofit 1.6.1", "body": "Hello. I've been getting SocketTimeoutException intermittently. This is not an Internet connection issue. If I access the same link from the phone's browser it will open.\n\nIt happens mostly on WiFi, but it happens on mobile data also from time to time. After a random number of calls (usually below 20), the timeout occurs and any subsequent call will have the same result. It recovers after a while and works for another 20 calls or so. I cannot get an exact pattern or reason why this happens.\n\nThe endpoint is not blocking the app, tested with the backend guys.\n\n``` java\nmOkHttpClient = new OkHttpClient();\nmOkHttpClient.setCache(cache);\nmOkHttpClient.setConnectTimeout(REQ_TIMEOUT, TimeUnit.SECONDS);\nmOkHttpClient.setReadTimeout(REQ_TIMEOUT, TimeUnit.SECONDS);\n\nRestAdapter restAdapter = new RestAdapter.Builder()\n                .setEndpoint(sEndpoint)\n                .setClient(new OkClient(mOkHttpClient))\n                .setLogLevel(RestAdapter.LogLevel.HEADERS)\n                .build();\n```\n\nAny help will be greatly appreciated.\n\n`retrofit.RetrofitError: failed to connect to api.xyz.ro/89.xx.yy.37 (port 80) after 15000ms`\n", "url": "https://github.com/square/okhttp/issues/1037", "user": "laurentiuonac", "labels": ["bug"], "created": "2014-08-28 11:42:14", "closed": "2014-10-26 14:31:24", "commits": {}, "ttf": 59.000277777777775, "commitsDetails": []}, {"title": "okhttp 2.0.0 OkHttpClient.cancel(tag) doesn't work", "body": "The Recipes [Canceling a Call](https://github.com/square/okhttp/wiki/Recipes#canceling-a-call) worked, but after I used `OkHttpClient.cancel(tag)` instead, it didn't work.\n\nMy code:\n\n``` java\nimport java.io.IOException;\nimport java.util.concurrent.*;\nimport com.squareup.okhttp.*;\n\npublic class Test {\n    private final ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);\n    private final OkHttpClient client = new OkHttpClient();\n\n    public void run() throws Exception {\n        Request request = new Request.Builder()\n        .url(\"http://httpbin.org/delay/2\") // This URL is served with a 2 second delay.\n        .tag(\"asdf\")\n        .build();\n\n        final long startNanos = System.nanoTime();\n        final Call call = client.newCall(request);\n\n        // Schedule a job to cancel the call in 1 second.\n        executor.schedule(new Runnable() {\n            @Override public void run() {\n                System.out.printf(\"%.2f Canceling call.%n\", (System.nanoTime() - startNanos) / 1e9f);\n                client.cancel(\"asdf\");\n                System.out.printf(\"%.2f Canceled call.%n\", (System.nanoTime() - startNanos) / 1e9f);\n            }\n        }, 1, TimeUnit.SECONDS);\n\n        try {\n            System.out.printf(\"%.2f Executing call.%n\", (System.nanoTime() - startNanos) / 1e9f);\n            Response response = call.execute();\n            System.out.printf(\"%.2f Call was expected to fail, but completed: %s%n\",\n                    (System.nanoTime() - startNanos) / 1e9f, response);\n        } catch (IOException e) {\n            System.out.printf(\"%.2f Call failed as expected: %s%n\",\n                    (System.nanoTime() - startNanos) / 1e9f, e);\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        new Test().run();\n    }\n}\n```\n\nResult:\n\n```\n0.25 Executing call.\n1.25 Canceling call.\n1.25 Canceled call.\n3.46 Call was expected to fail, but completed: Response{protocol=http/1.1, code=200, message=OK, url=http://httpbin.org/delay/2}\n```\n", "url": "https://github.com/square/okhttp/issues/1036", "user": "HeGanjie", "labels": ["bug"], "created": "2014-08-28 04:12:53", "closed": "2014-11-02 17:53:56", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "SpdyConnection.pushExecutor has zero keep-alive time", "body": "https://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java#L158\n\nBecause of the 0ms keep-alive time, the pushExecutor creates (and destroys) a new thread on every callback.  This seems unnecessarily expensive, compared to reusing the thread, particularly in settings where push callbacks are invoked frequently.\n\nIs there a reason why you'd want the threads created for this executor to be effectively single-use?\n", "url": "https://github.com/square/okhttp/issues/1034", "user": "dcheckoway", "labels": ["bug"], "created": "2014-08-26 06:30:36", "closed": "2014-10-11 18:18:26", "commits": {"712e56de25c8c212d8c85c6b316faeb8789d731c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 46.000277777777775, "commitsDetails": [{"commitHash": "712e56de25c8c212d8c85c6b316faeb8789d731c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["9aa1268899524f0f750ab35fa363f2ed3cec29cf"], "nameRev": "712e56de25c8c212d8c85c6b316faeb8789d731c tags/parent-2.1.0-RC1~29^2", "commitMessage": "Extend the keep-alive time for the SPDY push executor.\n\nCloses https://github.com/square/okhttp/issues/1034\n", "commitDateTime": "2014-10-11 10:11:44", "authoredDateTime": "2014-10-11 10:11:44", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/Connection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Connection.java", "spoonMethods": []}, {"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["712e56de25c8c212d8c85c6b316faeb8789d731c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 3, "lines": 5, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp", "okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyConnection"]}, {"title": "SpdyTransport sets the wrong protocol", "body": "SpdyTransport sets the response protocol according to the status line.\n\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/internal/http/StatusLine.java#L41\n\nIt seems to me that it should be clarified with the transport protocol, here, right?\n\nhttps://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java#L206\n", "url": "https://github.com/square/okhttp/issues/979", "user": "adriancole", "labels": ["bug"], "created": "2014-07-01 15:25:45", "closed": "2014-07-02 15:21:28", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Caching broken by transparent gzip header mismatch", "body": "Following the technique described in the Cache javadoc (http://square.github.io/okhttp/javadoc/com/squareup/okhttp/Cache.html) we added the Cache-Control max-stale header to ensure we get a cached response when offline. We're doing this through Retrofit's RequestInterceptor, like so: \n\n```\nrequestFacade.addHeader(\"Cache-Control\", \"max-stale=\" + maxStale);\n```\n\nThis works great in okhttp 1.6: we get a response when offline. However, it no longer works in 2.0RC2 (or master). After some debugging, it turns out there _is_ a cache Response, but it's not returned after this test in Cache.get(Request):\n\n```\nif (!entry.matches(request, response)) \n```\n\nwhich in turn is caused by OkHeaders.varyMatches(), which returns false for the Accept-Encoding field: cachedField [], actualField: [gzip].\n\nThis issue can be worked around by performing the gzip \"by hand\" by adding our own gzip header and decompressing the resulting response when necessary (this was not necessary in 1.6), as I described here, after an unrelated transparent gzip issue in an earlier version of okhttp: http://stackoverflow.com/questions/21585347/retrofit-okhttp-retrieve-gzipinputstream/22537697#22537697 \n", "url": "https://github.com/square/okhttp/issues/947", "user": "niekvse", "labels": ["bug"], "created": "2014-06-19 10:25:04", "closed": "2014-06-19 15:30:21", "commits": {"65f42fd3163d3dc7bee919c40ba876729c6fce47": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "94f9a1719cc420be061b16e2da03258552c5060b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "65f42fd3163d3dc7bee919c40ba876729c6fce47", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "94f9a1719cc420be061b16e2da03258552c5060b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["8924105d0d4cee9e972e0a60c2da807d7aae64a9"], "nameRev": "94f9a1719cc420be061b16e2da03258552c5060b tags/parent-2.0.0~3^2", "commitMessage": "Fix a bug where we weren't storing rewritten request headers.\n\nCloses https://github.com/square/okhttp/issues/947\n", "commitDateTime": "2014-06-19 08:29:57", "authoredDateTime": "2014-06-19 08:29:26", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CacheTest.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/OkHeaders.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CacheTest.gzipAndVaryOnAcceptEncoding()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHeaders.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.OkHeaders.varyHeaders(com.squareup.okhttp.Response)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["94f9a1719cc420be061b16e2da03258552c5060b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 1.0, "lines": 6.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 0.0, "INS": 1.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.OkHeaders.varyHeaders(com.squareup.okhttp.Response)"]}, {"title": "SetInstanceFollowRedirects(false) isn't respected when using OkUrlFactory", "body": "The code below will still follow the redirect even though we're specifying otherwise.  Expected behaviour would be complete with appropriate 30\\* status.\n\nOkUrlFactory factory = new OkUrlFactory(new OkHttpClient());\nHttpURLConnection connection = factory.open(request.url());\nconnection.setInstanceFollowRedirects(false);\n... exercise the connection\n", "url": "https://github.com/square/okhttp/issues/943", "user": "MiguelLavigne", "labels": ["bug"], "created": "2014-06-18 12:32:28", "closed": "2014-09-22 17:44:31", "commits": {}, "ttf": 96.00027777777778, "commitsDetails": []}, {"title": "SpdyConnection synchronization problem in goAway", "body": "We call SpdyStream.receiveRstStream (synchronizes on the stream) while holding the lock on SpdyConnection.this. We should release the SpdyConnection lock before acquiring the SpdyStream lock.\n", "url": "https://github.com/square/okhttp/issues/938", "user": "swankjesse", "labels": ["bug"], "created": "2014-06-18 02:04:33", "closed": "2014-10-26 20:24:20", "commits": {"8f1bc30cd1e821b8b3745502a0f442f54cdebce8": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 130.00027777777777, "commitsDetails": [{"commitHash": "8f1bc30cd1e821b8b3745502a0f442f54cdebce8", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["125df557fbeb9c77eb17872acac2eb156428d2ed"], "nameRev": "8f1bc30cd1e821b8b3745502a0f442f54cdebce8 tags/parent-2.1.0-RC1~18^2", "commitMessage": "Don't hold the connection lock when calling receiveRstStream.\n\nCloses https://github.com/square/okhttp/issues/938\n", "commitDateTime": "2014-10-26 10:28:45", "authoredDateTime": "2014-10-26 10:28:45", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 10, "deletions": 10, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode,okio.ByteString)", "TOT": 25, "UPD": 7, "INS": 4, "MOV": 10, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8f1bc30cd1e821b8b3745502a0f442f54cdebce8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 10, "lines": 20, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 25, "UPD": 7, "INS": 4, "MOV": 10, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode,okio.ByteString)"]}, {"title": "Support 307s and 308s", "body": "Does okhttp support POST'ing to redirect url returned in 301 response to a POST?  We're using v1.3 right now and it does not appear to be supported?\n", "url": "https://github.com/square/okhttp/issues/936", "user": "joreilly", "labels": ["bug"], "created": "2014-06-17 22:45:03", "closed": "2014-10-04 22:35:10", "commits": {}, "ttf": 108.00027777777778, "commitsDetails": []}, {"title": "Certain SPDY requests always timeout", "body": "This simple request to fetch a .mp3 always timeouts. Some requests to the same domain work though. Other clients (Browsers, curl, etc) have no problem.\n\n``` java\nString url = \"https://s.auspiel.de/sounds/effects/mischen-1.mp3\";\nOkHttpClient httpClient = new OkHttpClient();\nhttpClient.setReadTimeout(10, TimeUnit.SECONDS);\nCall call = httpClient.newCall(new Request.Builder().\n        url(url). tag(url). get().build());\ncall.enqueue(new com.squareup.okhttp.Callback() {\n    @Override public void onFailure(Request request, Throwable throwable) {\n        System.out.println(\"Failure\");\n    }\n\n    @Override public void onResponse(Response response) throws IOException {\n        System.out.println(\"GOT RESPONSE\");\n        byte[] responseData = response.body().bytes();\n        System.out.println(\"READ BODY\"); // this is never reached\n    }\n});\n```\n\nExample repo: https://github.com/MSch/okhttp-spdy-timeout\n\nhttps://github.com/MSch/okhttp-spdy-timeout/blob/master/app/src/main/java/msch/okhttpbug/MyActivity.java#L25-L40\n\nI also tried with OkHttp 2.0.0-RC2 and OkIo master. Same issue.\n\ne.g. https://s.auspiel.de/sounds/male/bayerisch/greeting/begruessung-1.mp3 works.\n\nTested devices: Samsung Galaxy Nexus with Android 4.2.2 and Asus Nexus 7 with Android 4.4.2\n\n```\nE/AndroidRuntime\ufe55 FATAL EXCEPTION: OkHttp Dispatcher\n    java.lang.RuntimeException: java.io.InterruptedIOException: timeout\n            at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:153)\n            at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n            at java.lang.Thread.run(Thread.java:856)\n     Caused by: java.io.InterruptedIOException: timeout\n            at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout.exitAndThrowIfTimedOut(SpdyStream.java:573)\n            at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource.waitUntilReadable(SpdyStream.java:380)\n            at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource.read(SpdyStream.java:343)\n            at com.squareup.okhttp.internal.http.SpdyTransport$SpdySource.read(SpdyTransport.java:273)\n            at okio.Buffer.writeAll(Buffer.java:574)\n            at okio.RealBufferedSource.readByteArray(RealBufferedSource.java:87)\n            at com.squareup.okhttp.ResponseBody.bytes(ResponseBody.java:56)\n            at msch.okhttpbug.MyActivity$1.onResponse(MyActivity.java:37)\n            at com.squareup.okhttp.Call$AsyncCall.execute(Call.java:150)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at java.lang.Thread.run(Thread.java:856)\n```\n", "url": "https://github.com/square/okhttp/issues/933", "user": "MSch", "labels": ["bug"], "created": "2014-06-17 12:28:18", "closed": "2014-06-18 17:02:11", "commits": {"cea1d3669936aabfa9818dbdf20ef178ecf9ca2d": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "6171f554512ce314d5b7008fc660a1697887581c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "cea1d3669936aabfa9818dbdf20ef178ecf9ca2d", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6171f554512ce314d5b7008fc660a1697887581c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["7213e9b6b9e1508c349ccd6b13b894bd5d8bf96d"], "nameRev": "6171f554512ce314d5b7008fc660a1697887581c tags/parent-2.0.0~5^2", "commitMessage": "Fix two problems with the window size.\n\nEach peer has a window size. The peer's window size controls how much\ndata we can send the peer, and our window size controls how much data\nthe peer can send us. We had these reversed in SpdyStream, so if the\npeer specified a non-default window size we wouldn't send the required\nWINDOW_UPDATE events when we needed to.\n\nThe connection has its own window size. But unlike the stream window\nsizes, this needs to be manually adjusted with a windowUpdate frame\nwhen the connection is opened.\n\nCloses https://github.com/square/okhttp/issues/933\n", "commitDateTime": "2014-06-18 00:34:21", "authoredDateTime": "2014-06-17 22:25:19", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Http2ConnectionTest.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/Spdy3ConnectionTest.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.Http2ConnectionTest.readSendsWindowUpdateHttp2()", "TOT": 27, "UPD": 5, "INS": 7, "MOV": 12, "DEL": 3}]}, {"spoonFilePath": "Spdy3ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.Spdy3ConnectionTest.readSendsWindowUpdate()", "TOT": 27, "UPD": 5, "INS": 7, "MOV": 12, "DEL": 3}]}, {"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.sendConnectionPreface()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.read(okio.Buffer,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6171f554512ce314d5b7008fc660a1697887581c"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8.0, "deletions": 3.0, "lines": 11.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 2.0, "INS": 4.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyConnection", "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.read(okio.Buffer,long)", "com.squareup.okhttp.internal.spdy.SpdyConnection.sendConnectionPreface()"]}, {"title": "Uploading picture to Twitter fails", "body": "I am using this Twitter [API entry to upload pictures](https://dev.twitter.com/docs/api/1.1/post/statuses/update_with_media) and with okhttp 2.0 RC2 it stalls in the middle of the upload. In the end I get `stream was reset: CANCEL`\nI tried setting `\"X-Android-Transports\"` to `\"http/1.1\"` but the same happens (the error just comes faster). So now I disable okhttp with Twitter uploads...\n\nI don't know if you have the setup with a Twitter key to reproduce, let me know if you can't reproduce it.\n", "url": "https://github.com/square/okhttp/issues/929", "user": "robUx4", "labels": ["bug"], "created": "2014-06-13 08:56:26", "closed": "2014-07-04 15:28:25", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "How to override setEnabledCipherSuites and setEnabledProtocols", "body": "I would like to override TLS order and enabled ciphers according to:\nhttp://op-co.de/blog/posts/android_ssl_downgrade/\n\nHow I can access SSLSocket object in okHttp?\n", "url": "https://github.com/square/okhttp/issues/919", "user": "kkocel", "labels": ["bug"], "created": "2014-06-11 13:42:27", "closed": "2014-10-11 13:16:17", "commits": {}, "ttf": 121.00027777777778, "commitsDetails": []}, {"title": "Non-ASCII Header Encoding Issues", "body": "When passing headers parameters containing a '\u00e9' it is received on server side as '\u00c3\u00a9'.\nIt might seem wird to pass such chars as arguments but I can't modify server side. \nI know this behaviour is specific to retrofit  because it worked with the old client using HttpUrlConnection and it also works with Postman chrome plugin.\n\nvia @cmorin6 from https://github.com/square/retrofit/issues/516\n", "url": "https://github.com/square/okhttp/issues/891", "user": "JakeWharton", "labels": ["bug"], "created": "2014-06-03 20:22:01", "closed": "2015-08-03 05:23:06", "commits": {"a57aa43c57819e06fede3f89a653eb6f059449a8": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "06dbedc762cb0a684b6c4d4e38f65aa69007d400": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "39c27efa737681eeb08453dd58f897065c5a120a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "0e7524da21b756d34e20fc80ef974f66a06fd12b": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 425.0002777777778, "commitsDetails": [{"commitHash": "a57aa43c57819e06fede3f89a653eb6f059449a8", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["7cf6363662c7793c7694c8da0641be0508e04241"], "nameRev": "a57aa43c57819e06fede3f89a653eb6f059449a8 tags/parent-2.5.0~8^2", "commitMessage": "Be strict on invalid characters in request headers.\n\nThis includes potential security problems (newline characters) as well as\nsimple non-ASCII characters including international characters and emoji.\n\nCloses https://github.com/square/okhttp/issues/891\n", "commitDateTime": "2015-08-03 00:43:20", "authoredDateTime": "2015-08-03 00:43:20", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/HttpUrlTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/RequestTest.java", "insertions": 59, "deletions": 1, "lines": 60}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/{internal/http => }/URLConnectionTest.java", "insertions": 54, "deletions": 24, "lines": 78}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Headers.java", "insertions": 23, "deletions": 6, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.responseHeaderParsingIsLenient()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpUrlTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.HttpUrlTest.port()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RequestTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.RequestTest.headerAcceptsPermittedCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.RequestTest.emptyNameForbidden()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.RequestTest.headerForbidsControlCharacters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.RequestTest.assertForbiddenHeader(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.requestHeaders()", "TOT": 24, "UPD": 8, "INS": 0, "MOV": 16, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.responseHeaders()", "TOT": 13, "UPD": 5, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.WriteKind", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.sslFallbackNotUsedWhenRecycledConnectionFails()", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testConnectViaSocketFactory(boolean)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testConnectViaHttpProxyToHttps(com.squareup.okhttp.internal.http.URLConnectionTest$ProxyConfig)", "TOT": 11, "UPD": 1, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.proxyConnectIncludesProxyHeadersOnly()", "TOT": 14, "UPD": 2, "INS": 0, "MOV": 12, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.proxyAuthenticateOnConnect()", "TOT": 15, "UPD": 3, "INS": 0, "MOV": 12, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.defaultRequestProperty()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.gzipEncodingEnabledByDefault()", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.clientConfiguredGzipContentEncoding()", "TOT": 8, "UPD": 1, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.clientConfiguredCustomContentEncoding()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testClientConfiguredGzipContentEncodingAndConnectionReuse(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind,boolean)", "TOT": 13, "UPD": 2, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.streamDiscardingIsTimely()", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setChunkedStreamingMode()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testAuthenticateWithStreamingPost(com.squareup.okhttp.internal.http.URLConnectionTest$StreamingMode)", "TOT": 11, "UPD": 1, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail(java.lang.String)", "TOT": 14, "UPD": 1, "INS": 0, "MOV": 13, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.allAttributesSetInServerAuthenticationCallbacks()", "TOT": 15, "UPD": 4, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.allAttributesSetInProxyAuthenticationCallbacks()", "TOT": 15, "UPD": 4, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.StreamingMode", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.authenticateWithPost()", "TOT": 17, "UPD": 2, "INS": 0, "MOV": 15, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.authenticateWithGet()", "TOT": 13, "UPD": 2, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.authenticateWithGetAndTransparentGzip()", "TOT": 13, "UPD": 2, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testRedirected(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind,boolean)", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectWithAuthentication()", "TOT": 8, "UPD": 1, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectedPostStripsRequestBodyHeaders()", "TOT": 14, "UPD": 4, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testRedirect(boolean,java.lang.String)", "TOT": 19, "UPD": 2, "INS": 0, "MOV": 17, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectionCloseWithRedirect()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.responseCodeDisagreesWithHeaders()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.singleByteReadIsSigned()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.readAfterLastByte()", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testInputStreamAvailable(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind)", "TOT": 10, "UPD": 3, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.reusedConnectionFailsWithPost(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind,int)", "TOT": 20, "UPD": 2, "INS": 0, "MOV": 18, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.customBasicAuthenticator()", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.customTokenAuthenticator()", "TOT": 8, "UPD": 1, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.veryLargeFixedLengthRequest()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.noTransparentGzipFor304NotModified()", "TOT": 10, "UPD": 3, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.userAgentDefaultsToJavaVersion()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.newSet(java.lang.String[])", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.TransferKind", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.ProxyConfig", "TOT": 11, "UPD": 10, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpsReusingConnectionsDifferentFactories()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.contentDisagreesWithContentLengthHeaderBodyTooLong()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.contentDisagreesWithContentLengthHeaderBodyTooShort()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.disconnectedConnection()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.nonHexChunkSize()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.malformedChunkSize()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.extensionAfterChunkSize()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.missingChunkBody()", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.transparentGzipWorksAfterExceptionRecovery()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.endOfStreamResponseIsNotPooled()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.digestAuthentication()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.shoutcast()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.authenticateRealmUppercase()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectedOnHttps()", "TOT": 8, "UPD": 1, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.notRedirectedFromHttpsToHttp()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.notRedirectedFromHttpToHttps()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testResponseRedirectedWithPost(int,com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind)", "TOT": 12, "UPD": 1, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.writeTimeouts()", "TOT": 11, "UPD": 4, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.sameConnectionRedirectAndReuse()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testFlushAfterStreamTransmitted(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind)", "TOT": 9, "UPD": 1, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.fullyBufferedPostIsTooLong()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.emptyResponseHeaderNameIsLenient()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.TransferKind.setBody(com.squareup.okhttp.mockwebserver.MockResponse,java.lang.String,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.doUpload(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind,com.squareup.okhttp.internal.http.URLConnectionTest$WriteKind)", "TOT": 17, "UPD": 5, "INS": 0, "MOV": 12, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpsToUntrustedServer()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testSecureStreamingPost(com.squareup.okhttp.internal.http.URLConnectionTest$StreamingMode)", "TOT": 13, "UPD": 2, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.follow20Redirects()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.doesNotFollow21Redirects()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.TransferKind.1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.TransferKind.2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.TransferKind.3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.ProxyConfig.1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.ProxyConfig.2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.ProxyConfig.3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.ProxyConfig.4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.ProxyConfig.5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.FakeProxySelector.select(java.net.URI)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.TransferKind.3.setBody(com.squareup.okhttp.mockwebserver.MockResponse,okio.Buffer,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest", "TOT": 9, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.URLConnectionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.readAscii(java.io.InputStream,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.gzip(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.FakeProxySelector", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setUp()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.tearDown()", "TOT": 9, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getRequestPropertyReturnsLastValue()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.serverSendsInvalidResponseHeaders()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.serverSendsInvalidCodeTooLarge()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.serverSendsInvalidCodeNotANumber()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.serverSendsUnnecessaryWhitespace()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectRetriesUntilConnectedOrFailed()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.requestBodySurvivesRetriesWithFixedLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.requestBodySurvivesRetriesWithChunkedStreaming()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.requestBodySurvivesRetriesWithBufferedBody()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testRequestBodySurvivesRetries(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getErrorStreamOnSuccessfulRequest()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getErrorStreamOnUnsuccessfulRequest()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.bug2939()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.bug10100()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectionsArePooled()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.chunkedConnectionsArePooled()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.serverClosesSocket()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.serverShutdownInput()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.serverShutdownOutput()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.invalidHost()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testServerClosesOutput(com.squareup.okhttp.mockwebserver.SocketPolicy)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.chunkedUpload_byteByByte()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.chunkedUpload_smallBuffers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.chunkedUpload_largeBuffers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.fixedLengthUpload_byteByByte()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.fixedLengthUpload_smallBuffers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.fixedLengthUpload_largeBuffers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getResponseCodeNoResponseBody()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttps()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.inspectHandshakeThroughoutRequestLifecycle()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpsReusingConnections()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpsWithSSLFallback()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpsWithSSLFallbackFailuresRecorded()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaProxyUsingProxyArg()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaProxyUsingProxySystemProperty()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaProxyUsingHttpProxySystemProperty()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testConnectViaProxy(com.squareup.okhttp.internal.http.URLConnectionTest$ProxyConfig)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectHttpViaSocketFactory()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectHttpsViaSocketFactory()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.contentDisagreesWithChunkedHeaderBodyTooLong()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.contentDisagreesWithChunkedHeaderBodyTooShort()", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpProxyToHttpsUsingProxyArgWithNoProxy()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpProxyToHttpsUsingHttpProxySystemProperty()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testConnectViaDirectProxyToHttps(com.squareup.okhttp.internal.http.URLConnectionTest$ProxyConfig)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpProxyToHttpsUsingProxyArg()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpProxyToHttpsUsingProxySystemProperty()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpProxyToHttpsUsingHttpsProxySystemProperty()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectViaHttpProxyToHttpsUsingBadProxyAndHttpResponseCache()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.initResponseCache()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.proxyWithConnectionClose()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.proxyWithConnectionReuse()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.disconnectBeforeConnect()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.markAndResetWithContentLengthHeader()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.markAndResetWithChunkedEncoding()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.markAndResetWithNoLengthHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testMarkAndReset(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind)", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.unauthorizedResponseHandling()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.gzipAndConnectionReuseWithFixedLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.gzipAndConnectionReuseWithChunkedEncoding()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.gzipAndConnectionReuseWithFixedLengthAndTls()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.gzipAndConnectionReuseWithChunkedEncodingAndTls()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.earlyDisconnectDoesntHarmPoolingWithChunkedEncoding()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.earlyDisconnectDoesntHarmPoolingWithFixedLengthEncoding()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testEarlyDisconnectDoesntHarmPooling(com.squareup.okhttp.internal.http.URLConnectionTest$TransferKind)", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.authenticateWithFixedLengthStreaming()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.authenticateWithChunkedStreaming()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postEmptyBodyRetransmittedAfterAuthorizationFail_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.nonStandardAuthenticationScheme()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.nonStandardAuthenticationSchemeWithRealm()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.authCallsForHeader(java.lang.String)", "TOT": 9, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setValidRequestMethod()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.assertValidRequestMethod(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setInvalidRequestMethodLowercase()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setInvalidRequestMethodConnect()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.assertInvalidRequestMethod(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.cannotSetNegativeFixedLengthStreamingMode()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.canSetNegativeChunkedStreamingMode()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.cannotSetFixedLengthStreamingModeAfterConnect()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.cannotSetChunkedStreamingModeAfterConnect()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.cannotSetFixedLengthStreamingModeAfterChunkedStreamingMode()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.cannotSetChunkedStreamingModeAfterFixedLengthStreamingMode()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.secureFixedLengthStreaming()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.secureChunkedStreaming()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectedWithChunkedEncoding()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectedWithContentLengthHeader()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectedWithNoLengthHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectedFromHttpsToHttpFollowingProtocolRedirects()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectedFromHttpToHttpsFollowingProtocolRedirects()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectToAnotherOriginServer()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectToAnotherOriginServerWithHttps()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectToAnotherOriginServer(boolean)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectWithProxySelector()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response300MultipleChoiceWithPost()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response301MovedPermanentlyWithPost()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response302MovedTemporarilyWithPost()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response303SeeOtherWithPost()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postRedirectToGetWithChunkedRequest()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postRedirectToGetWithStreamedRequest()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response305UseProxy()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response307WithGet()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response307WithHead()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response307WithOptions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response307WithPost()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response308WithGet()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response308WithHead()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response308WithOptions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.response308WithPost()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.httpsWithCustomTrustManager()", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.readTimeouts()", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 10, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setChunkedEncodingAsRequestProperty()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectionCloseInRequest()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.connectionCloseInResponse()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.flushAfterStreamTransmittedWithChunkedEncoding()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.flushAfterStreamTransmittedWithFixedLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.flushAfterStreamTransmittedWithNoLengthHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getHeadersThrows()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.dnsFailureThrowsIOException()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.malformedUrlThrowsUnknownHostException()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getKeepAlive()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getContent()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getContentOfType()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getOutputStreamOnGetFails()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getOutputAfterGetInputStreamFails()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setDoOutputOrDoInputAfterConnectFails()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.clientSendsContentLength()", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getContentLengthConnects()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getContentTypeConnects()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.getContentEncodingConnects()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.urlContainsQueryButNoPath()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.doOutputForMethodThatDoesntSupportOutput()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.inputStreamAvailableWithChunkedEncoding()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.inputStreamAvailableWithContentLengthHeader()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.inputStreamAvailableWithNoLengthHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postFailsWithBufferedRequestForSmallRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postFailsWithBufferedRequestForLargeRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postFailsWithChunkedRequestForSmallRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postFailsWithChunkedRequestForLargeRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postFailsWithFixedLengthRequestForSmallRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postFailsWithFixedLengthRequestForLargeRequest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodyRetransmittedOnFailureRecovery()", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.fullyBufferedPostIsTooShort()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.testPooledConnectionsDetectHttp10()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodiesRetransmittedOnAuthProblems()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.cookiesAndTrailers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.headerNamesContainingNullCharacter()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.headerValuesContainingNullCharacter()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.emptyRequestHeaderValueIsAllowed()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.emptyResponseHeaderValueIsAllowed()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.emptyRequestHeaderNameIsStrict()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.doesNotAttemptAuthorization21Times()", "TOT": 9, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.attemptAuthorization20Times()", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.pooledConnectionProblemsNotReportedToProxySelector()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.postBodiesRetransmittedOnIpAddressProblems()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.deflateCompression()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.authenticateCallsTrackedAsRedirects()", "TOT": 9, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setsNegotiatedProtocolHeader_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setsNegotiatedProtocolHeader_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.zeroLengthPost_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.zeroLengthPost_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setsNegotiatedProtocolHeader(com.squareup.okhttp.Protocol)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.http10SelectedProtocol()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.http11SelectedProtocol()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.zeroLengthPut()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.zeroLengthPut_HTTP_2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.zeroLengthPut_SPDY_3()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.zeroLengthPost()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.zeroLengthPayload(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.unspecifiedRequestBodyContentTypeGetsDefault()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setProtocols()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setProtocolsWithoutHttp11()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.setProtocolsWithNull()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.gzipWithRedirectAndConnectionReuse()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.bodyPermittedOnDelete()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.userAgentPicksUpHttpAgentSystemProperty()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.interceptorsNotInvoked()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.assertContent(java.lang.String,java.net.HttpURLConnection,int)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.assertContent(java.lang.String,java.net.HttpURLConnection)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.RecordingTrustManager", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.RecordingTrustManager.getAcceptedIssuers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.RecordingTrustManager.certificatesToString(java.security.cert.X509Certificate[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.enableProtocol(com.squareup.okhttp.Protocol)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.suppressTlsFallbackScsv(com.squareup.okhttp.OkHttpClient)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.RecordingTrustManager.checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.RecordingTrustManager.checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectWithProxySelector().2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectWithProxySelector().2.connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.interceptorsNotInvoked().5", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectWithProxySelector().2.select(java.net.URI)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.interceptorsNotInvoked().5.intercept(com.squareup.okhttp.internal.http.Chain)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "Headers.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Headers.Builder.add(java.lang.String,java.lang.String)", "TOT": 16, "UPD": 2, "INS": 1, "MOV": 10, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.Headers.Builder.set(java.lang.String,java.lang.String)", "TOT": 12, "UPD": 2, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.Headers.Builder.checkNameAndValue(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "06dbedc762cb0a684b6c4d4e38f65aa69007d400", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "39c27efa737681eeb08453dd58f897065c5a120a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0e7524da21b756d34e20fc80ef974f66a06fd12b", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["bf69c55eb4c1c0c93d1477a31dfb2c45359fba87"], "nameRev": "0e7524da21b756d34e20fc80ef974f66a06fd12b tags/parent-2.5.0~7^2", "commitMessage": "Make sure the default user agent is ASCII.\n\nSee https://github.com/square/okhttp/issues/891\n", "commitDateTime": "2015-08-03 01:26:05", "authoredDateTime": "2015-08-03 01:12:46", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/URLConnectionTest.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/Util.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.URLConnectionTest.userAgentDefaultsToJavaVersion()", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.URLConnectionTest.userAgentSystemPropertyIsNotAscii()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.defaultUserAgent()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "Util.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Util.toHumanReadableAscii(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a57aa43c57819e06fede3f89a653eb6f059449a8", "0e7524da21b756d34e20fc80ef974f66a06fd12b"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 43.0, "deletions": 7.0, "lines": 50.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 37.0, "UPD": 5.0, "INS": 7.0, "MOV": 19.0, "DEL": 6.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc", "okhttp/src/main/java/com/squareup/okhttp", "okhttp/src/main/java/com/squareup/okhttp/internal"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.defaultUserAgent()", "com.squareup.okhttp.Headers.Builder.add(java.lang.String,java.lang.String)", "com.squareup.okhttp.internal.Util.toHumanReadableAscii(java.lang.String)", "com.squareup.okhttp.Headers.Builder.checkNameAndValue(java.lang.String,java.lang.String)", "com.squareup.okhttp.Headers.Builder.set(java.lang.String,java.lang.String)"]}, {"title": "libssl crash when using X-Android-Transports: http/1.1 with Facebook", "body": "I have a hard crash when loading some URLs with Facebook and forcing the `X-Android-Transports: http/1.1` header. I load some picture data asynchronously from Facebook and it always crashes in libssl. If I don't put that header it works fine (but then sometimes I get \"`IO error stream was reset: REFUSED_STREAM`\" from Facebook randomly on some requests).\n\nHere is a stack trace. I have the issue in 4.2 and 4.4.2.\n\n```\n06-02 09:37:28.087: I/DEBUG(111): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n06-02 09:37:28.087: I/DEBUG(111): Build fingerprint: 'generic/vbox86p/vbox86p:4.1.1/JRO03S/eng.buildbot.20140326.210658:userdebug/test-keys'\n06-02 09:37:28.087: I/DEBUG(111): pid: 5007, tid: 5100, name: pool-9-thread-2  >>> com.levelup.touiteur <<<\n06-02 09:37:28.087: I/DEBUG(111): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 00000000\n06-02 09:37:28.159: I/DEBUG(111):     eax b99ba496  ebx b6585a64  ecx ffffffff  edx 00000008\n06-02 09:37:28.159: I/DEBUG(111):     esi 00000000  edi 00000000\n06-02 09:37:28.159: I/DEBUG(111):     xcs 00000073  xds 0000007b  xes 0000007b  xfs 00000000  xss 0000007b\n06-02 09:37:28.159: I/DEBUG(111):     eip b6563fbb  ebp 94cd2858  esp 94cd2810  flags 00010246\n06-02 09:37:28.159: I/DEBUG(111): backtrace:\n06-02 09:37:28.159: I/DEBUG(111):     #00  pc 0003afbb  /system/lib/libssl.so (SSL_select_next_proto+107)\n06-02 09:37:28.159: I/DEBUG(111):     #01  pc 00039af5  /system/lib/libjavacore.so (next_proto_select_callback(ssl_st*, unsigned char**, unsigned char*, unsigned char const*, unsigned int, void*)+117)\n06-02 09:37:28.159: I/DEBUG(111):     #02  pc 00047dc2  /system/lib/libssl.so (ssl_parse_serverhello_tlsext+1138)\n06-02 09:37:28.159: I/DEBUG(111):     #03  pc 00023f89  /system/lib/libssl.so (ssl3_get_server_hello+1321)\n06-02 09:37:28.159: I/DEBUG(111):     #04  pc 00024885  /system/lib/libssl.so (ssl3_connect+389)\n06-02 09:37:28.159: I/DEBUG(111):     #05  pc 0003c3be  /system/lib/libssl.so (SSL_do_handshake+254)\n06-02 09:37:28.159: I/DEBUG(111):     #06  pc 0003e69b  /system/lib/libjavacore.so (NativeCrypto_SSL_do_handshake(_JNIEnv*, _jclass*, int, _jobject*, _jobject*, int, unsigned char, _jbyteArray*)+859)\n06-02 09:37:28.159: I/DEBUG(111):     #07  pc 0001aea0  /system/lib/libdvm.so (dvmPlatformInvoke+80)\n06-02 09:37:28.159: I/DEBUG(111):     #08  pc 000608f9  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+489)\n06-02 09:37:28.159: I/DEBUG(111):     #09  pc 000c6008  /system/lib/libdvm.so\n06-02 09:37:28.159: I/DEBUG(111):     #10  pc 00029406  /system/lib/libdvm.so (dvmMterpStd(Thread*)+70)\n06-02 09:37:28.159: I/DEBUG(111):     #11  pc 000265d0  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+160)\n06-02 09:37:28.159: I/DEBUG(111):     #12  pc 00091779  /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, char*)+601)\n06-02 09:37:28.159: I/DEBUG(111):     #13  pc 00091886  /system/lib/libdvm.so (dvmCallMethod(Thread*, Method const*, Object*, JValue*, ...)+54)\n06-02 09:37:28.159: I/DEBUG(111):     #14  pc 00077c33  /system/lib/libdvm.so (interpThreadStart(void*)+755)\n06-02 09:37:28.159: I/DEBUG(111):     #15  pc 00010870  /system/lib/libc.so (__thread_entry+240)\n06-02 09:37:28.159: I/DEBUG(111):     #16  pc 00019755  /system/lib/libc.so\n06-02 09:37:28.159: I/DEBUG(111):     #17  pc 00002c98  /system/lib/libdvm.so\n06-02 09:37:28.159: I/DEBUG(111): stack:\n06-02 09:37:28.159: I/DEBUG(111):          94cd27d0  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27d4  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27d8  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27dc  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27e0  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27e4  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27e8  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27ec  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27f0  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27f4  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27f8  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd27fc  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd2800  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd2804  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd2808  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd280c  00000000  \n06-02 09:37:28.159: I/DEBUG(111):     #00  94cd2810  b9929fd8  [heap]\n06-02 09:37:28.159: I/DEBUG(111):          94cd2814  00000000  \n06-02 09:37:28.159: I/DEBUG(111):          94cd2818  b997c0c8  [heap]\n06-02 09:37:28.159: I/DEBUG(111):          94cd281c  00000048  \n06-02 09:37:28.159: I/DEBUG(111):          94cd2820  b9937ac0  [heap]\n06-02 09:37:28.159: I/DEBUG(111):          94cd2824  b66b0958  /system/lib/libcrypto.so\n06-02 09:37:28.159: I/DEBUG(111):          94cd2828  b75ec1ab  /system/lib/libc.so (dlfree+11)\n06-02 09:37:28.159: I/DEBUG(111):          94cd282c  b99ba495  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd2830  00000000  \n06-02 09:37:28.163: I/DEBUG(111):          94cd2834  00000008  \n06-02 09:37:28.163: I/DEBUG(111):          94cd2838  b99ba496  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd283c  085621ea  \n06-02 09:37:28.163: I/DEBUG(111):          94cd2840  b98fd6d4  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd2844  00000000  \n06-02 09:37:28.163: I/DEBUG(111):          94cd2848  b6563f5b  /system/lib/libssl.so (SSL_select_next_proto+11)\n06-02 09:37:28.163: I/DEBUG(111):          94cd284c  9dda7614  /system/lib/libjavacore.so\n06-02 09:37:28.163: I/DEBUG(111):          ........  ........\n06-02 09:37:28.163: I/DEBUG(111):     #01  94cd2860  94cd28f8  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd2864  94cd28ff  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd2868  b99ba495  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd286c  00000019  \n06-02 09:37:28.163: I/DEBUG(111):          94cd2870  00000000  \n06-02 09:37:28.163: I/DEBUG(111):          94cd2874  ffffffff  \n06-02 09:37:28.163: I/DEBUG(111):          94cd2878  94cd28a8  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd287c  9dd7ea8a  /system/lib/libjavacore.so (next_proto_select_callback(ssl_st*, unsigned char**, unsigned char*, unsigned char const*, unsigned int, void*)+10)\n06-02 09:37:28.163: I/DEBUG(111):          94cd2880  b6585a64  /system/lib/libssl.so\n06-02 09:37:28.163: I/DEBUG(111):          94cd2884  b99ba4ae  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd2888  94cd2918  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd288c  b6570dc2  /system/lib/libssl.so (ssl_parse_serverhello_tlsext+1138)\n06-02 09:37:28.163: I/DEBUG(111):     #02  94cd2890  b98fd5e0  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd2894  94cd28f8  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd2898  94cd28ff  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd289c  b99ba495  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28a0  00000019  \n06-02 09:37:28.163: I/DEBUG(111):          94cd28a4  00000000  \n06-02 09:37:28.163: I/DEBUG(111):          94cd28a8  94cd2918  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28ac  b654fb13  /system/lib/libssl.so (ssl3_digest_cached_records+467)\n06-02 09:37:28.163: I/DEBUG(111):          94cd28b0  b997c088  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28b4  94cd28fc  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28b8  b98fd5e0  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28bc  b9708770  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28c0  b99ba4ae  [heap]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28c4  94cd28f8  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28c8  94cd28ff  [stack:5100]\n06-02 09:37:28.163: I/DEBUG(111):          94cd28cc  00000001  \n06-02 09:37:28.163: I/DEBUG(111):          ........  ........\n06-02 09:37:28.271: I/BootReceiver(320): Copying /data/tombstones/tombstone_05 to DropBox (SYSTEM_TOMBSTONE)\n```\n", "url": "https://github.com/square/okhttp/issues/890", "user": "robUx4", "labels": ["bug"], "created": "2014-06-02 07:50:42", "closed": "2014-06-10 17:04:31", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Some source files missing license header", "body": "The following source files are missing a license header:\n\nokhttp/internal/spdy/ErrorCode.java\nokhttp/internal/spdy/Hpack.java\nokhttp/internal/spdy/NameValueBlockReader.java\n", "url": "https://github.com/square/okhttp/issues/880", "user": "cmarcelk", "labels": ["bug"], "created": "2014-05-30 18:47:58", "closed": "2014-05-31 01:35:07", "commits": {"2ec2027fc00e24a83cd7bb7fef8b11e7c751bc13": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2ec2027fc00e24a83cd7bb7fef8b11e7c751bc13", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b398a4073dc098ae44c2019618a07a5469b96b67"], "nameRev": "2ec2027fc00e24a83cd7bb7fef8b11e7c751bc13 tags/parent-2.0.0-RC2~25^2", "commitMessage": "Add missing copyright headers.\n\nhttps://github.com/square/okhttp/issues/880\n", "commitDateTime": "2014-05-30 21:05:57", "authoredDateTime": "2014-05-30 21:05:57", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/ErrorCode.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft07.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/NameValueBlockReader.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ErrorCode.java", "spoonMethods": []}, {"spoonFilePath": "HpackDraft07.java", "spoonMethods": []}, {"spoonFilePath": "NameValueBlockReader.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2ec2027fc00e24a83cd7bb7fef8b11e7c751bc13"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 45, "deletions": 0, "lines": 45, "gitFilesChange": 3}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"]}, {"title": "Async reading of ResponseBody", "body": "Hey guys, I'm coding up a [ModernHttpClient adapter](https://github.com/paulcbetts/ModernHttpClient/blob/okhttp-2.0/src/ModernHttpClient/Android/OkHttpNetworkHandler.cs#L56) for OkHttp 2.0 and had a question.\n\nSo far, the new API is way cleaner to use, but one thing I'm not sure that I grok is the scope of ResponseBody's underlying stream. It seems that as soon as I leave `onResponse`, I either crash inside Okio, or receive an `IOException` back that the stream is closed. The straightforward code passes the `byteStream` result back to the caller (wrapped in a C# type), who then proceeds to read it on a separate thread - this dies. \n\nIt seems as if I _can_ read the bytes out immediately after receiving the `Response` object synchronously, but this breaks the abstraction above it, which expects to be handed [an object](http://msdn.microsoft.com/en-us/library/vstudio/system.net.http.httpresponsemessage) representing the headers + a `Stream` that the caller can read at its leisure.\n\nI looked through the test suite but didn't see any uses of `byteStream` that weren't synchronous reads. \n\nThis also might be a Xamarin Thing\u2122, definitely don't rule that out yet either :)\n", "url": "https://github.com/square/okhttp/issues/873", "user": "anaisbetts", "labels": ["bug"], "created": "2014-05-28 06:08:32", "closed": "2014-06-11 00:57:32", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Call.cancel on main thread annoy StrictMode guard.", "body": "There are `Call#enqueue` method. \nIt looks like I should use this method from main thread to asynchroniously execute this call on some background thread so I don't care. If I start request on main thread it is very likely that I will also cancel it on main thread. \n\nBut there is a problem on Android however with HTTPS connection\n\n```\n    android.os.NetworkOnMainThreadException\n            at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1145)\n            at com.android.org.conscrypt.OpenSSLSocketImpl.close(OpenSSLSocketImpl.java:1009)\n            at com.squareup.okhttp.Connection.closeIfOwnedBy(Connection.java:134)\n            at com.squareup.okhttp.OkHttpClient$1.closeIfOwnedBy(OkHttpClient.java:63)\n            at com.squareup.okhttp.internal.http.HttpConnection.closeIfOwnedBy(HttpConnection.java:136)\n            at com.squareup.okhttp.internal.http.HttpTransport.disconnect(HttpTransport.java:155)\n            at com.squareup.okhttp.internal.http.HttpEngine.disconnect(HttpEngine.java:480)\n            at com.squareup.okhttp.Call.cancel(Call.java:113)\n```\n", "url": "https://github.com/square/okhttp/issues/869", "user": "pepyakin", "labels": ["bug"], "created": "2014-05-27 16:34:48", "closed": "2015-11-30 04:02:58", "commits": {}, "ttf": 551.0002777777778, "commitsDetails": []}, {"title": "IOException in DiskLruCache", "body": "From the bugsense:\n\n```\njava.lang.RuntimeException: java.io.IOException: close failed: EIO (I/O error)\nat com.squareup.okhttp.internal.DiskLruCache$1.run(Unknown Source)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)\nat java.lang.Thread.run(Thread.java:856) Caused by: java.io.IOException: close failed: EIO (I/O error)\nat libcore.io.IoUtils.close(IoUtils.java:41)\nat java.io.FileOutputStream.close(FileOutputStream.java:139)\nat com.squareup.okhttp.internal.okio.Okio$1.close(Unknown Source)\nat com.squareup.okhttp.internal.okio.RealBufferedSink.close(Unknown Source)\nat com.squareup.okhttp.internal.DiskLruCache.rebuildJournal(Unknown Source)\nat com.squareup.okhttp.internal.DiskLruCache.access$300(Unknown Source)\n... 4 more Caused by: libcore.io.ErrnoException: close failed: EIO (I/O error)\nat libcore.io.Posix.close(Native Method)\nat libcore.io.BlockGuardOs.close(BlockGuardOs.java:75)\nat libcore.io.IoUtils.close(IoUtils.java:38)\n... 9 more\n```\n", "url": "https://github.com/square/okhttp/issues/829", "user": "kkocel", "labels": ["bug"], "created": "2014-05-14 15:56:41", "closed": "2014-11-05 04:13:32", "commits": {}, "ttf": 174.00027777777777, "commitsDetails": []}, {"title": "Trying to make GET request with body results in cryptic NPE exception", "body": "```\nRequest r = new Request.Builder().url(getUri()).method(\"GET\", requestBody).build();\nhttpClient.newCall(r).execute()\n```\n\nwill result in\n\n```\n            at com.squareup.okhttp.RequestBody$1.writeTo(RequestBody.java:72)\n            at com.squareup.okhttp.Call.getResponse(Call.java:207)\n            at com.squareup.okhttp.Call.execute(Call.java:80)\n```\n\nThis happens because `request.body()` (at Call.java:205) returns not null, but `engine.getBufferedRequestBody()` (at Call.java:206) returns null.\n\nUPDATE:\nTo clarify myself, I just want to okhttp handle this issue gracefully, like reporting that GET shouldn't have body, or something, but definitely not to throw Exception when trying to execute `Call` created with such request.\n", "url": "https://github.com/square/okhttp/issues/828", "user": "pepyakin", "labels": ["bug"], "created": "2014-05-14 10:57:52", "closed": "2014-06-10 05:12:01", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "NPE in HttpURLConnectionImpl.processResponseHeaders", "body": "Reported against AOSP here:\nhttp://code.google.com/p/android/issues/detail?id=69492\n\nI don't think my app causes this crash, it does nothing proxy related and passes no parameters to URL.openStream(), see below:\n\n```\njava.lang.NullPointerException\nat com.android.okhttp.internal.http.HttpURLConnectionImpl.processResponseHeaders(HttpURLConnectionImpl.java:420)\nat com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:300)\nat com.android.okhttp.internal.http.HttpURLConnectionImpl.getInputStream(HttpURLConnectionImpl.java:179)\nat java.net.URL.openStream(URL.java:470)\nat MyHttpGetInputSupplier.getInput(Unknown Source)\nat com.google.common.io.ByteStreams$3.openStream(Unknown Source)\nat com.google.common.io.ByteSource.copyTo(Unknown Source)\nat com.google.common.io.ByteStreams.copy(Unknown Source)\nat MyTask.doInBackground(Unknown Source)\n```\n\nOn line 420 I see:\nhttps://android.googlesource.com/platform/external/okhttp/+/android-4.4.2_r1/src/main/java/com/squareup/okhttp/internal/http/HttpURLConnectionImpl.java\n        if (selectedProxy.type() != Proxy.Type.HTTP) {\n\nSystem info:\nModel:HTC One\nRelease:4.4.2\nSdk:19\n", "url": "https://github.com/square/okhttp/issues/820", "user": "swankjesse", "labels": ["bug"], "created": "2014-05-12 01:39:20", "closed": "2014-05-20 03:47:12", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Redirects and cusom headers error", "body": "1) I am loading /url1 from server1 with Authorization header\n2) Got 302 Found and Location pointing to server2/url2\n3) HttpURLConnectionImpl sending the same Authorization header to server2\n\nThe problem is - Amazon don't like it and i think it is insecure\n", "url": "https://github.com/square/okhttp/issues/810", "user": "trolik", "labels": ["bug"], "created": "2014-05-07 09:22:08", "closed": "2014-05-20 15:04:04", "commits": {"2bf8aeb420ff7ccfa19b19934487960c43f70cb9": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "2bf8aeb420ff7ccfa19b19934487960c43f70cb9", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["99d540d71f9d1712e532641b2c0347c5e75366c5"], "nameRev": "2bf8aeb420ff7ccfa19b19934487960c43f70cb9 tags/parent-2.0.0-RC1~20^2", "commitMessage": "Add tests to show we drop authentication headers on redirect.\n\nAt the moment, we don't and the tests fail!\nhttps://github.com/square/okhttp/issues/810\n", "commitDateTime": "2014-05-17 13:10:38", "authoredDateTime": "2014-05-11 22:57:10", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 29, "deletions": 5, "lines": 34}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java", "insertions": 18, "deletions": 1, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.redirectsDoNotIncludeTooManyCookies()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.squareup.okhttp.CallTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.redirectsDoNotIncludeTooManyAuthHeaders()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.CallTest.tearDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectWithProxySelector()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.redirectWithAuthentication()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2bf8aeb420ff7ccfa19b19934487960c43f70cb9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Request add body throws EOFException", "body": "When the class com.squareup.okhttp.Call has been added.\nwhen I called method call.execute(); \n\nthe example throws a java.io.EOFException\n\nat okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:154)\n\nString json = bowlingJson();\nRequest.Body body = Request.Body.create(MediaType.parse(\"application/json\"), json);\nRequest request = new Request.Builder()\n                .url(\"https://xxxxxxxxx/api/1/user/phone_test\")\n                .method(\"POST\",body)\n                .build();\n\nCall call = client.newCall(request);\nResponse response = call.execute();\n\nBut the earlier version of the example,  Response response = client.execute(request);  \nIt works.\n\nIn the latest version, the method \" execute(Request request)\" have goon.\n", "url": "https://github.com/square/okhttp/issues/803", "user": "Zhouxuefei", "labels": ["bug"], "created": "2014-05-05 08:58:22", "closed": "2014-05-06 12:27:30", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Is POST really require body?", "body": "Hi, i'm encountering same problem as with #745, but at this time with POST method.\nI don't really care what specs saying about whether POST must have a body or not, but I definitely know, that some server APIs don't expect any body at all with POST method.\n\nLet's not blame creators of such API's, but just admit it.\nSo, when dealing with such APIs I should use clumsy code like following one:\n\n```\nnew Request.Builder()\n  .url(requestUrl)\n  .method(\"POST\", null);\n  .header(\"Content-Length\", \"0\");\n```\n\nMaybe we should add \"Content-Length: 0\" header automatically if request's body is null?\n", "url": "https://github.com/square/okhttp/issues/751", "user": "pepyakin", "labels": ["bug"], "created": "2014-04-22 12:12:48", "closed": "2014-05-05 18:02:56", "commits": {"1abba290f5e3e7719ad2dfead2eb45d507ed492c": {"commitGHEventType": "referenced", "commitUser": "gaurav-fueled"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "1abba290f5e3e7719ad2dfead2eb45d507ed492c", "commitGHEventType": "referenced", "commitUser": "gaurav-fueled", "commitParents": ["4412838406a9d5a363e099e785742ea9a4edbaf2"], "nameRev": "1abba290f5e3e7719ad2dfead2eb45d507ed492c tags/parent-2.4.0-RC1~46^2", "commitMessage": "Never convert null into an empty request body.\n\nThis is a behavior change.\n", "commitDateTime": "2015-04-16 19:53:13", "authoredDateTime": "2015-04-15 15:49:36", "commitGitStats": [{"filePath": "okcurl/src/test/java/com/squareup/okhttp/curl/MainTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc/JavaApiConverter.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/CallTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc/HttpURLConnectionImpl.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Request.java", "insertions": 3, "deletions": 4, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.curl.MainTest.put()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JavaApiConverter.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverter.createOkRequest(java.net.URI,java.lang.String,java.util.Map)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.JavaApiConverter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.CallTest.postZeroLength()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Request.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Request.Builder.delete()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.Request.Builder.method(java.lang.String,com.squareup.okhttp.RequestBody)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1abba290f5e3e7719ad2dfead2eb45d507ed492c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 6, "lines": 24, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 13, "UPD": 2, "INS": 7, "MOV": 1, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-urlconnection/src/main/java/com/squareup/okhttp/internal/huc", "okhttp/src/main/java/com/squareup/okhttp", "okhttp-android-support/src/main/java/com/squareup/okhttp/internal/huc"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.huc.JavaApiConverter.createOkRequest(java.net.URI,java.lang.String,java.util.Map)", "com.squareup.okhttp.Request.Builder.method(java.lang.String,com.squareup.okhttp.RequestBody)", "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl.newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)", "com.squareup.okhttp.Request.Builder.delete()", "com.squareup.okhttp.internal.huc.JavaApiConverter", "com.squareup.okhttp.internal.huc.HttpURLConnectionImpl"]}, {"title": "Can't execute DELETE without body.", "body": "I'm trying to create Request just as:\n\n```\nRequest.Builder builder = new Request.Builder().url(\"URL\");\nbuilder.method(\"DELETE\", null);\n```\n\n(because there are no `.delete()` method)\n\nWhen I'm trying to execute such request it crashes, with error message:\n`java.lang.IllegalStateException: Cannot stream a request body without chunked encoding or a known content length!`\n\nAs I get it, it happens because DELETE can \"has request body\" (`hasRequestBody` returns `true` for DELETE) and when we are trying to create request body it blows up, because neither `contentLength` info provided nor `Transfer-Encoding` is set to `chunked` because no body provided.\n\nSo, there is workaround: just add `Content-Length: 0` header.\n\nLooks like it is somekind related to #605.\n", "url": "https://github.com/square/okhttp/issues/745", "user": "pepyakin", "labels": ["bug"], "created": "2014-04-21 14:13:21", "closed": "2014-04-26 16:22:50", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "NullPointerException when closing a stream in okhttp 2.0", "body": "Here's the trace. The connection might have been closed by another thread.\n\n```\njava.lang.NullPointerException\n       at okio.OkBuffer.write(SourceFile:574)\n       at okio.OkBuffer.read(SourceFile:610)\n       at okio.RealBufferedSource.read(SourceFile:53)\n       at com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource.read(SourceFile:446)\n       at com.squareup.okhttp.internal.Util.skipAll(SourceFile:227)\n       at com.squareup.okhttp.internal.http.HttpConnection.discard(SourceFile:216)\n       at com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource.close(SourceFile:468)\n       at okio.RealBufferedSource.close(SourceFile:198)\n       at okio.InflaterSource.close(SourceFile:122)\n       at okio.GzipSource.close(SourceFile:178)\n       at okio.RealBufferedSource.close(SourceFile:198)\n       at okio.RealBufferedSource$1.close(SourceFile:181)\n       at com.levelup.http.HttpClient.parseRequest(SourceFile:298)\n       at com.levelup.http.HttpClient.getStringResponse(SourceFile:312)\n       at com.levelup.http.twitter.TwitterOAuth.getRequestTokener(SourceFile:165)\n       at com.levelup.http.twitter.TwitterOAuth.queryJSONArray(SourceFile:93)\n       at com.levelup.http.twitter.TwitterOAuth.queryJSONArrayOnly(SourceFile:89)\n       at com.plume.twitter.TwitterClient.queryJSONArrayOnly(SourceFile:649)\n       at com.levelup.socialapi.twitter.UpdateTwitterTimeline$1.loadPage(SourceFile:24)\n       at com.levelup.socialapi.AbstractPageLoader.loadPage(SourceFile:19)\n       at com.levelup.socialapi.twitter.UpdateThreadTwitter.runUpdate(SourceFile:57)\n       at com.levelup.socialapi.UpdateThread.call(SourceFile:67)\n       at com.levelup.socialapi.UpdateThread.call(SourceFile:9)\n       at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306)\n       at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n       at com.levelup.http.async.NetworkTask.run(SourceFile:80)\n       at com.levelup.socialapi.UpdateThreadFuture.run(SourceFile:28)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581)\n       at java.lang.Thread.run(Thread.java:1019)\n```\n", "url": "https://github.com/square/okhttp/issues/690", "user": "robUx4", "labels": ["bug"], "created": "2014-04-14 08:10:16", "closed": "2014-04-15 14:46:18", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "IllegalStateException when reading data from a connection closed by another thread", "body": "The log shows my REST reader getting an IllegalStateException when trying to read from an HTTP connection that has been closed (not by me). I think it should throw an IOException instead. This is with the okhttp 2.0 master branch.\n\n``````\njava.lang.IllegalStateException: closed\n       at okio.RealBufferedSink.flush(SourceFile:152)\n       at com.squareup.okhttp.internal.http.HttpEngine.readResponse(SourceFile:570)\n       at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(SourceFile:384)\n       at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponse(SourceFile:331)\n       at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getHeaderFields(SourceFile:178)\n       at com.squareup.okhttp.internal.http.DelegatingHttpsURLConnection.getHeaderFields(SourceFile:178)\n       at com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.getHeaderFields(SourceFile:1)\n       at com.levelup.touiteur.DBCookieMaster.setCookieResponse(SourceFile:460)\n       at com.levelup.http.AbstractHttpRequest.setResponse(SourceFile:159)\n       at com.levelup.http.twitter.HttpTwitterPost.setResponse(SourceFile:66)\n       at com.levelup.http.HttpClient.getQueryResponse(SourceFile:165)\n       at com.levelup.http.HttpClient.getInputStream(SourceFile:187)\n       at com.levelup.http.HttpClient.parseRequest(SourceFile:274)\n       at com.levelup.http.HttpClient.getStringResponse(SourceFile:312)\n       at com.levelup.http.twitter.TwitterOAuth.getRequestTokener(SourceFile:165)\n       at com.levelup.http.twitter.TwitterOAuth.queryJSONObject(SourceFile:72)\n       at com.levelup.http.twitter.TwitterOAuth.queryJSONObjectOnly(SourceFile:68)\n       at com.plume.twitter.TwitterClient.queryJSONObjectOnly(SourceFile:641)\n       at com.plume.twitter.TwitterClient$ProfileUpdateBuilder.updateProfile(SourceFile:1070)\n       at com.levelup.touiteur.ProfileTwitter$2$1.execute(SourceFile:554)\n       at com.levelup.touiteur.ActivityTouiteur$BusyWorkingThread.run(SourceFile:595)```\n``````\n", "url": "https://github.com/square/okhttp/issues/689", "user": "robUx4", "labels": ["bug"], "created": "2014-04-14 07:04:56", "closed": "2014-07-21 03:23:01", "commits": {}, "ttf": 97.00027777777778, "commitsDetails": []}, {"title": "Weird crash in OkBuffer from okhttp 2.0", "body": "Here's a trace of the issue\n\n<pre>\njava.lang.ArrayIndexOutOfBoundsException: src.length=2048 srcPos=2048 dst.length=2048 dstPos=0 length=8\n       at java.lang.System.arraycopy(System.java)\n       at okio.OkBuffer.write(SourceFile:579)\n       at okio.OkBuffer.read(SourceFile:610)\n       at okio.RealBufferedSource.read(SourceFile:53)\n       at com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource.read(SourceFile:446)\n       at okio.RealBufferedSource.exhausted(SourceFile:58)\n       at okio.InflaterSource.refill(SourceFile:96)\n       at okio.InflaterSource.read(SourceFile:62)\n       at okio.GzipSource.read(SourceFile:75)\n       at okio.RealBufferedSource$1.read(SourceFile:168)\n       at java.io.InputStream.read(InputStream.java:162)\n       at com.levelup.picturecache.internal.PictureJobList.downloadInTempFile(SourceFile:412)\n       at com.levelup.picturecache.internal.PictureJobList.run(SourceFile:144)\n       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n       at java.lang.Thread.run(Thread.java:864)</pre>\n", "url": "https://github.com/square/okhttp/issues/682", "user": "robUx4", "labels": ["bug"], "created": "2014-04-11 08:59:55", "closed": "2014-04-15 14:19:28", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Expect 100-continue does not appear to work", "body": "This maybe my misunderstanding of HttpURLConnection API or HTTP protocol itself, but I can't get okhttp do Expect 100-continue handshake as described in rfc [1]. Identical code using standard HttpURLConnection implementation appears to work. [2] has is an example that shows both okhttp and jdk tests I did\n\n[1] http://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html\n[2] https://github.com/ifedorenko/bug430772/blob/master/src/test/java/bug430772/Expect100ContinueTest.java\n", "url": "https://github.com/square/okhttp/issues/675", "user": "ifedorenko", "labels": ["bug"], "created": "2014-04-04 04:32:43", "closed": "2016-12-28 00:06:21", "commits": {"70eb8d095ff477ef4af00f334f0921cc9f605275": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "d5bde311b5db4268296e743caf65747260662500": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "a589b8170333476233d48476587a1d4363c90bd0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 998.0002777777778, "commitsDetails": [{"commitHash": "70eb8d095ff477ef4af00f334f0921cc9f605275", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d5bde311b5db4268296e743caf65747260662500", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a589b8170333476233d48476587a1d4363c90bd0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["dc5cbfd042768c86189dba01f52574a7493a62c6"], "nameRev": "a589b8170333476233d48476587a1d4363c90bd0 tags/parent-3.6.0~23^2", "commitMessage": "Support 'Expect: 100-continue' as a request header.\n\nThis will stall reading the response body until the server returns\nan intermediate '100 Continue' response.\n\nCloses: https://github.com/square/okhttp/issues/675\n", "commitDateTime": "2016-12-26 20:24:50", "authoredDateTime": "2016-12-23 17:21:59", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/internal/http2/Http2Server.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 25, "deletions": 8, "lines": 33}, {"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/SocketPolicy.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 84, "deletions": 1, "lines": 85}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/Http2ConnectionTest.java", "insertions": 36, "deletions": 11, "lines": 47}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/Internal.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/CallServerInterceptor.java", "insertions": 21, "deletions": 5, "lines": 26}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/HttpCodec.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http1/Http1Codec.java", "insertions": 19, "deletions": 20, "lines": 39}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Codec.java", "insertions": 28, "deletions": 9, "lines": 37}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Connection.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http2/Http2Stream.java", "insertions": 29, "deletions": 20, "lines": 49}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Http2Server.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Server.send404(okhttp3.internal.http2.Http2Stream,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Server.serveDirectory(okhttp3.internal.http2.Http2Stream,java.io.File[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Server.serveFile(okhttp3.internal.http2.Http2Stream,java.io.File)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.readRequest(java.net.Socket,okio.BufferedSource,okio.BufferedSink,int)", "TOT": 10, "UPD": 5, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.FramedSocketHandler.writeResponse(okhttp3.internal.http2.Http2Stream,okhttp3.mockwebserver.MockResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.FramedSocketHandler.readRequest(okhttp3.internal.http2.Http2Stream)", "TOT": 8, "UPD": 1, "INS": 4, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "SocketPolicy.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.SocketPolicy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.expect100ContinueEmptyRequestBody_HTTP2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.expect100ContinueTimesOutWithoutContinue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.expect100ContinueTimesOutWithoutContinue_HTTP2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.serverRespondsWithUnsolicited100Continue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.serverRespondsWithUnsolicited100Continue_HTTP2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.successfulExpectContinueAndConnectionReuse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.unsuccessfulExpectContinueAndConnectionReuse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.expect100ContinueNonEmptyRequestBody()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Http2ConnectionTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readSendsWindowUpdateHttp2()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientCreatesStreamAndServerReplies()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.remoteDoubleSynReply()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.remoteSendsDataAfterInFinished()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.clientDoesNotLimitFlowControl()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.remoteSendsRefusedStreamBeforeReplyHeaders()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.getResponseHeadersTimesOut()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.headers()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readSendsWindowUpdate()", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.testTruncatedDataFrame()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.remoteOmitsInitialSettings()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2ConnectionTest.readMultipleSetsOfResponseHeaders()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient.1.code(okhttp3.Response$Builder)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Internal.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.Internal.code(okhttp3.Response$Builder)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RealConnection.createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallServerInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.CallServerInterceptor.intercept(okhttp3.internal.http.Chain)", "TOT": 9, "UPD": 1, "INS": 4, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "HttpCodec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.flushRequest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.readResponseHeaders(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http.readResponseHeaders()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Http1Codec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http1.Http1Codec.readResponseHeaders()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http1.Http1Codec.readResponse()", "TOT": 9, "UPD": 1, "INS": 0, "MOV": 7, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http1.Http1Codec.readResponseHeaders(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Codec.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Codec.readHttp2HeadersList(java.util.List)", "TOT": 13, "UPD": 4, "INS": 5, "MOV": 1, "DEL": 3}, {"spoonMethodName": "okhttp3.internal.http2.Http2Codec.readResponseHeaders()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Codec.flushRequest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Codec.readResponseHeaders(boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Http2Connection.java", "spoonMethods": []}, {"spoonFilePath": "Http2Stream.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.Http2Stream.getResponseHeaders()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.reply(java.util.List,boolean)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.isOpen()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.getSink()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.receiveHeaders(java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.takeResponseHeaders()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.http2.Http2Stream.sendResponseHeaders(java.util.List,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a589b8170333476233d48476587a1d4363c90bd0"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 155.0, "deletions": 71.0, "lines": 226.0, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 96.0, "UPD": 24.0, "INS": 38.0, "MOV": 21.0, "DEL": 13.0, "spoonFilesChanged": 11, "spoonMethodsChanged": 29}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http2", "okhttp/src/main/java/okhttp3/internal/http", "okhttp/src/main/java/okhttp3/internal", "okhttp/src/main/java/okhttp3/internal/connection", "okhttp/src/main/java/okhttp3", "mockwebserver/src/main/java/okhttp3/internal/http2", "okhttp/src/main/java/okhttp3/internal/http1", "mockwebserver/src/main/java/okhttp3/mockwebserver"], "changesInPackagesSPOON": ["okhttp3.internal.http2.Http2Stream.reply(java.util.List,boolean)", "okhttp3.mockwebserver.MockWebServer.readRequest(java.net.Socket,okio.BufferedSource,okio.BufferedSink,int)", "okhttp3.internal.http2.Http2Stream", "okhttp3.internal.http2.Http2Codec.readResponseHeaders()", "okhttp3.internal.http2.Http2Stream.getResponseHeaders()", "okhttp3.mockwebserver.MockWebServer.FramedSocketHandler.readRequest(okhttp3.internal.http2.Http2Stream)", "okhttp3.internal.connection.RealConnection.createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)", "okhttp3.internal.http2.Http2Stream.takeResponseHeaders()", "okhttp3.internal.http.CallServerInterceptor.intercept(okhttp3.internal.http.Chain)", "okhttp3.internal.http2.Http2Stream.receiveHeaders(java.util.List)", "okhttp3.OkHttpClient.1.code(okhttp3.Response$Builder)", "okhttp3.internal.http2.Http2Codec.readResponseHeaders(boolean)", "okhttp3.internal.http.readResponseHeaders()", "okhttp3.internal.http2.Http2Stream.sendResponseHeaders(java.util.List,boolean)", "okhttp3.internal.http2.Http2Stream.isOpen()", "okhttp3.internal.http2.Http2Codec.flushRequest()", "okhttp3.internal.http2.Http2Server.serveFile(okhttp3.internal.http2.Http2Stream,java.io.File)", "okhttp3.internal.http2.Http2Codec.readHttp2HeadersList(java.util.List)", "okhttp3.internal.http1.Http1Codec.readResponseHeaders()", "okhttp3.internal.Internal.code(okhttp3.Response$Builder)", "okhttp3.internal.http.readResponseHeaders(boolean)", "okhttp3.internal.http2.Http2Stream.getSink()", "okhttp3.internal.http2.Http2Server.send404(okhttp3.internal.http2.Http2Stream,java.lang.String)", "okhttp3.internal.http.flushRequest()", "okhttp3.internal.http1.Http1Codec.readResponseHeaders(boolean)", "okhttp3.mockwebserver.MockWebServer.FramedSocketHandler.writeResponse(okhttp3.internal.http2.Http2Stream,okhttp3.mockwebserver.MockResponse)", "okhttp3.internal.http2.Http2Server.serveDirectory(okhttp3.internal.http2.Http2Stream,java.io.File[])", "okhttp3.mockwebserver.SocketPolicy", "okhttp3.internal.http1.Http1Codec.readResponse()"]}, {"title": "SocketTimeoutException using POST-Redirect-GET pattern with Retrofit and OkHttp", "body": "I am using Retrofit 1.5.0 and OkHttp to invoke a REST POST endpoint that returns a 302 for a subsequent GET request. Using OkHttp 1.3.0 this works as expected. However, after upgrading to OkHttp 1.5.0 (or later), I receive a SocketTimeoutException even though both requests were made. My RestAdapter uses the default OkClient.\n\nThe OkHttp team recently fixed an issue (#296) where the Content-Length header was being preserved from the POST request to the GET request. Looking at the code for OkHttp 1.5.2, the fix seems to be achieved by removing that header in com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponse() before creating the GET Request; however, if the instance field fixedContentLength is not -1, the Content-Length header is recreated in com.squareup.okhttp.internal.http.HttpURLConnectionImpl.newHttpEngine(). The fixedContentLength field is set by retrofit.client.UrlConnectionClient.prepareRequest() before the original POST request, so the upshot is that the Content-Length header is present with a positive value when the GET request is issued.\n", "url": "https://github.com/square/okhttp/issues/664", "user": "wombleabroad", "labels": ["bug"], "created": "2014-03-26 13:10:35", "closed": "2014-03-29 20:45:08", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "OkAuthenticator doesn't know when it should give up", "body": "okhttp client goes into endless request loop under the following conditions\n- http requests go through a proxy server\n- the proxy server requires authentication\n- OkAuthenticator is used to provide credentials\n- provided credentials are invalid, for example, wrong username/password or unsupported/wrong authentication scheme\n\nI pushed simple test case that demonstrates the problem to [1].\n\nFor the reference, this was originally reported as [2] when using okhttp 1.3.0 with (unsupported) Digest authentication scheme.\n\n[1] https://github.com/ifedorenko/bug430772/blob/master/src/test/java/bug430772/ProxyAuthenticationFailureTest.java\n[2] https://bugs.eclipse.org/bugs/show_bug.cgi?id=430772\n", "url": "https://github.com/square/okhttp/issues/662", "user": "ifedorenko", "labels": ["bug"], "created": "2014-03-23 13:54:03", "closed": "2014-05-06 01:01:21", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "Crash when closing a connection in okhttp 1.5.2", "body": "Here is the logcat on a Nexus 5 running 4.4.2 (dunno how to reproduce), using the JAR from http://square.github.io/okhttp/\n\n```\njava.lang.ArrayIndexOutOfBoundsException\n    at com.squareup.okhttp.internal.okio.Util.checkOffsetAndCount(SourceFile:28)\n    at com.squareup.okhttp.internal.okio.OkBuffer.getByte(SourceFile:166)\n    at com.squareup.okhttp.internal.okio.RealBufferedSource.readUtf8Line(SourceFile:95)\n    at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.readChunkSize(SourceFile:479)\n    at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.read(SourceFile:462)\n    at com.squareup.okhttp.internal.Util.skipAll(SourceFile:234)\n    at com.squareup.okhttp.internal.http.HttpConnection.discard(SourceFile:183)\n    at com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.close(SourceFile:507)\n    at com.squareup.okhttp.internal.okio.RealBufferedSource.close(SourceFile:206)\n    at com.squareup.okhttp.internal.okio.InflaterSource.close(SourceFile:124)\n    at com.squareup.okhttp.internal.okio.GzipSource.close(SourceFile:175)\n    at com.squareup.okhttp.internal.okio.RealBufferedSource.close(SourceFile:206)\n    at com.squareup.okhttp.internal.okio.RealBufferedSource$1.close(SourceFile:181)\n    at com.plume.twitter.stream.StrictLineReader.close(SourceFile:115)\n    at com.plume.twitter.stream.AbstractTwitterStream$1.run(SourceFile:258)\n    at java.lang.Thread.run(Thread.java:841)\n```\n", "url": "https://github.com/square/okhttp/issues/658", "user": "robUx4", "labels": ["bug"], "created": "2014-03-20 07:52:48", "closed": "2014-12-31 02:49:01", "commits": {}, "ttf": 285.0002777777778, "commitsDetails": []}, {"title": "Silent retry after HttpUrlConnection.disconnect()", "body": "This bug is based on experimentation with the version of okhttp in KitKat, on an API19 emulator, used through HttpsUrlConnection.  Haven't investigated with the latest version.  I've done some digging in source-code, but haven't fully narrowed this down.  Hoping someone with deeper knowledge can quickly tell me if my analysis is correct and validate my intended workaround.\n\nOn most Android versions, if Thread B (background) is waiting for a response to an HTTP call which may be delayed (in getInputStream() I believe), and Thread A (foreground) wants it to stop waiting, Thread A can call disconnect(), and Thread B will end up throwing an exception.  On KitKat, what seems to happen instead is that Thread A sees the closed socket, but silently attempts to retry, which may also end up waiting on an unresponsive server.  Via logging int he SSLSocketFactory I can see Thread A create a new socket after the disconnect() call.  I think a connection should never be retried if it was explicitly disconnected.\n\nIt seems to happen only on GET requests, not POSTs.  I suspect that's because the sending of the POST data validates that the socket started out good, and thus inhibits the auto-retry.  I think the retry logic is related to connection pooling.  It doesn't happen if each connection uses a different SSLSocketFactory, which disables connection reuse (something I fixed recently, thus the test case).  Calling disconnect() again, after delaying long enough for the retry to occur, will cause Thread B to stop waiting and throw, so it's clearly only one retry.  If I can force the SSLSocketFactory to throw from createSocket() after the disconnect it avoids the problem, and that's my current intended workaround.  It's likely to require a ThreadLocal to allow the factory to know which connection it's servicing at a given time.\n\nContext on this, specific to our code (this is in the Dropbox SDKs), in case it's useful.  We have a background thread waiting for a response to a long-poll, to which the server won't respond for several minutes, unless changes are detected.  We may need to cancel it so that we can re-start the long-poll with updated parameters.  Or we may need to cancel it so we can terminate the thread and shut down entirely (e.g. after the user unlinked their account).  Since the call is a long-poll, the silent retry will potentially wait several minutes before returning.  HttpUrlConnection.disconnect() has worked for this on all Androids API8 through API18 (there were some other problems on API4 until we de-supported it).\n", "url": "https://github.com/square/okhttp/issues/657", "user": "artwyman", "labels": ["bug"], "created": "2014-03-20 06:03:57", "closed": "2014-03-29 16:21:39", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "OkHttp 1.5.2: OkBuffer NullPointerException when closing stream", "body": "This is using Apache Cordova. Although looking at the stack trace, not sure if that matters.\n\n```\njava.lang.NullPointerException\nat com.squareup.okhttp.internal.okio.OkBuffer.write(OkBuffer.java:519)\nat com.squareup.okhttp.internal.okio.OkBuffer.read(OkBuffer.java:555)\nat com.squareup.okhttp.internal.okio.RealBufferedSource.read(RealBufferedSource.java:53)\nat com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource.read(HttpConnection.java:413)\nat com.squareup.okhttp.internal.Util.skipAll(Util.java:234)\nat com.squareup.okhttp.internal.http.HttpConnection.discard(HttpConnection.java:183)\nat com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource.close(HttpConnection.java:435)\nat com.squareup.okhttp.internal.okio.RealBufferedSource.close(RealBufferedSource.java:206)\nat com.squareup.okhttp.internal.okio.RealBufferedSource$1.close(RealBufferedSource.java:181)\nat java.io.FilterInputStream.close(FilterInputStream.java:64)\nat org.apache.cordova.FileTransfer.safeClose(FileTransfer.java:515)\nat org.apache.cordova.FileTransfer.access$300(FileTransfer.java:64)\nat org.apache.cordova.FileTransfer$5.run(FileTransfer.java:864)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\nat java.lang.Thread.run(Thread.java:841)\n```\n", "url": "https://github.com/square/okhttp/issues/655", "user": "talklittle", "labels": ["bug"], "created": "2014-03-18 04:45:19", "closed": "2014-03-29 15:57:35", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "segfault in /system/lib/libssl.so (SSL_CTX_set_alpn_protos+20)", "body": "We just upgraded to 1.5.1 (from 1.3.x) and got this segfault. Note that it doesn't seem to happen every time.\n\n```\nI/dalvikvm(27850): Could not find method com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getContentLengthLong, referenced from method com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.getContentLengthLong\nW/dalvikvm(27850): VFY: unable to resolve virtual method 49698: Lcom/squareup/okhttp/internal/http/HttpURLConnectionImpl;.getContentLengthLong ()J\nD/dalvikvm(27850): VFY: replacing opcode 0x6e at 0x0002\nI/dalvikvm(27850): Could not find method com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getHeaderFieldLong, referenced from method com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.getHeaderFieldLong\nW/dalvikvm(27850): VFY: unable to resolve virtual method 49703: Lcom/squareup/okhttp/internal/http/HttpURLConnectionImpl;.getHeaderFieldLong (Ljava/lang/String;J)J\nD/dalvikvm(27850): VFY: replacing opcode 0x6e at 0x0002\nF/libc    (27850): invalid address or address of corrupt block 0x66f754c8 passed to dlfree\nF/libc    (27850): Fatal signal 11 (SIGSEGV) at 0xdeadbaad (code=1), thread 27864 (Thread-2377)\nI/DEBUG   (  121): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nI/DEBUG   (  121): Build fingerprint: 'google/nakasi/grouper:4.4.2/KOT49H/937116:user/release-keys'\nI/DEBUG   (  121): Revision: '0'\nI/DEBUG   (  121): pid: 27850, tid: 27864, name: Thread-2377  >>> no.finn.android.dev <<<\nI/DEBUG   (  121): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\nI/DEBUG   (  121): Abort message: 'invalid address or address of corrupt block 0x66f754c8 passed to dlfree'\nI/Icing   (11232): Indexing CE2D14F63478D1679F2297E790F6F269F7160014 from com.google.android.googlequicksearchbox\nI/Icing   (11232): Indexing done CE2D14F63478D1679F2297E790F6F269F7160014\nI/DEBUG   (  121):     r0 00000000  r1 401a0036  r2 deadbaad  r3 401a3b78\nI/DEBUG   (  121):     r4 66f754c8  r5 401ae180  r6 40002000  r7 66f754d0\nI/DEBUG   (  121):     r8 6b632b0c  r9 40075c70  sl 40051020  fp 6b632b24\nI/DEBUG   (  121):     ip 00000001  sp 6b632aa8  lr 40171783  pc 40171784  cpsr 600d0030\nI/DEBUG   (  121):     d0  2064657372666c64  d1  2073736572646461\nI/DEBUG   (  121):     d2  657264646120726f  d3  6f6320666f207373\nI/DEBUG   (  121):     d4  0921090d0e0f022c  d5  0a0a0b090b090a04\nI/DEBUG   (  121):     d6  21185420f90a3132  d7  0a0b090b090a0431\nI/DEBUG   (  121):     d8  0000000000000000  d9  0000000000000000\nI/DEBUG   (  121):     d10 0000000000000000  d11 0000000000000000\nI/DEBUG   (  121):     d12 0000000000000000  d13 0000000000000000\nI/DEBUG   (  121):     d14 0000000000000000  d15 0000000000000000\nI/DEBUG   (  121):     d16 0000000000000000  d17 0000000000000000\nI/DEBUG   (  121):     d18 0000000000000000  d19 0000000000000000\nI/DEBUG   (  121):     d20 0000000000000000  d21 0009000000090000\nI/DEBUG   (  121):     d22 0000000000000000  d23 0000000000000000\nI/DEBUG   (  121):     d24 0000000000000000  d25 0000002300000022\nI/DEBUG   (  121):     d26 0707070703030303  d27 991f1f1f991f1f1f\nI/DEBUG   (  121):     d28 991f1f1f991f1f1f  d29 0000002200000021\nI/DEBUG   (  121):     d30 0082c021007e4020  d31 008bc02300874022\nI/DEBUG   (  121):     scr 60000010\nI/DEBUG   (  121): \nI/DEBUG   (  121): backtrace:\nI/DEBUG   (  121):     #00  pc 00011784  /system/lib/libc.so (dlfree+1191)\nI/DEBUG   (  121):     #01  pc 0000dcc3  /system/lib/libc.so (free+10)\nI/DEBUG   (  121):     #02  pc 00083943  /system/lib/libcrypto.so (CRYPTO_free+34)\nI/DEBUG   (  121):     #03  pc 00026fb5  /system/lib/libssl.so (SSL_CTX_set_alpn_protos+16)\nI/DEBUG   (  121):     #04  pc 00008b7f  /system/lib/libjavacrypto.so\nI/DEBUG   (  121):     #05  pc 0001dbcc  /system/lib/libdvm.so (dvmPlatformInvoke+112)\nI/DEBUG   (  121):     #06  pc 0004e123  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+398)\nI/DEBUG   (  121):     #07  pc 00026fe0  /system/lib/libdvm.so\nI/DEBUG   (  121):     #08  pc 0002dfa0  /system/lib/libdvm.so (dvmMterpStd(Thread*)+76)\nI/DEBUG   (  121):     #09  pc 0002b638  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+184)\nI/DEBUG   (  121):     #10  pc 00060581  /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, std::__va_list)+336)\nI/DEBUG   (  121):     #11  pc 000605a5  /system/lib/libdvm.so (dvmCallMethod(Thread*, Method const*, Object*, JValue*, ...)+20)\nI/DEBUG   (  121):     #12  pc 0005528b  /system/lib/libdvm.so\nI/DEBUG   (  121):     #13  pc 0000d228  /system/lib/libc.so (__thread_entry+72)\nI/DEBUG   (  121):     #14  pc 0000d3c0  /system/lib/libc.so (pthread_create+240)\nI/DEBUG   (  121): \nI/DEBUG   (  121): stack:\nI/DEBUG   (  121):          6b632a68  00000002  \nI/DEBUG   (  121):          6b632a6c  66f16fd5  /system/lib/libjavacrypto.so\nI/DEBUG   (  121):          6b632a70  40a75f6c  /system/lib/libcrypto.so\nI/DEBUG   (  121):          6b632a74  1ad2a28a  \nI/DEBUG   (  121):          6b632a78  66f754c8  \nI/DEBUG   (  121):          6b632a7c  401ae180  \nI/DEBUG   (  121):          6b632a80  40002000  \nI/DEBUG   (  121):          6b632a84  40172af9  /system/lib/libc.so\nI/DEBUG   (  121):          6b632a88  401a0036  /system/lib/libc.so\nI/DEBUG   (  121):          6b632a8c  6b632a9c  \nI/DEBUG   (  121):          6b632a90  401a3b78  /system/lib/libc.so\nI/DEBUG   (  121):          6b632a94  40171783  /system/lib/libc.so (dlfree+1190)\nI/DEBUG   (  121):          6b632a98  401a0036  /system/lib/libc.so\nI/DEBUG   (  121):          6b632a9c  66f754c8  \nI/DEBUG   (  121):          6b632aa0  401a3b78  /system/lib/libc.so\nI/DEBUG   (  121):          6b632aa4  00000000  \nI/DEBUG   (  121):     #00  6b632aa8  401aa000  /system/lib/libc.so\nI/DEBUG   (  121):          6b632aac  66f754d0  \nI/DEBUG   (  121):          6b632ab0  0000711c  \nI/DEBUG   (  121):          6b632ab4  40a9ae64  /system/lib/libcrypto.so\nI/DEBUG   (  121):          6b632ab8  40075c7c  \nI/DEBUG   (  121):          6b632abc  4016dcc5  /system/lib/libc.so (free+12)\nI/DEBUG   (  121):     #01  6b632ac0  1e300005  \nI/DEBUG   (  121):          6b632ac4  40a3a945  /system/lib/libcrypto.so (CRYPTO_free+36)\nI/DEBUG   (  121):     #02  6b632ac8  00000024  \nI/DEBUG   (  121):          6b632acc  4005dcd8  \nI/DEBUG   (  121):          6b632ad0  41ef8e00  /dev/ashmem/dalvik-heap (deleted)\nI/DEBUG   (  121):          6b632ad4  40ac9fb9  /system/lib/libssl.so (SSL_CTX_set_alpn_protos+20)\nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near r1:\nI/DEBUG   (  121):     401a0014 69747075 64206e6f 63657465 20646574  \nI/DEBUG   (  121):     401a0024 25207962 696c0073 6d5f6362 6f6c6c61  \nI/DEBUG   (  121):     401a0034 6e690063 696c6176 64612064 73657264  \nI/DEBUG   (  121):     401a0044 726f2073 64646120 73736572 20666f20  \nI/DEBUG   (  121):     401a0054 72726f63 20747075 636f6c62 7025206b  \nI/DEBUG   (  121):     401a0064 73617020 20646573 25206f74 616d0073  \nI/DEBUG   (  121):     401a0074 79732078 6d657473 74796220 3d207365  \nI/DEBUG   (  121):     401a0084 30312520 000a756c 74737973 62206d65  \nI/DEBUG   (  121):     401a0094 73657479 20202020 25203d20 756c3031  \nI/DEBUG   (  121):     401a00a4 6e69000a 65737520 74796220 20207365  \nI/DEBUG   (  121):     401a00b4 3d202020 30312520 000a756c 63617473  \nI/DEBUG   (  121):     401a00c4 6f63206b 70757272 6e6f6974 74656420  \nI/DEBUG   (  121):     401a00d4 65746365 73250064 3a64253a 73736120  \nI/DEBUG   (  121):     401a00e4 69747265 22206e6f 20227325 6c696166  \nI/DEBUG   (  121):     401a00f4 25006465 64253a73 7325203a 7361203a  \nI/DEBUG   (  121):     401a0104 74726573 206e6f69 22732522 69616620  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near r3:\nI/DEBUG   (  121):     401a3b58 20646572 7262696c 0a797261 746e6900  \nI/DEBUG   (  121):     401a3b68 616e7265 75625f6c 665f6b6c 00656572  \nI/DEBUG   (  121):     401a3b78 72666c64 74006565 6c6c616d 735f636f  \nI/DEBUG   (  121):     401a3b88 6c6c616d 616d7400 636f6c6c 72616c5f  \nI/DEBUG   (  121):     401a3b98 64006567 6c616d6c 00636f6c 5f797274  \nI/DEBUG   (  121):     401a3ba8 6c616572 5f636f6c 6e756863 6964006b  \nI/DEBUG   (  121):     401a3bb8 736f7073 68635f65 006b6e75 5f646461  \nI/DEBUG   (  121):     401a3bc8 6d676573 00746e65 70657270 5f646e65  \nI/DEBUG   (  121):     401a3bd8 6f6c6c61 65720063 7361656c 6e755f65  \nI/DEBUG   (  121):     401a3be8 64657375 6765735f 746e656d 6e6d0073  \nI/DEBUG   (  121):     401a3bf8 746e6574 6567202a 746e6d74 28746e65  \nI/DEBUG   (  121):     401a3c08 454c4946 6900292a 7420746e 616e7974  \nI/DEBUG   (  121):     401a3c18 725f656d 746e6928 6863202c 2c2a7261  \nI/DEBUG   (  121):     401a3c28 7a697320 29745f65 696f7600 6e652064  \nI/DEBUG   (  121):     401a3c38 65777064 2928746e 61686300 67202a72  \nI/DEBUG   (  121):     401a3c48 73757465 68737265 286c6c65 6f760029  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near r4:\nI/DEBUG   (  121):     66f754a8 00000000 00000000 41ecbd80 00000000  \nI/DEBUG   (  121):     66f754b8 00000000 66f75480 00000000 00000000  \nI/DEBUG   (  121):     66f754c8 00000074 00000029 401ae1d0 401ae1d0  \nI/DEBUG   (  121):     66f754d8 412d4153 32315345 48532d38 2f790041  \nI/DEBUG   (  121):     66f754e8 08312e33 70747468 00000028 00000012  \nI/DEBUG   (  121):     66f754f8 00000000 40068510 00000000 0000001b  \nI/DEBUG   (  121):     66f75508 407c2ec0 00000005 00000008 00000000  \nI/DEBUG   (  121):     66f75518 40061008 0000004b 48903ae0 e2df4781  \nI/DEBUG   (  121):     66f75528 765eea2d fb1133cf bfab434f 8cd79eb6  \nI/DEBUG   (  121):     66f75538 a8fa5c13 635278a1 6037168a 37ec0639  \nI/DEBUG   (  121):     66f75548 76a7c8bf 82aaf616 f8b35f00 693f6d8c  \nI/DEBUG   (  121):     66f75558 37a1e084 82cb8efb 00000000 0000004b  \nI/DEBUG   (  121):     66f75568 d5e3e1eb 3064e39c b49a70da e8871561  \nI/DEBUG   (  121):     66f75578 93ed6535 0665ffdb b02476ad e8b42c0a  \nI/DEBUG   (  121):     66f75588 2ad3abd6 a58aa3d8 f5c5745c 798106d1  \nI/DEBUG   (  121):     66f75598 d089de84 60d32c02 9b80b1b0 7c60c220  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near r5:\nI/DEBUG   (  121):     401ae160 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121):     401ae170 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121):     401ae180 0000012c 000000e4 00000158 000048c8  \nI/DEBUG   (  121):     401ae190 40002000 4000dea8 66fb1710 00200000  \nI/DEBUG   (  121):     401ae1a0 00000df3 6d382f88 00000000 00000000  \nI/DEBUG   (  121):     401ae1b0 401ae1a8 401ae1a8 401ae1b0 401ae1b0  \nI/DEBUG   (  121):     401ae1c0 66f659d8 66f66108 4001e9f0 66f64590  \nI/DEBUG   (  121):     401ae1d0 4001e558 4001e558 66f754c8 66f754c8  \nI/DEBUG   (  121):     401ae1e0 40068338 40068338 66f754c8 66f754c8  \nI/DEBUG   (  121):     401ae1f0 4001e998 4001e998 66f659a0 66f659a0  \nI/DEBUG   (  121):     401ae200 66f65998 66f65998 4001e9f0 4001e9f0  \nI/DEBUG   (  121):     401ae210 66f65988 66f65988 4001e970 4001e970  \nI/DEBUG   (  121):     401ae220 400683c8 400683c8 66f65970 66f65970  \nI/DEBUG   (  121):     401ae230 66f645a8 66f645a8 400684f0 400684f0  \nI/DEBUG   (  121):     401ae240 4001ecb0 4001ecb0 400683a0 400683a0  \nI/DEBUG   (  121):     401ae250 40061e30 40061e30 66f65940 66f65940  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near r6:\nI/DEBUG   (  121):     40001fe0 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121):     40001ff0 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121):     40002000 00000000 000006f3 408fdb70 407c2ba8  \nI/DEBUG   (  121):     40002010 0000002e 00000000 00000000 00000000  \nI/DEBUG   (  121):     40002020 00000000 00000000 02010000 407c2ba8  \nI/DEBUG   (  121):     40002030 0000002c 00000000 00000000 00000000  \nI/DEBUG   (  121):     40002040 00000000 00000000 02010000 407c2ba8  \nI/DEBUG   (  121):     40002050 0000003b 00000000 00000000 00000000  \nI/DEBUG   (  121):     40002060 00000000 00000000 02010000 407c2ba8  \nI/DEBUG   (  121):     40002070 00000025 00000000 00000000 00000000  \nI/DEBUG   (  121):     40002080 00000000 00000000 02010000 407c2ba8  \nI/DEBUG   (  121):     40002090 00000030 00000000 00000000 00000000  \nI/DEBUG   (  121):     400020a0 00000000 00000000 02010000 407c2ba8  \nI/DEBUG   (  121):     400020b0 00000023 00000000 00000000 00000000  \nI/DEBUG   (  121):     400020c0 00000000 00000000 02010000 407c2ba8  \nI/DEBUG   (  121):     400020d0 0000002d 00000000 00000000 00000000  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near r7:\nI/DEBUG   (  121):     66f754b0 41ecbd80 00000000 00000000 66f75480  \nI/DEBUG   (  121):     66f754c0 00000000 00000000 00000074 00000029  \nI/DEBUG   (  121):     66f754d0 401ae1d0 401ae1d0 412d4153 32315345  \nI/DEBUG   (  121):     66f754e0 48532d38 2f790041 08312e33 70747468  \nI/DEBUG   (  121):     66f754f0 00000028 00000012 00000000 40068510  \nI/DEBUG   (  121):     66f75500 00000000 0000001b 407c2ec0 00000005  \nI/DEBUG   (  121):     66f75510 00000008 00000000 40061008 0000004b  \nI/DEBUG   (  121):     66f75520 48903ae0 e2df4781 765eea2d fb1133cf  \nI/DEBUG   (  121):     66f75530 bfab434f 8cd79eb6 a8fa5c13 635278a1  \nI/DEBUG   (  121):     66f75540 6037168a 37ec0639 76a7c8bf 82aaf616  \nI/DEBUG   (  121):     66f75550 f8b35f00 693f6d8c 37a1e084 82cb8efb  \nI/DEBUG   (  121):     66f75560 00000000 0000004b d5e3e1eb 3064e39c  \nI/DEBUG   (  121):     66f75570 b49a70da e8871561 93ed6535 0665ffdb  \nI/DEBUG   (  121):     66f75580 b02476ad e8b42c0a 2ad3abd6 a58aa3d8  \nI/DEBUG   (  121):     66f75590 f5c5745c 798106d1 d089de84 60d32c02  \nI/DEBUG   (  121):     66f755a0 9b80b1b0 7c60c220 2e6d6367 0000004b  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near r8:\nI/DEBUG   (  121):     6b632aec 59df1300 1e300005 41ef8e00 41ef8df0  \nI/DEBUG   (  121):     6b632afc 62b48088 40051010 41521bd0 1e300005  \nI/DEBUG   (  121):     6b632b0c 4154d111 40075c70 00000001 4162f22f  \nI/DEBUG   (  121):     6b632b1c 4185aa98 41e74900 41552127 40075c70  \nI/DEBUG   (  121):     6b632b2c 4162f22c 66f18b51 40051020 00000000  \nI/DEBUG   (  121):     6b632b3c 00000000 1ec00001 00000000 00000000  \nI/DEBUG   (  121):     6b632b4c 401ae384 00000000 00000000 00000000  \nI/DEBUG   (  121):     6b632b5c 00000000 00000000 00000080 00000080  \nI/DEBUG   (  121):     6b632b6c 41e24008 00000000 00000080 415b31f0  \nI/DEBUG   (  121):     6b632b7c 40075c04 4005137c 41ef9180 fffffea0  \nI/DEBUG   (  121):     6b632b8c 40051010 41ef9180 00000080 00000000  \nI/DEBUG   (  121):     6b632b9c 415598f9 41ef9180 00000000 41ef9180  \nI/DEBUG   (  121):     6b632bac 415b31f0 00000080 4152de40 00000000  \nI/DEBUG   (  121):     6b632bbc 0000001c 0000001c 415aec74 416b39f8  \nI/DEBUG   (  121):     6b632bcc 0000001c 00000080 4156d0af 41e74900  \nI/DEBUG   (  121):     6b632bdc 41ef9160 ffffffff 41ef9160 416b12d0  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near r9:\nI/DEBUG   (  121):     40075c50 41ef90d0 40075c90 4161cea8 40075c90  \nI/DEBUG   (  121):     40075c60 4161cedc 62b48088 00000000 00000000  \nI/DEBUG   (  121):     40075c70 4005dcd8 00000000 1e300005 40075d48  \nI/DEBUG   (  121):     40075c80 6ae1d9c8 629c14a8 4161cedc 00000000  \nI/DEBUG   (  121):     40075c90 4005dcd8 00000000 41ef8df0 41737af0  \nI/DEBUG   (  121):     40075ca0 00000000 41eac228 41ef6450 00000001  \nI/DEBUG   (  121):     40075cb0 4174d4c8 41e31d28 416b22a8 00000023  \nI/DEBUG   (  121):     40075cc0 00000000 40075d18 6af5dfe0 6287c5e8  \nI/DEBUG   (  121):     40075cd0 6391e6ee 00000000 00000000 41ef6450  \nI/DEBUG   (  121):     40075ce0 41ef8da0 4174d4c8 00000001 416b22a8  \nI/DEBUG   (  121):     40075cf0 00000023 00000000 41eac228 41ef6450  \nI/DEBUG   (  121):     40075d00 41ef8da0 40075d48 6ae1d9c2 00000000  \nI/DEBUG   (  121):     40075d10 00000400 00000000 6ae1d9b2 4005dcd8  \nI/DEBUG   (  121):     40075d20 00000000 41ef8df0 41e6d4c0 41ef6450  \nI/DEBUG   (  121):     40075d30 41ef6450 40075d90 6ae1dc06 62c20640  \nI/DEBUG   (  121):     40075d40 6ae1d9c8 00000000 62b70cc0 41e6d4c0  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near sl:\nI/DEBUG   (  121):     40051000 66f514d5 00000029 00000000 0000045b  \nI/DEBUG   (  121):     40051010 6ad67bd8 40075c70 629c14a8 41654000  \nI/DEBUG   (  121):     40051020 41ef9160 00000000 6b632c40 00000000  \nI/DEBUG   (  121):     40051030 6b632c94 0000000c 00000000 41521d40  \nI/DEBUG   (  121):     40051040 00000000 00000000 61d41a70 40072300  \nI/DEBUG   (  121):     40051050 00000000 00000000 00000001 00004000  \nI/DEBUG   (  121):     40051060 00000000 40051468 41521d40 41526c00  \nI/DEBUG   (  121):     40051070 00000000 4152acfc 4152ad70 4152ac20  \nI/DEBUG   (  121):     40051080 4152ac40 4152ac9c 00000000 00000000  \nI/DEBUG   (  121):     40051090 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121):     400510a0 00000000 00000000 00002000 415b391c  \nI/DEBUG   (  121):     400510b0 00000000 00000000 00000002 400516b0  \nI/DEBUG   (  121):     400510c0 00000001 00000040 00000200 00000000  \nI/DEBUG   (  121):     400510d0 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121):     400510e0 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121):     400510f0 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near fp:\nI/DEBUG   (  121):     6b632b04 41521bd0 1e300005 4154d111 40075c70  \nI/DEBUG   (  121):     6b632b14 00000001 4162f22f 4185aa98 41e74900  \nI/DEBUG   (  121):     6b632b24 41552127 40075c70 4162f22c 66f18b51  \nI/DEBUG   (  121):     6b632b34 40051020 00000000 00000000 1ec00001  \nI/DEBUG   (  121):     6b632b44 00000000 00000000 401ae384 00000000  \nI/DEBUG   (  121):     6b632b54 00000000 00000000 00000000 00000000  \nI/DEBUG   (  121):     6b632b64 00000080 00000080 41e24008 00000000  \nI/DEBUG   (  121):     6b632b74 00000080 415b31f0 40075c04 4005137c  \nI/DEBUG   (  121):     6b632b84 41ef9180 fffffea0 40051010 41ef9180  \nI/DEBUG   (  121):     6b632b94 00000080 00000000 415598f9 41ef9180  \nI/DEBUG   (  121):     6b632ba4 00000000 41ef9180 415b31f0 00000080  \nI/DEBUG   (  121):     6b632bb4 4152de40 00000000 0000001c 0000001c  \nI/DEBUG   (  121):     6b632bc4 415aec74 416b39f8 0000001c 00000080  \nI/DEBUG   (  121):     6b632bd4 4156d0af 41e74900 41ef9160 ffffffff  \nI/DEBUG   (  121):     6b632be4 41ef9160 416b12d0 4157719d 4005137c  \nI/DEBUG   (  121):     6b632bf4 415559a3 40051010 4155994b 41ef9180  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory near sp:\nI/DEBUG   (  121):     6b632a88 401a0036 6b632a9c 401a3b78 40171783  \nI/DEBUG   (  121):     6b632a98 401a0036 66f754c8 401a3b78 00000000  \nI/DEBUG   (  121):     6b632aa8 401aa000 66f754d0 0000711c 40a9ae64  \nI/DEBUG   (  121):     6b632ab8 40075c7c 4016dcc5 1e300005 40a3a945  \nI/DEBUG   (  121):     6b632ac8 00000024 4005dcd8 41ef8e00 40ac9fb9  \nI/DEBUG   (  121):     6b632ad8 4005dcd8 41ef8e00 00000004 66f18b83  \nI/DEBUG   (  121):     6b632ae8 00000003 59df1300 1e300005 41ef8e00  \nI/DEBUG   (  121):     6b632af8 41ef8df0 62b48088 40051010 41521bd0  \nI/DEBUG   (  121):     6b632b08 1e300005 4154d111 40075c70 00000001  \nI/DEBUG   (  121):     6b632b18 4162f22f 4185aa98 41e74900 41552127  \nI/DEBUG   (  121):     6b632b28 40075c70 4162f22c 66f18b51 40051020  \nI/DEBUG   (  121):     6b632b38 00000000 00000000 1ec00001 00000000  \nI/DEBUG   (  121):     6b632b48 00000000 401ae384 00000000 00000000  \nI/DEBUG   (  121):     6b632b58 00000000 00000000 00000000 00000080  \nI/DEBUG   (  121):     6b632b68 00000080 41e24008 00000000 00000080  \nI/DEBUG   (  121):     6b632b78 415b31f0 40075c04 4005137c 41ef9180  \nI/DEBUG   (  121): \nI/DEBUG   (  121): code around pc:\nI/DEBUG   (  121):     40171764 6a014478 62021e4a f7fdb95a e008fd39  \nI/DEBUG   (  121):     40171774 4621482a 44784a2a f001447a 4a13f9b3  \nI/DEBUG   (  121):     40171784 49286014 f8d14479 079a31bc f501d51c  \nI/DEBUG   (  121):     40171794 e8bd70e0 f02c40f8 4823b879 f7fd4478  \nI/DEBUG   (  121):     401717a4 4822fd0d e7fa4478 42b7688f ae10f43f  \nI/DEBUG   (  121):     401717b4 481fe611 e7f24478 4478481e 6888e7ef  \nI/DEBUG   (  121):     401717c4 f43f4298 e606aed4 bf00bdf8 deadbaad  \nI/DEBUG   (  121):     401717d4 0003ce8e 0003ce80 0003cde8 00032796  \nI/DEBUG   (  121):     401717e4 0003cd5c 0003cd4a 0003ccd2 0003ccb0  \nI/DEBUG   (  121):     401717f4 0003cc54 0003cc3e 0003cbd8 0003cbc0  \nI/DEBUG   (  121):     40171804 0003cbae 0003cb56 0003cb30 0003caa6  \nI/DEBUG   (  121):     40171814 0003ca50 0003ca36 0003ca18 0002e8b8  \nI/DEBUG   (  121):     40171824 000323f8 0003c9f4 000323d4 000323cc  \nI/DEBUG   (  121):     40171834 000323bc 000323b6 460db538 b1704601  \nI/DEBUG   (  121):     40171844 0200ea45 f405fb00 04030c10 4620b143  \nI/DEBUG   (  121):     40171854 ef08f028 bf1842a8 34fff04f 4604e000  \nI/DEBUG   (  121): \nI/DEBUG   (  121): code around lr:\nI/DEBUG   (  121):     40171760 482e61a3 6a014478 62021e4a f7fdb95a  \nI/DEBUG   (  121):     40171770 e008fd39 4621482a 44784a2a f001447a  \nI/DEBUG   (  121):     40171780 4a13f9b3 49286014 f8d14479 079a31bc  \nI/DEBUG   (  121):     40171790 f501d51c e8bd70e0 f02c40f8 4823b879  \nI/DEBUG   (  121):     401717a0 f7fd4478 4822fd0d e7fa4478 42b7688f  \nI/DEBUG   (  121):     401717b0 ae10f43f 481fe611 e7f24478 4478481e  \nI/DEBUG   (  121):     401717c0 6888e7ef f43f4298 e606aed4 bf00bdf8  \nI/DEBUG   (  121):     401717d0 deadbaad 0003ce8e 0003ce80 0003cde8  \nI/DEBUG   (  121):     401717e0 00032796 0003cd5c 0003cd4a 0003ccd2  \nI/DEBUG   (  121):     401717f0 0003ccb0 0003cc54 0003cc3e 0003cbd8  \nI/DEBUG   (  121):     40171800 0003cbc0 0003cbae 0003cb56 0003cb30  \nI/DEBUG   (  121):     40171810 0003caa6 0003ca50 0003ca36 0003ca18  \nI/DEBUG   (  121):     40171820 0002e8b8 000323f8 0003c9f4 000323d4  \nI/DEBUG   (  121):     40171830 000323cc 000323bc 000323b6 460db538  \nI/DEBUG   (  121):     40171840 b1704601 0200ea45 f405fb00 04030c10  \nI/DEBUG   (  121):     40171850 4620b143 ef08f028 bf1842a8 34fff04f  \nI/DEBUG   (  121): \nI/DEBUG   (  121): memory map around fault addr deadbaad:\nI/DEBUG   (  121):     beb56000-beb77000 rw- [stack]\nI/DEBUG   (  121):     (no map for address)\nI/DEBUG   (  121):     ffff0000-ffff1000 r-x [vectors]\nI/BootReceiver(  508): Copying /data/tombstones/tombstone_07 to DropBox (SYSTEM_TOMBSTONE)\nW/ActivityManager(  508):   Force finishing activity no.finn.android.dev/no.finn.android.ui.activity.HomeActivity\nD/Zygote  (  123): Process 27850 terminated by signal (11)\n```\n", "url": "https://github.com/square/okhttp/issues/647", "user": "andaag", "labels": ["bug"], "created": "2014-03-13 18:52:23", "closed": "2014-03-17 15:43:40", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Reader thread should close itself", "body": "We're closing the connection mid-read, and that's causing bad behavior.\n\n```\nException in thread \"Thread-154\" java.lang.IllegalStateException: closed\n  at com.squareup.okhttp.internal.okio.RealBufferedSource.checkNotClosed(RealBufferedSource.java:216)\n  at com.squareup.okhttp.internal.okio.RealBufferedSource.require(RealBufferedSource.java:62)\n  at com.squareup.okhttp.internal.okio.RealBufferedSource.readInt(RealBufferedSource.java:120)\n  at com.squareup.okhttp.internal.spdy.Spdy3$Reader.nextFrame(Spdy3.java:133)\n  at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader.execute(SpdyConnection.java:553)\n  at com.squareup.okhttp.internal.NamedRunnable.run(NamedRunnable.java:33)\n  at java.lang.Thread.run(Thread.java:744)\n```\n", "url": "https://github.com/square/okhttp/issues/644", "user": "swankjesse", "labels": ["bug"], "created": "2014-03-12 03:35:44", "closed": "2014-04-18 16:04:27", "commits": {"0e512dbe5918e80d1a365ba4f20fe1367175580f": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "889bc764a5f1627090a69e6e100bcd18474dfb86": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 37.000277777777775, "commitsDetails": [{"commitHash": "0e512dbe5918e80d1a365ba4f20fe1367175580f", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "889bc764a5f1627090a69e6e100bcd18474dfb86", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["6597405511ab6058146de1053ffe7f27832dbf8e"], "nameRev": "889bc764a5f1627090a69e6e100bcd18474dfb86 tags/parent-2.0.0-RC1~103^2", "commitMessage": "Let the reader thread clean up after itself.\n\nCurrently we're closing it from another thread, and that isn't safe.\nhttps://github.com/square/okhttp/issues/644\n", "commitDateTime": "2014-04-18 11:58:54", "authoredDateTime": "2014-04-18 11:58:54", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Protocol.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 19, "deletions": 15, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpdyConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.peerHttp2ServerZerosCompressionTable()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Protocol.java", "spoonMethods": []}, {"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection", "TOT": 20, "UPD": 4, "INS": 7, "MOV": 3, "DEL": 6}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Builder", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.close(com.squareup.okhttp.internal.spdy.ErrorCode,com.squareup.okhttp.internal.spdy.ErrorCode)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.execute()", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Builder.build()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["889bc764a5f1627090a69e6e100bcd18474dfb86"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19.0, "deletions": 16.0, "lines": 35.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 36.0, "UPD": 10.0, "INS": 12.0, "MOV": 5.0, "DEL": 9.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp", "okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyConnection.Builder.build()", "com.squareup.okhttp.internal.spdy.SpdyConnection", "com.squareup.okhttp.internal.spdy.SpdyConnection.close(com.squareup.okhttp.internal.spdy.ErrorCode,com.squareup.okhttp.internal.spdy.ErrorCode)", "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.execute()", "com.squareup.okhttp.internal.spdy.SpdyConnection.Builder", "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader"]}, {"title": "ProtocolException: Expected ':status' header not present", "body": "I got this attempting to reach https://twitter.com.\n", "url": "https://github.com/square/okhttp/issues/640", "user": "swankjesse", "labels": ["bug"], "created": "2014-03-12 01:58:02", "closed": "2014-03-16 23:43:38", "commits": {"4fd7e150dadb9be40fb5a0a02be709fc3afbbe26": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "25b95e3908ba2371cbf66c443ab488165cecdadd": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "f76deb30cebbe71ab79fb60515c6a07b3b9ea174": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "afa487758b2694ed5b8c87371d840ecae74ff05f": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "9b7b8b7cb8bd54f2637626e7f63058322bd707cc": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "68c2a4b52015de41ba1f74cb896efb2116e52b4b": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "6191d7a724e7146a7be899ce8ad3de234988154d": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "ca0aff1e48984c1e588a38a6ebf72b287ea5f2f8": {"commitGHEventType": "closed", "commitUser": "swankjesse"}, "799de3748066b1e839b1b9d450bfef1c1d84a717": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "4fd7e150dadb9be40fb5a0a02be709fc3afbbe26", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "25b95e3908ba2371cbf66c443ab488165cecdadd", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f76deb30cebbe71ab79fb60515c6a07b3b9ea174", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "afa487758b2694ed5b8c87371d840ecae74ff05f", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9b7b8b7cb8bd54f2637626e7f63058322bd707cc", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "68c2a4b52015de41ba1f74cb896efb2116e52b4b", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6191d7a724e7146a7be899ce8ad3de234988154d", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ca0aff1e48984c1e588a38a6ebf72b287ea5f2f8", "commitGHEventType": "closed", "commitUser": "swankjesse", "commitParents": ["68affbd24d63620e1785ea847f1936760947b9ae"], "nameRev": "ca0aff1e48984c1e588a38a6ebf72b287ea5f2f8 tags/parent-2.0.0-RC1~134^2~1", "commitMessage": "fix #640: HPACK wasn't emitting header table entries to spec.\n", "commitDateTime": "2014-03-16 12:24:40", "authoredDateTime": "2014-03-16 10:31:20", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java", "insertions": 20, "deletions": 4, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HpackDraft05Test.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05Test.toggleIndexOffOn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05Test.toggleIndexOffBeyond64Entries()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HpackDraft05.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.clearReferenceSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.getAndReset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.evictToRecoverBytes(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.emitReferenceSet()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.readIndexedHeader(int)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.insertIntoHeaderTable(int,com.squareup.okhttp.internal.spdy.Header)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "799de3748066b1e839b1b9d450bfef1c1d84a717", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["8b797b8f7d0a9c203939cd2a63ad6b5e91401001"], "nameRev": "799de3748066b1e839b1b9d450bfef1c1d84a717 tags/parent-1.5.2~3", "commitMessage": "fix #640: HPACK wasn't emitting header table entries to spec.\n\n(cherry picked from commit ca0aff1e48984c1e588a38a6ebf72b287ea5f2f8)\n", "commitDateTime": "2014-03-17 21:27:00", "authoredDateTime": "2014-03-16 10:31:20", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/HpackDraft05Test.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/HpackDraft05.java", "insertions": 20, "deletions": 4, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HpackDraft05Test.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05Test.toggleIndexOffOn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05Test.toggleIndexOffBeyond64Entries()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HpackDraft05.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.clearReferenceSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.getAndReset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.evictToRecoverBytes(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.emitReferenceSet()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.readIndexedHeader(int)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.insertIntoHeaderTable(int,com.squareup.okhttp.internal.spdy.Header)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ca0aff1e48984c1e588a38a6ebf72b287ea5f2f8"], "filteredCommitsReason": {"duplicated": 8, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20.0, "deletions": 4.0, "lines": 24.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 14.0, "UPD": 0.0, "INS": 11.0, "MOV": 3.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.clearReferenceSet()", "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.getAndReset()", "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader", "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.emitReferenceSet()", "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.evictToRecoverBytes(int)", "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.insertIntoHeaderTable(int,com.squareup.okhttp.internal.spdy.Header)", "com.squareup.okhttp.internal.spdy.HpackDraft05.Reader.readIndexedHeader(int)"]}, {"title": "SpdyConnection clears the old settings without merging with the new server settings causing the window size always set as -1", "body": "When debugging an issue with client requests hanging on SpdyStream.waitUntilWritable(), we found that the window size is set as -1 in SpdyStream.java at line: \n\nthis.bytesLeftInWriteWindow = connection.peerSettings.getInitialWindowSize();\n\nAfter tracing down the issue, the problem turned out to be line 662 of https://github.com/square/okhttp/blob/master/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java, where peerSettings is cleared without merging with the new settings. This has caused any later SpdyStream always uses an \u20131 as the initial window size, and the bug has also caused the new window size settings not get propagated to existing SpdySteam(s). \n", "url": "https://github.com/square/okhttp/issues/627", "user": "lhwa", "labels": ["bug"], "created": "2014-03-10 19:57:10", "closed": "2014-03-11 01:50:44", "commits": {"c76140dbdf537318415abc7e2f3977b6bd778594": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "665d5fd5878be8aa95f649a0c215c086a6e7bd9b": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "12ba9103d825b776d6cf4f74704332f4118ec1be": {"commitGHEventType": "closed", "commitUser": "swankjesse"}, "739d8760fbee199855fe4a6ba96a835ed43bd744": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "83156632582465e93f462f311c0e6b340393c896": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "375c6f98d805c9df2f6ee175808fb12702c0fc7a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c76140dbdf537318415abc7e2f3977b6bd778594", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "665d5fd5878be8aa95f649a0c215c086a6e7bd9b", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "12ba9103d825b776d6cf4f74704332f4118ec1be", "commitGHEventType": "closed", "commitUser": "swankjesse", "commitParents": ["945619c3f451bba092f772adbd62cd0a6fd7ec3b"], "nameRev": "12ba9103d825b776d6cf4f74704332f4118ec1be tags/parent-2.0.0-RC1~148^2", "commitMessage": "fix #627: Merge SPDY settings when clear flag set. Revert Settings.DEFAULT_INITIAL_WINDOW_SIZE.\n", "commitDateTime": "2014-03-10 17:10:38", "authoredDateTime": "2014-03-10 14:05:08", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java", "insertions": 41, "deletions": 12, "lines": 53}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 9, "deletions": 15, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SettingsTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SettingsTest.setFields()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SpdyConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.readSendsWindowUpdate(com.squareup.okhttp.internal.spdy.Variant)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.writeAwaitsWindowUpdate()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.initialSettingsWithWindowSizeAdjustsConnection()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.blockedStreamDoesntStarveNewStream()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.clearSettingsBeforeMerge()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.peerHttp2ServerLowersInitialWindowSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Settings.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize(int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.settings(boolean,com.squareup.okhttp.internal.spdy.Settings)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "SpdyStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.read(okio.OkBuffer,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "739d8760fbee199855fe4a6ba96a835ed43bd744", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["945619c3f451bba092f772adbd62cd0a6fd7ec3b", "12ba9103d825b776d6cf4f74704332f4118ec1be"], "nameRev": "739d8760fbee199855fe4a6ba96a835ed43bd744 tags/parent-2.0.0-RC1~148", "commitMessage": "Merge pull request #628 from square/adrian.627\n\nfix #627: merge SPDY settings when clear flag set.", "commitDateTime": "2014-03-10 21:50:43", "authoredDateTime": "2014-03-10 21:50:43", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java", "insertions": 41, "deletions": 12, "lines": 53}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 9, "deletions": 15, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SettingsTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SettingsTest.setFields()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SpdyConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.readSendsWindowUpdate(com.squareup.okhttp.internal.spdy.Variant)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.writeAwaitsWindowUpdate()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.initialSettingsWithWindowSizeAdjustsConnection()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.blockedStreamDoesntStarveNewStream()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.clearSettingsBeforeMerge()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.peerHttp2ServerLowersInitialWindowSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Settings.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize(int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.settings(boolean,com.squareup.okhttp.internal.spdy.Settings)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "SpdyStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.read(okio.OkBuffer,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "83156632582465e93f462f311c0e6b340393c896", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["523e9237d7b3d3c43b44408e009cbcbeae0edab4"], "nameRev": "83156632582465e93f462f311c0e6b340393c896 tags/parent-1.5.1~7^2", "commitMessage": "fix #627: Merge SPDY settings when clear flag set. Revert Settings.DEFAULT_INITIAL_WINDOW_SIZE.\n", "commitDateTime": "2014-03-11 00:15:15", "authoredDateTime": "2014-03-10 14:05:08", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java", "insertions": 41, "deletions": 12, "lines": 53}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 9, "deletions": 15, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SettingsTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SettingsTest.setFields()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SpdyConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.readSendsWindowUpdate(com.squareup.okhttp.internal.spdy.Variant)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.writeAwaitsWindowUpdate()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.initialSettingsWithWindowSizeAdjustsConnection()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.blockedStreamDoesntStarveNewStream()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.clearSettingsBeforeMerge()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.peerHttp2ServerLowersInitialWindowSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Settings.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize(int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.settings(boolean,com.squareup.okhttp.internal.spdy.Settings)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "SpdyStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.read(com.squareup.okhttp.internal.okio.OkBuffer,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "375c6f98d805c9df2f6ee175808fb12702c0fc7a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["0d774185b616c7d471822f22f57f947412ef593d", "83156632582465e93f462f311c0e6b340393c896"], "nameRev": "375c6f98d805c9df2f6ee175808fb12702c0fc7a tags/parent-1.5.1~7", "commitMessage": "Merge pull request #631 from square/okhttp_15_jwilson_spdy_window_changes\n\nfix #627: Merge SPDY settings when clear flag set. ", "commitDateTime": "2014-03-11 00:16:07", "authoredDateTime": "2014-03-11 00:16:07", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SettingsTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/spdy/SpdyConnectionTest.java", "insertions": 41, "deletions": 12, "lines": 53}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyConnection.java", "insertions": 9, "deletions": 15, "lines": 24}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SettingsTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SettingsTest.setFields()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SpdyConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.readSendsWindowUpdate(com.squareup.okhttp.internal.spdy.Variant)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.writeAwaitsWindowUpdate()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.initialSettingsWithWindowSizeAdjustsConnection()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.blockedStreamDoesntStarveNewStream()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.clearSettingsBeforeMerge()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnectionTest.peerHttp2ServerLowersInitialWindowSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Settings.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize(int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyConnection.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.settings(boolean,com.squareup.okhttp.internal.spdy.Settings)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "SpdyStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.read(com.squareup.okhttp.internal.okio.OkBuffer,long)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["12ba9103d825b776d6cf4f74704332f4118ec1be"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 26.0, "deletions": 23.0, "lines": 49.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 22.0, "UPD": 0.0, "INS": 12.0, "MOV": 5.0, "DEL": 5.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyStream", "com.squareup.okhttp.internal.spdy.SpdyConnection.Reader.settings(boolean,com.squareup.okhttp.internal.spdy.Settings)", "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize()", "com.squareup.okhttp.internal.spdy.Settings.getInitialWindowSize(int)", "com.squareup.okhttp.internal.spdy.Settings", "com.squareup.okhttp.internal.spdy.SpdyConnection", "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.read(okio.OkBuffer,long)"]}, {"title": "OkHttp 1.5 - Picasso/Retrofit - StrictMode - Closeable", "body": "This may be relevant to #621 and #624.\nWhen hitting the API hard (app starts couple of web requests + loading images etc).\n\nSeems that `Deflater` does not always close the stream.\n\nOkHttp: 1.5.+\nRetrofit: 1.4.+\nPicasso: 2.2.+\nAndroid 4.4 (Stock)\n### Picasso:\n\n``` bash\nA resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\n    java.lang.Throwable: Explicit termination method 'end' not called\n            at dalvik.system.CloseGuard.open(CloseGuard.java:184)\n            at java.util.zip.Deflater.<init>(Deflater.java:192)\n            at java.util.zip.Deflater.<init>(Deflater.java:165)\n            at com.squareup.okhttp.internal.spdy.Spdy3$Writer.<init>(Spdy3.java:304)\n            at com.squareup.okhttp.internal.spdy.Spdy3.newWriter(Spdy3.java:103)\n            at com.squareup.okhttp.internal.spdy.SpdyConnection.<init>(SpdyConnection.java:156)\n            at com.squareup.okhttp.internal.spdy.SpdyConnection.<init>(SpdyConnection.java:50)\n            at com.squareup.okhttp.internal.spdy.SpdyConnection$Builder.build(SpdyConnection.java:536)\n            at com.squareup.okhttp.Connection.upgradeToTls(Connection.java:171)\n            at com.squareup.okhttp.Connection.connect(Connection.java:104)\n            at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:234)\n            at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:178)\n            at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:366)\n            at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:319)\n            at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:484)\n            at com.squareup.okhttp.internal.http.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\n            at com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\n            at com.squareup.picasso.OkHttpDownloader.load(OkHttpDownloader.java:105)\n            at com.squareup.picasso.NetworkBitmapHunter.decode(NetworkBitmapHunter.java:46)\n            at com.squareup.picasso.BitmapHunter.hunt(BitmapHunter.java:123)\n            at com.squareup.picasso.BitmapHunter.run(BitmapHunter.java:83)\n            at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n            at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n            at java.lang.Thread.run(Thread.java:841)\n            at com.squareup.picasso.Utils$PicassoThread.run(Utils.java:306)\n```\n### And Retrofit:\n\n``` bash\nA resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\n    java.lang.Throwable: Explicit termination method 'end' not called\n            at dalvik.system.CloseGuard.open(CloseGuard.java:184)\n            at java.util.zip.Deflater.<init>(Deflater.java:192)\n            at java.util.zip.Deflater.<init>(Deflater.java:165)\n            at com.squareup.okhttp.internal.spdy.Spdy3$Writer.<init>(Spdy3.java:304)\n            at com.squareup.okhttp.internal.spdy.Spdy3.newWriter(Spdy3.java:103)\n            at com.squareup.okhttp.internal.spdy.SpdyConnection.<init>(SpdyConnection.java:156)\n            at com.squareup.okhttp.internal.spdy.SpdyConnection.<init>(SpdyConnection.java:50)\n            at com.squareup.okhttp.internal.spdy.SpdyConnection$Builder.build(SpdyConnection.java:536)\n            at com.squareup.okhttp.Connection.upgradeToTls(Connection.java:171)\n            at com.squareup.okhttp.Connection.connect(Connection.java:104)\n            at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:234)\n            at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:178)\n            at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:366)\n            at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:103)\n            at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getOutputStream(HttpURLConnectionImpl.java:205)\n            at com.squareup.okhttp.internal.http.DelegatingHttpsURLConnection.getOutputStream(DelegatingHttpsURLConnection.java:218)\n            at com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:25)\n            at retrofit.client.UrlConnectionClient.prepareRequest(UrlConnectionClient.java:83)\n            at retrofit.client.UrlConnectionClient.execute(UrlConnectionClient.java:38)\n            at retrofit.RestAdapter$RestHandler.invokeRequest(RestAdapter.java:357)\n            at retrofit.RestAdapter$RestHandler.access$100(RestAdapter.java:262)\n            at retrofit.RestAdapter$RestHandler$1.call(RestAdapter.java:305)\n            at retrofit.RestAdapter$RestHandler$1.call(RestAdapter.java:303)\n            at retrofit.RestAdapter$RxSupport$1.onSubscribe(RestAdapter.java:247)\n            at rx.Observable.subscribe(Observable.java:241)\n            at rx.operators.OperationSubscribeOn$SubscribeOn$1.call(OperationSubscribeOn.java:51)\n            at rx.operators.OperationSubscribeOn$SubscribeOn$1.call(OperationSubscribeOn.java:48)\n            at rx.schedulers.DiscardableAction.call(DiscardableAction.java:44)\n            at rx.schedulers.ExecutorScheduler$4.run(ExecutorScheduler.java:123)\n            at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)\n            at java.util.concurrent.FutureTask.run(FutureTask.java:237)\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n            at retrofit.Platform$Android$2$1.run(Platform.java:136)\n            at java.lang.Thread.run(Thread.java:841)\n```\n", "url": "https://github.com/square/okhttp/issues/626", "user": "chrisjenx", "labels": ["bug"], "created": "2014-03-10 10:29:02", "closed": "2014-03-11 06:44:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SocketTimeoutException on Android", "body": "Using version: 1.5.0 release\nPlatform: Android 4.4.2 (Nexus5)\n\nI'm developing twitter client app for android using Twitter4J.\n\nI made a module for Twitter4J to support SPDY & HTTP/2.0 using OkHttp-1.5.\n\nSo I tried to implement the module to my app, but I found problem below.\n\nStack trace:\n\n```\nCaused by: java.net.SocketTimeoutException: Read timed out\n    at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource.waitUntilReadable(SpdyStream.java:412)\n    at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource.read(SpdyStream.java:364)\n    at com.squareup.okhttp.internal.http.SpdyTransport$SpdySource.read(SpdyTransport.java:264)\n    at com.squareup.okhttp.internal.okio.RealBufferedSource$1.read(RealBufferedSource.java:168)\n    at java.io.InputStream.read(InputStream.java:162)\n```\n\nThe app gets the user's timeline using `Twitter.getHomeTimeline()` method.\nTo set the fetch count as 160 is OK. But when set the count = 170, it spends very very long time, and timed out.\n\nSample project: https://github.com/takke/OkHttpTimedOutSample\n", "url": "https://github.com/square/okhttp/issues/623", "user": "takke", "labels": ["bug"], "created": "2014-03-09 12:01:54", "closed": "2014-03-10 05:49:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Jetty NPN Breaks on Java 8+", "body": "The `sun.security.ssl.*` classes it contributes causes API disconnect between the real JDK resulting in `NoSuchMethodError`s.\n", "url": "https://github.com/square/okhttp/issues/608", "user": "JakeWharton", "labels": ["bug"], "created": "2014-03-06 09:19:31", "closed": "2014-04-28 17:21:57", "commits": {}, "ttf": 53.000277777777775, "commitsDetails": []}, {"title": "Fix route failure recovery for HTTP/2", "body": "As awkwardly demonstrated in `HttpOverSpdyTest.readResponseHeaderTimeout`, we attempt to recover from timeouts on SPDY connections. But these timeouts are not connectivity problems; they're application-layer timeouts.\n\nThe test passes, even though we only ever establish a single SPDY connection to the server. This is two mistakes canceling each other out.\n\nWhen we have an application-layer SPDY timeout, we shouldn't treat it as a connectivity problem and retry. When we have a socket-layer SPDY timeout, we should treat it as a connectivity problem.\n", "url": "https://github.com/square/okhttp/issues/578", "user": "swankjesse", "labels": ["bug"], "created": "2014-03-01 13:12:02", "closed": "2016-12-28 01:05:06", "commits": {"8b0401eb7a01d2d93fe144bcc38b346df471b987": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "219f286feaf6dd4857fcf3d837921b141f7351c0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 1032.0002777777777, "commitsDetails": [{"commitHash": "8b0401eb7a01d2d93fe144bcc38b346df471b987", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["edb8164469296e27abd1ab69ff554711a41a79be"], "nameRev": "8b0401eb7a01d2d93fe144bcc38b346df471b987 tags/parent-1.5.0~29^2", "commitMessage": "Ignore a broken test for SPDY failure recovery.\n\nhttps://github.com/square/okhttp/issues/578\n", "commitDateTime": "2014-03-01 08:13:44", "authoredDateTime": "2014-03-01 08:13:28", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readResponseHeaderTimeout()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "219f286feaf6dd4857fcf3d837921b141f7351c0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["eecf0e57dc11210962cb60991d9dcebe3dca1c77"], "nameRev": "219f286feaf6dd4857fcf3d837921b141f7351c0 tags/parent-3.6.0~22^2", "commitMessage": "Confirm that HTTP/2 failure recovery is decent.\n\nThis was fixed recently but we didn't update the corresponding test case. This\nupdates the test and adds a few more to confirm that HTTP/2 failure recovery\nworks as it should.\n\nCloses: https://github.com/square/okhttp/issues/578\n", "commitDateTime": "2016-12-24 15:49:12", "authoredDateTime": "2016-12-24 15:49:12", "commitGitStats": [{"filePath": "mockwebserver/src/main/java/okhttp3/mockwebserver/MockWebServer.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "okhttp-tests/src/test/java/okhttp3/RecordedResponse.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 44, "deletions": 12, "lines": 56}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockWebServer.java", "spoonMethods": [{"spoonMethodName": "okhttp3.mockwebserver.MockWebServer.FramedSocketHandler.onStream(okhttp3.internal.http2.Http2Stream)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue_HTTP2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsFalse_HTTP2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.postBodyRetransmittedOnFailureRecovery_HTTP2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.CallTest.noRecoverWhenRetryOnConnectionFailureIsFalse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RecordedResponse.java", "spoonMethods": [{"spoonMethodName": "okhttp3.RecordedResponse.assertFailureMatches(java.lang.String)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "okhttp3.RecordedResponse.assertFailureMatches(java.lang.String[])", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.readResponseHeaderTimeout()", "TOT": 9, "UPD": 4, "INS": 4, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.readTimeoutOnSlowConnection()", "TOT": 20, "UPD": 6, "INS": 8, "MOV": 3, "DEL": 3}, {"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.connectionTimeout()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8b0401eb7a01d2d93fe144bcc38b346df471b987", "219f286feaf6dd4857fcf3d837921b141f7351c0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["mockwebserver/src/main/java/okhttp3/mockwebserver"], "changesInPackagesSPOON": ["okhttp3.mockwebserver.MockWebServer.FramedSocketHandler.onStream(okhttp3.internal.http2.Http2Stream)", "okhttp3.RecordedResponse.assertFailureMatches(java.lang.String[])", "okhttp3.RecordedResponse.assertFailureMatches(java.lang.String)"]}, {"title": "HTTP PATCH method doesn't work in 1.3.0 release ", "body": "In changelog for 1.3.0 version mentioned `New: Support for \"PATCH\" HTTP method in client and MockWebServer.`\n\nBut if I try to perform request with such method, it throws exception exactly like original HttpURLConnection in Android:\n\nW/System.err\ufe55 java.net.ProtocolException: Unknown method 'PATCH'; must be one of [OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE]\nW/System.err\ufe55 at java.net.HttpURLConnection.setRequestMethod(HttpURLConnection.java:677) W/System.err\ufe55 at com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.setRequestMethod(HttpsURLConnectionImpl.java:144)\n", "url": "https://github.com/square/okhttp/issues/570", "user": "SemenovAlexander", "labels": ["bug"], "created": "2014-02-25 14:39:26", "closed": "2014-03-01 16:14:54", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Handshake should be accessible after connect()", "body": "```\n    /**\n     * Test that we can inspect the SSL session after connect().\n     * http://code.google.com/p/android/issues/detail?id=24431\n     */\n    public void testInspectSslAfterConnect() throws Exception {\n        TestSSLContext testSSLContext = TestSSLContext.create();\n        server.useHttps(testSSLContext.serverContext.getSocketFactory(), false);\n        server.enqueue(new MockResponse());\n        server.play();\n\n        HttpsURLConnection connection = (HttpsURLConnection) server.getUrl(\"/\").openConnection();\n        connection.setSSLSocketFactory(testSSLContext.clientContext.getSocketFactory());\n        connection.connect();\n        assertNotNull(connection.getHostnameVerifier());\n        assertNull(connection.getLocalCertificates());\n        assertNotNull(connection.getServerCertificates());\n        assertNotNull(connection.getCipherSuite());\n        assertNotNull(connection.getPeerPrincipal());\n    }\n```\n", "url": "https://github.com/square/okhttp/issues/568", "user": "swankjesse", "labels": ["bug"], "created": "2014-02-24 17:42:11", "closed": "2014-02-25 04:23:12", "commits": {"c9ddba72920e5b5e0d78e501cf0cf4d43fc45c78": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "7c99d00088a168ad060311d278479c29a3032113": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c9ddba72920e5b5e0d78e501cf0cf4d43fc45c78", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7c99d00088a168ad060311d278479c29a3032113", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["0fbe50cbc00e125568f659e39591fa03a7ea95ec"], "nameRev": "7c99d00088a168ad060311d278479c29a3032113 tags/parent-1.5.0~37^2", "commitMessage": "Keep the handshake after connecting.\n\nhttps://github.com/square/okhttp/issues/568\n", "commitDateTime": "2014-02-24 23:10:26", "authoredDateTime": "2014-02-24 22:57:42", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpURLConnectionImpl.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpsURLConnectionImpl.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "okhttp/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpURLConnectionImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpsURLConnectionImpl.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.handshake()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.inspectHandshakeThroughoutRequestLifecycle()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7c99d00088a168ad060311d278479c29a3032113"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17.0, "deletions": 1.0, "lines": 18.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 3.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(boolean)", "com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.handshake()", "com.squareup.okhttp.internal.http.HttpURLConnectionImpl"]}, {"title": "Unexpected SocketTimeoutException", "body": "Using version: 1.3.0 release, obtained from http://mvnrepository.com/artifact/com.squareup.okhttp/okhttp\n\nStack trace:\n\n```\nCaused by: java.net.SocketTimeoutException\n    at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream.waitUntilReadable(SpdyStream.java:472)\n    at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataInputStream.read(SpdyStream.java:405)\n    at com.squareup.okhttp.internal.http.UnknownLengthHttpInputStream.read(UnknownLengthHttpInputStream.java:39)\n    at java.io.InputStream.read(InputStream.java:163)\n    at java.util.zip.InflaterInputStream.fill(InflaterInputStream.java:198)\n    at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:152)\n    at java.util.zip.GZIPInputStream.read(GZIPInputStream.java:167)\n    at libcore.io.Streams.readFully(Streams.java:81)\n    at java.io.DataInputStream.readInt(DataInputStream.java:124)\n    etc ... But note that just readInt() was called.\n```\n\nThe problem here is that a simple DataInputStream.readInt() triggers a SocketTimeoutException even though it shouldn't - the network is good (wifi) and the server is responsive.\n\nDigging into this issue, I have localized the issue to code inside `com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataInputStream.receive(InputStream in, int byteCount)`:\n\n```\n  [...] // Some code here.\n\n  // Fill the buffer without holding any locks. First fill [limit..buffer.length) if that\n  // won't overwrite unread data. Then fill [limit..pos). We can't hold a lock, otherwise\n  // writes will be blocked until reads complete.\n  if (pos < limit) {\n    int firstCopyCount = Math.min(byteCount, buffer.length - limit);\n    Util.readFully(in, buffer, limit, firstCopyCount);\n    limit += firstCopyCount;\n    byteCount -= firstCopyCount;\n    if (limit == buffer.length) {\n      limit = 0;\n    }\n  }\n  if (byteCount > 0) {\n    Util.readFully(in, buffer, limit, byteCount);\n    limit += byteCount;\n  }\n\n  synchronized (SpdyStream.this) {\n    // Update the new limit, and mark the position as readable if necessary.\n    this.limit = limit;\n    if (this.pos == -1) {\n      this.pos = firstNewByte;\n      SpdyStream.this.notifyAll();\n    }\n  }\n```\n\nThe problem is that `Util.readFully(in, buffer, limit, firstCopyCount);` can take a long time, say longer than 10s. This means that it takes that much until `SpdyStream.this.notifyAll();` is called. Furthermore, `com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataInputStream.waitUntilReadable()` is waiting on `notifyAll()` to be called. If it's not called after `readTimeoutMillis`(set to 10s) it times out and throws the unexpected SocketTimeoutException posted above. I've copied `waitUntilReadable()` below:\n\n```\n/**\n * Returns once the input stream is either readable or finished. Throws\n * a {@link SocketTimeoutException} if the read timeout elapses before\n * that happens.\n */\nprivate void waitUntilReadable() throws IOException {\n  long start = 0;\n  long remaining = 0;\n  if (readTimeoutMillis != 0) {\n    start = (System.nanoTime() / 1000000);\n    remaining = readTimeoutMillis;\n  }\n  try {\n    while (pos == -1 && !finished && !closed && errorCode == null) {\n      if (readTimeoutMillis == 0) {\n        SpdyStream.this.wait();\n      } else if (remaining > 0) {\n        SpdyStream.this.wait(remaining);\n        remaining = start + readTimeoutMillis - (System.nanoTime() / 1000000);\n      } else {\n        throw new SocketTimeoutException();\n      }\n    }\n  } catch (InterruptedException e) {\n    throw new InterruptedIOException();\n  }\n}\n```\n\nYou might be thinking 'what's the problem?'. Nothing happened for 10s so a timeout makes sense. Except for the fact that stuff is happening, only in `Util.readFully(in, buffer, limit, firstCopyCount);`. That's where data is actually read (successfully, but slowly) from the input stream / network.\n\nSo if 30KB (realistic) are being read from the network, at 2KB/s, a SocketTimeoutException will always be thrown. Technically, this would be fine since the timeout is specified at 10s. However, note that only a simple readInt() was called but that resulted in 30KB being read from the network - this is an issue, which I'm not yet sure whether it is due to an issue inside okhttp or due to compression (say 30KB are required to decompress the first int).\nImportantly, there is no way to distinguish between 'no network or server not responding' and 'connection is slow' since they are governed by the same timeout. Could that be added? (Or is there already a way to do this that I should know about?)\n\nThere is also another issue that revealed the issue above. On intel atom android device (thus single core, x86), on wifi, it sometimes (say 25% of time) takes 14s to read 30KB (all in Util.readFully) using okhttp (which leads to the SocketTimeoutException noted above). Before I investigate any deeper into okhttp - is there any busy wait/thread switching/thread starvation that could be happening inside okhttp that could potentially cause the slowness? (Yes, I'm that desperate for leads.)\n", "url": "https://github.com/square/okhttp/issues/567", "user": "mihai-dumitresq", "labels": ["bug"], "created": "2014-02-24 17:08:19", "closed": "2014-03-15 14:34:25", "commits": {"d229bc0e3743575616e88d643bee9bae3f5a7882": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "8f16ce781ea67a1da51381990835450219f27c2c": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "4efc1673e2f19a3dbe51722a822f98f5571cc80a": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "cb2d297ae2688e1daa914278b0a31025a45d3c96": {"commitGHEventType": "referenced", "commitUser": "adriancole"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "d229bc0e3743575616e88d643bee9bae3f5a7882", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8f16ce781ea67a1da51381990835450219f27c2c", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4efc1673e2f19a3dbe51722a822f98f5571cc80a", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "cb2d297ae2688e1daa914278b0a31025a45d3c96", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": ["26b5f35718ef3fc5500b492f43d520fd42606a53"], "nameRev": "cb2d297ae2688e1daa914278b0a31025a45d3c96 tags/parent-1.5.0~6^2", "commitMessage": "Test case for #567: read timeout granularity.\n", "commitDateTime": "2014-03-06 15:56:31", "authoredDateTime": "2014-03-05 09:09:51", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyStream.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readTimeoutMoreGranularThanBodySize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.readTimeoutOnSlowConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpdyStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.waitUntilReadable()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cb2d297ae2688e1daa914278b0a31025a45d3c96"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 1.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/spdy"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource.waitUntilReadable()"]}, {"title": "Connection-refused strangeness due to odd route", "body": "This test fails. It is based on an Android CTS test. I think this due a problem is RouteSelector.\n\n```\n  public void testInvalidIpv4Address() throws Exception {\n    try {\n      URL.setURLStreamHandlerFactory(new OkHttpClient());\n      URI uri = new URI(\"http://1111.111.111.111/index.html\");\n      URL url = uri.toURL();\n      URLConnection connection = url.openConnection();\n      connection.connect();\n      fail();\n    } catch (UnknownHostException expected) {\n    }\n  }\n```\n\nExpected: UnknownHostException\nAction: Connection refused (which it due to it trying to connect to localhost).\n\nThis stack trace from java-1.7.0-openjdk-amd64\njava version \"1.7.0_51\"\nOpenJDK Runtime Environment (IcedTea 2.4.4) (7u51-2.4.4-0ubuntu0.12.04.2)\nOpenJDK 64-Bit Server VM (build 24.45-b08, mixed mode)\n\nBehavior is equivalent under Android.\n\n```\njava.net.ConnectException: Connection refused\n    at java.net.PlainSocketImpl.socketConnect(Native Method)\n    at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)\n    at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)\n    at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)\n    at java.net.Socket.connect(Socket.java:579)\n    at com.squareup.okhttp.internal.Platform.connectSocket(Platform.java:123)\n    at com.squareup.okhttp.Connection.connect(Connection.java:88)\n    at com.squareup.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:245)\n    at com.squareup.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:190)\n    at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:372)\n    at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:97)\n    at BugsTest.testInvalidIpv4Address(BugsTest.java:21)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at com.intellij.junit3.JUnit3IdeaTestRunner.doRun(JUnit3IdeaTestRunner.java:141)\n    at com.intellij.junit3.JUnit3IdeaTestRunner.startRunnerWithArgs(JUnit3IdeaTestRunner.java:52)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:202)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:65)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\n```\n\nThe problem is related to this code in RouteSelector:\n\n```\n    if (proxy.type() == Proxy.Type.DIRECT) {\n      socketHost = uri.getHost();\n      socketPort = getEffectivePort(uri);\n    } else {\n```\n\nIn the URI the host is \"null\", which causes a later DNS lookup to lookup all the IPs of localhost. The \"authority\" is 1111.111.111.111, which is probably what should be being retrieved.\n\nI don't see any obvious recent changes in this specific code so I assume that something else has changed.\n\nChanging the code to uri.getAuthority() obtained the expected result for this test but don't know what the other knock-ons might be.\n", "url": "https://github.com/square/okhttp/issues/542", "user": "nfuller", "labels": ["bug"], "created": "2014-02-20 14:48:37", "closed": "2014-02-22 16:56:51", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Crash when a lots of requests are being made...", "body": "01-30 13:59:47.905: E/AndroidRuntime(4260): Caused by: java.io.IOException: failed to delete /storage/sdcard0/Android/data/my.package/cache/RestClientCache/79ea8432526c329b85c4eaff4037c054.0\n01-30 13:59:47.905: E/AndroidRuntime(4260):     at com.squareup.okhttp.internal.DiskLruCache.remove(DiskLruCache.java:586)\n01-30 13:59:47.905: E/AndroidRuntime(4260):     at com.squareup.okhttp.internal.DiskLruCache$Editor.commit(DiskLruCache.java:808)\n01-30 13:59:47.905: E/AndroidRuntime(4260):     at com.squareup.okhttp.HttpResponseCache$CacheRequestImpl$1.close(HttpResponseCache.java:422)\n01-30 13:59:47.905: E/AndroidRuntime(4260):     at com.squareup.okhttp.internal.http.AbstractHttpInputStream.endOfInput(AbstractHttpInputStream.java:84)\n01-30 13:59:47.905: E/AndroidRuntime(4260):     at com.squareup.okhttp.internal.http.HttpTransport$FixedLengthInputStream.read(HttpTransport.java:398)\n", "url": "https://github.com/square/okhttp/issues/521", "user": "kkocel", "labels": ["bug"], "created": "2014-02-11 14:54:52", "closed": "2014-03-17 15:45:10", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "a failure unrelated to SPDY can cause re-try to downgrade to http/1.1", "body": "While testing okhttp as a client on an Android 4.2 tablet, I saw the following sequence:\n- okhttp connects successfully using TLSv1\n- NPN negotiation selects SPDY\n- several (37) http requests are processed successfully\n- a network hiccup interrupts the connection\n  - duplicate ACK from client\n  - server sends RST\n- client re-establishes connection with SSLv3 instead of TLS, no npn, no spdy\n\nLooking through code, I think the httpEngine.recover call in HttpURLConnectionImpl leads down to a call to RouteSelector.nextTlsMode() that leads to TLS_MODE_COMPATIBLE being selected. I haven't traced the exact path, yet.\n\nI'm happy to sign an ICA, and I am going to work on a patch over the weekend. I'm not that familiar with the code or TLS protocol negotiation, so wanted to share what I'm thinking here in case this is either expected behavior or I am completely off-track.\n", "url": "https://github.com/square/okhttp/issues/515", "user": "davcamer", "labels": ["bug"], "created": "2014-02-07 15:36:05", "closed": "2014-03-05 05:10:35", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "Bug with OkHttp UnknownLengthHttpInputStream reading zlib streams", "body": "Observed RST_STREAM got sent out after client successfully received SYN_REPLY under no error condition. Under certain circumstances, gzip InflaterInputStream reads to the exact number of the data bytes in the stream without getting an eof. OkHttp UnknownLengthHttpInputStream however assumes the input stream should always be exhausted with eof, otherwise considers this an error and sends out RST_STREAM.\n\nSome more details: \nThe zlib InflaterInputStream implementation knows the exact bytes needed to inflate the stream, so it does not necessarily exhaust the input by reading to eof. This has been noted out in the code like: \n\n  // Invariant: if reading returns -1 or throws, eof must be true.\n  // It may also be true if the next read() should return -1.\n\nIn OkHttp UnknownLengthHttpInputStream, the close() method checks if the input stream has read to eof, otherwise considers this as an error case and sends a cancel stream. The assumption here is eof will always get signaled in order to successfully read all the input data. This is not neccessarily true when reading zlib streams. \n", "url": "https://github.com/square/okhttp/issues/507", "user": "lhwa", "labels": ["bug"], "created": "2014-02-02 08:32:29", "closed": "2014-02-22 19:36:37", "commits": {"eb90e8263ff5dedbfbfdc13c9db95c4d755165a0": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "6ad4d9856a7bfcea81d39c900eafaa226ece4bf7": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "eb90e8263ff5dedbfbfdc13c9db95c4d755165a0", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6ad4d9856a7bfcea81d39c900eafaa226ece4bf7", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["dce4bb2c1390a59ca1c3e1cb21add1aff90a3647"], "nameRev": "6ad4d9856a7bfcea81d39c900eafaa226ece4bf7 tags/parent-1.5.0~55^2", "commitMessage": "Make GzipSource exhaust its input.\n\nhttps://github.com/square/okhttp/issues/507\n", "commitDateTime": "2014-02-22 10:51:22", "authoredDateTime": "2014-02-22 10:49:49", "commitGitStats": [{"filePath": "okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes/GzipSource.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "okhttp-protocols/src/test/java/com/squareup/okhttp/internal/bytes/GzipSourceTest.java", "insertions": 67, "deletions": 0, "lines": 67}, {"filePath": "okhttp/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GzipSource.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.bytes.GzipSource.read(com.squareup.okhttp.internal.bytes.OkBuffer,long,com.squareup.okhttp.internal.bytes.Deadline)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.bytes.GzipSource.consumeTrailer(com.squareup.okhttp.internal.bytes.Deadline)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GzipSourceTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.bytes.GzipSourceTest.gunzipExhaustsSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.bytes.GzipSourceTest.gunzipThrowsIfSourceIsNotExhausted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.bytes.GzipSourceTest.ExhaustableSource", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6ad4d9856a7bfcea81d39c900eafaa226ece4bf7"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10.0, "deletions": 2.0, "lines": 12.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 0.0, "INS": 2.0, "MOV": 1.0, "DEL": 2.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-protocols/src/main/java/com/squareup/okhttp/internal/bytes"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.bytes.GzipSource.consumeTrailer(com.squareup.okhttp.internal.bytes.Deadline)", "com.squareup.okhttp.internal.bytes.GzipSource.read(com.squareup.okhttp.internal.bytes.OkBuffer,long,com.squareup.okhttp.internal.bytes.Deadline)"]}, {"title": "No timeout writing to the remote peer", "body": "Hey all,\n\nI've noticed an issue and was hoping for your implementation to help but I don't think it does:\nWhat I'm doing is I'm connected to a router, and I pull the internet cable on the router then initiate a connection right after that.\n\nDepending on the timing sometimes I timeout on the connection.connect(url), which is good, but most of the time I pass this one and the code blocks on connection.sendOutput() and doesn't timeout. Connection timeout and read timeout are set properly to 8 and 15 secs.\n\nWhat I can't do either is try and interrupt the getResponseCode() by doing a connection.disconnect().\n\nReckon I'm looking at a bug or two there, don't you?\n", "url": "https://github.com/square/okhttp/issues/473", "user": "banzzai", "labels": ["bug"], "created": "2014-01-21 23:33:29", "closed": "2014-05-04 13:46:21", "commits": {}, "ttf": 102.00027777777778, "commitsDetails": []}, {"title": "SPDY response bodies aren't cached if they aren't completely consumed", "body": "With HTTP `discardStream()` has the happy side effect of getting `cache.commit()` called. We don't have that method in SPDY, and so the cache commit doesn't happen if the application layer doesn't read the last byte of the response.\n\nAnd application layers like image downloaders don't always do this because the image binary is self-delimiting.\n", "url": "https://github.com/square/okhttp/issues/450", "user": "swankjesse", "labels": ["bug"], "created": "2014-01-16 15:08:40", "closed": "2014-01-18 18:38:43", "commits": {"f6f3497ef7d01c2e11b68ca96b7f84e566e6c745": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "f6f3497ef7d01c2e11b68ca96b7f84e566e6c745", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["2a5b9562d298193f8950fc185bd2fa1d9dba57f6"], "nameRev": "f6f3497ef7d01c2e11b68ca96b7f84e566e6c745 tags/parent-1.5.0~133^2", "commitMessage": "Cache SPDY responses even if the body isn't fully consumed.\n\nhttps://github.com/square/okhttp/issues/450\n", "commitDateTime": "2014-01-18 12:24:47", "authoredDateTime": "2014-01-18 12:24:47", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/Headers.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/AbstractHttpInputStream.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpTransport.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/SpdyTransport.java", "insertions": 70, "deletions": 14, "lines": 84}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/Transport.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "okhttp/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 20, "deletions": 2, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Headers.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Headers.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractHttpInputStream.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.AbstractHttpInputStream", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpTransport.discardStream(com.squareup.okhttp.internal.http.HttpEngine,java.io.InputStream)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "SpdyTransport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.getTransferStream(java.net.CacheRequest)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.makeReusable(boolean,java.io.OutputStream,java.io.InputStream)", "TOT": 18, "UPD": 3, "INS": 1, "MOV": 13, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.SpdyInputStream", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.SpdyTransport.SpdyInputStream.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Transport.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.responsesAreCached()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.conditionalCache()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.HttpOverSpdyTest.responseCachedWithoutConsumingFullBody()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f6f3497ef7d01c2e11b68ca96b7f84e566e6c745"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 86, "deletions": 22, "lines": 108, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 30, "UPD": 5, "INS": 7, "MOV": 14, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http", "okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http", "com.squareup.okhttp.internal.http.SpdyTransport.getTransferStream(java.net.CacheRequest)", "com.squareup.okhttp.internal.http.SpdyTransport.SpdyInputStream.close()", "com.squareup.okhttp.internal.http.SpdyTransport.SpdyInputStream", "com.squareup.okhttp.internal.http.HttpTransport", "com.squareup.okhttp.internal.http.AbstractHttpInputStream", "com.squareup.okhttp.Headers.toString()", "com.squareup.okhttp.internal.http.SpdyTransport.makeReusable(boolean,java.io.OutputStream,java.io.InputStream)", "com.squareup.okhttp.internal.http.HttpTransport.discardStream(com.squareup.okhttp.internal.http.HttpEngine,java.io.InputStream)"]}, {"title": "Fix JettyNpnProvider.invoke() to pick the right protocol", "body": "At the moment we're picking the wrong protocol when the server's protocols list is empty. This causes us to speak `HTTP-draft-09/2.0` to a server that doesn't expect it.\n", "url": "https://github.com/square/okhttp/issues/447", "user": "swankjesse", "labels": ["bug"], "created": "2014-01-16 04:15:36", "closed": "2014-01-18 19:06:42", "commits": {"bfa278803211f759dbfd5e6b4884366beb189d60": {"commitGHEventType": "closed", "commitUser": "swankjesse"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "bfa278803211f759dbfd5e6b4884366beb189d60", "commitGHEventType": "closed", "commitUser": "swankjesse", "commitParents": ["2a5b9562d298193f8950fc185bd2fa1d9dba57f6"], "nameRev": "bfa278803211f759dbfd5e6b4884366beb189d60 tags/parent-1.5.0~132^2~1", "commitMessage": "fix #447: Fix JettyNpnProvider.invoke() to pick the right protocol\n", "commitDateTime": "2014-01-18 09:52:20", "authoredDateTime": "2014-01-18 09:49:04", "commitGitStats": [{"filePath": "okhttp-protocols/src/main/java/com/squareup/okhttp/internal/Platform.java", "insertions": 17, "deletions": 9, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Platform.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.Platform.JettyNpnProvider.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bfa278803211f759dbfd5e6b4884366beb189d60"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 9, "lines": 26, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp-protocols/src/main/java/com/squareup/okhttp/internal"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.Platform.JettyNpnProvider.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"]}, {"title": "After SocketTimeoutException, request is retried with different TLS mode", "body": "When I set a connect timeout on OkHttpClient and attempt to reach an HTTPS endpoint that throws a SocketTimeoutException, OkHttp is retrying the request once before giving up. This is what I believe is happening:\n- Upon the initial timeout exception, `HttpURLConnectionImpl.handleFailure()` adds the failed route (with `TLS_MODE_MODERN` flag) to the `RouteDatabase`. The database also adds the route with `TLS_MODE_COMPATIBLE` since it wasn't a handshake exception.\n- `handleFailure()` checks to see if the error is recoverable. The test `routeSelector.hasNext()` returns true, since `RouteSelector.hasNextTlsMode()` returns true. Another engine is created to try again.\n- The next time through, the route matches a failed route in the `RouteDatabase` and is added to the set of postponed routes, and is eventually tried again.\n- After this attempt fails with a SocketTimeoutException, there are no more TLS modes, addresses, proxies or postponed routes to try, so the `RouteSelector` will return null, and `HttpURLConnectionImpl` returns with a permanent failure.\n\nI would expect that a route is tried again with the fallback TLS behaviour, only if there was a handshake exception, and not when a SocketTimeoutException is encountered.\n\nI'm using OkHttp 1.3.0 on Android 4.2.2.\n", "url": "https://github.com/square/okhttp/issues/442", "user": "efung", "labels": ["bug"], "created": "2014-01-13 20:23:25", "closed": "2014-01-16 14:18:10", "commits": {"ad076a10fd5a8fb864f3a0212c0dd71b0b126653": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "b99cdacdbfaed8664ef283668f1b287d9433bbdb": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "46a0852c202acf68cd890867a35f8e51b81c2948": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "ad076a10fd5a8fb864f3a0212c0dd71b0b126653", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b99cdacdbfaed8664ef283668f1b287d9433bbdb", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "46a0852c202acf68cd890867a35f8e51b81c2948", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["295a2e4e7e9e909af8b55aa9bbee7035fd469964"], "nameRev": "46a0852c202acf68cd890867a35f8e51b81c2948 tags/parent-1.5.0~137^2", "commitMessage": "Don't attempt TLS modes we know will fail.\n\nhttps://github.com/square/okhttp/issues/442\n", "commitDateTime": "2014-01-16 08:28:02", "authoredDateTime": "2014-01-16 00:46:09", "commitGitStats": [{"filePath": "okhttp-protocols/src/test/java/com/squareup/okhttp/internal/spdy/ByteArrayPoolTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/Route.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/RouteDatabase.java", "insertions": 1, "deletions": 9, "lines": 10}, {"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/RouteSelector.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "okhttp/src/test/java/com/squareup/okhttp/internal/http/HttpOverSpdyTest.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "okhttp/src/test/java/com/squareup/okhttp/internal/http/RouteSelectorTest.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ByteArrayPoolTest.java", "spoonMethods": []}, {"spoonFilePath": "Route.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.Route.flipTlsMode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RouteDatabase.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.RouteDatabase.failed(com.squareup.okhttp.Route,java.io.IOException)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "RouteSelector.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelector.connectFailed(com.squareup.okhttp.Connection,java.io.IOException)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "HttpOverSpdyTest.java", "spoonMethods": []}, {"spoonFilePath": "RouteSelectorTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelectorTest.singleRouteReturnsFailedRoute()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelectorTest.failedRoutesAreLast()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelectorTest.nonSslErrorAddsAllTlsModesToFailedRoute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.RouteSelectorTest.sslErrorAddsOnlyFailedTlsModeToFailedRoute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["46a0852c202acf68cd890867a35f8e51b81c2948"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12.0, "deletions": 15.0, "lines": 27.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 8.0, "UPD": 0.0, "INS": 2.0, "MOV": 2.0, "DEL": 4.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp", "okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.RouteSelector.connectFailed(com.squareup.okhttp.Connection,java.io.IOException)", "com.squareup.okhttp.RouteDatabase.failed(com.squareup.okhttp.Route,java.io.IOException)", "com.squareup.okhttp.Route.flipTlsMode()"]}, {"title": "GZIPInputStream leak warning when using followRedirect() and transparent gzip.", "body": "[This was noticed on the current (repackaged) Android version of okhttp. Please excuse if this is already known / fixed]\n\nWhen `HttpUrlConnection.followRedirects(true)` is set and the user accesses a URL with a 301 response code and where the response is GZIP encoded, the underlying HttpEngine leaks the transparent GZIPInputStream.\n\nI'm still coming up to speed with okhttp, but I think the problem lies in here:\n\n`com.squareup.okhttp.internal.http.HttpEngine.initContentStream()`: wraps transferStream in a GZIPInputStream if it detects a GZIP content encoding. In this case the HttpEngine holds references to two InputStreams:\n\nresponseTransferIn - the reference to transferStream, the socket's InputStream\nresponseBodyIn - a GZIPInputStream that wraps transferStream\n\nWhen the code is following redirects in `com.squareup.okhttp.internal.http.HttpURLConnection.getResponse()`: the call to `httpEngine.release(false)` will only close responseBodyIn (the GZIPInputStream) if it detects that it is a cached response. I assume from the bug this is not what is happening here. It then calls `transport.makeReusable()` but passing the responseTransferIn and not responseBodyIn. If makeResuable() closes the stream at all it therefore closes transferStream but not the GZIPInputStream wrapper around it. If makeReusable() doesn't close the stream the Connection will be closed instead. I believe this will have the same effect as closing the transferStream (but not the wrapper around it).\n\nThis was reported to me on Android with leak checking enabled (e.g. `StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder().detectLeakedClosableObjects().penaltyLog().penaltyDeath().build())`).\n\nI repeated this myself with vogar running on host mode without needing that:\n\n```\npackage com.squareup.okhttp.internal.http;\n\nimport org.junit.Test;\n\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\npublic class RedirectLeakTest {\n\n    @Test\n    public void confirmLeak() {\n        String url = \"http://androidcommunity.com/?p=167564\";\n        HttpURLConnection cn = null;\n        try {\n            HttpURLConnection.setFollowRedirects(true);  // true == the default\n            cn = (HttpURLConnection) new URL(url).openConnection();\n            int code = cn.getResponseCode();\n            cn.disconnect();\n            System.err.println(\"Made http call, response \" + code + \" location=\" + cn.getHeaderField(\"Location\"));\n        } catch (Throwable t) {\n            System.err.println(\"Error making http call\" + t);\n        } finally {\n            if (cn != null) cn.disconnect();\n            System.gc(); // trigger the finalizer, triggering the strictmode check\n        }\n    }\n}\n```\n\n```\n  com.squareup.okhttp.internal.http.RedirectLeakTest#confirmLeak\n    Made http call, response 200 location=null\n    W(13352) A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.  (System)\n  com.squareup.okhttp.internal.http.RedirectLeakTest#confirmLeak OK (SUCCESS)\n    W(13352) java.lang.Throwable: Explicit termination method 'end' not called  (System)\n    W(13352)    at dalvik.system.CloseGuard.open(CloseGuard.java:184)  (System)\n    W(13352)    at java.util.zip.Inflater.<init>(Inflater.java:82)  (System)\n    W(13352)    at java.util.zip.GZIPInputStream.<init>(GZIPInputStream.java:103)  (System)\n    W(13352)    at java.util.zip.GZIPInputStream.<init>(GZIPInputStream.java:88)  (System)\n    W(13352)    at com.android.okhttp.internal.http.HttpEngine.initContentStream(HttpEngine.java:468)  (System)\n    W(13352)    at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:673)  (System)\n    W(13352)    at com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:353)  (System)\n    W(13352)    at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:297)  (System)\n    W(13352)    at com.android.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:509)  (System)\n    W(13352)    at com.squareup.okhttp.internal.http.RedirectLeakTest.confirmLeak(RedirectLeakTest.java:20)  (System)\n... blah ...\n```\n", "url": "https://github.com/square/okhttp/issues/441", "user": "nfuller", "labels": ["bug"], "created": "2014-01-13 11:24:33", "closed": "2014-02-24 04:32:25", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "Segfault in secureResponseCachingAndRedirects on Android", "body": "I saw this in 2 of 3 runs:\n\n```\nF/libc    (13547): Fatal signal 11 (SIGSEGV) at 0xb0c2c000 (code=2), thread 13860 (pool-315-thread)\nI/DEBUG   (24062): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\nI/DEBUG   (24062): Build fingerprint: 'google/occam/mako:4.4.2/KOT49H/937116:user/release-keys'\nI/DEBUG   (24062): Revision: '11'\nI/DEBUG   (24062): AM write failure (32 / Broken pipe)\nI/DEBUG   (24062): pid: 13547, tid: 13860, name: pool-315-thread  >>> dalvikvm <<<\nI/DEBUG   (24062): signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr b0c2c000\nW/NativeCrashListener(  593): Couldn't find ProcessRecord for pid 13547\nI/DEBUG   (24062):     r0 b8c7a450  r1 b0c2bff2  r2 b8bb153d  r3 0000000b\nI/DEBUG   (24062):     r4 00000000  r5 b8c61a81  r6 b8c65a30  r7 b8bc9f48\nI/DEBUG   (24062):     r8 b8c61a7a  r9 00002130  sl 00000001  fp 00003004\nI/DEBUG   (24062):     ip 60000000  sp af544978  lr 000000dd  pc b6f3c026  cpsr a00d0030\nI/DEBUG   (24062):     d0  0000000000000000  d1  0000000000000000\nI/DEBUG   (24062):     d2  0000000000000000  d3  0000000000000000\nI/DEBUG   (24062):     d4  0000000000000000  d5  0000000000000000\nI/DEBUG   (24062):     d6  0000000000000000  d7  0000000000000000\nI/DEBUG   (24062):     d8  0000000000000000  d9  0000000000000000\nI/DEBUG   (24062):     d10 0000000000000000  d11 0000000000000000\nI/DEBUG   (24062):     d12 0000000000000000  d13 0000000000000000\nI/DEBUG   (24062):     d14 0000000000000000  d15 0000000000000000\nI/DEBUG   (24062):     d16 18a85a01c1e0d252  d17 58bb2e087a11cd68\nI/DEBUG   (24062):     d18 200c38205aee399d  d19 334c9b6bf339c0c1\nI/DEBUG   (24062):     d20 3f8948b0fcd6e9e0  d21 3fe555b0aaeac752\nI/DEBUG   (24062):     d22 3fd24998d6307188  d23 3fcc7288e957b53b\nI/DEBUG   (24062):     d24 3fc74721cad6b0ed  d25 3fc2f112df3e5244\nI/DEBUG   (24062):     d26 0000000000000020  d27 0000000000000009\nI/DEBUG   (24062):     d28 0000000000000000  d29 0000000000000000\nI/DEBUG   (24062):     d30 0000000000000000  d31 0000000000000000\nI/DEBUG   (24062):     scr 60000010\nI/DEBUG   (24062): \nI/DEBUG   (24062): backtrace:\nI/DEBUG   (24062):     #00  pc 00022026  /system/lib/libc.so (__memcpy_base+81)\nI/DEBUG   (24062):     #01  pc 0002e96b  /system/lib/libssl.so (ssl_add_serverhello_tlsext+618)\nI/DEBUG   (24062):     #02  pc 0001f735  /system/lib/libssl.so (ssl3_send_server_hello+188)\nI/DEBUG   (24062):     #03  pc 0001eaf5  /system/lib/libssl.so (ssl3_accept+1692)\nI/DEBUG   (24062):     #04  pc 00026489  /system/lib/libssl.so (SSL_accept+20)\nI/DEBUG   (24062):     #05  pc 00012b2d  /system/lib/libssl.so (ssl23_get_client_hello+1244)\nI/DEBUG   (24062):     #06  pc 0001259f  /system/lib/libssl.so (ssl23_accept+294)\nI/DEBUG   (24062):     #07  pc 00027ccb  /system/lib/libssl.so (SSL_do_handshake+50)\nI/DEBUG   (24062):     #08  pc 0000aeb3  /system/lib/libjavacrypto.so\nI/DEBUG   (24062):     #09  pc 0001dbcc  /system/lib/libdvm.so (dvmPlatformInvoke+112)\nI/DEBUG   (24062):     #10  pc 0004e123  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+398)\nI/DEBUG   (24062):     #11  pc 00038825  /system/lib/libdvm.so (dvmCheckCallJNIMethod(unsigned int const*, JValue*, Method const*, Thread*)+8)\nI/DEBUG   (24062):     #12  pc 00026fe0  /system/lib/libdvm.so\nI/DEBUG   (24062):     #13  pc 0002dfa0  /system/lib/libdvm.so (dvmMterpStd(Thread*)+76)\nI/DEBUG   (24062):     #14  pc 0002b638  /system/lib/libdvm.so (dvmInterpret(Thread*, Method const*, JValue*)+184)\nI/DEBUG   (24062):     #15  pc 00060581  /system/lib/libdvm.so (dvmCallMethodV(Thread*, Method const*, Object*, bool, JValue*, std::__va_list)+336)\nI/DEBUG   (24062):     #16  pc 000605a5  /system/lib/libdvm.so (dvmCallMethod(Thread*, Method const*, Object*, JValue*, ...)+20)\nI/DEBUG   (24062):     #17  pc 0005528b  /system/lib/libdvm.so\nI/DEBUG   (24062):     #18  pc 0000d170  /system/lib/libc.so (__thread_entry+72)\nI/DEBUG   (24062):     #19  pc 0000d308  /system/lib/libc.so (pthread_create+240)\nI/DEBUG   (24062):     #20  pc 000d2a94  [heap]\nI/DEBUG   (24062): \nI/DEBUG   (24062): stack:\nI/DEBUG   (24062):          af544938  00000114  \nI/DEBUG   (24062):          af54493c  b2d0a945  /system/lib/libcrypto.so (CRYPTO_free+36)\nI/DEBUG   (24062):          af544940  b8c4fe18  [heap]\nI/DEBUG   (24062):          af544944  00000006  \nI/DEBUG   (24062):          af544948  00000100  \nI/DEBUG   (24062):          af54494c  b2cd3acb  /system/lib/libcrypto.so (BIO_free+110)\nI/DEBUG   (24062):          af544950  00000075  \nI/DEBUG   (24062):          af544954  b2d008a9  /system/lib/libcrypto.so (EVP_DigestUpdate+8)\nI/DEBUG   (24062):          af544958  af54498c  [stack:13860]\nI/DEBUG   (24062):          af54495c  af544988  [stack:13860]\nI/DEBUG   (24062):          af544960  00003004  \nI/DEBUG   (24062):          af544964  b0c1c28f  /system/lib/libssl.so (SSL_get_ex_data+10)\nI/DEBUG   (24062):          af544968  00003004  \nI/DEBUG   (24062):          af54496c  b0c38e6f  /system/lib/libjavacrypto.so\nI/DEBUG   (24062):          af544970  00000000  \nI/DEBUG   (24062):          af544974  b0c38e65  /system/lib/libjavacrypto.so\nI/DEBUG   (24062):     #00  af544978  b8c61a85  [heap]\nI/DEBUG   (24062):          af54497c  b0c2296f  /system/lib/libssl.so (ssl_add_serverhello_tlsext+622)\nI/DEBUG   (24062):     #01  af544980  ffffffff  \nI/DEBUG   (24062):          af544984  b8c61aa0  [heap]\nI/DEBUG   (24062):          af544988  b8bc9f48  [heap]\nI/DEBUG   (24062):          af54498c  b0c13607  /system/lib/libssl.so (ssl3_get_client_hello+1926)\nI/DEBUG   (24062):          af544990  af5449a8  [stack:13860]\nI/DEBUG   (24062):          af544994  00000001  \nI/DEBUG   (24062):          af544998  b8bc9f48  [heap]\nI/DEBUG   (24062):          af54499c  00000049  \nI/DEBUG   (24062):          af5449a0  b8c61a30  [heap]\nI/DEBUG   (24062):          af5449a4  b8c61a34  [heap]\nI/DEBUG   (24062):          af5449a8  00000000  \nI/DEBUG   (24062):          af5449ac  b0c13739  /system/lib/libssl.so (ssl3_send_server_hello+192)\nI/DEBUG   (24062):     #02  af5449b0  b8bc9f48  [heap]\nI/DEBUG   (24062):          af5449b4  00002110  \nI/DEBUG   (24062):          af5449b8  b8bc9f48  [heap]\nI/DEBUG   (24062):          af5449bc  00002130  \nI/DEBUG   (24062):          af5449c0  00000000  \nI/DEBUG   (24062):          af5449c4  b0c391fd  /system/lib/libjavacrypto.so\nI/DEBUG   (24062):          af5449c8  00003004  \nI/DEBUG   (24062):          af5449cc  b0c12af9  /system/lib/libssl.so (ssl3_accept+1696)\nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near r0:\nI/DEBUG   (24062):     b8c7a430 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a440 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a450 00000035 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a460 00000000 00000000 02010000 b2c69c78  \nI/DEBUG   (24062):     b8c7a470 00000036 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a480 00000000 00000000 02010000 b2c69c78  \nI/DEBUG   (24062):     b8c7a490 00000037 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a4a0 00000000 00000000 02010000 b2c69c78  \nI/DEBUG   (24062):     b8c7a4b0 00000038 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a4c0 00000000 00000000 02010000 b2c69c78  \nI/DEBUG   (24062):     b8c7a4d0 00000039 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a4e0 00000000 00000000 02010000 b2c69c78  \nI/DEBUG   (24062):     b8c7a4f0 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a500 00000000 00000000 02000000 b2c69c78  \nI/DEBUG   (24062):     b8c7a510 00006e65 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8c7a520 53550000 00000000 00000006 b8c7a530  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near r1:\nI/DEBUG   (24062):     b0c2bfd0 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2bfe0 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2bff0 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c000 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c010 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c020 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c030 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c040 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c050 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c060 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c070 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c080 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c090 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c0a0 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c0b0 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b0c2c0c0 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near r2:\nI/DEBUG   (24062):     b8bb151c 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bb152c 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bb153c 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bb154c 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bb155c 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bb156c 00000000 00000004 00000001 00000010  \nI/DEBUG   (24062):     b8bb157c 00000000 00000100 00000000 00000000  \nI/DEBUG   (24062):     b8bb158c 00000002 00000000 00000010 00000000  \nI/DEBUG   (24062):     b8bb159c 0000024e b8bb15dc b8bb155c 00000000  \nI/DEBUG   (24062):     b8bb15ac 0000001d 0000000a 0000000b 00000000  \nI/DEBUG   (24062):     b8bb15bc 00000000 00000080 00000000 00000000  \nI/DEBUG   (24062):     b8bb15cc 00000c00 00000000 00000000 00010000  \nI/DEBUG   (24062):     b8bb15dc 00000250 b8bd1a04 b8bb159c b8bb14dc  \nI/DEBUG   (24062):     b8bb15ec 000000a5 00000000 00000002 00000000  \nI/DEBUG   (24062):     b8bb15fc 00000000 00000100 00000000 00000000  \nI/DEBUG   (24062):     b8bb160c 00008000 00010000 00008000 00000000  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near r5:\nI/DEBUG   (24062):     b8c61a60 9adc25b6 23b8940a 3c1dc01f 042a352e  \nI/DEBUG   (24062):     b8c61a70 ad4cb736 00222ccf 00330004 010001ff  \nI/DEBUG   (24062):     b8c61a80 9f743300 dd082848 0f00f1b8 f04fbfb8  \nI/DEBUG   (24062):     b8c61a90 e5e90801 90062050 480de5e1 62b4f44f  \nI/DEBUG   (24062):     b8c61aa0 44784902 ba74e669 7f290001 b9e6ffff  \nI/DEBUG   (24062):     b8c61ab0 b9880001 b8ac0001 b8c00001 b8de0001  \nI/DEBUG   (24062):     b8c61ac0 b5e20001 b6a00001 b5ac0001 b5900001  \nI/DEBUG   (24062):     b8c61ad0 b4200001 b4900001 b4ae0001 b74a0001  \nI/DEBUG   (24062):     b8c61ae0 b72c0001 b8260001 b8780001 b9c00001  \nI/DEBUG   (24062):     b8c61af0 bb3e0001 e92d0001 b08248f0 f2424604  \nI/DEBUG   (24062):     b8c61b00 6b601130 d1674288 68206be1 0a00684e  \nI/DEBUG   (24062):     b8c61b10 f8074637 68200f04 6da07170 01a0f100  \nI/DEBUG   (24062):     b8c61b20 f96030b0 f1062a0f f9610016 f9400a0f  \nI/DEBUG   (24062):     b8c61b30 1db02a0f 0a0ff940 00e8f8d4 0020f890  \nI/DEBUG   (24062):     b8c61b40 0f02f010 6ee0d106 bf022800 00c0f8d4  \nI/DEBUG   (24062):     b8c61b50 64412100 00c0f8d4 2d216c45 4832db05  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near r6:\nI/DEBUG   (24062):     b8c65a10 f7e94620 2400ed40 bd704620 74b6bf00  \nI/DEBUG   (24062):     b8c65a20 ffe00001 e92dffff 46054830 f8d5460c  \nI/DEBUG   (24062):     b8c65a30 b12800fc 4a054905 58514479 ed2cf7e9  \nI/DEBUG   (24062):     b8c65a40 40fcf8c5 8830e8bd 748abf00 ffe00001  \nI/DEBUG   (24062):     b8c65a50 e92dffff 46054830 f8d5460c b12800a0  \nI/DEBUG   (24062):     b8c65a60 4a054905 58514479 ed16f7e9 40a0f8c5  \nI/DEBUG   (24062):     b8c65a70 8830e8bd 745ebf00 ffe00001 f8d0ffff  \nI/DEBUG   (24062):     b8c65a80 477000a0 4601bf00 f5b06848 d10f5f80  \nI/DEBUG   (24062):     b8c65a90 f0206808 200002ff 7f40f5b2 4770bf18  \nI/DEBUG   (24062):     b8c65aa0 20006d89 bf1c2900 036cf8d1 e0074770  \nI/DEBUG   (24062):     b8c65ab0 00fcf8d1 bf042800 00e8f8d1 00a0f8d0  \nI/DEBUG   (24062):     b8c65ac0 e92d4770 30fc4800 f803f000 8800e8bd  \nI/DEBUG   (24062):     b8c65ad0 e92dbf00 460d4830 20004604 6820b1ed  \nI/DEBUG   (24062):     b8c65ae0 f7e9b928 4601ebac 60212000 4628b1a9  \nI/DEBUG   (24062):     b8c65af0 e856f7ea e84ef7ea 20004605 6820b16d  \nI/DEBUG   (24062):     b8c65b00 f7e94629 4601ebae 29002001 e8bdbf18  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near r7:\nI/DEBUG   (24062):     b8bc9f28 00000001 0000001b b481aa40 00000002  \nI/DEBUG   (24062):     b8bc9f38 00000000 00000000 00000015 000001f3  \nI/DEBUG   (24062):     b8bc9f48 00000301 00002000 b0c2e898 b8c4fd48  \nI/DEBUG   (24062):     b8bc9f58 b8c4fe70 b8c4fe70 00000001 00000002  \nI/DEBUG   (24062):     b8bc9f68 b0c12459 00000001 00000000 00000000  \nI/DEBUG   (24062):     b8bc9f78 00000000 00002130 000000f0 b8c4fe08  \nI/DEBUG   (24062):     b8bc9f88 b8c61a34 00000000 00000000 b8c3a543  \nI/DEBUG   (24062):     b8bc9f98 00000000 00000000 b8c5e2f8 00000000  \nI/DEBUG   (24062):     b8bc9fa8 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bc9fb8 b8c4ed08 b8c4fc10 b8c4fc28 00000000  \nI/DEBUG   (24062):     b8bc9fc8 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bc9fd8 00000000 00000000 b8c4ec50 00000001  \nI/DEBUG   (24062):     b8bc9fe8 00000020 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bc9ff8 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062):     b8bca008 b8c4fee0 00000001 00000000 00000000  \nI/DEBUG   (24062):     b8bca018 00000000 00000000 00000000 00000000  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near r8:\nI/DEBUG   (24062):     b8c61a58 26bc8ea2 84f132a7 9adc25b6 23b8940a  \nI/DEBUG   (24062):     b8c61a68 3c1dc01f 042a352e ad4cb736 00222ccf  \nI/DEBUG   (24062):     b8c61a78 00330004 010001ff 9f743300 dd082848  \nI/DEBUG   (24062):     b8c61a88 0f00f1b8 f04fbfb8 e5e90801 90062050  \nI/DEBUG   (24062):     b8c61a98 480de5e1 62b4f44f 44784902 ba74e669  \nI/DEBUG   (24062):     b8c61aa8 7f290001 b9e6ffff b9880001 b8ac0001  \nI/DEBUG   (24062):     b8c61ab8 b8c00001 b8de0001 b5e20001 b6a00001  \nI/DEBUG   (24062):     b8c61ac8 b5ac0001 b5900001 b4200001 b4900001  \nI/DEBUG   (24062):     b8c61ad8 b4ae0001 b74a0001 b72c0001 b8260001  \nI/DEBUG   (24062):     b8c61ae8 b8780001 b9c00001 bb3e0001 e92d0001  \nI/DEBUG   (24062):     b8c61af8 b08248f0 f2424604 6b601130 d1674288  \nI/DEBUG   (24062):     b8c61b08 68206be1 0a00684e f8074637 68200f04  \nI/DEBUG   (24062):     b8c61b18 6da07170 01a0f100 f96030b0 f1062a0f  \nI/DEBUG   (24062):     b8c61b28 f9610016 f9400a0f 1db02a0f 0a0ff940  \nI/DEBUG   (24062):     b8c61b38 00e8f8d4 0020f890 0f02f010 6ee0d106  \nI/DEBUG   (24062):     b8c61b48 bf022800 00c0f8d4 64412100 00c0f8d4  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near r9:\nI/DEBUG   (24062):     00002110 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002120 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002130 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002140 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002150 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002160 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002170 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002180 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002190 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000021a0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000021b0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000021c0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000021d0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000021e0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000021f0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002200 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near fp:\nI/DEBUG   (24062):     00002fe4 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00002ff4 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003004 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003014 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003024 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003034 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003044 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003054 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003064 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003074 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003084 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     00003094 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000030a4 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000030b4 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000030c4 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000030d4 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near ip:\nI/DEBUG   (24062):     5fffffe0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     5ffffff0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000000 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000010 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000020 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000030 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000040 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000050 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000060 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000070 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000080 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     60000090 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     600000a0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     600000b0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     600000c0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     600000d0 ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory near sp:\nI/DEBUG   (24062):     af544958 af54498c af544988 00003004 b0c1c28f  \nI/DEBUG   (24062):     af544968 00003004 b0c38e6f 00000000 b0c38e65  \nI/DEBUG   (24062):     af544978 b8c61a85 b0c2296f ffffffff b8c61aa0  \nI/DEBUG   (24062):     af544988 b8bc9f48 b0c13607 af5449a8 00000001  \nI/DEBUG   (24062):     af544998 b8bc9f48 00000049 b8c61a30 b8c61a34  \nI/DEBUG   (24062):     af5449a8 00000000 b0c13739 b8bc9f48 00002110  \nI/DEBUG   (24062):     af5449b8 b8bc9f48 00002130 00000000 b0c391fd  \nI/DEBUG   (24062):     af5449c8 00003004 b0c12af9 b8c4fe70 b8c4fe70  \nI/DEBUG   (24062):     af5449d8 00000001 00000070 52d2e0c1 b8bc9f48  \nI/DEBUG   (24062):     af5449e8 00002210 00000001 00000003 ffffffac  \nI/DEBUG   (24062):     af5449f8 0000000b 00002210 00002000 b0c1a48b  \nI/DEBUG   (24062):     af544a08 b8bc9f48 b0c06b31 00000001 b8c4fe18  \nI/DEBUG   (24062):     af544a18 00002000 00010316 000001cd b00103c9  \nI/DEBUG   (24062):     af544a28 a01ccbfc b8bc9f48 00002210 00000001  \nI/DEBUG   (24062):     af544a38 b0c391fd 00000000 00002210 00002210  \nI/DEBUG   (24062):     af544a48 00002000 b0c065a3 b8c4ec30 b6f7f004  \nI/DEBUG   (24062): \nI/DEBUG   (24062): code around pc:\nI/DEBUG   (24062):     b6f3c004 ea5feb01 da037c43 030df9a1 031df980  \nI/DEBUG   (24062):     b6f3c014 f921d303 f900070d 3a40071d f921d30b  \nI/DEBUG   (24062):     b6f3c024 f921020d f891420d 3a40f100 022df900  \nI/DEBUG   (24062):     b6f3c034 422df900 3220d2f3 f921d305 f1a2020d  \nI/DEBUG   (24062):     b6f3c044 f9000220 f102022d f0120220 d0030f10  \nI/DEBUG   (24062):     b6f3c054 0a0df921 0a2df900 7c42ea5f f921d303  \nI/DEBUG   (24062):     b6f3c064 f900070d da03070d 030df9a1 030df980  \nI/DEBUG   (24062):     b6f3c074 7cc2ea5f f811bf44 f8003b01 bf213b01  \nI/DEBUG   (24062):     b6f3c084 cb01f811 eb01f811 cb01f800 eb01f800  \nI/DEBUG   (24062):     b6f3c094 4001e8bd bf004770 4803b500 44784901  \nI/DEBUG   (24062):     b6f3c0a4 fcb6f7f0 000138e4 00027fda e1520003  \nI/DEBUG   (24062):     b6f3c0b4 9a000008 e52de004 e59f000c e59f1004  \nI/DEBUG   (24062):     b6f3c0c4 e080000f faffc251 000138fd 00027fcb  \nI/DEBUG   (24062):     b6f3c0d4 e1a02001 e3a01000 e92d0001 eee01b10  \nI/DEBUG   (24062):     b6f3c0e4 e2522020 3a000003 f2202150 e2522020  \nI/DEBUG   (24062):     b6f3c0f4 f400020d 2afffffc e2822020 e3120010  \nI/DEBUG   (24062): \nI/DEBUG   (24062): code around lr:\nI/DEBUG   (24062):     000000bc ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000000cc ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000000dc ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000000ec ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000000fc ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000010c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000011c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000012c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000013c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000014c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000015c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000016c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000017c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000018c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     0000019c ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062):     000001ac ffffffff ffffffff ffffffff ffffffff  \nI/DEBUG   (24062): \nI/DEBUG   (24062): memory map around fault addr b0c2c000:\nI/DEBUG   (24062):     b0bf4000-b0c2c000 r-x /system/lib/libssl.so\nI/DEBUG   (24062):     b0c2c000-b0c2d000 --- \nI/DEBUG   (24062):     b0c2d000-b0c2f000 r-- /system/lib/libssl.so\n```\n", "url": "https://github.com/square/okhttp/issues/437", "user": "swankjesse", "labels": ["bug"], "created": "2014-01-12 18:39:45", "closed": "2014-03-02 14:53:00", "commits": {}, "ttf": 48.000277777777775, "commitsDetails": []}, {"title": "On-device test failure: \"IllegalStateException: attempt to use Deflater after calling end\"", "body": "I'm running a test on a device with vogar and it looks like closing streams can be re-entrant.\n\n```\n  com.squareup.okhttp.ConnectionPoolTest#maxConnections\n    Jan 12, 2014 8:09:12 AM com.squareup.okhttp.mockwebserver.MockWebServer$3 processConnection\n    WARNING: MockWebServer connection didn't make a request\n    Jan 12, 2014 8:09:12 AM com.squareup.okhttp.mockwebserver.MockWebServer$3 processConnection\n    WARNING: MockWebServer connection didn't make a request\n    Jan 12, 2014 8:09:13 AM com.squareup.okhttp.mockwebserver.MockWebServer$3 processConnection\n    WARNING: MockWebServer connection didn't make a request\n    Jan 12, 2014 8:09:13 AM com.squareup.okhttp.mockwebserver.MockWebServer$3 processConnection\n    WARNING: MockWebServer connection didn't make a request\n    Jan 12, 2014 8:09:13 AM com.squareup.okhttp.mockwebserver.MockWebServer$3 processConnection\n    WARNING: MockWebServer connection didn't make a request\n    java.lang.IllegalStateException: attempt to use Deflater after calling end\n        at java.util.zip.Deflater.checkOpen(Deflater.java:476)java.lang.IllegalStateException: attempt to use Deflater after calling end\n        at java.util.zip.Deflater.checkOpen(Deflater.java:476)\n        at java.util.zip.Deflater.deflateImpl(Deflater.java:236)\n        at java.util.zip.Deflater.deflate(Deflater.java:232)\n        at java.util.zip.DeflaterOutputStream.flush(DeflaterOutputStream.java:193)\n        at java.io.FilterOutputStream.flush(FilterOutputStream.java:88)\n        at java.io.DataOutputStream.flush(DataOutputStream.java:63)\n        at java.io.FilterOutputStream.close(FilterOutputStream.java:61)\n        at com.squareup.okhttp.internal.Util.closeAll(Util.java:166)\n        at com.squareup.okhttp.internal.spdy.Spdy3$Writer.close(Spdy3.java:468)\n        at com.squareup.okhttp.internal.spdy.SpdyConnection.close(SpdyConnection.java:361)\n        at com.squareup.okhttp.internal.spdy.SpdyConnection.close(SpdyConnection.java:313)\n        at com.squareup.okhttp.internal.Util.closeQuietly(Util.java:116)\n        at com.squareup.okhttp.mockwebserver.MockWebServer$2.run(MockWebServer.java:264)\n        at com.squareup.okhttp.mockwebserver.MockWebServer$4.run(MockWebServer.java:634)\n\n        at java.util.zip.Deflater.deflateImpl(Deflater.java:236)\n        at java.util.zip.Deflater.deflate(Deflater.java:232)\n        at java.util.zip.DeflaterOutputStream.flush(DeflaterOutputStream.java:193)\n        at java.io.FilterOutputStream.flush(FilterOutputStream.java:88)\n        at java.io.DataOutputStream.flush(DataOutputStream.java:63)\n\n        at java.io.FilterOutputStream.close(FilterOutputStream.java:61)\n        at com.squareup.okhttp.internal.Util.closeAll(Util.java:166)\n        at com.squareup.okhttp.internal.spdy.Spdy3$Writer.close(Spdy3.java:468)\n        at com.squareup.okhttp.internal.spdy.SpdyConnection.close(SpdyConnection.java:361)\n        at com.squareup.okhttp.internal.spdy.SpdyConnection.access$1000(SpdyConnection.java:45)\n        at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader.run(SpdyConnection.java:455)\n        at java.lang.Thread.run(Thread.java:841)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)\n        at java.lang.Thread.run(Thread.java:841)\n    junit.framework.AssertionFailedError: expected:<1> but was:<2>\n        at junit.framework.Assert.assertEquals(Assert.java:205)\n        at com.squareup.okhttp.ConnectionPoolTest.maxConnections(ConnectionPoolTest.java:320)\n```\n", "url": "https://github.com/square/okhttp/issues/436", "user": "swankjesse", "labels": ["bug"], "created": "2014-01-12 18:04:54", "closed": "2014-02-24 06:20:20", "commits": {}, "ttf": 42.000277777777775, "commitsDetails": []}, {"title": "Multi HTTP/2 Connections connecting to a single domain", "body": "Hi, \n\nUnder a multi thread frame we may send several requests synchronously to a single domain. In OkHttp(SPDY) according to the codes I found that multi SPDY connections maybe set up to the same remote (I`m keeping tracking version 1.1.0, so not sure if the newest version has fixed it, seems not from the codes.) \n\nI do not think it's a correct behavior for clients so just wanna open the topic here. I've got a patch for it and will make a pull request if you guys confirm this issue.\n\nThanks\n", "url": "https://github.com/square/okhttp/issues/373", "user": "lingmingyb", "labels": ["bug"], "created": "2013-12-21 12:20:55", "closed": "2017-01-07 23:46:04", "commits": {"8331b2d75a51631bee622daf2175854fe49ce29a": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "93e9fb08c8664fe2728bfaf3004edd8798b9476c": {"commitGHEventType": "closed", "commitUser": "swankjesse"}, "3287bbca8f0983a96edae1504f0711d9462f6008": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}, "98443a9ca8ca9ad82d5fb9b05b32f180bb510601": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 1113.0002777777777, "commitsDetails": [{"commitHash": "8331b2d75a51631bee622daf2175854fe49ce29a", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["5c7257d8d1c07b66cb7b14832bc0d16b88abcfb5"], "nameRev": "8331b2d75a51631bee622daf2175854fe49ce29a tags/parent-3.6.0~21^2", "commitMessage": "Fix RealConnection to guard allocationLimit by connectionPool.\n\nI'm working towards making OkHttp limit itself to a single HTTP/2 connection\nto a single host. In this work I found we're not sufficiently safe on\nallocationLimit - connections are added to the pool when this is 0, and\nthe value is updated without any synchronization.\n\nThis change also reduces the visibility of some connection fields in\nRealConnection and organizes the fields into two sets: those that are\nimmutable after connect and those that are guarded by connectionPool.\n\nhttps://github.com/square/okhttp/issues/373\n", "commitDateTime": "2017-01-02 12:36:51", "authoredDateTime": "2017-01-02 12:36:30", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/ConnectionPoolTest.java", "insertions": 20, "deletions": 22, "lines": 42}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java", "insertions": 86, "deletions": 44, "lines": 130}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java", "insertions": 2, "deletions": 16, "lines": 18}, {"filePath": "okhttp/src/main/java/okhttp3/internal/ws/RealWebSocket.java", "insertions": 1, "deletions": 14, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConnectionPoolTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.ConnectionPoolTest.newConnection(okhttp3.ConnectionPool,okhttp3.Route,long)", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 3}, {"spoonMethodName": "okhttp3.ConnectionPoolTest.connectionsEvictedWhenIdleLongEnough()", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 5}, {"spoonMethodName": "okhttp3.ConnectionPoolTest.inUseConnectionsNotEvicted()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}, {"spoonMethodName": "okhttp3.ConnectionPoolTest.cleanupPrioritizesEarliestEviction()", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 4}, {"spoonMethodName": "okhttp3.ConnectionPoolTest.oldestConnectionsEvictedIfIdleLimitExceeded()", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 5}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RealConnection.buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)", "TOT": 14, "UPD": 11, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.buildTunneledConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.protocol()", "TOT": 12, "UPD": 4, "INS": 1, "MOV": 5, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection", "TOT": 11, "UPD": 4, "INS": 4, "MOV": 2, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)", "TOT": 17, "UPD": 3, "INS": 0, "MOV": 7, "DEL": 7}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.connect(int,int,int,java.util.List,boolean)", "TOT": 8, "UPD": 2, "INS": 5, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.onSettings(okhttp3.internal.http2.Http2Connection)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.newWebSocketStreams(okhttp3.internal.connection.StreamAllocation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.newCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamAllocation.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.newStream(okhttp3.OkHttpClient,boolean)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.findConnection(int,int,int,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealWebSocket.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.connect(okhttp3.OkHttpClient).2.onResponse(okhttp3.Call,okhttp3.Response)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.ws.RealWebSocket.ClientStreams", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "93e9fb08c8664fe2728bfaf3004edd8798b9476c", "commitGHEventType": "closed", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3287bbca8f0983a96edae1504f0711d9462f6008", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "98443a9ca8ca9ad82d5fb9b05b32f180bb510601", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["de8699b62d24e3b31205229a259be5b26b040957"], "nameRev": "98443a9ca8ca9ad82d5fb9b05b32f180bb510601 tags/parent-3.6.0~19^2", "commitMessage": "Release duplicated multiplexed connections.\n\nIf we make concurrent requests to an HTTP/2 server, close all but\nthe first connection. Creating multiple connections and then later\nreleasing them is somewhat pessimistic; it's also much safer for\nawkward cases like connect attempts being canceled.\n\nCloses: https://github.com/square/okhttp/issues/373\n", "commitDateTime": "2017-01-07 14:15:48", "authoredDateTime": "2017-01-02 21:46:49", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java", "insertions": 91, "deletions": 0, "lines": 91}, {"filePath": "okhttp/src/main/java/okhttp3/ConnectionPool.java", "insertions": 18, "deletions": 3, "lines": 21}, {"filePath": "okhttp/src/main/java/okhttp3/OkHttpClient.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "okhttp/src/main/java/okhttp3/internal/Internal.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/RealConnection.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "okhttp/src/main/java/okhttp3/internal/connection/StreamAllocation.java", "insertions": 102, "deletions": 46, "lines": 148}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpOverHttp2Test.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http2.HttpOverHttp2Test.concurrentHttp2ConnectionsDeduplicated()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConnectionPool.java", "spoonMethods": [{"spoonMethodName": "okhttp3.ConnectionPool.get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)", "TOT": 17, "UPD": 3, "INS": 1, "MOV": 11, "DEL": 2}, {"spoonMethodName": "okhttp3.ConnectionPool.deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "okhttp3.OkHttpClient.1.deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Internal.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.Internal.deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealConnection.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.RealConnection.connect(int,int,int,java.util.List,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.isEligible(okhttp3.Address)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.RealConnection.connect(int,int,int,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamAllocation.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.findConnection(int,int,int,boolean)", "TOT": 28, "UPD": 6, "INS": 6, "MOV": 10, "DEL": 6}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.streamFinished(boolean,okhttp3.internal.http.HttpCodec)", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.deallocate(boolean,boolean,boolean)", "TOT": 14, "UPD": 4, "INS": 3, "MOV": 5, "DEL": 2}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.streamFailed(java.io.IOException)", "TOT": 12, "UPD": 2, "INS": 3, "MOV": 6, "DEL": 1}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.releaseAndAcquire(okhttp3.internal.connection.RealConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.release()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.noNewStreams()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "okhttp3.internal.connection.StreamAllocation.acquire(okhttp3.internal.connection.RealConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8331b2d75a51631bee622daf2175854fe49ce29a", "98443a9ca8ca9ad82d5fb9b05b32f180bb510601"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 229.0, "deletions": 125.0, "lines": 354.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 192.0, "UPD": 43.0, "INS": 57.0, "MOV": 62.0, "DEL": 30.0, "spoonFilesChanged": 6, "spoonMethodsChanged": 29}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/connection", "okhttp/src/main/java/okhttp3/internal/ws", "okhttp/src/main/java/okhttp3", "okhttp/src/main/java/okhttp3/internal"], "changesInPackagesSPOON": ["okhttp3.internal.connection.RealConnection.connect(int,int,int,java.util.List,boolean)", "okhttp3.internal.connection.StreamAllocation.findConnection(int,int,int,boolean)", "okhttp3.internal.connection.RealConnection.establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector)", "okhttp3.internal.connection.StreamAllocation.streamFailed(java.io.IOException)", "okhttp3.OkHttpClient.1.deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)", "okhttp3.internal.connection.RealConnection.newWebSocketStreams(okhttp3.internal.connection.StreamAllocation)", "okhttp3.internal.connection.StreamAllocation.releaseAndAcquire(okhttp3.internal.connection.RealConnection)", "okhttp3.internal.connection.RealConnection.testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long)", "okhttp3.internal.connection.RealConnection.protocol()", "okhttp3.internal.connection.RealConnection.connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector)", "okhttp3.internal.connection.StreamAllocation.deallocate(boolean,boolean,boolean)", "okhttp3.internal.Internal.deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)", "okhttp3.internal.connection.StreamAllocation.streamFinished(boolean,okhttp3.internal.http.HttpCodec)", "okhttp3.ConnectionPool.deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)", "okhttp3.internal.connection.RealConnection.buildTunneledConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)", "okhttp3.internal.connection.RealConnection.establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector)", "okhttp3.internal.connection.StreamAllocation.noNewStreams()", "okhttp3.internal.connection.StreamAllocation.release()", "okhttp3.internal.connection.RealConnection.buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector)", "okhttp3.ConnectionPool.get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation)", "okhttp3.internal.connection.RealConnection.isEligible(okhttp3.Address)", "okhttp3.internal.ws.RealWebSocket.connect(okhttp3.OkHttpClient).2.onResponse(okhttp3.Call,okhttp3.Response)", "okhttp3.internal.ws.RealWebSocket.ClientStreams", "okhttp3.internal.connection.StreamAllocation.acquire(okhttp3.internal.connection.RealConnection)", "okhttp3.internal.connection.RealConnection.connect(int,int,int,boolean)", "okhttp3.internal.connection.RealConnection.newCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation)", "okhttp3.internal.connection.RealConnection.onSettings(okhttp3.internal.http2.Http2Connection)", "okhttp3.internal.connection.RealConnection", "okhttp3.internal.connection.StreamAllocation.newStream(okhttp3.OkHttpClient,boolean)"]}, {"title": "Transparent GZIP with condition cache can cause ioexception", "body": "WIth transparent gzip enabled, if the same resource is requested after it has been cached with cache validators, an ioexception is thrown.\n", "url": "https://github.com/square/okhttp/issues/358", "user": "pablolb", "labels": ["bug"], "created": "2013-11-29 15:52:11", "closed": "2014-01-23 02:37:04", "commits": {"97741e94fba896f2aede30aecb789efe409202cf": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 54.000277777777775, "commitsDetails": [{"commitHash": "97741e94fba896f2aede30aecb789efe409202cf", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["aa907e2de96327e6d7b5e3c7a5876fc780864b09"], "nameRev": "97741e94fba896f2aede30aecb789efe409202cf tags/parent-1.5.0~116^2", "commitMessage": "Don't unzip if there isn't a response body.\n\nhttps://github.com/square/okhttp/issues/358\n", "commitDateTime": "2014-01-21 22:47:50", "authoredDateTime": "2014-01-21 22:47:50", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpEngine.java", "insertions": 22, "deletions": 9, "lines": 31}, {"filePath": "okhttp/src/test/java/com/squareup/okhttp/internal/http/URLConnectionTest.java", "insertions": 33, "deletions": 1, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpEngine.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.HttpEngine.readResponse()", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "URLConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.customAuthenticator()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.internal.http.URLConnectionTest.noTransparentGzipFor304NotModified()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["97741e94fba896f2aede30aecb789efe409202cf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 9, "lines": 31, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp/internal/http"], "changesInPackagesSPOON": ["com.squareup.okhttp.internal.http.HttpEngine.readResponse()"]}, {"title": "Make bouncycastle a provided dependency for mockwebserver", "body": "I'm getting the following exception when running tests that use **mockwebserver** on 2.3.x devices:\n\n```\n11-15 13:40:55.565 W/ClassPathPackageInfoSource(25066): Cannot load class. Make sure it is in your apk. Class name: 'org.bouncycastle.asn1.x500.X500Name'. Message: org.bouncycastle.asn1.x500.X500Name\n11-15 13:40:55.565 W/ClassPathPackageInfoSource(25066): java.lang.ClassNotFoundException: org.bouncycastle.asn1.x500.X500Name\n```\n\nOn devices with Android 4.x installed, I don't get the exception and the tests pass.\n\nIf I change the `org.bouncycastle:bcprov-jdk15on` dependency on **mockwebserver** to `provided`, the tests pass on 2.3.x as well. I'm assuming that the bundled version of bouncy castle on older devices is simply incompatible with the dependency. Does this sound like a reasonable fix for this problem? If so, I'll make a pull request.\n", "url": "https://github.com/square/okhttp/issues/351", "user": "scompt", "labels": ["bug"], "created": "2013-11-15 12:51:20", "closed": "2019-08-02 04:53:22", "commits": {}, "ttf": 2085.0002777777777, "commitsDetails": []}, {"title": "NullPointerException when reading the headers of a HttpUrlConnection that failed", "body": "Here is a stacktrace\n\n`1   com.squareup.okhttp.internal.http.HttpEngine.readResponse   SourceFile, line 632\n2    com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute     SourceFile, line 353\n3    com.squareup.okhttp.internal.http.HttpURLConnectionImpl.f   SourceFile, line 297\n4    com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getHeaderFields     SourceFile, line 161\n5    com.squareup.okhttp.internal.http.HttpsURLConnectionImpl.getHeaderFields    SourceFile, line 214\n6    com.levelup.touiteur.DBCookieMaster.setCookieResponse   SourceFile, line 458`\n\nThe connection may have thrown an exception somewhere, but I don't know which kind and I don't know if the headers were actually received or not.\n", "url": "https://github.com/square/okhttp/issues/348", "user": "robUx4", "labels": ["bug"], "created": "2013-11-12 08:29:10", "closed": "2014-01-23 02:37:39", "commits": {}, "ttf": 71.00027777777778, "commitsDetails": []}, {"title": "More specific language in SSL fallback", "body": "We say\n_\"OkHttp also recovers from problematic proxy servers and failed SSL handshakes.\"_\n\nWhat we mean:\n_\"When we try to use SNI and TLS and session tickets with older SSLv3 servers, sometimes it fails. We recover.\"_\n", "url": "https://github.com/square/okhttp/issues/332", "user": "swankjesse", "labels": ["bug"], "created": "2013-10-16 13:41:06", "closed": "2014-04-05 12:16:53", "commits": {"71ff30ccb8ba6e7415d9c8fd6c2f01340987683e": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 170.00027777777777, "commitsDetails": [{"commitHash": "71ff30ccb8ba6e7415d9c8fd6c2f01340987683e", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["b21b40e480cdcd09b618e399a349556de509d88d"], "nameRev": "71ff30ccb8ba6e7415d9c8fd6c2f01340987683e tags/parent-2.0.0-RC1~122", "commitMessage": "Fix language on SSL fallback.\n\nhttps://github.com/square/okhttp/issues/332\n", "commitDateTime": "2014-04-05 08:16:45", "authoredDateTime": "2014-04-05 08:16:45", "commitGitStats": [{"filePath": "website/index.html", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["71ff30ccb8ba6e7415d9c8fd6c2f01340987683e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["website/index.html"]}, {"title": "Support deflate alongside transparent automatic Gzip", "body": "Some servers prefer deflate; let's make that Just Work also.\n", "url": "https://github.com/square/okhttp/issues/294", "user": "swankjesse", "labels": ["bug"], "created": "2013-08-23 15:57:01", "closed": "2014-01-14 01:57:31", "commits": {}, "ttf": 143.00027777777777, "commitsDetails": []}, {"title": "Crash in unzipper", "body": "I get this crash on a 4.2.2 device with current unmodified master:\n\n`java.lang.IllegalArgumentException: data error\n    at java.util.zip.Inflater.setDictionaryImpl(Native Method)\n    at java.util.zip.Inflater.setDictionary(Inflater.java:285)\n    at java.util.zip.Inflater.setDictionary(Inflater.java:274)\n    at com.squareup.okhttp.internal.spdy.SpdyReader$2.inflate(SpdyReader.java:229)\n    at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:159)\n    at libcore.io.Streams.readFully(Streams.java:81)\n    at java.io.DataInputStream.readInt(DataInputStream.java:124)\n    at com.squareup.okhttp.internal.spdy.SpdyReader.readNameValueBlock(SpdyReader.java:242)\n    at com.squareup.okhttp.internal.spdy.SpdyReader.readSynReply(SpdyReader.java:177)\n    at com.squareup.okhttp.internal.spdy.SpdyReader.nextFrame(SpdyReader.java:116)\n    at com.squareup.okhttp.internal.spdy.SpdyConnection$Reader.run(SpdyConnection.java:420)\n    at java.lang.Thread.run(Thread.java:856)`\n", "url": "https://github.com/square/okhttp/issues/273", "user": "robUx4", "labels": ["bug"], "created": "2013-08-10 06:18:13", "closed": "2013-08-15 12:04:10", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "SPDY Timeout problems with OkHttp 1.1.1", "body": "Hey!\n\nI'm using [http-request](https://github.com/kevinsawicki/http-request) with OkHttp, trying to upload a 85MB big file to a server using `Transfer-Encoding: chunked` over `https`.\n\nHowever, after exactly 60 seconds, the upload fails with the following stack trace:\n\n```\n FATAL EXCEPTION: IntentService[UploadService]\n com.github.kevinsawicki.http.HttpRequest$HttpRequestException: java.io.IOException: stream was reset: INVALID_STREAM\n    at com.github.kevinsawicki.http.HttpRequest$Operation.call(HttpRequest.java:680)\n    at com.github.kevinsawicki.http.HttpRequest.copy(HttpRequest.java:2539)\n    at com.github.kevinsawicki.http.HttpRequest.part(HttpRequest.java:2857)\n    at com.github.kevinsawicki.http.HttpRequest.part(HttpRequest.java:2824)\n    at com.github.kevinsawicki.http.HttpRequest.part(HttpRequest.java:2801)\n    at com.myapp.Connection.doHttpsPostFileUpload(Connection.java:80)\n    at com.myapp.Connection.uploadProject(Connection.java:132)\n    at com.myapp.transfers.UploadService.onHandleIntent(UploadService.java:122)\n    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\n    at android.os.Handler.dispatchMessage(Handler.java:99)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n Caused by: java.io.IOException: stream was reset: INVALID_STREAM\n    at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream.waitUntilWritable(SpdyStream.java:713)\n    at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream.writeFrame(SpdyStream.java:683)\n    at com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataOutputStream.write(SpdyStream.java:646)\n    at com.squareup.okhttp.internal.FaultRecoveringOutputStream.write(FaultRecoveringOutputStream.java:60)\n    at java.io.BufferedOutputStream.write(BufferedOutputStream.java:131)\n    at com.github.kevinsawicki.http.HttpRequest$8.run(HttpRequest.java:2547)\n    at com.github.kevinsawicki.http.HttpRequest$8.run(HttpRequest.java:2539)\n    at com.github.kevinsawicki.http.HttpRequest$Operation.call(HttpRequest.java:674)\n    ... 11 more\n```\n\nUsing `okHttpClient.setTransports(Arrays.asList(\"http/1.1\"));` it works just fine.\n\nI do not have full control over the server, but I know the guys running it. It reports back (in the browser) as:\n\n```\nserver:Apache/2.2.16 (Debian)\nversion:HTTP/1.1\nx-mod-spdy:0.9.4.1-397\n```\n", "url": "https://github.com/square/okhttp/issues/272", "user": "aried3r", "labels": ["bug"], "created": "2013-08-09 18:25:29", "closed": "2014-01-14 04:25:43", "commits": {}, "ttf": 157.00027777777777, "commitsDetails": []}, {"title": "Content-Encoding is broken for HTTP 304 responses", "body": "We're incorrectly attempting to unzip the empty response body.\nhttps://code.google.com/p/android/issues/detail?id=58637\n", "url": "https://github.com/square/okhttp/issues/268", "user": "swankjesse", "labels": ["bug"], "created": "2013-08-07 02:36:40", "closed": "2013-08-15 12:54:34", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Multiple HTTP Cookie: headers", "body": "There is a bug report.\nWhen server sets multiple HTTP cookies, okhttp sends multiple Cookie: HTTP headers.\nSee the Spec:\nhttp://tools.ietf.org/html/rfc6265#section-4.2.1\n\nMultiple cookie values should be transmitted by single string with delimiters.\n\nsee com.squareup.okhttp.internal.http.RequestHeaders:\n\n``` java\n public void addCookies(Map<String, List<String>> allCookieHeaders) {\n         for (Map.Entry<String, List<String>> entry : allCookieHeaders.entrySet()) {\n             String key = entry.getKey();\n             if (\"Cookie\".equalsIgnoreCase(key) || \"Cookie2\".equalsIgnoreCase(key)) {\n                 headers.addAll(key, entry.getValue());\n             }\n         }\n     }\n```\n\nHere is a patch that solves the problem:\n\n``` java\n public void addCookies(Map<String, List<String>> allCookieHeaders) {\n         for (Map.Entry<String, List<String>> entry : allCookieHeaders.entrySet()) {\n             String key = entry.getKey();\n             if (\"Cookie\".equalsIgnoreCase(key) || \"Cookie2\".equalsIgnoreCase(key)) {\n                 headers.add(key, buildCookieHeader(entry.getValue()));\n             }\n         }\n     }\n\u00a0\n     private String buildCookieHeader(List<String> cookies) {\n         StringBuilder sb = new StringBuilder();\n         boolean isFirst = true;\n         for (String cookie : cookies) {\n             if (isFirst) {\n                 isFirst = false;\n             } else {\n                 sb.append(\"; \");\n             }\n             sb.append(cookie);\n         }\n         return sb.toString();\n     }\n```\n", "url": "https://github.com/square/okhttp/issues/265", "user": "romkavt", "labels": ["bug"], "created": "2013-08-05 13:48:49", "closed": "2013-10-12 06:43:24", "commits": {}, "ttf": 67.00027777777778, "commitsDetails": []}, {"title": "Add possibility to exclude requests from silent retries", "body": "###### Use-case\n\nI need to make API-Requests via HTTPS from an Android App with reused sockets to avoid overhead for SSL-handshake etc. Though the requests are idempotent, my app relies on the user seeing the result of the request: the first request will give an HTTP 200, while all succeeding will result in an error.\nI was using java.net.HttpURLConnection and java.net.URL's openConnection() until I observed the silent retry of POST requests after an IOException which I blame on http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6382788. But since the proposed fix (setting sun.net.http.retryPost to false) to this does not seem to work on the android-version of URLConnection, and the alternative (disable keep-alive)  is not acceptable for my use-case I gave OkHttp a try just to face the same...\n###### Problem\n\nIf a request fails with a SocketTimeout (or basically any other problem), I have to be sure it is never sent to the server.\n###### Proposed Solutions\n1. A global setting where I could define, that OkHttp should never retry POST by itself.\n2. It would be nice to have something like an explicit abort for the Connection\n\n``` java\ntry{\n  final HttpURLConnection urlConnection =  mOkHttpClient.open(url);\n  //do some I/O\n  //...\n}\ncatch (SocketTimeoutException ste){\n  urlConnection.abort();\n}\n```\n", "url": "https://github.com/square/okhttp/issues/258", "user": "benjaminbauer", "labels": ["bug"], "created": "2013-07-24 12:56:08", "closed": "2014-01-05 18:27:23", "commits": {}, "ttf": 165.00027777777777, "commitsDetails": []}, {"title": "Not able to send ByteArrayEntity, InputStreamEntity using OkApacheClient", "body": "Uploading an image(or any file) to the server is failing. Server is receiving the inputstream of length 0. If I use DefaultHttpClient instead of OkApacheClient, server is receiving the data correctly. Below is the sample code.\n\nFileInputStream iStream = new FileInputStream(\"/sdcard/delete.png\");\nbyte[] result = IOUtils.toByteArray(iStream);                           ByteArrayEntity entity = new ByteArrayEntity(result);\nhttpPost.setEntity(entity);\nokClient.execute(httpPost);\n", "url": "https://github.com/square/okhttp/issues/221", "user": "pvrchecks", "labels": ["bug"], "created": "2013-06-27 10:55:36", "closed": "2013-08-10 13:52:41", "commits": {}, "ttf": 44.000277777777775, "commitsDetails": []}, {"title": "Failed connections if server closed Keep-Alive session", "body": "Hello\n\nSubsequent HTTP requests cause an EOFException if a previous keep-alive connection was re-used, but the server closed the connection in the mean time due to its own keep-alive timeout.\n\n  java.io.EOFException\n      at com.squareup.okhttp.internal.Util.readAsciiLine(Util.java:318)\n      at com.squareup.okhttp.internal.http.RawHeaders.fromBytes(RawHeaders.java:301)\n      at com.squareup.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.  java:130)\n      at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:629)\n      at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.  java:396)\n      at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponse(  HttpURLConnectionImpl.java:345)\n      at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(  HttpURLConnectionImpl.java:546)\n      at de.spin.http.HttpRequest.call(HttpRequest.java:50)\n      at de.spin.http.HttpRequest.call(HttpRequest.java:1)\n\nIf a connection is not automatically repeatable (e.g. large POST), this is a bit annoying. I wonder whether there is a way that okhttp could detect this itself? I don't know whether Android truly supports it, but maybe you could try reading zero bytes from the input stream when it's time to decide, whether the connection can still be re-used, and if it returns an EOF then, create a new connection/choose a different connections from the pool?\n", "url": "https://github.com/square/okhttp/issues/220", "user": "warpspin", "labels": ["bug"], "created": "2013-06-27 09:22:22", "closed": "2013-08-03 17:07:41", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "Creating HttpResponseCache causes StrictMode violation", "body": "When cache is created I'm having this violation:\n\n06-18 11:19:42.607: E/StrictMode(4300): A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.\n06-18 11:19:42.607: E/StrictMode(4300): java.lang.Throwable: Explicit termination method 'close' not called\n06-18 11:19:42.607: E/StrictMode(4300):     at dalvik.system.CloseGuard.open(CloseGuard.java:184)\n06-18 11:19:42.607: E/StrictMode(4300):     at java.io.FileOutputStream.<init>(FileOutputStream.java:90)\n06-18 11:19:42.607: E/StrictMode(4300):     at com.squareup.okhttp.internal.DiskLruCache.open(DiskLruCache.java:226)\n06-18 11:19:42.607: E/StrictMode(4300):     at com.squareup.okhttp.HttpResponseCache.<init>(HttpResponseCache.java:171)\n", "url": "https://github.com/square/okhttp/issues/215", "user": "kkocel", "labels": ["bug"], "created": "2013-06-18 09:26:21", "closed": "2014-04-20 13:13:14", "commits": {}, "ttf": 306.0002777777778, "commitsDetails": []}, {"title": "ClassCastException when using https", "body": "I am getting the following.  I believe the image is coming from https.  It's not clear what if anything I did wrong here\n\njava.lang.RuntimeException: An unexpected exception occurred\nat com.squareup.picasso.Request$1.run(Request.java:106)\nat android.os.Handler.handleCallback(Handler.java:725)\nat android.os.Handler.dispatchMessage(Handler.java:92)\nat android.os.Looper.loop(Looper.java:137)\nat android.app.ActivityThread.main(ActivityThread.java:5041)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:511)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:793)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:560)\nat dalvik.system.NativeStart.main(Native Method)\nCaused by: java.lang.ClassCastException: com.squareup.okhttp.internal.http.HttpURLConnectionImpl cannot be cast to javax.net.ssl.HttpsURLConnection\nat com.squareup.okhttp.HttpResponseCache$Entry.<init>(HttpResponseCache.java:517)\nat com.squareup.okhttp.HttpResponseCache.put(HttpResponseCache.java:259)\nat com.squareup.okhttp.HttpResponseCache$1.put(HttpResponseCache.java:153)\nat com.squareup.okhttp.internal.http.HttpEngine.maybeCache(HttpEngine.java:400)\nat com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:648)\nat com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:390)\nat com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:339)\nat com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getHeaderField(HttpURLConnectionImpl.java:186)\nat com.squareup.picasso.OkHttpLoader.load(OkHttpLoader.java:78)\nat com.squareup.picasso.Picasso.loadFromType(Picasso.java:364)\nat com.squareup.picasso.Picasso.resolveRequest(Picasso.java:240)\nat com.squareup.picasso.Picasso.run(Picasso.java:218)\nat com.squareup.picasso.Request.run(Request.java:100)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:390)\nat java.util.concurrent.FutureTask.run(FutureTask.java:234)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)\nat java.lang.Thread.run(Thread.java:856)\nat com.squareup.picasso.Utils$PicassoThread.run(Utils.java:267)\n\nI am currently investigating this issue\n", "url": "https://github.com/square/okhttp/issues/214", "user": "pjulien", "labels": ["bug"], "created": "2013-06-15 16:28:35", "closed": "2013-06-23 23:29:48", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "SPDY Connections not closed once we hit a SocketTimeoutException", "body": "From Allan Woj:\n\nI can reliably get into a state that we use a Connection that doesn't send or receive anything and doesn't timeout.\n\nIt looks like RouteSelector#next() returns a pooled Connection as the SocketTimeoutException thrown by SpdyStream#waitUntilReadable() doesn't close the related SpdyConnection and Connection. Thus the next time RouteSelector#next() is called the Connection is still reported as alive.\n\nShould this still be the case? Or should it (and any other pooled Connections) be closed once we hit this SocketTimeoutException?\n", "url": "https://github.com/square/okhttp/issues/202", "user": "swankjesse", "labels": ["bug"], "created": "2013-06-02 22:34:52", "closed": "2013-08-10 13:54:17", "commits": {}, "ttf": 68.00027777777778, "commitsDetails": []}, {"title": "OkHttp changes the global SSL context, breaks other HTTP clients", "body": "We're enabling SPDY for the shared SSL context, and other HTTP clients like HttpURLConnection don't anticipate this, causing them to freak out and crash the app.\n\n@skyisle's original report...\n\nHere is backtrace.\n\nDEBUG  I  backtrace:\nDEBUG  I      #00  pc 00022430  /system/lib/libssl.so (SSL_select_next_proto+25)\nDEBUG  I      #01  pc 000222ef  /system/lib/libjavacore.so\nDEBUG  I      #02  pc 0002905f  /system/lib/libssl.so (ssl_parse_serverhello_tlsext+458)\nDEBUG  I      #03  pc 00015957  /system/lib/libssl.so (ssl3_get_server_hello+894)\nDEBUG  I      #04  pc 00018193  /system/lib/libssl.so (ssl3_connect+618)\nDEBUG  I      #05  pc 000235d7  /system/lib/libssl.so (SSL_connect+18)\nDEBUG  I      #06  pc 0001126b  /system/lib/libssl.so (ssl23_connect+1970)\nDEBUG  I      #07  pc 0002350f  /system/lib/libssl.so (SSL_do_handshake+66)\nDEBUG  I      #08  pc 00024bc5  /system/lib/libjavacore.so\nDEBUG  I      #09  pc 0001e490  /system/lib/libdvm.so (dvmPlatformInvoke+112)\nDEBUG  I      #10  pc 0004d2b1  /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const_, JValue_, Method const_, Thread_)+396)\nDEBUG  I      #11  pc 000278a0  /system/lib/libdvm.so\nDEBUG  I      #12  pc 0002b77c  /system/lib/libdvm.so (dvmInterpret(Thread_, Method const_, JValue_)+176)\nDEBUG  I      #13  pc 0005fae5  /system/lib/libdvm.so (dvmCallMethodV(Thread_, Method const_, Object_, bool, JValue_, std::__va_list)+272)\nDEBUG  I      #14  pc 0005fb0f  /system/lib/libdvm.so (dvmCallMethod(Thread_, Method const_, Object_, JValue*, ...)+20)\nDEBUG  I      #15  pc 0005466f  /system/lib/libdvm.so\nDEBUG  I      #16  pc 0000e418  /system/lib/libc.so (__thread_entry+72)\nDEBUG  I      #17  pc 0000db0c  /system/lib/libc.so (pthread_create+168)\nDEBUG  I      #18  pc 00052f34  <unknown>\n", "url": "https://github.com/square/okhttp/issues/184", "user": "skyisle", "labels": ["bug"], "created": "2013-05-10 08:53:05", "closed": "2014-02-09 15:54:43", "commits": {"b9d6fcfc1eff1ae9f3e21828147c5602bd7630d1": {"commitGHEventType": "referenced", "commitUser": "adriancole"}, "5d7fdbaf30a411c56666462bd032d86e8eb4ddf7": {"commitGHEventType": "referenced", "commitUser": "adriancole"}}, "ttf": 275.0002777777778, "commitsDetails": [{"commitHash": "b9d6fcfc1eff1ae9f3e21828147c5602bd7630d1", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5d7fdbaf30a411c56666462bd032d86e8eb4ddf7", "commitGHEventType": "referenced", "commitUser": "adriancole", "commitParents": ["de6d505c03419a53e0387802a6cc2196572dd99e"], "nameRev": "5d7fdbaf30a411c56666462bd032d86e8eb4ddf7 tags/parent-1.5.0~77^2", "commitMessage": "fix #184: OkHttp no longer uses default ssl context.\n", "commitDateTime": "2014-02-09 09:30:37", "authoredDateTime": "2014-02-08 19:22:58", "commitGitStats": [{"filePath": "okhttp/src/main/java/com/squareup/okhttp/OkHttpClient.java", "insertions": 31, "deletions": 6, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OkHttpClient.java", "spoonMethods": [{"spoonMethodName": "com.squareup.okhttp.OkHttpClient.copyWithDefaults()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.okhttp.OkHttpClient.getDefaultSSLSocketFactory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5d7fdbaf30a411c56666462bd032d86e8eb4ddf7"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31.0, "deletions": 6.0, "lines": 37.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 1.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/com/squareup/okhttp"], "changesInPackagesSPOON": ["com.squareup.okhttp.OkHttpClient.getDefaultSSLSocketFactory()", "com.squareup.okhttp.OkHttpClient.copyWithDefaults()"]}, {"title": "Automatic gzip + accept range don't interact well", "body": "We run into problems because we try to uncompress a partial document.\n\n```\njava.util.zip.ZipException: Not in GZIP format\n    at java.util.zip.GZIPInputStream.readHeader(GZIPInputStream.java:164)\n    at java.util.zip.GZIPInputStream.<init>(GZIPInputStream.java:78)\n    at java.util.zip.GZIPInputStream.<init>(GZIPInputStream.java:90)\n    at com.squareup.okhttp.internal.http.HttpEngine.initContentStream(HttpEngine.java:452)\n    at com.squareup.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:666)\n    at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:334)\n    at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:283)\n    at com.squareup.okhttp.internal.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:454)\n    at com.squareup.okhttp.internal.http.GzipTest.testRange(ExoticSslTest.java:65)\n```\n\nWork around by adding this header:\n\n```\n    ohc.setRequestProperty(\"Accept-Encoding\", \"identity\");\n```\n", "url": "https://github.com/square/okhttp/issues/116", "user": "swankjesse", "labels": ["bug"], "created": "2013-02-13 20:12:06", "closed": "2016-12-11 17:05:48", "commits": {"eb55cf21a9c51acf969db5da276cbafa3461a080": {"commitGHEventType": "closed", "commitUser": "swankjesse"}, "2e36428ffa5d2868972d837caea3193b058b997c": {"commitGHEventType": "referenced", "commitUser": "swankjesse"}}, "ttf": 1396.0002777777777, "commitsDetails": [{"commitHash": "eb55cf21a9c51acf969db5da276cbafa3461a080", "commitGHEventType": "closed", "commitUser": "swankjesse", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2e36428ffa5d2868972d837caea3193b058b997c", "commitGHEventType": "referenced", "commitUser": "swankjesse", "commitParents": ["bffefccf7a9b075b3d2998bbfdf409ca2deadc1a"], "nameRev": "2e36428ffa5d2868972d837caea3193b058b997c tags/parent-3.6.0~34^2", "commitMessage": "Don't offer to do gzip if the request is partial.\n\nCloses: https://github.com/square/okhttp/issues/116\n", "commitDateTime": "2016-12-11 00:04:46", "authoredDateTime": "2016-12-11 00:04:46", "commitGitStats": [{"filePath": "okhttp-tests/src/test/java/okhttp3/CacheTest.java", "insertions": 0, "deletions": 11, "lines": 11}, {"filePath": "okhttp-tests/src/test/java/okhttp3/CallTest.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "okhttp/src/main/java/okhttp3/internal/http/BridgeInterceptor.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CacheTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CacheTest.assertCookies(okhttp3.HttpUrl,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CallTest.java", "spoonMethods": [{"spoonMethodName": "okhttp3.CallTest.rangeHeaderPreventsAutomaticGzip()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BridgeInterceptor.java", "spoonMethods": [{"spoonMethodName": "okhttp3.internal.http.BridgeInterceptor.intercept(okhttp3.internal.http.Chain)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2e36428ffa5d2868972d837caea3193b058b997c"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 1.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["okhttp/src/main/java/okhttp3/internal/http"], "changesInPackagesSPOON": ["okhttp3.internal.http.BridgeInterceptor.intercept(okhttp3.internal.http.Chain)"]}]}